; ModuleID = '../../third_party/angle/src/libANGLE/Context.cpp'
source_filename = "../../third_party/angle/src/libANGLE/Context.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %struct.Optional.607, %struct.Optional.607, %"class.std::__1::shared_ptr.608", %"class.std::__1::unique_ptr.609", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.373", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.374", %"class.gl::Program"*, %"class.gl::BindingPointer.376", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.378", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.337", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::ShareGroup" = type { i64, %"class.rx::ShareGroupImpl"*, %"class.rx::SerialFactoryBase", %"class.std::__1::unique_ptr.659" }
%"class.rx::ShareGroupImpl" = type { i32 (...)** }
%"class.rx::SerialFactoryBase" = type { i64 }
%"class.std::__1::unique_ptr.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.angle::FrameCaptureShared"* }
%"class.angle::FrameCaptureShared" = type { %"class.std::__1::map.882", %"class.std::__1::map.891", %"class.std::__1::map.900", %"class.std::__1::map.909" }
%"class.std::__1::map.882" = type { %"class.std::__1::__tree.883" }
%"class.std::__1::__tree.883" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.884", %"class.std::__1::__compressed_pair.888" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.891" = type { %"class.std::__1::__tree.892" }
%"class.std::__1::__tree.892" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.900" = type { %"class.std::__1::__tree.901" }
%"class.std::__1::__tree.901" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.902", %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.909" = type { %"class.std::__1::__tree.910" }
%"class.std::__1::__tree.910" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.911", %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.rx::Serial" = type { i64 }
%"struct.gl::BufferID" = type { i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type opaque
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair.962" }
%"struct.std::__1::pair.962" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type opaque
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.964" }
%"struct.std::__1::pair.964" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.966" }
%"struct.std::__1::pair.966" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.968" }
%"struct.std::__1::pair.968" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.970" }
%"struct.std::__1::pair.970" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type { %"class.gl::RefCountObject.base.753", %"class.gl::LabeledObject", %"class.rx::SyncImpl"*, %"class.std::__1::basic_string", i32, i32 }
%"class.gl::RefCountObject.base.753" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", i32 }>
%"class.rx::SyncImpl" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type opaque
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.316" }
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type { %"struct.std::__1::pair.972" }
%"struct.std::__1::pair.972" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.344" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.328", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.329", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.337", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.328" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.335", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type { %"struct.std::__1::pair.974" }
%"struct.std::__1::pair.974" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.353" }
%"class.gl::ResourceMap.353" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.354" }
%"class.gl::MemoryObject" = type <{ %"class.gl::RefCountObject.base.755", [4 x i8], %"class.std::__1::unique_ptr.756", i8, i8, [6 x i8] }>
%"class.gl::RefCountObject.base.755" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::MemoryObjectID" }>
%"struct.gl::MemoryObjectID" = type { i32 }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.rx::MemoryObjectImpl"* }
%"class.rx::MemoryObjectImpl" = type opaque
%"class.absl::flat_hash_map.354" = type { %"class.absl::container_internal::raw_hash_map.355" }
%"class.absl::container_internal::raw_hash_map.355" = type { %"class.absl::container_internal::raw_hash_set.356" }
%"class.absl::container_internal::raw_hash_set.356" = type { i8*, %"union.absl::container_internal::map_slot_type.357"*, i64, i64, %"class.absl::container_internal::CompressedTuple.358" }
%"union.absl::container_internal::map_slot_type.357" = type opaque
%"class.absl::container_internal::CompressedTuple.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.364" }
%"class.gl::Semaphore" = type { %"class.gl::RefCountObject.base.765", %"class.std::__1::unique_ptr.766" }
%"class.gl::RefCountObject.base.765" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SemaphoreID" }>
%"struct.gl::SemaphoreID" = type { i32 }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.rx::SemaphoreImpl"* }
%"class.rx::SemaphoreImpl" = type opaque
%"class.absl::flat_hash_map.364" = type { %"class.absl::container_internal::raw_hash_map.365" }
%"class.absl::container_internal::raw_hash_map.365" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, %"union.absl::container_internal::map_slot_type.367"*, i64, i64, %"class.absl::container_internal::CompressedTuple.368" }
%"union.absl::container_internal::map_slot_type.367" = type opaque
%"class.absl::container_internal::CompressedTuple.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.373" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.632, %"class.std::__1::vector.337", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.633", %"class.angle::BitSetT.147", %struct.Optional.634 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.625", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.147", %"class.std::__1::vector", i32, %"class.angle::BitSetT.147", %"class.angle::BitSetT.148", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.536", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.625" = type { %"class.std::__1::__vector_base.626" }
%"class.std::__1::__vector_base.626" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional.632 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.633" = type { i64 }
%struct.Optional.634 = type { i8, %"class.angle::BitSetT.633" }
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"class.angle::BitSetT.141" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type opaque
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.201" = type { i64 }
%"class.gl::BindingPointer.376" = type { %"class.angle::BindingPointer.377" }
%"class.angle::BindingPointer.377" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%struct.Optional.225 = type { i8, i8 }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.381" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.380, i32 }
%union.anon.380 = type { [4 x float] }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.400", %"struct.std::__1::array.401", %"struct.std::__1::array.403", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.337", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.386", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.393", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.388" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.395" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.400" = type { i64 }
%"struct.std::__1::array.401" = type { [16 x %"class.angle::BitSetT.402"] }
%"class.angle::BitSetT.402" = type { i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::BitSetT.404"] }
%"class.angle::BitSetT.404" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.400" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::BitSetT.148" = type { i64 }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type { %"class.gl::RefCountObject.base.763", %"class.gl::LabeledObject", %"class.rx::QueryImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.763" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::QueryID" }>
%"struct.gl::QueryID" = type { i32 }
%"class.rx::QueryImpl" = type opaque
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.angle::BitSetT.166" = type { i64 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"class.angle::BitSetT.147" = type { i8 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"struct.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type { i32 (...)**, %"class.rx::FenceNVImpl"*, i8, i8, i32 }
%"class.rx::FenceNVImpl" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type { %"struct.std::__1::pair.976" }
%"struct.std::__1::pair.976" = type { i32, %"class.gl::FenceNV"* }
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type { %"struct.std::__1::pair.977" }
%"struct.std::__1::pair.977" = type { i32, %"class.gl::Query"* }
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type { %"struct.std::__1::pair.978" }
%"struct.std::__1::pair.978" = type { i32, %"class.gl::VertexArray"* }
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type { %"struct.std::__1::pair.979" }
%"struct.std::__1::pair.979" = type { i32, %"class.gl::TransformFeedback"* }
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type { i8, %"class.gl::ShaderProgramManager"*, %"struct.gl::GLES1Renderer::GLES1UniformBuffers", %"struct.gl::GLES1Renderer::GLES1ProgramState", i8, [4 x float], [2 x float] }
%"struct.gl::GLES1Renderer::GLES1UniformBuffers" = type { %"struct.std::__1::array.615", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.617", %"struct.std::__1::array.618", %"struct.std::__1::array.618", %"struct.std::__1::array.616", %"struct.std::__1::array.619", %"struct.std::__1::array.620", %"struct.std::__1::array.620", %"struct.std::__1::array.620", %"struct.std::__1::array.620", %"struct.std::__1::array.621", %"struct.std::__1::array.622", %"struct.std::__1::array.622", %"struct.std::__1::array.622", %"struct.std::__1::array.622", %"struct.std::__1::array.622", %"struct.std::__1::array.29", %"struct.std::__1::array.623", %"struct.std::__1::array.617" }
%"struct.std::__1::array.615" = type { [4 x [16 x float]] }
%"struct.std::__1::array.618" = type { [4 x float] }
%"struct.std::__1::array.616" = type { [4 x i32] }
%"struct.std::__1::array.619" = type { [8 x i32] }
%"struct.std::__1::array.620" = type { [8 x [4 x float]] }
%"struct.std::__1::array.621" = type { [8 x [3 x float]] }
%"struct.std::__1::array.622" = type { [8 x float] }
%"struct.std::__1::array.623" = type { [6 x [4 x float]] }
%"struct.std::__1::array.617" = type { [4 x [4 x float]] }
%"struct.gl::GLES1Renderer::GLES1ProgramState" = type { %"struct.gl::ShaderProgramID", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.std::__1::array.624", %"struct.std::__1::array.624", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation" }
%"struct.std::__1::array.624" = type { [4 x %"struct.gl::UniformLocation"] }
%"struct.gl::UniformLocation" = type { i32 }
%"class.egl::Surface" = type { %"class.egl::LabeledObject", %"class.gl::FramebufferAttachmentObject", %"struct.egl::SurfaceState", %"class.rx::SurfaceImpl"*, i32, i8, i32, i32, i8, i8, i8, i32, i32, i32, i8, i32, i32, i32, i32, i8, i64, i64, i8, i8, i32, i32, i32, i32, i32, %"class.gl::Texture"*, %"struct.gl::Format", %"struct.gl::Format", %"struct.gl::Offset", i32, %"class.angle::ObserverBinding" }
%"struct.egl::SurfaceState" = type <{ i8*, %"struct.egl::Config"*, %"class.egl::AttributeMap", i8, [3 x i8], %"class.angle::BitSetT.772", %"class.angle::BitSetT.773", i8, [3 x i8] }>
%"class.egl::AttributeMap" = type { %"class.std::__1::map.675" }
%"class.std::__1::map.675" = type { %"class.std::__1::__tree.676" }
%"class.std::__1::__tree.676" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.677", %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BitSetT.772" = type { i32 }
%"class.angle::BitSetT.773" = type { i32 }
%"class.rx::SurfaceImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"struct.egl::SurfaceState"* }
%"class.egl::Display" = type { %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"struct.egl::DisplayState", %"class.rx::DisplayImpl"*, %"class.angle::ObserverBinding", %"class.egl::AttributeMap", %"class.egl::ConfigSet", %"class.std::__1::set.697", %"class.std::__1::set", %"class.std::__1::set.707", %"class.std::__1::set.717", i8, i8, %"struct.egl::Caps", %"struct.egl::DisplayExtensions", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.egl::Device"*, %"class.egl::Surface"*, i32, %"class.angle::LoggingAnnotator", %"class.gl::TextureManager"*, %"class.gl::SemaphoreManager"*, %"class.egl::BlobCache", %"class.gl::MemoryProgramCache", i64, i64, %"struct.angle::FrontendFeatures", %"class.std::__1::vector.738", %"class.std::__1::mutex", %"class.std::__1::vector.745", %"class.std::__1::vector.745", %"class.std::__1::mutex", %"class.std::__1::mutex" }
%"struct.egl::DisplayState" = type { i8*, %"class.std::__1::set.665", %"class.std::__1::vector.125", %"class.std::__1::vector.125", i8, i64 }
%"class.std::__1::set.665" = type { %"class.std::__1::__tree.666" }
%"class.std::__1::__tree.666" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.667", %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rx::DisplayImpl" = type { %"class.rx::EGLImplFactory", %"class.angle::Subject", %"struct.egl::DisplayState"*, i8, %"struct.egl::DisplayExtensions", i8, %"struct.egl::Caps", %"class.egl::BlobCache"* }
%"class.rx::EGLImplFactory" = type { i32 (...)** }
%"class.egl::ConfigSet" = type { %"class.std::__1::map.686" }
%"class.std::__1::map.686" = type { %"class.std::__1::__tree.687" }
%"class.std::__1::__tree.687" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.688", %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.697" = type { %"class.std::__1::__tree.698" }
%"class.std::__1::__tree.698" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.699", %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.707" = type { %"class.std::__1::__tree.708" }
%"class.std::__1::__tree.708" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.717" = type { %"class.std::__1::__tree.718" }
%"class.std::__1::__tree.718" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.719", %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.egl::Caps" = type { i8, i8 }
%"struct.egl::DisplayExtensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::Device" = type opaque
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.egl::BlobCache" = type { %"class.std::__1::mutex", %"class.angle::SizedMRUCache", void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)* }
%"class.angle::SizedMRUCache" = type { i64, i64, %"class.angle::base::HashingMRUCache" }
%"class.angle::base::HashingMRUCache" = type { %"class.angle::base::MRUCacheBase" }
%"class.angle::base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::unordered_map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.635" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.639", %"class.std::__1::__compressed_pair.647", %"class.std::__1::__compressed_pair.652", %"class.std::__1::__compressed_pair.654", [4 x i8] }>
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641", %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { float }
%"class.gl::MemoryProgramCache" = type <{ %"class.egl::BlobCache"*, i32, [4 x i8] }>
%"struct.angle::FrontendFeatures" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.727" }
%"class.std::__1::map.727" = type { %"class.std::__1::__tree.728" }
%"class.std::__1::__tree.728" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.729", %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%"class.std::__1::vector.738" = type { %"class.std::__1::__vector_base.739" }
%"class.std::__1::__vector_base.739" = type { %"struct.angle::Feature"**, %"struct.angle::Feature"**, %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"struct.angle::Feature"** }
%"class.std::__1::vector.745" = type { %"class.std::__1::__vector_base.746" }
%"class.std::__1::__vector_base.746" = type { %"class.angle::ScratchBuffer"*, %"class.angle::ScratchBuffer"*, %"class.std::__1::__compressed_pair.747" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.angle::ScratchBuffer"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.599", %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.599" = type { %"struct.std::__1::array.600" }
%"struct.std::__1::array.600" = type { [16 x i8] }
%"class.angle::PackedEnumMap.601" = type { %"struct.std::__1::array.602" }
%"struct.std::__1::array.602" = type { [12 x i8] }
%"class.angle::PackedEnumMap.603" = type { %"struct.std::__1::array.604" }
%"struct.std::__1::array.604" = type { [4 x i8] }
%"class.angle::PackedEnumMap.605" = type { %"struct.std::__1::array.606" }
%"struct.std::__1::array.606" = type { [19 x i32] }
%"class.angle::BitSetT.168" = type { i64 }
%"class.angle::BitSetT.536" = type { i64 }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.607 = type { i8, %"class.angle::ScratchBuffer" }
%"class.std::__1::shared_ptr.608" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type <{ %"class.std::__1::vector.774", %"class.std::__1::vector.774", %"class.std::__1::vector.780", i8, i8, [6 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], %"struct.std::__1::array.802", i32, i32, i32, i8, i8, [6 x i8], %"class.std::__1::map.803", %"struct.std::__1::array.814", i64, %"class.angle::BitSetT.815", [4 x i8], %"class.std::__1::map.816", %"class.angle::ResourceTracker", i32, i8, [3 x i8] }>
%"class.std::__1::vector.774" = type { %"class.std::__1::__vector_base.775" }
%"class.std::__1::__vector_base.775" = type { %"struct.angle::CallCapture"*, %"struct.angle::CallCapture"*, %"class.std::__1::__compressed_pair.797" }
%"struct.angle::CallCapture" = type { i32, %"class.std::__1::basic_string", %"class.angle::ParamBuffer" }
%"class.angle::ParamBuffer" = type <{ %"class.std::__1::vector.776", %"struct.angle::ParamCapture", i32, [4 x i8], i64, %"struct.gl::BufferID", [4 x i8] }>
%"class.std::__1::vector.776" = type { %"class.std::__1::__vector_base.777" }
%"class.std::__1::__vector_base.777" = type { %"struct.angle::ParamCapture"*, %"struct.angle::ParamCapture"*, %"class.std::__1::__compressed_pair.792" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.793" }
%"struct.std::__1::__compressed_pair_elem.793" = type { %"struct.angle::ParamCapture"* }
%"struct.angle::ParamCapture" = type { %"class.std::__1::basic_string", i32, %"union.angle::ParamValue", i32, %"class.std::__1::vector.778", i32, i64 }
%"union.angle::ParamValue" = type { %"struct.gl::BufferID"* }
%"class.std::__1::vector.778" = type { %"class.std::__1::__vector_base.779" }
%"class.std::__1::__vector_base.779" = type { %"class.std::__1::vector.780"*, %"class.std::__1::vector.780"*, %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.std::__1::vector.780"* }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"struct.angle::CallCapture"* }
%"class.std::__1::vector.780" = type { %"class.std::__1::__vector_base.781" }
%"class.std::__1::__vector_base.781" = type { i8*, i8*, %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { i8* }
%"struct.std::__1::array.802" = type { [16 x i32] }
%"class.std::__1::map.803" = type { %"class.std::__1::__tree.804" }
%"class.std::__1::__tree.804" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.805", %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::array.814" = type { [16 x i64] }
%"class.angle::BitSetT.815" = type { i32 }
%"class.std::__1::map.816" = type { %"class.std::__1::__tree.817" }
%"class.std::__1::__tree.817" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.818", %"class.std::__1::__compressed_pair.822" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::ResourceTracker" = type { %"class.std::__1::map.827", %"class.std::__1::map.827", %"class.std::__1::map.827", %"class.std::__1::map.827", %"class.std::__1::vector.774", %"class.std::__1::set.836", %"class.std::__1::set.836", %"class.std::__1::set.836", %"class.std::__1::set.836", %"class.std::__1::map.844", %"class.std::__1::map.844", i32, %"class.std::__1::set.853", %"class.std::__1::set.853", %"class.std::__1::set.853", %"class.std::__1::set.863", %"class.std::__1::map.873", %"class.std::__1::set.863" }
%"class.std::__1::map.827" = type { %"class.std::__1::__tree.828" }
%"class.std::__1::__tree.828" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.829", %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.836" = type { %"class.std::__1::__tree.837" }
%"class.std::__1::__tree.837" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.838", %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.853" = type { %"class.std::__1::__tree.854" }
%"class.std::__1::__tree.854" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.855", %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.873" = type { %"class.std::__1::__tree.874" }
%"class.std::__1::__tree.874" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.875", %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.863" = type { %"class.std::__1::__tree.864" }
%"class.std::__1::__tree.864" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.865", %"class.std::__1::__compressed_pair.869" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.angle::PackedEnumMap.985" = type { %"struct.std::__1::array.986" }
%"struct.std::__1::array.986" = type { [13 x { i64, i64 }] }
%"class.angle::PackedEnumMap.1054" = type { %"struct.std::__1::array.1055" }
%"struct.std::__1::array.1055" = type { [15 x i32] }
%"class.std::__1::set.1056" = type { %"class.std::__1::__tree.1057" }
%"class.std::__1::__tree.1057" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1058", %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.egl::ClientExtensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::Error" = type { i32, i32, %"class.std::__1::unique_ptr.920" }
%"class.std::__1::unique_ptr.920" = type { %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gl::LogMessage" = type { i8*, i8*, i32, i32, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::map.936" = type { %"class.std::__1::__tree.937" }
%"class.std::__1::__tree.937" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.938", %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator" = type <{ %"class.gl::ResourceMap.546"*, i32, [4 x i8], %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::FenceNV *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::FenceNV *> > >::const_iterator", %"struct.std::__1::pair", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::FenceNV *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::FenceNV *> > >::const_iterator" = type { %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::FenceNV *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::FenceNV *> > >::iterator" }
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::FenceNV *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::FenceNV *> > >::iterator" = type { i8*, %union.anon.925 }
%union.anon.925 = type { %"union.absl::container_internal::map_slot_type.550"* }
%"struct.std::__1::pair" = type { i32, %"class.gl::FenceNV"* }
%"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator" = type <{ %"class.gl::ResourceMap.556"*, i32, [4 x i8], %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Query *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Query *> > >::const_iterator", %"struct.std::__1::pair.927", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Query *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Query *> > >::const_iterator" = type { %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Query *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Query *> > >::iterator" }
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Query *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Query *> > >::iterator" = type { i8*, %union.anon.926 }
%union.anon.926 = type { %"union.absl::container_internal::map_slot_type.560"* }
%"struct.std::__1::pair.927" = type { i32, %"class.gl::Query"* }
%"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator" = type <{ %"class.gl::ResourceMap.566"*, i32, [4 x i8], %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::VertexArray *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::VertexArray *> > >::const_iterator", %"struct.std::__1::pair.929", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::VertexArray *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::VertexArray *> > >::const_iterator" = type { %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::VertexArray *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::VertexArray *> > >::iterator" }
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::VertexArray *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::VertexArray *> > >::iterator" = type { i8*, %union.anon.928 }
%union.anon.928 = type { %"union.absl::container_internal::map_slot_type.570"* }
%"struct.std::__1::pair.929" = type { i32, %"class.gl::VertexArray"* }
%"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator" = type <{ %"class.gl::ResourceMap.576"*, i32, [4 x i8], %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::TransformFeedback *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::TransformFeedback *> > >::const_iterator", %"struct.std::__1::pair.931", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::TransformFeedback *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::TransformFeedback *> > >::const_iterator" = type { %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::TransformFeedback *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::TransformFeedback *> > >::iterator" }
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::TransformFeedback *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::TransformFeedback *> > >::iterator" = type { i8*, %union.anon.930 }
%union.anon.930 = type { %"union.absl::container_internal::map_slot_type.580"* }
%"struct.std::__1::pair.931" = type { i32, %"class.gl::TransformFeedback"* }
%"class.std::__1::__tree_node.1143" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.gl::FenceNVID" = type { i32 }
%"class.gl::InfoLog::StreamHelper" = type { %"class.std::__1::basic_stringstream"* }
%struct.__GLsync = type opaque
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"struct.std::__1::pair.945" = type { %"class.std::__1::basic_string", %"struct.gl::ExtensionInfo" }
%"struct.gl::ExtensionInfo" = type { i8, i8, i64 }
%"struct.gl::Box" = type { i32, i32, i32, i32, i32, i32 }
%"class.rx::ResetBaseVertexBaseInstance" = type <{ %"class.gl::Program"*, i8, i8, [6 x i8] }>
%"class.angle::FastVector.948" = type { %"struct.std::__1::array.949", %"class.gl::Buffer"**, i64, i64 }
%"struct.std::__1::array.949" = type { [16 x %"class.gl::Buffer"*] }
%"class.angle::FastVector.950" = type { %"struct.std::__1::array.951", %"struct.gl::TextureAndLayout"*, i64, i64 }
%"struct.std::__1::array.951" = type { [16 x %"struct.gl::TextureAndLayout"] }
%"struct.gl::TextureAndLayout" = type { %"class.gl::Texture"*, i32 }
%"struct.std::__1::pair.954" = type { i8, i8 }
%"struct.std::__1::pair.959" = type { i32, i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::__tree_node.1142" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.945" }

$_ZN2gl11ResourceMapINS_7FenceNVENS_9FenceNVIDEE8IteratorppEv = comdat any

$_ZN2gl11ResourceMapINS_5QueryENS_7QueryIDEE8IteratorppEv = comdat any

$_ZN2gl11ResourceMapINS_11VertexArrayENS_13VertexArrayIDEE8IteratorppEv = comdat any

$_ZN2gl11ResourceMapINS_17TransformFeedbackENS_19TransformFeedbackIDEE8IteratorppEv = comdat any

$_ZN5angle14BindingPointerIN2gl8CompilerENS1_7ContextENS_6ResultEED2Ev = comdat any

$_ZN2gl11ResourceMapINS_7FenceNVENS_9FenceNVIDEE6assignES2_PS1_ = comdat any

$_ZN2gl7InfoLoglsINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEENS0_12StreamHelperERKT_ = comdat any

$_ZN2gl7InfoLog12StreamHelperD2Ev = comdat any

$_ZN2gl11ResourceMapINS_7FenceNVENS_9FenceNVIDEE5eraseES2_PPS1_ = comdat any

$_ZN2gl18FramebufferManager26checkFramebufferAllocationEPN2rx13GLImplFactoryERKNS_4CapsENS_13FramebufferIDEPN3egl10ShareGroupE = comdat any

$_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE = comdat any

$_ZN2gl22ProgramPipelineManager30checkProgramPipelineAllocationEPN2rx13GLImplFactoryENS_17ProgramPipelineIDE = comdat any

$_ZN2gl11ResourceMapINS_5QueryENS_7QueryIDEE6assignES2_PS1_ = comdat any

$_ZN2gl11ResourceMapINS_11VertexArrayENS_13VertexArrayIDEE6assignES2_PS1_ = comdat any

$_ZN2gl11ResourceMapINS_17TransformFeedbackENS_19TransformFeedbackIDEE6assignES2_PS1_ = comdat any

$_ZN2gl19RenderbufferManager27checkRenderbufferAllocationEPN2rx13GLImplFactoryENS_14RenderbufferIDE = comdat any

$_ZN2gl11ResourceMapINS_5QueryENS_7QueryIDEE5eraseES2_PPS1_ = comdat any

$_ZN2gl11ResourceMapINS_11VertexArrayENS_13VertexArrayIDEE5eraseES2_PPS1_ = comdat any

$_ZN2gl11ResourceMapINS_17TransformFeedbackENS_19TransformFeedbackIDEE5eraseES2_PPS1_ = comdat any

$_ZN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEED2Ev = comdat any

$_ZN2gl14BindingPointerINS_7TextureEED0Ev = comdat any

$_ZN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEED0Ev = comdat any

$_ZN5angle14BindingPointerIN2gl8CompilerENS1_7ContextENS_6ResultEED0Ev = comdat any

$_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE25checkObjectAllocationImplIJNS_11TextureTypeEEEEPS1_PN2rx13GLImplFactoryES3_DpT_ = comdat any

$_ZN2gl11ResourceMapINS_7TextureENS_9TextureIDEE6assignES2_PS1_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE25checkObjectAllocationImplIJNS_4CapsEPN3egl10ShareGroupEEEEPS1_PN2rx13GLImplFactoryES3_DpT_ = comdat any

$_ZN2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE6assignES2_PS1_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE25checkObjectAllocationImplIJEEEPS1_PN2rx13GLImplFactoryES3_DpT_ = comdat any

$_ZN2gl11ResourceMapINS_6BufferENS_8BufferIDEE6assignES2_PS1_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE25checkObjectAllocationImplIJEEEPS1_PN2rx13GLImplFactoryES3_DpT_ = comdat any

$_ZN2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE6assignES2_PS1_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE25checkObjectAllocationImplIJEEEPS1_PN2rx13GLImplFactoryES3_DpT_ = comdat any

$_ZN2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE6assignES2_PS1_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE25checkObjectAllocationImplIJEEEPS1_PN2rx13GLImplFactoryES3_DpT_ = comdat any

$_ZN2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE6assignES2_PS1_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2gl14BindingPointerINS_8CompilerEED0Ev = comdat any

$_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl7ContextERmEEEvDpOT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7FenceNVEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7FenceNVEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7FenceNVEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl5QueryEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl5QueryEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl5QueryEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11VertexArrayEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11VertexArrayEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11VertexArrayEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl17TransformFeedbackEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl17TransformFeedbackEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl17TransformFeedbackEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN2gl13ExtensionInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN2gl13ExtensionInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_ = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZN2gl4priv6FmtHexILi8EjEERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES7_T0_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZTVN2gl14BindingPointerINS_7TextureEEE = comdat any

$_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE = comdat any

$_ZTVN5angle14BindingPointerIN2gl8CompilerENS1_7ContextENS_6ResultEEE = comdat any

$_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings = comdat any

$_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings = comdat any

$_ZTVN2gl14BindingPointerINS_8CompilerEEE = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@_ZN2gl20gCurrentValidContextE = hidden thread_local global %"class.gl::Context"* null, align 8
@_ZTVN2gl7ContextE = hidden unnamed_addr constant { [7 x i8*], [5 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::Context"*)* @_ZN2gl7ContextD2Ev to i8*), i8* bitcast (void (%"class.gl::Context"*)* @_ZN2gl7ContextD0Ev to i8*), i8* bitcast (void (%"class.gl::Context"*, i8*)* @_ZN2gl7Context8setLabelEPv to i8*), i8* bitcast (i8* (%"class.gl::Context"*)* @_ZNK2gl7Context8getLabelEv to i8*), i8* bitcast (void (%"class.gl::Context"*, i64, i32)* @_ZN2gl7Context20onSubjectStateChangeEmN5angle14SubjectMessageE to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.gl::Context"*)* @_ZThn8_N2gl7ContextD1Ev to i8*), i8* bitcast (void (%"class.gl::Context"*)* @_ZThn8_N2gl7ContextD0Ev to i8*), i8* bitcast (void (%"class.gl::Context"*, i64, i32)* @_ZThn8_N2gl7Context20onSubjectStateChangeEmN5angle14SubjectMessageE to i8*)] }, align 8
@.str = private unnamed_addr constant [31 x i8] c"native context creation failed\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN2gl11Framebuffer29kDefaultDrawFramebufferHandleE = external local_unnamed_addr global %"struct.gl::FramebufferID", align 4
@.str.2 = private unnamed_addr constant [8 x i8] c"ANGLE (\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"OpenGL ES \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c".0 (ANGLE \00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"2.1.1 git hash: a29a64a64e5e\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"OpenGL ES GLSL ES \00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"OpenGL GLSL \00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"0 (ANGLE \00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"GL_OVR_multiview2\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"GL_OVR_multiview\00", align 1
@__const._ZNK2gl7Context27generateSupportedExtensionsEv.supportedExtensions = private unnamed_addr constant { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, [1 x i8], i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } { i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, float 0xFFFFFFFFE0000000, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86 }, align 4
@.str.14 = private unnamed_addr constant [49 x i8] c"../../third_party/angle/src/libANGLE/Context.cpp\00", align 1
@__FUNCTION__._ZN2gl7Context8initCapsEv = private unnamed_addr constant [9 x i8] c"initCaps\00", align 1
@.str.15 = private unnamed_addr constant [37 x i8] c"Limiting compressed format support.\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"Limit some features because \00", align 1
@.str.17 = private unnamed_addr constant [24 x i8] c"FrameCapture is enabled\00", align 1
@.str.18 = private unnamed_addr constant [32 x i8] c"FrameCapture limits were forced\00", align 1
@.str.19 = private unnamed_addr constant [45 x i8] c"Limiting binary format support count to zero\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"disable_program_binary\00", align 1
@.str.21 = private unnamed_addr constant [30 x i8] c"Limiting image unit count to \00", align 1
@.str.22 = private unnamed_addr constant [44 x i8] c"Setting uniform buffer offset alignment to \00", align 1
@.str.23 = private unnamed_addr constant [118 x i8] c"Disabling GL_EXT_map_buffer_range and GL_OES_mapbuffer during capture, which are not supported on some native drivers\00", align 1
@.str.24 = private unnamed_addr constant [101 x i8] c"Disabling GL_CHROMIUM_bind_uniform_location during capture, which is not supported on native drivers\00", align 1
@.str.25 = private unnamed_addr constant [113 x i8] c"Disabling GL_NV_shader_noperspective_interpolation during capture, which is not supported on some native drivers\00", align 1
@.str.26 = private unnamed_addr constant [31 x i8] c"Limiting draw buffer count to \00", align 1
@_ZZN2gl7Context15blitFramebufferEiiiiiiiijjE12sRepeatCount = internal global i32 0, align 4
@.str.27 = private unnamed_addr constant [48 x i8] c"BlitFramebuffer called for non-existing buffers\00", align 1
@_ZZN2gl7Context5clearEjE12sRepeatCount = internal global i32 0, align 4
@.str.28 = private unnamed_addr constant [38 x i8] c"Clear called for non-existing buffers\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c"Error: \00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c", in \00", align 1
@.str.31 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c". \00", align 1
@_ZTVN2gl14BindingPointerINS_7TextureEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::BindingPointer.411"*)* @_ZN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.gl::BindingPointer.410"*)* @_ZN2gl14BindingPointerINS_7TextureEED0Ev to i8*)] }, comdat, align 8
@_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::BindingPointer.411"*)* @_ZN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.angle::BindingPointer.411"*)* @_ZN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEED0Ev to i8*)] }, comdat, align 8
@_ZN2gl5State14kBufferSettersE = external local_unnamed_addr global %"class.angle::PackedEnumMap.985", align 8
@_ZTVN5angle14BindingPointerIN2gl8CompilerENS1_7ContextENS_6ResultEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::BindingPointer.91"*)* @_ZN5angle14BindingPointerIN2gl8CompilerENS1_7ContextENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.angle::BindingPointer.91"*)* @_ZN5angle14BindingPointerIN2gl8CompilerENS1_7ContextENS_6ResultEED0Ev to i8*)] }, comdat, align 8
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8
@_ZN2glL23kMinimumPrimitiveCountsE = internal unnamed_addr constant %"class.angle::PackedEnumMap.1054" { %"struct.std::__1::array.1055" { [15 x i32] [i32 1, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 0, i32 0, i32 0, i32 2, i32 2, i32 3, i32 3, i32 0] } }, align 4
@_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings = linkonce_odr hidden local_unnamed_addr global %"class.std::__1::set.1056"* null, comdat, align 8
@_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings = linkonce_odr hidden global i64 0, comdat, align 8
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.35 = private unnamed_addr constant [2 x i8] c" \00", align 1
@_ZN2gl5State20kDirtyObjectHandlersE.const = private unnamed_addr constant [12 x { i64, i64 }] [{ i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State18syncActiveTexturesEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State16syncTexturesInitEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State14syncImagesInitEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State19syncReadAttachmentsEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State19syncDrawAttachmentsEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State15syncVertexArrayEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State12syncTexturesEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State10syncImagesEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State12syncSamplersEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State19syncReadFramebufferEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State19syncDrawFramebufferEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State11syncProgramEPKNS_7ContextENS_7CommandE to i64), i64 0 }], align 16
@.str.36 = private unnamed_addr constant [29 x i8] c"Program pipeline link failed\00", align 1
@__func__._ZN2gl7Context18prepareForDispatchEv = private unnamed_addr constant [19 x i8] c"prepareForDispatch\00", align 1
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN2gl14BindingPointerINS_8CompilerEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::BindingPointer.91"*)* @_ZN5angle14BindingPointerIN2gl8CompilerENS1_7ContextENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.gl::BindingPointer"*)* @_ZN2gl14BindingPointerINS_8CompilerEED0Ev to i8*)] }, comdat, align 8
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@.str.38 = private unnamed_addr constant [3 x i8] c"0x\00", align 1

@_ZN2gl7ContextC1EPN3egl7DisplayEPKNS1_6ConfigEPKS0_PNS_14TextureManagerEPNS_16SemaphoreManagerEPNS_18MemoryProgramCacheEjRKNS1_12AttributeMapERKNS1_17DisplayExtensionsERKNS1_16ClientExtensionsE = hidden unnamed_addr alias void (%"class.gl::Context"*, %"class.egl::Display"*, %"struct.egl::Config"*, %"class.gl::Context"*, %"class.gl::TextureManager"*, %"class.gl::SemaphoreManager"*, %"class.gl::MemoryProgramCache"*, i32, %"class.egl::AttributeMap"*, %"struct.egl::DisplayExtensions"*, %"struct.egl::ClientExtensions"*), void (%"class.gl::Context"*, %"class.egl::Display"*, %"struct.egl::Config"*, %"class.gl::Context"*, %"class.gl::TextureManager"*, %"class.gl::SemaphoreManager"*, %"class.gl::MemoryProgramCache"*, i32, %"class.egl::AttributeMap"*, %"struct.egl::DisplayExtensions"*, %"struct.egl::ClientExtensions"*)* @_ZN2gl7ContextC2EPN3egl7DisplayEPKNS1_6ConfigEPKS0_PNS_14TextureManagerEPNS_16SemaphoreManagerEPNS_18MemoryProgramCacheEjRKNS1_12AttributeMapERKNS1_17DisplayExtensionsERKNS1_16ClientExtensionsE
@_ZN2gl7ContextD1Ev = hidden unnamed_addr alias void (%"class.gl::Context"*), void (%"class.gl::Context"*)* @_ZN2gl7ContextD2Ev
@_ZN2gl8ErrorSetC1EPNS_7ContextE = hidden unnamed_addr alias void (%"class.gl::ErrorSet"*, %"class.gl::Context"*), void (%"class.gl::ErrorSet"*, %"class.gl::Context"*)* @_ZN2gl8ErrorSetC2EPNS_7ContextE
@_ZN2gl8ErrorSetD1Ev = hidden unnamed_addr alias void (%"class.gl::ErrorSet"*), void (%"class.gl::ErrorSet"*)* @_ZN2gl8ErrorSetD2Ev
@_ZN2gl10StateCacheC1Ev = hidden unnamed_addr alias void (%"class.gl::StateCache"*), void (%"class.gl::StateCache"*)* @_ZN2gl10StateCacheC2Ev
@_ZN2gl10StateCacheD1Ev = hidden unnamed_addr alias void (%"class.gl::StateCache"*), void (%"class.gl::StateCache"*)* @_ZN2gl10StateCacheD2Ev

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7ContextC2EPN3egl7DisplayEPKNS1_6ConfigEPKS0_PNS_14TextureManagerEPNS_16SemaphoreManagerEPNS_18MemoryProgramCacheEjRKNS1_12AttributeMapERKNS1_17DisplayExtensionsERKNS1_16ClientExtensionsE(%"class.gl::Context"*, %"class.egl::Display"*, %"struct.egl::Config"*, %"class.gl::Context"*, %"class.gl::TextureManager"*, %"class.gl::SemaphoreManager"*, %"class.gl::MemoryProgramCache"*, i32, %"class.egl::AttributeMap"* dereferenceable(24), %"struct.egl::DisplayExtensions"* nocapture readonly dereferenceable(73), %"struct.egl::ClientExtensions"* nocapture readonly dereferenceable(24)) unnamed_addr #1 align 2 {
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %"struct.gl::Version"*
  %14 = alloca i64, align 8
  %15 = alloca %"class.gl::Context"*, align 8
  %16 = alloca i64, align 8
  %17 = alloca %"class.gl::Context"*, align 8
  %18 = alloca i64, align 8
  %19 = alloca %"class.gl::Context"*, align 8
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 1
  %21 = bitcast %"class.gl::Context"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN2gl7ContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN2gl7ContextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %21, align 8
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %23 = icmp ne %"class.gl::Context"* %3, null
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %3, i64 0, i32 2
  %25 = select i1 %23, %"class.gl::State"* %24, %"class.gl::State"* null
  %26 = icmp eq %"class.gl::Context"* %3, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %3, i64 0, i32 2, i32 9
  %29 = load %"class.egl::ShareGroup"*, %"class.egl::ShareGroup"** %28, align 8
  tail call void @_ZN3egl10ShareGroup6addRefEv(%"class.egl::ShareGroup"* %29) #21
  br label %36

30:                                               ; preds = %11
  %31 = tail call i8* @_Znwm(i64 32) #27
  %32 = bitcast i8* %31 to %"class.egl::ShareGroup"*
  %33 = getelementptr inbounds %"class.egl::Display", %"class.egl::Display"* %1, i64 0, i32 3
  %34 = load %"class.rx::DisplayImpl"*, %"class.rx::DisplayImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.rx::DisplayImpl", %"class.rx::DisplayImpl"* %34, i64 0, i32 0
  tail call void @_ZN3egl10ShareGroupC1EPN2rx14EGLImplFactoryE(%"class.egl::ShareGroup"* nonnull %32, %"class.rx::EGLImplFactory"* %35) #21
  br label %36

36:                                               ; preds = %27, %30
  %37 = phi %"class.egl::ShareGroup"* [ %29, %27 ], [ %32, %30 ]
  %38 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 78
  %39 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #21
  %40 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 12440, i64 1) #21
  %41 = trunc i64 %40 to i32
  %42 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 12539, i64 0) #21
  %43 = trunc i64 %42 to i32
  %44 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 13443, i64 1) #21
  %45 = icmp eq i64 %44, 1
  br i1 %45, label %46, label %71

46:                                               ; preds = %36
  %47 = icmp eq i32 %41, 1
  br i1 %47, label %75, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.egl::Display", %"class.egl::Display"* %1, i64 0, i32 3
  %50 = load %"class.rx::DisplayImpl"*, %"class.rx::DisplayImpl"** %49, align 8
  %51 = bitcast %"class.rx::DisplayImpl"* %50 to i64 (%"class.rx::DisplayImpl"*)***
  %52 = load i64 (%"class.rx::DisplayImpl"*)**, i64 (%"class.rx::DisplayImpl"*)*** %51, align 8
  %53 = getelementptr inbounds i64 (%"class.rx::DisplayImpl"*)*, i64 (%"class.rx::DisplayImpl"*)** %52, i64 31
  %54 = load i64 (%"class.rx::DisplayImpl"*)*, i64 (%"class.rx::DisplayImpl"*)** %53, align 8
  %55 = tail call i64 %54(%"class.rx::DisplayImpl"* %50) #21
  %56 = trunc i64 %55 to i32
  %57 = icmp ult i32 %56, %41
  br i1 %57, label %64, label %58

58:                                               ; preds = %48
  %59 = lshr i64 %55, 32
  %60 = trunc i64 %59 to i32
  %61 = icmp ule i32 %56, %41
  %62 = icmp ult i32 %60, %43
  %63 = and i1 %61, %62
  br i1 %63, label %64, label %68

64:                                               ; preds = %58, %48
  %65 = shl i64 %42, 32
  %66 = and i64 %40, 4294967295
  %67 = or i64 %65, %66
  br label %68

68:                                               ; preds = %64, %58
  %69 = phi i64 [ %67, %64 ], [ %55, %58 ]
  %70 = and i64 %69, -4294967296
  br label %75

71:                                               ; preds = %36
  %72 = shl i64 %42, 32
  %73 = and i64 %40, 4294967295
  %74 = or i64 %72, %73
  br label %75

75:                                               ; preds = %46, %68, %71
  %76 = phi i64 [ %70, %68 ], [ %72, %71 ], [ 4294967296, %46 ]
  %77 = phi i64 [ %69, %68 ], [ %74, %71 ], [ 1, %46 ]
  %78 = and i64 %77, 4294967295
  %79 = or i64 %78, %76
  store i64 %79, i64* %12, align 8
  %80 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 12720, i64 0) #21
  %81 = icmp eq i64 %80, 1
  br i1 %81, label %86, label %82

82:                                               ; preds = %75
  %83 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 12540, i64 0) #21
  %84 = and i64 %83, 1
  %85 = icmp ne i64 %84, 0
  br label %86

86:                                               ; preds = %75, %82
  %87 = phi i1 [ true, %75 ], [ %85, %82 ]
  %88 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 13229, i64 1) #21
  %89 = icmp eq i64 %88, 1
  %90 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 13394, i64 1) #21
  %91 = icmp eq i64 %90, 1
  %92 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 13395, i64 0) #21
  %93 = icmp eq i64 %92, 1
  %94 = icmp ne %"class.gl::MemoryProgramCache"* %6, null
  %95 = tail call i32 @_ZNK3egl12AttributeMap8getAsIntEli(%"class.egl::AttributeMap"* %8, i64 12544, i32 12546) #21
  call void @_ZN2gl5StateC1EPKS0_PN3egl10ShareGroupEPNS_14TextureManagerEPNS_16SemaphoreManagerEPKNS_11MockOverlayEjRKNS_7VersionEbbbbbj(%"class.gl::State"* %22, %"class.gl::State"* %25, %"class.egl::ShareGroup"* %37, %"class.gl::TextureManager"* %4, %"class.gl::SemaphoreManager"* %5, %"class.gl::MockOverlay"* %38, i32 %7, %"struct.gl::Version"* nonnull dereferenceable(8) %13, i1 zeroext %87, i1 zeroext %89, i1 zeroext %91, i1 zeroext %93, i1 zeroext %94, i32 %95) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #21
  %96 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 3
  %97 = zext i1 %23 to i8
  store i8 %97, i8* %96, align 8
  %98 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 4
  %99 = call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 12723, i64 0) #21
  %100 = icmp eq i64 %99, 1
  %101 = zext i1 %100 to i8
  store i8 %101, i8* %98, align 1
  %102 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 5
  %103 = icmp ne %"class.gl::TextureManager"* %4, null
  %104 = zext i1 %103 to i8
  store i8 %104, i8* %102, align 2
  %105 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 6
  %106 = icmp ne %"class.gl::SemaphoreManager"* %5, null
  %107 = zext i1 %106 to i8
  store i8 %107, i8* %105, align 1
  %108 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 8
  %109 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %108, i64 0, i32 0
  store %"class.gl::Context"* %0, %"class.gl::Context"** %109, align 8
  %110 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 8, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 8, i32 1, i32 0, i32 1, i32 0, i32 0
  %112 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 8, i32 1, i32 0, i32 0
  %113 = bitcast %"class.std::__1::__tree_node_base"** %110 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false) #21
  store %"class.std::__1::__tree_end_node"* %111, %"class.std::__1::__tree_end_node"** %112, align 8
  %114 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 9, i32 0
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11
  %116 = getelementptr inbounds %"class.egl::Display", %"class.egl::Display"* %1, i64 0, i32 3
  %117 = load %"class.rx::DisplayImpl"*, %"class.rx::DisplayImpl"** %116, align 8
  %118 = getelementptr inbounds %"class.rx::DisplayImpl", %"class.rx::DisplayImpl"* %117, i64 0, i32 0
  %119 = bitcast %"class.rx::DisplayImpl"* %117 to %"class.rx::ContextImpl"* (%"class.rx::EGLImplFactory"*, %"class.gl::State"*, %"class.gl::ErrorSet"*, %"struct.egl::Config"*, %"class.gl::Context"*, %"class.egl::AttributeMap"*)***
  %120 = load %"class.rx::ContextImpl"* (%"class.rx::EGLImplFactory"*, %"class.gl::State"*, %"class.gl::ErrorSet"*, %"struct.egl::Config"*, %"class.gl::Context"*, %"class.egl::AttributeMap"*)**, %"class.rx::ContextImpl"* (%"class.rx::EGLImplFactory"*, %"class.gl::State"*, %"class.gl::ErrorSet"*, %"struct.egl::Config"*, %"class.gl::Context"*, %"class.egl::AttributeMap"*)*** %119, align 8
  %121 = getelementptr inbounds %"class.rx::ContextImpl"* (%"class.rx::EGLImplFactory"*, %"class.gl::State"*, %"class.gl::ErrorSet"*, %"struct.egl::Config"*, %"class.gl::Context"*, %"class.egl::AttributeMap"*)*, %"class.rx::ContextImpl"* (%"class.rx::EGLImplFactory"*, %"class.gl::State"*, %"class.gl::ErrorSet"*, %"struct.egl::Config"*, %"class.gl::Context"*, %"class.egl::AttributeMap"*)** %120, i64 7
  %122 = load %"class.rx::ContextImpl"* (%"class.rx::EGLImplFactory"*, %"class.gl::State"*, %"class.gl::ErrorSet"*, %"struct.egl::Config"*, %"class.gl::Context"*, %"class.egl::AttributeMap"*)*, %"class.rx::ContextImpl"* (%"class.rx::EGLImplFactory"*, %"class.gl::State"*, %"class.gl::ErrorSet"*, %"struct.egl::Config"*, %"class.gl::Context"*, %"class.egl::AttributeMap"*)** %121, align 8
  %123 = call %"class.rx::ContextImpl"* %122(%"class.rx::EGLImplFactory"* %118, %"class.gl::State"* dereferenceable(12296) %22, %"class.gl::ErrorSet"* %108, %"struct.egl::Config"* %2, %"class.gl::Context"* %3, %"class.egl::AttributeMap"* dereferenceable(24) %8) #21
  %124 = ptrtoint %"class.rx::ContextImpl"* %123 to i64
  %125 = bitcast %"class.std::__1::unique_ptr.538"* %115 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 12
  store i8* null, i8** %126, align 8
  %127 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13
  call void @_ZN2gl10ExtensionsC1Ev(%"struct.gl::Extensions"* %127) #21
  %128 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 15, i32 0, i32 0
  %129 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 15, i32 0, i32 1
  store %"class.gl::Compiler"* null, %"class.gl::Compiler"** %129, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_8CompilerEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8
  %130 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 16
  store %"struct.egl::Config"* %2, %"struct.egl::Config"** %130, align 8
  %131 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 0, i32 0, i32 0
  %132 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 0, i32 0, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %132, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_7TextureEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  %133 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 1, i32 0, i32 0
  %134 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 1, i32 0, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %134, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_7TextureEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %133, align 8
  %135 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 2, i32 0, i32 0
  %136 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 2, i32 0, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %136, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_7TextureEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %135, align 8
  %137 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 3, i32 0, i32 0
  %138 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 3, i32 0, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %138, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_7TextureEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %137, align 8
  %139 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 4, i32 0, i32 0
  %140 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 4, i32 0, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %140, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_7TextureEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %139, align 8
  %141 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 5, i32 0, i32 0
  %142 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 5, i32 0, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %142, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_7TextureEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %141, align 8
  %143 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 6, i32 0, i32 0
  %144 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 6, i32 0, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %144, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_7TextureEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %143, align 8
  %145 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 7, i32 0, i32 0
  %146 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 7, i32 0, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %146, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_7TextureEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %147 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 8, i32 0, i32 0
  %148 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 8, i32 0, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %148, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_7TextureEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %147, align 8
  %149 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 9, i32 0, i32 0
  %150 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 9, i32 0, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %150, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_7TextureEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %149, align 8
  %151 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 10, i32 0, i32 0
  %152 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 10, i32 0, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %152, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_7TextureEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %153 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 0
  store i64 32, i64* %153, align 8
  %154 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 1
  %155 = call i8* @_Znam(i64 256) #27
  %156 = bitcast %"class.gl::FenceNV"*** %154 to i8**
  store i8* %155, i8** %156, align 8
  %157 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %157, align 8
  %158 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 1
  %159 = bitcast %"union.absl::container_internal::map_slot_type.550"** %158 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 32, i1 false) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 -1, i64 256, i1 false) #21
  %160 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 19
  call void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"* %160) #21
  %161 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 0
  store i64 32, i64* %161, align 8
  %162 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 1
  %163 = call i8* @_Znam(i64 256) #27
  %164 = bitcast %"class.gl::Query"*** %162 to i8**
  store i8* %163, i8** %164, align 8
  %165 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %165, align 8
  %166 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 1
  %167 = bitcast %"union.absl::container_internal::map_slot_type.560"** %166 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 32, i1 false) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 -1, i64 256, i1 false) #21
  %168 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 21
  call void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"* %168) #21
  %169 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 0
  store i64 32, i64* %169, align 8
  %170 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 1
  %171 = call i8* @_Znam(i64 256) #27
  %172 = bitcast %"class.gl::VertexArray"*** %170 to i8**
  store i8* %171, i8** %172, align 8
  %173 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %173, align 8
  %174 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 1
  %175 = bitcast %"union.absl::container_internal::map_slot_type.570"** %174 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 32, i1 false) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 -1, i64 256, i1 false) #21
  %176 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 23
  call void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"* %176) #21
  %177 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 0
  store i64 32, i64* %177, align 8
  %178 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 1
  %179 = call i8* @_Znam(i64 256) #27
  %180 = bitcast %"class.gl::TransformFeedback"*** %178 to i8**
  store i8* %179, i8** %180, align 8
  %181 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %181, align 8
  %182 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 1
  %183 = bitcast %"union.absl::container_internal::map_slot_type.580"** %182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 32, i1 false) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %179, i8 -1, i64 256, i1 false) #21
  %184 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 25
  call void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"* %184) #21
  %185 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 30
  %186 = bitcast %"class.std::__1::vector.586"* %185 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 24, i1 false) #21
  %187 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 32
  %188 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 38
  %189 = bitcast %"class.std::__1::vector.586"* %187 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 36, i1 false)
  %190 = call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 12600, i64 12734) #21
  %191 = icmp eq i64 %190, 12735
  %192 = select i1 %191, i32 33362, i32 0
  %193 = icmp eq i64 %190, 12734
  %194 = select i1 %193, i32 33377, i32 %192
  store i32 %194, i32* %188, align 4
  %195 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 39
  %196 = call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 12479, i64 0) #21
  %197 = icmp eq i64 %196, 1
  br i1 %197, label %203, label %198

198:                                              ; preds = %86
  %199 = call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 12540, i64 0) #21
  %200 = lshr i64 %199, 2
  %201 = trunc i64 %200 to i8
  %202 = and i8 %201, 1
  br label %203

203:                                              ; preds = %86, %198
  %204 = phi i8 [ 1, %86 ], [ %202, %198 ]
  store i8 %204, i8* %195, align 8
  %205 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 40
  %206 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %9, i64 0, i32 34
  %207 = load i8, i8* %206, align 1, !range !2
  store i8 %207, i8* %205, align 1
  %208 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 41
  %209 = getelementptr inbounds %"struct.egl::ClientExtensions", %"struct.egl::ClientExtensions"* %10, i64 0, i32 19
  %210 = load i8, i8* %209, align 1, !range !2
  store i8 %210, i8* %208, align 2
  %211 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 43
  %212 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 45
  %213 = bitcast %"class.egl::Surface"** %211 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %213, i8 0, i64 16, i1 false)
  store %"class.egl::Display"* %1, %"class.egl::Display"** %212, align 8
  %214 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 46
  %215 = call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 13228, i64 0) #21
  %216 = icmp eq i64 %215, 1
  %217 = zext i1 %216 to i8
  store i8 %217, i8* %214, align 8
  %218 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 47
  store i8 0, i8* %218, align 1
  %219 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 48
  %220 = xor i1 %216, true
  %221 = zext i1 %220 to i64
  %222 = call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 13407, i64 %221) #21
  %223 = icmp eq i64 %222, 1
  %224 = zext i1 %223 to i8
  store i8 %224, i8* %219, align 2
  %225 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 50
  store %"class.gl::MemoryProgramCache"* %6, %"class.gl::MemoryProgramCache"** %225, align 8
  %226 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %227 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 5
  %228 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  %229 = bitcast i64* %227 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %229, i8 0, i64 16, i1 false) #21
  %230 = bitcast i64* %226 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %230, i8 0, i64 33, i1 false)
  %231 = bitcast i64* %228 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %231, align 8
  %232 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 9
  store i8 0, i8* %232, align 8
  %233 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 11, i32 0
  %234 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 18
  store i8 0, i8* %234, align 8
  %235 = bitcast i64* %233 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %235, i8 0, i64 40, i1 false) #21
  %236 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53, i32 0
  %237 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 66
  %238 = bitcast i64* %236 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %238, i8 0, i64 104, i1 false)
  call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %237, %"class.angle::ObserverInterface"* %20, i64 360) #21
  %239 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 67
  call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %239, %"class.angle::ObserverInterface"* %20, i64 362) #21
  %240 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 68
  call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %240, %"class.angle::ObserverInterface"* %20, i64 361) #21
  %241 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 69
  %242 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 70
  %243 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 71
  %244 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 72, i32 1
  %245 = bitcast %"class.std::__1::vector.337"* %241 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %245, i8 0, i64 73, i1 false)
  call void @_ZN5angle13ScratchBufferC1Ev(%"class.angle::ScratchBuffer"* %244) #21
  %246 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 73, i32 0
  store i8 0, i8* %246, align 8
  %247 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 73, i32 1
  call void @_ZN5angle13ScratchBufferC1Ev(%"class.angle::ScratchBuffer"* %247) #21
  %248 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 74
  %249 = bitcast %"class.std::__1::shared_ptr.608"* %248 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %249, i8 0, i64 16, i1 false) #21
  %250 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 75
  %251 = call i8* @_Znwm(i64 832) #27
  %252 = bitcast i8* %251 to %"class.angle::FrameCapture"*
  call void @_ZN5angle12FrameCaptureC1Ev(%"class.angle::FrameCapture"* nonnull %252) #21
  %253 = ptrtoint i8* %251 to i64
  %254 = bitcast %"class.std::__1::unique_ptr.609"* %250 to i64*
  store i64 %253, i64* %254, align 8
  %255 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 76
  %256 = getelementptr inbounds %"class.std::__1::unique_ptr.538", %"class.std::__1::unique_ptr.538"* %115, i64 0, i32 0, i32 0, i32 0
  %257 = bitcast %"class.std::__1::basic_string"* %255 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %257, i8 0, i64 32, i1 false)
  %258 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %256, align 8
  %259 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %258, i64 0, i32 0
  call void @_ZN2gl11MockOverlayC1EPN2rx13GLImplFactoryE(%"class.gl::MockOverlay"* %38, %"class.rx::GLImplFactory"* %259) #21
  %260 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 79
  %261 = call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 13454, i64 0) #21
  %262 = icmp eq i64 %261, 1
  %263 = zext i1 %262 to i8
  store i8 %263, i8* %260, align 1
  %264 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 80
  %265 = call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %8, i64 13456, i64 0) #21
  %266 = icmp eq i64 %265, 1
  %267 = zext i1 %266 to i8
  store i8 %267, i8* %264, align 2
  %268 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 81
  store i8 0, i8* %268, align 1
  %269 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %269) #21
  store i64 192, i64* %14, align 8
  %270 = bitcast %"class.gl::Context"** %15 to i8*
  %271 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 69, i32 0, i32 1
  %272 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 69, i32 0, i32 2, i32 0, i32 0
  %273 = icmp eq %"class.gl::Context"* %0, null
  %274 = select i1 %273, %"class.angle::ObserverInterface"* null, %"class.angle::ObserverInterface"* %20
  %275 = bitcast %"class.angle::ObserverBinding"** %271 to i64*
  br label %282

276:                                              ; preds = %291
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %269) #21
  %277 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %277) #21
  store i64 264, i64* %16, align 8
  %278 = bitcast %"class.gl::Context"** %17 to i8*
  %279 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 70, i32 0, i32 1
  %280 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 70, i32 0, i32 2, i32 0, i32 0
  %281 = bitcast %"class.angle::ObserverBinding"** %279 to i64*
  br label %301

282:                                              ; preds = %203, %291
  %283 = phi i64 [ 192, %203 ], [ %293, %291 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %270) #21
  store %"class.gl::Context"* %0, %"class.gl::Context"** %15, align 8
  %284 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %271, align 8
  %285 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %272, align 8
  %286 = icmp ult %"class.angle::ObserverBinding"* %284, %285
  br i1 %286, label %287, label %290

287:                                              ; preds = %282
  call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %284, %"class.angle::ObserverInterface"* %274, i64 %283) #21
  %288 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %284, i64 1
  %289 = ptrtoint %"class.angle::ObserverBinding"* %288 to i64
  store i64 %289, i64* %275, align 8
  br label %291

290:                                              ; preds = %282
  call void @_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl7ContextERmEEEvDpOT_(%"class.std::__1::vector.337"* %241, %"class.gl::Context"** nonnull dereferenceable(8) %15, i64* nonnull dereferenceable(8) %14) #21
  br label %291

291:                                              ; preds = %287, %290
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %270) #21
  %292 = load i64, i64* %14, align 8
  %293 = add i64 %292, 1
  store i64 %293, i64* %14, align 8
  %294 = icmp ult i64 %293, 264
  br i1 %294, label %282, label %276

295:                                              ; preds = %310
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %277) #21
  %296 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %296) #21
  store i64 96, i64* %18, align 8
  %297 = bitcast %"class.gl::Context"** %19 to i8*
  %298 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 71, i32 0, i32 1
  %299 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 71, i32 0, i32 2, i32 0, i32 0
  %300 = bitcast %"class.angle::ObserverBinding"** %298 to i64*
  br label %315

301:                                              ; preds = %276, %310
  %302 = phi i64 [ 264, %276 ], [ %312, %310 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #21
  store %"class.gl::Context"* %0, %"class.gl::Context"** %17, align 8
  %303 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %279, align 8
  %304 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %280, align 8
  %305 = icmp ult %"class.angle::ObserverBinding"* %303, %304
  br i1 %305, label %306, label %309

306:                                              ; preds = %301
  call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %303, %"class.angle::ObserverInterface"* %274, i64 %302) #21
  %307 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %303, i64 1
  %308 = ptrtoint %"class.angle::ObserverBinding"* %307 to i64
  store i64 %308, i64* %281, align 8
  br label %310

309:                                              ; preds = %301
  call void @_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl7ContextERmEEEvDpOT_(%"class.std::__1::vector.337"* %242, %"class.gl::Context"** nonnull dereferenceable(8) %17, i64* nonnull dereferenceable(8) %16) #21
  br label %310

310:                                              ; preds = %306, %309
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #21
  %311 = load i64, i64* %16, align 8
  %312 = add i64 %311, 1
  store i64 %312, i64* %16, align 8
  %313 = icmp ult i64 %312, 360
  br i1 %313, label %301, label %295

314:                                              ; preds = %324
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %296) #21
  ret void

315:                                              ; preds = %295, %324
  %316 = phi i64 [ 96, %295 ], [ %326, %324 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %297) #21
  store %"class.gl::Context"* %0, %"class.gl::Context"** %19, align 8
  %317 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %298, align 8
  %318 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %299, align 8
  %319 = icmp ult %"class.angle::ObserverBinding"* %317, %318
  br i1 %319, label %320, label %323

320:                                              ; preds = %315
  call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %317, %"class.angle::ObserverInterface"* %274, i64 %316) #21
  %321 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %317, i64 1
  %322 = ptrtoint %"class.angle::ObserverBinding"* %321 to i64
  store i64 %322, i64* %300, align 8
  br label %324

323:                                              ; preds = %315
  call void @_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl7ContextERmEEEvDpOT_(%"class.std::__1::vector.337"* %243, %"class.gl::Context"** nonnull dereferenceable(8) %19, i64* nonnull dereferenceable(8) %18) #21
  br label %324

324:                                              ; preds = %320, %323
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %297) #21
  %325 = load i64, i64* %18, align 8
  %326 = add i64 %325, 1
  store i64 %326, i64* %18, align 8
  %327 = icmp ult i64 %326, 192
  br i1 %327, label %315, label %314
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2gl5StateC1EPKS0_PN3egl10ShareGroupEPNS_14TextureManagerEPNS_16SemaphoreManagerEPKNS_11MockOverlayEjRKNS_7VersionEbbbbbj(%"class.gl::State"*, %"class.gl::State"*, %"class.egl::ShareGroup"*, %"class.gl::TextureManager"*, %"class.gl::SemaphoreManager"*, %"class.gl::MockOverlay"*, i32, %"struct.gl::Version"* dereferenceable(8), i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i32) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2gl10ExtensionsC1Ev(%"struct.gl::Extensions"*) unnamed_addr #3

declare void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"*) unnamed_addr #3

declare void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"*, %"class.angle::ObserverInterface"*, i64) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN5angle12FrameCaptureC1Ev(%"class.angle::FrameCapture"*) unnamed_addr #3

declare void @_ZN2gl11MockOverlayC1EPN2rx13GLImplFactoryE(%"class.gl::MockOverlay"*, %"class.rx::GLImplFactory"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10initializeEv(%"class.egl::Error"* noalias sret, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %4, align 8
  %6 = icmp eq %"class.rx::ContextImpl"* %5, null
  br i1 %6, label %7, label %21

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #21
  %9 = tail call i8* @_Znwm(i64 32) #27
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i64 30, i1 false) #21
  %13 = getelementptr inbounds i8, i8* %9, i64 30
  store i8 0, i8* %13, align 1
  call void @_ZN3egl5ErrorC1EiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 12289, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #21
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %7
  %19 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %19) #27
  br label %20

20:                                               ; preds = %7, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #21
  br label %26

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %22, align 8, !alias.scope !3
  %23 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %23, align 4, !alias.scope !3
  %24 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %25 = bitcast %"class.std::__1::unique_ptr.920"* %24 to i64*
  store i64 0, i64* %25, align 8, !alias.scope !3
  br label %26

26:                                               ; preds = %21, %20
  ret void
}

declare void @_ZN3egl5ErrorC1EiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context26initializeDefaultResourcesEv(%"class.gl::Context"*) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 50
  %5 = load %"class.gl::MemoryProgramCache"*, %"class.gl::MemoryProgramCache"** %4, align 8
  tail call void @_ZN2rx11ContextImpl21setMemoryProgramCacheEPN2gl18MemoryProgramCacheE(%"class.rx::ContextImpl"* %3, %"class.gl::MemoryProgramCache"* %5) #21
  tail call void @_ZN2gl7Context8initCapsEv(%"class.gl::Context"* %0)
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 45
  %7 = load %"class.egl::Display"*, %"class.egl::Display"** %6, align 8
  %8 = getelementptr inbounds %"class.egl::Display", %"class.egl::Display"* %7, i64 0, i32 28, i32 3, i32 4
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = or i64 %13, 3
  store i64 %14, i64* %12, align 8
  br label %15

15:                                               ; preds = %1, %11
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State10initializeEPNS_7ContextE(%"class.gl::State"* %16, %"class.gl::Context"* %0) #21
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 19
  tail call void @_ZN2gl15HandleAllocator13setBaseHandleEj(%"class.gl::HandleAllocator"* %17, i32 0) #21
  %18 = tail call i8* @_Znwm(i64 688) #27
  %19 = bitcast i8* %18 to %"class.gl::Texture"*
  %20 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %21 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %20, i64 0, i32 0
  tail call void @_ZN2gl7TextureC1EPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.gl::Texture"* nonnull %19, %"class.rx::GLImplFactory"* %21, i32 0, i8 zeroext 0) #21
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17
  %23 = getelementptr inbounds i8, i8* %18, i64 8
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 1
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 0, i32 0, i32 1
  %28 = load %"class.gl::Texture"*, %"class.gl::Texture"** %27, align 8
  %29 = bitcast %"class.gl::Texture"** %27 to i8**
  store i8* %18, i8** %29, align 8
  %30 = icmp eq %"class.gl::Texture"* %28, null
  br i1 %30, label %45, label %31

31:                                               ; preds = %15
  %32 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %28, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %28, i64 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, -1
  store i64 %35, i64* %33, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %45

37:                                               ; preds = %31
  %38 = bitcast %"class.gl::Texture"* %28 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %39 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %38, align 8
  %40 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %39, align 8
  tail call void %40(%"class.angle::RefCountObject"* %32, %"class.gl::Context"* %0) #21
  %41 = bitcast %"class.gl::Texture"* %28 to void (%"class.angle::RefCountObject"*)***
  %42 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %42, i64 2
  %44 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %43, align 8
  tail call void %44(%"class.angle::RefCountObject"* nonnull %32) #21
  br label %45

45:                                               ; preds = %15, %31, %37
  %46 = tail call i8* @_Znwm(i64 688) #27
  %47 = bitcast i8* %46 to %"class.gl::Texture"*
  %48 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %49 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %48, i64 0, i32 0
  tail call void @_ZN2gl7TextureC1EPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.gl::Texture"* nonnull %47, %"class.rx::GLImplFactory"* %49, i32 0, i8 zeroext 7) #21
  %50 = getelementptr inbounds i8, i8* %46, i64 8
  %51 = bitcast i8* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %51, align 8
  %54 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 7, i32 0, i32 1
  %55 = load %"class.gl::Texture"*, %"class.gl::Texture"** %54, align 8
  %56 = bitcast %"class.gl::Texture"** %54 to i8**
  store i8* %46, i8** %56, align 8
  %57 = icmp eq %"class.gl::Texture"* %55, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %55, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %55, i64 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, -1
  store i64 %62, i64* %60, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %72

64:                                               ; preds = %58
  %65 = bitcast %"class.gl::Texture"* %55 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %66 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %65, align 8
  %67 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %66, align 8
  tail call void %67(%"class.angle::RefCountObject"* %59, %"class.gl::Context"* %0) #21
  %68 = bitcast %"class.gl::Texture"* %55 to void (%"class.angle::RefCountObject"*)***
  %69 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %69, i64 2
  %71 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %70, align 8
  tail call void %71(%"class.angle::RefCountObject"* nonnull %59) #21
  br label %72

72:                                               ; preds = %45, %58, %64
  %73 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %74 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 1
  %75 = load i32, i32* %73, align 4
  %76 = icmp ult i32 %75, 3
  br i1 %76, label %77, label %81

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 53
  %79 = load i8, i8* %78, align 1, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %108, label %81

81:                                               ; preds = %72, %77
  %82 = tail call i8* @_Znwm(i64 688) #27
  %83 = bitcast i8* %82 to %"class.gl::Texture"*
  %84 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %85 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %84, i64 0, i32 0
  tail call void @_ZN2gl7TextureC1EPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.gl::Texture"* nonnull %83, %"class.rx::GLImplFactory"* %85, i32 0, i8 zeroext 4) #21
  %86 = getelementptr inbounds i8, i8* %82, i64 8
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 1
  store i64 %89, i64* %87, align 8
  %90 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 4, i32 0, i32 1
  %91 = load %"class.gl::Texture"*, %"class.gl::Texture"** %90, align 8
  %92 = bitcast %"class.gl::Texture"** %90 to i8**
  store i8* %82, i8** %92, align 8
  %93 = icmp eq %"class.gl::Texture"* %91, null
  br i1 %93, label %108, label %94

94:                                               ; preds = %81
  %95 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %91, i64 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %91, i64 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, -1
  store i64 %98, i64* %96, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %108

100:                                              ; preds = %94
  %101 = bitcast %"class.gl::Texture"* %91 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %102 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %101, align 8
  %103 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %102, align 8
  tail call void %103(%"class.angle::RefCountObject"* %95, %"class.gl::Context"* %0) #21
  %104 = bitcast %"class.gl::Texture"* %91 to void (%"class.angle::RefCountObject"*)***
  %105 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %105, i64 2
  %107 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %106, align 8
  tail call void %107(%"class.angle::RefCountObject"* nonnull %95) #21
  br label %108

108:                                              ; preds = %100, %94, %81, %77
  %109 = load i32, i32* %73, align 4
  %110 = icmp ult i32 %109, 3
  br i1 %110, label %146, label %111

111:                                              ; preds = %108
  %112 = tail call i8* @_Znwm(i64 688) #27
  %113 = bitcast i8* %112 to %"class.gl::Texture"*
  %114 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %115 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %114, i64 0, i32 0
  tail call void @_ZN2gl7TextureC1EPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.gl::Texture"* nonnull %113, %"class.rx::GLImplFactory"* %115, i32 0, i8 zeroext 1) #21
  %116 = getelementptr inbounds i8, i8* %112, i64 8
  %117 = bitcast i8* %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 1, i32 0, i32 1
  %121 = load %"class.gl::Texture"*, %"class.gl::Texture"** %120, align 8
  %122 = bitcast %"class.gl::Texture"** %120 to i8**
  store i8* %112, i8** %122, align 8
  %123 = icmp eq %"class.gl::Texture"* %121, null
  br i1 %123, label %138, label %124

124:                                              ; preds = %111
  %125 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %121, i64 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %121, i64 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, -1
  store i64 %128, i64* %126, align 8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %138

130:                                              ; preds = %124
  %131 = bitcast %"class.gl::Texture"* %121 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %132 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %131, align 8
  %133 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %132, align 8
  tail call void %133(%"class.angle::RefCountObject"* %125, %"class.gl::Context"* %0) #21
  %134 = bitcast %"class.gl::Texture"* %121 to void (%"class.angle::RefCountObject"*)***
  %135 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %135, i64 2
  %137 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %136, align 8
  tail call void %137(%"class.angle::RefCountObject"* nonnull %125) #21
  br label %138

138:                                              ; preds = %130, %124, %111
  %139 = load i32, i32* %73, align 4
  %140 = icmp ult i32 %139, 3
  br i1 %140, label %146, label %141

141:                                              ; preds = %138
  %142 = icmp eq i32 %139, 3
  br i1 %142, label %143, label %150

143:                                              ; preds = %141
  %144 = load i32, i32* %74, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %143, %108, %138
  %147 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 159
  %148 = load i8, i8* %147, align 2, !range !2
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %177, label %150

150:                                              ; preds = %143, %141, %146
  %151 = tail call i8* @_Znwm(i64 688) #27
  %152 = bitcast i8* %151 to %"class.gl::Texture"*
  %153 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %154 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %153, i64 0, i32 0
  tail call void @_ZN2gl7TextureC1EPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.gl::Texture"* nonnull %152, %"class.rx::GLImplFactory"* %154, i32 0, i8 zeroext 2) #21
  %155 = getelementptr inbounds i8, i8* %151, i64 8
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %156, align 8
  %159 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 2, i32 0, i32 1
  %160 = load %"class.gl::Texture"*, %"class.gl::Texture"** %159, align 8
  %161 = bitcast %"class.gl::Texture"** %159 to i8**
  store i8* %151, i8** %161, align 8
  %162 = icmp eq %"class.gl::Texture"* %160, null
  br i1 %162, label %177, label %163

163:                                              ; preds = %150
  %164 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %160, i64 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %160, i64 0, i32 0, i32 0, i32 1
  %166 = load i64, i64* %165, align 8
  %167 = add i64 %166, -1
  store i64 %167, i64* %165, align 8
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %177

169:                                              ; preds = %163
  %170 = bitcast %"class.gl::Texture"* %160 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %171 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %170, align 8
  %172 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %171, align 8
  tail call void %172(%"class.angle::RefCountObject"* %164, %"class.gl::Context"* %0) #21
  %173 = bitcast %"class.gl::Texture"* %160 to void (%"class.angle::RefCountObject"*)***
  %174 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %174, i64 2
  %176 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %175, align 8
  tail call void %176(%"class.angle::RefCountObject"* nonnull %164) #21
  br label %177

177:                                              ; preds = %169, %163, %150, %146
  %178 = load i32, i32* %73, align 4
  %179 = icmp ult i32 %178, 3
  br i1 %179, label %238, label %180

180:                                              ; preds = %177
  %181 = icmp eq i32 %178, 3
  br i1 %181, label %182, label %185

182:                                              ; preds = %180
  %183 = load i32, i32* %74, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %230, label %185

185:                                              ; preds = %182, %180
  %186 = tail call i8* @_Znwm(i64 688) #27
  %187 = bitcast i8* %186 to %"class.gl::Texture"*
  %188 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %189 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %188, i64 0, i32 0
  tail call void @_ZN2gl7TextureC1EPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.gl::Texture"* nonnull %187, %"class.rx::GLImplFactory"* %189, i32 0, i8 zeroext 3) #21
  %190 = getelementptr inbounds i8, i8* %186, i64 8
  %191 = bitcast i8* %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = add i64 %192, 1
  store i64 %193, i64* %191, align 8
  %194 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 3, i32 0, i32 1
  %195 = load %"class.gl::Texture"*, %"class.gl::Texture"** %194, align 8
  %196 = bitcast %"class.gl::Texture"** %194 to i8**
  store i8* %186, i8** %196, align 8
  %197 = icmp eq %"class.gl::Texture"* %195, null
  br i1 %197, label %212, label %198

198:                                              ; preds = %185
  %199 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %195, i64 0, i32 0, i32 0
  %200 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %195, i64 0, i32 0, i32 0, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = add i64 %201, -1
  store i64 %202, i64* %200, align 8
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %212

204:                                              ; preds = %198
  %205 = bitcast %"class.gl::Texture"* %195 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %206 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %205, align 8
  %207 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %206, align 8
  tail call void %207(%"class.angle::RefCountObject"* %199, %"class.gl::Context"* %0) #21
  %208 = bitcast %"class.gl::Texture"* %195 to void (%"class.angle::RefCountObject"*)***
  %209 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %209, i64 2
  %211 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %210, align 8
  tail call void %211(%"class.angle::RefCountObject"* nonnull %199) #21
  br label %212

212:                                              ; preds = %185, %198, %204
  %213 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 79
  %214 = load i32, i32* %213, align 4
  %215 = icmp sgt i32 %214, 0
  br i1 %215, label %220, label %216

216:                                              ; preds = %220, %212
  %217 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 85
  %218 = load i32, i32* %217, align 4
  %219 = icmp sgt i32 %218, 0
  br i1 %219, label %225, label %230

220:                                              ; preds = %212, %220
  %221 = phi i32 [ %222, %220 ], [ 0, %212 ]
  tail call void @_ZN2gl7Context15bindBufferRangeENS_13BufferBindingEjNS_8BufferIDEll(%"class.gl::Context"* %0, i8 zeroext 1, i32 %221, i32 0, i64 0, i64 0)
  %222 = add nuw nsw i32 %221, 1
  %223 = load i32, i32* %213, align 4
  %224 = icmp slt i32 %222, %223
  br i1 %224, label %220, label %216

225:                                              ; preds = %216, %225
  %226 = phi i32 [ %227, %225 ], [ 0, %216 ]
  tail call void @_ZN2gl7Context15bindBufferRangeENS_13BufferBindingEjNS_8BufferIDEll(%"class.gl::Context"* %0, i8 zeroext 9, i32 %226, i32 0, i64 0, i64 0)
  %227 = add nuw nsw i32 %226, 1
  %228 = load i32, i32* %217, align 4
  %229 = icmp slt i32 %227, %228
  br i1 %229, label %225, label %230

230:                                              ; preds = %225, %216, %182
  %231 = load i32, i32* %73, align 4
  %232 = icmp ult i32 %231, 3
  br i1 %232, label %238, label %233

233:                                              ; preds = %230
  %234 = icmp eq i32 %231, 3
  br i1 %234, label %235, label %246

235:                                              ; preds = %233
  %236 = load i32, i32* %74, align 4
  %237 = icmp ugt i32 %236, 1
  br i1 %237, label %246, label %238

238:                                              ; preds = %177, %230, %235
  %239 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 176
  %240 = load i8, i8* %239, align 1, !range !2
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %242, label %246

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 177
  %244 = load i8, i8* %243, align 4, !range !2
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %273, label %246

246:                                              ; preds = %242, %233, %238, %235
  %247 = tail call i8* @_Znwm(i64 688) #27
  %248 = bitcast i8* %247 to %"class.gl::Texture"*
  %249 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %250 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %249, i64 0, i32 0
  tail call void @_ZN2gl7TextureC1EPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.gl::Texture"* nonnull %248, %"class.rx::GLImplFactory"* %250, i32 0, i8 zeroext 8) #21
  %251 = getelementptr inbounds i8, i8* %247, i64 8
  %252 = bitcast i8* %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = add i64 %253, 1
  store i64 %254, i64* %252, align 8
  %255 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 8, i32 0, i32 1
  %256 = load %"class.gl::Texture"*, %"class.gl::Texture"** %255, align 8
  %257 = bitcast %"class.gl::Texture"** %255 to i8**
  store i8* %247, i8** %257, align 8
  %258 = icmp eq %"class.gl::Texture"* %256, null
  br i1 %258, label %273, label %259

259:                                              ; preds = %246
  %260 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %256, i64 0, i32 0, i32 0
  %261 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %256, i64 0, i32 0, i32 0, i32 1
  %262 = load i64, i64* %261, align 8
  %263 = add i64 %262, -1
  store i64 %263, i64* %261, align 8
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %265, label %273

265:                                              ; preds = %259
  %266 = bitcast %"class.gl::Texture"* %256 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %267 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %266, align 8
  %268 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %267, align 8
  tail call void %268(%"class.angle::RefCountObject"* %260, %"class.gl::Context"* %0) #21
  %269 = bitcast %"class.gl::Texture"* %256 to void (%"class.angle::RefCountObject"*)***
  %270 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %269, align 8
  %271 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %270, i64 2
  %272 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %271, align 8
  tail call void %272(%"class.angle::RefCountObject"* nonnull %260) #21
  br label %273

273:                                              ; preds = %242, %265, %259, %246
  %274 = load i32, i32* %73, align 4
  %275 = icmp ult i32 %274, 3
  br i1 %275, label %281, label %276

276:                                              ; preds = %273
  %277 = icmp eq i32 %274, 3
  br i1 %277, label %278, label %289

278:                                              ; preds = %276
  %279 = load i32, i32* %74, align 4
  %280 = icmp ugt i32 %279, 1
  br i1 %280, label %289, label %281

281:                                              ; preds = %273, %278
  %282 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 190
  %283 = load i8, i8* %282, align 1, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %285, label %289

285:                                              ; preds = %281
  %286 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 191
  %287 = load i8, i8* %286, align 2, !range !2
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %316, label %289

289:                                              ; preds = %285, %276, %281, %278
  %290 = tail call i8* @_Znwm(i64 688) #27
  %291 = bitcast i8* %290 to %"class.gl::Texture"*
  %292 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %293 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %292, i64 0, i32 0
  tail call void @_ZN2gl7TextureC1EPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.gl::Texture"* nonnull %291, %"class.rx::GLImplFactory"* %293, i32 0, i8 zeroext 10) #21
  %294 = getelementptr inbounds i8, i8* %290, i64 8
  %295 = bitcast i8* %294 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = add i64 %296, 1
  store i64 %297, i64* %295, align 8
  %298 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 10, i32 0, i32 1
  %299 = load %"class.gl::Texture"*, %"class.gl::Texture"** %298, align 8
  %300 = bitcast %"class.gl::Texture"** %298 to i8**
  store i8* %290, i8** %300, align 8
  %301 = icmp eq %"class.gl::Texture"* %299, null
  br i1 %301, label %316, label %302

302:                                              ; preds = %289
  %303 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %299, i64 0, i32 0, i32 0
  %304 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %299, i64 0, i32 0, i32 0, i32 1
  %305 = load i64, i64* %304, align 8
  %306 = add i64 %305, -1
  store i64 %306, i64* %304, align 8
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %316

308:                                              ; preds = %302
  %309 = bitcast %"class.gl::Texture"* %299 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %310 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %309, align 8
  %311 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %310, align 8
  tail call void %311(%"class.angle::RefCountObject"* %303, %"class.gl::Context"* %0) #21
  %312 = bitcast %"class.gl::Texture"* %299 to void (%"class.angle::RefCountObject"*)***
  %313 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %312, align 8
  %314 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %313, i64 2
  %315 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %314, align 8
  tail call void %315(%"class.angle::RefCountObject"* nonnull %303) #21
  br label %316

316:                                              ; preds = %285, %308, %302, %289
  %317 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 141
  %318 = load i8, i8* %317, align 1, !range !2
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %347, label %320

320:                                              ; preds = %316
  %321 = tail call i8* @_Znwm(i64 688) #27
  %322 = bitcast i8* %321 to %"class.gl::Texture"*
  %323 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %324 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %323, i64 0, i32 0
  tail call void @_ZN2gl7TextureC1EPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.gl::Texture"* nonnull %322, %"class.rx::GLImplFactory"* %324, i32 0, i8 zeroext 6) #21
  %325 = getelementptr inbounds i8, i8* %321, i64 8
  %326 = bitcast i8* %325 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = add i64 %327, 1
  store i64 %328, i64* %326, align 8
  %329 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 6, i32 0, i32 1
  %330 = load %"class.gl::Texture"*, %"class.gl::Texture"** %329, align 8
  %331 = bitcast %"class.gl::Texture"** %329 to i8**
  store i8* %321, i8** %331, align 8
  %332 = icmp eq %"class.gl::Texture"* %330, null
  br i1 %332, label %347, label %333

333:                                              ; preds = %320
  %334 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %330, i64 0, i32 0, i32 0
  %335 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %330, i64 0, i32 0, i32 0, i32 1
  %336 = load i64, i64* %335, align 8
  %337 = add i64 %336, -1
  store i64 %337, i64* %335, align 8
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %339, label %347

339:                                              ; preds = %333
  %340 = bitcast %"class.gl::Texture"* %330 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %341 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %340, align 8
  %342 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %341, align 8
  tail call void %342(%"class.angle::RefCountObject"* %334, %"class.gl::Context"* %0) #21
  %343 = bitcast %"class.gl::Texture"* %330 to void (%"class.angle::RefCountObject"*)***
  %344 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %343, align 8
  %345 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %344, i64 2
  %346 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %345, align 8
  tail call void %346(%"class.angle::RefCountObject"* nonnull %334) #21
  br label %347

347:                                              ; preds = %339, %333, %320, %316
  %348 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 91
  %349 = load i8, i8* %348, align 8, !range !2
  %350 = icmp eq i8 %349, 0
  br i1 %350, label %351, label %355

351:                                              ; preds = %347
  %352 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 102
  %353 = load i8, i8* %352, align 1, !range !2
  %354 = icmp eq i8 %353, 0
  br i1 %354, label %382, label %355

355:                                              ; preds = %351, %347
  %356 = tail call i8* @_Znwm(i64 688) #27
  %357 = bitcast i8* %356 to %"class.gl::Texture"*
  %358 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %359 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %358, i64 0, i32 0
  tail call void @_ZN2gl7TextureC1EPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.gl::Texture"* nonnull %357, %"class.rx::GLImplFactory"* %359, i32 0, i8 zeroext 5) #21
  %360 = getelementptr inbounds i8, i8* %356, i64 8
  %361 = bitcast i8* %360 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = add i64 %362, 1
  store i64 %363, i64* %361, align 8
  %364 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 5, i32 0, i32 1
  %365 = load %"class.gl::Texture"*, %"class.gl::Texture"** %364, align 8
  %366 = bitcast %"class.gl::Texture"** %364 to i8**
  store i8* %356, i8** %366, align 8
  %367 = icmp eq %"class.gl::Texture"* %365, null
  br i1 %367, label %382, label %368

368:                                              ; preds = %355
  %369 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %365, i64 0, i32 0, i32 0
  %370 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %365, i64 0, i32 0, i32 0, i32 1
  %371 = load i64, i64* %370, align 8
  %372 = add i64 %371, -1
  store i64 %372, i64* %370, align 8
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %382

374:                                              ; preds = %368
  %375 = bitcast %"class.gl::Texture"* %365 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %376 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %375, align 8
  %377 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %376, align 8
  tail call void %377(%"class.angle::RefCountObject"* %369, %"class.gl::Context"* %0) #21
  %378 = bitcast %"class.gl::Texture"* %365 to void (%"class.angle::RefCountObject"*)***
  %379 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %378, align 8
  %380 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %379, i64 2
  %381 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %380, align 8
  tail call void %381(%"class.angle::RefCountObject"* nonnull %369) #21
  br label %382

382:                                              ; preds = %374, %368, %355, %351
  %383 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 173
  %384 = load i8, i8* %383, align 4, !range !2
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %413, label %386

386:                                              ; preds = %382
  %387 = tail call i8* @_Znwm(i64 688) #27
  %388 = bitcast i8* %387 to %"class.gl::Texture"*
  %389 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %390 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %389, i64 0, i32 0
  tail call void @_ZN2gl7TextureC1EPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.gl::Texture"* nonnull %388, %"class.rx::GLImplFactory"* %390, i32 0, i8 zeroext 9) #21
  %391 = getelementptr inbounds i8, i8* %387, i64 8
  %392 = bitcast i8* %391 to i64*
  %393 = load i64, i64* %392, align 8
  %394 = add i64 %393, 1
  store i64 %394, i64* %392, align 8
  %395 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 9, i32 0, i32 1
  %396 = load %"class.gl::Texture"*, %"class.gl::Texture"** %395, align 8
  %397 = bitcast %"class.gl::Texture"** %395 to i8**
  store i8* %387, i8** %397, align 8
  %398 = icmp eq %"class.gl::Texture"* %396, null
  br i1 %398, label %413, label %399

399:                                              ; preds = %386
  %400 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %396, i64 0, i32 0, i32 0
  %401 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %396, i64 0, i32 0, i32 0, i32 1
  %402 = load i64, i64* %401, align 8
  %403 = add i64 %402, -1
  store i64 %403, i64* %401, align 8
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %405, label %413

405:                                              ; preds = %399
  %406 = bitcast %"class.gl::Texture"* %396 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %407 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %406, align 8
  %408 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %407, align 8
  tail call void %408(%"class.angle::RefCountObject"* %400, %"class.gl::Context"* %0) #21
  %409 = bitcast %"class.gl::Texture"* %396 to void (%"class.angle::RefCountObject"*)***
  %410 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %409, align 8
  %411 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %410, i64 2
  %412 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %411, align 8
  tail call void %412(%"class.angle::RefCountObject"* nonnull %400) #21
  br label %413

413:                                              ; preds = %405, %399, %386, %382
  tail call void @_ZN2gl5State22initializeZeroTexturesEPKNS_7ContextERKN5angle13PackedEnumMapINS_11TextureTypeENS_14BindingPointerINS_7TextureEEELm11EEE(%"class.gl::State"* %16, %"class.gl::Context"* %0, %"class.angle::PackedEnumMap.544"* dereferenceable(176) %22) #21
  %414 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %415 = bitcast %"class.rx::ContextImpl"* %414 to i32 (%"class.rx::ContextImpl"*)***
  %416 = load i32 (%"class.rx::ContextImpl"*)**, i32 (%"class.rx::ContextImpl"*)*** %415, align 8
  %417 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %416, i64 20
  %418 = load i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %417, align 8
  %419 = tail call i32 %418(%"class.rx::ContextImpl"* %414) #21
  %420 = icmp eq i32 %419, 1
  br i1 %420, label %658, label %421

421:                                              ; preds = %413
  %422 = tail call %"class.gl::VertexArray"* @_ZN2gl7Context26checkVertexArrayAllocationENS_13VertexArrayIDE(%"class.gl::Context"* %0, i32 0) #21
  tail call void @_ZN2gl5State21setVertexArrayBindingEPKNS_7ContextEPNS_11VertexArrayE(%"class.gl::State"* %16, %"class.gl::Context"* %0, %"class.gl::VertexArray"* %422) #21
  %423 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 66
  %424 = icmp eq %"class.gl::VertexArray"* %422, null
  %425 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %422, i64 0, i32 2
  %426 = select i1 %424, %"class.angle::Subject"* null, %"class.angle::Subject"* %425
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %423, %"class.angle::Subject"* %426) #21
  %427 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache26onVertexArrayBindingChangeEPNS_7ContextE(%"class.gl::StateCache"* %427, %"class.gl::Context"* %0) #21
  %428 = load i32, i32* %73, align 4
  %429 = icmp ult i32 %428, 3
  br i1 %429, label %432, label %430

430:                                              ; preds = %421
  %431 = tail call %"class.gl::TransformFeedback"* @_ZN2gl7Context32checkTransformFeedbackAllocationENS_19TransformFeedbackIDE(%"class.gl::Context"* %0, i32 0) #21
  tail call void @_ZN2gl5State27setTransformFeedbackBindingEPKNS_7ContextEPNS_17TransformFeedbackE(%"class.gl::State"* %16, %"class.gl::Context"* %0, %"class.gl::TransformFeedback"* %431) #21
  br label %432

432:                                              ; preds = %421, %430
  %433 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 10
  %434 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %435 = zext i64 %434 to i128
  %436 = mul nuw i128 %435, 11376068507788127593
  %437 = lshr i128 %436, 64
  %438 = xor i128 %437, %436
  %439 = trunc i128 %438 to i64
  %440 = lshr i64 %439, 7
  %441 = trunc i128 %438 to i8
  %442 = and i8 %441, 127
  %443 = insertelement <16 x i8> undef, i8 %442, i32 0
  %444 = shufflevector <16 x i8> %443, <16 x i8> undef, <16 x i32> zeroinitializer
  %445 = bitcast %"class.gl::State"* %16 to i8*
  %446 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  %447 = bitcast i64* %446 to <2 x i64>*
  br label %519

448:                                              ; preds = %604
  %449 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 13
  %450 = load %"class.gl::RenderbufferManager"*, %"class.gl::RenderbufferManager"** %449, align 8
  %451 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %450, i64 0, i32 0, i32 1, i32 0
  %452 = load i64, i64* %451, align 8
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %459, label %454

454:                                              ; preds = %448
  %455 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %450, i64 0, i32 0, i32 1, i32 1
  %456 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %455, align 8
  %457 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %456, align 8
  %458 = icmp eq %"class.gl::Renderbuffer"* %457, inttoptr (i64 -1 to %"class.gl::Renderbuffer"*)
  br i1 %458, label %513, label %510

459:                                              ; preds = %448
  %460 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %450, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %461 = load i8*, i8** %460, align 8
  %462 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %450, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %463 = load i64, i64* %462, align 8
  %464 = ptrtoint i8* %461 to i64
  %465 = lshr i64 %464, 12
  %466 = xor i64 %440, %465
  %467 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %450, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %468

468:                                              ; preds = %498, %459
  %469 = phi i64 [ %466, %459 ], [ %500, %498 ]
  %470 = phi i64 [ 0, %459 ], [ %499, %498 ]
  %471 = and i64 %469, %463
  %472 = getelementptr inbounds i8, i8* %461, i64 %471
  %473 = bitcast i8* %472 to <16 x i8>*
  %474 = load <16 x i8>, <16 x i8>* %473, align 1
  %475 = icmp eq <16 x i8> %444, %474
  %476 = bitcast <16 x i1> %475 to i16
  %477 = icmp eq i16 %476, 0
  br i1 %477, label %494, label %478

478:                                              ; preds = %468
  %479 = zext i16 %476 to i32
  %480 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %467, align 8
  br label %481

481:                                              ; preds = %490, %478
  %482 = phi i32 [ %479, %478 ], [ %492, %490 ]
  %483 = tail call i32 @llvm.cttz.i32(i32 %482, i1 false) #21, !range !8
  %484 = zext i32 %483 to i64
  %485 = add i64 %471, %484
  %486 = and i64 %485, %463
  %487 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %480, i64 %486, i32 0, i32 0
  %488 = load i32, i32* %487, align 4
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %501, label %490, !prof !9

490:                                              ; preds = %481
  %491 = add i32 %482, -1
  %492 = and i32 %491, %482
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %494, label %481

494:                                              ; preds = %490, %468
  %495 = icmp eq <16 x i8> %474, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %496 = bitcast <16 x i1> %495 to i16
  %497 = icmp eq i16 %496, 0
  br i1 %497, label %498, label %513, !prof !10

498:                                              ; preds = %494
  %499 = add i64 %470, 16
  %500 = add i64 %499, %471
  br label %468

501:                                              ; preds = %481
  %502 = getelementptr inbounds i8, i8* %461, i64 %486
  %503 = icmp ne i8* %502, null
  tail call void @llvm.assume(i1 %503) #21
  %504 = load i8, i8* %502, align 1
  %505 = icmp sgt i8 %504, -1
  br i1 %505, label %507, label %506, !prof !9

506:                                              ; preds = %501
  tail call void @llvm.trap() #21
  unreachable

507:                                              ; preds = %501
  %508 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %480, i64 %486, i32 0, i32 1
  %509 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %508, align 8
  br label %510

510:                                              ; preds = %507, %454
  %511 = phi %"class.gl::Renderbuffer"* [ %457, %454 ], [ %509, %507 ]
  %512 = icmp eq %"class.gl::Renderbuffer"* %511, null
  br i1 %512, label %513, label %514

513:                                              ; preds = %494, %510, %454
  br label %514

514:                                              ; preds = %510, %513
  %515 = phi %"class.gl::Renderbuffer"* [ %511, %510 ], [ null, %513 ]
  tail call void @_ZN2gl5State22setRenderbufferBindingEPKNS_7ContextEPNS_12RenderbufferE(%"class.gl::State"* %16, %"class.gl::Context"* %0, %"class.gl::Renderbuffer"* %515) #21
  %516 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 70
  %517 = load i32, i32* %516, align 4
  %518 = icmp sgt i32 %517, 0
  br i1 %518, label %611, label %608

519:                                              ; preds = %432, %604
  %520 = phi i64 [ 0, %432 ], [ %606, %604 ]
  %521 = load %"class.gl::BufferManager"*, %"class.gl::BufferManager"** %433, align 8
  %522 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %521, i64 0, i32 0, i32 1, i32 0
  %523 = load i64, i64* %522, align 8
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %530, label %525

525:                                              ; preds = %519
  %526 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %521, i64 0, i32 0, i32 1, i32 1
  %527 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %526, align 8
  %528 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %527, align 8
  %529 = icmp eq %"class.gl::Buffer"* %528, inttoptr (i64 -1 to %"class.gl::Buffer"*)
  br i1 %529, label %584, label %581

530:                                              ; preds = %519
  %531 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %521, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %532 = load i8*, i8** %531, align 8
  %533 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %521, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %534 = load i64, i64* %533, align 8
  %535 = ptrtoint i8* %532 to i64
  %536 = lshr i64 %535, 12
  %537 = xor i64 %440, %536
  %538 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %521, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %539

539:                                              ; preds = %569, %530
  %540 = phi i64 [ %537, %530 ], [ %571, %569 ]
  %541 = phi i64 [ 0, %530 ], [ %570, %569 ]
  %542 = and i64 %540, %534
  %543 = getelementptr inbounds i8, i8* %532, i64 %542
  %544 = bitcast i8* %543 to <16 x i8>*
  %545 = load <16 x i8>, <16 x i8>* %544, align 1
  %546 = icmp eq <16 x i8> %444, %545
  %547 = bitcast <16 x i1> %546 to i16
  %548 = icmp eq i16 %547, 0
  br i1 %548, label %565, label %549

549:                                              ; preds = %539
  %550 = zext i16 %547 to i32
  %551 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %538, align 8
  br label %552

552:                                              ; preds = %561, %549
  %553 = phi i32 [ %550, %549 ], [ %563, %561 ]
  %554 = tail call i32 @llvm.cttz.i32(i32 %553, i1 false) #21, !range !8
  %555 = zext i32 %554 to i64
  %556 = add i64 %542, %555
  %557 = and i64 %556, %534
  %558 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %551, i64 %557, i32 0, i32 0
  %559 = load i32, i32* %558, align 4
  %560 = icmp eq i32 %559, 0
  br i1 %560, label %572, label %561, !prof !9

561:                                              ; preds = %552
  %562 = add i32 %553, -1
  %563 = and i32 %562, %553
  %564 = icmp eq i32 %563, 0
  br i1 %564, label %565, label %552

565:                                              ; preds = %561, %539
  %566 = icmp eq <16 x i8> %545, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %567 = bitcast <16 x i1> %566 to i16
  %568 = icmp eq i16 %567, 0
  br i1 %568, label %569, label %584, !prof !10

569:                                              ; preds = %565
  %570 = add i64 %541, 16
  %571 = add i64 %570, %542
  br label %539

572:                                              ; preds = %552
  %573 = getelementptr inbounds i8, i8* %532, i64 %557
  %574 = icmp ne i8* %573, null
  tail call void @llvm.assume(i1 %574) #21
  %575 = load i8, i8* %573, align 1
  %576 = icmp sgt i8 %575, -1
  br i1 %576, label %578, label %577, !prof !9

577:                                              ; preds = %572
  tail call void @llvm.trap() #21
  unreachable

578:                                              ; preds = %572
  %579 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %551, i64 %557, i32 0, i32 1
  %580 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %579, align 8
  br label %581

581:                                              ; preds = %578, %525
  %582 = phi %"class.gl::Buffer"* [ %528, %525 ], [ %580, %578 ]
  %583 = icmp eq %"class.gl::Buffer"* %582, null
  br i1 %583, label %584, label %585

584:                                              ; preds = %565, %581, %525
  br label %585

585:                                              ; preds = %584, %581
  %586 = phi %"class.gl::Buffer"* [ %582, %581 ], [ null, %584 ]
  %587 = getelementptr inbounds %"class.angle::PackedEnumMap.985", %"class.angle::PackedEnumMap.985"* @_ZN2gl5State14kBufferSettersE, i64 0, i32 0, i32 0, i64 %520, i32 0
  %588 = load i64, i64* %587, align 8
  %589 = getelementptr inbounds %"class.angle::PackedEnumMap.985", %"class.angle::PackedEnumMap.985"* @_ZN2gl5State14kBufferSettersE, i64 0, i32 0, i32 0, i64 %520, i32 1
  %590 = load i64, i64* %589, align 8
  %591 = getelementptr inbounds i8, i8* %445, i64 %590
  %592 = bitcast i8* %591 to %"class.gl::State"*
  %593 = and i64 %588, 1
  %594 = icmp eq i64 %593, 0
  br i1 %594, label %602, label %595

595:                                              ; preds = %585
  %596 = bitcast i8* %591 to i8**
  %597 = load i8*, i8** %596, align 8
  %598 = add i64 %588, -1
  %599 = getelementptr i8, i8* %597, i64 %598
  %600 = bitcast i8* %599 to void (%"class.gl::State"*, %"class.gl::Context"*, %"class.gl::Buffer"*)**
  %601 = load void (%"class.gl::State"*, %"class.gl::Context"*, %"class.gl::Buffer"*)*, void (%"class.gl::State"*, %"class.gl::Context"*, %"class.gl::Buffer"*)** %600, align 8
  br label %604

602:                                              ; preds = %585
  %603 = inttoptr i64 %588 to void (%"class.gl::State"*, %"class.gl::Context"*, %"class.gl::Buffer"*)*
  br label %604

604:                                              ; preds = %595, %602
  %605 = phi void (%"class.gl::State"*, %"class.gl::Context"*, %"class.gl::Buffer"*)* [ %601, %595 ], [ %603, %602 ]
  tail call void %605(%"class.gl::State"* %592, %"class.gl::Context"* %0, %"class.gl::Buffer"* %586) #21
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %447, align 8
  %606 = add nuw nsw i64 %520, 1
  %607 = icmp eq i64 %606, 13
  br i1 %607, label %448, label %519

608:                                              ; preds = %611, %514
  %609 = load i32, i32* %73, align 4
  %610 = icmp ult i32 %609, 2
  br i1 %610, label %616, label %625

611:                                              ; preds = %514, %611
  %612 = phi i32 [ %613, %611 ], [ 0, %514 ]
  tail call void @_ZN2gl7Context15bindBufferRangeENS_13BufferBindingEjNS_8BufferIDEll(%"class.gl::Context"* %0, i8 zeroext 12, i32 %612, i32 0, i64 0, i64 -1)
  %613 = add nuw nsw i32 %612, 1
  %614 = load i32, i32* %516, align 4
  %615 = icmp slt i32 %613, %614
  br i1 %615, label %611, label %608

616:                                              ; preds = %608
  %617 = tail call i8* @_Znwm(i64 1984) #27
  %618 = bitcast i8* %617 to %"class.gl::GLES1Renderer"*
  tail call void @_ZN2gl13GLES1RendererC1Ev(%"class.gl::GLES1Renderer"* nonnull %618) #21
  %619 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %620 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %619, align 8
  %621 = bitcast %"class.gl::GLES1Renderer"** %619 to i8**
  store i8* %617, i8** %621, align 8
  %622 = icmp eq %"class.gl::GLES1Renderer"* %620, null
  br i1 %622, label %625, label %623

623:                                              ; preds = %616
  tail call void @_ZN2gl13GLES1RendererD1Ev(%"class.gl::GLES1Renderer"* nonnull %620) #21
  %624 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %620, i64 0, i32 0
  tail call void @_ZdlPv(i8* %624) #27
  br label %625

625:                                              ; preds = %608, %623, %616
  %626 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53, i32 0
  store i64 -1, i64* %626, align 8
  %627 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %628 = load i64, i64* %627, align 8
  %629 = or i64 %628, 3553
  store i64 %629, i64* %627, align 8
  %630 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54, i32 0
  %631 = load i64, i64* %630, align 8
  %632 = or i64 %631, -9223371624537915392
  store i64 %632, i64* %630, align 8
  %633 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 56, i32 0
  %634 = bitcast i64* %633 to <2 x i64>*
  %635 = load <2 x i64>, <2 x i64>* %634, align 8
  %636 = or <2 x i64> %635, <i64 1649267441666, i64 512>
  %637 = bitcast i64* %633 to <2 x i64>*
  store <2 x i64> %636, <2 x i64>* %637, align 8
  %638 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 58, i32 0
  %639 = bitcast i64* %638 to <2 x i64>*
  %640 = load <2 x i64>, <2 x i64>* %639, align 8
  %641 = or <2 x i64> %640, <i64 122457162781, i64 1024>
  %642 = bitcast i64* %638 to <2 x i64>*
  store <2 x i64> %641, <2 x i64>* %642, align 8
  %643 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 60, i32 0
  %644 = bitcast i64* %643 to <2 x i64>*
  %645 = load <2 x i64>, <2 x i64>* %644, align 8
  %646 = or <2 x i64> %645, <i64 288230376151711759, i64 1536>
  %647 = bitcast i64* %643 to <2 x i64>*
  store <2 x i64> %646, <2 x i64>* %647, align 8
  %648 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 62, i32 0
  %649 = bitcast i64* %648 to <2 x i64>*
  %650 = load <2 x i64>, <2 x i64>* %649, align 8
  %651 = or <2 x i64> %650, <i64 33741812833189888, i64 2497>
  %652 = bitcast i64* %648 to <2 x i64>*
  store <2 x i64> %651, <2 x i64>* %652, align 8
  %653 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 64, i32 0
  %654 = bitcast i64* %653 to <2 x i64>*
  %655 = load <2 x i64>, <2 x i64>* %654, align 8
  %656 = or <2 x i64> %655, <i64 2, i64 512>
  %657 = bitcast i64* %653 to <2 x i64>*
  store <2 x i64> %656, <2 x i64>* %657, align 8
  ret void

658:                                              ; preds = %413
  ret void
}

declare void @_ZN2rx11ContextImpl21setMemoryProgramCacheEPN2gl18MemoryProgramCacheE(%"class.rx::ContextImpl"*, %"class.gl::MemoryProgramCache"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8initCapsEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca %"struct.gl::Caps", align 8
  %4 = alloca %"struct.gl::Extensions", align 4
  %5 = alloca %"class.gl::LogMessage", align 8
  %6 = alloca %"class.gl::LogMessage", align 8
  %7 = alloca %"class.gl::LogMessage", align 8
  %8 = alloca %"class.std::__1::vector.125", align 8
  %9 = alloca [1 x %"class.std::__1::basic_string"], align 8
  %10 = alloca %"class.gl::LogMessage", align 8
  %11 = alloca %"class.gl::LogMessage", align 8
  %12 = alloca %"class.gl::LogMessage", align 8
  %13 = alloca %"class.gl::LogMessage", align 8
  %14 = alloca %"class.gl::LogMessage", align 8
  %15 = alloca %"class.gl::LogMessage", align 8
  %16 = bitcast %"struct.gl::Caps"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 872, i8* nonnull %16) #21
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %18 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %17, align 8
  %19 = bitcast %"class.rx::ContextImpl"* %18 to void (%"struct.gl::Caps"*, %"class.rx::ContextImpl"*)***
  %20 = load void (%"struct.gl::Caps"*, %"class.rx::ContextImpl"*)**, void (%"struct.gl::Caps"*, %"class.rx::ContextImpl"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"struct.gl::Caps"*, %"class.rx::ContextImpl"*)*, void (%"struct.gl::Caps"*, %"class.rx::ContextImpl"*)** %20, i64 56
  %22 = load void (%"struct.gl::Caps"*, %"class.rx::ContextImpl"*)*, void (%"struct.gl::Caps"*, %"class.rx::ContextImpl"*)** %21, align 8
  call void %22(%"struct.gl::Caps"* nonnull sret %3, %"class.rx::ContextImpl"* %18) #21
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5
  %24 = call dereferenceable(872) %"struct.gl::Caps"* @_ZN2gl4CapsaSERKS0_(%"struct.gl::Caps"* %23, %"struct.gl::Caps"* nonnull dereferenceable(872) %3) #21
  call void @_ZN2gl4CapsD1Ev(%"struct.gl::Caps"* nonnull %3) #21
  call void @llvm.lifetime.end.p0i8(i64 872, i8* nonnull %16) #21
  %25 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 228, i8* nonnull %25) #21
  call void @_ZNK2gl7Context27generateSupportedExtensionsEv(%"struct.gl::Extensions"* nonnull sret %4, %"class.gl::Context"* %0)
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13
  %27 = call dereferenceable(228) %"struct.gl::Extensions"* @_ZN2gl10ExtensionsaSERKS0_(%"struct.gl::Extensions"* %26, %"struct.gl::Extensions"* nonnull dereferenceable(228) %4) #21
  call void @llvm.lifetime.end.p0i8(i64 228, i8* nonnull %25) #21
  %28 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 45
  %29 = load %"class.egl::Display"*, %"class.egl::Display"** %28, align 8
  %30 = getelementptr inbounds %"class.egl::Display", %"class.egl::Display"* %29, i64 0, i32 28, i32 7, i32 4
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %1
  %34 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 1) #21
  br i1 %34, label %35, label %40

35:                                               ; preds = %33
  %36 = bitcast %"class.gl::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %36) #21
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %5, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__._ZN2gl7Context8initCapsEv, i64 0, i64 0), i32 3565, i32 1) #21
  %37 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %5, i64 0, i32 4
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %37 to %"class.std::__1::basic_ostream"*
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i64 36) #21
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %5) #21
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %36) #21
  br label %40

40:                                               ; preds = %33, %35
  %41 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 119
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 20
  %43 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 162
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 34
  %45 = bitcast %"class.std::__1::vector"* %44 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 25, i1 false)
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 34, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  br label %49

49:                                               ; preds = %1, %40
  %50 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7
  %51 = call dereferenceable(228) %"struct.gl::Extensions"* @_ZN2gl10ExtensionsaSERKS0_(%"struct.gl::Extensions"* %50, %"struct.gl::Extensions"* dereferenceable(228) %26) #21
  %52 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %17, align 8
  %53 = bitcast %"class.rx::ContextImpl"* %52 to %"struct.gl::Limitations"* (%"class.rx::ContextImpl"*)***
  %54 = load %"struct.gl::Limitations"* (%"class.rx::ContextImpl"*)**, %"struct.gl::Limitations"* (%"class.rx::ContextImpl"*)*** %53, align 8
  %55 = getelementptr inbounds %"struct.gl::Limitations"* (%"class.rx::ContextImpl"*)*, %"struct.gl::Limitations"* (%"class.rx::ContextImpl"*)** %54, i64 59
  %56 = load %"struct.gl::Limitations"* (%"class.rx::ContextImpl"*)*, %"struct.gl::Limitations"* (%"class.rx::ContextImpl"*)** %55, align 8
  %57 = call dereferenceable(12) %"struct.gl::Limitations"* %56(%"class.rx::ContextImpl"* %52) #21
  %58 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 8
  %59 = call dereferenceable(12) %"struct.gl::Limitations"* @_ZN2gl11LimitationsaSERKS0_(%"struct.gl::Limitations"* %58, %"struct.gl::Limitations"* dereferenceable(12) %57) #21
  %60 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 12450
  br i1 %62, label %67, label %63

63:                                               ; preds = %49
  %64 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp ult i32 %65, 2
  br i1 %66, label %67, label %74

67:                                               ; preds = %49, %63
  %68 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 112
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 4, i32 6, i32 8, i32 16>, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 116
  store i32 16, i32* %70, align 4
  %71 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 117
  store i32 16, i32* %71, align 8
  %72 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 118
  %73 = bitcast float* %72 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %73, align 4
  br label %74

74:                                               ; preds = %63, %67
  %75 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 57
  %76 = load i32, i32* %75, align 8
  %77 = icmp sgt i32 %76, 16
  br i1 %77, label %78, label %79

78:                                               ; preds = %74
  store i32 16, i32* %75, align 8
  br label %79

79:                                               ; preds = %78, %74
  %80 = phi i32 [ 16, %78 ], [ %76, %74 ]
  %81 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 30
  %82 = load i32, i32* %81, align 8
  %83 = icmp sgt i32 %82, 2048
  br i1 %83, label %84, label %85

84:                                               ; preds = %79
  store i32 2048, i32* %81, align 8
  br label %85

85:                                               ; preds = %79, %84
  %86 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %87 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 1
  %88 = load i32, i32* %86, align 4
  %89 = icmp ult i32 %88, 3
  br i1 %89, label %95, label %90

90:                                               ; preds = %85
  %91 = icmp eq i32 %88, 3
  br i1 %91, label %92, label %97

92:                                               ; preds = %90
  %93 = load i32, i32* %87, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %85, %92
  %96 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 29
  store i32 %80, i32* %96, align 4
  br label %102

97:                                               ; preds = %90, %92
  %98 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 29
  %99 = load i32, i32* %98, align 4
  %100 = icmp sgt i32 %99, 16
  br i1 %100, label %101, label %102

101:                                              ; preds = %97
  store i32 16, i32* %98, align 4
  br label %102

102:                                              ; preds = %95, %97, %101
  %103 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 6
  %104 = load i32, i32* %103, align 4
  %105 = icmp sgt i32 %104, 32768
  br i1 %105, label %106, label %107

106:                                              ; preds = %102
  store i32 32768, i32* %103, align 4
  br label %107

107:                                              ; preds = %106, %102
  %108 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 10
  %109 = load i32, i32* %108, align 4
  %110 = icmp sgt i32 %109, 32768
  br i1 %110, label %111, label %112

111:                                              ; preds = %107
  store i32 32768, i32* %108, align 4
  br label %112

112:                                              ; preds = %111, %107
  %113 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 5
  %114 = load i32, i32* %113, align 8
  %115 = icmp sgt i32 %114, 16384
  br i1 %115, label %116, label %117

116:                                              ; preds = %112
  store i32 16384, i32* %113, align 8
  br label %117

117:                                              ; preds = %116, %112
  %118 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 8
  %119 = load i32, i32* %118, align 4
  %120 = icmp sgt i32 %119, 2048
  br i1 %120, label %121, label %122

121:                                              ; preds = %117
  store i32 2048, i32* %118, align 4
  br label %122

122:                                              ; preds = %121, %117
  %123 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 7
  %124 = load i32, i32* %123, align 8
  %125 = icmp sgt i32 %124, 32768
  br i1 %125, label %126, label %127

126:                                              ; preds = %122
  store i32 32768, i32* %123, align 8
  br label %127

127:                                              ; preds = %126, %122
  %128 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 49, i32 0, i32 0, i64 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp sgt i32 %129, 16
  br i1 %130, label %131, label %132

131:                                              ; preds = %127
  store i32 16, i32* %128, align 4
  br label %132

132:                                              ; preds = %131, %127
  %133 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 49, i32 0, i32 0, i64 3
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %134, 16
  br i1 %135, label %136, label %137

136:                                              ; preds = %132
  store i32 16, i32* %133, align 4
  br label %137

137:                                              ; preds = %136, %132
  %138 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 49, i32 0, i32 0, i64 4
  %139 = load i32, i32* %138, align 4
  %140 = icmp sgt i32 %139, 16
  br i1 %140, label %141, label %142

141:                                              ; preds = %137
  store i32 16, i32* %138, align 4
  br label %142

142:                                              ; preds = %141, %137
  %143 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 49, i32 0, i32 0, i64 5
  %144 = load i32, i32* %143, align 4
  %145 = icmp sgt i32 %144, 16
  br i1 %145, label %146, label %147

146:                                              ; preds = %142
  store i32 16, i32* %143, align 4
  br label %147

147:                                              ; preds = %146, %142
  %148 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 73
  %149 = load i32, i32* %148, align 4
  %150 = icmp sgt i32 %149, 60
  br i1 %150, label %151, label %152

151:                                              ; preds = %147
  store i32 60, i32* %148, align 4
  br label %152

152:                                              ; preds = %151, %147
  %153 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 70
  %154 = load i32, i32* %153, align 4
  %155 = icmp sgt i32 %154, 72
  br i1 %155, label %156, label %157

156:                                              ; preds = %152
  store i32 72, i32* %153, align 4
  br label %157

157:                                              ; preds = %156, %152
  %158 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 59
  %159 = load i32, i32* %158, align 8
  %160 = icmp sgt i32 %159, 128
  br i1 %160, label %161, label %162

161:                                              ; preds = %157
  store i32 128, i32* %158, align 8
  br label %162

162:                                              ; preds = %161, %157
  %163 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 61
  %164 = load i32, i32* %163, align 8
  %165 = icmp sgt i32 %164, 128
  br i1 %165, label %166, label %167

166:                                              ; preds = %162
  store i32 128, i32* %163, align 8
  br label %167

167:                                              ; preds = %166, %162
  %168 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 89
  %169 = load i32, i32* %168, align 8
  %170 = icmp sgt i32 %169, 128
  br i1 %170, label %171, label %172

171:                                              ; preds = %167
  store i32 128, i32* %168, align 8
  br label %172

172:                                              ; preds = %171, %167
  %173 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 90
  %174 = load i32, i32* %173, align 4
  %175 = icmp sgt i32 %174, 4
  br i1 %175, label %176, label %177

176:                                              ; preds = %172
  store i32 4, i32* %173, align 4
  br label %177

177:                                              ; preds = %176, %172
  %178 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 91
  %179 = load i32, i32* %178, align 8
  %180 = icmp sgt i32 %179, 4
  br i1 %180, label %181, label %182

181:                                              ; preds = %177
  store i32 4, i32* %178, align 8
  br label %182

182:                                              ; preds = %177, %181
  br i1 %89, label %188, label %183

183:                                              ; preds = %182
  %184 = icmp eq i32 %88, 3
  br i1 %184, label %185, label %197

185:                                              ; preds = %183
  %186 = load i32, i32* %87, align 4
  %187 = icmp ult i32 %186, 2
  br i1 %187, label %188, label %197

188:                                              ; preds = %182, %185
  %189 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 188
  %190 = load i8, i8* %189, align 1, !range !2
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %192, label %197

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 76
  %194 = load i32, i32* %193, align 8
  %195 = icmp sgt i32 %194, 64
  br i1 %195, label %196, label %202

196:                                              ; preds = %192
  store i32 64, i32* %193, align 8
  br label %202

197:                                              ; preds = %183, %188, %185
  %198 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 76
  %199 = load i32, i32* %198, align 8
  %200 = icmp sgt i32 %199, 96
  br i1 %200, label %201, label %202

201:                                              ; preds = %197
  store i32 96, i32* %198, align 8
  br label %202

202:                                              ; preds = %201, %197, %196, %192
  %203 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 50, i32 0, i32 0, i64 0
  %204 = load i32, i32* %203, align 4
  %205 = icmp sgt i32 %204, 32
  br i1 %205, label %206, label %207

206:                                              ; preds = %202
  store i32 32, i32* %203, align 4
  br label %207

207:                                              ; preds = %206, %202
  %208 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 50, i32 0, i32 0, i64 1
  %209 = load i32, i32* %208, align 4
  %210 = icmp sgt i32 %209, 32
  br i1 %210, label %575, label %576

211:                                              ; preds = %596
  store i32 96, i32* %597, align 4
  br label %212

212:                                              ; preds = %211, %596
  %213 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 84
  %214 = load i32, i32* %213, align 8
  %215 = icmp sgt i32 %214, 96
  br i1 %215, label %216, label %217

216:                                              ; preds = %212
  store i32 96, i32* %213, align 8
  br label %217

217:                                              ; preds = %212, %216
  %218 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 55, i32 0, i32 0, i64 0
  %219 = load i32, i32* %218, align 4
  %220 = icmp sgt i32 %219, 96
  br i1 %220, label %221, label %222

221:                                              ; preds = %217
  store i32 96, i32* %218, align 4
  br label %222

222:                                              ; preds = %221, %217
  %223 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 55, i32 0, i32 0, i64 1
  %224 = load i32, i32* %223, align 4
  %225 = icmp sgt i32 %224, 96
  br i1 %225, label %550, label %551

226:                                              ; preds = %571
  store i32 8, i32* %572, align 4
  br label %227

227:                                              ; preds = %226, %571
  %228 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 53, i32 0, i32 0, i64 1
  %229 = load i32, i32* %228, align 4
  %230 = icmp sgt i32 %229, 8
  br i1 %230, label %525, label %526

231:                                              ; preds = %546
  store i32 8, i32* %547, align 4
  br label %232

232:                                              ; preds = %231, %546
  %233 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 81
  %234 = load i32, i32* %233, align 4
  %235 = icmp sgt i32 %234, 8
  br i1 %235, label %236, label %237

236:                                              ; preds = %232
  store i32 8, i32* %233, align 4
  br label %237

237:                                              ; preds = %232, %236
  %238 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 51, i32 0, i32 0, i64 0
  %239 = load i32, i32* %238, align 4
  %240 = icmp sgt i32 %239, 64
  br i1 %240, label %241, label %242

241:                                              ; preds = %237
  store i32 64, i32* %238, align 4
  br label %242

242:                                              ; preds = %241, %237
  %243 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 51, i32 0, i32 0, i64 1
  %244 = load i32, i32* %243, align 4
  %245 = icmp sgt i32 %244, 64
  br i1 %245, label %500, label %501

246:                                              ; preds = %521
  store i32 64, i32* %522, align 4
  br label %247

247:                                              ; preds = %246, %521
  %248 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 87
  %249 = load i32, i32* %248, align 8
  %250 = icmp sgt i32 %249, 64
  br i1 %250, label %251, label %252

251:                                              ; preds = %247
  store i32 64, i32* %248, align 8
  br label %252

252:                                              ; preds = %251, %247
  %253 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 109
  %254 = load i32, i32* %253, align 8
  %255 = icmp ugt i32 %254, 32
  br i1 %255, label %256, label %257

256:                                              ; preds = %252
  store i32 32, i32* %253, align 8
  br label %257

257:                                              ; preds = %256, %252
  %258 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 93
  %259 = load i32, i32* %258, align 8
  %260 = icmp sgt i32 %259, 256
  br i1 %260, label %261, label %262

261:                                              ; preds = %257
  store i32 256, i32* %258, align 8
  br label %262

262:                                              ; preds = %261, %257
  %263 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 23
  %264 = load i32, i32* %263, align 8
  %265 = icmp sgt i32 %264, 2
  br i1 %265, label %266, label %267

266:                                              ; preds = %262
  store i32 2, i32* %263, align 8
  br label %267

267:                                              ; preds = %262, %266
  %268 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 46
  %269 = load i8, i8* %268, align 8, !range !2
  %270 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 121
  store i8 %269, i8* %270, align 1
  %271 = call dereferenceable(24) %"class.std::__1::map.936"* @_ZN2gl19GetExtensionInfoMapEv() #21
  %272 = getelementptr inbounds %"class.std::__1::map.936", %"class.std::__1::map.936"* %271, i64 0, i32 0, i32 0
  %273 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %272, align 8
  %274 = getelementptr inbounds %"class.std::__1::map.936", %"class.std::__1::map.936"* %271, i64 0, i32 0, i32 1, i32 0, i32 0
  %275 = icmp eq %"class.std::__1::__tree_end_node"* %273, %274
  br i1 %275, label %279, label %276

276:                                              ; preds = %267
  %277 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 48
  %278 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %50, i64 0, i32 0
  br label %282

279:                                              ; preds = %324, %267
  %280 = load i8, i8* %268, align 8, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %333, label %327

282:                                              ; preds = %276, %324
  %283 = phi %"class.std::__1::__tree_end_node"* [ %273, %276 ], [ %325, %324 ]
  %284 = load i8, i8* %277, align 2, !range !2
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %286, label %296

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %283, i64 7
  %288 = bitcast %"class.std::__1::__tree_end_node"* %287 to i8*
  %289 = load i8, i8* %288, align 8, !range !2
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %296, label %291

291:                                              ; preds = %286
  %292 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %283, i64 8
  %293 = bitcast %"class.std::__1::__tree_end_node"* %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = getelementptr inbounds i8, i8* %278, i64 %294
  store i8 0, i8* %295, align 1
  br label %296

296:                                              ; preds = %286, %282, %291
  %297 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %283, i64 1, i32 0
  %298 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %297, align 8
  %299 = icmp eq %"class.std::__1::__tree_node_base"* %298, null
  br i1 %299, label %300, label %308

300:                                              ; preds = %296
  %301 = bitcast %"class.std::__1::__tree_end_node"* %283 to %"class.std::__1::__tree_node_base"*
  %302 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %283, i64 2
  %303 = bitcast %"class.std::__1::__tree_end_node"* %302 to %"class.std::__1::__tree_end_node"**
  %304 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %303, align 8
  %305 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %304, i64 0, i32 0
  %306 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %305, align 8
  %307 = icmp eq %"class.std::__1::__tree_node_base"* %306, %301
  br i1 %307, label %324, label %315

308:                                              ; preds = %296, %308
  %309 = phi %"class.std::__1::__tree_node_base"* [ %311, %308 ], [ %298, %296 ]
  %310 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %309, i64 0, i32 0, i32 0
  %311 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %310, align 8
  %312 = icmp eq %"class.std::__1::__tree_node_base"* %311, null
  br i1 %312, label %313, label %308

313:                                              ; preds = %308
  %314 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %309, i64 0, i32 0
  br label %324

315:                                              ; preds = %300, %315
  %316 = phi %"class.std::__1::__tree_end_node"** [ %319, %315 ], [ %303, %300 ]
  %317 = bitcast %"class.std::__1::__tree_end_node"** %316 to %"class.std::__1::__tree_node_base"**
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %317, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %320 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %319, align 8
  %321 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %320, i64 0, i32 0
  %322 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %321, align 8
  %323 = icmp eq %"class.std::__1::__tree_node_base"* %322, %318
  br i1 %323, label %324, label %315

324:                                              ; preds = %315, %300, %313
  %325 = phi %"class.std::__1::__tree_end_node"* [ %314, %313 ], [ %304, %300 ], [ %320, %315 ]
  %326 = icmp eq %"class.std::__1::__tree_end_node"* %325, %274
  br i1 %326, label %279, label %282

327:                                              ; preds = %279
  %328 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 8, i32 11
  %329 = load i8, i8* %328, align 1, !range !2
  %330 = icmp eq i8 %329, 0
  br i1 %330, label %333, label %331

331:                                              ; preds = %327
  %332 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 30
  store i8 0, i8* %332, align 2
  br label %333

333:                                              ; preds = %327, %279, %331
  %334 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 75, i32 0, i32 0, i32 0
  %335 = load %"class.angle::FrameCapture"*, %"class.angle::FrameCapture"** %334, align 8
  %336 = getelementptr inbounds %"class.angle::FrameCapture", %"class.angle::FrameCapture"* %335, i64 0, i32 3
  %337 = load i8, i8* %336, align 8, !range !2
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %339, label %344

339:                                              ; preds = %333
  %340 = load %"class.egl::Display"*, %"class.egl::Display"** %28, align 8
  %341 = getelementptr inbounds %"class.egl::Display", %"class.egl::Display"* %340, i64 0, i32 28, i32 8, i32 4
  %342 = load i8, i8* %341, align 8, !range !2
  %343 = icmp eq i8 %342, 0
  br i1 %343, label %482, label %344

344:                                              ; preds = %333, %339
  %345 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 1) #21
  br i1 %345, label %346, label %376

346:                                              ; preds = %344
  %347 = bitcast %"class.gl::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %347) #21
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %6, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__._ZN2gl7Context8initCapsEv, i64 0, i64 0), i32 3755, i32 1) #21
  %348 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %6, i64 0, i32 4
  %349 = bitcast %"class.std::__1::basic_ostringstream"* %348 to %"class.std::__1::basic_ostream"*
  %350 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %349, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i64 0, i64 0), i64 28) #21
  %351 = load %"class.angle::FrameCapture"*, %"class.angle::FrameCapture"** %334, align 8
  %352 = getelementptr inbounds %"class.angle::FrameCapture", %"class.angle::FrameCapture"* %351, i64 0, i32 3
  %353 = load i8, i8* %352, align 8, !range !2
  %354 = icmp eq i8 %353, 0
  %355 = select i1 %354, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i64 0, i64 0)
  %356 = select i1 %354, i64 31, i64 23
  %357 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %350, i8* %355, i64 %356) #21
  %358 = bitcast %"class.std::__1::basic_ostream"* %357 to i8**
  %359 = load i8*, i8** %358, align 8
  %360 = getelementptr i8, i8* %359, i64 -24
  %361 = bitcast i8* %360 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = bitcast %"class.std::__1::basic_ostream"* %357 to i8*
  %364 = getelementptr inbounds i8, i8* %363, i64 %362
  %365 = bitcast %"class.std::__1::locale"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %365) #21
  %366 = bitcast i8* %364 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %366) #21
  %367 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %2, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #21
  %368 = bitcast %"class.std::__1::locale::facet"* %367 to %"class.std::__1::ctype"*
  %369 = bitcast %"class.std::__1::locale::facet"* %367 to i8 (%"class.std::__1::ctype"*, i8)***
  %370 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %369, align 8
  %371 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %370, i64 7
  %372 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %371, align 8
  %373 = call signext i8 %372(%"class.std::__1::ctype"* %368, i8 signext 10) #21
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %365) #21
  %374 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %357, i8 signext %373) #21
  %375 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %357) #21
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %6) #21
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %347) #21
  br label %376

376:                                              ; preds = %344, %346
  %377 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 1) #21
  br i1 %377, label %378, label %383

378:                                              ; preds = %376
  %379 = bitcast %"class.gl::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %379) #21
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %7, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__._ZN2gl7Context8initCapsEv, i64 0, i64 0), i32 3760, i32 1) #21
  %380 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %7, i64 0, i32 4
  %381 = bitcast %"class.std::__1::basic_ostringstream"* %380 to %"class.std::__1::basic_ostream"*
  %382 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %381, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.19, i64 0, i64 0), i64 44) #21
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %7) #21
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %379) #21
  br label %383

383:                                              ; preds = %376, %378
  %384 = load %"class.egl::Display"*, %"class.egl::Display"** %28, align 8
  %385 = bitcast %"class.std::__1::vector.125"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %385) #21
  %386 = bitcast [1 x %"class.std::__1::basic_string"]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %386) #21
  %387 = bitcast [1 x %"class.std::__1::basic_string"]* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %388 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %387, i64 0, i32 1, i32 0
  store i8 22, i8* %388, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %386, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i64 22, i1 false) #21
  %389 = getelementptr inbounds i8, i8* %386, i64 22
  store i8 0, i8* %389, align 2
  %390 = call i8* @_Znwm(i64 24) #27
  %391 = getelementptr inbounds %"class.std::__1::vector.125", %"class.std::__1::vector.125"* %8, i64 0, i32 0, i32 1
  %392 = bitcast %"class.std::__1::vector.125"* %8 to i8**
  store i8* %390, i8** %392, align 8
  %393 = getelementptr inbounds i8, i8* %390, i64 24
  %394 = getelementptr inbounds %"class.std::__1::vector.125", %"class.std::__1::vector.125"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %395 = bitcast %"class.std::__1::basic_string"** %394 to i8**
  store i8* %393, i8** %395, align 8
  %396 = bitcast [1 x %"class.std::__1::basic_string"]* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %390, i8* nonnull align 8 %396, i64 24, i1 false) #21
  %397 = getelementptr inbounds i8, i8* %390, i64 24
  %398 = bitcast %"class.std::__1::basic_string"** %391 to i64*
  %399 = ptrtoint i8* %397 to i64
  store i64 %399, i64* %398, align 8
  call void @_ZN3egl7Display24overrideFrontendFeaturesERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEb(%"class.egl::Display"* %384, %"class.std::__1::vector.125"* nonnull dereferenceable(24) %8, i1 zeroext true) #21
  %400 = getelementptr inbounds %"class.std::__1::vector.125", %"class.std::__1::vector.125"* %8, i64 0, i32 0, i32 0
  %401 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %400, align 8
  %402 = icmp eq %"class.std::__1::basic_string"* %401, null
  br i1 %402, label %423, label %403

403:                                              ; preds = %383
  %404 = bitcast %"class.std::__1::basic_string"* %401 to i8*
  %405 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %391, align 8
  %406 = icmp eq %"class.std::__1::basic_string"* %405, %401
  br i1 %406, label %421, label %407

407:                                              ; preds = %403, %417
  %408 = phi %"class.std::__1::basic_string"* [ %409, %417 ], [ %405, %403 ]
  %409 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %408, i64 -1
  %410 = bitcast %"class.std::__1::basic_string"* %409 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %411 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %410, i64 0, i32 1, i32 0
  %412 = load i8, i8* %411, align 1
  %413 = icmp slt i8 %412, 0
  br i1 %413, label %414, label %417

414:                                              ; preds = %407
  %415 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %409, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %416 = load i8*, i8** %415, align 8
  call void @_ZdlPv(i8* %416) #27
  br label %417

417:                                              ; preds = %414, %407
  %418 = icmp eq %"class.std::__1::basic_string"* %409, %401
  br i1 %418, label %419, label %407

419:                                              ; preds = %417
  %420 = load i8*, i8** %392, align 8
  br label %421

421:                                              ; preds = %419, %403
  %422 = phi i8* [ %420, %419 ], [ %404, %403 ]
  store %"class.std::__1::basic_string"* %401, %"class.std::__1::basic_string"** %391, align 8
  call void @_ZdlPv(i8* %422) #27
  br label %423

423:                                              ; preds = %421, %383
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %386) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %385) #21
  %424 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 1) #21
  br i1 %424, label %425, label %431

425:                                              ; preds = %423
  %426 = bitcast %"class.gl::LogMessage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %426) #21
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %10, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__._ZN2gl7Context8initCapsEv, i64 0, i64 0), i32 3765, i32 1) #21
  %427 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %10, i64 0, i32 4
  %428 = bitcast %"class.std::__1::basic_ostringstream"* %427 to %"class.std::__1::basic_ostream"*
  %429 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %428, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.21, i64 0, i64 0), i64 29) #21
  %430 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %429, i32 8) #21
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %10) #21
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %426) #21
  br label %431

431:                                              ; preds = %423, %425
  %432 = load i32, i32* %597, align 4
  %433 = icmp sgt i32 %432, 8
  br i1 %433, label %434, label %435

434:                                              ; preds = %431
  store i32 8, i32* %597, align 4
  br label %435

435:                                              ; preds = %434, %431
  %436 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 1) #21
  br i1 %436, label %437, label %443

437:                                              ; preds = %435
  %438 = bitcast %"class.gl::LogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %438) #21
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %11, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__._ZN2gl7Context8initCapsEv, i64 0, i64 0), i32 3773, i32 1) #21
  %439 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %11, i64 0, i32 4
  %440 = bitcast %"class.std::__1::basic_ostringstream"* %439 to %"class.std::__1::basic_ostream"*
  %441 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %440, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22, i64 0, i64 0), i64 43) #21
  %442 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %441, i32 256) #21
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %11) #21
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %438) #21
  br label %443

443:                                              ; preds = %435, %437
  %444 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 72
  store i32 256, i32* %444, align 8
  %445 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 1) #21
  br i1 %445, label %446, label %451

446:                                              ; preds = %443
  %447 = bitcast %"class.gl::LogMessage"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %447) #21
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %12, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__._ZN2gl7Context8initCapsEv, i64 0, i64 0), i32 3776, i32 1) #21
  %448 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %12, i64 0, i32 4
  %449 = bitcast %"class.std::__1::basic_ostringstream"* %448 to %"class.std::__1::basic_ostream"*
  %450 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %449, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.23, i64 0, i64 0), i64 117) #21
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %12) #21
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %447) #21
  br label %451

451:                                              ; preds = %443, %446
  %452 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 12
  store i8 0, i8* %452, align 4
  %453 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 11
  store i8 0, i8* %453, align 1
  %454 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 1) #21
  br i1 %454, label %455, label %460

455:                                              ; preds = %451
  %456 = bitcast %"class.gl::LogMessage"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %456) #21
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %13, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__._ZN2gl7Context8initCapsEv, i64 0, i64 0), i32 3781, i32 1) #21
  %457 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %13, i64 0, i32 4
  %458 = bitcast %"class.std::__1::basic_ostringstream"* %457 to %"class.std::__1::basic_ostream"*
  %459 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %458, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.24, i64 0, i64 0), i64 100) #21
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %13) #21
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %456) #21
  br label %460

460:                                              ; preds = %451, %455
  %461 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 116
  store i8 0, i8* %461, align 2
  %462 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 1) #21
  br i1 %462, label %463, label %468

463:                                              ; preds = %460
  %464 = bitcast %"class.gl::LogMessage"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %464) #21
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %14, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__._ZN2gl7Context8initCapsEv, i64 0, i64 0), i32 3785, i32 1) #21
  %465 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %14, i64 0, i32 4
  %466 = bitcast %"class.std::__1::basic_ostringstream"* %465 to %"class.std::__1::basic_ostream"*
  %467 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %466, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.25, i64 0, i64 0), i64 112) #21
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %14) #21
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %464) #21
  br label %468

468:                                              ; preds = %460, %463
  %469 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 105
  store i8 0, i8* %469, align 2
  %470 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 1) #21
  br i1 %470, label %471, label %477

471:                                              ; preds = %468
  %472 = bitcast %"class.gl::LogMessage"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %472) #21
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %15, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__._ZN2gl7Context8initCapsEv, i64 0, i64 0), i32 3791, i32 1) #21
  %473 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %15, i64 0, i32 4
  %474 = bitcast %"class.std::__1::basic_ostringstream"* %473 to %"class.std::__1::basic_ostream"*
  %475 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %474, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26, i64 0, i64 0), i64 30) #21
  %476 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %475, i32 4) #21
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %15) #21
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %472) #21
  br label %477

477:                                              ; preds = %468, %471
  %478 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 16
  %479 = load i32, i32* %478, align 4
  %480 = icmp sgt i32 %479, 4
  br i1 %480, label %481, label %482

481:                                              ; preds = %477
  store i32 4, i32* %478, align 4
  br label %482

482:                                              ; preds = %477, %481, %339
  %483 = load %"class.egl::Display"*, %"class.egl::Display"** %28, align 8
  %484 = getelementptr inbounds %"class.egl::Display", %"class.egl::Display"* %483, i64 0, i32 28, i32 5, i32 4
  %485 = load i8, i8* %484, align 8, !range !2
  %486 = icmp eq i8 %485, 0
  br i1 %486, label %499, label %487

487:                                              ; preds = %482
  %488 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 5
  store i8 0, i8* %488, align 1
  %489 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 36
  %490 = bitcast %"class.std::__1::vector"* %489 to i64*
  %491 = load i64, i64* %490, align 8
  %492 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 36, i32 0, i32 1
  %493 = bitcast i32** %492 to i64*
  store i64 %491, i64* %493, align 8
  %494 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 35
  %495 = bitcast %"class.std::__1::vector"* %494 to i64*
  %496 = load i64, i64* %495, align 8
  %497 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 35, i32 0, i32 1
  %498 = bitcast i32** %497 to i64*
  store i64 %496, i64* %498, align 8
  br label %499

499:                                              ; preds = %482, %487
  call void @_ZN2gl7Context10updateCapsEv(%"class.gl::Context"* %0)
  ret void

500:                                              ; preds = %242
  store i32 64, i32* %243, align 4
  br label %501

501:                                              ; preds = %500, %242
  %502 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 51, i32 0, i32 0, i64 2
  %503 = load i32, i32* %502, align 4
  %504 = icmp sgt i32 %503, 64
  br i1 %504, label %505, label %506

505:                                              ; preds = %501
  store i32 64, i32* %502, align 4
  br label %506

506:                                              ; preds = %505, %501
  %507 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 51, i32 0, i32 0, i64 3
  %508 = load i32, i32* %507, align 4
  %509 = icmp sgt i32 %508, 64
  br i1 %509, label %510, label %511

510:                                              ; preds = %506
  store i32 64, i32* %507, align 4
  br label %511

511:                                              ; preds = %510, %506
  %512 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 51, i32 0, i32 0, i64 4
  %513 = load i32, i32* %512, align 4
  %514 = icmp sgt i32 %513, 64
  br i1 %514, label %515, label %516

515:                                              ; preds = %511
  store i32 64, i32* %512, align 4
  br label %516

516:                                              ; preds = %515, %511
  %517 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 51, i32 0, i32 0, i64 5
  %518 = load i32, i32* %517, align 4
  %519 = icmp sgt i32 %518, 64
  br i1 %519, label %520, label %521

520:                                              ; preds = %516
  store i32 64, i32* %517, align 4
  br label %521

521:                                              ; preds = %520, %516
  %522 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 85
  %523 = load i32, i32* %522, align 4
  %524 = icmp sgt i32 %523, 64
  br i1 %524, label %246, label %247

525:                                              ; preds = %227
  store i32 8, i32* %228, align 4
  br label %526

526:                                              ; preds = %525, %227
  %527 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 53, i32 0, i32 0, i64 2
  %528 = load i32, i32* %527, align 4
  %529 = icmp sgt i32 %528, 8
  br i1 %529, label %530, label %531

530:                                              ; preds = %526
  store i32 8, i32* %527, align 4
  br label %531

531:                                              ; preds = %530, %526
  %532 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 53, i32 0, i32 0, i64 3
  %533 = load i32, i32* %532, align 4
  %534 = icmp sgt i32 %533, 8
  br i1 %534, label %535, label %536

535:                                              ; preds = %531
  store i32 8, i32* %532, align 4
  br label %536

536:                                              ; preds = %535, %531
  %537 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 53, i32 0, i32 0, i64 4
  %538 = load i32, i32* %537, align 4
  %539 = icmp sgt i32 %538, 8
  br i1 %539, label %540, label %541

540:                                              ; preds = %536
  store i32 8, i32* %537, align 4
  br label %541

541:                                              ; preds = %540, %536
  %542 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 53, i32 0, i32 0, i64 5
  %543 = load i32, i32* %542, align 4
  %544 = icmp sgt i32 %543, 8
  br i1 %544, label %545, label %546

545:                                              ; preds = %541
  store i32 8, i32* %542, align 4
  br label %546

546:                                              ; preds = %545, %541
  %547 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 79
  %548 = load i32, i32* %547, align 4
  %549 = icmp sgt i32 %548, 8
  br i1 %549, label %231, label %232

550:                                              ; preds = %222
  store i32 96, i32* %223, align 4
  br label %551

551:                                              ; preds = %550, %222
  %552 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 55, i32 0, i32 0, i64 2
  %553 = load i32, i32* %552, align 4
  %554 = icmp sgt i32 %553, 96
  br i1 %554, label %555, label %556

555:                                              ; preds = %551
  store i32 96, i32* %552, align 4
  br label %556

556:                                              ; preds = %555, %551
  %557 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 55, i32 0, i32 0, i64 3
  %558 = load i32, i32* %557, align 4
  %559 = icmp sgt i32 %558, 96
  br i1 %559, label %560, label %561

560:                                              ; preds = %556
  store i32 96, i32* %557, align 4
  br label %561

561:                                              ; preds = %560, %556
  %562 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 55, i32 0, i32 0, i64 4
  %563 = load i32, i32* %562, align 4
  %564 = icmp sgt i32 %563, 96
  br i1 %564, label %565, label %566

565:                                              ; preds = %561
  store i32 96, i32* %562, align 4
  br label %566

566:                                              ; preds = %565, %561
  %567 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 55, i32 0, i32 0, i64 5
  %568 = load i32, i32* %567, align 4
  %569 = icmp sgt i32 %568, 96
  br i1 %569, label %570, label %571

570:                                              ; preds = %566
  store i32 96, i32* %567, align 4
  br label %571

571:                                              ; preds = %570, %566
  %572 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 53, i32 0, i32 0, i64 0
  %573 = load i32, i32* %572, align 4
  %574 = icmp sgt i32 %573, 8
  br i1 %574, label %226, label %227

575:                                              ; preds = %207
  store i32 32, i32* %208, align 4
  br label %576

576:                                              ; preds = %575, %207
  %577 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 50, i32 0, i32 0, i64 2
  %578 = load i32, i32* %577, align 4
  %579 = icmp sgt i32 %578, 32
  br i1 %579, label %580, label %581

580:                                              ; preds = %576
  store i32 32, i32* %577, align 4
  br label %581

581:                                              ; preds = %580, %576
  %582 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 50, i32 0, i32 0, i64 3
  %583 = load i32, i32* %582, align 4
  %584 = icmp sgt i32 %583, 32
  br i1 %584, label %585, label %586

585:                                              ; preds = %581
  store i32 32, i32* %582, align 4
  br label %586

586:                                              ; preds = %585, %581
  %587 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 50, i32 0, i32 0, i64 4
  %588 = load i32, i32* %587, align 4
  %589 = icmp sgt i32 %588, 32
  br i1 %589, label %590, label %591

590:                                              ; preds = %586
  store i32 32, i32* %587, align 4
  br label %591

591:                                              ; preds = %590, %586
  %592 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 50, i32 0, i32 0, i64 5
  %593 = load i32, i32* %592, align 4
  %594 = icmp sgt i32 %593, 32
  br i1 %594, label %595, label %596

595:                                              ; preds = %591
  store i32 32, i32* %592, align 4
  br label %596

596:                                              ; preds = %595, %591
  %597 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 83
  %598 = load i32, i32* %597, align 4
  %599 = icmp sgt i32 %598, 96
  br i1 %599, label %211, label %212
}

declare void @_ZN2gl5State10initializeEPNS_7ContextE(%"class.gl::State"*, %"class.gl::Context"*) local_unnamed_addr #3

declare void @_ZN2gl15HandleAllocator13setBaseHandleEj(%"class.gl::HandleAllocator"*, i32) local_unnamed_addr #3

declare void @_ZN2gl7TextureC1EPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.gl::Texture"*, %"class.rx::GLImplFactory"*, i32, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15bindBufferRangeENS_13BufferBindingEjNS_8BufferIDEll(%"class.gl::Context"*, i8 zeroext, i32, i32, i64, i64) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 10
  %9 = load %"class.gl::BufferManager"*, %"class.gl::BufferManager"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %11 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %9, i64 0, i32 0
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %9, i64 0, i32 0, i32 1, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, %14
  br i1 %17, label %18, label %24

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %9, i64 0, i32 0, i32 1, i32 1
  %20 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %19, align 8
  %21 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %20, i64 %14
  %22 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %21, align 8
  %23 = icmp eq %"class.gl::Buffer"* %22, inttoptr (i64 -1 to %"class.gl::Buffer"*)
  br i1 %23, label %90, label %87

24:                                               ; preds = %6
  %25 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %26 = add i64 %25, %14
  %27 = zext i64 %26 to i128
  %28 = mul nuw i128 %27, 11376068507788127593
  %29 = lshr i128 %28, 64
  %30 = xor i128 %29, %28
  %31 = trunc i128 %30 to i64
  %32 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %9, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %9, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %35 = load i64, i64* %34, align 8
  %36 = lshr i64 %31, 7
  %37 = ptrtoint i8* %33 to i64
  %38 = lshr i64 %37, 12
  %39 = xor i64 %36, %38
  %40 = trunc i128 %30 to i8
  %41 = and i8 %40, 127
  %42 = insertelement <16 x i8> undef, i8 %41, i32 0
  %43 = shufflevector <16 x i8> %42, <16 x i8> undef, <16 x i32> zeroinitializer
  %44 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %9, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %45

45:                                               ; preds = %75, %24
  %46 = phi i64 [ %39, %24 ], [ %77, %75 ]
  %47 = phi i64 [ 0, %24 ], [ %76, %75 ]
  %48 = and i64 %46, %35
  %49 = getelementptr inbounds i8, i8* %33, i64 %48
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1
  %52 = icmp eq <16 x i8> %43, %51
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %71, label %55

55:                                               ; preds = %45
  %56 = zext i16 %53 to i32
  %57 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %44, align 8
  br label %58

58:                                               ; preds = %67, %55
  %59 = phi i32 [ %56, %55 ], [ %69, %67 ]
  %60 = tail call i32 @llvm.cttz.i32(i32 %59, i1 false) #21, !range !8
  %61 = zext i32 %60 to i64
  %62 = add i64 %48, %61
  %63 = and i64 %62, %35
  %64 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %57, i64 %63, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %3
  br i1 %66, label %78, label %67, !prof !9

67:                                               ; preds = %58
  %68 = add i32 %59, -1
  %69 = and i32 %68, %59
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %58

71:                                               ; preds = %67, %45
  %72 = icmp eq <16 x i8> %51, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %73 = bitcast <16 x i1> %72 to i16
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %75, label %90, !prof !10

75:                                               ; preds = %71
  %76 = add i64 %47, 16
  %77 = add i64 %76, %48
  br label %45

78:                                               ; preds = %58
  %79 = getelementptr inbounds i8, i8* %33, i64 %63
  %80 = icmp ne i8* %79, null
  tail call void @llvm.assume(i1 %80) #21
  %81 = load i8, i8* %79, align 1
  %82 = icmp sgt i8 %81, -1
  br i1 %82, label %84, label %83, !prof !9

83:                                               ; preds = %78
  tail call void @llvm.trap() #21
  unreachable

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %57, i64 %63, i32 0, i32 1
  %86 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %85, align 8
  br label %87

87:                                               ; preds = %84, %18
  %88 = phi %"class.gl::Buffer"* [ %22, %18 ], [ %86, %84 ]
  %89 = icmp eq %"class.gl::Buffer"* %88, null
  br i1 %89, label %90, label %94

90:                                               ; preds = %71, %87, %18
  %91 = icmp eq i32 %3, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = tail call %"class.gl::Buffer"* @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE25checkObjectAllocationImplIJEEEPS1_PN2rx13GLImplFactoryES3_DpT_(%"class.gl::TypedResourceManager"* %13, %"class.rx::GLImplFactory"* %12, i32 %3) #21
  br label %94

94:                                               ; preds = %87, %90, %92
  %95 = phi %"class.gl::Buffer"* [ %93, %92 ], [ %88, %87 ], [ null, %90 ]
  %96 = tail call i32 @_ZN2gl5State23setIndexedBufferBindingEPKNS_7ContextENS_13BufferBindingEjPNS_6BufferEll(%"class.gl::State"* %7, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, %"class.gl::Buffer"* %95, i64 %4, i64 %5) #21
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %114, label %98

98:                                               ; preds = %94
  %99 = icmp eq i8 %1, 12
  br i1 %99, label %100, label %109

100:                                              ; preds = %98
  %101 = zext i32 %2 to i64
  %102 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 69, i32 0, i32 0
  %103 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %102, align 8
  %104 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %103, i64 %101
  %105 = icmp eq %"class.gl::Buffer"* %95, null
  %106 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %95, i64 0, i32 3
  %107 = select i1 %105, %"class.angle::Subject"* null, %"class.angle::Subject"* %106
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %104, %"class.angle::Subject"* %107) #21
  %108 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  br label %112

109:                                              ; preds = %98
  %110 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %110, align 8
  %111 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 8
  br label %112

112:                                              ; preds = %109, %100
  %113 = phi i64* [ %108, %100 ], [ %111, %109 ]
  store i64 1, i64* %113, align 8
  br label %114

114:                                              ; preds = %112, %94
  ret void
}

declare void @_ZN2gl5State22initializeZeroTexturesEPKNS_7ContextERKN5angle13PackedEnumMapINS_11TextureTypeENS_14BindingPointerINS_7TextureEEELm11EEE(%"class.gl::State"*, %"class.gl::Context"*, %"class.angle::PackedEnumMap.544"* dereferenceable(176)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15bindVertexArrayENS_13VertexArrayIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = tail call %"class.gl::VertexArray"* @_ZN2gl7Context26checkVertexArrayAllocationENS_13VertexArrayIDE(%"class.gl::Context"* %0, i32 %1)
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State21setVertexArrayBindingEPKNS_7ContextEPNS_11VertexArrayE(%"class.gl::State"* %4, %"class.gl::Context"* %0, %"class.gl::VertexArray"* %3) #21
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 66
  %6 = icmp eq %"class.gl::VertexArray"* %3, null
  %7 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %3, i64 0, i32 2
  %8 = select i1 %6, %"class.angle::Subject"* null, %"class.angle::Subject"* %7
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %5, %"class.angle::Subject"* %8) #21
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache26onVertexArrayBindingChangeEPNS_7ContextE(%"class.gl::StateCache"* %9, %"class.gl::Context"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21bindTransformFeedbackEjNS_19TransformFeedbackIDE(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = tail call %"class.gl::TransformFeedback"* @_ZN2gl7Context32checkTransformFeedbackAllocationENS_19TransformFeedbackIDE(%"class.gl::Context"* %0, i32 %2)
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State27setTransformFeedbackBindingEPKNS_7ContextEPNS_17TransformFeedbackE(%"class.gl::State"* %5, %"class.gl::Context"* %0, %"class.gl::TransformFeedback"* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16bindRenderbufferEjNS_14RenderbufferIDE(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 13
  %6 = load %"class.gl::RenderbufferManager"*, %"class.gl::RenderbufferManager"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %8, i64 0, i32 0
  %10 = tail call %"class.gl::Renderbuffer"* @_ZN2gl19RenderbufferManager27checkRenderbufferAllocationEPN2rx13GLImplFactoryENS_14RenderbufferIDE(%"class.gl::RenderbufferManager"* %6, %"class.rx::GLImplFactory"* %9, i32 %2)
  tail call void @_ZN2gl5State22setRenderbufferBindingEPKNS_7ContextEPNS_12RenderbufferE(%"class.gl::State"* %4, %"class.gl::Context"* %0, %"class.gl::Renderbuffer"* %10) #21
  ret void
}

declare void @_ZN2gl13GLES1RendererC1Ev(%"class.gl::GLES1Renderer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9onDestroyEPKN3egl7DisplayE(%"class.egl::Error"* noalias sret, %"class.gl::Context"*, %"class.egl::Display"*) local_unnamed_addr #5 align 2 {
  %4 = alloca %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", align 8
  %5 = alloca %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", align 8
  %6 = alloca %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", align 8
  %7 = alloca %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", align 8
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 75, i32 0, i32 0, i32 0
  %9 = load %"class.angle::FrameCapture"*, %"class.angle::FrameCapture"** %8, align 8
  tail call void @_ZN5angle12FrameCapture16onDestroyContextEPKN2gl7ContextE(%"class.angle::FrameCapture"* %9, %"class.gl::Context"* %1) #21
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 33, i32 0, i32 0, i32 0
  %11 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %10, align 8
  %12 = icmp eq %"class.gl::GLES1Renderer"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2
  tail call void @_ZN2gl13GLES1Renderer9onDestroyEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %11, %"class.gl::Context"* %1, %"class.gl::State"* %14) #21
  br label %15

15:                                               ; preds = %3, %13
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 81
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %38, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %21 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 -86, i64 16, i1 false)
  tail call void @_ZN2gl7Context13unMakeCurrentEPKN3egl7DisplayE(%"class.egl::Error"* sret %0, %"class.gl::Context"* %1, %"class.egl::Display"* undef)
  %23 = load i32, i32* %20, align 8
  %24 = icmp eq i32 %23, 12288
  br i1 %24, label %25, label %663

25:                                               ; preds = %19
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %21, align 8
  %27 = icmp eq %"class.std::__1::basic_string"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #27
  br label %36

36:                                               ; preds = %33, %28
  %37 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  tail call void @_ZdlPv(i8* %37) #27
  br label %38

38:                                               ; preds = %25, %36, %15
  %39 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 18
  %40 = bitcast %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %40) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 56, i1 false)
  %41 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %39, i64 0, i32 0
  %42 = load i64, i64* %41, align 8, !noalias !11
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 18, i32 1
  %46 = load %"class.gl::FenceNV"**, %"class.gl::FenceNV"*** %45, align 8, !noalias !11
  br label %47

47:                                               ; preds = %52, %44
  %48 = phi i64 [ 0, %44 ], [ %53, %52 ]
  %49 = getelementptr inbounds %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %46, i64 %48
  %50 = bitcast %"class.gl::FenceNV"** %49 to i64*
  %51 = load i64, i64* %50, align 8, !noalias !11
  switch i64 %51, label %55 [
    i64 -1, label %52
    i64 0, label %52
  ]

52:                                               ; preds = %47, %47
  %53 = add nuw i64 %48, 1
  %54 = icmp eq i64 %53, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %52, %47, %38
  %56 = phi i64 [ 0, %38 ], [ %42, %52 ], [ %48, %47 ]
  %57 = trunc i64 %56 to i32
  %58 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 18, i32 2, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8, !noalias !11
  %60 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 18, i32 2, i32 0, i32 0, i32 1
  %61 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %60, align 8, !noalias !11
  %62 = icmp ne i8* %59, null
  tail call void @llvm.assume(i1 %62) #21, !noalias !11
  %63 = load i8, i8* %59, align 1, !noalias !11
  %64 = icmp slt i8 %63, -1
  br i1 %64, label %65, label %80

65:                                               ; preds = %55, %65
  %66 = phi %"union.absl::container_internal::map_slot_type.550"* [ %77, %65 ], [ %61, %55 ]
  %67 = phi i8* [ %76, %65 ], [ %59, %55 ]
  %68 = bitcast i8* %67 to <16 x i8>*
  %69 = load <16 x i8>, <16 x i8>* %68, align 1, !noalias !11
  %70 = icmp slt <16 x i8> %69, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %71 = bitcast <16 x i1> %70 to i16
  %72 = zext i16 %71 to i32
  %73 = add nuw nsw i32 %72, 1
  %74 = tail call i32 @llvm.cttz.i32(i32 %73, i1 true) #21, !range !8
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %67, i64 %75
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %66, i64 %75
  %78 = load i8, i8* %76, align 1, !noalias !11
  %79 = icmp slt i8 %78, -1
  br i1 %79, label %65, label %80

80:                                               ; preds = %65, %55
  %81 = phi %"union.absl::container_internal::map_slot_type.550"* [ %61, %55 ], [ %77, %65 ]
  %82 = phi i8* [ %59, %55 ], [ %76, %65 ]
  %83 = phi i8 [ %63, %55 ], [ %78, %65 ]
  %84 = icmp eq i8 %83, -1
  %85 = select i1 %84, i8* null, i8* %82, !prof !10
  %86 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %4, i64 0, i32 0
  store %"class.gl::ResourceMap.546"* %39, %"class.gl::ResourceMap.546"** %86, align 8, !alias.scope !11
  %87 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %4, i64 0, i32 1
  store i32 %57, i32* %87, align 8, !alias.scope !11
  %88 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %4, i64 0, i32 3, i32 0, i32 0
  store i8* %85, i8** %88, align 8, !alias.scope !11
  %89 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %4, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.550"* %81, %"union.absl::container_internal::map_slot_type.550"** %89, align 8, !alias.scope !11
  %90 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %4, i64 0, i32 4, i32 0
  store i32 0, i32* %90, align 8, !alias.scope !11
  %91 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %4, i64 0, i32 4, i32 1
  store %"class.gl::FenceNV"* null, %"class.gl::FenceNV"** %91, align 8, !alias.scope !11
  %92 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %4, i64 0, i32 5
  store i8 1, i8* %92, align 8, !alias.scope !11
  %93 = trunc i64 %42 to i32
  %94 = icmp ugt i32 %93, %57
  br i1 %94, label %95, label %100

95:                                               ; preds = %80
  store i32 %57, i32* %90, align 8, !alias.scope !11
  %96 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 18, i32 1
  %97 = load %"class.gl::FenceNV"**, %"class.gl::FenceNV"*** %96, align 8, !noalias !11
  %98 = and i64 %56, 4294967295
  %99 = getelementptr inbounds %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %97, i64 %98
  br label %110

100:                                              ; preds = %80
  %101 = icmp eq i8* %85, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %100
  %103 = load i8, i8* %85, align 1, !noalias !11
  %104 = icmp sgt i8 %103, -1
  br i1 %104, label %106, label %105, !prof !9

105:                                              ; preds = %102
  tail call void @llvm.trap() #21, !noalias !11
  unreachable

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %81, i64 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 8, !noalias !11
  store i32 %108, i32* %90, align 8, !alias.scope !11
  %109 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %81, i64 0, i32 0, i32 1
  br label %110

110:                                              ; preds = %106, %95
  %111 = phi %"class.gl::FenceNV"** [ %99, %95 ], [ %109, %106 ]
  %112 = bitcast %"class.gl::FenceNV"** %111 to i64*
  %113 = load i64, i64* %112, align 8, !noalias !11
  %114 = bitcast %"class.gl::FenceNV"** %91 to i64*
  store i64 %113, i64* %114, align 8, !alias.scope !11
  br label %115

115:                                              ; preds = %110, %100
  br label %116

116:                                              ; preds = %115, %240
  %117 = phi i32 [ %242, %240 ], [ %57, %115 ]
  %118 = icmp eq i32 %117, %93
  br i1 %118, label %119, label %232

119:                                              ; preds = %116
  %120 = load i8*, i8** %88, align 8
  %121 = icmp eq i8* %120, null
  br i1 %121, label %126, label %122

122:                                              ; preds = %119
  %123 = load i8, i8* %120, align 1
  %124 = icmp sgt i8 %123, -1
  br i1 %124, label %232, label %125, !prof !9

125:                                              ; preds = %122
  call void @llvm.trap() #21
  unreachable

126:                                              ; preds = %119
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %40) #21
  %127 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 18, i32 1
  %128 = bitcast %"class.gl::FenceNV"*** %127 to i8**
  %129 = load i8*, i8** %128, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 -1, i64 256, i1 false) #21
  store i64 32, i64* %41, align 8
  %130 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 18, i32 2, i32 0, i32 0
  %131 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 18, i32 2, i32 0, i32 0, i32 3
  %132 = load i64, i64* %131, align 8
  %133 = icmp ugt i64 %132, 127
  br i1 %133, label %134, label %138

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %130, i64 0, i32 0
  %136 = load i8*, i8** %135, align 8
  call void @_ZdlPv(i8* %136) #27
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %135, align 8
  %137 = bitcast %"union.absl::container_internal::map_slot_type.550"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 32, i1 false) #21
  br label %154

138:                                              ; preds = %126
  %139 = icmp eq i64 %132, 0
  br i1 %139, label %154, label %140

140:                                              ; preds = %138
  %141 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 18, i32 2, i32 0, i32 0, i32 2
  store i64 0, i64* %141, align 8
  %142 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %130, i64 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = add nuw nsw i64 %132, 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %143, i8 -128, i64 %144, i1 false) #21
  %145 = load i8*, i8** %142, align 8
  %146 = load i64, i64* %131, align 8
  %147 = getelementptr inbounds i8, i8* %145, i64 %146
  store i8 -1, i8* %147, align 1
  %148 = load i64, i64* %131, align 8
  %149 = lshr i64 %148, 3
  %150 = sub i64 %148, %149
  %151 = load i64, i64* %141, align 8
  %152 = sub i64 %150, %151
  %153 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 18, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %152, i64* %153, align 8
  br label %154

154:                                              ; preds = %134, %138, %140
  %155 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 20
  %156 = bitcast %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %156) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %156, i8 -86, i64 56, i1 false)
  %157 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %155, i64 0, i32 0
  %158 = load i64, i64* %157, align 8, !noalias !14
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 20, i32 1
  %162 = load %"class.gl::Query"**, %"class.gl::Query"*** %161, align 8, !noalias !14
  br label %163

163:                                              ; preds = %168, %160
  %164 = phi i64 [ 0, %160 ], [ %169, %168 ]
  %165 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %162, i64 %164
  %166 = bitcast %"class.gl::Query"** %165 to i64*
  %167 = load i64, i64* %166, align 8, !noalias !14
  switch i64 %167, label %171 [
    i64 -1, label %168
    i64 0, label %168
  ]

168:                                              ; preds = %163, %163
  %169 = add nuw i64 %164, 1
  %170 = icmp eq i64 %169, %158
  br i1 %170, label %171, label %163

171:                                              ; preds = %168, %163, %154
  %172 = phi i64 [ 0, %154 ], [ %158, %168 ], [ %164, %163 ]
  %173 = trunc i64 %172 to i32
  %174 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 20, i32 2, i32 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8, !noalias !14
  %176 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 20, i32 2, i32 0, i32 0, i32 1
  %177 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %176, align 8, !noalias !14
  %178 = icmp ne i8* %175, null
  call void @llvm.assume(i1 %178) #21, !noalias !14
  %179 = load i8, i8* %175, align 1, !noalias !14
  %180 = icmp slt i8 %179, -1
  br i1 %180, label %181, label %196

181:                                              ; preds = %171, %181
  %182 = phi %"union.absl::container_internal::map_slot_type.560"* [ %193, %181 ], [ %177, %171 ]
  %183 = phi i8* [ %192, %181 ], [ %175, %171 ]
  %184 = bitcast i8* %183 to <16 x i8>*
  %185 = load <16 x i8>, <16 x i8>* %184, align 1, !noalias !14
  %186 = icmp slt <16 x i8> %185, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %187 = bitcast <16 x i1> %186 to i16
  %188 = zext i16 %187 to i32
  %189 = add nuw nsw i32 %188, 1
  %190 = call i32 @llvm.cttz.i32(i32 %189, i1 true) #21, !range !8
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds i8, i8* %183, i64 %191
  %193 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %182, i64 %191
  %194 = load i8, i8* %192, align 1, !noalias !14
  %195 = icmp slt i8 %194, -1
  br i1 %195, label %181, label %196

196:                                              ; preds = %181, %171
  %197 = phi %"union.absl::container_internal::map_slot_type.560"* [ %177, %171 ], [ %193, %181 ]
  %198 = phi i8* [ %175, %171 ], [ %192, %181 ]
  %199 = phi i8 [ %179, %171 ], [ %194, %181 ]
  %200 = icmp eq i8 %199, -1
  %201 = select i1 %200, i8* null, i8* %198, !prof !10
  %202 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %5, i64 0, i32 0
  store %"class.gl::ResourceMap.556"* %155, %"class.gl::ResourceMap.556"** %202, align 8, !alias.scope !14
  %203 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %5, i64 0, i32 1
  store i32 %173, i32* %203, align 8, !alias.scope !14
  %204 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %5, i64 0, i32 3, i32 0, i32 0
  store i8* %201, i8** %204, align 8, !alias.scope !14
  %205 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %5, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.560"* %197, %"union.absl::container_internal::map_slot_type.560"** %205, align 8, !alias.scope !14
  %206 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %5, i64 0, i32 4, i32 0
  store i32 0, i32* %206, align 8, !alias.scope !14
  %207 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %5, i64 0, i32 4, i32 1
  store %"class.gl::Query"* null, %"class.gl::Query"** %207, align 8, !alias.scope !14
  %208 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %5, i64 0, i32 5
  store i8 1, i8* %208, align 8, !alias.scope !14
  %209 = trunc i64 %158 to i32
  %210 = icmp ugt i32 %209, %173
  br i1 %210, label %211, label %216

211:                                              ; preds = %196
  store i32 %173, i32* %206, align 8, !alias.scope !14
  %212 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 20, i32 1
  %213 = load %"class.gl::Query"**, %"class.gl::Query"*** %212, align 8, !noalias !14
  %214 = and i64 %172, 4294967295
  %215 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %213, i64 %214
  br label %227

216:                                              ; preds = %196
  %217 = icmp eq i8* %201, null
  br i1 %217, label %218, label %219

218:                                              ; preds = %227, %216
  br label %243

219:                                              ; preds = %216
  %220 = load i8, i8* %201, align 1, !noalias !14
  %221 = icmp sgt i8 %220, -1
  br i1 %221, label %223, label %222, !prof !9

222:                                              ; preds = %219
  call void @llvm.trap() #21, !noalias !14
  unreachable

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %197, i64 0, i32 0, i32 0
  %225 = load i32, i32* %224, align 8, !noalias !14
  store i32 %225, i32* %206, align 8, !alias.scope !14
  %226 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %197, i64 0, i32 0, i32 1
  br label %227

227:                                              ; preds = %223, %211
  %228 = phi %"class.gl::Query"** [ %215, %211 ], [ %226, %223 ]
  %229 = bitcast %"class.gl::Query"** %228 to i64*
  %230 = load i64, i64* %229, align 8, !noalias !14
  %231 = bitcast %"class.gl::Query"** %207 to i64*
  store i64 %230, i64* %231, align 8, !alias.scope !14
  br label %218

232:                                              ; preds = %122, %116
  %233 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %91, align 8
  %234 = icmp eq %"class.gl::FenceNV"* %233, null
  br i1 %234, label %240, label %235

235:                                              ; preds = %232
  call void @_ZN2gl7FenceNV9onDestroyEPKNS_7ContextE(%"class.gl::FenceNV"* nonnull %233, %"class.gl::Context"* %1) #21
  %236 = bitcast %"class.gl::FenceNV"* %233 to void (%"class.gl::FenceNV"*)***
  %237 = load void (%"class.gl::FenceNV"*)**, void (%"class.gl::FenceNV"*)*** %236, align 8
  %238 = getelementptr inbounds void (%"class.gl::FenceNV"*)*, void (%"class.gl::FenceNV"*)** %237, i64 1
  %239 = load void (%"class.gl::FenceNV"*)*, void (%"class.gl::FenceNV"*)** %238, align 8
  call void %239(%"class.gl::FenceNV"* nonnull %233) #21
  br label %240

240:                                              ; preds = %232, %235
  %241 = call dereferenceable(56) %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* @_ZN2gl11ResourceMapINS_7FenceNVENS_9FenceNVIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* nonnull %4)
  %242 = load i32, i32* %87, align 8
  br label %116

243:                                              ; preds = %218, %376
  %244 = phi i32 [ %378, %376 ], [ %173, %218 ]
  %245 = icmp eq i32 %244, %209
  br i1 %245, label %246, label %359

246:                                              ; preds = %243
  %247 = load i8*, i8** %204, align 8
  %248 = icmp eq i8* %247, null
  br i1 %248, label %253, label %249

249:                                              ; preds = %246
  %250 = load i8, i8* %247, align 1
  %251 = icmp sgt i8 %250, -1
  br i1 %251, label %359, label %252, !prof !9

252:                                              ; preds = %249
  call void @llvm.trap() #21
  unreachable

253:                                              ; preds = %246
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %156) #21
  %254 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 20, i32 1
  %255 = bitcast %"class.gl::Query"*** %254 to i8**
  %256 = load i8*, i8** %255, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %256, i8 -1, i64 256, i1 false) #21
  store i64 32, i64* %157, align 8
  %257 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 20, i32 2, i32 0, i32 0
  %258 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 20, i32 2, i32 0, i32 0, i32 3
  %259 = load i64, i64* %258, align 8
  %260 = icmp ugt i64 %259, 127
  br i1 %260, label %261, label %265

261:                                              ; preds = %253
  %262 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %257, i64 0, i32 0
  %263 = load i8*, i8** %262, align 8
  call void @_ZdlPv(i8* %263) #27
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %262, align 8
  %264 = bitcast %"union.absl::container_internal::map_slot_type.560"** %176 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %264, i8 0, i64 32, i1 false) #21
  br label %281

265:                                              ; preds = %253
  %266 = icmp eq i64 %259, 0
  br i1 %266, label %281, label %267

267:                                              ; preds = %265
  %268 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 20, i32 2, i32 0, i32 0, i32 2
  store i64 0, i64* %268, align 8
  %269 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %257, i64 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = add nuw nsw i64 %259, 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %270, i8 -128, i64 %271, i1 false) #21
  %272 = load i8*, i8** %269, align 8
  %273 = load i64, i64* %258, align 8
  %274 = getelementptr inbounds i8, i8* %272, i64 %273
  store i8 -1, i8* %274, align 1
  %275 = load i64, i64* %258, align 8
  %276 = lshr i64 %275, 3
  %277 = sub i64 %275, %276
  %278 = load i64, i64* %268, align 8
  %279 = sub i64 %277, %278
  %280 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 20, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %279, i64* %280, align 8
  br label %281

281:                                              ; preds = %261, %265, %267
  %282 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 22
  %283 = bitcast %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %283) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %283, i8 -86, i64 56, i1 false)
  %284 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %282, i64 0, i32 0
  %285 = load i64, i64* %284, align 8, !noalias !17
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %298, label %287

287:                                              ; preds = %281
  %288 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 22, i32 1
  %289 = load %"class.gl::VertexArray"**, %"class.gl::VertexArray"*** %288, align 8, !noalias !17
  br label %290

290:                                              ; preds = %295, %287
  %291 = phi i64 [ 0, %287 ], [ %296, %295 ]
  %292 = getelementptr inbounds %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %289, i64 %291
  %293 = bitcast %"class.gl::VertexArray"** %292 to i64*
  %294 = load i64, i64* %293, align 8, !noalias !17
  switch i64 %294, label %298 [
    i64 -1, label %295
    i64 0, label %295
  ]

295:                                              ; preds = %290, %290
  %296 = add nuw i64 %291, 1
  %297 = icmp eq i64 %296, %285
  br i1 %297, label %298, label %290

298:                                              ; preds = %295, %290, %281
  %299 = phi i64 [ 0, %281 ], [ %285, %295 ], [ %291, %290 ]
  %300 = trunc i64 %299 to i32
  %301 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 22, i32 2, i32 0, i32 0, i32 0
  %302 = load i8*, i8** %301, align 8, !noalias !17
  %303 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 22, i32 2, i32 0, i32 0, i32 1
  %304 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %303, align 8, !noalias !17
  %305 = icmp ne i8* %302, null
  call void @llvm.assume(i1 %305) #21, !noalias !17
  %306 = load i8, i8* %302, align 1, !noalias !17
  %307 = icmp slt i8 %306, -1
  br i1 %307, label %308, label %323

308:                                              ; preds = %298, %308
  %309 = phi %"union.absl::container_internal::map_slot_type.570"* [ %320, %308 ], [ %304, %298 ]
  %310 = phi i8* [ %319, %308 ], [ %302, %298 ]
  %311 = bitcast i8* %310 to <16 x i8>*
  %312 = load <16 x i8>, <16 x i8>* %311, align 1, !noalias !17
  %313 = icmp slt <16 x i8> %312, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %314 = bitcast <16 x i1> %313 to i16
  %315 = zext i16 %314 to i32
  %316 = add nuw nsw i32 %315, 1
  %317 = call i32 @llvm.cttz.i32(i32 %316, i1 true) #21, !range !8
  %318 = zext i32 %317 to i64
  %319 = getelementptr inbounds i8, i8* %310, i64 %318
  %320 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %309, i64 %318
  %321 = load i8, i8* %319, align 1, !noalias !17
  %322 = icmp slt i8 %321, -1
  br i1 %322, label %308, label %323

323:                                              ; preds = %308, %298
  %324 = phi %"union.absl::container_internal::map_slot_type.570"* [ %304, %298 ], [ %320, %308 ]
  %325 = phi i8* [ %302, %298 ], [ %319, %308 ]
  %326 = phi i8 [ %306, %298 ], [ %321, %308 ]
  %327 = icmp eq i8 %326, -1
  %328 = select i1 %327, i8* null, i8* %325, !prof !10
  %329 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %6, i64 0, i32 0
  store %"class.gl::ResourceMap.566"* %282, %"class.gl::ResourceMap.566"** %329, align 8, !alias.scope !17
  %330 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %6, i64 0, i32 1
  store i32 %300, i32* %330, align 8, !alias.scope !17
  %331 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %6, i64 0, i32 3, i32 0, i32 0
  store i8* %328, i8** %331, align 8, !alias.scope !17
  %332 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %6, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.570"* %324, %"union.absl::container_internal::map_slot_type.570"** %332, align 8, !alias.scope !17
  %333 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %6, i64 0, i32 4, i32 0
  store i32 0, i32* %333, align 8, !alias.scope !17
  %334 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %6, i64 0, i32 4, i32 1
  store %"class.gl::VertexArray"* null, %"class.gl::VertexArray"** %334, align 8, !alias.scope !17
  %335 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %6, i64 0, i32 5
  store i8 1, i8* %335, align 8, !alias.scope !17
  %336 = trunc i64 %285 to i32
  %337 = icmp ugt i32 %336, %300
  br i1 %337, label %338, label %343

338:                                              ; preds = %323
  store i32 %300, i32* %333, align 8, !alias.scope !17
  %339 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 22, i32 1
  %340 = load %"class.gl::VertexArray"**, %"class.gl::VertexArray"*** %339, align 8, !noalias !17
  %341 = and i64 %299, 4294967295
  %342 = getelementptr inbounds %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %340, i64 %341
  br label %354

343:                                              ; preds = %323
  %344 = icmp eq i8* %328, null
  br i1 %344, label %345, label %346

345:                                              ; preds = %354, %343
  br label %379

346:                                              ; preds = %343
  %347 = load i8, i8* %328, align 1, !noalias !17
  %348 = icmp sgt i8 %347, -1
  br i1 %348, label %350, label %349, !prof !9

349:                                              ; preds = %346
  call void @llvm.trap() #21, !noalias !17
  unreachable

350:                                              ; preds = %346
  %351 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %324, i64 0, i32 0, i32 0
  %352 = load i32, i32* %351, align 8, !noalias !17
  store i32 %352, i32* %333, align 8, !alias.scope !17
  %353 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %324, i64 0, i32 0, i32 1
  br label %354

354:                                              ; preds = %350, %338
  %355 = phi %"class.gl::VertexArray"** [ %342, %338 ], [ %353, %350 ]
  %356 = bitcast %"class.gl::VertexArray"** %355 to i64*
  %357 = load i64, i64* %356, align 8, !noalias !17
  %358 = bitcast %"class.gl::VertexArray"** %334 to i64*
  store i64 %357, i64* %358, align 8, !alias.scope !17
  br label %345

359:                                              ; preds = %249, %243
  %360 = load %"class.gl::Query"*, %"class.gl::Query"** %207, align 8
  %361 = icmp eq %"class.gl::Query"* %360, null
  br i1 %361, label %376, label %362

362:                                              ; preds = %359
  %363 = getelementptr inbounds %"class.gl::Query", %"class.gl::Query"* %360, i64 0, i32 0, i32 0
  %364 = getelementptr inbounds %"class.gl::Query", %"class.gl::Query"* %360, i64 0, i32 0, i32 0, i32 1
  %365 = load i64, i64* %364, align 8
  %366 = add i64 %365, -1
  store i64 %366, i64* %364, align 8
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %368, label %376

368:                                              ; preds = %362
  %369 = bitcast %"class.gl::Query"* %360 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %370 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %369, align 8
  %371 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %370, align 8
  call void %371(%"class.angle::RefCountObject"* %363, %"class.gl::Context"* %1) #21
  %372 = bitcast %"class.gl::Query"* %360 to void (%"class.angle::RefCountObject"*)***
  %373 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %372, align 8
  %374 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %373, i64 2
  %375 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %374, align 8
  call void %375(%"class.angle::RefCountObject"* nonnull %363) #21
  br label %376

376:                                              ; preds = %368, %362, %359
  %377 = call dereferenceable(56) %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* @_ZN2gl11ResourceMapINS_5QueryENS_7QueryIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* nonnull %5)
  %378 = load i32, i32* %203, align 8
  br label %243

379:                                              ; preds = %345, %499
  %380 = phi i32 [ %501, %499 ], [ %300, %345 ]
  %381 = icmp eq i32 %380, %336
  br i1 %381, label %382, label %495

382:                                              ; preds = %379
  %383 = load i8*, i8** %331, align 8
  %384 = icmp eq i8* %383, null
  br i1 %384, label %389, label %385

385:                                              ; preds = %382
  %386 = load i8, i8* %383, align 1
  %387 = icmp sgt i8 %386, -1
  br i1 %387, label %495, label %388, !prof !9

388:                                              ; preds = %385
  call void @llvm.trap() #21
  unreachable

389:                                              ; preds = %382
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %283) #21
  %390 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 22, i32 1
  %391 = bitcast %"class.gl::VertexArray"*** %390 to i8**
  %392 = load i8*, i8** %391, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %392, i8 -1, i64 256, i1 false) #21
  store i64 32, i64* %284, align 8
  %393 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 22, i32 2, i32 0, i32 0
  %394 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 22, i32 2, i32 0, i32 0, i32 3
  %395 = load i64, i64* %394, align 8
  %396 = icmp ugt i64 %395, 127
  br i1 %396, label %397, label %401

397:                                              ; preds = %389
  %398 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %393, i64 0, i32 0
  %399 = load i8*, i8** %398, align 8
  call void @_ZdlPv(i8* %399) #27
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %398, align 8
  %400 = bitcast %"union.absl::container_internal::map_slot_type.570"** %303 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %400, i8 0, i64 32, i1 false) #21
  br label %417

401:                                              ; preds = %389
  %402 = icmp eq i64 %395, 0
  br i1 %402, label %417, label %403

403:                                              ; preds = %401
  %404 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 22, i32 2, i32 0, i32 0, i32 2
  store i64 0, i64* %404, align 8
  %405 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %393, i64 0, i32 0
  %406 = load i8*, i8** %405, align 8
  %407 = add nuw nsw i64 %395, 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %406, i8 -128, i64 %407, i1 false) #21
  %408 = load i8*, i8** %405, align 8
  %409 = load i64, i64* %394, align 8
  %410 = getelementptr inbounds i8, i8* %408, i64 %409
  store i8 -1, i8* %410, align 1
  %411 = load i64, i64* %394, align 8
  %412 = lshr i64 %411, 3
  %413 = sub i64 %411, %412
  %414 = load i64, i64* %404, align 8
  %415 = sub i64 %413, %414
  %416 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 22, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %415, i64* %416, align 8
  br label %417

417:                                              ; preds = %397, %401, %403
  %418 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 24
  %419 = bitcast %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %419) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %419, i8 -86, i64 56, i1 false)
  %420 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %418, i64 0, i32 0
  %421 = load i64, i64* %420, align 8, !noalias !20
  %422 = icmp eq i64 %421, 0
  br i1 %422, label %434, label %423

423:                                              ; preds = %417
  %424 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 24, i32 1
  %425 = load %"class.gl::TransformFeedback"**, %"class.gl::TransformFeedback"*** %424, align 8, !noalias !20
  br label %426

426:                                              ; preds = %431, %423
  %427 = phi i64 [ 0, %423 ], [ %432, %431 ]
  %428 = getelementptr inbounds %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %425, i64 %427
  %429 = bitcast %"class.gl::TransformFeedback"** %428 to i64*
  %430 = load i64, i64* %429, align 8, !noalias !20
  switch i64 %430, label %434 [
    i64 -1, label %431
    i64 0, label %431
  ]

431:                                              ; preds = %426, %426
  %432 = add nuw i64 %427, 1
  %433 = icmp eq i64 %432, %421
  br i1 %433, label %434, label %426

434:                                              ; preds = %431, %426, %417
  %435 = phi i64 [ 0, %417 ], [ %421, %431 ], [ %427, %426 ]
  %436 = trunc i64 %435 to i32
  %437 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 24, i32 2, i32 0, i32 0, i32 0
  %438 = load i8*, i8** %437, align 8, !noalias !20
  %439 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 24, i32 2, i32 0, i32 0, i32 1
  %440 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %439, align 8, !noalias !20
  %441 = icmp ne i8* %438, null
  call void @llvm.assume(i1 %441) #21, !noalias !20
  %442 = load i8, i8* %438, align 1, !noalias !20
  %443 = icmp slt i8 %442, -1
  br i1 %443, label %444, label %459

444:                                              ; preds = %434, %444
  %445 = phi %"union.absl::container_internal::map_slot_type.580"* [ %456, %444 ], [ %440, %434 ]
  %446 = phi i8* [ %455, %444 ], [ %438, %434 ]
  %447 = bitcast i8* %446 to <16 x i8>*
  %448 = load <16 x i8>, <16 x i8>* %447, align 1, !noalias !20
  %449 = icmp slt <16 x i8> %448, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %450 = bitcast <16 x i1> %449 to i16
  %451 = zext i16 %450 to i32
  %452 = add nuw nsw i32 %451, 1
  %453 = call i32 @llvm.cttz.i32(i32 %452, i1 true) #21, !range !8
  %454 = zext i32 %453 to i64
  %455 = getelementptr inbounds i8, i8* %446, i64 %454
  %456 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %445, i64 %454
  %457 = load i8, i8* %455, align 1, !noalias !20
  %458 = icmp slt i8 %457, -1
  br i1 %458, label %444, label %459

459:                                              ; preds = %444, %434
  %460 = phi %"union.absl::container_internal::map_slot_type.580"* [ %440, %434 ], [ %456, %444 ]
  %461 = phi i8* [ %438, %434 ], [ %455, %444 ]
  %462 = phi i8 [ %442, %434 ], [ %457, %444 ]
  %463 = icmp eq i8 %462, -1
  %464 = select i1 %463, i8* null, i8* %461, !prof !10
  %465 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %7, i64 0, i32 0
  store %"class.gl::ResourceMap.576"* %418, %"class.gl::ResourceMap.576"** %465, align 8, !alias.scope !20
  %466 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %7, i64 0, i32 1
  store i32 %436, i32* %466, align 8, !alias.scope !20
  %467 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %7, i64 0, i32 3, i32 0, i32 0
  store i8* %464, i8** %467, align 8, !alias.scope !20
  %468 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %7, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.580"* %460, %"union.absl::container_internal::map_slot_type.580"** %468, align 8, !alias.scope !20
  %469 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %7, i64 0, i32 4, i32 0
  store i32 0, i32* %469, align 8, !alias.scope !20
  %470 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %7, i64 0, i32 4, i32 1
  store %"class.gl::TransformFeedback"* null, %"class.gl::TransformFeedback"** %470, align 8, !alias.scope !20
  %471 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %7, i64 0, i32 5
  store i8 1, i8* %471, align 8, !alias.scope !20
  %472 = trunc i64 %421 to i32
  %473 = icmp ugt i32 %472, %436
  br i1 %473, label %474, label %479

474:                                              ; preds = %459
  store i32 %436, i32* %469, align 8, !alias.scope !20
  %475 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 24, i32 1
  %476 = load %"class.gl::TransformFeedback"**, %"class.gl::TransformFeedback"*** %475, align 8, !noalias !20
  %477 = and i64 %435, 4294967295
  %478 = getelementptr inbounds %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %476, i64 %477
  br label %490

479:                                              ; preds = %459
  %480 = icmp eq i8* %464, null
  br i1 %480, label %481, label %482

481:                                              ; preds = %490, %479
  br label %502

482:                                              ; preds = %479
  %483 = load i8, i8* %464, align 1, !noalias !20
  %484 = icmp sgt i8 %483, -1
  br i1 %484, label %486, label %485, !prof !9

485:                                              ; preds = %482
  call void @llvm.trap() #21, !noalias !20
  unreachable

486:                                              ; preds = %482
  %487 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %460, i64 0, i32 0, i32 0
  %488 = load i32, i32* %487, align 8, !noalias !20
  store i32 %488, i32* %469, align 8, !alias.scope !20
  %489 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %460, i64 0, i32 0, i32 1
  br label %490

490:                                              ; preds = %486, %474
  %491 = phi %"class.gl::TransformFeedback"** [ %478, %474 ], [ %489, %486 ]
  %492 = bitcast %"class.gl::TransformFeedback"** %491 to i64*
  %493 = load i64, i64* %492, align 8, !noalias !20
  %494 = bitcast %"class.gl::TransformFeedback"** %470 to i64*
  store i64 %493, i64* %494, align 8, !alias.scope !20
  br label %481

495:                                              ; preds = %385, %379
  %496 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %334, align 8
  %497 = icmp eq %"class.gl::VertexArray"* %496, null
  br i1 %497, label %499, label %498

498:                                              ; preds = %495
  call void @_ZN2gl11VertexArray9onDestroyEPKNS_7ContextE(%"class.gl::VertexArray"* nonnull %496, %"class.gl::Context"* %1) #21
  br label %499

499:                                              ; preds = %495, %498
  %500 = call dereferenceable(56) %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* @_ZN2gl11ResourceMapINS_11VertexArrayENS_13VertexArrayIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* nonnull %6)
  %501 = load i32, i32* %330, align 8
  br label %379

502:                                              ; preds = %481, %560
  %503 = phi i32 [ %562, %560 ], [ %436, %481 ]
  %504 = icmp eq i32 %503, %472
  br i1 %504, label %505, label %543

505:                                              ; preds = %502
  %506 = load i8*, i8** %467, align 8
  %507 = icmp eq i8* %506, null
  br i1 %507, label %512, label %508

508:                                              ; preds = %505
  %509 = load i8, i8* %506, align 1
  %510 = icmp sgt i8 %509, -1
  br i1 %510, label %543, label %511, !prof !9

511:                                              ; preds = %508
  call void @llvm.trap() #21
  unreachable

512:                                              ; preds = %505
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %419) #21
  %513 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 24, i32 1
  %514 = bitcast %"class.gl::TransformFeedback"*** %513 to i8**
  %515 = load i8*, i8** %514, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %515, i8 -1, i64 256, i1 false) #21
  store i64 32, i64* %420, align 8
  %516 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 24, i32 2, i32 0, i32 0
  %517 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 24, i32 2, i32 0, i32 0, i32 3
  %518 = load i64, i64* %517, align 8
  %519 = icmp ugt i64 %518, 127
  br i1 %519, label %520, label %524

520:                                              ; preds = %512
  %521 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %516, i64 0, i32 0
  %522 = load i8*, i8** %521, align 8
  call void @_ZdlPv(i8* %522) #27
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %521, align 8
  %523 = bitcast %"union.absl::container_internal::map_slot_type.580"** %439 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %523, i8 0, i64 32, i1 false) #21
  br label %540

524:                                              ; preds = %512
  %525 = icmp eq i64 %518, 0
  br i1 %525, label %540, label %526

526:                                              ; preds = %524
  %527 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 24, i32 2, i32 0, i32 0, i32 2
  store i64 0, i64* %527, align 8
  %528 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %516, i64 0, i32 0
  %529 = load i8*, i8** %528, align 8
  %530 = add nuw nsw i64 %518, 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %529, i8 -128, i64 %530, i1 false) #21
  %531 = load i8*, i8** %528, align 8
  %532 = load i64, i64* %517, align 8
  %533 = getelementptr inbounds i8, i8* %531, i64 %532
  store i8 -1, i8* %533, align 1
  %534 = load i64, i64* %517, align 8
  %535 = lshr i64 %534, 3
  %536 = sub i64 %534, %535
  %537 = load i64, i64* %527, align 8
  %538 = sub i64 %536, %537
  %539 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 24, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %538, i64* %539, align 8
  br label %540

540:                                              ; preds = %520, %524, %526
  %541 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 17, i32 0, i32 0, i64 0
  %542 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 17, i32 0, i32 0, i64 11
  br label %641

543:                                              ; preds = %508, %502
  %544 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %470, align 8
  %545 = icmp eq %"class.gl::TransformFeedback"* %544, null
  br i1 %545, label %560, label %546

546:                                              ; preds = %543
  %547 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %544, i64 0, i32 0, i32 0
  %548 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %544, i64 0, i32 0, i32 0, i32 1
  %549 = load i64, i64* %548, align 8
  %550 = add i64 %549, -1
  store i64 %550, i64* %548, align 8
  %551 = icmp eq i64 %550, 0
  br i1 %551, label %552, label %560

552:                                              ; preds = %546
  %553 = bitcast %"class.gl::TransformFeedback"* %544 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %554 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %553, align 8
  %555 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %554, align 8
  call void %555(%"class.angle::RefCountObject"* %547, %"class.gl::Context"* %1) #21
  %556 = bitcast %"class.gl::TransformFeedback"* %544 to void (%"class.angle::RefCountObject"*)***
  %557 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %556, align 8
  %558 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %557, i64 2
  %559 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %558, align 8
  call void %559(%"class.angle::RefCountObject"* nonnull %547) #21
  br label %560

560:                                              ; preds = %552, %546, %543
  %561 = call dereferenceable(56) %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* @_ZN2gl11ResourceMapINS_17TransformFeedbackENS_19TransformFeedbackIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* nonnull %7)
  %562 = load i32, i32* %466, align 8
  br label %502

563:                                              ; preds = %660
  %564 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 15, i32 0, i32 1
  %565 = load %"class.gl::Compiler"*, %"class.gl::Compiler"** %564, align 8
  store %"class.gl::Compiler"* null, %"class.gl::Compiler"** %564, align 8
  %566 = icmp eq %"class.gl::Compiler"* %565, null
  br i1 %566, label %581, label %567

567:                                              ; preds = %563
  %568 = getelementptr inbounds %"class.gl::Compiler", %"class.gl::Compiler"* %565, i64 0, i32 0
  %569 = getelementptr inbounds %"class.gl::Compiler", %"class.gl::Compiler"* %565, i64 0, i32 0, i32 1
  %570 = load i64, i64* %569, align 8
  %571 = add i64 %570, -1
  store i64 %571, i64* %569, align 8
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %581

573:                                              ; preds = %567
  %574 = bitcast %"class.gl::Compiler"* %565 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %575 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %574, align 8
  %576 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %575, align 8
  call void %576(%"class.angle::RefCountObject"* %568, %"class.gl::Context"* %1) #21
  %577 = bitcast %"class.gl::Compiler"* %565 to void (%"class.angle::RefCountObject"*)***
  %578 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %577, align 8
  %579 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %578, i64 2
  %580 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %579, align 8
  call void %580(%"class.angle::RefCountObject"* nonnull %568) #21
  br label %581

581:                                              ; preds = %563, %567, %573
  %582 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2
  call void @_ZN2gl5State5resetEPKNS_7ContextE(%"class.gl::State"* %582, %"class.gl::Context"* %1) #21
  %583 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 10
  %584 = bitcast %"class.gl::BufferManager"** %583 to %"class.gl::ResourceManagerBase"**
  %585 = load %"class.gl::ResourceManagerBase"*, %"class.gl::ResourceManagerBase"** %584, align 8
  call void @_ZN2gl19ResourceManagerBase7releaseEPKNS_7ContextE(%"class.gl::ResourceManagerBase"* %585, %"class.gl::Context"* %1) #21
  %586 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 17
  %587 = bitcast %"class.gl::ProgramPipelineManager"** %586 to %"class.gl::ResourceManagerBase"**
  %588 = load %"class.gl::ResourceManagerBase"*, %"class.gl::ResourceManagerBase"** %587, align 8
  call void @_ZN2gl19ResourceManagerBase7releaseEPKNS_7ContextE(%"class.gl::ResourceManagerBase"* %588, %"class.gl::Context"* %1) #21
  %589 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 11
  %590 = bitcast %"class.gl::ShaderProgramManager"** %589 to %"class.gl::ResourceManagerBase"**
  %591 = load %"class.gl::ResourceManagerBase"*, %"class.gl::ResourceManagerBase"** %590, align 8
  call void @_ZN2gl19ResourceManagerBase7releaseEPKNS_7ContextE(%"class.gl::ResourceManagerBase"* %591, %"class.gl::Context"* %1) #21
  %592 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 12
  %593 = bitcast %"class.gl::TextureManager"** %592 to %"class.gl::ResourceManagerBase"**
  %594 = load %"class.gl::ResourceManagerBase"*, %"class.gl::ResourceManagerBase"** %593, align 8
  call void @_ZN2gl19ResourceManagerBase7releaseEPKNS_7ContextE(%"class.gl::ResourceManagerBase"* %594, %"class.gl::Context"* %1) #21
  %595 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 13
  %596 = bitcast %"class.gl::RenderbufferManager"** %595 to %"class.gl::ResourceManagerBase"**
  %597 = load %"class.gl::ResourceManagerBase"*, %"class.gl::ResourceManagerBase"** %596, align 8
  call void @_ZN2gl19ResourceManagerBase7releaseEPKNS_7ContextE(%"class.gl::ResourceManagerBase"* %597, %"class.gl::Context"* %1) #21
  %598 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 14
  %599 = bitcast %"class.gl::SamplerManager"** %598 to %"class.gl::ResourceManagerBase"**
  %600 = load %"class.gl::ResourceManagerBase"*, %"class.gl::ResourceManagerBase"** %599, align 8
  call void @_ZN2gl19ResourceManagerBase7releaseEPKNS_7ContextE(%"class.gl::ResourceManagerBase"* %600, %"class.gl::Context"* %1) #21
  %601 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 15
  %602 = bitcast %"class.gl::SyncManager"** %601 to %"class.gl::ResourceManagerBase"**
  %603 = load %"class.gl::ResourceManagerBase"*, %"class.gl::ResourceManagerBase"** %602, align 8
  call void @_ZN2gl19ResourceManagerBase7releaseEPKNS_7ContextE(%"class.gl::ResourceManagerBase"* %603, %"class.gl::Context"* %1) #21
  %604 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 16
  %605 = bitcast %"class.gl::FramebufferManager"** %604 to %"class.gl::ResourceManagerBase"**
  %606 = load %"class.gl::ResourceManagerBase"*, %"class.gl::ResourceManagerBase"** %605, align 8
  call void @_ZN2gl19ResourceManagerBase7releaseEPKNS_7ContextE(%"class.gl::ResourceManagerBase"* %606, %"class.gl::Context"* %1) #21
  %607 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 18
  %608 = bitcast %"class.gl::MemoryObjectManager"** %607 to %"class.gl::ResourceManagerBase"**
  %609 = load %"class.gl::ResourceManagerBase"*, %"class.gl::ResourceManagerBase"** %608, align 8
  call void @_ZN2gl19ResourceManagerBase7releaseEPKNS_7ContextE(%"class.gl::ResourceManagerBase"* %609, %"class.gl::Context"* %1) #21
  %610 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 19
  %611 = bitcast %"class.gl::SemaphoreManager"** %610 to %"class.gl::ResourceManagerBase"**
  %612 = load %"class.gl::ResourceManagerBase"*, %"class.gl::ResourceManagerBase"** %611, align 8
  call void @_ZN2gl19ResourceManagerBase7releaseEPKNS_7ContextE(%"class.gl::ResourceManagerBase"* %612, %"class.gl::Context"* %1) #21
  %613 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 74
  %614 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 74, i32 1
  %615 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %614, align 8
  %616 = bitcast %"class.std::__1::shared_ptr.608"* %613 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %616, align 8
  %617 = icmp eq %"class.std::__1::__shared_weak_count"* %615, null
  br i1 %617, label %628, label %618

618:                                              ; preds = %581
  %619 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %615, i64 0, i32 0, i32 1
  %620 = atomicrmw add i64* %619, i64 -1 acq_rel
  %621 = icmp eq i64 %620, 0
  br i1 %621, label %622, label %628

622:                                              ; preds = %618
  %623 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %615, i64 0, i32 0
  %624 = bitcast %"class.std::__1::__shared_weak_count"* %615 to void (%"class.std::__1::__shared_count"*)***
  %625 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %624, align 8
  %626 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %625, i64 2
  %627 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %626, align 8
  call void %627(%"class.std::__1::__shared_count"* %623) #21
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %615) #21
  br label %628

628:                                              ; preds = %581, %618, %622
  %629 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %630 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %629, align 8
  %631 = bitcast %"class.rx::ContextImpl"* %630 to void (%"class.rx::ContextImpl"*, %"class.gl::Context"*)***
  %632 = load void (%"class.rx::ContextImpl"*, %"class.gl::Context"*)**, void (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*** %631, align 8
  %633 = getelementptr inbounds void (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*, void (%"class.rx::ContextImpl"*, %"class.gl::Context"*)** %632, i64 19
  %634 = load void (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*, void (%"class.rx::ContextImpl"*, %"class.gl::Context"*)** %633, align 8
  call void %634(%"class.rx::ContextImpl"* %630, %"class.gl::Context"* %1) #21
  %635 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 9
  %636 = load %"class.egl::ShareGroup"*, %"class.egl::ShareGroup"** %635, align 8
  call void @_ZN3egl10ShareGroup7releaseEPKNS_7DisplayE(%"class.egl::ShareGroup"* %636, %"class.egl::Display"* %2) #21
  %637 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %637, align 8, !alias.scope !23
  %638 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %638, align 4, !alias.scope !23
  %639 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %640 = bitcast %"class.std::__1::unique_ptr.920"* %639 to i64*
  store i64 0, i64* %640, align 8, !alias.scope !23
  br label %663

641:                                              ; preds = %540, %660
  %642 = phi %"class.gl::BindingPointer.410"* [ %541, %540 ], [ %661, %660 ]
  %643 = getelementptr inbounds %"class.gl::BindingPointer.410", %"class.gl::BindingPointer.410"* %642, i64 0, i32 0, i32 1
  %644 = load %"class.gl::Texture"*, %"class.gl::Texture"** %643, align 8
  %645 = icmp eq %"class.gl::Texture"* %644, null
  br i1 %645, label %660, label %646

646:                                              ; preds = %641
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %643, align 8
  %647 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %644, i64 0, i32 0, i32 0
  %648 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %644, i64 0, i32 0, i32 0, i32 1
  %649 = load i64, i64* %648, align 8
  %650 = add i64 %649, -1
  store i64 %650, i64* %648, align 8
  %651 = icmp eq i64 %650, 0
  br i1 %651, label %652, label %660

652:                                              ; preds = %646
  %653 = bitcast %"class.gl::Texture"* %644 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %654 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %653, align 8
  %655 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %654, align 8
  call void %655(%"class.angle::RefCountObject"* %647, %"class.gl::Context"* %1) #21
  %656 = bitcast %"class.gl::Texture"* %644 to void (%"class.angle::RefCountObject"*)***
  %657 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %656, align 8
  %658 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %657, i64 2
  %659 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %658, align 8
  call void %659(%"class.angle::RefCountObject"* nonnull %647) #21
  br label %660

660:                                              ; preds = %652, %646, %641
  %661 = getelementptr inbounds %"class.gl::BindingPointer.410", %"class.gl::BindingPointer.410"* %642, i64 1
  %662 = icmp eq %"class.gl::BindingPointer.410"* %661, %542
  br i1 %662, label %563, label %641

663:                                              ; preds = %19, %628
  ret void
}

declare void @_ZN5angle12FrameCapture16onDestroyContextEPKN2gl7ContextE(%"class.angle::FrameCapture"*, %"class.gl::Context"*) local_unnamed_addr #3

declare void @_ZN2gl13GLES1Renderer9onDestroyEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"*, %"class.gl::Context"*, %"class.gl::State"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13unMakeCurrentEPKN3egl7DisplayE(%"class.egl::Error"* noalias sret, %"class.gl::Context"*, %"class.egl::Display"* nocapture readnone) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.angle::ScratchBuffer", align 8
  %5 = alloca %"class.angle::ScratchBuffer", align 8
  %6 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %9, align 8
  %12 = bitcast %"class.rx::ContextImpl"* %11 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)***
  %13 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)** %13, i64 55
  %15 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)** %14, align 8
  %16 = tail call i32 %15(%"class.rx::ContextImpl"* %11, %"class.gl::Context"* %1) #21
  tail call void @_ZN5angle11ResultToEGLENS_6ResultE(%"class.egl::Error"* sret %0, i32 %16) #21
  %17 = load i32, i32* %6, align 8
  %18 = icmp eq i32 %17, 12288
  br i1 %18, label %19, label %69

19:                                               ; preds = %3
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %8, align 8
  %21 = icmp eq %"class.std::__1::basic_string"* %20, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #27
  br label %30

30:                                               ; preds = %27, %22
  %31 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  tail call void @_ZdlPv(i8* %31) #27
  br label %32

32:                                               ; preds = %19, %30
  %33 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 -86, i64 16, i1 false)
  tail call void @_ZN2gl7Context23unsetDefaultFramebufferEv(%"class.egl::Error"* sret %0, %"class.gl::Context"* %1)
  %34 = load i32, i32* %6, align 8
  %35 = icmp eq i32 %34, 12288
  br i1 %35, label %36, label %69

36:                                               ; preds = %32
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %8, align 8
  %38 = icmp eq %"class.std::__1::basic_string"* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #27
  br label %47

47:                                               ; preds = %44, %39
  %48 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  tail call void @_ZdlPv(i8* %48) #27
  br label %49

49:                                               ; preds = %36, %47
  %50 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 72, i32 0
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 45
  %55 = load %"class.egl::Display"*, %"class.egl::Display"** %54, align 8
  store i8 0, i8* %50, align 8
  %56 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 72, i32 1
  call void @_ZN5angle13ScratchBufferC1EOS0_(%"class.angle::ScratchBuffer"* nonnull %4, %"class.angle::ScratchBuffer"* dereferenceable(24) %56) #21
  call void @_ZN3egl7Display19returnScratchBufferEN5angle13ScratchBufferE(%"class.egl::Display"* %55, %"class.angle::ScratchBuffer"* nonnull %4) #21
  call void @_ZN5angle13ScratchBufferD1Ev(%"class.angle::ScratchBuffer"* nonnull %4) #21
  br label %57

57:                                               ; preds = %49, %53
  %58 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 73, i32 0
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 45
  %63 = load %"class.egl::Display"*, %"class.egl::Display"** %62, align 8
  store i8 0, i8* %58, align 8
  %64 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 73, i32 1
  call void @_ZN5angle13ScratchBufferC1EOS0_(%"class.angle::ScratchBuffer"* nonnull %5, %"class.angle::ScratchBuffer"* dereferenceable(24) %64) #21
  call void @_ZN3egl7Display22returnZeroFilledBufferEN5angle13ScratchBufferE(%"class.egl::Display"* %63, %"class.angle::ScratchBuffer"* nonnull %5) #21
  call void @_ZN5angle13ScratchBufferD1Ev(%"class.angle::ScratchBuffer"* nonnull %5) #21
  br label %65

65:                                               ; preds = %57, %61
  %66 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 81
  store i8 0, i8* %66, align 1
  store i32 12288, i32* %6, align 8, !alias.scope !28
  store i32 0, i32* %7, align 4, !alias.scope !28
  %67 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %68 = bitcast %"class.std::__1::unique_ptr.920"* %67 to i64*
  store i64 0, i64* %68, align 8, !alias.scope !28
  br label %69

69:                                               ; preds = %32, %3, %65
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN2gl7FenceNV9onDestroyEPKNS_7ContextE(%"class.gl::FenceNV"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* @_ZN2gl11ResourceMapINS_7FenceNVENS_9FenceNVIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %0, i64 0, i32 0
  %5 = load %"class.gl::ResourceMap.546"*, %"class.gl::ResourceMap.546"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = icmp ult i32 %3, %8
  br i1 %9, label %10, label %35

10:                                               ; preds = %1
  %11 = add nuw i32 %3, 1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp ne i8 %14, 0
  %16 = icmp ugt i64 %7, %12
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %5, i64 0, i32 1
  %19 = load %"class.gl::FenceNV"**, %"class.gl::FenceNV"*** %18, align 8
  br label %20

20:                                               ; preds = %30, %17
  %21 = phi i64 [ %12, %17 ], [ %31, %30 ]
  %22 = getelementptr inbounds %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %19, i64 %21
  %23 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %22, align 8
  %24 = icmp eq %"class.gl::FenceNV"* %23, null
  %25 = and i1 %15, %24
  %26 = icmp eq %"class.gl::FenceNV"* %23, inttoptr (i64 -1 to %"class.gl::FenceNV"*)
  %27 = or i1 %26, %25
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = trunc i64 %21 to i32
  br label %33

30:                                               ; preds = %20
  %31 = add i64 %21, 1
  %32 = icmp eq i64 %31, %7
  br i1 %32, label %33, label %20

33:                                               ; preds = %30, %28, %10
  %34 = phi i32 [ %8, %10 ], [ %29, %28 ], [ %8, %30 ]
  store i32 %34, i32* %2, align 8
  br label %69

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %39 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %38, align 8
  %40 = icmp eq i8* %37, null
  br i1 %40, label %44, label %41, !prof !10

41:                                               ; preds = %35
  %42 = load i8, i8* %37, align 1
  %43 = icmp sgt i8 %42, -1
  br i1 %43, label %45, label %44, !prof !9

44:                                               ; preds = %41, %35
  tail call void @llvm.trap() #21
  unreachable

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %37, i64 1
  store i8* %46, i8** %36, align 8
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %39, i64 1
  store %"union.absl::container_internal::map_slot_type.550"* %47, %"union.absl::container_internal::map_slot_type.550"** %38, align 8
  %48 = load i8, i8* %46, align 1
  %49 = icmp slt i8 %48, -1
  br i1 %49, label %50, label %65

50:                                               ; preds = %45, %50
  %51 = phi %"union.absl::container_internal::map_slot_type.550"* [ %62, %50 ], [ %47, %45 ]
  %52 = phi i8* [ %61, %50 ], [ %46, %45 ]
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = zext i16 %56 to i32
  %58 = add nuw nsw i32 %57, 1
  %59 = tail call i32 @llvm.cttz.i32(i32 %58, i1 true) #21, !range !8
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %52, i64 %60
  store i8* %61, i8** %36, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %51, i64 %60
  store %"union.absl::container_internal::map_slot_type.550"* %62, %"union.absl::container_internal::map_slot_type.550"** %38, align 8
  %63 = load i8, i8* %61, align 1
  %64 = icmp slt i8 %63, -1
  br i1 %64, label %50, label %65

65:                                               ; preds = %50, %45
  %66 = phi i8 [ %48, %45 ], [ %63, %50 ]
  %67 = icmp eq i8 %66, -1
  br i1 %67, label %68, label %69, !prof !10

68:                                               ; preds = %65
  store i8* null, i8** %36, align 8
  br label %69

69:                                               ; preds = %68, %65, %33
  %70 = phi i32 [ %3, %68 ], [ %3, %65 ], [ %34, %33 ]
  %71 = load i64, i64* %6, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp ult i32 %70, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %70, i32* %75, align 8
  %76 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %5, i64 0, i32 1
  %77 = load %"class.gl::FenceNV"**, %"class.gl::FenceNV"*** %76, align 8
  %78 = zext i32 %70 to i64
  %79 = getelementptr inbounds %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %77, i64 %78
  br label %99

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %105, label %84

84:                                               ; preds = %80
  %85 = load i8, i8* %82, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %88, label %87, !prof !9

87:                                               ; preds = %84
  tail call void @llvm.trap() #21
  unreachable

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %90 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %89, align 8
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %90, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %92, i32* %93, align 8
  %94 = load i8, i8* %82, align 1
  %95 = icmp sgt i8 %94, -1
  br i1 %95, label %97, label %96, !prof !9

96:                                               ; preds = %88
  tail call void @llvm.trap() #21
  unreachable

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %90, i64 0, i32 0, i32 1
  br label %99

99:                                               ; preds = %97, %74
  %100 = phi %"class.gl::FenceNV"** [ %79, %74 ], [ %98, %97 ]
  %101 = bitcast %"class.gl::FenceNV"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator", %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %0, i64 0, i32 4, i32 1
  %104 = bitcast %"class.gl::FenceNV"** %103 to i64*
  store i64 %102, i64* %104, align 8
  br label %105

105:                                              ; preds = %99, %80
  ret %"class.gl::ResourceMap<gl::FenceNV, gl::FenceNVID>::Iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* @_ZN2gl11ResourceMapINS_5QueryENS_7QueryIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %0, i64 0, i32 0
  %5 = load %"class.gl::ResourceMap.556"*, %"class.gl::ResourceMap.556"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = icmp ult i32 %3, %8
  br i1 %9, label %10, label %35

10:                                               ; preds = %1
  %11 = add nuw i32 %3, 1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp ne i8 %14, 0
  %16 = icmp ugt i64 %7, %12
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %5, i64 0, i32 1
  %19 = load %"class.gl::Query"**, %"class.gl::Query"*** %18, align 8
  br label %20

20:                                               ; preds = %30, %17
  %21 = phi i64 [ %12, %17 ], [ %31, %30 ]
  %22 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %19, i64 %21
  %23 = load %"class.gl::Query"*, %"class.gl::Query"** %22, align 8
  %24 = icmp eq %"class.gl::Query"* %23, null
  %25 = and i1 %15, %24
  %26 = icmp eq %"class.gl::Query"* %23, inttoptr (i64 -1 to %"class.gl::Query"*)
  %27 = or i1 %26, %25
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = trunc i64 %21 to i32
  br label %33

30:                                               ; preds = %20
  %31 = add i64 %21, 1
  %32 = icmp eq i64 %31, %7
  br i1 %32, label %33, label %20

33:                                               ; preds = %30, %28, %10
  %34 = phi i32 [ %8, %10 ], [ %29, %28 ], [ %8, %30 ]
  store i32 %34, i32* %2, align 8
  br label %69

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %39 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %38, align 8
  %40 = icmp eq i8* %37, null
  br i1 %40, label %44, label %41, !prof !10

41:                                               ; preds = %35
  %42 = load i8, i8* %37, align 1
  %43 = icmp sgt i8 %42, -1
  br i1 %43, label %45, label %44, !prof !9

44:                                               ; preds = %41, %35
  tail call void @llvm.trap() #21
  unreachable

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %37, i64 1
  store i8* %46, i8** %36, align 8
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %39, i64 1
  store %"union.absl::container_internal::map_slot_type.560"* %47, %"union.absl::container_internal::map_slot_type.560"** %38, align 8
  %48 = load i8, i8* %46, align 1
  %49 = icmp slt i8 %48, -1
  br i1 %49, label %50, label %65

50:                                               ; preds = %45, %50
  %51 = phi %"union.absl::container_internal::map_slot_type.560"* [ %62, %50 ], [ %47, %45 ]
  %52 = phi i8* [ %61, %50 ], [ %46, %45 ]
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = zext i16 %56 to i32
  %58 = add nuw nsw i32 %57, 1
  %59 = tail call i32 @llvm.cttz.i32(i32 %58, i1 true) #21, !range !8
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %52, i64 %60
  store i8* %61, i8** %36, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %51, i64 %60
  store %"union.absl::container_internal::map_slot_type.560"* %62, %"union.absl::container_internal::map_slot_type.560"** %38, align 8
  %63 = load i8, i8* %61, align 1
  %64 = icmp slt i8 %63, -1
  br i1 %64, label %50, label %65

65:                                               ; preds = %50, %45
  %66 = phi i8 [ %48, %45 ], [ %63, %50 ]
  %67 = icmp eq i8 %66, -1
  br i1 %67, label %68, label %69, !prof !10

68:                                               ; preds = %65
  store i8* null, i8** %36, align 8
  br label %69

69:                                               ; preds = %68, %65, %33
  %70 = phi i32 [ %3, %68 ], [ %3, %65 ], [ %34, %33 ]
  %71 = load i64, i64* %6, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp ult i32 %70, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %70, i32* %75, align 8
  %76 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %5, i64 0, i32 1
  %77 = load %"class.gl::Query"**, %"class.gl::Query"*** %76, align 8
  %78 = zext i32 %70 to i64
  %79 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %77, i64 %78
  br label %99

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %105, label %84

84:                                               ; preds = %80
  %85 = load i8, i8* %82, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %88, label %87, !prof !9

87:                                               ; preds = %84
  tail call void @llvm.trap() #21
  unreachable

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %90 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %89, align 8
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %90, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %92, i32* %93, align 8
  %94 = load i8, i8* %82, align 1
  %95 = icmp sgt i8 %94, -1
  br i1 %95, label %97, label %96, !prof !9

96:                                               ; preds = %88
  tail call void @llvm.trap() #21
  unreachable

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %90, i64 0, i32 0, i32 1
  br label %99

99:                                               ; preds = %97, %74
  %100 = phi %"class.gl::Query"** [ %79, %74 ], [ %98, %97 ]
  %101 = bitcast %"class.gl::Query"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator", %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %0, i64 0, i32 4, i32 1
  %104 = bitcast %"class.gl::Query"** %103 to i64*
  store i64 %102, i64* %104, align 8
  br label %105

105:                                              ; preds = %99, %80
  ret %"class.gl::ResourceMap<gl::Query, gl::QueryID>::Iterator"* %0
}

declare void @_ZN2gl11VertexArray9onDestroyEPKNS_7ContextE(%"class.gl::VertexArray"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* @_ZN2gl11ResourceMapINS_11VertexArrayENS_13VertexArrayIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %0, i64 0, i32 0
  %5 = load %"class.gl::ResourceMap.566"*, %"class.gl::ResourceMap.566"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = icmp ult i32 %3, %8
  br i1 %9, label %10, label %35

10:                                               ; preds = %1
  %11 = add nuw i32 %3, 1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp ne i8 %14, 0
  %16 = icmp ugt i64 %7, %12
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %5, i64 0, i32 1
  %19 = load %"class.gl::VertexArray"**, %"class.gl::VertexArray"*** %18, align 8
  br label %20

20:                                               ; preds = %30, %17
  %21 = phi i64 [ %12, %17 ], [ %31, %30 ]
  %22 = getelementptr inbounds %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %19, i64 %21
  %23 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %22, align 8
  %24 = icmp eq %"class.gl::VertexArray"* %23, null
  %25 = and i1 %15, %24
  %26 = icmp eq %"class.gl::VertexArray"* %23, inttoptr (i64 -1 to %"class.gl::VertexArray"*)
  %27 = or i1 %26, %25
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = trunc i64 %21 to i32
  br label %33

30:                                               ; preds = %20
  %31 = add i64 %21, 1
  %32 = icmp eq i64 %31, %7
  br i1 %32, label %33, label %20

33:                                               ; preds = %30, %28, %10
  %34 = phi i32 [ %8, %10 ], [ %29, %28 ], [ %8, %30 ]
  store i32 %34, i32* %2, align 8
  br label %69

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %39 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %38, align 8
  %40 = icmp eq i8* %37, null
  br i1 %40, label %44, label %41, !prof !10

41:                                               ; preds = %35
  %42 = load i8, i8* %37, align 1
  %43 = icmp sgt i8 %42, -1
  br i1 %43, label %45, label %44, !prof !9

44:                                               ; preds = %41, %35
  tail call void @llvm.trap() #21
  unreachable

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %37, i64 1
  store i8* %46, i8** %36, align 8
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %39, i64 1
  store %"union.absl::container_internal::map_slot_type.570"* %47, %"union.absl::container_internal::map_slot_type.570"** %38, align 8
  %48 = load i8, i8* %46, align 1
  %49 = icmp slt i8 %48, -1
  br i1 %49, label %50, label %65

50:                                               ; preds = %45, %50
  %51 = phi %"union.absl::container_internal::map_slot_type.570"* [ %62, %50 ], [ %47, %45 ]
  %52 = phi i8* [ %61, %50 ], [ %46, %45 ]
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = zext i16 %56 to i32
  %58 = add nuw nsw i32 %57, 1
  %59 = tail call i32 @llvm.cttz.i32(i32 %58, i1 true) #21, !range !8
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %52, i64 %60
  store i8* %61, i8** %36, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %51, i64 %60
  store %"union.absl::container_internal::map_slot_type.570"* %62, %"union.absl::container_internal::map_slot_type.570"** %38, align 8
  %63 = load i8, i8* %61, align 1
  %64 = icmp slt i8 %63, -1
  br i1 %64, label %50, label %65

65:                                               ; preds = %50, %45
  %66 = phi i8 [ %48, %45 ], [ %63, %50 ]
  %67 = icmp eq i8 %66, -1
  br i1 %67, label %68, label %69, !prof !10

68:                                               ; preds = %65
  store i8* null, i8** %36, align 8
  br label %69

69:                                               ; preds = %68, %65, %33
  %70 = phi i32 [ %3, %68 ], [ %3, %65 ], [ %34, %33 ]
  %71 = load i64, i64* %6, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp ult i32 %70, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %70, i32* %75, align 8
  %76 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %5, i64 0, i32 1
  %77 = load %"class.gl::VertexArray"**, %"class.gl::VertexArray"*** %76, align 8
  %78 = zext i32 %70 to i64
  %79 = getelementptr inbounds %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %77, i64 %78
  br label %99

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %105, label %84

84:                                               ; preds = %80
  %85 = load i8, i8* %82, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %88, label %87, !prof !9

87:                                               ; preds = %84
  tail call void @llvm.trap() #21
  unreachable

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %90 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %89, align 8
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %90, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %92, i32* %93, align 8
  %94 = load i8, i8* %82, align 1
  %95 = icmp sgt i8 %94, -1
  br i1 %95, label %97, label %96, !prof !9

96:                                               ; preds = %88
  tail call void @llvm.trap() #21
  unreachable

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %90, i64 0, i32 0, i32 1
  br label %99

99:                                               ; preds = %97, %74
  %100 = phi %"class.gl::VertexArray"** [ %79, %74 ], [ %98, %97 ]
  %101 = bitcast %"class.gl::VertexArray"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %0, i64 0, i32 4, i32 1
  %104 = bitcast %"class.gl::VertexArray"** %103 to i64*
  store i64 %102, i64* %104, align 8
  br label %105

105:                                              ; preds = %99, %80
  ret %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* @_ZN2gl11ResourceMapINS_17TransformFeedbackENS_19TransformFeedbackIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %0, i64 0, i32 0
  %5 = load %"class.gl::ResourceMap.576"*, %"class.gl::ResourceMap.576"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = icmp ult i32 %3, %8
  br i1 %9, label %10, label %35

10:                                               ; preds = %1
  %11 = add nuw i32 %3, 1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp ne i8 %14, 0
  %16 = icmp ugt i64 %7, %12
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %5, i64 0, i32 1
  %19 = load %"class.gl::TransformFeedback"**, %"class.gl::TransformFeedback"*** %18, align 8
  br label %20

20:                                               ; preds = %30, %17
  %21 = phi i64 [ %12, %17 ], [ %31, %30 ]
  %22 = getelementptr inbounds %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %19, i64 %21
  %23 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %22, align 8
  %24 = icmp eq %"class.gl::TransformFeedback"* %23, null
  %25 = and i1 %15, %24
  %26 = icmp eq %"class.gl::TransformFeedback"* %23, inttoptr (i64 -1 to %"class.gl::TransformFeedback"*)
  %27 = or i1 %26, %25
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = trunc i64 %21 to i32
  br label %33

30:                                               ; preds = %20
  %31 = add i64 %21, 1
  %32 = icmp eq i64 %31, %7
  br i1 %32, label %33, label %20

33:                                               ; preds = %30, %28, %10
  %34 = phi i32 [ %8, %10 ], [ %29, %28 ], [ %8, %30 ]
  store i32 %34, i32* %2, align 8
  br label %69

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %39 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %38, align 8
  %40 = icmp eq i8* %37, null
  br i1 %40, label %44, label %41, !prof !10

41:                                               ; preds = %35
  %42 = load i8, i8* %37, align 1
  %43 = icmp sgt i8 %42, -1
  br i1 %43, label %45, label %44, !prof !9

44:                                               ; preds = %41, %35
  tail call void @llvm.trap() #21
  unreachable

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %37, i64 1
  store i8* %46, i8** %36, align 8
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %39, i64 1
  store %"union.absl::container_internal::map_slot_type.580"* %47, %"union.absl::container_internal::map_slot_type.580"** %38, align 8
  %48 = load i8, i8* %46, align 1
  %49 = icmp slt i8 %48, -1
  br i1 %49, label %50, label %65

50:                                               ; preds = %45, %50
  %51 = phi %"union.absl::container_internal::map_slot_type.580"* [ %62, %50 ], [ %47, %45 ]
  %52 = phi i8* [ %61, %50 ], [ %46, %45 ]
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = zext i16 %56 to i32
  %58 = add nuw nsw i32 %57, 1
  %59 = tail call i32 @llvm.cttz.i32(i32 %58, i1 true) #21, !range !8
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %52, i64 %60
  store i8* %61, i8** %36, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %51, i64 %60
  store %"union.absl::container_internal::map_slot_type.580"* %62, %"union.absl::container_internal::map_slot_type.580"** %38, align 8
  %63 = load i8, i8* %61, align 1
  %64 = icmp slt i8 %63, -1
  br i1 %64, label %50, label %65

65:                                               ; preds = %50, %45
  %66 = phi i8 [ %48, %45 ], [ %63, %50 ]
  %67 = icmp eq i8 %66, -1
  br i1 %67, label %68, label %69, !prof !10

68:                                               ; preds = %65
  store i8* null, i8** %36, align 8
  br label %69

69:                                               ; preds = %68, %65, %33
  %70 = phi i32 [ %3, %68 ], [ %3, %65 ], [ %34, %33 ]
  %71 = load i64, i64* %6, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp ult i32 %70, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %70, i32* %75, align 8
  %76 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %5, i64 0, i32 1
  %77 = load %"class.gl::TransformFeedback"**, %"class.gl::TransformFeedback"*** %76, align 8
  %78 = zext i32 %70 to i64
  %79 = getelementptr inbounds %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %77, i64 %78
  br label %99

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %105, label %84

84:                                               ; preds = %80
  %85 = load i8, i8* %82, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %88, label %87, !prof !9

87:                                               ; preds = %84
  tail call void @llvm.trap() #21
  unreachable

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %90 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %89, align 8
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %90, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %92, i32* %93, align 8
  %94 = load i8, i8* %82, align 1
  %95 = icmp sgt i8 %94, -1
  br i1 %95, label %97, label %96, !prof !9

96:                                               ; preds = %88
  tail call void @llvm.trap() #21
  unreachable

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %90, i64 0, i32 0, i32 1
  br label %99

99:                                               ; preds = %97, %74
  %100 = phi %"class.gl::TransformFeedback"** [ %79, %74 ], [ %98, %97 ]
  %101 = bitcast %"class.gl::TransformFeedback"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %0, i64 0, i32 4, i32 1
  %104 = bitcast %"class.gl::TransformFeedback"** %103 to i64*
  store i64 %102, i64* %104, align 8
  br label %105

105:                                              ; preds = %99, %80
  ret %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21releaseShaderCompilerEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 15, i32 0, i32 1
  %3 = load %"class.gl::Compiler"*, %"class.gl::Compiler"** %2, align 8
  store %"class.gl::Compiler"* null, %"class.gl::Compiler"** %2, align 8
  %4 = icmp eq %"class.gl::Compiler"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::Compiler", %"class.gl::Compiler"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.gl::Compiler", %"class.gl::Compiler"* %3, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %5
  %12 = bitcast %"class.gl::Compiler"* %3 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %13 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %12, align 8
  %14 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %13, align 8
  tail call void %14(%"class.angle::RefCountObject"* %6, %"class.gl::Context"* %0) #21
  %15 = bitcast %"class.gl::Compiler"* %3 to void (%"class.angle::RefCountObject"*)***
  %16 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %16, i64 2
  %18 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %17, align 8
  tail call void %18(%"class.angle::RefCountObject"* nonnull %6) #21
  br label %19

19:                                               ; preds = %1, %5, %11
  ret void
}

declare void @_ZN2gl5State5resetEPKNS_7ContextE(%"class.gl::State"*, %"class.gl::Context"*) local_unnamed_addr #3

declare void @_ZN2gl19ResourceManagerBase7releaseEPKNS_7ContextE(%"class.gl::ResourceManagerBase"*, %"class.gl::Context"*) local_unnamed_addr #3

declare void @_ZN3egl10ShareGroup7releaseEPKNS_7DisplayE(%"class.egl::ShareGroup"*, %"class.egl::Display"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7ContextD2Ev(%"class.gl::Context"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 1
  %3 = bitcast %"class.gl::Context"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN2gl7ContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN2gl7ContextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 78
  tail call void @_ZN2gl11MockOverlayD1Ev(%"class.gl::MockOverlay"* %4) #21
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 76
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  tail call void @_ZdlPv(i8* %12) #27
  br label %13

13:                                               ; preds = %1, %10
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 75, i32 0, i32 0, i32 0
  %15 = load %"class.angle::FrameCapture"*, %"class.angle::FrameCapture"** %14, align 8
  store %"class.angle::FrameCapture"* null, %"class.angle::FrameCapture"** %14, align 8
  %16 = icmp eq %"class.angle::FrameCapture"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  tail call void @_ZN5angle12FrameCaptureD1Ev(%"class.angle::FrameCapture"* nonnull %15) #21
  %18 = bitcast %"class.angle::FrameCapture"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #27
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 74, i32 1
  %21 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %20, align 8
  %22 = icmp eq %"class.std::__1::__shared_weak_count"* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %21, i64 0, i32 0, i32 1
  %25 = atomicrmw add i64* %24, i64 -1 acq_rel
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %21, i64 0, i32 0
  %29 = bitcast %"class.std::__1::__shared_weak_count"* %21 to void (%"class.std::__1::__shared_count"*)***
  %30 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %30, i64 2
  %32 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %31, align 8
  tail call void %32(%"class.std::__1::__shared_count"* %28) #21
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %21) #21
  br label %33

33:                                               ; preds = %19, %23, %27
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 73, i32 1
  tail call void @_ZN5angle13ScratchBufferD1Ev(%"class.angle::ScratchBuffer"* %34) #21
  %35 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 72, i32 1
  tail call void @_ZN5angle13ScratchBufferD1Ev(%"class.angle::ScratchBuffer"* %35) #21
  %36 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 71
  %37 = getelementptr inbounds %"class.std::__1::vector.337", %"class.std::__1::vector.337"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %37, align 8
  %39 = icmp eq %"class.angle::ObserverBinding"* %38, null
  br i1 %39, label %54, label %40

40:                                               ; preds = %33
  %41 = bitcast %"class.angle::ObserverBinding"* %38 to i8*
  %42 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 71, i32 0, i32 1
  %43 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %42, align 8
  %44 = icmp eq %"class.angle::ObserverBinding"* %43, %38
  br i1 %44, label %52, label %45

45:                                               ; preds = %40, %45
  %46 = phi %"class.angle::ObserverBinding"* [ %47, %45 ], [ %43, %40 ]
  %47 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %46, i64 -1
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %47) #21
  %48 = icmp eq %"class.angle::ObserverBinding"* %47, %38
  br i1 %48, label %49, label %45

49:                                               ; preds = %45
  %50 = bitcast %"class.std::__1::vector.337"* %36 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %40
  %53 = phi i8* [ %51, %49 ], [ %41, %40 ]
  store %"class.angle::ObserverBinding"* %38, %"class.angle::ObserverBinding"** %42, align 8
  tail call void @_ZdlPv(i8* %53) #27
  br label %54

54:                                               ; preds = %33, %52
  %55 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 70
  %56 = getelementptr inbounds %"class.std::__1::vector.337", %"class.std::__1::vector.337"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %56, align 8
  %58 = icmp eq %"class.angle::ObserverBinding"* %57, null
  br i1 %58, label %73, label %59

59:                                               ; preds = %54
  %60 = bitcast %"class.angle::ObserverBinding"* %57 to i8*
  %61 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 70, i32 0, i32 1
  %62 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %61, align 8
  %63 = icmp eq %"class.angle::ObserverBinding"* %62, %57
  br i1 %63, label %71, label %64

64:                                               ; preds = %59, %64
  %65 = phi %"class.angle::ObserverBinding"* [ %66, %64 ], [ %62, %59 ]
  %66 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %65, i64 -1
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %66) #21
  %67 = icmp eq %"class.angle::ObserverBinding"* %66, %57
  br i1 %67, label %68, label %64

68:                                               ; preds = %64
  %69 = bitcast %"class.std::__1::vector.337"* %55 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %59
  %72 = phi i8* [ %70, %68 ], [ %60, %59 ]
  store %"class.angle::ObserverBinding"* %57, %"class.angle::ObserverBinding"** %61, align 8
  tail call void @_ZdlPv(i8* %72) #27
  br label %73

73:                                               ; preds = %54, %71
  %74 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 69
  %75 = getelementptr inbounds %"class.std::__1::vector.337", %"class.std::__1::vector.337"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %75, align 8
  %77 = icmp eq %"class.angle::ObserverBinding"* %76, null
  br i1 %77, label %92, label %78

78:                                               ; preds = %73
  %79 = bitcast %"class.angle::ObserverBinding"* %76 to i8*
  %80 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 69, i32 0, i32 1
  %81 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %80, align 8
  %82 = icmp eq %"class.angle::ObserverBinding"* %81, %76
  br i1 %82, label %90, label %83

83:                                               ; preds = %78, %83
  %84 = phi %"class.angle::ObserverBinding"* [ %85, %83 ], [ %81, %78 ]
  %85 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %84, i64 -1
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %85) #21
  %86 = icmp eq %"class.angle::ObserverBinding"* %85, %76
  br i1 %86, label %87, label %83

87:                                               ; preds = %83
  %88 = bitcast %"class.std::__1::vector.337"* %74 to i8**
  %89 = load i8*, i8** %88, align 8
  br label %90

90:                                               ; preds = %87, %78
  %91 = phi i8* [ %89, %87 ], [ %79, %78 ]
  store %"class.angle::ObserverBinding"* %76, %"class.angle::ObserverBinding"** %80, align 8
  tail call void @_ZdlPv(i8* %91) #27
  br label %92

92:                                               ; preds = %73, %90
  %93 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 68
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %93) #21
  %94 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 67
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %94) #21
  %95 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 66
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %95) #21
  %96 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %97 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %96, align 8
  store %"class.gl::GLES1Renderer"* null, %"class.gl::GLES1Renderer"** %96, align 8
  %98 = icmp eq %"class.gl::GLES1Renderer"* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %92
  tail call void @_ZN2gl13GLES1RendererD1Ev(%"class.gl::GLES1Renderer"* nonnull %97) #21
  %100 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %97, i64 0, i32 0
  tail call void @_ZdlPv(i8* %100) #27
  br label %101

101:                                              ; preds = %92, %99
  %102 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 32, i32 0, i32 0
  %103 = load i8**, i8*** %102, align 8
  %104 = icmp eq i8** %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %101
  %106 = ptrtoint i8** %103 to i64
  %107 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 32, i32 0, i32 1
  %108 = bitcast i8*** %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = bitcast i8** %103 to i8*
  tail call void @_ZdlPv(i8* %109) #27
  br label %110

110:                                              ; preds = %101, %105
  %111 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 30, i32 0, i32 0
  %112 = load i8**, i8*** %111, align 8
  %113 = icmp eq i8** %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %110
  %115 = ptrtoint i8** %112 to i64
  %116 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 30, i32 0, i32 1
  %117 = bitcast i8*** %116 to i64*
  store i64 %115, i64* %117, align 8
  %118 = bitcast i8** %112 to i8*
  tail call void @_ZdlPv(i8* %118) #27
  br label %119

119:                                              ; preds = %110, %114
  %120 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 25
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %120) #21
  %121 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 1
  %122 = load %"class.gl::TransformFeedback"**, %"class.gl::TransformFeedback"*** %121, align 8
  %123 = icmp eq %"class.gl::TransformFeedback"** %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %119
  %125 = bitcast %"class.gl::TransformFeedback"** %122 to i8*
  tail call void @_ZdaPv(i8* %125) #27
  br label %126

126:                                              ; preds = %124, %119
  %127 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 3
  %128 = load i64, i64* %127, align 8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 1
  %132 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  tail call void @_ZdlPv(i8* %133) #27
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %132, align 8
  %134 = bitcast %"union.absl::container_internal::map_slot_type.580"** %131 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 32, i1 false) #21
  br label %135

135:                                              ; preds = %126, %130
  %136 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 23
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %136) #21
  %137 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 1
  %138 = load %"class.gl::VertexArray"**, %"class.gl::VertexArray"*** %137, align 8
  %139 = icmp eq %"class.gl::VertexArray"** %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %135
  %141 = bitcast %"class.gl::VertexArray"** %138 to i8*
  tail call void @_ZdaPv(i8* %141) #27
  br label %142

142:                                              ; preds = %140, %135
  %143 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 3
  %144 = load i64, i64* %143, align 8
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %151, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 1
  %148 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  tail call void @_ZdlPv(i8* %149) #27
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %148, align 8
  %150 = bitcast %"union.absl::container_internal::map_slot_type.570"** %147 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 32, i1 false) #21
  br label %151

151:                                              ; preds = %142, %146
  %152 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 21
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %152) #21
  %153 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 1
  %154 = load %"class.gl::Query"**, %"class.gl::Query"*** %153, align 8
  %155 = icmp eq %"class.gl::Query"** %154, null
  br i1 %155, label %158, label %156

156:                                              ; preds = %151
  %157 = bitcast %"class.gl::Query"** %154 to i8*
  tail call void @_ZdaPv(i8* %157) #27
  br label %158

158:                                              ; preds = %156, %151
  %159 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 3
  %160 = load i64, i64* %159, align 8
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %167, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 1
  %164 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  tail call void @_ZdlPv(i8* %165) #27
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %164, align 8
  %166 = bitcast %"union.absl::container_internal::map_slot_type.560"** %163 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 32, i1 false) #21
  br label %167

167:                                              ; preds = %158, %162
  %168 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 19
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %168) #21
  %169 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 1
  %170 = load %"class.gl::FenceNV"**, %"class.gl::FenceNV"*** %169, align 8
  %171 = icmp eq %"class.gl::FenceNV"** %170, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %167
  %173 = bitcast %"class.gl::FenceNV"** %170 to i8*
  tail call void @_ZdaPv(i8* %173) #27
  br label %174

174:                                              ; preds = %172, %167
  %175 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 3
  %176 = load i64, i64* %175, align 8
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %183, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 1
  %180 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 0
  %181 = load i8*, i8** %180, align 8
  tail call void @_ZdlPv(i8* %181) #27
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %180, align 8
  %182 = bitcast %"union.absl::container_internal::map_slot_type.550"** %179 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %182, i8 0, i64 32, i1 false) #21
  br label %183

183:                                              ; preds = %174, %178
  %184 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 10, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %184, align 8
  %185 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 9, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %185, align 8
  %186 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 8, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %186, align 8
  %187 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 7, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  %188 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 6, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %188, align 8
  %189 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 5, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %189, align 8
  %190 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %190, align 8
  %191 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %191, align 8
  %192 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %192, align 8
  %193 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %193, align 8
  %194 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %194, align 8
  %195 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 15, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl8CompilerENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %195, align 8
  %196 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %197 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %196, align 8
  store %"class.rx::ContextImpl"* null, %"class.rx::ContextImpl"** %196, align 8
  %198 = icmp eq %"class.rx::ContextImpl"* %197, null
  br i1 %198, label %204, label %199

199:                                              ; preds = %183
  %200 = bitcast %"class.rx::ContextImpl"* %197 to void (%"class.rx::ContextImpl"*)***
  %201 = load void (%"class.rx::ContextImpl"*)**, void (%"class.rx::ContextImpl"*)*** %200, align 8
  %202 = getelementptr inbounds void (%"class.rx::ContextImpl"*)*, void (%"class.rx::ContextImpl"*)** %201, i64 1
  %203 = load void (%"class.rx::ContextImpl"*)*, void (%"class.rx::ContextImpl"*)** %202, align 8
  tail call void %203(%"class.rx::ContextImpl"* nonnull %197) #21
  br label %204

204:                                              ; preds = %183, %199
  %205 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 8, i32 1, i32 0
  %206 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 8, i32 1, i32 0, i32 1, i32 0, i32 0
  %207 = bitcast %"class.std::__1::__tree_end_node"* %206 to %"class.std::__1::__tree_node.1143"**
  %208 = load %"class.std::__1::__tree_node.1143"*, %"class.std::__1::__tree_node.1143"** %207, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.36"* %205, %"class.std::__1::__tree_node.1143"* %208) #21
  %209 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5StateD1Ev(%"class.gl::State"* %209) #21
  tail call void @_ZN5angle17ObserverInterfaceD2Ev(%"class.angle::ObserverInterface"* %2) #21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2gl11MockOverlayD1Ev(%"class.gl::MockOverlay"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14BindingPointerIN2gl8CompilerENS1_7ContextENS_6ResultEED2Ev(%"class.angle::BindingPointer.91"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.angle::BindingPointer.91", %"class.angle::BindingPointer.91"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl8CompilerENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2gl5StateD1Ev(%"class.gl::State"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5angle17ObserverInterfaceD2Ev(%"class.angle::ObserverInterface"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2gl7ContextD1Ev(%"class.gl::Context"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 -1, i32 78, i32 0, i32 0
  %3 = bitcast i8* %2 to %"class.gl::Context"*
  tail call void @_ZN2gl7ContextD2Ev(%"class.gl::Context"* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7ContextD0Ev(%"class.gl::Context"*) unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7ContextD2Ev(%"class.gl::Context"* %0) #21
  %2 = bitcast %"class.gl::Context"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #27
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2gl7ContextD0Ev(%"class.gl::Context"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 -1, i32 78, i32 0, i32 0
  %3 = bitcast i8* %2 to %"class.gl::Context"*
  tail call void @_ZN2gl7ContextD2Ev(%"class.gl::Context"* %3) #21
  tail call void @_ZdlPv(i8* %2) #27
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl7Context8setLabelEPv(%"class.gl::Context"* nocapture, i8*) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 12
  store i8* %1, i8** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK2gl7Context8getLabelEv(%"class.gl::Context"* nocapture readonly) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 12
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11makeCurrentEPN3egl7DisplayEPNS1_7SurfaceES5_(%"class.egl::Error"* noalias sret, %"class.gl::Context"*, %"class.egl::Display"*, %"class.egl::Surface"*, %"class.egl::Surface"*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 45
  store %"class.egl::Display"* %2, %"class.egl::Display"** %6, align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 34
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %19

10:                                               ; preds = %5
  tail call void @_ZN2gl7Context26initializeDefaultResourcesEv(%"class.gl::Context"* %1)
  tail call void @_ZN2gl7Context18initRendererStringEv(%"class.gl::Context"* %1)
  tail call void @_ZN2gl7Context18initVersionStringsEv(%"class.gl::Context"* %1)
  tail call void @_ZN2gl7Context20initExtensionStringsEv(%"class.gl::Context"* %1)
  %11 = icmp eq %"class.egl::Surface"* %3, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %10
  %13 = tail call i32 @_ZNK3egl7Surface8getWidthEv(%"class.egl::Surface"* nonnull %3) #21
  %14 = tail call i32 @_ZNK3egl7Surface9getHeightEv(%"class.egl::Surface"* nonnull %3) #21
  br label %15

15:                                               ; preds = %10, %12
  %16 = phi i32 [ %13, %12 ], [ 0, %10 ]
  %17 = phi i32 [ %14, %12 ], [ 0, %10 ]
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2
  tail call void @_ZN2gl5State17setViewportParamsEiiii(%"class.gl::State"* %18, i32 0, i32 0, i32 %16, i32 %17) #21
  tail call void @_ZN2gl5State16setScissorParamsEiiii(%"class.gl::State"* %18, i32 0, i32 0, i32 %16, i32 %17) #21
  store i8 1, i8* %7, align 8
  br label %19

19:                                               ; preds = %5, %15
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 81
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %25 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 -86, i64 16, i1 false)
  tail call void @_ZN2gl7Context23unsetDefaultFramebufferEv(%"class.egl::Error"* sret %0, %"class.gl::Context"* %1)
  %27 = load i32, i32* %24, align 8
  %28 = icmp eq i32 %27, 12288
  br i1 %28, label %29, label %97

29:                                               ; preds = %23
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %25, align 8
  %31 = icmp eq %"class.std::__1::basic_string"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #27
  br label %40

40:                                               ; preds = %37, %32
  %41 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  tail call void @_ZdlPv(i8* %41) #27
  br label %42

42:                                               ; preds = %29, %40, %19
  %43 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 75, i32 0, i32 0, i32 0
  %44 = load %"class.angle::FrameCapture"*, %"class.angle::FrameCapture"** %43, align 8
  tail call void @_ZN5angle12FrameCapture13onMakeCurrentEPKN2gl7ContextEPKN3egl7SurfaceE(%"class.angle::FrameCapture"* %44, %"class.gl::Context"* %1, %"class.egl::Surface"* %3) #21
  %45 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 104, i32 0
  store i64 -1, i64* %45, align 8
  %46 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 107, i32 0
  %47 = bitcast i64* %46 to <2 x i64>*
  store <2 x i64> <i64 4095, i64 65535>, <2 x i64>* %47, align 8
  %48 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %49 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  %50 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %51 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 -86, i64 16, i1 false)
  tail call void @_ZN2gl7Context21setDefaultFramebufferEPN3egl7SurfaceES3_(%"class.egl::Error"* sret %0, %"class.gl::Context"* %1, %"class.egl::Surface"* %3, %"class.egl::Surface"* %4)
  %52 = load i32, i32* %48, align 8
  %53 = icmp eq i32 %52, 12288
  br i1 %53, label %54, label %97

54:                                               ; preds = %42
  %55 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %50, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %50, align 8
  %56 = icmp eq %"class.std::__1::basic_string"* %55, null
  br i1 %56, label %67, label %57

57:                                               ; preds = %54
  %58 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  tail call void @_ZdlPv(i8* %64) #27
  br label %65

65:                                               ; preds = %62, %57
  %66 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  tail call void @_ZdlPv(i8* %66) #27
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %69 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %68, align 8
  %70 = bitcast %"class.rx::ContextImpl"* %69 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)***
  %71 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*** %70, align 8
  %72 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)** %71, i64 54
  %73 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)** %72, align 8
  %74 = tail call i32 %73(%"class.rx::ContextImpl"* %69, %"class.gl::Context"* %1) #21
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %94, label %76

76:                                               ; preds = %67
  %77 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 -86, i64 16, i1 false)
  tail call void @_ZN2gl7Context23unsetDefaultFramebufferEv(%"class.egl::Error"* sret %0, %"class.gl::Context"* %1)
  %78 = load i32, i32* %48, align 8
  %79 = icmp eq i32 %78, 12288
  br i1 %79, label %80, label %97

80:                                               ; preds = %76
  %81 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %50, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %50, align 8
  %82 = icmp eq %"class.std::__1::basic_string"* %81, null
  br i1 %82, label %93, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  tail call void @_ZdlPv(i8* %90) #27
  br label %91

91:                                               ; preds = %88, %83
  %92 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  tail call void @_ZdlPv(i8* %92) #27
  br label %93

93:                                               ; preds = %80, %91
  tail call void @_ZN5angle11ResultToEGLENS_6ResultE(%"class.egl::Error"* sret %0, i32 %74) #21
  br label %97

94:                                               ; preds = %67
  store i8 1, i8* %20, align 1
  store i32 12288, i32* %48, align 8, !alias.scope !33
  store i32 0, i32* %49, align 4, !alias.scope !33
  %95 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %96 = bitcast %"class.std::__1::unique_ptr.920"* %95 to i64*
  store i64 0, i64* %96, align 8, !alias.scope !33
  br label %97

97:                                               ; preds = %76, %42, %23, %93, %94
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18initRendererStringEv(%"class.gl::Context"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::basic_ostringstream", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_ostringstream"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %7) #21
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 1
  %9 = bitcast %"class.std::__1::basic_stringbuf"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 256, i1 false)
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %12, i64 0, i32 0
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %15 = bitcast %"class.std::__1::basic_ostringstream"* %2 to i64*
  store i64 %14, i64* %15, align 8
  %16 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %17 = bitcast %"class.std::__1::basic_ostringstream"* %2 to i8**
  %18 = inttoptr i64 %14 to i8*
  %19 = getelementptr i8, i8* %18, i64 -24
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds i8, i8* %7, i64 %21
  %23 = bitcast i8* %22 to i64*
  store i64 %16, i64* %23, align 8
  %24 = load i8*, i8** %17, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %7, i64 %27
  %29 = bitcast i8* %28 to %"class.std::__1::ios_base"*
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %12 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %29, i8* %30) #21
  %31 = getelementptr inbounds i8, i8* %28, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %13) #21
  %35 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %12, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 1, i32 1
  %37 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 1, i32 3
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false) #21
  store i32 16, i32* %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #21
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 45
  %43 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false)
  %44 = load %"class.egl::Display"*, %"class.egl::Display"** %42, align 8
  call void @_ZNK3egl7Display22getBackendVendorStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.egl::Display"* %44) #21
  %45 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #21
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false)
  %49 = load %"class.egl::Display"*, %"class.egl::Display"** %42, align 8
  call void @_ZNK3egl7Display29getBackendRendererDescriptionEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.egl::Display"* %49) #21
  %50 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #21
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 24, i1 false)
  %54 = load %"class.egl::Display"*, %"class.egl::Display"** %42, align 8
  call void @_ZNK3egl7Display23getBackendVersionStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.egl::Display"* %54) #21
  %55 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = load i8*, i8** %40, align 8
  %60 = load i64, i64* %41, align 8
  %61 = zext i8 %57 to i64
  %62 = select i1 %58, i8* %59, i8* %39
  %63 = select i1 %58, i64 %60, i64 %61
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %75, label %66

66:                                               ; preds = %1, %70
  %67 = phi i8* [ %71, %70 ], [ %62, %1 ]
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 44
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds i8, i8* %67, i64 1
  %72 = icmp eq i8* %71, %64
  br i1 %72, label %73, label %66

73:                                               ; preds = %70
  %74 = ptrtoint i8* %64 to i64
  br label %100

75:                                               ; preds = %66, %1
  %76 = phi i8* [ %62, %1 ], [ %67, %66 ]
  %77 = ptrtoint i8* %76 to i64
  %78 = icmp eq i8* %76, %64
  br i1 %78, label %100, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds i8, i8* %76, i64 1
  %81 = icmp eq i8* %80, %64
  br i1 %81, label %100, label %82

82:                                               ; preds = %79, %91
  %83 = phi i8* [ %93, %91 ], [ %80, %79 ]
  %84 = phi i64 [ %92, %91 ], [ %77, %79 ]
  %85 = load i8, i8* %83, align 1
  %86 = icmp eq i8 %85, 44
  br i1 %86, label %91, label %87

87:                                               ; preds = %82
  %88 = inttoptr i64 %84 to i8*
  store i8 %85, i8* %88, align 1
  %89 = getelementptr inbounds i8, i8* %88, i64 1
  %90 = ptrtoint i8* %89 to i64
  br label %91

91:                                               ; preds = %87, %82
  %92 = phi i64 [ %84, %82 ], [ %90, %87 ]
  %93 = getelementptr inbounds i8, i8* %83, i64 1
  %94 = icmp eq i8* %93, %64
  br i1 %94, label %95, label %82

95:                                               ; preds = %91
  %96 = load i8, i8* %56, align 1
  %97 = load i8*, i8** %40, align 8
  %98 = load i64, i64* %41, align 8
  %99 = zext i8 %96 to i64
  br label %100

100:                                              ; preds = %95, %73, %75, %79
  %101 = phi i64 [ %99, %95 ], [ %61, %73 ], [ %61, %75 ], [ %61, %79 ]
  %102 = phi i64 [ %98, %95 ], [ %60, %73 ], [ %60, %75 ], [ %60, %79 ]
  %103 = phi i8* [ %97, %95 ], [ %59, %73 ], [ %59, %75 ], [ %59, %79 ]
  %104 = phi i8 [ %96, %95 ], [ %57, %73 ], [ %57, %75 ], [ %57, %79 ]
  %105 = phi i64 [ %92, %95 ], [ %74, %73 ], [ %77, %75 ], [ %77, %79 ]
  %106 = icmp slt i8 %104, 0
  %107 = getelementptr inbounds i8, i8* %103, i64 %102
  %108 = ptrtoint i8* %103 to i64
  %109 = getelementptr inbounds i8, i8* %39, i64 %101
  %110 = ptrtoint %"class.std::__1::basic_string"* %3 to i64
  %111 = select i1 %106, i8* %107, i8* %109
  %112 = select i1 %106, i64 %108, i64 %110
  %113 = select i1 %106, i64 %102, i64 %101
  %114 = ptrtoint i8* %111 to i64
  %115 = sub i64 %105, %112
  %116 = sub i64 %114, %105
  %117 = icmp ult i64 %113, %115
  br i1 %117, label %118, label %120

118:                                              ; preds = %100
  %119 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* nonnull %119) #28
  unreachable

120:                                              ; preds = %100
  %121 = icmp eq i64 %116, -1
  br i1 %121, label %122, label %128

122:                                              ; preds = %120
  br i1 %106, label %123, label %125

123:                                              ; preds = %122
  %124 = getelementptr inbounds i8, i8* %103, i64 %115
  store i8 0, i8* %124, align 1
  store i64 %115, i64* %41, align 8
  br label %129

125:                                              ; preds = %122
  %126 = getelementptr inbounds i8, i8* %39, i64 %115
  store i8 0, i8* %126, align 1
  %127 = trunc i64 %115 to i8
  store i8 %127, i8* %56, align 1
  br label %129

128:                                              ; preds = %120
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* nonnull %3, i64 %115, i64 %116) #21
  br label %129

129:                                              ; preds = %123, %125, %128
  %130 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  %134 = load i8*, i8** %46, align 8
  %135 = load i64, i64* %47, align 8
  %136 = zext i8 %132 to i64
  %137 = select i1 %133, i8* %134, i8* %45
  %138 = select i1 %133, i64 %135, i64 %136
  %139 = getelementptr inbounds i8, i8* %137, i64 %138
  %140 = icmp eq i64 %138, 0
  br i1 %140, label %150, label %141

141:                                              ; preds = %129, %145
  %142 = phi i8* [ %146, %145 ], [ %137, %129 ]
  %143 = load i8, i8* %142, align 1
  %144 = icmp eq i8 %143, 44
  br i1 %144, label %150, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds i8, i8* %142, i64 1
  %147 = icmp eq i8* %146, %139
  br i1 %147, label %148, label %141

148:                                              ; preds = %145
  %149 = ptrtoint i8* %139 to i64
  br label %175

150:                                              ; preds = %141, %129
  %151 = phi i8* [ %137, %129 ], [ %142, %141 ]
  %152 = ptrtoint i8* %151 to i64
  %153 = icmp eq i8* %151, %139
  br i1 %153, label %175, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds i8, i8* %151, i64 1
  %156 = icmp eq i8* %155, %139
  br i1 %156, label %175, label %157

157:                                              ; preds = %154, %166
  %158 = phi i8* [ %168, %166 ], [ %155, %154 ]
  %159 = phi i64 [ %167, %166 ], [ %152, %154 ]
  %160 = load i8, i8* %158, align 1
  %161 = icmp eq i8 %160, 44
  br i1 %161, label %166, label %162

162:                                              ; preds = %157
  %163 = inttoptr i64 %159 to i8*
  store i8 %160, i8* %163, align 1
  %164 = getelementptr inbounds i8, i8* %163, i64 1
  %165 = ptrtoint i8* %164 to i64
  br label %166

166:                                              ; preds = %162, %157
  %167 = phi i64 [ %159, %157 ], [ %165, %162 ]
  %168 = getelementptr inbounds i8, i8* %158, i64 1
  %169 = icmp eq i8* %168, %139
  br i1 %169, label %170, label %157

170:                                              ; preds = %166
  %171 = load i8, i8* %131, align 1
  %172 = load i8*, i8** %46, align 8
  %173 = load i64, i64* %47, align 8
  %174 = zext i8 %171 to i64
  br label %175

175:                                              ; preds = %170, %148, %150, %154
  %176 = phi i64 [ %174, %170 ], [ %136, %148 ], [ %136, %150 ], [ %136, %154 ]
  %177 = phi i64 [ %173, %170 ], [ %135, %148 ], [ %135, %150 ], [ %135, %154 ]
  %178 = phi i8* [ %172, %170 ], [ %134, %148 ], [ %134, %150 ], [ %134, %154 ]
  %179 = phi i8 [ %171, %170 ], [ %132, %148 ], [ %132, %150 ], [ %132, %154 ]
  %180 = phi i64 [ %167, %170 ], [ %149, %148 ], [ %152, %150 ], [ %152, %154 ]
  %181 = icmp slt i8 %179, 0
  %182 = getelementptr inbounds i8, i8* %178, i64 %177
  %183 = ptrtoint i8* %178 to i64
  %184 = getelementptr inbounds i8, i8* %45, i64 %176
  %185 = ptrtoint %"class.std::__1::basic_string"* %4 to i64
  %186 = select i1 %181, i8* %182, i8* %184
  %187 = select i1 %181, i64 %183, i64 %185
  %188 = select i1 %181, i64 %177, i64 %176
  %189 = ptrtoint i8* %186 to i64
  %190 = sub i64 %180, %187
  %191 = sub i64 %189, %180
  %192 = icmp ult i64 %188, %190
  br i1 %192, label %193, label %195

193:                                              ; preds = %175
  %194 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* nonnull %194) #28
  unreachable

195:                                              ; preds = %175
  %196 = icmp eq i64 %191, -1
  br i1 %196, label %197, label %203

197:                                              ; preds = %195
  br i1 %181, label %198, label %200

198:                                              ; preds = %197
  %199 = getelementptr inbounds i8, i8* %178, i64 %190
  store i8 0, i8* %199, align 1
  store i64 %190, i64* %47, align 8
  br label %204

200:                                              ; preds = %197
  %201 = getelementptr inbounds i8, i8* %45, i64 %190
  store i8 0, i8* %201, align 1
  %202 = trunc i64 %190 to i8
  store i8 %202, i8* %131, align 1
  br label %204

203:                                              ; preds = %195
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* nonnull %4, i64 %190, i64 %191) #21
  br label %204

204:                                              ; preds = %198, %200, %203
  %205 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %206 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %205, i64 0, i32 1, i32 0
  %207 = load i8, i8* %206, align 1
  %208 = icmp slt i8 %207, 0
  %209 = load i8*, i8** %51, align 8
  %210 = load i64, i64* %52, align 8
  %211 = zext i8 %207 to i64
  %212 = select i1 %208, i8* %209, i8* %50
  %213 = select i1 %208, i64 %210, i64 %211
  %214 = getelementptr inbounds i8, i8* %212, i64 %213
  %215 = icmp eq i64 %213, 0
  br i1 %215, label %225, label %216

216:                                              ; preds = %204, %220
  %217 = phi i8* [ %221, %220 ], [ %212, %204 ]
  %218 = load i8, i8* %217, align 1
  %219 = icmp eq i8 %218, 44
  br i1 %219, label %225, label %220

220:                                              ; preds = %216
  %221 = getelementptr inbounds i8, i8* %217, i64 1
  %222 = icmp eq i8* %221, %214
  br i1 %222, label %223, label %216

223:                                              ; preds = %220
  %224 = ptrtoint i8* %214 to i64
  br label %250

225:                                              ; preds = %216, %204
  %226 = phi i8* [ %212, %204 ], [ %217, %216 ]
  %227 = ptrtoint i8* %226 to i64
  %228 = icmp eq i8* %226, %214
  br i1 %228, label %250, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds i8, i8* %226, i64 1
  %231 = icmp eq i8* %230, %214
  br i1 %231, label %250, label %232

232:                                              ; preds = %229, %241
  %233 = phi i8* [ %243, %241 ], [ %230, %229 ]
  %234 = phi i64 [ %242, %241 ], [ %227, %229 ]
  %235 = load i8, i8* %233, align 1
  %236 = icmp eq i8 %235, 44
  br i1 %236, label %241, label %237

237:                                              ; preds = %232
  %238 = inttoptr i64 %234 to i8*
  store i8 %235, i8* %238, align 1
  %239 = getelementptr inbounds i8, i8* %238, i64 1
  %240 = ptrtoint i8* %239 to i64
  br label %241

241:                                              ; preds = %237, %232
  %242 = phi i64 [ %234, %232 ], [ %240, %237 ]
  %243 = getelementptr inbounds i8, i8* %233, i64 1
  %244 = icmp eq i8* %243, %214
  br i1 %244, label %245, label %232

245:                                              ; preds = %241
  %246 = load i8, i8* %206, align 1
  %247 = load i8*, i8** %51, align 8
  %248 = load i64, i64* %52, align 8
  %249 = zext i8 %246 to i64
  br label %250

250:                                              ; preds = %245, %223, %225, %229
  %251 = phi i64 [ %249, %245 ], [ %211, %223 ], [ %211, %225 ], [ %211, %229 ]
  %252 = phi i64 [ %248, %245 ], [ %210, %223 ], [ %210, %225 ], [ %210, %229 ]
  %253 = phi i8* [ %247, %245 ], [ %209, %223 ], [ %209, %225 ], [ %209, %229 ]
  %254 = phi i8 [ %246, %245 ], [ %207, %223 ], [ %207, %225 ], [ %207, %229 ]
  %255 = phi i64 [ %242, %245 ], [ %224, %223 ], [ %227, %225 ], [ %227, %229 ]
  %256 = icmp slt i8 %254, 0
  %257 = getelementptr inbounds i8, i8* %253, i64 %252
  %258 = ptrtoint i8* %253 to i64
  %259 = getelementptr inbounds i8, i8* %50, i64 %251
  %260 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  %261 = select i1 %256, i8* %257, i8* %259
  %262 = select i1 %256, i64 %258, i64 %260
  %263 = select i1 %256, i64 %252, i64 %251
  %264 = ptrtoint i8* %261 to i64
  %265 = sub i64 %255, %262
  %266 = sub i64 %264, %255
  %267 = icmp ult i64 %263, %265
  br i1 %267, label %268, label %270

268:                                              ; preds = %250
  %269 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* nonnull %269) #28
  unreachable

270:                                              ; preds = %250
  %271 = icmp eq i64 %266, -1
  br i1 %271, label %272, label %278

272:                                              ; preds = %270
  br i1 %256, label %273, label %275

273:                                              ; preds = %272
  %274 = getelementptr inbounds i8, i8* %253, i64 %265
  store i8 0, i8* %274, align 1
  store i64 %265, i64* %52, align 8
  br label %279

275:                                              ; preds = %272
  %276 = getelementptr inbounds i8, i8* %50, i64 %265
  store i8 0, i8* %276, align 1
  %277 = trunc i64 %265 to i8
  store i8 %277, i8* %206, align 1
  br label %279

278:                                              ; preds = %270
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* nonnull %5, i64 %265, i64 %266) #21
  br label %279

279:                                              ; preds = %273, %275, %278
  %280 = bitcast %"class.std::__1::basic_ostringstream"* %2 to %"class.std::__1::basic_ostream"*
  %281 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %280, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7) #21
  %282 = load i8, i8* %56, align 1
  %283 = icmp slt i8 %282, 0
  %284 = load i8*, i8** %40, align 8
  %285 = load i64, i64* %41, align 8
  %286 = zext i8 %282 to i64
  %287 = select i1 %283, i8* %284, i8* %39
  %288 = select i1 %283, i64 %285, i64 %286
  %289 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %280, i8* %287, i64 %288) #21
  %290 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %280, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #21
  %291 = load i8, i8* %131, align 1
  %292 = icmp slt i8 %291, 0
  %293 = load i8*, i8** %46, align 8
  %294 = load i64, i64* %47, align 8
  %295 = zext i8 %291 to i64
  %296 = select i1 %292, i8* %293, i8* %45
  %297 = select i1 %292, i64 %294, i64 %295
  %298 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %280, i8* %296, i64 %297) #21
  %299 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %280, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #21
  %300 = load i8, i8* %206, align 1
  %301 = icmp slt i8 %300, 0
  %302 = load i8*, i8** %51, align 8
  %303 = load i64, i64* %52, align 8
  %304 = zext i8 %300 to i64
  %305 = select i1 %301, i8* %302, i8* %50
  %306 = select i1 %301, i64 %303, i64 %304
  %307 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %280, i8* %305, i64 %306) #21
  %308 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %280, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #21
  %309 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %309) #21
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_stringbuf"* %12) #21
  %310 = load atomic i8, i8* bitcast (i64* @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings to i8*) acquire, align 8
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %312, label %319, !prof !38

312:                                              ; preds = %279
  %313 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings) #21
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %319, label %315

315:                                              ; preds = %312
  %316 = call i8* @_Znwm(i64 24) #27
  %317 = getelementptr inbounds i8, i8* %316, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %317, i8 0, i64 16, i1 false) #21
  %318 = bitcast i8* %316 to i8**
  store i8* %317, i8** %318, align 8
  store i8* %316, i8** bitcast (%"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings) #21
  br label %319

319:                                              ; preds = %315, %312, %279
  %320 = load %"class.std::__1::set.1056"*, %"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings, align 8
  %321 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %320, i64 0, i32 0
  %322 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.1057"* %321, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #21
  %323 = load %"class.std::__1::set.1056"*, %"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings, align 8
  %324 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %323, i64 0, i32 0, i32 1, i32 0, i32 0
  %325 = icmp eq %"class.std::__1::__tree_end_node"* %322, %324
  br i1 %325, label %337, label %326

326:                                              ; preds = %319
  %327 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %322, i64 4
  %328 = bitcast %"class.std::__1::__tree_end_node"* %327 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %329 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %328, i64 0, i32 1, i32 0
  %330 = load i8, i8* %329, align 1
  %331 = icmp slt i8 %330, 0
  br i1 %331, label %332, label %335

332:                                              ; preds = %326
  %333 = bitcast %"class.std::__1::__tree_end_node"* %327 to i8**
  %334 = load i8*, i8** %333, align 8
  br label %351

335:                                              ; preds = %326
  %336 = bitcast %"class.std::__1::__tree_end_node"* %327 to i8*
  br label %351

337:                                              ; preds = %319
  %338 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %323, i64 0, i32 0
  %339 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1057"* %338, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #21
  %340 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %339, 0
  %341 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %340, i64 4
  %342 = bitcast %"class.std::__1::__tree_end_node"* %341 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %343 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %342, i64 0, i32 1, i32 0
  %344 = load i8, i8* %343, align 1
  %345 = icmp slt i8 %344, 0
  br i1 %345, label %346, label %349

346:                                              ; preds = %337
  %347 = bitcast %"class.std::__1::__tree_end_node"* %341 to i8**
  %348 = load i8*, i8** %347, align 8
  br label %351

349:                                              ; preds = %337
  %350 = bitcast %"class.std::__1::__tree_end_node"* %341 to i8*
  br label %351

351:                                              ; preds = %332, %335, %346, %349
  %352 = phi i8* [ %334, %332 ], [ %336, %335 ], [ %348, %346 ], [ %350, %349 ]
  %353 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 28
  store i8* %352, i8** %353, align 8
  %354 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %355 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %354, i64 0, i32 1, i32 0
  %356 = load i8, i8* %355, align 1
  %357 = icmp slt i8 %356, 0
  br i1 %357, label %358, label %361

358:                                              ; preds = %351
  %359 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %360 = load i8*, i8** %359, align 8
  call void @_ZdlPv(i8* %360) #27
  br label %361

361:                                              ; preds = %351, %358
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %309) #21
  %362 = load i8, i8* %206, align 1
  %363 = icmp slt i8 %362, 0
  br i1 %363, label %364, label %366

364:                                              ; preds = %361
  %365 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %365) #27
  br label %366

366:                                              ; preds = %361, %364
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #21
  %367 = load i8, i8* %131, align 1
  %368 = icmp slt i8 %367, 0
  br i1 %368, label %369, label %371

369:                                              ; preds = %366
  %370 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %370) #27
  br label %371

371:                                              ; preds = %366, %369
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #21
  %372 = load i8, i8* %56, align 1
  %373 = icmp slt i8 %372, 0
  br i1 %373, label %374, label %376

374:                                              ; preds = %371
  %375 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %375) #27
  br label %376

376:                                              ; preds = %371, %374
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #21
  %377 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %377, i64* %15, align 8
  %378 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %379 = inttoptr i64 %377 to i8*
  %380 = getelementptr i8, i8* %379, i64 -24
  %381 = bitcast i8* %380 to i64*
  %382 = load i64, i64* %381, align 8
  %383 = getelementptr inbounds i8, i8* %7, i64 %382
  %384 = bitcast i8* %383 to i64*
  store i64 %378, i64* %384, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %385 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %386 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %385, i64 0, i32 1, i32 0
  %387 = load i8, i8* %386, align 1
  %388 = icmp slt i8 %387, 0
  br i1 %388, label %389, label %392

389:                                              ; preds = %376
  %390 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = load i8*, i8** %390, align 8
  call void @_ZdlPv(i8* %391) #27
  br label %392

392:                                              ; preds = %376, %389
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #21
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %280, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #21
  %393 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 2
  %394 = bitcast %"class.std::__1::basic_ios.base"* %393 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %394) #21
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %7) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18initVersionStringsEv(%"class.gl::Context"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::basic_ostringstream", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_ostringstream", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_ostringstream"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %6) #21
  %7 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_stringbuf"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 256, i1 false)
  %9 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %2 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %2 to i8**
  %17 = inttoptr i64 %13 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %6, i64 %20
  %22 = bitcast i8* %21 to i64*
  store i64 %15, i64* %22, align 8
  %23 = load i8*, i8** %16, align 8
  %24 = getelementptr i8, i8* %23, i64 -24
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %6, i64 %26
  %28 = bitcast i8* %27 to %"class.std::__1::ios_base"*
  %29 = bitcast %"class.std::__1::basic_stringbuf"* %11 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %28, i8* %29) #21
  %30 = getelementptr inbounds i8, i8* %27, i64 136
  %31 = bitcast i8* %30 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %31, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 144
  %33 = bitcast i8* %32 to i32*
  store i32 -1, i32* %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %12) #21
  %34 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 1, i32 1
  %36 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 1, i32 3
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false) #21
  store i32 16, i32* %36, align 8
  %38 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 12448
  %41 = bitcast %"class.std::__1::basic_ostringstream"* %2 to %"class.std::__1::basic_ostream"*
  br i1 %40, label %42, label %44

42:                                               ; preds = %1
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %41, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i64 10) #21
  br label %44

44:                                               ; preds = %1, %42
  %45 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %41, i32 %46) #21
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %47, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #21
  %49 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %48, i32 %50) #21
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %51, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i64 10) #21
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %52, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i64 28) #21
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %53, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #21
  %55 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #21
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_stringbuf"* %11) #21
  %56 = load atomic i8, i8* bitcast (i64* @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings to i8*) acquire, align 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %65, !prof !38

58:                                               ; preds = %44
  %59 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings) #21
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %58
  %62 = call i8* @_Znwm(i64 24) #27
  %63 = getelementptr inbounds i8, i8* %62, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #21
  %64 = bitcast i8* %62 to i8**
  store i8* %63, i8** %64, align 8
  store i8* %62, i8** bitcast (%"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings) #21
  br label %65

65:                                               ; preds = %61, %58, %44
  %66 = load %"class.std::__1::set.1056"*, %"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings, align 8
  %67 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %66, i64 0, i32 0
  %68 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.1057"* %67, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #21
  %69 = load %"class.std::__1::set.1056"*, %"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings, align 8
  %70 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %69, i64 0, i32 0, i32 1, i32 0, i32 0
  %71 = icmp eq %"class.std::__1::__tree_end_node"* %68, %70
  br i1 %71, label %83, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 4
  %74 = bitcast %"class.std::__1::__tree_end_node"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = bitcast %"class.std::__1::__tree_end_node"* %73 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %97

81:                                               ; preds = %72
  %82 = bitcast %"class.std::__1::__tree_end_node"* %73 to i8*
  br label %97

83:                                               ; preds = %65
  %84 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %69, i64 0, i32 0
  %85 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1057"* %84, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #21
  %86 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %85, 0
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 4
  %88 = bitcast %"class.std::__1::__tree_end_node"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %83
  %93 = bitcast %"class.std::__1::__tree_end_node"* %87 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %97

95:                                               ; preds = %83
  %96 = bitcast %"class.std::__1::__tree_end_node"* %87 to i8*
  br label %97

97:                                               ; preds = %78, %81, %92, %95
  %98 = phi i8* [ %80, %78 ], [ %82, %81 ], [ %94, %92 ], [ %96, %95 ]
  %99 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 26
  store i8* %98, i8** %99, align 8
  %100 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %106) #27
  br label %107

107:                                              ; preds = %97, %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #21
  %108 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %108) #21
  %109 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1
  %110 = bitcast %"class.std::__1::basic_stringbuf"* %109 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 256, i1 false)
  %111 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1
  %114 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %113, i64 0, i32 0
  %115 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i64*
  store i64 %13, i64* %115, align 8
  %116 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8**
  %117 = load i64, i64* %19, align 8
  %118 = getelementptr inbounds i8, i8* %108, i64 %117
  %119 = bitcast i8* %118 to i64*
  store i64 %15, i64* %119, align 8
  %120 = load i8*, i8** %116, align 8
  %121 = getelementptr i8, i8* %120, i64 -24
  %122 = bitcast i8* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds i8, i8* %108, i64 %123
  %125 = bitcast i8* %124 to %"class.std::__1::ios_base"*
  %126 = bitcast %"class.std::__1::basic_stringbuf"* %113 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %125, i8* %126) #21
  %127 = getelementptr inbounds i8, i8* %124, i64 136
  %128 = bitcast i8* %127 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %128, align 8
  %129 = getelementptr inbounds i8, i8* %124, i64 144
  %130 = bitcast i8* %129 to i32*
  store i32 -1, i32* %130, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %112, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %111, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %114) #21
  %131 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %113, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  %132 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1, i32 1
  %133 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1, i32 3
  %134 = bitcast %"class.std::__1::basic_string"* %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 32, i1 false) #21
  store i32 16, i32* %133, align 8
  %135 = load i32, i32* %38, align 4
  %136 = icmp eq i32 %135, 12448
  %137 = bitcast %"class.std::__1::basic_ostringstream"* %4 to %"class.std::__1::basic_ostream"*
  br i1 %136, label %138, label %140

138:                                              ; preds = %107
  %139 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %137, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i64 18) #21
  br label %142

140:                                              ; preds = %107
  %141 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %137, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i64 12) #21
  br label %142

142:                                              ; preds = %140, %138
  %143 = load i32, i32* %45, align 4
  %144 = icmp eq i32 %143, 2
  %145 = select i1 %144, i32 1, i32 %143
  %146 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %137, i32 %145) #21
  %147 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %146, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #21
  %148 = load i32, i32* %49, align 4
  %149 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %147, i32 %148) #21
  %150 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %149, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i64 9) #21
  %151 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %150, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i64 28) #21
  %152 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %151, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #21
  %153 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %153) #21
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_stringbuf"* %113) #21
  %154 = load atomic i8, i8* bitcast (i64* @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings to i8*) acquire, align 8
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %156, label %163, !prof !38

156:                                              ; preds = %142
  %157 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings) #21
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %163, label %159

159:                                              ; preds = %156
  %160 = call i8* @_Znwm(i64 24) #27
  %161 = getelementptr inbounds i8, i8* %160, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 16, i1 false) #21
  %162 = bitcast i8* %160 to i8**
  store i8* %161, i8** %162, align 8
  store i8* %160, i8** bitcast (%"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings) #21
  br label %163

163:                                              ; preds = %159, %156, %142
  %164 = load %"class.std::__1::set.1056"*, %"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings, align 8
  %165 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %164, i64 0, i32 0
  %166 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.1057"* %165, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #21
  %167 = load %"class.std::__1::set.1056"*, %"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings, align 8
  %168 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %167, i64 0, i32 0, i32 1, i32 0, i32 0
  %169 = icmp eq %"class.std::__1::__tree_end_node"* %166, %168
  br i1 %169, label %181, label %170

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %166, i64 4
  %172 = bitcast %"class.std::__1::__tree_end_node"* %171 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %174 = load i8, i8* %173, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %176, label %179

176:                                              ; preds = %170
  %177 = bitcast %"class.std::__1::__tree_end_node"* %171 to i8**
  %178 = load i8*, i8** %177, align 8
  br label %195

179:                                              ; preds = %170
  %180 = bitcast %"class.std::__1::__tree_end_node"* %171 to i8*
  br label %195

181:                                              ; preds = %163
  %182 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %167, i64 0, i32 0
  %183 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1057"* %182, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #21
  %184 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %183, 0
  %185 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 4
  %186 = bitcast %"class.std::__1::__tree_end_node"* %185 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %187 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %186, i64 0, i32 1, i32 0
  %188 = load i8, i8* %187, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %181
  %191 = bitcast %"class.std::__1::__tree_end_node"* %185 to i8**
  %192 = load i8*, i8** %191, align 8
  br label %195

193:                                              ; preds = %181
  %194 = bitcast %"class.std::__1::__tree_end_node"* %185 to i8*
  br label %195

195:                                              ; preds = %176, %179, %190, %193
  %196 = phi i8* [ %178, %176 ], [ %180, %179 ], [ %192, %190 ], [ %194, %193 ]
  %197 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 27
  store i8* %196, i8** %197, align 8
  %198 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %198, i64 0, i32 1, i32 0
  %200 = load i8, i8* %199, align 1
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %195
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8
  call void @_ZdlPv(i8* %204) #27
  br label %205

205:                                              ; preds = %195, %202
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %153) #21
  %206 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %206, i64* %115, align 8
  %207 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %208 = inttoptr i64 %206 to i8*
  %209 = getelementptr i8, i8* %208, i64 -24
  %210 = bitcast i8* %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = getelementptr inbounds i8, i8* %108, i64 %211
  %213 = bitcast i8* %212 to i64*
  store i64 %207, i64* %213, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  %214 = bitcast %"class.std::__1::basic_string"* %132 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %215 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %214, i64 0, i32 1, i32 0
  %216 = load i8, i8* %215, align 1
  %217 = icmp slt i8 %216, 0
  br i1 %217, label %218, label %221

218:                                              ; preds = %205
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load i8*, i8** %219, align 8
  call void @_ZdlPv(i8* %220) #27
  br label %221

221:                                              ; preds = %205, %218
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %114) #21
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %137, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #21
  %222 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 2
  %223 = bitcast %"class.std::__1::basic_ios.base"* %222 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %223) #21
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %108) #21
  store i64 %206, i64* %14, align 8
  %224 = load i64, i64* %210, align 8
  %225 = getelementptr inbounds i8, i8* %6, i64 %224
  %226 = bitcast i8* %225 to i64*
  store i64 %207, i64* %226, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %227 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %228 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %227, i64 0, i32 1, i32 0
  %229 = load i8, i8* %228, align 1
  %230 = icmp slt i8 %229, 0
  br i1 %230, label %231, label %234

231:                                              ; preds = %221
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load i8*, i8** %232, align 8
  call void @_ZdlPv(i8* %233) #27
  br label %234

234:                                              ; preds = %221, %231
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %12) #21
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %41, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #21
  %235 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 2
  %236 = bitcast %"class.std::__1::basic_ios.base"* %235 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %236) #21
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %6) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20initExtensionStringsEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::vector.125", align 8
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 30
  %4 = bitcast %"class.std::__1::vector.586"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 30, i32 0, i32 1
  %7 = bitcast i8*** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = bitcast %"class.std::__1::vector.125"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #21
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7
  call void @_ZNK2gl10Extensions10getStringsEv(%"class.std::__1::vector.125"* nonnull sret %2, %"struct.gl::Extensions"* %9) #21
  %10 = getelementptr inbounds %"class.std::__1::vector.125", %"class.std::__1::vector.125"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.125", %"class.std::__1::vector.125"* %2, i64 0, i32 0, i32 1
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp eq %"class.std::__1::basic_string"* %11, %13
  br i1 %14, label %21, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 30, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast i8*** %16 to i64*
  %18 = getelementptr inbounds %"class.std::__1::vector.586", %"class.std::__1::vector.586"* %3, i64 0, i32 0, i32 0
  br label %64

19:                                               ; preds = %171
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  br label %21

21:                                               ; preds = %19, %1
  %22 = phi %"class.std::__1::basic_string"* [ %20, %19 ], [ %11, %1 ]
  %23 = icmp eq %"class.std::__1::basic_string"* %22, null
  br i1 %23, label %45, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %27 = icmp eq %"class.std::__1::basic_string"* %26, %22
  br i1 %27, label %43, label %28

28:                                               ; preds = %24, %38
  %29 = phi %"class.std::__1::basic_string"* [ %30, %38 ], [ %26, %24 ]
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 -1
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #27
  br label %38

38:                                               ; preds = %35, %28
  %39 = icmp eq %"class.std::__1::basic_string"* %30, %22
  br i1 %39, label %40, label %28

40:                                               ; preds = %38
  %41 = bitcast %"class.std::__1::vector.125"* %2 to i8**
  %42 = load i8*, i8** %41, align 8
  br label %43

43:                                               ; preds = %40, %24
  %44 = phi i8* [ %42, %40 ], [ %25, %24 ]
  store %"class.std::__1::basic_string"* %22, %"class.std::__1::basic_string"** %12, align 8
  call void @_ZdlPv(i8* %44) #27
  br label %45

45:                                               ; preds = %21, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #21
  %46 = call fastcc i8* @"_ZZN2gl7Context20initExtensionStringsEvENK3$_0clERKNSt3__16vectorIPKcNS2_9allocatorIS5_EEEE"(%"class.std::__1::vector.586"* dereferenceable(24) %3)
  %47 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 29
  store i8* %46, i8** %47, align 8
  %48 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 32
  %49 = bitcast %"class.std::__1::vector.586"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 32, i32 0, i32 1
  %52 = bitcast i8*** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = call dereferenceable(24) %"class.std::__1::map.936"* @_ZN2gl19GetExtensionInfoMapEv() #21
  %54 = getelementptr inbounds %"class.std::__1::map.936", %"class.std::__1::map.936"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::map.936", %"class.std::__1::map.936"* %53, i64 0, i32 0, i32 1, i32 0, i32 0
  %57 = icmp eq %"class.std::__1::__tree_end_node"* %55, %56
  br i1 %57, label %174, label %58

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %9, i64 0, i32 0
  %60 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 0
  %61 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 32, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast i8*** %61 to i64*
  %63 = getelementptr inbounds %"class.std::__1::vector.586", %"class.std::__1::vector.586"* %48, i64 0, i32 0, i32 0
  br label %177

64:                                               ; preds = %15, %171
  %65 = phi %"class.std::__1::basic_string"* [ %11, %15 ], [ %172, %171 ]
  %66 = load atomic i8, i8* bitcast (i64* @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings to i8*) acquire, align 8
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %75, !prof !38

68:                                               ; preds = %64
  %69 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings) #21
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %68
  %72 = call i8* @_Znwm(i64 24) #27
  %73 = getelementptr inbounds i8, i8* %72, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 16, i1 false) #21
  %74 = bitcast i8* %72 to i8**
  store i8* %73, i8** %74, align 8
  store i8* %72, i8** bitcast (%"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings) #21
  br label %75

75:                                               ; preds = %71, %68, %64
  %76 = load %"class.std::__1::set.1056"*, %"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings, align 8
  %77 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %76, i64 0, i32 0
  %78 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.1057"* %77, %"class.std::__1::basic_string"* dereferenceable(24) %65) #21
  %79 = load %"class.std::__1::set.1056"*, %"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings, align 8
  %80 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %79, i64 0, i32 0, i32 1, i32 0, i32 0
  %81 = icmp eq %"class.std::__1::__tree_end_node"* %78, %80
  br i1 %81, label %93, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %78, i64 4
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %82
  %89 = bitcast %"class.std::__1::__tree_end_node"* %83 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %107

91:                                               ; preds = %82
  %92 = bitcast %"class.std::__1::__tree_end_node"* %83 to i8*
  br label %107

93:                                               ; preds = %75
  %94 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %79, i64 0, i32 0
  %95 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1057"* %94, %"class.std::__1::basic_string"* dereferenceable(24) %65, %"class.std::__1::basic_string"* dereferenceable(24) %65) #21
  %96 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %95, 0
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 4
  %98 = bitcast %"class.std::__1::__tree_end_node"* %97 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %93
  %103 = bitcast %"class.std::__1::__tree_end_node"* %97 to i8**
  %104 = load i8*, i8** %103, align 8
  br label %107

105:                                              ; preds = %93
  %106 = bitcast %"class.std::__1::__tree_end_node"* %97 to i8*
  br label %107

107:                                              ; preds = %88, %91, %102, %105
  %108 = phi i8* [ %90, %88 ], [ %92, %91 ], [ %104, %102 ], [ %106, %105 ]
  %109 = ptrtoint i8* %108 to i64
  %110 = load i8**, i8*** %6, align 8
  %111 = load i8**, i8*** %16, align 8
  %112 = icmp ult i8** %110, %111
  %113 = ptrtoint i8** %111 to i64
  br i1 %112, label %114, label %118

114:                                              ; preds = %107
  %115 = bitcast i8** %110 to i64*
  store i64 %109, i64* %115, align 8
  %116 = getelementptr inbounds i8*, i8** %110, i64 1
  %117 = ptrtoint i8** %116 to i64
  store i64 %117, i64* %7, align 8
  br label %171

118:                                              ; preds = %107
  %119 = ptrtoint i8** %110 to i64
  %120 = load i64, i64* %4, align 8
  %121 = sub i64 %119, %120
  %122 = ashr exact i64 %121, 3
  %123 = add nsw i64 %122, 1
  %124 = icmp ugt i64 %123, 2305843009213693951
  br i1 %124, label %125, label %127

125:                                              ; preds = %118
  %126 = bitcast %"class.std::__1::vector.586"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %126) #28
  unreachable

127:                                              ; preds = %118
  %128 = sub i64 %113, %120
  %129 = ashr exact i64 %128, 3
  %130 = icmp ult i64 %129, 1152921504606846975
  br i1 %130, label %131, label %139

131:                                              ; preds = %127
  %132 = ashr exact i64 %128, 2
  %133 = icmp ult i64 %132, %123
  %134 = select i1 %133, i64 %123, i64 %132
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %144, label %136

136:                                              ; preds = %131
  %137 = icmp ugt i64 %134, 2305843009213693951
  br i1 %137, label %138, label %139

138:                                              ; preds = %136
  call void @abort() #28
  unreachable

139:                                              ; preds = %136, %127
  %140 = phi i64 [ %134, %136 ], [ 2305843009213693951, %127 ]
  %141 = shl i64 %140, 3
  %142 = call i8* @_Znwm(i64 %141) #27
  %143 = bitcast i8* %142 to i8**
  br label %144

144:                                              ; preds = %139, %131
  %145 = phi i64 [ %140, %139 ], [ 0, %131 ]
  %146 = phi i8** [ %143, %139 ], [ null, %131 ]
  %147 = getelementptr inbounds i8*, i8** %146, i64 %122
  %148 = getelementptr inbounds i8*, i8** %146, i64 %145
  %149 = ptrtoint i8** %148 to i64
  %150 = bitcast i8** %147 to i64*
  store i64 %109, i64* %150, align 8
  %151 = getelementptr inbounds i8*, i8** %147, i64 1
  %152 = ptrtoint i8** %151 to i64
  %153 = load i8**, i8*** %18, align 8
  %154 = load i64, i64* %7, align 8
  %155 = ptrtoint i8** %153 to i64
  %156 = sub i64 %154, %155
  %157 = ashr exact i64 %156, 3
  %158 = sub nsw i64 0, %157
  %159 = getelementptr inbounds i8*, i8** %147, i64 %158
  %160 = ptrtoint i8** %159 to i64
  %161 = icmp sgt i64 %156, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %144
  %163 = bitcast i8** %159 to i8*
  %164 = bitcast i8** %153 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %164, i64 %156, i1 false) #21
  %165 = load i8**, i8*** %18, align 8
  br label %166

166:                                              ; preds = %162, %144
  %167 = phi i8** [ %153, %144 ], [ %165, %162 ]
  store i64 %160, i64* %4, align 8
  store i64 %152, i64* %7, align 8
  store i64 %149, i64* %17, align 8
  %168 = icmp eq i8** %167, null
  br i1 %168, label %171, label %169

169:                                              ; preds = %166
  %170 = bitcast i8** %167 to i8*
  call void @_ZdlPv(i8* %170) #27
  br label %171

171:                                              ; preds = %114, %166, %169
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 1
  %173 = icmp eq %"class.std::__1::basic_string"* %172, %13
  br i1 %173, label %19, label %64

174:                                              ; preds = %330, %45
  %175 = call fastcc i8* @"_ZZN2gl7Context20initExtensionStringsEvENK3$_0clERKNSt3__16vectorIPKcNS2_9allocatorIS5_EEEE"(%"class.std::__1::vector.586"* dereferenceable(24) %48)
  %176 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 31
  store i8* %175, i8** %176, align 8
  ret void

177:                                              ; preds = %58, %330
  %178 = phi %"class.std::__1::__tree_end_node"* [ %55, %58 ], [ %331, %330 ]
  %179 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %178, i64 4
  %180 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %178, i64 7
  %181 = bitcast %"class.std::__1::__tree_end_node"* %180 to i8*
  %182 = load i8, i8* %181, align 8, !range !2
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %302, label %184

184:                                              ; preds = %177
  %185 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %178, i64 8
  %186 = bitcast %"class.std::__1::__tree_end_node"* %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = getelementptr inbounds i8, i8* %59, i64 %187
  %189 = load i8, i8* %188, align 1, !range !2
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %302

191:                                              ; preds = %184
  %192 = getelementptr inbounds i8, i8* %60, i64 %187
  %193 = load i8, i8* %192, align 1, !range !2
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %302, label %195

195:                                              ; preds = %191
  %196 = bitcast %"class.std::__1::__tree_end_node"* %179 to %"class.std::__1::basic_string"*
  %197 = load atomic i8, i8* bitcast (i64* @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings to i8*) acquire, align 8
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %199, label %206, !prof !38

199:                                              ; preds = %195
  %200 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings) #21
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %206, label %202

202:                                              ; preds = %199
  %203 = call i8* @_Znwm(i64 24) #27
  %204 = getelementptr inbounds i8, i8* %203, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 16, i1 false) #21
  %205 = bitcast i8* %203 to i8**
  store i8* %204, i8** %205, align 8
  store i8* %203, i8** bitcast (%"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings) #21
  br label %206

206:                                              ; preds = %202, %199, %195
  %207 = load %"class.std::__1::set.1056"*, %"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings, align 8
  %208 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %207, i64 0, i32 0
  %209 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.1057"* %208, %"class.std::__1::basic_string"* dereferenceable(24) %196) #21
  %210 = load %"class.std::__1::set.1056"*, %"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings, align 8
  %211 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %210, i64 0, i32 0, i32 1, i32 0, i32 0
  %212 = icmp eq %"class.std::__1::__tree_end_node"* %209, %211
  br i1 %212, label %224, label %213

213:                                              ; preds = %206
  %214 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %209, i64 4
  %215 = bitcast %"class.std::__1::__tree_end_node"* %214 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %215, i64 0, i32 1, i32 0
  %217 = load i8, i8* %216, align 1
  %218 = icmp slt i8 %217, 0
  br i1 %218, label %219, label %222

219:                                              ; preds = %213
  %220 = bitcast %"class.std::__1::__tree_end_node"* %214 to i8**
  %221 = load i8*, i8** %220, align 8
  br label %238

222:                                              ; preds = %213
  %223 = bitcast %"class.std::__1::__tree_end_node"* %214 to i8*
  br label %238

224:                                              ; preds = %206
  %225 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %210, i64 0, i32 0
  %226 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1057"* %225, %"class.std::__1::basic_string"* dereferenceable(24) %196, %"class.std::__1::basic_string"* dereferenceable(24) %196) #21
  %227 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %226, 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %227, i64 4
  %229 = bitcast %"class.std::__1::__tree_end_node"* %228 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %229, i64 0, i32 1, i32 0
  %231 = load i8, i8* %230, align 1
  %232 = icmp slt i8 %231, 0
  br i1 %232, label %233, label %236

233:                                              ; preds = %224
  %234 = bitcast %"class.std::__1::__tree_end_node"* %228 to i8**
  %235 = load i8*, i8** %234, align 8
  br label %238

236:                                              ; preds = %224
  %237 = bitcast %"class.std::__1::__tree_end_node"* %228 to i8*
  br label %238

238:                                              ; preds = %219, %222, %233, %236
  %239 = phi i8* [ %221, %219 ], [ %223, %222 ], [ %235, %233 ], [ %237, %236 ]
  %240 = ptrtoint i8* %239 to i64
  %241 = load i8**, i8*** %51, align 8
  %242 = load i8**, i8*** %61, align 8
  %243 = icmp ult i8** %241, %242
  %244 = ptrtoint i8** %242 to i64
  br i1 %243, label %245, label %249

245:                                              ; preds = %238
  %246 = bitcast i8** %241 to i64*
  store i64 %240, i64* %246, align 8
  %247 = getelementptr inbounds i8*, i8** %241, i64 1
  %248 = ptrtoint i8** %247 to i64
  store i64 %248, i64* %52, align 8
  br label %302

249:                                              ; preds = %238
  %250 = ptrtoint i8** %241 to i64
  %251 = load i64, i64* %49, align 8
  %252 = sub i64 %250, %251
  %253 = ashr exact i64 %252, 3
  %254 = add nsw i64 %253, 1
  %255 = icmp ugt i64 %254, 2305843009213693951
  br i1 %255, label %256, label %258

256:                                              ; preds = %249
  %257 = bitcast %"class.std::__1::vector.586"* %48 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %257) #28
  unreachable

258:                                              ; preds = %249
  %259 = sub i64 %244, %251
  %260 = ashr exact i64 %259, 3
  %261 = icmp ult i64 %260, 1152921504606846975
  br i1 %261, label %262, label %270

262:                                              ; preds = %258
  %263 = ashr exact i64 %259, 2
  %264 = icmp ult i64 %263, %254
  %265 = select i1 %264, i64 %254, i64 %263
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %275, label %267

267:                                              ; preds = %262
  %268 = icmp ugt i64 %265, 2305843009213693951
  br i1 %268, label %269, label %270

269:                                              ; preds = %267
  call void @abort() #28
  unreachable

270:                                              ; preds = %267, %258
  %271 = phi i64 [ %265, %267 ], [ 2305843009213693951, %258 ]
  %272 = shl i64 %271, 3
  %273 = call i8* @_Znwm(i64 %272) #27
  %274 = bitcast i8* %273 to i8**
  br label %275

275:                                              ; preds = %270, %262
  %276 = phi i64 [ %271, %270 ], [ 0, %262 ]
  %277 = phi i8** [ %274, %270 ], [ null, %262 ]
  %278 = getelementptr inbounds i8*, i8** %277, i64 %253
  %279 = getelementptr inbounds i8*, i8** %277, i64 %276
  %280 = ptrtoint i8** %279 to i64
  %281 = bitcast i8** %278 to i64*
  store i64 %240, i64* %281, align 8
  %282 = getelementptr inbounds i8*, i8** %278, i64 1
  %283 = ptrtoint i8** %282 to i64
  %284 = load i8**, i8*** %63, align 8
  %285 = load i64, i64* %52, align 8
  %286 = ptrtoint i8** %284 to i64
  %287 = sub i64 %285, %286
  %288 = ashr exact i64 %287, 3
  %289 = sub nsw i64 0, %288
  %290 = getelementptr inbounds i8*, i8** %278, i64 %289
  %291 = ptrtoint i8** %290 to i64
  %292 = icmp sgt i64 %287, 0
  br i1 %292, label %293, label %297

293:                                              ; preds = %275
  %294 = bitcast i8** %290 to i8*
  %295 = bitcast i8** %284 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %294, i8* align 8 %295, i64 %287, i1 false) #21
  %296 = load i8**, i8*** %63, align 8
  br label %297

297:                                              ; preds = %293, %275
  %298 = phi i8** [ %284, %275 ], [ %296, %293 ]
  store i64 %291, i64* %49, align 8
  store i64 %283, i64* %52, align 8
  store i64 %280, i64* %62, align 8
  %299 = icmp eq i8** %298, null
  br i1 %299, label %302, label %300

300:                                              ; preds = %297
  %301 = bitcast i8** %298 to i8*
  call void @_ZdlPv(i8* %301) #27
  br label %302

302:                                              ; preds = %300, %297, %245, %191, %184, %177
  %303 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %178, i64 1, i32 0
  %304 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %303, align 8
  %305 = icmp eq %"class.std::__1::__tree_node_base"* %304, null
  br i1 %305, label %306, label %314

306:                                              ; preds = %302
  %307 = bitcast %"class.std::__1::__tree_end_node"* %178 to %"class.std::__1::__tree_node_base"*
  %308 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %178, i64 2
  %309 = bitcast %"class.std::__1::__tree_end_node"* %308 to %"class.std::__1::__tree_end_node"**
  %310 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %309, align 8
  %311 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %310, i64 0, i32 0
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  %313 = icmp eq %"class.std::__1::__tree_node_base"* %312, %307
  br i1 %313, label %330, label %321

314:                                              ; preds = %302, %314
  %315 = phi %"class.std::__1::__tree_node_base"* [ %317, %314 ], [ %304, %302 ]
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %315, i64 0, i32 0, i32 0
  %317 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %316, align 8
  %318 = icmp eq %"class.std::__1::__tree_node_base"* %317, null
  br i1 %318, label %319, label %314

319:                                              ; preds = %314
  %320 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %315, i64 0, i32 0
  br label %330

321:                                              ; preds = %306, %321
  %322 = phi %"class.std::__1::__tree_end_node"** [ %325, %321 ], [ %309, %306 ]
  %323 = bitcast %"class.std::__1::__tree_end_node"** %322 to %"class.std::__1::__tree_node_base"**
  %324 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %323, align 8
  %325 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %324, i64 0, i32 2
  %326 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %325, align 8
  %327 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %326, i64 0, i32 0
  %328 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %327, align 8
  %329 = icmp eq %"class.std::__1::__tree_node_base"* %328, %324
  br i1 %329, label %330, label %321

330:                                              ; preds = %321, %306, %319
  %331 = phi %"class.std::__1::__tree_end_node"* [ %320, %319 ], [ %310, %306 ], [ %326, %321 ]
  %332 = icmp eq %"class.std::__1::__tree_end_node"* %331, %56
  br i1 %332, label %174, label %177
}

declare i32 @_ZNK3egl7Surface8getWidthEv(%"class.egl::Surface"*) local_unnamed_addr #3

declare i32 @_ZNK3egl7Surface9getHeightEv(%"class.egl::Surface"*) local_unnamed_addr #3

declare void @_ZN2gl5State17setViewportParamsEiiii(%"class.gl::State"*, i32, i32, i32, i32) local_unnamed_addr #3

declare void @_ZN2gl5State16setScissorParamsEiiii(%"class.gl::State"*, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23unsetDefaultFramebufferEv(%"class.egl::Error"* noalias sret, %"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 16
  %5 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %4, align 8
  %6 = load i32, i32* getelementptr inbounds (%"struct.gl::FramebufferID", %"struct.gl::FramebufferID"* @_ZN2gl11Framebuffer29kDefaultDrawFramebufferHandleE, i64 0, i32 0), align 4
  %7 = tail call %"class.gl::Framebuffer"* @_ZNK2gl18FramebufferManager14getFramebufferENS_13FramebufferIDE(%"class.gl::FramebufferManager"* %5, i32 %6) #21
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 60
  %9 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %8, align 8
  %10 = icmp eq %"class.gl::Framebuffer"* %9, %7
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  tail call void @_ZN2gl5State25setReadFramebufferBindingEPNS_11FramebufferE(%"class.gl::State"* %3, %"class.gl::Framebuffer"* null) #21
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 68
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %12, %"class.angle::Subject"* null) #21
  br label %13

13:                                               ; preds = %11, %2
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 61
  %15 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %14, align 8
  %16 = icmp eq %"class.gl::Framebuffer"* %15, %7
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  tail call void @_ZN2gl5State25setDrawFramebufferBindingEPNS_11FramebufferE(%"class.gl::State"* %3, %"class.gl::Framebuffer"* null) #21
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 67
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %18, %"class.angle::Subject"* null) #21
  br label %19

19:                                               ; preds = %17, %13
  %20 = icmp eq %"class.gl::Framebuffer"* %7, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %19
  tail call void @_ZN2gl11Framebuffer9onDestroyEPKNS_7ContextE(%"class.gl::Framebuffer"* nonnull %7, %"class.gl::Context"* %1) #21
  %22 = bitcast %"class.gl::Framebuffer"* %7 to void (%"class.gl::Framebuffer"*)***
  %23 = load void (%"class.gl::Framebuffer"*)**, void (%"class.gl::Framebuffer"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gl::Framebuffer"*)*, void (%"class.gl::Framebuffer"*)** %23, i64 1
  %25 = load void (%"class.gl::Framebuffer"*)*, void (%"class.gl::Framebuffer"*)** %24, align 8
  tail call void %25(%"class.gl::Framebuffer"* nonnull %7) #21
  br label %26

26:                                               ; preds = %19, %21
  %27 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %4, align 8
  tail call void @_ZN2gl18FramebufferManager21setDefaultFramebufferEPNS_11FramebufferE(%"class.gl::FramebufferManager"* %27, %"class.gl::Framebuffer"* null) #21
  %28 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 43
  %29 = load %"class.egl::Surface"*, %"class.egl::Surface"** %28, align 8
  %30 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 44
  %31 = load %"class.egl::Surface"*, %"class.egl::Surface"** %30, align 8
  %32 = icmp eq %"class.egl::Surface"* %29, null
  %33 = bitcast %"class.egl::Surface"** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false)
  br i1 %32, label %53, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %36 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 -86, i64 16, i1 false)
  tail call void @_ZN3egl7Surface13unMakeCurrentEPKN2gl7ContextE(%"class.egl::Error"* sret %0, %"class.egl::Surface"* nonnull %29, %"class.gl::Context"* %1) #21
  %38 = load i32, i32* %35, align 8
  %39 = icmp eq i32 %38, 12288
  br i1 %39, label %40, label %79

40:                                               ; preds = %34
  %41 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %36, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %36, align 8
  %42 = icmp eq %"class.std::__1::basic_string"* %41, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  tail call void @_ZdlPv(i8* %50) #27
  br label %51

51:                                               ; preds = %48, %43
  %52 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  tail call void @_ZdlPv(i8* %52) #27
  br label %53

53:                                               ; preds = %40, %51, %26
  %54 = icmp eq %"class.egl::Surface"* %29, %31
  br i1 %54, label %74, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %57 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 -86, i64 16, i1 false)
  tail call void @_ZN3egl7Surface13unMakeCurrentEPKN2gl7ContextE(%"class.egl::Error"* sret %0, %"class.egl::Surface"* %31, %"class.gl::Context"* %1) #21
  %59 = load i32, i32* %56, align 8
  %60 = icmp eq i32 %59, 12288
  br i1 %60, label %61, label %79

61:                                               ; preds = %55
  %62 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %57, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %57, align 8
  %63 = icmp eq %"class.std::__1::basic_string"* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %61
  %65 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  tail call void @_ZdlPv(i8* %71) #27
  br label %72

72:                                               ; preds = %69, %64
  %73 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @_ZdlPv(i8* %73) #27
  br label %74

74:                                               ; preds = %61, %72, %53
  %75 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %75, align 8, !alias.scope !39
  %76 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %76, align 4, !alias.scope !39
  %77 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %78 = bitcast %"class.std::__1::unique_ptr.920"* %77 to i64*
  store i64 0, i64* %78, align 8, !alias.scope !39
  br label %79

79:                                               ; preds = %55, %34, %74
  ret void
}

declare void @_ZN5angle12FrameCapture13onMakeCurrentEPKN2gl7ContextEPKN3egl7SurfaceE(%"class.angle::FrameCapture"*, %"class.gl::Context"*, %"class.egl::Surface"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21setDefaultFramebufferEPN3egl7SurfaceES3_(%"class.egl::Error"* noalias sret, %"class.gl::Context"*, %"class.egl::Surface"*, %"class.egl::Surface"*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 43
  store %"class.egl::Surface"* %2, %"class.egl::Surface"** %5, align 8
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 44
  store %"class.egl::Surface"* %3, %"class.egl::Surface"** %6, align 8
  %7 = icmp eq %"class.egl::Surface"* %2, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 16, i1 false)
  tail call void @_ZN3egl7Surface11makeCurrentEPKN2gl7ContextE(%"class.egl::Error"* sret %0, %"class.egl::Surface"* nonnull %2, %"class.gl::Context"* %1) #21
  %12 = load i32, i32* %9, align 8
  %13 = icmp eq i32 %12, 12288
  br i1 %13, label %14, label %106

14:                                               ; preds = %8
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %10, align 8
  %16 = icmp eq %"class.std::__1::basic_string"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #27
  br label %25

25:                                               ; preds = %22, %17
  %26 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  tail call void @_ZdlPv(i8* %26) #27
  br label %27

27:                                               ; preds = %14, %25
  %28 = tail call %"class.gl::Framebuffer"* @_ZN3egl7Surface24createDefaultFramebufferEPKN2gl7ContextEPS0_(%"class.egl::Surface"* nonnull %2, %"class.gl::Context"* %1, %"class.egl::Surface"* %3) #21
  br label %35

29:                                               ; preds = %4
  %30 = tail call i8* @_Znwm(i64 728) #27
  %31 = bitcast i8* %30 to %"class.gl::Framebuffer"*
  %32 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %33 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %33, i64 0, i32 0
  tail call void @_ZN2gl11FramebufferC1EPKNS_7ContextEPN2rx13GLImplFactoryEPN3egl7SurfaceE(%"class.gl::Framebuffer"* nonnull %31, %"class.gl::Context"* %1, %"class.rx::GLImplFactory"* %34, %"class.egl::Surface"* %3) #21
  br label %35

35:                                               ; preds = %29, %27
  %36 = phi %"class.gl::Framebuffer"* [ %28, %27 ], [ %31, %29 ]
  %37 = icmp eq %"class.egl::Surface"* %3, null
  %38 = icmp eq %"class.egl::Surface"* %2, %3
  %39 = or i1 %37, %38
  br i1 %39, label %59, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %42 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %43 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 -86, i64 16, i1 false)
  tail call void @_ZN3egl7Surface11makeCurrentEPKN2gl7ContextE(%"class.egl::Error"* sret %0, %"class.egl::Surface"* nonnull %3, %"class.gl::Context"* %1) #21
  %44 = load i32, i32* %41, align 8
  %45 = icmp eq i32 %44, 12288
  br i1 %45, label %46, label %106

46:                                               ; preds = %40
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %42, align 8
  %48 = icmp eq %"class.std::__1::basic_string"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %46
  %50 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #27
  br label %57

57:                                               ; preds = %54, %49
  %58 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  tail call void @_ZdlPv(i8* %58) #27
  br label %59

59:                                               ; preds = %46, %57, %35
  %60 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2
  %61 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 16
  %62 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %61, align 8
  tail call void @_ZN2gl18FramebufferManager21setDefaultFramebufferEPNS_11FramebufferE(%"class.gl::FramebufferManager"* %62, %"class.gl::Framebuffer"* %36) #21
  %63 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 61
  %64 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %63, align 8
  %65 = icmp eq %"class.gl::Framebuffer"* %64, null
  br i1 %65, label %66, label %82

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %36, i64 0, i32 3, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %61, align 8
  %70 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %71 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %71, i64 0, i32 0
  %73 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 5
  %74 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 9
  %75 = load %"class.egl::ShareGroup"*, %"class.egl::ShareGroup"** %74, align 8
  %76 = tail call %"class.gl::Framebuffer"* @_ZN2gl18FramebufferManager26checkFramebufferAllocationEPN2rx13GLImplFactoryERKNS_4CapsENS_13FramebufferIDEPN3egl10ShareGroupE(%"class.gl::FramebufferManager"* %69, %"class.rx::GLImplFactory"* %72, %"struct.gl::Caps"* dereferenceable(872) %73, i32 %68, %"class.egl::ShareGroup"* %75) #21
  tail call void @_ZN2gl5State25setDrawFramebufferBindingEPNS_11FramebufferE(%"class.gl::State"* %60, %"class.gl::Framebuffer"* %76) #21
  %77 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 67
  %78 = icmp eq %"class.gl::Framebuffer"* %76, null
  %79 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %76, i64 0, i32 2
  %80 = select i1 %78, %"class.angle::Subject"* null, %"class.angle::Subject"* %79
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %77, %"class.angle::Subject"* %80) #21
  %81 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 52, i32 7
  store i64 1, i64* %81, align 8
  br label %82

82:                                               ; preds = %66, %59
  %83 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 60
  %84 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %83, align 8
  %85 = icmp eq %"class.gl::Framebuffer"* %84, null
  br i1 %85, label %86, label %101

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %36, i64 0, i32 3, i32 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %61, align 8
  %90 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %91 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %90, align 8
  %92 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %91, i64 0, i32 0
  %93 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 5
  %94 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 9
  %95 = load %"class.egl::ShareGroup"*, %"class.egl::ShareGroup"** %94, align 8
  %96 = tail call %"class.gl::Framebuffer"* @_ZN2gl18FramebufferManager26checkFramebufferAllocationEPN2rx13GLImplFactoryERKNS_4CapsENS_13FramebufferIDEPN3egl10ShareGroupE(%"class.gl::FramebufferManager"* %89, %"class.rx::GLImplFactory"* %92, %"struct.gl::Caps"* dereferenceable(872) %93, i32 %88, %"class.egl::ShareGroup"* %95) #21
  tail call void @_ZN2gl5State25setReadFramebufferBindingEPNS_11FramebufferE(%"class.gl::State"* %60, %"class.gl::Framebuffer"* %96) #21
  %97 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 68
  %98 = icmp eq %"class.gl::Framebuffer"* %96, null
  %99 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %96, i64 0, i32 2
  %100 = select i1 %98, %"class.angle::Subject"* null, %"class.angle::Subject"* %99
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %97, %"class.angle::Subject"* %100) #21
  br label %101

101:                                              ; preds = %86, %82
  %102 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %102, align 8, !alias.scope !44
  %103 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %103, align 4, !alias.scope !44
  %104 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %105 = bitcast %"class.std::__1::unique_ptr.920"* %104 to i64*
  store i64 0, i64* %105, align 8, !alias.scope !44
  br label %106

106:                                              ; preds = %40, %8, %101
  ret void
}

declare void @_ZN5angle11ResultToEGLENS_6ResultE(%"class.egl::Error"* sret, i32) local_unnamed_addr #3

declare void @_ZN3egl7Display19returnScratchBufferEN5angle13ScratchBufferE(%"class.egl::Display"*, %"class.angle::ScratchBuffer"*) local_unnamed_addr #3

declare void @_ZN5angle13ScratchBufferC1EOS0_(%"class.angle::ScratchBuffer"*, %"class.angle::ScratchBuffer"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5angle13ScratchBufferD1Ev(%"class.angle::ScratchBuffer"*) unnamed_addr #6

declare void @_ZN3egl7Display22returnZeroFilledBufferEN5angle13ScratchBufferE(%"class.egl::Display"*, %"class.angle::ScratchBuffer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context12createBufferEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 10
  %3 = load %"class.gl::BufferManager"*, %"class.gl::BufferManager"** %2, align 8
  %4 = tail call i32 @_ZN2gl13BufferManager12createBufferEv(%"class.gl::BufferManager"* %3) #21
  ret i32 %4
}

declare i32 @_ZN2gl13BufferManager12createBufferEv(%"class.gl::BufferManager"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context13createProgramEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %3 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %5, i64 0, i32 0
  %7 = tail call i32 @_ZN2gl20ShaderProgramManager13createProgramEPN2rx13GLImplFactoryE(%"class.gl::ShaderProgramManager"* %3, %"class.rx::GLImplFactory"* %6) #21
  ret i32 %7
}

declare i32 @_ZN2gl20ShaderProgramManager13createProgramEPN2rx13GLImplFactoryE(%"class.gl::ShaderProgramManager"*, %"class.rx::GLImplFactory"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context12createShaderENS_10ShaderTypeE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %4 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %6 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 8
  %9 = tail call i32 @_ZN2gl20ShaderProgramManager12createShaderEPN2rx13GLImplFactoryERKNS_11LimitationsENS_10ShaderTypeE(%"class.gl::ShaderProgramManager"* %4, %"class.rx::GLImplFactory"* %7, %"struct.gl::Limitations"* dereferenceable(12) %8, i8 zeroext %1) #21
  ret i32 %9
}

declare i32 @_ZN2gl20ShaderProgramManager12createShaderEPN2rx13GLImplFactoryERKNS_11LimitationsENS_10ShaderTypeE(%"class.gl::ShaderProgramManager"*, %"class.rx::GLImplFactory"*, %"struct.gl::Limitations"* dereferenceable(12), i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context13createTextureEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %3 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %2, align 8
  %4 = tail call i32 @_ZN2gl14TextureManager13createTextureEv(%"class.gl::TextureManager"* %3) #21
  ret i32 %4
}

declare i32 @_ZN2gl14TextureManager13createTextureEv(%"class.gl::TextureManager"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context18createRenderbufferEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 13
  %3 = load %"class.gl::RenderbufferManager"*, %"class.gl::RenderbufferManager"** %2, align 8
  %4 = tail call i32 @_ZN2gl19RenderbufferManager18createRenderbufferEv(%"class.gl::RenderbufferManager"* %3) #21
  ret i32 %4
}

declare i32 @_ZN2gl19RenderbufferManager18createRenderbufferEv(%"class.gl::RenderbufferManager"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context17createFramebufferEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %3 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %2, align 8
  %4 = tail call i32 @_ZN2gl18FramebufferManager17createFramebufferEv(%"class.gl::FramebufferManager"* %3) #21
  ret i32 %4
}

declare i32 @_ZN2gl18FramebufferManager17createFramebufferEv(%"class.gl::FramebufferManager"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11genFencesNVEiPNS_9FenceNVIDE(%"class.gl::Context"*, i32, %"struct.gl::FenceNVID"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 19
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %9 = zext i32 %1 to i64
  br label %11

10:                                               ; preds = %11, %3
  ret void

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %19, %11 ]
  %13 = tail call i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* %6) #21
  %14 = tail call i8* @_Znwm(i64 24) #27
  %15 = bitcast i8* %14 to %"class.gl::FenceNV"*
  %16 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %8, align 8
  %17 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %16, i64 0, i32 0
  tail call void @_ZN2gl7FenceNVC1EPN2rx13GLImplFactoryE(%"class.gl::FenceNV"* nonnull %15, %"class.rx::GLImplFactory"* %17) #21
  tail call void @_ZN2gl11ResourceMapINS_7FenceNVENS_9FenceNVIDEE6assignES2_PS1_(%"class.gl::ResourceMap.546"* %7, i32 %13, %"class.gl::FenceNV"* nonnull %15)
  %18 = getelementptr inbounds %"struct.gl::FenceNVID", %"struct.gl::FenceNVID"* %2, i64 %12, i32 0
  store i32 %13, i32* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, %9
  br i1 %20, label %10, label %11
}

declare i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_7FenceNVENS_9FenceNVIDEE6assignES2_PS1_(%"class.gl::ResourceMap.546"*, i32, %"class.gl::FenceNV"*) local_unnamed_addr #5 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %0, i64 0, i32 1
  %16 = load %"class.gl::FenceNV"**, %"class.gl::FenceNV"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #27
  %22 = bitcast i8* %21 to %"class.gl::FenceNV"**
  %23 = bitcast %"class.gl::FenceNV"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %22, i64 %8
  %25 = bitcast %"class.gl::FenceNV"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::FenceNV"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::FenceNV"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #27
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %0, i64 0, i32 1
  %34 = load %"class.gl::FenceNV"**, %"class.gl::FenceNV"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.548", %"class.absl::container_internal::raw_hash_map.548"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !49
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.548", %"class.absl::container_internal::raw_hash_map.548"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !49
  %49 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !49
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !49
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %59, align 8, !noalias !49
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #21, !range !8
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !49
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !9

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !10

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7FenceNVEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.549"* %38, i64 %46) #21, !noalias !49
  %95 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %59, align 8, !noalias !49
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !49
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::FenceNV"* null, %"class.gl::FenceNV"** %97, align 8, !noalias !49
  %98 = load i8*, i8** %47, align 8, !noalias !49
  %99 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %59, align 8, !noalias !49
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.550"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #21, !noalias !49
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !9

108:                                              ; preds = %100
  tail call void @llvm.trap() #21
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::FenceNV"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::FenceNV"* %2, %"class.gl::FenceNV"** %112, align 8
  ret void
}

declare void @_ZN2gl7FenceNVC1EPN2rx13GLImplFactoryE(%"class.gl::FenceNV"*, %"class.rx::GLImplFactory"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context21createProgramPipelineEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 17
  %3 = load %"class.gl::ProgramPipelineManager"*, %"class.gl::ProgramPipelineManager"** %2, align 8
  %4 = tail call i32 @_ZN2gl22ProgramPipelineManager21createProgramPipelineEv(%"class.gl::ProgramPipelineManager"* %3) #21
  ret i32 %4
}

declare i32 @_ZN2gl22ProgramPipelineManager21createProgramPipelineEv(%"class.gl::ProgramPipelineManager"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context20createShaderProgramvENS_10ShaderTypeEiPKPKc(%"class.gl::Context"*, i8 zeroext, i32, i8**) local_unnamed_addr #5 align 2 {
  %5 = alloca %"class.gl::InfoLog::StreamHelper", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %8 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 8
  %13 = tail call i32 @_ZN2gl20ShaderProgramManager12createShaderEPN2rx13GLImplFactoryERKNS_11LimitationsENS_10ShaderTypeE(%"class.gl::ShaderProgramManager"* %8, %"class.rx::GLImplFactory"* %11, %"struct.gl::Limitations"* dereferenceable(12) %12, i8 zeroext %1) #21
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %166, label %15

15:                                               ; preds = %4
  %16 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %17 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %16, i32 %13) #21
  tail call void @_ZN2gl6Shader9setSourceEiPKPKcPKi(%"class.gl::Shader"* %17, i32 %2, i8** %3, i32* null) #21
  tail call void @_ZN2gl6Shader7compileEPKNS_7ContextE(%"class.gl::Shader"* %17, %"class.gl::Context"* %0) #21
  %18 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %19 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %9, align 8
  %20 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %19, i64 0, i32 0
  %21 = tail call i32 @_ZN2gl20ShaderProgramManager13createProgramEPN2rx13GLImplFactoryE(%"class.gl::ShaderProgramManager"* %18, %"class.rx::GLImplFactory"* %20) #21
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %164, label %23

23:                                               ; preds = %15
  %24 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %25 = zext i32 %21 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %24, i64 0, i32 2, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp ugt i64 %27, %25
  br i1 %28, label %29, label %36

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %24, i64 0, i32 2, i32 1
  %31 = load %"class.gl::Program"**, %"class.gl::Program"*** %30, align 8
  %32 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %31, i64 %25
  %33 = load %"class.gl::Program"*, %"class.gl::Program"** %32, align 8
  %34 = icmp eq %"class.gl::Program"* %33, inttoptr (i64 -1 to %"class.gl::Program"*)
  %35 = select i1 %34, %"class.gl::Program"* null, %"class.gl::Program"* %33
  br label %99

36:                                               ; preds = %23
  %37 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %38 = add i64 %37, %25
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %24, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %24, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %47 = load i64, i64* %46, align 8
  %48 = lshr i64 %43, 7
  %49 = ptrtoint i8* %45 to i64
  %50 = lshr i64 %49, 12
  %51 = xor i64 %48, %50
  %52 = trunc i128 %42 to i8
  %53 = and i8 %52, 127
  %54 = insertelement <16 x i8> undef, i8 %53, i32 0
  %55 = shufflevector <16 x i8> %54, <16 x i8> undef, <16 x i32> zeroinitializer
  %56 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %24, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %57

57:                                               ; preds = %87, %36
  %58 = phi i64 [ %51, %36 ], [ %89, %87 ]
  %59 = phi i64 [ 0, %36 ], [ %88, %87 ]
  %60 = and i64 %58, %47
  %61 = getelementptr inbounds i8, i8* %45, i64 %60
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1
  %64 = icmp eq <16 x i8> %55, %63
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %83, label %67

67:                                               ; preds = %57
  %68 = zext i16 %65 to i32
  %69 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %56, align 8
  br label %70

70:                                               ; preds = %79, %67
  %71 = phi i32 [ %68, %67 ], [ %81, %79 ]
  %72 = tail call i32 @llvm.cttz.i32(i32 %71, i1 false) #21, !range !8
  %73 = zext i32 %72 to i64
  %74 = add i64 %60, %73
  %75 = and i64 %74, %47
  %76 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %69, i64 %75, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, %21
  br i1 %78, label %90, label %79, !prof !9

79:                                               ; preds = %70
  %80 = add i32 %71, -1
  %81 = and i32 %80, %71
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %70

83:                                               ; preds = %79, %57
  %84 = icmp eq <16 x i8> %63, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %85 = bitcast <16 x i1> %84 to i16
  %86 = icmp eq i16 %85, 0
  br i1 %86, label %87, label %99, !prof !10

87:                                               ; preds = %83
  %88 = add i64 %59, 16
  %89 = add i64 %88, %60
  br label %57

90:                                               ; preds = %70
  %91 = getelementptr inbounds i8, i8* %45, i64 %75
  %92 = icmp ne i8* %91, null
  tail call void @llvm.assume(i1 %92) #21
  %93 = load i8, i8* %91, align 1
  %94 = icmp sgt i8 %93, -1
  br i1 %94, label %96, label %95, !prof !9

95:                                               ; preds = %90
  tail call void @llvm.trap() #21
  unreachable

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %69, i64 %75, i32 0, i32 1
  %98 = load %"class.gl::Program"*, %"class.gl::Program"** %97, align 8
  br label %99

99:                                               ; preds = %83, %29, %96
  %100 = phi %"class.gl::Program"* [ %35, %29 ], [ %98, %96 ], [ null, %83 ]
  %101 = tail call zeroext i1 @_ZN2gl6Shader10isCompiledEv(%"class.gl::Shader"* %17) #21
  br i1 %101, label %102, label %138

102:                                              ; preds = %99
  tail call void @_ZN2gl7Program12setSeparableEb(%"class.gl::Program"* %100, i1 zeroext true) #21
  tail call void @_ZN2gl7Program12attachShaderEPNS_6ShaderE(%"class.gl::Program"* %100, %"class.gl::Shader"* %17) #21
  %103 = tail call i32 @_ZN2gl7Program4linkEPKNS_7ContextE(%"class.gl::Program"* %100, %"class.gl::Context"* %0) #21
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %108, label %105

105:                                              ; preds = %102
  %106 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  tail call void @_ZN2gl20ShaderProgramManager12deleteShaderEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %106, %"class.gl::Context"* %0, i32 %13) #21
  %107 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  tail call void @_ZN2gl20ShaderProgramManager13deleteProgramEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %107, %"class.gl::Context"* %0, i32 %21) #21
  br label %166

108:                                              ; preds = %102
  %109 = tail call i32 @_ZNK2gl7Program11getRefCountEv(%"class.gl::Program"* %100) #21
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %131, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %100, i64 0, i32 11, i32 0, i32 0, i32 0
  %113 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %112, align 8
  %114 = icmp eq %"struct.gl::Program::LinkingState"* %113, null
  br i1 %114, label %116, label %115

115:                                              ; preds = %111
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* %100, %"class.gl::Context"* %0) #21
  br label %116

116:                                              ; preds = %115, %111
  %117 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %100, i64 0, i32 10
  %118 = load i8, i8* %117, align 8, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %126, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %122 = tail call i32 @_ZN2gl5State25onProgramExecutableChangeEPKNS_7ContextEPNS_7ProgramE(%"class.gl::State"* %121, %"class.gl::Context"* %0, %"class.gl::Program"* %100) #21
  %123 = icmp eq i32 %122, 1
  br i1 %123, label %128, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %100, i64 0, i32 1
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %125, i32 8) #21
  br label %126

126:                                              ; preds = %124, %116
  %127 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache25onProgramExecutableChangeEPNS_7ContextE(%"class.gl::StateCache"* %127, %"class.gl::Context"* %0) #21
  br label %131

128:                                              ; preds = %120
  %129 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  tail call void @_ZN2gl20ShaderProgramManager12deleteShaderEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %129, %"class.gl::Context"* %0, i32 %13) #21
  %130 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  tail call void @_ZN2gl20ShaderProgramManager13deleteProgramEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %130, %"class.gl::Context"* %0, i32 %21) #21
  br label %166

131:                                              ; preds = %126, %108
  %132 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 75, i32 0, i32 0, i32 0
  %133 = load %"class.angle::FrameCapture"*, %"class.angle::FrameCapture"** %132, align 8
  %134 = getelementptr inbounds %"class.angle::FrameCapture", %"class.angle::FrameCapture"* %133, i64 0, i32 3
  %135 = load i8, i8* %134, align 8, !range !2
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %131
  tail call void @_ZN2gl7Program12detachShaderEPKNS_7ContextEPNS_6ShaderE(%"class.gl::Program"* %100, %"class.gl::Context"* %0, %"class.gl::Shader"* %17) #21
  br label %138

138:                                              ; preds = %131, %137, %99
  %139 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %100, i64 0, i32 4, i32 23, i32 0
  %140 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %139, align 8
  %141 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %140, i64 0, i32 1
  %142 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #21
  %143 = getelementptr inbounds %"class.gl::Shader", %"class.gl::Shader"* %17, i64 0, i32 8
  %144 = bitcast %"class.std::__1::basic_string"* %143 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  %146 = load i8, i8* %145, align 1, !noalias !52
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %150, label %148

148:                                              ; preds = %138
  %149 = bitcast %"class.std::__1::basic_string"* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %142, i8* align 8 %149, i64 24, i1 false) #21
  br label %155

150:                                              ; preds = %138
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8, !noalias !52
  %153 = getelementptr inbounds %"class.gl::Shader", %"class.gl::Shader"* %17, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %154 = load i64, i64* %153, align 8, !noalias !52
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %152, i64 %154) #21
  br label %155

155:                                              ; preds = %148, %150
  call void @_ZN2gl7InfoLoglsINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEENS0_12StreamHelperERKT_(%"class.gl::InfoLog::StreamHelper"* nonnull sret %5, %"class.gl::InfoLog"* %141, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6)
  call void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"* nonnull %5) #21
  %156 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #27
  br label %163

163:                                              ; preds = %155, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #21
  br label %164

164:                                              ; preds = %163, %15
  %165 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  call void @_ZN2gl20ShaderProgramManager12deleteShaderEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %165, %"class.gl::Context"* %0, i32 %13) #21
  br label %166

166:                                              ; preds = %4, %164, %105, %128
  %167 = phi i32 [ %21, %164 ], [ 0, %105 ], [ 0, %128 ], [ 0, %4 ]
  ret i32 %167
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Shader"* @_ZNK2gl7Context9getShaderENS_15ShaderProgramIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %4 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %3, align 8
  %5 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %4, i32 %1) #21
  ret %"class.gl::Shader"* %5
}

declare void @_ZN2gl6Shader9setSourceEiPKPKcPKi(%"class.gl::Shader"*, i32, i8**, i32*) local_unnamed_addr #3

declare void @_ZN2gl6Shader7compileEPKNS_7ContextE(%"class.gl::Shader"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Program"* @_ZNK2gl7Context23getProgramNoResolveLinkENS_15ShaderProgramIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %4 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %3, align 8
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 1
  %11 = load %"class.gl::Program"**, %"class.gl::Program"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %11, i64 %5
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %12, align 8
  %14 = icmp eq %"class.gl::Program"* %13, inttoptr (i64 -1 to %"class.gl::Program"*)
  %15 = select i1 %14, %"class.gl::Program"* null, %"class.gl::Program"* %13
  br label %79

16:                                               ; preds = %2
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, %5
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %67, %16
  %38 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %39 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %40 = and i64 %38, %27
  %41 = getelementptr inbounds i8, i8* %25, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %35, %43
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37
  %48 = zext i16 %45 to i32
  %49 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %36, align 8
  br label %50

50:                                               ; preds = %59, %47
  %51 = phi i32 [ %48, %47 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #21, !range !8
  %53 = zext i32 %52 to i64
  %54 = add i64 %40, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %49, i64 %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %70, label %59, !prof !9

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %37
  %64 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %79, !prof !10

67:                                               ; preds = %63
  %68 = add i64 %39, 16
  %69 = add i64 %68, %40
  br label %37

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #21
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %76, label %75, !prof !9

75:                                               ; preds = %70
  tail call void @llvm.trap() #21
  unreachable

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %49, i64 %55, i32 0, i32 1
  %78 = load %"class.gl::Program"*, %"class.gl::Program"** %77, align 8
  br label %79

79:                                               ; preds = %63, %9, %76
  %80 = phi %"class.gl::Program"* [ %15, %9 ], [ %78, %76 ], [ null, %63 ]
  ret %"class.gl::Program"* %80
}

declare zeroext i1 @_ZN2gl6Shader10isCompiledEv(%"class.gl::Shader"*) local_unnamed_addr #3

declare void @_ZN2gl7Program12setSeparableEb(%"class.gl::Program"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN2gl7Program12attachShaderEPNS_6ShaderE(%"class.gl::Program"*, %"class.gl::Shader"*) local_unnamed_addr #3

declare i32 @_ZN2gl7Program4linkEPKNS_7ContextE(%"class.gl::Program"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12deleteShaderENS_15ShaderProgramIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %4 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %3, align 8
  tail call void @_ZN2gl20ShaderProgramManager12deleteShaderEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %4, %"class.gl::Context"* %0, i32 %1) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13deleteProgramENS_15ShaderProgramIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %4 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %3, align 8
  tail call void @_ZN2gl20ShaderProgramManager13deleteProgramEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %4, %"class.gl::Context"* %0, i32 %1) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context13onProgramLinkEPNS_7ProgramE(%"class.gl::Context"*, %"class.gl::Program"*) local_unnamed_addr #1 align 2 {
  %3 = tail call i32 @_ZNK2gl7Program11getRefCountEv(%"class.gl::Program"* %1) #21
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %22, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %7 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %6, align 8
  %8 = icmp eq %"struct.gl::Program::LinkingState"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* %1, %"class.gl::Context"* %0) #21
  br label %10

10:                                               ; preds = %5, %9
  %11 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %1, i64 0, i32 10
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %16 = tail call i32 @_ZN2gl5State25onProgramExecutableChangeEPKNS_7ContextEPNS_7ProgramE(%"class.gl::State"* %15, %"class.gl::Context"* %0, %"class.gl::Program"* %1) #21
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %1, i64 0, i32 1
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %19, i32 8) #21
  br label %20

20:                                               ; preds = %10, %18
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache25onProgramExecutableChangeEPNS_7ContextE(%"class.gl::StateCache"* %21, %"class.gl::Context"* %0)
  br label %22

22:                                               ; preds = %14, %2, %20
  %23 = phi i32 [ 1, %14 ], [ 0, %20 ], [ 0, %2 ]
  ret i32 %23
}

declare void @_ZN2gl7Program12detachShaderEPKNS_7ContextEPNS_6ShaderE(%"class.gl::Program"*, %"class.gl::Context"*, %"class.gl::Shader"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl7InfoLoglsINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEENS0_12StreamHelperERKT_(%"class.gl::InfoLog::StreamHelper"* noalias sret, %"class.gl::InfoLog"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.gl::InfoLog", %"class.gl::InfoLog"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_stringstream"* %5, null
  %7 = ptrtoint %"class.std::__1::basic_stringstream"* %5 to i64
  br i1 %6, label %8, label %71

8:                                                ; preds = %3
  %9 = tail call i8* @_Znwm(i64 280) #27
  %10 = getelementptr inbounds i8, i8* %9, i64 128
  %11 = bitcast i8* %10 to i32 (...)***
  %12 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 24
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  %17 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %18 = bitcast i8* %9 to i64*
  store i64 %17, i64* %18, align 8
  %19 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %20 = bitcast i8* %9 to i8**
  %21 = inttoptr i64 %17 to i8*
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %9, i64 %24
  %26 = bitcast i8* %25 to i64*
  store i64 %19, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %9, i64 8
  %28 = bitcast i8* %27 to i64*
  store i64 0, i64* %28, align 8
  %29 = load i8*, i8** %20, align 8
  %30 = getelementptr i8, i8* %29, i64 -24
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds i8, i8* %9, i64 %32
  %34 = bitcast i8* %33 to %"class.std::__1::ios_base"*
  tail call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %34, i8* %15) #21
  %35 = getelementptr inbounds i8, i8* %33, i64 136
  %36 = bitcast i8* %35 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %36, align 8
  %37 = getelementptr inbounds i8, i8* %33, i64 144
  %38 = bitcast i8* %37 to i32*
  store i32 -1, i32* %38, align 8
  %39 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %40 = bitcast i8* %13 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %42 = inttoptr i64 %39 to i8*
  %43 = getelementptr i8, i8* %42, i64 -24
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds i8, i8* %13, i64 %45
  %47 = bitcast i8* %46 to i64*
  store i64 %41, i64* %47, align 8
  %48 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %48, i64* %18, align 8
  %49 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %50 = inttoptr i64 %48 to i8*
  %51 = getelementptr i8, i8* %50, i64 -24
  %52 = bitcast i8* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds i8, i8* %9, i64 %53
  %55 = bitcast i8* %54 to i64*
  store i64 %49, i64* %55, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %14, align 8
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %16) #21
  %56 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = getelementptr inbounds i8, i8* %9, i64 88
  %58 = getelementptr inbounds i8, i8* %9, i64 120
  %59 = bitcast i8* %58 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 32, i1 false) #21
  store i32 24, i32* %59, align 8
  %60 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %4, align 8
  %61 = bitcast %"class.gl::InfoLog"* %1 to i8**
  store i8* %9, i8** %61, align 8
  %62 = icmp eq %"class.std::__1::basic_stringstream"* %60, null
  %63 = ptrtoint i8* %9 to i64
  br i1 %62, label %71, label %64

64:                                               ; preds = %8
  %65 = bitcast %"class.std::__1::basic_stringstream"* %60 to void (%"class.std::__1::basic_stringstream"*)***
  %66 = load void (%"class.std::__1::basic_stringstream"*)**, void (%"class.std::__1::basic_stringstream"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.std::__1::basic_stringstream"*)*, void (%"class.std::__1::basic_stringstream"*)** %66, i64 1
  %68 = load void (%"class.std::__1::basic_stringstream"*)*, void (%"class.std::__1::basic_stringstream"*)** %67, align 8
  tail call void %68(%"class.std::__1::basic_stringstream"* nonnull %60) #21
  %69 = bitcast %"class.gl::InfoLog"* %1 to i64*
  %70 = load i64, i64* %69, align 8
  br label %71

71:                                               ; preds = %3, %8, %64
  %72 = phi i64 [ %7, %3 ], [ %63, %8 ], [ %70, %64 ]
  %73 = bitcast %"class.gl::InfoLog::StreamHelper"* %0 to i64*
  store i64 %72, i64* %73, align 8
  %74 = inttoptr i64 %72 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 16
  %76 = bitcast i8* %75 to %"class.std::__1::basic_ostream"*
  %77 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %86 = zext i8 %79 to i64
  %87 = select i1 %80, i8* %82, i8* %85
  %88 = select i1 %80, i64 %84, i64 %86
  %89 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %76, i8* %87, i64 %88) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.gl::InfoLog::StreamHelper", %"class.gl::InfoLog::StreamHelper"* %0, i64 0, i32 0
  %5 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_stringstream"* %5, null
  br i1 %6, label %45, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #21
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_stringbuf"* %9) #21
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 0
  br i1 %13, label %19, label %22

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %21) #27
  br label %22

22:                                               ; preds = %19, %7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #21
  br i1 %18, label %45, label %23

23:                                               ; preds = %22
  %24 = bitcast %"class.gl::InfoLog::StreamHelper"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %"class.std::__1::basic_ostream"*
  %28 = bitcast i8* %26 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr i8, i8* %29, i64 -24
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds i8, i8* %26, i64 %32
  %34 = bitcast %"class.std::__1::locale"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #21
  %35 = bitcast i8* %33 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %35) #21
  %36 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %2, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #21
  %37 = bitcast %"class.std::__1::locale::facet"* %36 to %"class.std::__1::ctype"*
  %38 = bitcast %"class.std::__1::locale::facet"* %36 to i8 (%"class.std::__1::ctype"*, i8)***
  %39 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %38, align 8
  %40 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %39, i64 7
  %41 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %40, align 8
  %42 = call signext i8 %41(%"class.std::__1::ctype"* %37, i8 signext 10) #21
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #21
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %27, i8 signext %42) #21
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %27) #21
  br label %45

45:                                               ; preds = %22, %1, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context18createMemoryObjectEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 18
  %3 = load %"class.gl::MemoryObjectManager"*, %"class.gl::MemoryObjectManager"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %5, i64 0, i32 0
  %7 = tail call i32 @_ZN2gl19MemoryObjectManager18createMemoryObjectEPN2rx13GLImplFactoryE(%"class.gl::MemoryObjectManager"* %3, %"class.rx::GLImplFactory"* %6) #21
  ret i32 %7
}

declare i32 @_ZN2gl19MemoryObjectManager18createMemoryObjectEPN2rx13GLImplFactoryE(%"class.gl::MemoryObjectManager"*, %"class.rx::GLImplFactory"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context15createSemaphoreEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 19
  %3 = load %"class.gl::SemaphoreManager"*, %"class.gl::SemaphoreManager"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %5, i64 0, i32 0
  %7 = tail call i32 @_ZN2gl16SemaphoreManager15createSemaphoreEPN2rx13GLImplFactoryE(%"class.gl::SemaphoreManager"* %3, %"class.rx::GLImplFactory"* %6) #21
  ret i32 %7
}

declare i32 @_ZN2gl16SemaphoreManager15createSemaphoreEPN2rx13GLImplFactoryE(%"class.gl::SemaphoreManager"*, %"class.rx::GLImplFactory"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12deleteBufferENS_8BufferIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 10
  %4 = load %"class.gl::BufferManager"*, %"class.gl::BufferManager"** %3, align 8
  %5 = tail call %"class.gl::Buffer"* @_ZNK2gl13BufferManager9getBufferENS_8BufferIDE(%"class.gl::BufferManager"* %4, i32 %1) #21
  %6 = icmp eq %"class.gl::Buffer"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %9 = tail call i32 @_ZN2gl5State12detachBufferEPNS_7ContextEPKNS_6BufferE(%"class.gl::State"* %8, %"class.gl::Context"* %0, %"class.gl::Buffer"* nonnull %5) #21
  br label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %"class.gl::BufferManager"** %3 to %"class.gl::TypedResourceManager"**
  %12 = load %"class.gl::TypedResourceManager"*, %"class.gl::TypedResourceManager"** %11, align 8
  tail call void @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager"* %12, %"class.gl::Context"* %0, i32 %1) #21
  ret void
}

declare %"class.gl::Buffer"* @_ZNK2gl13BufferManager9getBufferENS_8BufferIDE(%"class.gl::BufferManager"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12detachBufferEPNS_6BufferE(%"class.gl::Context"*, %"class.gl::Buffer"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = tail call i32 @_ZN2gl5State12detachBufferEPNS_7ContextEPKNS_6BufferE(%"class.gl::State"* %3, %"class.gl::Context"* %0, %"class.gl::Buffer"* %1) #21
  ret void
}

declare void @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

declare void @_ZN2gl20ShaderProgramManager12deleteShaderEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

declare void @_ZN2gl20ShaderProgramManager13deleteProgramEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13deleteTextureENS_9TextureIDE(%"class.gl::Context"*, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %4 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %3, align 8
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %4, i64 0, i32 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  %9 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %4, i64 0, i32 0
  br i1 %8, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %4, i64 0, i32 0, i32 1, i32 1
  %12 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %12, i64 %5
  %14 = load %"class.gl::Texture"*, %"class.gl::Texture"** %13, align 8
  %15 = icmp eq %"class.gl::Texture"* %14, inttoptr (i64 -1 to %"class.gl::Texture"*)
  br i1 %15, label %85, label %79

16:                                               ; preds = %2
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, %5
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %4, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %4, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %4, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %67, %16
  %38 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %39 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %40 = and i64 %38, %27
  %41 = getelementptr inbounds i8, i8* %25, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %35, %43
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37
  %48 = zext i16 %45 to i32
  %49 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %36, align 8
  br label %50

50:                                               ; preds = %59, %47
  %51 = phi i32 [ %48, %47 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #21, !range !8
  %53 = zext i32 %52 to i64
  %54 = add i64 %40, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %49, i64 %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %70, label %59, !prof !9

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %37
  %64 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %85, !prof !10

67:                                               ; preds = %63
  %68 = add i64 %39, 16
  %69 = add i64 %68, %40
  br label %37

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #21
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %76, label %75, !prof !9

75:                                               ; preds = %70
  tail call void @llvm.trap() #21
  unreachable

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %49, i64 %55, i32 0, i32 1
  %78 = load %"class.gl::Texture"*, %"class.gl::Texture"** %77, align 8
  br label %79

79:                                               ; preds = %10, %76
  %80 = phi %"class.gl::Texture"* [ %14, %10 ], [ %78, %76 ]
  %81 = icmp eq %"class.gl::Texture"* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %79
  tail call void @_ZN2gl7Context13detachTextureENS_9TextureIDE(%"class.gl::Context"* %0, i32 %1)
  %83 = bitcast %"class.gl::TextureManager"** %3 to %"class.gl::TypedResourceManager.250"**
  %84 = load %"class.gl::TypedResourceManager.250"*, %"class.gl::TypedResourceManager.250"** %83, align 8
  br label %85

85:                                               ; preds = %63, %10, %79, %82
  %86 = phi %"class.gl::TypedResourceManager.250"* [ %9, %10 ], [ %9, %79 ], [ %84, %82 ], [ %9, %63 ]
  tail call void @_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.250"* %86, %"class.gl::Context"* %0, i32 %1) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13detachTextureENS_9TextureIDE(%"class.gl::Context"*, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %5 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %4, align 8
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %5, i64 0, i32 0, i32 1, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %10, label %17

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %5, i64 0, i32 0, i32 1, i32 1
  %12 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %12, i64 %6
  %14 = load %"class.gl::Texture"*, %"class.gl::Texture"** %13, align 8
  %15 = icmp eq %"class.gl::Texture"* %14, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %16 = select i1 %15, %"class.gl::Texture"* null, %"class.gl::Texture"* %14
  br label %80

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %6
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %5, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %5, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %5, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %80, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Texture"*, %"class.gl::Texture"** %78, align 8
  br label %80

80:                                               ; preds = %64, %10, %77
  %81 = phi %"class.gl::Texture"* [ %16, %10 ], [ %79, %77 ], [ null, %64 ]
  %82 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 71, i32 0, i32 0
  %83 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %82, align 8
  %84 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 71, i32 0, i32 1
  %85 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %84, align 8
  %86 = icmp eq %"class.angle::ObserverBinding"* %83, %85
  br i1 %86, label %91, label %87

87:                                               ; preds = %80
  %88 = icmp eq %"class.gl::Texture"* %81, null
  %89 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %81, i64 0, i32 2, i32 0, i32 0
  %90 = select i1 %88, %"class.angle::Subject"* null, %"class.angle::Subject"* %89
  br label %93

91:                                               ; preds = %99, %80
  %92 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17
  tail call void @_ZN2gl5State13detachTextureEPKNS_7ContextERKN5angle13PackedEnumMapINS_11TextureTypeENS_14BindingPointerINS_7TextureEEELm11EEENS_9TextureIDE(%"class.gl::State"* %3, %"class.gl::Context"* %0, %"class.angle::PackedEnumMap.544"* dereferenceable(176) %92, i32 %1) #21
  ret void

93:                                               ; preds = %87, %99
  %94 = phi %"class.angle::ObserverBinding"* [ %83, %87 ], [ %100, %99 ]
  %95 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %94, i64 0, i32 1
  %96 = load %"class.angle::Subject"*, %"class.angle::Subject"** %95, align 8
  %97 = icmp eq %"class.angle::Subject"* %96, %90
  br i1 %97, label %98, label %99

98:                                               ; preds = %93
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %94, %"class.angle::Subject"* null) #21
  br label %99

99:                                               ; preds = %98, %93
  %100 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %94, i64 1
  %101 = icmp eq %"class.angle::ObserverBinding"* %100, %85
  br i1 %101, label %91, label %93
}

declare void @_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.250"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18deleteRenderbufferENS_14RenderbufferIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 13
  %4 = load %"class.gl::RenderbufferManager"*, %"class.gl::RenderbufferManager"** %3, align 8
  %5 = tail call %"class.gl::Renderbuffer"* @_ZNK2gl19RenderbufferManager15getRenderbufferENS_14RenderbufferIDE(%"class.gl::RenderbufferManager"* %4, i32 %1) #21
  %6 = icmp eq %"class.gl::Renderbuffer"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State18detachRenderbufferEPKNS_7ContextENS_14RenderbufferIDE(%"class.gl::State"* %8, %"class.gl::Context"* %0, i32 %1) #21
  br label %9

9:                                                ; preds = %2, %7
  %10 = bitcast %"class.gl::RenderbufferManager"** %3 to %"class.gl::TypedResourceManager.279"**
  %11 = load %"class.gl::TypedResourceManager.279"*, %"class.gl::TypedResourceManager.279"** %10, align 8
  tail call void @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.279"* %11, %"class.gl::Context"* %0, i32 %1) #21
  ret void
}

declare %"class.gl::Renderbuffer"* @_ZNK2gl19RenderbufferManager15getRenderbufferENS_14RenderbufferIDE(%"class.gl::RenderbufferManager"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18detachRenderbufferENS_14RenderbufferIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State18detachRenderbufferEPKNS_7ContextENS_14RenderbufferIDE(%"class.gl::State"* %3, %"class.gl::Context"* %0, i32 %1) #21
  ret void
}

declare void @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.279"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10deleteSyncEP8__GLsync(%"class.gl::Context"*, %struct.__GLsync*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 15
  %4 = bitcast %"class.gl::SyncManager"** %3 to %"class.gl::TypedResourceManager.303"**
  %5 = load %"class.gl::TypedResourceManager.303"*, %"class.gl::TypedResourceManager.303"** %4, align 8
  %6 = ptrtoint %struct.__GLsync* %1 to i64
  %7 = trunc i64 %6 to i32
  tail call void @_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjE12deleteObjectEPKNS_7ContextEj(%"class.gl::TypedResourceManager.303"* %5, %"class.gl::Context"* %0, i32 %7) #21
  ret void
}

declare void @_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjE12deleteObjectEPKNS_7ContextEj(%"class.gl::TypedResourceManager.303"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21deleteProgramPipelineENS_17ProgramPipelineIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 17
  %4 = load %"class.gl::ProgramPipelineManager"*, %"class.gl::ProgramPipelineManager"** %3, align 8
  %5 = tail call %"class.gl::ProgramPipeline"* @_ZNK2gl22ProgramPipelineManager18getProgramPipelineENS_17ProgramPipelineIDE(%"class.gl::ProgramPipelineManager"* %4, i32 %1) #21
  %6 = icmp eq %"class.gl::ProgramPipeline"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State21detachProgramPipelineEPKNS_7ContextENS_17ProgramPipelineIDE(%"class.gl::State"* %8, %"class.gl::Context"* %0, i32 %1) #21
  br label %9

9:                                                ; preds = %2, %7
  %10 = bitcast %"class.gl::ProgramPipelineManager"** %3 to %"class.gl::TypedResourceManager.325"**
  %11 = load %"class.gl::TypedResourceManager.325"*, %"class.gl::TypedResourceManager.325"** %10, align 8
  tail call void @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.325"* %11, %"class.gl::Context"* %0, i32 %1) #21
  ret void
}

declare %"class.gl::ProgramPipeline"* @_ZNK2gl22ProgramPipelineManager18getProgramPipelineENS_17ProgramPipelineIDE(%"class.gl::ProgramPipelineManager"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21detachProgramPipelineENS_17ProgramPipelineIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State21detachProgramPipelineEPKNS_7ContextENS_17ProgramPipelineIDE(%"class.gl::State"* %3, %"class.gl::Context"* %0, i32 %1) #21
  ret void
}

declare void @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.325"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18deleteMemoryObjectENS_14MemoryObjectIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 18
  %4 = load %"class.gl::MemoryObjectManager"*, %"class.gl::MemoryObjectManager"** %3, align 8
  tail call void @_ZN2gl19MemoryObjectManager18deleteMemoryObjectEPKNS_7ContextENS_14MemoryObjectIDE(%"class.gl::MemoryObjectManager"* %4, %"class.gl::Context"* %0, i32 %1) #21
  ret void
}

declare void @_ZN2gl19MemoryObjectManager18deleteMemoryObjectEPKNS_7ContextENS_14MemoryObjectIDE(%"class.gl::MemoryObjectManager"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15deleteSemaphoreENS_11SemaphoreIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 19
  %4 = load %"class.gl::SemaphoreManager"*, %"class.gl::SemaphoreManager"** %3, align 8
  tail call void @_ZN2gl16SemaphoreManager15deleteSemaphoreEPKNS_7ContextENS_11SemaphoreIDE(%"class.gl::SemaphoreManager"* %4, %"class.gl::Context"* %0, i32 %1) #21
  ret void
}

declare void @_ZN2gl16SemaphoreManager15deleteSemaphoreEPKNS_7ContextENS_11SemaphoreIDE(%"class.gl::SemaphoreManager"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl7Context11loseContextENS_19GraphicsResetStatusES1_(%"class.gl::Context"* nocapture, i8 zeroext, i8 zeroext) local_unnamed_addr #10 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 38
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 33362
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 36
  store i8 %1, i8* %8, align 2
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 37
  store i8 1, i8* %9, align 1
  br label %10

10:                                               ; preds = %3, %7
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 35
  store i8 1, i8* %11, align 1
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 4
  store i8 0, i8* %12, align 1
  store %"class.gl::Context"* null, %"class.gl::Context"** @_ZN2gl20gCurrentValidContextE, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl7Context15markContextLostENS_19GraphicsResetStatusE(%"class.gl::Context"* nocapture, i8 zeroext) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 38
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 33362
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 36
  store i8 %1, i8* %7, align 2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 37
  store i8 1, i8* %8, align 1
  br label %9

9:                                                ; preds = %6, %2
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 35
  store i8 1, i8* %10, align 1
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 4
  store i8 0, i8* %11, align 1
  store %"class.gl::Context"* null, %"class.gl::Context"** @_ZN2gl20gCurrentValidContextE, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17deleteFramebufferENS_13FramebufferIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %4 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %3, align 8
  %5 = tail call %"class.gl::Framebuffer"* @_ZNK2gl18FramebufferManager14getFramebufferENS_13FramebufferIDE(%"class.gl::FramebufferManager"* %4, i32 %1) #21
  %6 = icmp eq %"class.gl::Framebuffer"* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @_ZN2gl7Context17detachFramebufferENS_13FramebufferIDE(%"class.gl::Context"* %0, i32 %1)
  br label %8

8:                                                ; preds = %2, %7
  %9 = bitcast %"class.gl::FramebufferManager"** %3 to %"class.gl::TypedResourceManager.314"**
  %10 = load %"class.gl::TypedResourceManager.314"*, %"class.gl::TypedResourceManager.314"** %9, align 8
  tail call void @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.314"* %10, %"class.gl::Context"* %0, i32 %1) #21
  ret void
}

declare %"class.gl::Framebuffer"* @_ZNK2gl18FramebufferManager14getFramebufferENS_13FramebufferIDE(%"class.gl::FramebufferManager"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17detachFramebufferENS_13FramebufferIDE(%"class.gl::Context"*, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = tail call zeroext i1 @_ZN2gl5State28removeReadFramebufferBindingENS_13FramebufferIDE(%"class.gl::State"* %3, i32 %1) #21
  %5 = xor i1 %4, true
  %6 = icmp eq i32 %1, 0
  %7 = or i1 %6, %5
  br i1 %7, label %91, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %10 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %10, i64 0, i32 0, i32 1, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %10, i64 0, i32 0, i32 1, i32 1
  %16 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %15, align 8
  %17 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %16, align 8
  %18 = icmp eq %"class.gl::Framebuffer"* %17, inttoptr (i64 -1 to %"class.gl::Framebuffer"*)
  br i1 %18, label %84, label %81

19:                                               ; preds = %8
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %10, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %10, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %10, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %19
  %40 = phi i64 [ %33, %19 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %19 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %84, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %79, align 8
  br label %81

81:                                               ; preds = %78, %14
  %82 = phi %"class.gl::Framebuffer"* [ %17, %14 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Framebuffer"* %82, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %65, %81, %14
  br label %85

85:                                               ; preds = %81, %84
  %86 = phi %"class.gl::Framebuffer"* [ %82, %81 ], [ null, %84 ]
  tail call void @_ZN2gl5State25setReadFramebufferBindingEPNS_11FramebufferE(%"class.gl::State"* %3, %"class.gl::Framebuffer"* %86) #21
  %87 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 68
  %88 = icmp eq %"class.gl::Framebuffer"* %86, null
  %89 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %86, i64 0, i32 2
  %90 = select i1 %88, %"class.angle::Subject"* null, %"class.angle::Subject"* %89
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %87, %"class.angle::Subject"* %90) #21
  br label %91

91:                                               ; preds = %2, %85
  %92 = tail call zeroext i1 @_ZN2gl5State28removeDrawFramebufferBindingENS_13FramebufferIDE(%"class.gl::State"* %3, i32 %1) #21
  %93 = xor i1 %92, true
  %94 = or i1 %6, %93
  br i1 %94, label %179, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %97 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %96, align 8
  %98 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %97, i64 0, i32 0, i32 1, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %97, i64 0, i32 0, i32 1, i32 1
  %103 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %102, align 8
  %104 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %103, align 8
  %105 = icmp eq %"class.gl::Framebuffer"* %104, inttoptr (i64 -1 to %"class.gl::Framebuffer"*)
  br i1 %105, label %171, label %168

106:                                              ; preds = %95
  %107 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %108 = zext i64 %107 to i128
  %109 = mul nuw i128 %108, 11376068507788127593
  %110 = lshr i128 %109, 64
  %111 = xor i128 %110, %109
  %112 = trunc i128 %111 to i64
  %113 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %97, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %97, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %116 = load i64, i64* %115, align 8
  %117 = lshr i64 %112, 7
  %118 = ptrtoint i8* %114 to i64
  %119 = lshr i64 %118, 12
  %120 = xor i64 %117, %119
  %121 = trunc i128 %111 to i8
  %122 = and i8 %121, 127
  %123 = insertelement <16 x i8> undef, i8 %122, i32 0
  %124 = shufflevector <16 x i8> %123, <16 x i8> undef, <16 x i32> zeroinitializer
  %125 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %97, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %126

126:                                              ; preds = %156, %106
  %127 = phi i64 [ %120, %106 ], [ %158, %156 ]
  %128 = phi i64 [ 0, %106 ], [ %157, %156 ]
  %129 = and i64 %127, %116
  %130 = getelementptr inbounds i8, i8* %114, i64 %129
  %131 = bitcast i8* %130 to <16 x i8>*
  %132 = load <16 x i8>, <16 x i8>* %131, align 1
  %133 = icmp eq <16 x i8> %124, %132
  %134 = bitcast <16 x i1> %133 to i16
  %135 = icmp eq i16 %134, 0
  br i1 %135, label %152, label %136

136:                                              ; preds = %126
  %137 = zext i16 %134 to i32
  %138 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %125, align 8
  br label %139

139:                                              ; preds = %148, %136
  %140 = phi i32 [ %137, %136 ], [ %150, %148 ]
  %141 = tail call i32 @llvm.cttz.i32(i32 %140, i1 false) #21, !range !8
  %142 = zext i32 %141 to i64
  %143 = add i64 %129, %142
  %144 = and i64 %143, %116
  %145 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %138, i64 %144, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %159, label %148, !prof !9

148:                                              ; preds = %139
  %149 = add i32 %140, -1
  %150 = and i32 %149, %140
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %139

152:                                              ; preds = %148, %126
  %153 = icmp eq <16 x i8> %132, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %154 = bitcast <16 x i1> %153 to i16
  %155 = icmp eq i16 %154, 0
  br i1 %155, label %156, label %171, !prof !10

156:                                              ; preds = %152
  %157 = add i64 %128, 16
  %158 = add i64 %157, %129
  br label %126

159:                                              ; preds = %139
  %160 = getelementptr inbounds i8, i8* %114, i64 %144
  %161 = icmp ne i8* %160, null
  tail call void @llvm.assume(i1 %161) #21
  %162 = load i8, i8* %160, align 1
  %163 = icmp sgt i8 %162, -1
  br i1 %163, label %165, label %164, !prof !9

164:                                              ; preds = %159
  tail call void @llvm.trap() #21
  unreachable

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %138, i64 %144, i32 0, i32 1
  %167 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %166, align 8
  br label %168

168:                                              ; preds = %165, %101
  %169 = phi %"class.gl::Framebuffer"* [ %104, %101 ], [ %167, %165 ]
  %170 = icmp eq %"class.gl::Framebuffer"* %169, null
  br i1 %170, label %171, label %172

171:                                              ; preds = %152, %168, %101
  br label %172

172:                                              ; preds = %168, %171
  %173 = phi %"class.gl::Framebuffer"* [ %169, %168 ], [ null, %171 ]
  tail call void @_ZN2gl5State25setDrawFramebufferBindingEPNS_11FramebufferE(%"class.gl::State"* %3, %"class.gl::Framebuffer"* %173) #21
  %174 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 67
  %175 = icmp eq %"class.gl::Framebuffer"* %173, null
  %176 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %173, i64 0, i32 2
  %177 = select i1 %175, %"class.angle::Subject"* null, %"class.angle::Subject"* %176
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %174, %"class.angle::Subject"* %177) #21
  %178 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %178, align 8
  br label %179

179:                                              ; preds = %91, %172
  ret void
}

declare void @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.314"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14deleteFencesNVEiPKNS_9FenceNVIDE(%"class.gl::Context"*, i32, %"struct.gl::FenceNVID"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.gl::FenceNV"*, align 8
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = bitcast %"class.gl::FenceNV"** %4 to i8*
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 19
  %10 = zext i32 %1 to i64
  br label %12

11:                                               ; preds = %28, %3
  ret void

12:                                               ; preds = %28, %6
  %13 = phi i64 [ 0, %6 ], [ %29, %28 ]
  %14 = getelementptr inbounds %"struct.gl::FenceNVID", %"struct.gl::FenceNVID"* %2, i64 %13, i32 0
  %15 = load i32, i32* %14, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #21
  store %"class.gl::FenceNV"* null, %"class.gl::FenceNV"** %4, align 8
  %16 = call zeroext i1 @_ZN2gl11ResourceMapINS_7FenceNVENS_9FenceNVIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.546"* %8, i32 %15, %"class.gl::FenceNV"** nonnull %4)
  br i1 %16, label %17, label %28

17:                                               ; preds = %12
  call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %9, i32 %15) #21
  %18 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %4, align 8
  %19 = icmp eq %"class.gl::FenceNV"* %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %17
  call void @_ZN2gl7FenceNV9onDestroyEPKNS_7ContextE(%"class.gl::FenceNV"* nonnull %18, %"class.gl::Context"* %0) #21
  %21 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %4, align 8
  %22 = icmp eq %"class.gl::FenceNV"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %20
  %24 = bitcast %"class.gl::FenceNV"* %21 to void (%"class.gl::FenceNV"*)***
  %25 = load void (%"class.gl::FenceNV"*)**, void (%"class.gl::FenceNV"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.gl::FenceNV"*)*, void (%"class.gl::FenceNV"*)** %25, i64 1
  %27 = load void (%"class.gl::FenceNV"*)*, void (%"class.gl::FenceNV"*)** %26, align 8
  call void %27(%"class.gl::FenceNV"* nonnull %21) #21
  br label %28

28:                                               ; preds = %17, %20, %23, %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #21
  %29 = add nuw nsw i64 %13, 1
  %30 = icmp eq i64 %29, %10
  br i1 %30, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl11ResourceMapINS_7FenceNVENS_9FenceNVIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.546"*, i32, %"class.gl::FenceNV"**) local_unnamed_addr #5 comdat align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %0, i64 0, i32 1
  %10 = load %"class.gl::FenceNV"**, %"class.gl::FenceNV"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %10, i64 %4
  %12 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %11, align 8
  %13 = icmp eq %"class.gl::FenceNV"* %12, inttoptr (i64 -1 to %"class.gl::FenceNV"*)
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.gl::FenceNV"* %12 to i64
  %16 = bitcast %"class.gl::FenceNV"** %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.gl::FenceNV"* inttoptr (i64 -1 to %"class.gl::FenceNV"*), %"class.gl::FenceNV"** %11, align 8
  br label %134

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %4
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %18, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %17
  %40 = phi i64 [ %33, %17 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %17 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %134, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %51, i64 %57, i32 0, i32 1
  %80 = bitcast %"class.gl::FenceNV"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.gl::FenceNV"** %2 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i8, i8* %73, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !9

85:                                               ; preds = %78
  tail call void @llvm.trap() #21
  unreachable

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = bitcast %"class.absl::container_internal::raw_hash_set.549"* %18 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -16
  %95 = load i64, i64* %28, align 8
  %96 = and i64 %94, %95
  %97 = bitcast i8* %73 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = icmp eq <16 x i8> %98, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = inttoptr i64 %91 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %96
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = icmp eq <16 x i8> %104, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %106 = bitcast <16 x i1> %105 to i16
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16 %100, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %120

110:                                              ; preds = %86
  %111 = zext i16 %100 to i32
  %112 = zext i16 %106 to i32
  %113 = tail call i32 @llvm.cttz.i32(i32 %111, i1 false) #21, !range !8
  %114 = shl nuw i32 %112, 16
  %115 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false) #21, !range !8
  %116 = add nuw nsw i32 %115, %113
  %117 = icmp ult i32 %116, 16
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i8 -128, i8 -2
  br label %120

120:                                              ; preds = %86, %110
  %121 = phi i64 [ 0, %86 ], [ %118, %110 ]
  %122 = phi i8 [ -2, %86 ], [ %119, %110 ]
  %123 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 %122, i8* %123, align 1
  %124 = load i8*, i8** %26, align 8
  %125 = add i64 %93, -15
  %126 = load i64, i64* %28, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %122, i8* %130, align 1
  %131 = getelementptr inbounds %"class.gl::ResourceMap.546", %"class.gl::ResourceMap.546"* %0, i64 0, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %121
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %65, %14, %120, %8
  %135 = phi i1 [ false, %8 ], [ true, %120 ], [ true, %14 ], [ false, %65 ]
  ret i1 %135
}

declare void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Buffer"* @_ZNK2gl7Context9getBufferENS_8BufferIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 10
  %4 = load %"class.gl::BufferManager"*, %"class.gl::BufferManager"** %3, align 8
  %5 = tail call %"class.gl::Buffer"* @_ZNK2gl13BufferManager9getBufferENS_8BufferIDE(%"class.gl::BufferManager"* %4, i32 %1) #21
  ret %"class.gl::Buffer"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Renderbuffer"* @_ZNK2gl7Context15getRenderbufferENS_14RenderbufferIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 13
  %4 = load %"class.gl::RenderbufferManager"*, %"class.gl::RenderbufferManager"** %3, align 8
  %5 = tail call %"class.gl::Renderbuffer"* @_ZNK2gl19RenderbufferManager15getRenderbufferENS_14RenderbufferIDE(%"class.gl::RenderbufferManager"* %4, i32 %1) #21
  ret %"class.gl::Renderbuffer"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2gl7Context18getContextPriorityEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %4 = bitcast %"class.rx::ContextImpl"* %3 to i8 (%"class.rx::ContextImpl"*)***
  %5 = load i8 (%"class.rx::ContextImpl"*)**, i8 (%"class.rx::ContextImpl"*)*** %4, align 8
  %6 = getelementptr inbounds i8 (%"class.rx::ContextImpl"*)*, i8 (%"class.rx::ContextImpl"*)** %5, i64 64
  %7 = load i8 (%"class.rx::ContextImpl"*)*, i8 (%"class.rx::ContextImpl"*)** %6, align 8
  %8 = tail call zeroext i8 %7(%"class.rx::ContextImpl"* %3) #21
  %9 = tail call i32 @_ZN3egl9ToEGLenumENS_15ContextPriorityE(i8 zeroext %8) #21
  ret i32 %9
}

declare i32 @_ZN3egl9ToEGLenumENS_15ContextPriorityE(i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Sync"* @_ZNK2gl7Context7getSyncEP8__GLsync(%"class.gl::Context"* nocapture readonly, %struct.__GLsync*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 15
  %4 = load %"class.gl::SyncManager"*, %"class.gl::SyncManager"** %3, align 8
  %5 = ptrtoint %struct.__GLsync* %1 to i64
  %6 = trunc i64 %5 to i32
  %7 = tail call %"class.gl::Sync"* @_ZNK2gl11SyncManager7getSyncEj(%"class.gl::SyncManager"* %4, i32 %6) #21
  ret %"class.gl::Sync"* %7
}

declare %"class.gl::Sync"* @_ZNK2gl11SyncManager7getSyncEj(%"class.gl::SyncManager"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::VertexArray"* @_ZNK2gl7Context14getVertexArrayENS_13VertexArrayIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 1
  %9 = load %"class.gl::VertexArray"**, %"class.gl::VertexArray"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %9, i64 %3
  %11 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %10, align 8
  %12 = icmp eq %"class.gl::VertexArray"* %11, inttoptr (i64 -1 to %"class.gl::VertexArray"*)
  %13 = select i1 %12, %"class.gl::VertexArray"* null, %"class.gl::VertexArray"* %11
  br label %77

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #21, !range !8
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %68, label %57, !prof !9

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !10

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #21
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !9

73:                                               ; preds = %68
  tail call void @llvm.trap() #21
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::VertexArray"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  ret %"class.gl::VertexArray"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Sampler"* @_ZNK2gl7Context10getSamplerENS_9SamplerIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %4 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %3, align 8
  %5 = tail call %"class.gl::Sampler"* @_ZNK2gl14SamplerManager10getSamplerENS_9SamplerIDE(%"class.gl::SamplerManager"* %4, i32 %1) #21
  ret %"class.gl::Sampler"* %5
}

declare %"class.gl::Sampler"* @_ZNK2gl14SamplerManager10getSamplerENS_9SamplerIDE(%"class.gl::SamplerManager"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::TransformFeedback"* @_ZNK2gl7Context20getTransformFeedbackENS_19TransformFeedbackIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 1
  %9 = load %"class.gl::TransformFeedback"**, %"class.gl::TransformFeedback"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %9, i64 %3
  %11 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %10, align 8
  %12 = icmp eq %"class.gl::TransformFeedback"* %11, inttoptr (i64 -1 to %"class.gl::TransformFeedback"*)
  %13 = select i1 %12, %"class.gl::TransformFeedback"* null, %"class.gl::TransformFeedback"* %11
  br label %77

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #21, !range !8
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %68, label %57, !prof !9

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !10

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #21
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !9

73:                                               ; preds = %68
  tail call void @llvm.trap() #21
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::TransformFeedback"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  ret %"class.gl::TransformFeedback"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::ProgramPipeline"* @_ZNK2gl7Context18getProgramPipelineENS_17ProgramPipelineIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 17
  %4 = load %"class.gl::ProgramPipelineManager"*, %"class.gl::ProgramPipelineManager"** %3, align 8
  %5 = tail call %"class.gl::ProgramPipeline"* @_ZNK2gl22ProgramPipelineManager18getProgramPipelineENS_17ProgramPipelineIDE(%"class.gl::ProgramPipelineManager"* %4, i32 %1) #21
  ret %"class.gl::ProgramPipeline"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::LabeledObject"* @_ZNK2gl7Context16getLabeledObjectEjj(%"class.gl::Context"* readonly, i32, i32) local_unnamed_addr #5 align 2 {
  switch i32 %1, label %446 [
    i32 33504, label %4
    i32 37201, label %4
    i32 33505, label %11
    i32 35656, label %11
    i32 33506, label %16
    i32 35648, label %16
    i32 32884, label %96
    i32 37204, label %96
    i32 33507, label %176
    i32 37203, label %176
    i32 36386, label %256
    i32 33510, label %336
    i32 5890, label %343
    i32 36161, label %425
    i32 36160, label %432
    i32 33508, label %439
    i32 35407, label %439
  ]

4:                                                ; preds = %3, %3
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 10
  %6 = load %"class.gl::BufferManager"*, %"class.gl::BufferManager"** %5, align 8
  %7 = tail call %"class.gl::Buffer"* @_ZNK2gl13BufferManager9getBufferENS_8BufferIDE(%"class.gl::BufferManager"* %6, i32 %2) #21
  %8 = icmp eq %"class.gl::Buffer"* %7, null
  %9 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %7, i64 0, i32 1
  %10 = select i1 %8, %"class.gl::LabeledObject"* null, %"class.gl::LabeledObject"* %9
  br label %446

11:                                               ; preds = %3, %3
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %13 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %12, align 8
  %14 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %13, i32 %2) #21
  %15 = getelementptr inbounds %"class.gl::Shader", %"class.gl::Shader"* %14, i64 0, i32 0
  br label %446

16:                                               ; preds = %3, %3
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %18 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %17, align 8
  %19 = zext i32 %2 to i64
  %20 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %18, i64 0, i32 2, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp ugt i64 %21, %19
  br i1 %22, label %23, label %30

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %18, i64 0, i32 2, i32 1
  %25 = load %"class.gl::Program"**, %"class.gl::Program"*** %24, align 8
  %26 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %25, i64 %19
  %27 = load %"class.gl::Program"*, %"class.gl::Program"** %26, align 8
  %28 = icmp eq %"class.gl::Program"* %27, inttoptr (i64 -1 to %"class.gl::Program"*)
  %29 = select i1 %28, %"class.gl::Program"* null, %"class.gl::Program"* %27
  br label %93

30:                                               ; preds = %16
  %31 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %32 = add i64 %31, %19
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %18, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %18, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = lshr i64 %37, 7
  %43 = ptrtoint i8* %39 to i64
  %44 = lshr i64 %43, 12
  %45 = xor i64 %42, %44
  %46 = trunc i128 %36 to i8
  %47 = and i8 %46, 127
  %48 = insertelement <16 x i8> undef, i8 %47, i32 0
  %49 = shufflevector <16 x i8> %48, <16 x i8> undef, <16 x i32> zeroinitializer
  %50 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %18, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %51

51:                                               ; preds = %81, %30
  %52 = phi i64 [ %45, %30 ], [ %83, %81 ]
  %53 = phi i64 [ 0, %30 ], [ %82, %81 ]
  %54 = and i64 %52, %41
  %55 = getelementptr inbounds i8, i8* %39, i64 %54
  %56 = bitcast i8* %55 to <16 x i8>*
  %57 = load <16 x i8>, <16 x i8>* %56, align 1
  %58 = icmp eq <16 x i8> %49, %57
  %59 = bitcast <16 x i1> %58 to i16
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %77, label %61

61:                                               ; preds = %51
  %62 = zext i16 %59 to i32
  %63 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %50, align 8
  br label %64

64:                                               ; preds = %73, %61
  %65 = phi i32 [ %62, %61 ], [ %75, %73 ]
  %66 = tail call i32 @llvm.cttz.i32(i32 %65, i1 false) #21, !range !8
  %67 = zext i32 %66 to i64
  %68 = add i64 %54, %67
  %69 = and i64 %68, %41
  %70 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %63, i64 %69, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, %2
  br i1 %72, label %84, label %73, !prof !9

73:                                               ; preds = %64
  %74 = add i32 %65, -1
  %75 = and i32 %74, %65
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %64

77:                                               ; preds = %73, %51
  %78 = icmp eq <16 x i8> %57, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %79 = bitcast <16 x i1> %78 to i16
  %80 = icmp eq i16 %79, 0
  br i1 %80, label %81, label %93, !prof !10

81:                                               ; preds = %77
  %82 = add i64 %53, 16
  %83 = add i64 %82, %54
  br label %51

84:                                               ; preds = %64
  %85 = getelementptr inbounds i8, i8* %39, i64 %69
  %86 = icmp ne i8* %85, null
  tail call void @llvm.assume(i1 %86) #21
  %87 = load i8, i8* %85, align 1
  %88 = icmp sgt i8 %87, -1
  br i1 %88, label %90, label %89, !prof !9

89:                                               ; preds = %84
  tail call void @llvm.trap() #21
  unreachable

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %63, i64 %69, i32 0, i32 1
  %92 = load %"class.gl::Program"*, %"class.gl::Program"** %91, align 8
  br label %93

93:                                               ; preds = %77, %23, %90
  %94 = phi %"class.gl::Program"* [ %29, %23 ], [ %92, %90 ], [ null, %77 ]
  %95 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %94, i64 0, i32 0
  br label %446

96:                                               ; preds = %3, %3
  %97 = zext i32 %2 to i64
  %98 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = icmp ugt i64 %99, %97
  br i1 %100, label %101, label %108

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 1
  %103 = load %"class.gl::VertexArray"**, %"class.gl::VertexArray"*** %102, align 8
  %104 = getelementptr inbounds %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %103, i64 %97
  %105 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %104, align 8
  %106 = icmp eq %"class.gl::VertexArray"* %105, inttoptr (i64 -1 to %"class.gl::VertexArray"*)
  %107 = select i1 %106, %"class.gl::VertexArray"* null, %"class.gl::VertexArray"* %105
  br label %171

108:                                              ; preds = %96
  %109 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %110 = add i64 %109, %97
  %111 = zext i64 %110 to i128
  %112 = mul nuw i128 %111, 11376068507788127593
  %113 = lshr i128 %112, 64
  %114 = xor i128 %113, %112
  %115 = trunc i128 %114 to i64
  %116 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 3
  %119 = load i64, i64* %118, align 8
  %120 = lshr i64 %115, 7
  %121 = ptrtoint i8* %117 to i64
  %122 = lshr i64 %121, 12
  %123 = xor i64 %120, %122
  %124 = trunc i128 %114 to i8
  %125 = and i8 %124, 127
  %126 = insertelement <16 x i8> undef, i8 %125, i32 0
  %127 = shufflevector <16 x i8> %126, <16 x i8> undef, <16 x i32> zeroinitializer
  %128 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 1
  br label %129

129:                                              ; preds = %159, %108
  %130 = phi i64 [ %123, %108 ], [ %161, %159 ]
  %131 = phi i64 [ 0, %108 ], [ %160, %159 ]
  %132 = and i64 %130, %119
  %133 = getelementptr inbounds i8, i8* %117, i64 %132
  %134 = bitcast i8* %133 to <16 x i8>*
  %135 = load <16 x i8>, <16 x i8>* %134, align 1
  %136 = icmp eq <16 x i8> %127, %135
  %137 = bitcast <16 x i1> %136 to i16
  %138 = icmp eq i16 %137, 0
  br i1 %138, label %155, label %139

139:                                              ; preds = %129
  %140 = zext i16 %137 to i32
  %141 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %128, align 8
  br label %142

142:                                              ; preds = %151, %139
  %143 = phi i32 [ %140, %139 ], [ %153, %151 ]
  %144 = tail call i32 @llvm.cttz.i32(i32 %143, i1 false) #21, !range !8
  %145 = zext i32 %144 to i64
  %146 = add i64 %132, %145
  %147 = and i64 %146, %119
  %148 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %141, i64 %147, i32 0, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, %2
  br i1 %150, label %162, label %151, !prof !9

151:                                              ; preds = %142
  %152 = add i32 %143, -1
  %153 = and i32 %152, %143
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %142

155:                                              ; preds = %151, %129
  %156 = icmp eq <16 x i8> %135, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %157 = bitcast <16 x i1> %156 to i16
  %158 = icmp eq i16 %157, 0
  br i1 %158, label %159, label %171, !prof !10

159:                                              ; preds = %155
  %160 = add i64 %131, 16
  %161 = add i64 %160, %132
  br label %129

162:                                              ; preds = %142
  %163 = getelementptr inbounds i8, i8* %117, i64 %147
  %164 = icmp ne i8* %163, null
  tail call void @llvm.assume(i1 %164) #21
  %165 = load i8, i8* %163, align 1
  %166 = icmp sgt i8 %165, -1
  br i1 %166, label %168, label %167, !prof !9

167:                                              ; preds = %162
  tail call void @llvm.trap() #21
  unreachable

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %141, i64 %147, i32 0, i32 1
  %170 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %169, align 8
  br label %171

171:                                              ; preds = %155, %101, %168
  %172 = phi %"class.gl::VertexArray"* [ %107, %101 ], [ %170, %168 ], [ null, %155 ]
  %173 = icmp eq %"class.gl::VertexArray"* %172, null
  %174 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %172, i64 0, i32 1
  %175 = select i1 %173, %"class.gl::LabeledObject"* null, %"class.gl::LabeledObject"* %174
  br label %446

176:                                              ; preds = %3, %3
  %177 = zext i32 %2 to i64
  %178 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 0
  %179 = load i64, i64* %178, align 8
  %180 = icmp ugt i64 %179, %177
  br i1 %180, label %181, label %188

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 1
  %183 = load %"class.gl::Query"**, %"class.gl::Query"*** %182, align 8
  %184 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %183, i64 %177
  %185 = load %"class.gl::Query"*, %"class.gl::Query"** %184, align 8
  %186 = icmp eq %"class.gl::Query"* %185, inttoptr (i64 -1 to %"class.gl::Query"*)
  %187 = select i1 %186, %"class.gl::Query"* null, %"class.gl::Query"* %185
  br label %251

188:                                              ; preds = %176
  %189 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %190 = add i64 %189, %177
  %191 = zext i64 %190 to i128
  %192 = mul nuw i128 %191, 11376068507788127593
  %193 = lshr i128 %192, 64
  %194 = xor i128 %193, %192
  %195 = trunc i128 %194 to i64
  %196 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 3
  %199 = load i64, i64* %198, align 8
  %200 = lshr i64 %195, 7
  %201 = ptrtoint i8* %197 to i64
  %202 = lshr i64 %201, 12
  %203 = xor i64 %200, %202
  %204 = trunc i128 %194 to i8
  %205 = and i8 %204, 127
  %206 = insertelement <16 x i8> undef, i8 %205, i32 0
  %207 = shufflevector <16 x i8> %206, <16 x i8> undef, <16 x i32> zeroinitializer
  %208 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 1
  br label %209

209:                                              ; preds = %239, %188
  %210 = phi i64 [ %203, %188 ], [ %241, %239 ]
  %211 = phi i64 [ 0, %188 ], [ %240, %239 ]
  %212 = and i64 %210, %199
  %213 = getelementptr inbounds i8, i8* %197, i64 %212
  %214 = bitcast i8* %213 to <16 x i8>*
  %215 = load <16 x i8>, <16 x i8>* %214, align 1
  %216 = icmp eq <16 x i8> %207, %215
  %217 = bitcast <16 x i1> %216 to i16
  %218 = icmp eq i16 %217, 0
  br i1 %218, label %235, label %219

219:                                              ; preds = %209
  %220 = zext i16 %217 to i32
  %221 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %208, align 8
  br label %222

222:                                              ; preds = %231, %219
  %223 = phi i32 [ %220, %219 ], [ %233, %231 ]
  %224 = tail call i32 @llvm.cttz.i32(i32 %223, i1 false) #21, !range !8
  %225 = zext i32 %224 to i64
  %226 = add i64 %212, %225
  %227 = and i64 %226, %199
  %228 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %221, i64 %227, i32 0, i32 0
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %229, %2
  br i1 %230, label %242, label %231, !prof !9

231:                                              ; preds = %222
  %232 = add i32 %223, -1
  %233 = and i32 %232, %223
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %222

235:                                              ; preds = %231, %209
  %236 = icmp eq <16 x i8> %215, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %237 = bitcast <16 x i1> %236 to i16
  %238 = icmp eq i16 %237, 0
  br i1 %238, label %239, label %251, !prof !10

239:                                              ; preds = %235
  %240 = add i64 %211, 16
  %241 = add i64 %240, %212
  br label %209

242:                                              ; preds = %222
  %243 = getelementptr inbounds i8, i8* %197, i64 %227
  %244 = icmp ne i8* %243, null
  tail call void @llvm.assume(i1 %244) #21
  %245 = load i8, i8* %243, align 1
  %246 = icmp sgt i8 %245, -1
  br i1 %246, label %248, label %247, !prof !9

247:                                              ; preds = %242
  tail call void @llvm.trap() #21
  unreachable

248:                                              ; preds = %242
  %249 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %221, i64 %227, i32 0, i32 1
  %250 = load %"class.gl::Query"*, %"class.gl::Query"** %249, align 8
  br label %251

251:                                              ; preds = %235, %181, %248
  %252 = phi %"class.gl::Query"* [ %187, %181 ], [ %250, %248 ], [ null, %235 ]
  %253 = icmp eq %"class.gl::Query"* %252, null
  %254 = getelementptr inbounds %"class.gl::Query", %"class.gl::Query"* %252, i64 0, i32 1
  %255 = select i1 %253, %"class.gl::LabeledObject"* null, %"class.gl::LabeledObject"* %254
  br label %446

256:                                              ; preds = %3
  %257 = zext i32 %2 to i64
  %258 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 0
  %259 = load i64, i64* %258, align 8
  %260 = icmp ugt i64 %259, %257
  br i1 %260, label %261, label %268

261:                                              ; preds = %256
  %262 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 1
  %263 = load %"class.gl::TransformFeedback"**, %"class.gl::TransformFeedback"*** %262, align 8
  %264 = getelementptr inbounds %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %263, i64 %257
  %265 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %264, align 8
  %266 = icmp eq %"class.gl::TransformFeedback"* %265, inttoptr (i64 -1 to %"class.gl::TransformFeedback"*)
  %267 = select i1 %266, %"class.gl::TransformFeedback"* null, %"class.gl::TransformFeedback"* %265
  br label %331

268:                                              ; preds = %256
  %269 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %270 = add i64 %269, %257
  %271 = zext i64 %270 to i128
  %272 = mul nuw i128 %271, 11376068507788127593
  %273 = lshr i128 %272, 64
  %274 = xor i128 %273, %272
  %275 = trunc i128 %274 to i64
  %276 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 0
  %277 = load i8*, i8** %276, align 8
  %278 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 3
  %279 = load i64, i64* %278, align 8
  %280 = lshr i64 %275, 7
  %281 = ptrtoint i8* %277 to i64
  %282 = lshr i64 %281, 12
  %283 = xor i64 %280, %282
  %284 = trunc i128 %274 to i8
  %285 = and i8 %284, 127
  %286 = insertelement <16 x i8> undef, i8 %285, i32 0
  %287 = shufflevector <16 x i8> %286, <16 x i8> undef, <16 x i32> zeroinitializer
  %288 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 1
  br label %289

289:                                              ; preds = %319, %268
  %290 = phi i64 [ %283, %268 ], [ %321, %319 ]
  %291 = phi i64 [ 0, %268 ], [ %320, %319 ]
  %292 = and i64 %290, %279
  %293 = getelementptr inbounds i8, i8* %277, i64 %292
  %294 = bitcast i8* %293 to <16 x i8>*
  %295 = load <16 x i8>, <16 x i8>* %294, align 1
  %296 = icmp eq <16 x i8> %287, %295
  %297 = bitcast <16 x i1> %296 to i16
  %298 = icmp eq i16 %297, 0
  br i1 %298, label %315, label %299

299:                                              ; preds = %289
  %300 = zext i16 %297 to i32
  %301 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %288, align 8
  br label %302

302:                                              ; preds = %311, %299
  %303 = phi i32 [ %300, %299 ], [ %313, %311 ]
  %304 = tail call i32 @llvm.cttz.i32(i32 %303, i1 false) #21, !range !8
  %305 = zext i32 %304 to i64
  %306 = add i64 %292, %305
  %307 = and i64 %306, %279
  %308 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %301, i64 %307, i32 0, i32 0
  %309 = load i32, i32* %308, align 4
  %310 = icmp eq i32 %309, %2
  br i1 %310, label %322, label %311, !prof !9

311:                                              ; preds = %302
  %312 = add i32 %303, -1
  %313 = and i32 %312, %303
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %302

315:                                              ; preds = %311, %289
  %316 = icmp eq <16 x i8> %295, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %317 = bitcast <16 x i1> %316 to i16
  %318 = icmp eq i16 %317, 0
  br i1 %318, label %319, label %331, !prof !10

319:                                              ; preds = %315
  %320 = add i64 %291, 16
  %321 = add i64 %320, %292
  br label %289

322:                                              ; preds = %302
  %323 = getelementptr inbounds i8, i8* %277, i64 %307
  %324 = icmp ne i8* %323, null
  tail call void @llvm.assume(i1 %324) #21
  %325 = load i8, i8* %323, align 1
  %326 = icmp sgt i8 %325, -1
  br i1 %326, label %328, label %327, !prof !9

327:                                              ; preds = %322
  tail call void @llvm.trap() #21
  unreachable

328:                                              ; preds = %322
  %329 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %301, i64 %307, i32 0, i32 1
  %330 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %329, align 8
  br label %331

331:                                              ; preds = %315, %261, %328
  %332 = phi %"class.gl::TransformFeedback"* [ %267, %261 ], [ %330, %328 ], [ null, %315 ]
  %333 = icmp eq %"class.gl::TransformFeedback"* %332, null
  %334 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %332, i64 0, i32 1
  %335 = select i1 %333, %"class.gl::LabeledObject"* null, %"class.gl::LabeledObject"* %334
  br label %446

336:                                              ; preds = %3
  %337 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %338 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %337, align 8
  %339 = tail call %"class.gl::Sampler"* @_ZNK2gl14SamplerManager10getSamplerENS_9SamplerIDE(%"class.gl::SamplerManager"* %338, i32 %2) #21
  %340 = icmp eq %"class.gl::Sampler"* %339, null
  %341 = getelementptr inbounds %"class.gl::Sampler", %"class.gl::Sampler"* %339, i64 0, i32 1
  %342 = select i1 %340, %"class.gl::LabeledObject"* null, %"class.gl::LabeledObject"* %341
  br label %446

343:                                              ; preds = %3
  %344 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %345 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %344, align 8
  %346 = zext i32 %2 to i64
  %347 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %345, i64 0, i32 0, i32 1, i32 0
  %348 = load i64, i64* %347, align 8
  %349 = icmp ugt i64 %348, %346
  br i1 %349, label %350, label %357

350:                                              ; preds = %343
  %351 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %345, i64 0, i32 0, i32 1, i32 1
  %352 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %351, align 8
  %353 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %352, i64 %346
  %354 = load %"class.gl::Texture"*, %"class.gl::Texture"** %353, align 8
  %355 = icmp eq %"class.gl::Texture"* %354, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %356 = select i1 %355, %"class.gl::Texture"* null, %"class.gl::Texture"* %354
  br label %420

357:                                              ; preds = %343
  %358 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %359 = add i64 %358, %346
  %360 = zext i64 %359 to i128
  %361 = mul nuw i128 %360, 11376068507788127593
  %362 = lshr i128 %361, 64
  %363 = xor i128 %362, %361
  %364 = trunc i128 %363 to i64
  %365 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %345, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %366 = load i8*, i8** %365, align 8
  %367 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %345, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %368 = load i64, i64* %367, align 8
  %369 = lshr i64 %364, 7
  %370 = ptrtoint i8* %366 to i64
  %371 = lshr i64 %370, 12
  %372 = xor i64 %369, %371
  %373 = trunc i128 %363 to i8
  %374 = and i8 %373, 127
  %375 = insertelement <16 x i8> undef, i8 %374, i32 0
  %376 = shufflevector <16 x i8> %375, <16 x i8> undef, <16 x i32> zeroinitializer
  %377 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %345, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %378

378:                                              ; preds = %408, %357
  %379 = phi i64 [ %372, %357 ], [ %410, %408 ]
  %380 = phi i64 [ 0, %357 ], [ %409, %408 ]
  %381 = and i64 %379, %368
  %382 = getelementptr inbounds i8, i8* %366, i64 %381
  %383 = bitcast i8* %382 to <16 x i8>*
  %384 = load <16 x i8>, <16 x i8>* %383, align 1
  %385 = icmp eq <16 x i8> %376, %384
  %386 = bitcast <16 x i1> %385 to i16
  %387 = icmp eq i16 %386, 0
  br i1 %387, label %404, label %388

388:                                              ; preds = %378
  %389 = zext i16 %386 to i32
  %390 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %377, align 8
  br label %391

391:                                              ; preds = %400, %388
  %392 = phi i32 [ %389, %388 ], [ %402, %400 ]
  %393 = tail call i32 @llvm.cttz.i32(i32 %392, i1 false) #21, !range !8
  %394 = zext i32 %393 to i64
  %395 = add i64 %381, %394
  %396 = and i64 %395, %368
  %397 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %390, i64 %396, i32 0, i32 0
  %398 = load i32, i32* %397, align 4
  %399 = icmp eq i32 %398, %2
  br i1 %399, label %411, label %400, !prof !9

400:                                              ; preds = %391
  %401 = add i32 %392, -1
  %402 = and i32 %401, %392
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %391

404:                                              ; preds = %400, %378
  %405 = icmp eq <16 x i8> %384, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %406 = bitcast <16 x i1> %405 to i16
  %407 = icmp eq i16 %406, 0
  br i1 %407, label %408, label %420, !prof !10

408:                                              ; preds = %404
  %409 = add i64 %380, 16
  %410 = add i64 %409, %381
  br label %378

411:                                              ; preds = %391
  %412 = getelementptr inbounds i8, i8* %366, i64 %396
  %413 = icmp ne i8* %412, null
  tail call void @llvm.assume(i1 %413) #21
  %414 = load i8, i8* %412, align 1
  %415 = icmp sgt i8 %414, -1
  br i1 %415, label %417, label %416, !prof !9

416:                                              ; preds = %411
  tail call void @llvm.trap() #21
  unreachable

417:                                              ; preds = %411
  %418 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %390, i64 %396, i32 0, i32 1
  %419 = load %"class.gl::Texture"*, %"class.gl::Texture"** %418, align 8
  br label %420

420:                                              ; preds = %404, %350, %417
  %421 = phi %"class.gl::Texture"* [ %356, %350 ], [ %419, %417 ], [ null, %404 ]
  %422 = icmp eq %"class.gl::Texture"* %421, null
  %423 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %421, i64 0, i32 3
  %424 = select i1 %422, %"class.gl::LabeledObject"* null, %"class.gl::LabeledObject"* %423
  br label %446

425:                                              ; preds = %3
  %426 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 13
  %427 = load %"class.gl::RenderbufferManager"*, %"class.gl::RenderbufferManager"** %426, align 8
  %428 = tail call %"class.gl::Renderbuffer"* @_ZNK2gl19RenderbufferManager15getRenderbufferENS_14RenderbufferIDE(%"class.gl::RenderbufferManager"* %427, i32 %2) #21
  %429 = icmp eq %"class.gl::Renderbuffer"* %428, null
  %430 = getelementptr inbounds %"class.gl::Renderbuffer", %"class.gl::Renderbuffer"* %428, i64 0, i32 2
  %431 = select i1 %429, %"class.gl::LabeledObject"* null, %"class.gl::LabeledObject"* %430
  br label %446

432:                                              ; preds = %3
  %433 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %434 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %433, align 8
  %435 = tail call %"class.gl::Framebuffer"* @_ZNK2gl18FramebufferManager14getFramebufferENS_13FramebufferIDE(%"class.gl::FramebufferManager"* %434, i32 %2) #21
  %436 = icmp eq %"class.gl::Framebuffer"* %435, null
  %437 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %435, i64 0, i32 1
  %438 = select i1 %436, %"class.gl::LabeledObject"* null, %"class.gl::LabeledObject"* %437
  br label %446

439:                                              ; preds = %3, %3
  %440 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 17
  %441 = load %"class.gl::ProgramPipelineManager"*, %"class.gl::ProgramPipelineManager"** %440, align 8
  %442 = tail call %"class.gl::ProgramPipeline"* @_ZNK2gl22ProgramPipelineManager18getProgramPipelineENS_17ProgramPipelineIDE(%"class.gl::ProgramPipelineManager"* %441, i32 %2) #21
  %443 = icmp eq %"class.gl::ProgramPipeline"* %442, null
  %444 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %442, i64 0, i32 1
  %445 = select i1 %443, %"class.gl::LabeledObject"* null, %"class.gl::LabeledObject"* %444
  br label %446

446:                                              ; preds = %3, %439, %432, %425, %420, %336, %331, %251, %171, %93, %11, %4
  %447 = phi %"class.gl::LabeledObject"* [ %445, %439 ], [ %438, %432 ], [ %431, %425 ], [ %424, %420 ], [ %342, %336 ], [ %335, %331 ], [ %255, %251 ], [ %175, %171 ], [ %95, %93 ], [ %15, %11 ], [ %10, %4 ], [ null, %3 ]
  ret %"class.gl::LabeledObject"* %447
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Query"* @_ZNK2gl7Context8getQueryENS_7QueryIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 1
  %9 = load %"class.gl::Query"**, %"class.gl::Query"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %9, i64 %3
  %11 = load %"class.gl::Query"*, %"class.gl::Query"** %10, align 8
  %12 = icmp eq %"class.gl::Query"* %11, inttoptr (i64 -1 to %"class.gl::Query"*)
  %13 = select i1 %12, %"class.gl::Query"* null, %"class.gl::Query"* %11
  br label %77

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #21, !range !8
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %68, label %57, !prof !9

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !10

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #21
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !9

73:                                               ; preds = %68
  tail call void @llvm.trap() #21
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::Query"*, %"class.gl::Query"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::Query"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  ret %"class.gl::Query"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Framebuffer"* @_ZNK2gl7Context14getFramebufferENS_13FramebufferIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %4 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %3, align 8
  %5 = tail call %"class.gl::Framebuffer"* @_ZNK2gl18FramebufferManager14getFramebufferENS_13FramebufferIDE(%"class.gl::FramebufferManager"* %4, i32 %1) #21
  ret %"class.gl::Framebuffer"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::LabeledObject"* @_ZNK2gl7Context23getLabeledObjectFromPtrEPKv(%"class.gl::Context"* nocapture readonly, i8*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 15
  %4 = load %"class.gl::SyncManager"*, %"class.gl::SyncManager"** %3, align 8
  %5 = ptrtoint i8* %1 to i64
  %6 = trunc i64 %5 to i32
  %7 = tail call %"class.gl::Sync"* @_ZNK2gl11SyncManager7getSyncEj(%"class.gl::SyncManager"* %4, i32 %6) #21
  %8 = icmp eq %"class.gl::Sync"* %7, null
  %9 = getelementptr inbounds %"class.gl::Sync", %"class.gl::Sync"* %7, i64 0, i32 1
  %10 = select i1 %8, %"class.gl::LabeledObject"* null, %"class.gl::LabeledObject"* %9
  ret %"class.gl::LabeledObject"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11objectLabelEjjiPKc(%"class.gl::Context"*, i32, i32, i32, i8* readonly) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = tail call %"class.gl::LabeledObject"* @_ZNK2gl7Context16getLabeledObjectEjj(%"class.gl::Context"* %0, i32 %1, i32 %2)
  %9 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #21
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #21, !alias.scope !55
  %11 = icmp eq i8* %4, null
  br i1 %11, label %45, label %12

12:                                               ; preds = %5
  %13 = icmp slt i32 %3, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = sext i32 %3 to i64
  %16 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #21, !noalias !55
  br label %23

17:                                               ; preds = %12
  %18 = tail call i64 @strlen(i8* nonnull %4) #29, !noalias !55
  %19 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #21, !noalias !55
  %20 = icmp ugt i64 %18, -17
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #28
  unreachable

23:                                               ; preds = %14, %17
  %24 = phi i8* [ %16, %14 ], [ %19, %17 ]
  %25 = phi i64 [ %15, %14 ], [ %18, %17 ]
  %26 = icmp ult i64 %25, 23
  br i1 %26, label %35, label %27

27:                                               ; preds = %23
  %28 = add nuw i64 %25, 16
  %29 = and i64 %28, -16
  %30 = tail call i8* @_Znwm(i64 %29) #27
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %30, i8** %31, align 8
  %32 = or i64 %29, -9223372036854775808
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %34, align 8
  br label %40

35:                                               ; preds = %23
  %36 = trunc i64 %25 to i8
  %37 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 %36, i8* %38, align 1
  %39 = icmp eq i64 %25, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %35, %27
  %41 = phi i8* [ %30, %27 ], [ %24, %35 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %41, i8* nonnull align 1 %4, i64 %25, i1 false) #21
  br label %42

42:                                               ; preds = %35, %40
  %43 = phi i8* [ %24, %35 ], [ %41, %40 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  store i8 0, i8* %44, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %24, i64 24, i1 false) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #21, !noalias !55
  br label %45

45:                                               ; preds = %5, %42
  %46 = bitcast %"class.gl::LabeledObject"* %8 to void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)***
  %47 = load void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)**, void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)*, void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)** %47, i64 2
  %49 = load void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)*, void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)** %48, align 8
  call void %49(%"class.gl::LabeledObject"* %8, %"class.gl::Context"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #21
  %50 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  call void @_ZN2gl5State14setObjectDirtyEj(%"class.gl::State"* %50, i32 %1) #21
  %51 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %45
  %56 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %56) #27
  br label %57

57:                                               ; preds = %45, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #21
  ret void
}

declare void @_ZN2gl5State14setObjectDirtyEj(%"class.gl::State"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11labelObjectEjjiPKc(%"class.gl::Context"*, i32, i32, i32, i8* readonly) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = tail call %"class.gl::LabeledObject"* @_ZNK2gl7Context16getLabeledObjectEjj(%"class.gl::Context"* %0, i32 %1, i32 %2)
  %9 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #21
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  store i8 0, i8* %12, align 1
  store i8 0, i8* %9, align 8
  %14 = icmp eq i8* %4, null
  br i1 %14, label %47, label %15

15:                                               ; preds = %5
  %16 = icmp eq i32 %3, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = tail call i64 @strlen(i8* nonnull %4) #29
  br label %21

19:                                               ; preds = %15
  %20 = sext i32 %3 to i64
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %23 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #21
  %24 = icmp ugt i64 %22, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #28
  unreachable

27:                                               ; preds = %21
  %28 = icmp ult i64 %22, 23
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = add nuw i64 %22, 16
  %31 = and i64 %30, -16
  %32 = tail call i8* @_Znwm(i64 %31) #27
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = or i64 %31, -9223372036854775808
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %36, align 8
  br label %42

37:                                               ; preds = %27
  %38 = trunc i64 %22 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 %38, i8* %40, align 1
  %41 = icmp eq i64 %22, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %37, %29
  %43 = phi i8* [ %32, %29 ], [ %23, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* nonnull align 1 %4, i64 %22, i1 false) #21
  br label %44

44:                                               ; preds = %42, %37
  %45 = phi i8* [ %23, %37 ], [ %43, %42 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %22
  store i8 0, i8* %46, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %23, i64 24, i1 false) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #21
  br label %47

47:                                               ; preds = %5, %44
  %48 = bitcast %"class.gl::LabeledObject"* %8 to void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)***
  %49 = load void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)**, void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)*, void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)** %49, i64 2
  %51 = load void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)*, void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)** %50, align 8
  call void %51(%"class.gl::LabeledObject"* %8, %"class.gl::Context"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #21
  %52 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  call void @_ZN2gl5State14setObjectDirtyEj(%"class.gl::State"* %52, i32 %1) #21
  %53 = load i8, i8* %12, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %47
  %56 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %56) #27
  br label %57

57:                                               ; preds = %47, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #21
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14objectPtrLabelEPKviPKc(%"class.gl::Context"*, i8*, i32, i8* readonly) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 15
  %8 = load %"class.gl::SyncManager"*, %"class.gl::SyncManager"** %7, align 8
  %9 = ptrtoint i8* %1 to i64
  %10 = trunc i64 %9 to i32
  %11 = tail call %"class.gl::Sync"* @_ZNK2gl11SyncManager7getSyncEj(%"class.gl::SyncManager"* %8, i32 %10) #21
  %12 = icmp eq %"class.gl::Sync"* %11, null
  %13 = getelementptr inbounds %"class.gl::Sync", %"class.gl::Sync"* %11, i64 0, i32 1
  %14 = select i1 %12, %"class.gl::LabeledObject"* null, %"class.gl::LabeledObject"* %13
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #21
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #21, !alias.scope !58
  %17 = icmp eq i8* %3, null
  br i1 %17, label %51, label %18

18:                                               ; preds = %4
  %19 = icmp slt i32 %2, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %18
  %21 = sext i32 %2 to i64
  %22 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #21, !noalias !58
  br label %29

23:                                               ; preds = %18
  %24 = tail call i64 @strlen(i8* nonnull %3) #29, !noalias !58
  %25 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #21, !noalias !58
  %26 = icmp ugt i64 %24, -17
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %28) #28
  unreachable

29:                                               ; preds = %20, %23
  %30 = phi i8* [ %22, %20 ], [ %25, %23 ]
  %31 = phi i64 [ %21, %20 ], [ %24, %23 ]
  %32 = icmp ult i64 %31, 23
  br i1 %32, label %41, label %33

33:                                               ; preds = %29
  %34 = add nuw i64 %31, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #27
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %31, i64* %40, align 8
  br label %46

41:                                               ; preds = %29
  %42 = trunc i64 %31 to i8
  %43 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  store i8 %42, i8* %44, align 1
  %45 = icmp eq i64 %31, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %41, %33
  %47 = phi i8* [ %36, %33 ], [ %30, %41 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %47, i8* nonnull align 1 %3, i64 %31, i1 false) #21
  br label %48

48:                                               ; preds = %41, %46
  %49 = phi i8* [ %30, %41 ], [ %47, %46 ]
  %50 = getelementptr inbounds i8, i8* %49, i64 %31
  store i8 0, i8* %50, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %30, i64 24, i1 false) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #21, !noalias !58
  br label %51

51:                                               ; preds = %4, %48
  %52 = bitcast %"class.gl::LabeledObject"* %14 to void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)***
  %53 = load void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)**, void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)*, void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)** %53, i64 2
  %55 = load void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)*, void (%"class.gl::LabeledObject"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)** %54, align 8
  call void %55(%"class.gl::LabeledObject"* %14, %"class.gl::Context"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #21
  %56 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %51
  %61 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %61) #27
  br label %62

62:                                               ; preds = %51, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14getObjectLabelEjjiPiPc(%"class.gl::Context"*, i32, i32, i32, i32*, i8*) local_unnamed_addr #1 align 2 {
  %7 = tail call %"class.gl::LabeledObject"* @_ZNK2gl7Context16getLabeledObjectEjj(%"class.gl::Context"* %0, i32 %1, i32 %2)
  %8 = bitcast %"class.gl::LabeledObject"* %7 to %"class.std::__1::basic_string"* (%"class.gl::LabeledObject"*)***
  %9 = load %"class.std::__1::basic_string"* (%"class.gl::LabeledObject"*)**, %"class.std::__1::basic_string"* (%"class.gl::LabeledObject"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gl::LabeledObject"*)*, %"class.std::__1::basic_string"* (%"class.gl::LabeledObject"*)** %9, i64 3
  %11 = load %"class.std::__1::basic_string"* (%"class.gl::LabeledObject"*)*, %"class.std::__1::basic_string"* (%"class.gl::LabeledObject"*)** %10, align 8
  %12 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %11(%"class.gl::LabeledObject"* %7) #21
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = icmp ne i8* %5, null
  %22 = icmp sgt i32 %3, 0
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %43

24:                                               ; preds = %6
  %25 = sext i32 %3 to i64
  %26 = add nsw i64 %25, -1
  br i1 %16, label %27, label %32

27:                                               ; preds = %24
  %28 = icmp ult i64 %18, %26
  %29 = select i1 %28, i64 %18, i64 %26
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  br label %36

32:                                               ; preds = %24
  %33 = icmp ugt i64 %26, %19
  %34 = select i1 %33, i64 %19, i64 %26
  %35 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  br label %36

36:                                               ; preds = %32, %27
  %37 = phi i8* [ %31, %27 ], [ %35, %32 ]
  %38 = phi i64 [ %29, %27 ], [ %34, %32 ]
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %5, i8* align 1 %37, i64 %38, i1 false) #21
  br label %41

41:                                               ; preds = %40, %36
  %42 = getelementptr inbounds i8, i8* %5, i64 %38
  store i8 0, i8* %42, align 1
  br label %43

43:                                               ; preds = %41, %6
  %44 = phi i64 [ %38, %41 ], [ %20, %6 ]
  %45 = icmp eq i32* %4, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %43
  %47 = trunc i64 %44 to i32
  store i32 %47, i32* %4, align 4
  br label %48

48:                                               ; preds = %43, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17getObjectPtrLabelEPKviPiPc(%"class.gl::Context"* nocapture readonly, i8*, i32, i32*, i8*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 15
  %7 = load %"class.gl::SyncManager"*, %"class.gl::SyncManager"** %6, align 8
  %8 = ptrtoint i8* %1 to i64
  %9 = trunc i64 %8 to i32
  %10 = tail call %"class.gl::Sync"* @_ZNK2gl11SyncManager7getSyncEj(%"class.gl::SyncManager"* %7, i32 %9) #21
  %11 = icmp eq %"class.gl::Sync"* %10, null
  %12 = getelementptr inbounds %"class.gl::Sync", %"class.gl::Sync"* %10, i64 0, i32 1
  %13 = select i1 %11, %"class.gl::LabeledObject"* null, %"class.gl::LabeledObject"* %12
  %14 = bitcast %"class.gl::LabeledObject"* %13 to %"class.std::__1::basic_string"* (%"class.gl::LabeledObject"*)***
  %15 = load %"class.std::__1::basic_string"* (%"class.gl::LabeledObject"*)**, %"class.std::__1::basic_string"* (%"class.gl::LabeledObject"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gl::LabeledObject"*)*, %"class.std::__1::basic_string"* (%"class.gl::LabeledObject"*)** %15, i64 3
  %17 = load %"class.std::__1::basic_string"* (%"class.gl::LabeledObject"*)*, %"class.std::__1::basic_string"* (%"class.gl::LabeledObject"*)** %16, align 8
  %18 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %17(%"class.gl::LabeledObject"* %13) #21
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp ne i8* %4, null
  %28 = icmp sgt i32 %2, 0
  %29 = and i1 %28, %27
  br i1 %29, label %30, label %49

30:                                               ; preds = %5
  %31 = sext i32 %2 to i64
  %32 = add nsw i64 %31, -1
  br i1 %22, label %33, label %38

33:                                               ; preds = %30
  %34 = icmp ult i64 %24, %32
  %35 = select i1 %34, i64 %24, i64 %32
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  br label %42

38:                                               ; preds = %30
  %39 = icmp ugt i64 %32, %25
  %40 = select i1 %39, i64 %25, i64 %32
  %41 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %37, %33 ], [ %41, %38 ]
  %44 = phi i64 [ %35, %33 ], [ %40, %38 ]
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 %43, i64 %44, i1 false) #21
  br label %47

47:                                               ; preds = %46, %42
  %48 = getelementptr inbounds i8, i8* %4, i64 %44
  store i8 0, i8* %48, align 1
  br label %49

49:                                               ; preds = %47, %5
  %50 = phi i64 [ %44, %47 ], [ %26, %5 ]
  %51 = icmp eq i32* %3, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = trunc i64 %50 to i32
  store i32 %53, i32* %3, align 4
  br label %54

54:                                               ; preds = %49, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context9isSamplerENS_9SamplerIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %4 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK2gl14SamplerManager9isSamplerENS_9SamplerIDE(%"class.gl::SamplerManager"* %4, i32 %1) #21
  %6 = zext i1 %5 to i8
  ret i8 %6
}

declare zeroext i1 @_ZNK2gl14SamplerManager9isSamplerENS_9SamplerIDE(%"class.gl::SamplerManager"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11bindTextureENS_11TextureTypeENS_9TextureIDE(%"class.gl::Context"*, i8 zeroext, i32) local_unnamed_addr #5 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = zext i8 %1 to i64
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 %6, i32 0, i32 1
  %8 = load %"class.gl::Texture"*, %"class.gl::Texture"** %7, align 8
  br label %94

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %11 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %13 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %13, i64 0, i32 0
  %15 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %11, i64 0, i32 0
  %16 = zext i32 %2 to i64
  %17 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %11, i64 0, i32 0, i32 1, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %18, %16
  br i1 %19, label %20, label %26

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %11, i64 0, i32 0, i32 1, i32 1
  %22 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %21, align 8
  %23 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %22, i64 %16
  %24 = load %"class.gl::Texture"*, %"class.gl::Texture"** %23, align 8
  %25 = icmp eq %"class.gl::Texture"* %24, inttoptr (i64 -1 to %"class.gl::Texture"*)
  br i1 %25, label %92, label %89

26:                                               ; preds = %9
  %27 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %28 = add i64 %27, %16
  %29 = zext i64 %28 to i128
  %30 = mul nuw i128 %29, 11376068507788127593
  %31 = lshr i128 %30, 64
  %32 = xor i128 %31, %30
  %33 = trunc i128 %32 to i64
  %34 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %11, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %11, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = lshr i64 %33, 7
  %39 = ptrtoint i8* %35 to i64
  %40 = lshr i64 %39, 12
  %41 = xor i64 %38, %40
  %42 = trunc i128 %32 to i8
  %43 = and i8 %42, 127
  %44 = insertelement <16 x i8> undef, i8 %43, i32 0
  %45 = shufflevector <16 x i8> %44, <16 x i8> undef, <16 x i32> zeroinitializer
  %46 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %11, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %47

47:                                               ; preds = %77, %26
  %48 = phi i64 [ %41, %26 ], [ %79, %77 ]
  %49 = phi i64 [ 0, %26 ], [ %78, %77 ]
  %50 = and i64 %48, %37
  %51 = getelementptr inbounds i8, i8* %35, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp eq <16 x i8> %45, %53
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %73, label %57

57:                                               ; preds = %47
  %58 = zext i16 %55 to i32
  %59 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %46, align 8
  br label %60

60:                                               ; preds = %69, %57
  %61 = phi i32 [ %58, %57 ], [ %71, %69 ]
  %62 = tail call i32 @llvm.cttz.i32(i32 %61, i1 false) #21, !range !8
  %63 = zext i32 %62 to i64
  %64 = add i64 %50, %63
  %65 = and i64 %64, %37
  %66 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %59, i64 %65, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %2
  br i1 %68, label %80, label %69, !prof !9

69:                                               ; preds = %60
  %70 = add i32 %61, -1
  %71 = and i32 %70, %61
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %60

73:                                               ; preds = %69, %47
  %74 = icmp eq <16 x i8> %53, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %75 = bitcast <16 x i1> %74 to i16
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %77, label %92, !prof !10

77:                                               ; preds = %73
  %78 = add i64 %49, 16
  %79 = add i64 %78, %50
  br label %47

80:                                               ; preds = %60
  %81 = getelementptr inbounds i8, i8* %35, i64 %65
  %82 = icmp ne i8* %81, null
  tail call void @llvm.assume(i1 %82) #21
  %83 = load i8, i8* %81, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !9

85:                                               ; preds = %80
  tail call void @llvm.trap() #21
  unreachable

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %59, i64 %65, i32 0, i32 1
  %88 = load %"class.gl::Texture"*, %"class.gl::Texture"** %87, align 8
  br label %89

89:                                               ; preds = %86, %20
  %90 = phi %"class.gl::Texture"* [ %24, %20 ], [ %88, %86 ]
  %91 = icmp eq %"class.gl::Texture"* %90, null
  br i1 %91, label %92, label %94

92:                                               ; preds = %73, %20, %89
  %93 = tail call %"class.gl::Texture"* @_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE25checkObjectAllocationImplIJNS_11TextureTypeEEEEPS1_PN2rx13GLImplFactoryES3_DpT_(%"class.gl::TypedResourceManager.250"* %15, %"class.rx::GLImplFactory"* %14, i32 %2, i8 zeroext %1) #21
  br label %94

94:                                               ; preds = %92, %89, %5
  %95 = phi %"class.gl::Texture"* [ %8, %5 ], [ %93, %92 ], [ %90, %89 ]
  %96 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State17setSamplerTextureEPKNS_7ContextENS_11TextureTypeEPNS_7TextureE(%"class.gl::State"* %96, %"class.gl::Context"* %0, i8 zeroext %1, %"class.gl::Texture"* %95) #21
  %97 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %97, align 8
  ret void
}

declare void @_ZN2gl5State17setSamplerTextureEPKNS_7ContextENS_11TextureTypeEPNS_7TextureE(%"class.gl::State"*, %"class.gl::Context"*, i8 zeroext, %"class.gl::Texture"*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl10StateCache21onActiveTextureChangeEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readnone) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  store i64 1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19bindReadFramebufferENS_13FramebufferIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %5 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %7 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 9
  %11 = load %"class.egl::ShareGroup"*, %"class.egl::ShareGroup"** %10, align 8
  %12 = tail call %"class.gl::Framebuffer"* @_ZN2gl18FramebufferManager26checkFramebufferAllocationEPN2rx13GLImplFactoryERKNS_4CapsENS_13FramebufferIDEPN3egl10ShareGroupE(%"class.gl::FramebufferManager"* %5, %"class.rx::GLImplFactory"* %8, %"struct.gl::Caps"* dereferenceable(872) %9, i32 %1, %"class.egl::ShareGroup"* %11)
  tail call void @_ZN2gl5State25setReadFramebufferBindingEPNS_11FramebufferE(%"class.gl::State"* %3, %"class.gl::Framebuffer"* %12) #21
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 68
  %14 = icmp eq %"class.gl::Framebuffer"* %12, null
  %15 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %12, i64 0, i32 2
  %16 = select i1 %14, %"class.angle::Subject"* null, %"class.angle::Subject"* %15
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %13, %"class.angle::Subject"* %16) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.gl::Framebuffer"* @_ZN2gl18FramebufferManager26checkFramebufferAllocationEPN2rx13GLImplFactoryERKNS_4CapsENS_13FramebufferIDEPN3egl10ShareGroupE(%"class.gl::FramebufferManager"*, %"class.rx::GLImplFactory"*, %"struct.gl::Caps"* dereferenceable(872), i32, %"class.egl::ShareGroup"*) local_unnamed_addr #5 comdat align 2 {
  %6 = alloca %"struct.gl::Caps", align 8
  %7 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0
  %8 = bitcast %"struct.gl::Caps"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 872, i8* nonnull %8)
  %9 = zext i32 %3 to i64
  %10 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %9
  br i1 %12, label %13, label %19

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 1
  %15 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %14, align 8
  %16 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %15, i64 %9
  %17 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %16, align 8
  %18 = icmp eq %"class.gl::Framebuffer"* %17, inttoptr (i64 -1 to %"class.gl::Framebuffer"*)
  br i1 %18, label %85, label %82

19:                                               ; preds = %5
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = add i64 %20, %9
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %26, 7
  %32 = ptrtoint i8* %28 to i64
  %33 = lshr i64 %32, 12
  %34 = xor i64 %31, %33
  %35 = trunc i128 %25 to i8
  %36 = and i8 %35, 127
  %37 = insertelement <16 x i8> undef, i8 %36, i32 0
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> zeroinitializer
  %39 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %40

40:                                               ; preds = %70, %19
  %41 = phi i64 [ %34, %19 ], [ %72, %70 ]
  %42 = phi i64 [ 0, %19 ], [ %71, %70 ]
  %43 = and i64 %41, %30
  %44 = getelementptr inbounds i8, i8* %28, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %38, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  %52 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %39, align 8
  br label %53

53:                                               ; preds = %62, %50
  %54 = phi i32 [ %51, %50 ], [ %64, %62 ]
  %55 = tail call i32 @llvm.cttz.i32(i32 %54, i1 false) #21, !range !8
  %56 = zext i32 %55 to i64
  %57 = add i64 %43, %56
  %58 = and i64 %57, %30
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %52, i64 %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %3
  br i1 %61, label %73, label %62, !prof !9

62:                                               ; preds = %53
  %63 = add i32 %54, -1
  %64 = and i32 %63, %54
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %62, %40
  %67 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %85, !prof !10

70:                                               ; preds = %66
  %71 = add i64 %42, 16
  %72 = add i64 %71, %43
  br label %40

73:                                               ; preds = %53
  %74 = getelementptr inbounds i8, i8* %28, i64 %58
  %75 = icmp ne i8* %74, null
  tail call void @llvm.assume(i1 %75) #21
  %76 = load i8, i8* %74, align 1
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %73
  tail call void @llvm.trap() #21
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %52, i64 %58, i32 0, i32 1
  %81 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %80, align 8
  br label %82

82:                                               ; preds = %79, %13
  %83 = phi %"class.gl::Framebuffer"* [ %17, %13 ], [ %81, %79 ]
  %84 = icmp eq %"class.gl::Framebuffer"* %83, null
  br i1 %84, label %85, label %89

85:                                               ; preds = %66, %82, %13
  %86 = icmp eq i32 %3, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %85
  call void @_ZN2gl4CapsC1ERKS0_(%"struct.gl::Caps"* nonnull %6, %"struct.gl::Caps"* dereferenceable(872) %2) #21
  %88 = call %"class.gl::Framebuffer"* @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE25checkObjectAllocationImplIJNS_4CapsEPN3egl10ShareGroupEEEEPS1_PN2rx13GLImplFactoryES3_DpT_(%"class.gl::TypedResourceManager.314"* %7, %"class.rx::GLImplFactory"* %1, i32 %3, %"struct.gl::Caps"* nonnull %6, %"class.egl::ShareGroup"* %4) #21
  call void @_ZN2gl4CapsD1Ev(%"struct.gl::Caps"* nonnull %6) #21
  br label %89

89:                                               ; preds = %82, %85, %87
  %90 = phi %"class.gl::Framebuffer"* [ %88, %87 ], [ %83, %82 ], [ null, %85 ]
  call void @llvm.lifetime.end.p0i8(i64 872, i8* nonnull %8)
  ret %"class.gl::Framebuffer"* %90
}

declare void @_ZN2gl5State25setReadFramebufferBindingEPNS_11FramebufferE(%"class.gl::State"*, %"class.gl::Framebuffer"*) local_unnamed_addr #3

declare void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"*, %"class.angle::Subject"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19bindDrawFramebufferENS_13FramebufferIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %5 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %7 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 9
  %11 = load %"class.egl::ShareGroup"*, %"class.egl::ShareGroup"** %10, align 8
  %12 = tail call %"class.gl::Framebuffer"* @_ZN2gl18FramebufferManager26checkFramebufferAllocationEPN2rx13GLImplFactoryERKNS_4CapsENS_13FramebufferIDEPN3egl10ShareGroupE(%"class.gl::FramebufferManager"* %5, %"class.rx::GLImplFactory"* %8, %"struct.gl::Caps"* dereferenceable(872) %9, i32 %1, %"class.egl::ShareGroup"* %11)
  tail call void @_ZN2gl5State25setDrawFramebufferBindingEPNS_11FramebufferE(%"class.gl::State"* %3, %"class.gl::Framebuffer"* %12) #21
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 67
  %14 = icmp eq %"class.gl::Framebuffer"* %12, null
  %15 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %12, i64 0, i32 2
  %16 = select i1 %14, %"class.angle::Subject"* null, %"class.angle::Subject"* %15
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %13, %"class.angle::Subject"* %16) #21
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %17, align 8
  ret void
}

declare void @_ZN2gl5State25setDrawFramebufferBindingEPNS_11FramebufferE(%"class.gl::State"*, %"class.gl::Framebuffer"*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl10StateCache23onDrawFramebufferChangeEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readnone) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  store i64 1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::VertexArray"* @_ZN2gl7Context26checkVertexArrayAllocationENS_13VertexArrayIDE(%"class.gl::Context"*, i32) local_unnamed_addr #5 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 1
  %9 = load %"class.gl::VertexArray"**, %"class.gl::VertexArray"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %9, i64 %3
  %11 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %10, align 8
  %12 = icmp eq %"class.gl::VertexArray"* %11, inttoptr (i64 -1 to %"class.gl::VertexArray"*)
  br i1 %12, label %79, label %76

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %15 = add i64 %14, %3
  %16 = zext i64 %15 to i128
  %17 = mul nuw i128 %16, 11376068507788127593
  %18 = lshr i128 %17, 64
  %19 = xor i128 %18, %17
  %20 = trunc i128 %19 to i64
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = lshr i64 %20, 7
  %26 = ptrtoint i8* %22 to i64
  %27 = lshr i64 %26, 12
  %28 = xor i64 %25, %27
  %29 = trunc i128 %19 to i8
  %30 = and i8 %29, 127
  %31 = insertelement <16 x i8> undef, i8 %30, i32 0
  %32 = shufflevector <16 x i8> %31, <16 x i8> undef, <16 x i32> zeroinitializer
  %33 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 1
  br label %34

34:                                               ; preds = %64, %13
  %35 = phi i64 [ %28, %13 ], [ %66, %64 ]
  %36 = phi i64 [ 0, %13 ], [ %65, %64 ]
  %37 = and i64 %35, %24
  %38 = getelementptr inbounds i8, i8* %22, i64 %37
  %39 = bitcast i8* %38 to <16 x i8>*
  %40 = load <16 x i8>, <16 x i8>* %39, align 1
  %41 = icmp eq <16 x i8> %32, %40
  %42 = bitcast <16 x i1> %41 to i16
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %60, label %44

44:                                               ; preds = %34
  %45 = zext i16 %42 to i32
  %46 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %33, align 8
  br label %47

47:                                               ; preds = %56, %44
  %48 = phi i32 [ %45, %44 ], [ %58, %56 ]
  %49 = tail call i32 @llvm.cttz.i32(i32 %48, i1 false) #21, !range !8
  %50 = zext i32 %49 to i64
  %51 = add i64 %37, %50
  %52 = and i64 %51, %24
  %53 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %46, i64 %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %67, label %56, !prof !9

56:                                               ; preds = %47
  %57 = add i32 %48, -1
  %58 = and i32 %57, %48
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %47

60:                                               ; preds = %56, %34
  %61 = icmp eq <16 x i8> %40, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %62 = bitcast <16 x i1> %61 to i16
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %64, label %79, !prof !10

64:                                               ; preds = %60
  %65 = add i64 %36, 16
  %66 = add i64 %65, %37
  br label %34

67:                                               ; preds = %47
  %68 = getelementptr inbounds i8, i8* %22, i64 %52
  %69 = icmp ne i8* %68, null
  tail call void @llvm.assume(i1 %69) #21
  %70 = load i8, i8* %68, align 1
  %71 = icmp sgt i8 %70, -1
  br i1 %71, label %73, label %72, !prof !9

72:                                               ; preds = %67
  tail call void @llvm.trap() #21
  unreachable

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %46, i64 %52, i32 0, i32 1
  %75 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %74, align 8
  br label %76

76:                                               ; preds = %7, %73
  %77 = phi %"class.gl::VertexArray"* [ %11, %7 ], [ %75, %73 ]
  %78 = icmp eq %"class.gl::VertexArray"* %77, null
  br i1 %78, label %79, label %95

79:                                               ; preds = %60, %7, %76
  %80 = tail call i8* @_Znwm(i64 664) #27
  %81 = bitcast i8* %80 to %"class.gl::VertexArray"*
  %82 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %83 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %83, i64 0, i32 0
  %85 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 57
  %86 = load i32, i32* %85, align 8
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 29
  %89 = load i32, i32* %88, align 4
  %90 = sext i32 %89 to i64
  tail call void @_ZN2gl11VertexArrayC1EPN2rx13GLImplFactoryENS_13VertexArrayIDEmm(%"class.gl::VertexArray"* nonnull %81, %"class.rx::GLImplFactory"* %84, i32 %1, i64 %87, i64 %90) #21
  %91 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 47
  %92 = load i8, i8* %91, align 1, !range !2
  %93 = getelementptr inbounds i8, i8* %80, i64 656
  store i8 %92, i8* %93, align 8
  %94 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22
  tail call void @_ZN2gl11ResourceMapINS_11VertexArrayENS_13VertexArrayIDEE6assignES2_PS1_(%"class.gl::ResourceMap.566"* %94, i32 %1, %"class.gl::VertexArray"* nonnull %81)
  br label %95

95:                                               ; preds = %76, %79
  %96 = phi %"class.gl::VertexArray"* [ %77, %76 ], [ %81, %79 ]
  ret %"class.gl::VertexArray"* %96
}

declare void @_ZN2gl5State21setVertexArrayBindingEPKNS_7ContextEPNS_11VertexArrayE(%"class.gl::State"*, %"class.gl::Context"*, %"class.gl::VertexArray"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache26onVertexArrayBindingChangeEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.angle::BitSetT.166", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 65
  %9 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %8, align 8
  %10 = icmp eq %"class.gl::ProgramExecutable"* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = bitcast %"class.gl::StateCache"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #21
  br label %49

13:                                               ; preds = %2
  %14 = bitcast %"class.angle::BitSetT.166"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #21
  %15 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %3, i64 0, i32 0
  store i64 -6148914691236517206, i64* %15, align 8
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 103
  call void @_ZNK2gl10GLES1State23getActiveAttributesMaskEv(%"class.angle::BitSetT.166"* nonnull sret %3, %"class.gl::GLES1State"* %16) #21
  %17 = load i64, i64* %15, align 8, !noalias !61
  br label %23

18:                                               ; preds = %7
  %19 = bitcast %"class.angle::BitSetT.166"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #21
  %20 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 5, i32 0
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %20, align 8
  br label %23

23:                                               ; preds = %18, %13
  %24 = phi i64 [ %22, %18 ], [ %17, %13 ]
  %25 = phi i8* [ %19, %18 ], [ %14, %13 ]
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %27 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %26, align 8
  %28 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %27, i64 0, i32 5, i32 6, i32 0
  %29 = load i64, i64* %28, align 8, !noalias !64
  %30 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %27, i64 0, i32 5, i32 4, i32 0
  %31 = load i64, i64* %30, align 8, !noalias !61
  %32 = and i64 %31, %24
  %33 = and i64 %32, %29
  %34 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 1, i32 0
  store i64 %33, i64* %34, align 8
  %35 = and i64 %29, 65535
  %36 = xor i64 %35, 65535
  %37 = and i64 %32, %36
  %38 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  %39 = load i64, i64* %30, align 8, !noalias !67
  %40 = and i64 %39, 65535
  %41 = xor i64 %40, 65535
  %42 = and i64 %41, %24
  %43 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 2, i32 0
  store i64 %42, i64* %43, align 8
  %44 = load i64, i64* %30, align 8, !noalias !70
  %45 = and i64 %44, %29
  %46 = icmp ne i64 %45, 0
  %47 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 3
  %48 = zext i1 %46 to i8
  store i8 %48, i8* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #21
  br label %49

49:                                               ; preds = %11, %23
  %50 = phi i64 [ 0, %11 ], [ %37, %23 ]
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 47
  %52 = load i8, i8* %51, align 1, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %96, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %56 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %55, align 8
  %57 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 5
  %58 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 6
  %59 = bitcast i64* %57 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %59, align 8
  %60 = icmp eq %"class.gl::VertexArray"* %56, null
  %61 = icmp eq i64 %50, 0
  %62 = or i1 %60, %61
  br i1 %62, label %96, label %63

63:                                               ; preds = %54
  %64 = call i64 @llvm.cttz.i64(i64 %50, i1 true) #21, !range !73
  %65 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %56, i64 0, i32 5, i32 1, i32 0, i32 0
  %66 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %56, i64 0, i32 5, i32 3, i32 0, i32 0
  br label %67

67:                                               ; preds = %88, %63
  %68 = phi i64 [ 9223372036854775807, %63 ], [ %89, %88 ]
  %69 = phi i64 [ 9223372036854775807, %63 ], [ %90, %88 ]
  %70 = phi i64 [ %64, %63 ], [ %95, %88 ]
  %71 = phi i64 [ %50, %63 ], [ %93, %88 ]
  %72 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %65, align 8
  %73 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %72, i64 %70, i32 5
  %74 = load i32, i32* %73, align 8
  %75 = zext i32 %74 to i64
  %76 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %66, align 8
  %77 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %72, i64 %70, i32 6
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %76, i64 %75, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %67
  %83 = icmp slt i64 %78, %69
  %84 = select i1 %83, i64 %78, i64 %69
  store i64 %84, i64* %58, align 8
  br label %88

85:                                               ; preds = %67
  %86 = icmp slt i64 %78, %68
  %87 = select i1 %86, i64 %78, i64 %68
  store i64 %87, i64* %57, align 8
  br label %88

88:                                               ; preds = %85, %82
  %89 = phi i64 [ %87, %85 ], [ %68, %82 ]
  %90 = phi i64 [ %69, %85 ], [ %84, %82 ]
  %91 = shl i64 1, %70
  %92 = xor i64 %91, -1
  %93 = and i64 %71, %92
  %94 = icmp eq i64 %93, 0
  %95 = call i64 @llvm.cttz.i64(i64 %93, i1 true) #21, !range !73
  br i1 %94, label %96, label %67

96:                                               ; preds = %88, %49, %54
  %97 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  %98 = bitcast i64* %97 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %98, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16bindVertexBufferEjNS_8BufferIDEli(%"class.gl::Context"*, i32, i32, i64, i32) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 10
  %8 = load %"class.gl::BufferManager"*, %"class.gl::BufferManager"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %8, i64 0, i32 0
  %13 = zext i32 %2 to i64
  %14 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %8, i64 0, i32 0, i32 1, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %15, %13
  br i1 %16, label %17, label %23

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %8, i64 0, i32 0, i32 1, i32 1
  %19 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %18, align 8
  %20 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %19, i64 %13
  %21 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %20, align 8
  %22 = icmp eq %"class.gl::Buffer"* %21, inttoptr (i64 -1 to %"class.gl::Buffer"*)
  br i1 %22, label %89, label %86

23:                                               ; preds = %5
  %24 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %25 = add i64 %24, %13
  %26 = zext i64 %25 to i128
  %27 = mul nuw i128 %26, 11376068507788127593
  %28 = lshr i128 %27, 64
  %29 = xor i128 %28, %27
  %30 = trunc i128 %29 to i64
  %31 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %8, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %8, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = lshr i64 %30, 7
  %36 = ptrtoint i8* %32 to i64
  %37 = lshr i64 %36, 12
  %38 = xor i64 %35, %37
  %39 = trunc i128 %29 to i8
  %40 = and i8 %39, 127
  %41 = insertelement <16 x i8> undef, i8 %40, i32 0
  %42 = shufflevector <16 x i8> %41, <16 x i8> undef, <16 x i32> zeroinitializer
  %43 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %8, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %44

44:                                               ; preds = %74, %23
  %45 = phi i64 [ %38, %23 ], [ %76, %74 ]
  %46 = phi i64 [ 0, %23 ], [ %75, %74 ]
  %47 = and i64 %45, %34
  %48 = getelementptr inbounds i8, i8* %32, i64 %47
  %49 = bitcast i8* %48 to <16 x i8>*
  %50 = load <16 x i8>, <16 x i8>* %49, align 1
  %51 = icmp eq <16 x i8> %42, %50
  %52 = bitcast <16 x i1> %51 to i16
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %70, label %54

54:                                               ; preds = %44
  %55 = zext i16 %52 to i32
  %56 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %43, align 8
  br label %57

57:                                               ; preds = %66, %54
  %58 = phi i32 [ %55, %54 ], [ %68, %66 ]
  %59 = tail call i32 @llvm.cttz.i32(i32 %58, i1 false) #21, !range !8
  %60 = zext i32 %59 to i64
  %61 = add i64 %47, %60
  %62 = and i64 %61, %34
  %63 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %56, i64 %62, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, %2
  br i1 %65, label %77, label %66, !prof !9

66:                                               ; preds = %57
  %67 = add i32 %58, -1
  %68 = and i32 %67, %58
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %57

70:                                               ; preds = %66, %44
  %71 = icmp eq <16 x i8> %50, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %72 = bitcast <16 x i1> %71 to i16
  %73 = icmp eq i16 %72, 0
  br i1 %73, label %74, label %89, !prof !10

74:                                               ; preds = %70
  %75 = add i64 %46, 16
  %76 = add i64 %75, %47
  br label %44

77:                                               ; preds = %57
  %78 = getelementptr inbounds i8, i8* %32, i64 %62
  %79 = icmp ne i8* %78, null
  tail call void @llvm.assume(i1 %79) #21
  %80 = load i8, i8* %78, align 1
  %81 = icmp sgt i8 %80, -1
  br i1 %81, label %83, label %82, !prof !9

82:                                               ; preds = %77
  tail call void @llvm.trap() #21
  unreachable

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %56, i64 %62, i32 0, i32 1
  %85 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %84, align 8
  br label %86

86:                                               ; preds = %83, %17
  %87 = phi %"class.gl::Buffer"* [ %21, %17 ], [ %85, %83 ]
  %88 = icmp eq %"class.gl::Buffer"* %87, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %70, %86, %17
  %90 = icmp eq i32 %2, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = tail call %"class.gl::Buffer"* @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE25checkObjectAllocationImplIJEEEPS1_PN2rx13GLImplFactoryES3_DpT_(%"class.gl::TypedResourceManager"* %12, %"class.rx::GLImplFactory"* %11, i32 %2) #21
  br label %93

93:                                               ; preds = %86, %89, %91
  %94 = phi %"class.gl::Buffer"* [ %92, %91 ], [ %87, %86 ], [ null, %89 ]
  tail call void @_ZN2gl5State16bindVertexBufferEPKNS_7ContextEjPNS_6BufferEli(%"class.gl::State"* %6, %"class.gl::Context"* %0, i32 %1, %"class.gl::Buffer"* %94, i64 %3, i32 %4) #21
  %95 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache24onVertexArrayStateChangeEPNS_7ContextE(%"class.gl::StateCache"* %95, %"class.gl::Context"* %0)
  ret void
}

declare void @_ZN2gl5State16bindVertexBufferEPKNS_7ContextEjPNS_6BufferEli(%"class.gl::State"*, %"class.gl::Context"*, i32, %"class.gl::Buffer"*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache24onVertexArrayStateChangeEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.angle::BitSetT.166", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 65
  %9 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %8, align 8
  %10 = icmp eq %"class.gl::ProgramExecutable"* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = bitcast %"class.gl::StateCache"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #21
  br label %49

13:                                               ; preds = %2
  %14 = bitcast %"class.angle::BitSetT.166"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #21
  %15 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %3, i64 0, i32 0
  store i64 -6148914691236517206, i64* %15, align 8
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 103
  call void @_ZNK2gl10GLES1State23getActiveAttributesMaskEv(%"class.angle::BitSetT.166"* nonnull sret %3, %"class.gl::GLES1State"* %16) #21
  %17 = load i64, i64* %15, align 8, !noalias !74
  br label %23

18:                                               ; preds = %7
  %19 = bitcast %"class.angle::BitSetT.166"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #21
  %20 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 5, i32 0
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %20, align 8
  br label %23

23:                                               ; preds = %18, %13
  %24 = phi i64 [ %22, %18 ], [ %17, %13 ]
  %25 = phi i8* [ %19, %18 ], [ %14, %13 ]
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %27 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %26, align 8
  %28 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %27, i64 0, i32 5, i32 6, i32 0
  %29 = load i64, i64* %28, align 8, !noalias !77
  %30 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %27, i64 0, i32 5, i32 4, i32 0
  %31 = load i64, i64* %30, align 8, !noalias !74
  %32 = and i64 %31, %24
  %33 = and i64 %32, %29
  %34 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 1, i32 0
  store i64 %33, i64* %34, align 8
  %35 = and i64 %29, 65535
  %36 = xor i64 %35, 65535
  %37 = and i64 %32, %36
  %38 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  %39 = load i64, i64* %30, align 8, !noalias !80
  %40 = and i64 %39, 65535
  %41 = xor i64 %40, 65535
  %42 = and i64 %41, %24
  %43 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 2, i32 0
  store i64 %42, i64* %43, align 8
  %44 = load i64, i64* %30, align 8, !noalias !83
  %45 = and i64 %44, %29
  %46 = icmp ne i64 %45, 0
  %47 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 3
  %48 = zext i1 %46 to i8
  store i8 %48, i8* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #21
  br label %49

49:                                               ; preds = %11, %23
  %50 = phi i64 [ 0, %11 ], [ %37, %23 ]
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 47
  %52 = load i8, i8* %51, align 1, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %96, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %56 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %55, align 8
  %57 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 5
  %58 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 6
  %59 = bitcast i64* %57 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %59, align 8
  %60 = icmp eq %"class.gl::VertexArray"* %56, null
  %61 = icmp eq i64 %50, 0
  %62 = or i1 %60, %61
  br i1 %62, label %96, label %63

63:                                               ; preds = %54
  %64 = call i64 @llvm.cttz.i64(i64 %50, i1 true) #21, !range !73
  %65 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %56, i64 0, i32 5, i32 1, i32 0, i32 0
  %66 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %56, i64 0, i32 5, i32 3, i32 0, i32 0
  br label %67

67:                                               ; preds = %88, %63
  %68 = phi i64 [ 9223372036854775807, %63 ], [ %89, %88 ]
  %69 = phi i64 [ 9223372036854775807, %63 ], [ %90, %88 ]
  %70 = phi i64 [ %64, %63 ], [ %95, %88 ]
  %71 = phi i64 [ %50, %63 ], [ %93, %88 ]
  %72 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %65, align 8
  %73 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %72, i64 %70, i32 5
  %74 = load i32, i32* %73, align 8
  %75 = zext i32 %74 to i64
  %76 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %66, align 8
  %77 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %72, i64 %70, i32 6
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %76, i64 %75, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %67
  %83 = icmp slt i64 %78, %69
  %84 = select i1 %83, i64 %78, i64 %69
  store i64 %84, i64* %58, align 8
  br label %88

85:                                               ; preds = %67
  %86 = icmp slt i64 %78, %68
  %87 = select i1 %86, i64 %78, i64 %68
  store i64 %87, i64* %57, align 8
  br label %88

88:                                               ; preds = %85, %82
  %89 = phi i64 [ %87, %85 ], [ %68, %82 ]
  %90 = phi i64 [ %69, %85 ], [ %84, %82 ]
  %91 = shl i64 1, %70
  %92 = xor i64 %91, -1
  %93 = and i64 %71, %92
  %94 = icmp eq i64 %93, 0
  %95 = call i64 @llvm.cttz.i64(i64 %93, i1 true) #21, !range !73
  br i1 %94, label %96, label %67

96:                                               ; preds = %88, %49, %54
  %97 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  %98 = bitcast i64* %97 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %98, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11bindSamplerEjNS_9SamplerIDE(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %6 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %8, i64 0, i32 0
  %10 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"* %6, %"class.rx::GLImplFactory"* %9, i32 %2)
  tail call void @_ZN2gl5State17setSamplerBindingEPKNS_7ContextEjPNS_7SamplerE(%"class.gl::State"* %4, %"class.gl::Context"* %0, i32 %1, %"class.gl::Sampler"* %10) #21
  %11 = zext i32 %1 to i64
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 70, i32 0, i32 0
  %13 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %12, align 8
  %14 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %13, i64 %11
  %15 = icmp eq %"class.gl::Sampler"* %10, null
  %16 = getelementptr inbounds %"class.gl::Sampler", %"class.gl::Sampler"* %10, i64 0, i32 2
  %17 = select i1 %15, %"class.angle::Subject"* null, %"class.angle::Subject"* %16
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %14, %"class.angle::Subject"* %17) #21
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"*, %"class.rx::GLImplFactory"*, i32) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0
  %5 = zext i32 %2 to i64
  %6 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 1
  %11 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %11, i64 %5
  %13 = load %"class.gl::Sampler"*, %"class.gl::Sampler"** %12, align 8
  %14 = icmp eq %"class.gl::Sampler"* %13, inttoptr (i64 -1 to %"class.gl::Sampler"*)
  br i1 %14, label %81, label %78

15:                                               ; preds = %3
  %16 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %17 = add i64 %16, %5
  %18 = zext i64 %17 to i128
  %19 = mul nuw i128 %18, 11376068507788127593
  %20 = lshr i128 %19, 64
  %21 = xor i128 %20, %19
  %22 = trunc i128 %21 to i64
  %23 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %22, 7
  %28 = ptrtoint i8* %24 to i64
  %29 = lshr i64 %28, 12
  %30 = xor i64 %27, %29
  %31 = trunc i128 %21 to i8
  %32 = and i8 %31, 127
  %33 = insertelement <16 x i8> undef, i8 %32, i32 0
  %34 = shufflevector <16 x i8> %33, <16 x i8> undef, <16 x i32> zeroinitializer
  %35 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %36

36:                                               ; preds = %66, %15
  %37 = phi i64 [ %30, %15 ], [ %68, %66 ]
  %38 = phi i64 [ 0, %15 ], [ %67, %66 ]
  %39 = and i64 %37, %26
  %40 = getelementptr inbounds i8, i8* %24, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %34, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %35, align 8
  br label %49

49:                                               ; preds = %58, %46
  %50 = phi i32 [ %47, %46 ], [ %60, %58 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #21, !range !8
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %26
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %48, i64 %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %2
  br i1 %57, label %69, label %58, !prof !9

58:                                               ; preds = %49
  %59 = add i32 %50, -1
  %60 = and i32 %59, %50
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %49

62:                                               ; preds = %58, %36
  %63 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %81, !prof !10

66:                                               ; preds = %62
  %67 = add i64 %38, 16
  %68 = add i64 %67, %39
  br label %36

69:                                               ; preds = %49
  %70 = getelementptr inbounds i8, i8* %24, i64 %54
  %71 = icmp ne i8* %70, null
  tail call void @llvm.assume(i1 %71) #21
  %72 = load i8, i8* %70, align 1
  %73 = icmp sgt i8 %72, -1
  br i1 %73, label %75, label %74, !prof !9

74:                                               ; preds = %69
  tail call void @llvm.trap() #21
  unreachable

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %48, i64 %54, i32 0, i32 1
  %77 = load %"class.gl::Sampler"*, %"class.gl::Sampler"** %76, align 8
  br label %78

78:                                               ; preds = %75, %9
  %79 = phi %"class.gl::Sampler"* [ %13, %9 ], [ %77, %75 ]
  %80 = icmp eq %"class.gl::Sampler"* %79, null
  br i1 %80, label %81, label %85

81:                                               ; preds = %62, %78, %9
  %82 = icmp eq i32 %2, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = tail call %"class.gl::Sampler"* @_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE25checkObjectAllocationImplIJEEEPS1_PN2rx13GLImplFactoryES3_DpT_(%"class.gl::TypedResourceManager.290"* %4, %"class.rx::GLImplFactory"* %1, i32 %2) #21
  br label %85

85:                                               ; preds = %78, %81, %83
  %86 = phi %"class.gl::Sampler"* [ %84, %83 ], [ %79, %78 ], [ null, %81 ]
  ret %"class.gl::Sampler"* %86
}

declare void @_ZN2gl5State17setSamplerBindingEPKNS_7ContextEjPNS_7SamplerE(%"class.gl::State"*, %"class.gl::Context"*, i32, %"class.gl::Sampler"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16bindImageTextureEjNS_9TextureIDEihijj(%"class.gl::Context"*, i32, i32, i32, i8 zeroext, i32, i32, i32) local_unnamed_addr #5 align 2 {
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %11 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %10, align 8
  %12 = zext i32 %2 to i64
  %13 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %11, i64 0, i32 0, i32 1, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %14, %12
  br i1 %15, label %16, label %23

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %11, i64 0, i32 0, i32 1, i32 1
  %18 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %17, align 8
  %19 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %18, i64 %12
  %20 = load %"class.gl::Texture"*, %"class.gl::Texture"** %19, align 8
  %21 = icmp eq %"class.gl::Texture"* %20, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %22 = select i1 %21, %"class.gl::Texture"* null, %"class.gl::Texture"* %20
  br label %86

23:                                               ; preds = %8
  %24 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %25 = add i64 %24, %12
  %26 = zext i64 %25 to i128
  %27 = mul nuw i128 %26, 11376068507788127593
  %28 = lshr i128 %27, 64
  %29 = xor i128 %28, %27
  %30 = trunc i128 %29 to i64
  %31 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %11, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %11, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = lshr i64 %30, 7
  %36 = ptrtoint i8* %32 to i64
  %37 = lshr i64 %36, 12
  %38 = xor i64 %35, %37
  %39 = trunc i128 %29 to i8
  %40 = and i8 %39, 127
  %41 = insertelement <16 x i8> undef, i8 %40, i32 0
  %42 = shufflevector <16 x i8> %41, <16 x i8> undef, <16 x i32> zeroinitializer
  %43 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %11, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %44

44:                                               ; preds = %74, %23
  %45 = phi i64 [ %38, %23 ], [ %76, %74 ]
  %46 = phi i64 [ 0, %23 ], [ %75, %74 ]
  %47 = and i64 %45, %34
  %48 = getelementptr inbounds i8, i8* %32, i64 %47
  %49 = bitcast i8* %48 to <16 x i8>*
  %50 = load <16 x i8>, <16 x i8>* %49, align 1
  %51 = icmp eq <16 x i8> %42, %50
  %52 = bitcast <16 x i1> %51 to i16
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %70, label %54

54:                                               ; preds = %44
  %55 = zext i16 %52 to i32
  %56 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %43, align 8
  br label %57

57:                                               ; preds = %66, %54
  %58 = phi i32 [ %55, %54 ], [ %68, %66 ]
  %59 = tail call i32 @llvm.cttz.i32(i32 %58, i1 false) #21, !range !8
  %60 = zext i32 %59 to i64
  %61 = add i64 %47, %60
  %62 = and i64 %61, %34
  %63 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %56, i64 %62, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, %2
  br i1 %65, label %77, label %66, !prof !9

66:                                               ; preds = %57
  %67 = add i32 %58, -1
  %68 = and i32 %67, %58
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %57

70:                                               ; preds = %66, %44
  %71 = icmp eq <16 x i8> %50, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %72 = bitcast <16 x i1> %71 to i16
  %73 = icmp eq i16 %72, 0
  br i1 %73, label %74, label %86, !prof !10

74:                                               ; preds = %70
  %75 = add i64 %46, 16
  %76 = add i64 %75, %47
  br label %44

77:                                               ; preds = %57
  %78 = getelementptr inbounds i8, i8* %32, i64 %62
  %79 = icmp ne i8* %78, null
  tail call void @llvm.assume(i1 %79) #21
  %80 = load i8, i8* %78, align 1
  %81 = icmp sgt i8 %80, -1
  br i1 %81, label %83, label %82, !prof !9

82:                                               ; preds = %77
  tail call void @llvm.trap() #21
  unreachable

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %56, i64 %62, i32 0, i32 1
  %85 = load %"class.gl::Texture"*, %"class.gl::Texture"** %84, align 8
  br label %86

86:                                               ; preds = %70, %16, %83
  %87 = phi %"class.gl::Texture"* [ %22, %16 ], [ %85, %83 ], [ null, %70 ]
  %88 = zext i32 %1 to i64
  tail call void @_ZN2gl5State12setImageUnitEPKNS_7ContextEmPNS_7TextureEihijj(%"class.gl::State"* %9, %"class.gl::Context"* %0, i64 %88, %"class.gl::Texture"* %87, i32 %3, i8 zeroext %4, i32 %5, i32 %6, i32 %7) #21
  %89 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 71, i32 0, i32 0
  %90 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %89, align 8
  %91 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %90, i64 %88
  %92 = icmp eq %"class.gl::Texture"* %87, null
  %93 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %87, i64 0, i32 2, i32 0, i32 0
  %94 = select i1 %92, %"class.angle::Subject"* null, %"class.angle::Subject"* %93
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %91, %"class.angle::Subject"* %94) #21
  ret void
}

declare void @_ZN2gl5State12setImageUnitEPKNS_7ContextEmPNS_7TextureEihijj(%"class.gl::State"*, %"class.gl::Context"*, i64, %"class.gl::Texture"*, i32, i8 zeroext, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10useProgramENS_15ShaderProgramIDE(%"class.gl::Context"*, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %5 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %4, align 8
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 1
  %12 = load %"class.gl::Program"**, %"class.gl::Program"*** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %12, i64 %6
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %13, align 8
  %15 = icmp eq %"class.gl::Program"* %14, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %15, label %87, label %79

16:                                               ; preds = %2
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, %6
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %67, %16
  %38 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %39 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %40 = and i64 %38, %27
  %41 = getelementptr inbounds i8, i8* %25, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %35, %43
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37
  %48 = zext i16 %45 to i32
  %49 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %36, align 8
  br label %50

50:                                               ; preds = %59, %47
  %51 = phi i32 [ %48, %47 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #21, !range !8
  %53 = zext i32 %52 to i64
  %54 = add i64 %40, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %49, i64 %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %70, label %59, !prof !9

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %37
  %64 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %87, !prof !10

67:                                               ; preds = %63
  %68 = add i64 %39, 16
  %69 = add i64 %68, %40
  br label %37

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #21
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %76, label %75, !prof !9

75:                                               ; preds = %70
  tail call void @llvm.trap() #21
  unreachable

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %49, i64 %55, i32 0, i32 1
  %78 = load %"class.gl::Program"*, %"class.gl::Program"** %77, align 8
  br label %79

79:                                               ; preds = %76, %10
  %80 = phi %"class.gl::Program"* [ %14, %10 ], [ %78, %76 ]
  %81 = icmp eq %"class.gl::Program"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %80, i64 0, i32 11, i32 0, i32 0, i32 0
  %84 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %83, align 8
  %85 = icmp eq %"struct.gl::Program::LinkingState"* %84, null
  br i1 %85, label %87, label %86

86:                                               ; preds = %82
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %80, %"class.gl::Context"* %0) #21
  br label %87

87:                                               ; preds = %63, %10, %79, %82, %86
  %88 = phi %"class.gl::Program"* [ null, %79 ], [ %80, %82 ], [ %80, %86 ], [ null, %10 ], [ null, %63 ]
  %89 = tail call i32 @_ZN2gl5State10setProgramEPKNS_7ContextEPNS_7ProgramE(%"class.gl::State"* %3, %"class.gl::Context"* %0, %"class.gl::Program"* %88) #21
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache25onProgramExecutableChangeEPNS_7ContextE(%"class.gl::StateCache"* %92, %"class.gl::Context"* %0)
  br label %93

93:                                               ; preds = %87, %91
  ret void
}

declare i32 @_ZN2gl5State10setProgramEPKNS_7ContextEPNS_7ProgramE(%"class.gl::State"*, %"class.gl::Context"*, %"class.gl::Program"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache25onProgramExecutableChangeEPNS_7ContextE(%"class.gl::StateCache"*, %"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.angle::BitSetT.166", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 65
  %9 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %8, align 8
  %10 = icmp eq %"class.gl::ProgramExecutable"* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = bitcast %"class.gl::StateCache"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #21
  br label %49

13:                                               ; preds = %2
  %14 = bitcast %"class.angle::BitSetT.166"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #21
  %15 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %3, i64 0, i32 0
  store i64 -6148914691236517206, i64* %15, align 8
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 103
  call void @_ZNK2gl10GLES1State23getActiveAttributesMaskEv(%"class.angle::BitSetT.166"* nonnull sret %3, %"class.gl::GLES1State"* %16) #21
  %17 = load i64, i64* %15, align 8, !noalias !86
  br label %23

18:                                               ; preds = %7
  %19 = bitcast %"class.angle::BitSetT.166"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #21
  %20 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 5, i32 0
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %20, align 8
  br label %23

23:                                               ; preds = %18, %13
  %24 = phi i64 [ %22, %18 ], [ %17, %13 ]
  %25 = phi i8* [ %19, %18 ], [ %14, %13 ]
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %27 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %26, align 8
  %28 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %27, i64 0, i32 5, i32 6, i32 0
  %29 = load i64, i64* %28, align 8, !noalias !89
  %30 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %27, i64 0, i32 5, i32 4, i32 0
  %31 = load i64, i64* %30, align 8, !noalias !86
  %32 = and i64 %31, %24
  %33 = and i64 %32, %29
  %34 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 1, i32 0
  store i64 %33, i64* %34, align 8
  %35 = and i64 %29, 65535
  %36 = xor i64 %35, 65535
  %37 = and i64 %32, %36
  %38 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  %39 = load i64, i64* %30, align 8, !noalias !92
  %40 = and i64 %39, 65535
  %41 = xor i64 %40, 65535
  %42 = and i64 %41, %24
  %43 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 2, i32 0
  store i64 %42, i64* %43, align 8
  %44 = load i64, i64* %30, align 8, !noalias !95
  %45 = and i64 %44, %29
  %46 = icmp ne i64 %45, 0
  %47 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 3
  %48 = zext i1 %46 to i8
  store i8 %48, i8* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #21
  br label %49

49:                                               ; preds = %11, %23
  %50 = phi i64 [ 0, %11 ], [ %37, %23 ]
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 47
  %52 = load i8, i8* %51, align 1, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %96, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %56 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %55, align 8
  %57 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 5
  %58 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 6
  %59 = bitcast i64* %57 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %59, align 8
  %60 = icmp eq %"class.gl::VertexArray"* %56, null
  %61 = icmp eq i64 %50, 0
  %62 = or i1 %60, %61
  br i1 %62, label %96, label %63

63:                                               ; preds = %54
  %64 = call i64 @llvm.cttz.i64(i64 %50, i1 true) #21, !range !73
  %65 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %56, i64 0, i32 5, i32 1, i32 0, i32 0
  %66 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %56, i64 0, i32 5, i32 3, i32 0, i32 0
  br label %67

67:                                               ; preds = %88, %63
  %68 = phi i64 [ 9223372036854775807, %63 ], [ %89, %88 ]
  %69 = phi i64 [ 9223372036854775807, %63 ], [ %90, %88 ]
  %70 = phi i64 [ %64, %63 ], [ %95, %88 ]
  %71 = phi i64 [ %50, %63 ], [ %93, %88 ]
  %72 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %65, align 8
  %73 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %72, i64 %70, i32 5
  %74 = load i32, i32* %73, align 8
  %75 = zext i32 %74 to i64
  %76 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %66, align 8
  %77 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %72, i64 %70, i32 6
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %76, i64 %75, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %67
  %83 = icmp slt i64 %78, %69
  %84 = select i1 %83, i64 %78, i64 %69
  store i64 %84, i64* %58, align 8
  br label %88

85:                                               ; preds = %67
  %86 = icmp slt i64 %78, %68
  %87 = select i1 %86, i64 %78, i64 %68
  store i64 %87, i64* %57, align 8
  br label %88

88:                                               ; preds = %85, %82
  %89 = phi i64 [ %87, %85 ], [ %68, %82 ]
  %90 = phi i64 [ %69, %85 ], [ %84, %82 ]
  %91 = shl i64 1, %70
  %92 = xor i64 %91, -1
  %93 = and i64 %71, %92
  %94 = icmp eq i64 %93, 0
  %95 = call i64 @llvm.cttz.i64(i64 %93, i1 true) #21, !range !73
  br i1 %94, label %96, label %67

96:                                               ; preds = %88, %49, %54
  %97 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  store i64 1, i64* %97, align 8
  call void @_ZN2gl10StateCache20updateValidDrawModesEPNS_7ContextE(%"class.gl::StateCache"* %0, %"class.gl::Context"* %1)
  %98 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 11, i32 0
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 65
  %100 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %99, align 8
  %101 = icmp eq %"class.gl::ProgramExecutable"* %100, null
  br i1 %101, label %124, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %100, i64 0, i32 55
  %104 = load i8, i8* %103, align 4, !range !2
  %105 = icmp eq i8 %104, 0
  %106 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %100, i64 0, i32 37
  %107 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %100, i64 0, i32 38
  %108 = select i1 %105, %"class.std::__1::vector.194"* %107, %"class.std::__1::vector.194"* %106
  %109 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %108, i64 0, i32 0, i32 0
  %110 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %109, align 8
  %111 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %108, i64 0, i32 0, i32 1
  %112 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %111, align 8
  %113 = icmp eq %"struct.gl::InterfaceBlock"* %110, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %102, %114
  %115 = phi i64 [ %121, %114 ], [ 0, %102 ]
  %116 = phi %"struct.gl::InterfaceBlock"* [ %122, %114 ], [ %110, %102 ]
  %117 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %116, i64 0, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = sext i32 %118 to i64
  %120 = shl i64 1, %119
  %121 = or i64 %120, %115
  store i64 %121, i64* %98, align 8
  %122 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %116, i64 1
  %123 = icmp eq %"struct.gl::InterfaceBlock"* %122, %112
  br i1 %123, label %124, label %114

124:                                              ; preds = %114, %96, %102
  %125 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 12
  %126 = bitcast %"class.angle::BitSetArray"* %125 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 16, i1 false) #21
  %127 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %99, align 8
  %128 = icmp eq %"class.gl::ProgramExecutable"* %127, null
  br i1 %128, label %192, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %127, i64 0, i32 55
  %131 = load i8, i8* %130, align 4, !range !2
  %132 = icmp eq i8 %131, 0
  %133 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %127, i64 0, i32 41
  %134 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %127, i64 0, i32 42
  %135 = select i1 %132, %"class.std::__1::vector.216"* %134, %"class.std::__1::vector.216"* %133
  %136 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %135, i64 0, i32 0, i32 0
  %137 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %136, align 8
  %138 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %135, i64 0, i32 0, i32 1
  %139 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %138, align 8
  %140 = icmp eq %"struct.gl::ImageBinding"* %137, %139
  br i1 %140, label %192, label %141

141:                                              ; preds = %129, %168
  %142 = phi %"struct.gl::ImageBinding"* [ %169, %168 ], [ %137, %129 ]
  %143 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %142, i64 0, i32 1, i32 0, i32 0
  %144 = load i32*, i32** %143, align 8
  %145 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %142, i64 0, i32 1, i32 0, i32 1
  %146 = load i32*, i32** %145, align 8
  %147 = icmp eq i32* %144, %146
  br i1 %147, label %168, label %148

148:                                              ; preds = %141
  %149 = ptrtoint i32* %144 to i64
  %150 = getelementptr i32, i32* %146, i64 -1
  %151 = ptrtoint i32* %150 to i64
  %152 = sub i64 %151, %149
  %153 = and i64 %152, 4
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %165

155:                                              ; preds = %148
  %156 = load i32, i32* %144, align 4
  %157 = zext i32 %156 to i64
  %158 = lshr i64 %157, 6
  %159 = and i64 %157, 63
  %160 = shl i64 1, %159
  %161 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 12, i32 0, i32 0, i64 %158, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = or i64 %160, %162
  store i64 %163, i64* %161, align 8
  %164 = getelementptr inbounds i32, i32* %144, i64 1
  br label %165

165:                                              ; preds = %155, %148
  %166 = phi i32* [ %164, %155 ], [ %144, %148 ]
  %167 = icmp ult i64 %152, 4
  br i1 %167, label %168, label %171

168:                                              ; preds = %165, %171, %141
  %169 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %142, i64 1
  %170 = icmp eq %"struct.gl::ImageBinding"* %169, %139
  br i1 %170, label %192, label %141

171:                                              ; preds = %165, %171
  %172 = phi i32* [ %190, %171 ], [ %166, %165 ]
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i64
  %175 = lshr i64 %174, 6
  %176 = and i64 %174, 63
  %177 = shl i64 1, %176
  %178 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 12, i32 0, i32 0, i64 %175, i32 0
  %179 = load i64, i64* %178, align 8
  %180 = or i64 %177, %179
  store i64 %180, i64* %178, align 8
  %181 = getelementptr inbounds i32, i32* %172, i64 1
  %182 = load i32, i32* %181, align 4
  %183 = zext i32 %182 to i64
  %184 = lshr i64 %183, 6
  %185 = and i64 %183, 63
  %186 = shl i64 1, %185
  %187 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 12, i32 0, i32 0, i64 %184, i32 0
  %188 = load i64, i64* %187, align 8
  %189 = or i64 %186, %188
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds i32, i32* %172, i64 2
  %191 = icmp eq i32* %190, %146
  br i1 %191, label %168, label %171

192:                                              ; preds = %168, %124, %129
  %193 = load i32, i32* %4, align 4
  %194 = icmp ult i32 %193, 2
  br i1 %194, label %201, label %195

195:                                              ; preds = %192
  %196 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %99, align 8
  %197 = icmp eq %"class.gl::ProgramExecutable"* %196, null
  br i1 %197, label %201, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %196, i64 0, i32 18
  %200 = load i8, i8* %199, align 8, !range !2
  br label %201

201:                                              ; preds = %192, %195, %198
  %202 = phi i8 [ 1, %192 ], [ 0, %195 ], [ %200, %198 ]
  %203 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 18
  store i8 %202, i8* %203, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16useProgramStagesENS_17ProgramPipelineIDEjNS_15ShaderProgramIDE(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %3 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %18

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  %17 = select i1 %16, %"class.gl::Program"* null, %"class.gl::Program"* %15
  br label %81

18:                                               ; preds = %4
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %7
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %3
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %81, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %65, %11, %78
  %82 = phi %"class.gl::Program"* [ %17, %11 ], [ %80, %78 ], [ null, %65 ]
  %83 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %84 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 17
  %85 = load %"class.gl::ProgramPipelineManager"*, %"class.gl::ProgramPipelineManager"** %84, align 8
  %86 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %87 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %86, align 8
  %88 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %87, i64 0, i32 0
  %89 = tail call %"class.gl::ProgramPipeline"* @_ZN2gl22ProgramPipelineManager30checkProgramPipelineAllocationEPN2rx13GLImplFactoryENS_17ProgramPipelineIDE(%"class.gl::ProgramPipelineManager"* %85, %"class.rx::GLImplFactory"* %88, i32 %1)
  %90 = tail call i32 @_ZN2gl5State16useProgramStagesEPKNS_7ContextEPNS_15ProgramPipelineEjPNS_7ProgramE(%"class.gl::State"* %83, %"class.gl::Context"* %0, %"class.gl::ProgramPipeline"* %89, i32 %2, %"class.gl::Program"* %82) #21
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %94, label %92

92:                                               ; preds = %81
  %93 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache25onProgramExecutableChangeEPNS_7ContextE(%"class.gl::StateCache"* %93, %"class.gl::Context"* %0)
  br label %94

94:                                               ; preds = %81, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.gl::ProgramPipeline"* @_ZN2gl22ProgramPipelineManager30checkProgramPipelineAllocationEPN2rx13GLImplFactoryENS_17ProgramPipelineIDE(%"class.gl::ProgramPipelineManager"*, %"class.rx::GLImplFactory"*, i32) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0
  %5 = zext i32 %2 to i64
  %6 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 1
  %11 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %11, i64 %5
  %13 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %12, align 8
  %14 = icmp eq %"class.gl::ProgramPipeline"* %13, inttoptr (i64 -1 to %"class.gl::ProgramPipeline"*)
  br i1 %14, label %81, label %78

15:                                               ; preds = %3
  %16 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %17 = add i64 %16, %5
  %18 = zext i64 %17 to i128
  %19 = mul nuw i128 %18, 11376068507788127593
  %20 = lshr i128 %19, 64
  %21 = xor i128 %20, %19
  %22 = trunc i128 %21 to i64
  %23 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %22, 7
  %28 = ptrtoint i8* %24 to i64
  %29 = lshr i64 %28, 12
  %30 = xor i64 %27, %29
  %31 = trunc i128 %21 to i8
  %32 = and i8 %31, 127
  %33 = insertelement <16 x i8> undef, i8 %32, i32 0
  %34 = shufflevector <16 x i8> %33, <16 x i8> undef, <16 x i32> zeroinitializer
  %35 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %36

36:                                               ; preds = %66, %15
  %37 = phi i64 [ %30, %15 ], [ %68, %66 ]
  %38 = phi i64 [ 0, %15 ], [ %67, %66 ]
  %39 = and i64 %37, %26
  %40 = getelementptr inbounds i8, i8* %24, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %34, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %35, align 8
  br label %49

49:                                               ; preds = %58, %46
  %50 = phi i32 [ %47, %46 ], [ %60, %58 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #21, !range !8
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %26
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %48, i64 %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %2
  br i1 %57, label %69, label %58, !prof !9

58:                                               ; preds = %49
  %59 = add i32 %50, -1
  %60 = and i32 %59, %50
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %49

62:                                               ; preds = %58, %36
  %63 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %81, !prof !10

66:                                               ; preds = %62
  %67 = add i64 %38, 16
  %68 = add i64 %67, %39
  br label %36

69:                                               ; preds = %49
  %70 = getelementptr inbounds i8, i8* %24, i64 %54
  %71 = icmp ne i8* %70, null
  tail call void @llvm.assume(i1 %71) #21
  %72 = load i8, i8* %70, align 1
  %73 = icmp sgt i8 %72, -1
  br i1 %73, label %75, label %74, !prof !9

74:                                               ; preds = %69
  tail call void @llvm.trap() #21
  unreachable

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %48, i64 %54, i32 0, i32 1
  %77 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %76, align 8
  br label %78

78:                                               ; preds = %75, %9
  %79 = phi %"class.gl::ProgramPipeline"* [ %13, %9 ], [ %77, %75 ]
  %80 = icmp eq %"class.gl::ProgramPipeline"* %79, null
  br i1 %80, label %81, label %85

81:                                               ; preds = %62, %78, %9
  %82 = icmp eq i32 %2, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = tail call %"class.gl::ProgramPipeline"* @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE25checkObjectAllocationImplIJEEEPS1_PN2rx13GLImplFactoryES3_DpT_(%"class.gl::TypedResourceManager.325"* %4, %"class.rx::GLImplFactory"* %1, i32 %2) #21
  br label %85

85:                                               ; preds = %78, %81, %83
  %86 = phi %"class.gl::ProgramPipeline"* [ %84, %83 ], [ %79, %78 ], [ null, %81 ]
  ret %"class.gl::ProgramPipeline"* %86
}

declare i32 @_ZN2gl5State16useProgramStagesEPKNS_7ContextEPNS_15ProgramPipelineEjPNS_7ProgramE(%"class.gl::State"*, %"class.gl::Context"*, %"class.gl::ProgramPipeline"*, i32, %"class.gl::Program"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::TransformFeedback"* @_ZN2gl7Context32checkTransformFeedbackAllocationENS_19TransformFeedbackIDE(%"class.gl::Context"*, i32) local_unnamed_addr #5 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 1
  %9 = load %"class.gl::TransformFeedback"**, %"class.gl::TransformFeedback"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %9, i64 %3
  %11 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %10, align 8
  %12 = icmp eq %"class.gl::TransformFeedback"* %11, inttoptr (i64 -1 to %"class.gl::TransformFeedback"*)
  br i1 %12, label %79, label %76

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %15 = add i64 %14, %3
  %16 = zext i64 %15 to i128
  %17 = mul nuw i128 %16, 11376068507788127593
  %18 = lshr i128 %17, 64
  %19 = xor i128 %18, %17
  %20 = trunc i128 %19 to i64
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = lshr i64 %20, 7
  %26 = ptrtoint i8* %22 to i64
  %27 = lshr i64 %26, 12
  %28 = xor i64 %25, %27
  %29 = trunc i128 %19 to i8
  %30 = and i8 %29, 127
  %31 = insertelement <16 x i8> undef, i8 %30, i32 0
  %32 = shufflevector <16 x i8> %31, <16 x i8> undef, <16 x i32> zeroinitializer
  %33 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 1
  br label %34

34:                                               ; preds = %64, %13
  %35 = phi i64 [ %28, %13 ], [ %66, %64 ]
  %36 = phi i64 [ 0, %13 ], [ %65, %64 ]
  %37 = and i64 %35, %24
  %38 = getelementptr inbounds i8, i8* %22, i64 %37
  %39 = bitcast i8* %38 to <16 x i8>*
  %40 = load <16 x i8>, <16 x i8>* %39, align 1
  %41 = icmp eq <16 x i8> %32, %40
  %42 = bitcast <16 x i1> %41 to i16
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %60, label %44

44:                                               ; preds = %34
  %45 = zext i16 %42 to i32
  %46 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %33, align 8
  br label %47

47:                                               ; preds = %56, %44
  %48 = phi i32 [ %45, %44 ], [ %58, %56 ]
  %49 = tail call i32 @llvm.cttz.i32(i32 %48, i1 false) #21, !range !8
  %50 = zext i32 %49 to i64
  %51 = add i64 %37, %50
  %52 = and i64 %51, %24
  %53 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %46, i64 %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %67, label %56, !prof !9

56:                                               ; preds = %47
  %57 = add i32 %48, -1
  %58 = and i32 %57, %48
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %47

60:                                               ; preds = %56, %34
  %61 = icmp eq <16 x i8> %40, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %62 = bitcast <16 x i1> %61 to i16
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %64, label %79, !prof !10

64:                                               ; preds = %60
  %65 = add i64 %36, 16
  %66 = add i64 %65, %37
  br label %34

67:                                               ; preds = %47
  %68 = getelementptr inbounds i8, i8* %22, i64 %52
  %69 = icmp ne i8* %68, null
  tail call void @llvm.assume(i1 %69) #21
  %70 = load i8, i8* %68, align 1
  %71 = icmp sgt i8 %70, -1
  br i1 %71, label %73, label %72, !prof !9

72:                                               ; preds = %67
  tail call void @llvm.trap() #21
  unreachable

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %46, i64 %52, i32 0, i32 1
  %75 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %74, align 8
  br label %76

76:                                               ; preds = %7, %73
  %77 = phi %"class.gl::TransformFeedback"* [ %11, %7 ], [ %75, %73 ]
  %78 = icmp eq %"class.gl::TransformFeedback"* %77, null
  br i1 %78, label %79, label %91

79:                                               ; preds = %60, %7, %76
  %80 = tail call i8* @_Znwm(i64 128) #27
  %81 = bitcast i8* %80 to %"class.gl::TransformFeedback"*
  %82 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %83 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %83, i64 0, i32 0
  %85 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5
  tail call void @_ZN2gl17TransformFeedbackC1EPN2rx13GLImplFactoryENS_19TransformFeedbackIDERKNS_4CapsE(%"class.gl::TransformFeedback"* nonnull %81, %"class.rx::GLImplFactory"* %84, i32 %1, %"struct.gl::Caps"* dereferenceable(872) %85) #21
  %86 = getelementptr inbounds i8, i8* %80, i64 8
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 1
  store i64 %89, i64* %87, align 8
  %90 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24
  tail call void @_ZN2gl11ResourceMapINS_17TransformFeedbackENS_19TransformFeedbackIDEE6assignES2_PS1_(%"class.gl::ResourceMap.576"* %90, i32 %1, %"class.gl::TransformFeedback"* nonnull %81)
  br label %91

91:                                               ; preds = %76, %79
  %92 = phi %"class.gl::TransformFeedback"* [ %77, %76 ], [ %81, %79 ]
  ret %"class.gl::TransformFeedback"* %92
}

declare void @_ZN2gl5State27setTransformFeedbackBindingEPKNS_7ContextEPNS_17TransformFeedbackE(%"class.gl::State"*, %"class.gl::Context"*, %"class.gl::TransformFeedback"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19bindProgramPipelineENS_17ProgramPipelineIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 17
  %5 = load %"class.gl::ProgramPipelineManager"*, %"class.gl::ProgramPipelineManager"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %7 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %7, i64 0, i32 0
  %9 = tail call %"class.gl::ProgramPipeline"* @_ZN2gl22ProgramPipelineManager30checkProgramPipelineAllocationEPN2rx13GLImplFactoryENS_17ProgramPipelineIDE(%"class.gl::ProgramPipelineManager"* %5, %"class.rx::GLImplFactory"* %8, i32 %1)
  %10 = tail call i32 @_ZN2gl5State25setProgramPipelineBindingEPKNS_7ContextEPNS_15ProgramPipelineE(%"class.gl::State"* %3, %"class.gl::Context"* %0, %"class.gl::ProgramPipeline"* %9) #21
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache25onProgramExecutableChangeEPNS_7ContextE(%"class.gl::StateCache"* %13, %"class.gl::Context"* %0)
  br label %14

14:                                               ; preds = %2, %12
  ret void
}

declare i32 @_ZN2gl5State25setProgramPipelineBindingEPKNS_7ContextEPNS_15ProgramPipelineE(%"class.gl::State"*, %"class.gl::Context"*, %"class.gl::ProgramPipeline"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10beginQueryENS_9QueryTypeENS_7QueryIDE(%"class.gl::Context"*, i8 zeroext, i32) local_unnamed_addr #1 align 2 {
  %4 = tail call %"class.gl::Query"* @_ZN2gl7Context16getOrCreateQueryENS_7QueryIDENS_9QueryTypeE(%"class.gl::Context"* %0, i32 %2, i8 zeroext %1)
  %5 = tail call i32 @_ZN2gl5Query5beginEPKNS_7ContextE(%"class.gl::Query"* %4, %"class.gl::Context"* %0) #21
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State14setActiveQueryEPKNS_7ContextENS_9QueryTypeEPNS_5QueryE(%"class.gl::State"* %8, %"class.gl::Context"* %0, i8 zeroext %1, %"class.gl::Query"* %4) #21
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %9, align 8
  br label %10

10:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Query"* @_ZN2gl7Context16getOrCreateQueryENS_7QueryIDENS_9QueryTypeE(%"class.gl::Context"*, i32, i8 zeroext) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %4, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 1
  %11 = load %"class.gl::Query"**, %"class.gl::Query"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %11, i64 %5
  %13 = load %"class.gl::Query"*, %"class.gl::Query"** %12, align 8
  %14 = icmp eq %"class.gl::Query"* %13, inttoptr (i64 -1 to %"class.gl::Query"*)
  br i1 %14, label %129, label %116

15:                                               ; preds = %3
  %16 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %17 = add i64 %16, %5
  %18 = zext i64 %17 to i128
  %19 = mul nuw i128 %18, 11376068507788127593
  %20 = lshr i128 %19, 64
  %21 = xor i128 %20, %19
  %22 = trunc i128 %21 to i64
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %22, 7
  %28 = ptrtoint i8* %24 to i64
  %29 = lshr i64 %28, 12
  %30 = xor i64 %27, %29
  %31 = trunc i128 %21 to i8
  %32 = and i8 %31, 127
  %33 = insertelement <16 x i8> undef, i8 %32, i32 0
  %34 = shufflevector <16 x i8> %33, <16 x i8> undef, <16 x i32> zeroinitializer
  %35 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 1
  br label %36

36:                                               ; preds = %66, %15
  %37 = phi i64 [ %30, %15 ], [ %68, %66 ]
  %38 = phi i64 [ 0, %15 ], [ %67, %66 ]
  %39 = and i64 %37, %26
  %40 = getelementptr inbounds i8, i8* %24, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %34, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %35, align 8
  br label %49

49:                                               ; preds = %58, %46
  %50 = phi i32 [ %47, %46 ], [ %60, %58 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #21, !range !8
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %26
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %48, i64 %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %69, label %58, !prof !9

58:                                               ; preds = %49
  %59 = add i32 %50, -1
  %60 = and i32 %59, %50
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %49

62:                                               ; preds = %58, %36
  %63 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %129, !prof !10

66:                                               ; preds = %62
  %67 = add i64 %38, 16
  %68 = add i64 %67, %39
  br label %36

69:                                               ; preds = %49
  %70 = getelementptr inbounds i8, i8* %24, i64 %54
  %71 = icmp ne i8* %70, null
  tail call void @llvm.assume(i1 %71) #21
  %72 = load i8, i8* %70, align 1
  %73 = icmp sgt i8 %72, -1
  br i1 %73, label %75, label %74, !prof !9

74:                                               ; preds = %69
  tail call void @llvm.trap() #21
  unreachable

75:                                               ; preds = %69, %104
  %76 = phi i64 [ %106, %104 ], [ %30, %69 ]
  %77 = phi i64 [ %105, %104 ], [ 0, %69 ]
  %78 = and i64 %76, %26
  %79 = getelementptr inbounds i8, i8* %24, i64 %78
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1
  %82 = icmp eq <16 x i8> %34, %81
  %83 = bitcast <16 x i1> %82 to i16
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %100, label %85

85:                                               ; preds = %75
  %86 = zext i16 %83 to i32
  br label %87

87:                                               ; preds = %96, %85
  %88 = phi i32 [ %86, %85 ], [ %98, %96 ]
  %89 = tail call i32 @llvm.cttz.i32(i32 %88, i1 false) #21, !range !8
  %90 = zext i32 %89 to i64
  %91 = add i64 %78, %90
  %92 = and i64 %91, %26
  %93 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %48, i64 %92, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, %1
  br i1 %95, label %107, label %96, !prof !9

96:                                               ; preds = %87
  %97 = add i32 %88, -1
  %98 = and i32 %97, %88
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %87

100:                                              ; preds = %96, %75
  %101 = icmp eq <16 x i8> %81, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %102 = bitcast <16 x i1> %101 to i16
  %103 = icmp eq i16 %102, 0
  br i1 %103, label %104, label %119, !prof !10

104:                                              ; preds = %100
  %105 = add i64 %77, 16
  %106 = add i64 %105, %78
  br label %75

107:                                              ; preds = %87
  %108 = getelementptr inbounds i8, i8* %24, i64 %92
  %109 = icmp ne i8* %108, null
  tail call void @llvm.assume(i1 %109) #21
  %110 = load i8, i8* %108, align 1
  %111 = icmp sgt i8 %110, -1
  br i1 %111, label %113, label %112, !prof !9

112:                                              ; preds = %107
  tail call void @llvm.trap() #21
  unreachable

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %48, i64 %92, i32 0, i32 1
  %115 = load %"class.gl::Query"*, %"class.gl::Query"** %114, align 8
  br label %116

116:                                              ; preds = %9, %113
  %117 = phi %"class.gl::Query"* [ %115, %113 ], [ %13, %9 ]
  %118 = icmp eq %"class.gl::Query"* %117, null
  br i1 %118, label %119, label %129

119:                                              ; preds = %100, %116
  %120 = tail call i8* @_Znwm(i64 72) #27
  %121 = bitcast i8* %120 to %"class.gl::Query"*
  %122 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %123 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %122, align 8
  %124 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %123, i64 0, i32 0
  tail call void @_ZN2gl5QueryC1EPN2rx13GLImplFactoryENS_9QueryTypeENS_7QueryIDE(%"class.gl::Query"* nonnull %121, %"class.rx::GLImplFactory"* %124, i8 zeroext %2, i32 %1) #21
  %125 = getelementptr inbounds i8, i8* %120, i64 8
  %126 = bitcast i8* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, 1
  store i64 %128, i64* %126, align 8
  tail call void @_ZN2gl11ResourceMapINS_5QueryENS_7QueryIDEE6assignES2_PS1_(%"class.gl::ResourceMap.556"* %4, i32 %1, %"class.gl::Query"* nonnull %121)
  br label %129

129:                                              ; preds = %62, %9, %119, %116
  %130 = phi %"class.gl::Query"* [ %117, %116 ], [ %121, %119 ], [ null, %9 ], [ null, %62 ]
  ret %"class.gl::Query"* %130
}

declare i32 @_ZN2gl5Query5beginEPKNS_7ContextE(%"class.gl::Query"*, %"class.gl::Context"*) local_unnamed_addr #3

declare void @_ZN2gl5State14setActiveQueryEPKNS_7ContextENS_9QueryTypeEPNS_5QueryE(%"class.gl::State"*, %"class.gl::Context"*, i8 zeroext, %"class.gl::Query"*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl10StateCache13onQueryChangeEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readnone) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  store i64 1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8endQueryENS_9QueryTypeE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = tail call %"class.gl::Query"* @_ZNK2gl5State14getActiveQueryENS_9QueryTypeE(%"class.gl::State"* %3, i8 zeroext %1) #21
  %5 = tail call i32 @_ZN2gl5Query3endEPKNS_7ContextE(%"class.gl::Query"* %4, %"class.gl::Context"* %0) #21
  tail call void @_ZN2gl5State14setActiveQueryEPKNS_7ContextENS_9QueryTypeEPNS_5QueryE(%"class.gl::State"* %3, %"class.gl::Context"* %0, i8 zeroext %1, %"class.gl::Query"* null) #21
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %6, align 8
  ret void
}

declare %"class.gl::Query"* @_ZNK2gl5State14getActiveQueryENS_9QueryTypeE(%"class.gl::State"*, i8 zeroext) local_unnamed_addr #3

declare i32 @_ZN2gl5Query3endEPKNS_7ContextE(%"class.gl::Query"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12queryCounterENS_7QueryIDENS_9QueryTypeE(%"class.gl::Context"*, i32, i8 zeroext) local_unnamed_addr #1 align 2 {
  %4 = tail call %"class.gl::Query"* @_ZN2gl7Context16getOrCreateQueryENS_7QueryIDENS_9QueryTypeE(%"class.gl::Context"* %0, i32 %1, i8 zeroext %2)
  %5 = tail call i32 @_ZN2gl5Query12queryCounterEPKNS_7ContextE(%"class.gl::Query"* %4, %"class.gl::Context"* %0) #21
  ret void
}

declare i32 @_ZN2gl5Query12queryCounterEPKNS_7ContextE(%"class.gl::Query"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10getQueryivENS_9QueryTypeEjPi(%"class.gl::Context"*, i8 zeroext, i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  switch i32 %2, label %17 [
    i32 34917, label %5
    i32 34916, label %8
  ]

5:                                                ; preds = %4
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %7 = tail call i32 @_ZNK2gl5State16getActiveQueryIdENS_9QueryTypeE(%"class.gl::State"* %6, i8 zeroext %1) #21
  br label %15

8:                                                ; preds = %4
  switch i8 %1, label %15 [
    i8 4, label %9
    i8 5, label %12
  ]

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 64
  %11 = load i32, i32* %10, align 4
  br label %15

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 65
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %8, %5, %12, %9
  %16 = phi i32 [ %11, %9 ], [ %14, %12 ], [ %7, %5 ], [ 0, %8 ]
  store i32 %16, i32* %3, align 4
  br label %17

17:                                               ; preds = %15, %4
  ret void
}

declare i32 @_ZNK2gl5State16getActiveQueryIdENS_9QueryTypeE(%"class.gl::State"*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16getQueryivRobustENS_9QueryTypeEjiPiS2_(%"class.gl::Context"*, i8 zeroext, i32, i32, i32* nocapture readnone, i32* nocapture) local_unnamed_addr #1 align 2 {
  switch i32 %2, label %19 [
    i32 34917, label %7
    i32 34916, label %10
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %9 = tail call i32 @_ZNK2gl5State16getActiveQueryIdENS_9QueryTypeE(%"class.gl::State"* %8, i8 zeroext %1) #21
  br label %17

10:                                               ; preds = %6
  switch i8 %1, label %17 [
    i8 4, label %11
    i8 5, label %14
  ]

11:                                               ; preds = %10
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 64
  %13 = load i32, i32* %12, align 4
  br label %17

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 65
  %16 = load i32, i32* %15, align 4
  br label %17

17:                                               ; preds = %10, %14, %11, %7
  %18 = phi i32 [ %9, %7 ], [ %13, %11 ], [ %16, %14 ], [ 0, %10 ]
  store i32 %18, i32* %5, align 4
  br label %19

19:                                               ; preds = %17, %6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context16getUnsignedBytevEjPh(%"class.gl::Context"* nocapture, i32, i8* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context18getUnsignedBytei_vEjjPh(%"class.gl::Context"* nocapture, i32, i32, i8* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16getQueryObjectivENS_7QueryIDEjPi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %5 = alloca i8, align 1
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %10, label %16

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 1
  %12 = load %"class.gl::Query"**, %"class.gl::Query"*** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %12, i64 %6
  %14 = load %"class.gl::Query"*, %"class.gl::Query"** %13, align 8
  %15 = icmp eq %"class.gl::Query"* %14, inttoptr (i64 -1 to %"class.gl::Query"*)
  br i1 %15, label %82, label %79

16:                                               ; preds = %4
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, %6
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %67, %16
  %38 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %39 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %40 = and i64 %38, %27
  %41 = getelementptr inbounds i8, i8* %25, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %35, %43
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37
  %48 = zext i16 %45 to i32
  %49 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %36, align 8
  br label %50

50:                                               ; preds = %59, %47
  %51 = phi i32 [ %48, %47 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #21, !range !8
  %53 = zext i32 %52 to i64
  %54 = add i64 %40, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %49, i64 %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %70, label %59, !prof !9

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %37
  %64 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %82, !prof !10

67:                                               ; preds = %63
  %68 = add i64 %39, 16
  %69 = add i64 %68, %40
  br label %37

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #21
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %76, label %75, !prof !9

75:                                               ; preds = %70
  tail call void @llvm.trap() #21
  unreachable

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %49, i64 %55, i32 0, i32 1
  %78 = load %"class.gl::Query"*, %"class.gl::Query"** %77, align 8
  br label %79

79:                                               ; preds = %10, %76
  %80 = phi %"class.gl::Query"* [ %14, %10 ], [ %78, %76 ]
  %81 = icmp eq %"class.gl::Query"* %80, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %63, %10, %79
  %83 = and i32 %2, -2
  %84 = icmp eq i32 %83, 34918
  br i1 %84, label %85, label %104

85:                                               ; preds = %82
  store i32 0, i32* %3, align 4
  br label %104

86:                                               ; preds = %79
  switch i32 %2, label %104 [
    i32 34918, label %87
    i32 34919, label %89
  ]

87:                                               ; preds = %86
  %88 = tail call i32 @_ZN2gl5Query9getResultEPKNS_7ContextEPi(%"class.gl::Query"* nonnull %80, %"class.gl::Context"* %0, i32* %3) #21
  br label %104

89:                                               ; preds = %86
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #21
  store i8 0, i8* %5, align 1
  %90 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 35
  %91 = load i8, i8* %90, align 1, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %89
  store i8 1, i8* %5, align 1
  br label %100

94:                                               ; preds = %89
  %95 = call i32 @_ZN2gl5Query17isResultAvailableEPKNS_7ContextEPb(%"class.gl::Query"* nonnull %80, %"class.gl::Context"* %0, i8* nonnull %5) #21
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %103, label %97

97:                                               ; preds = %94
  %98 = load i8, i8* %5, align 1, !range !2
  %99 = zext i8 %98 to i32
  br label %100

100:                                              ; preds = %97, %93
  %101 = phi i32 [ %99, %97 ], [ 1, %93 ]
  %102 = call i32 @_ZN2gl18CastFromStateValueIijEET_jT0_(i32 34919, i32 %101) #21
  store i32 %102, i32* %3, align 4
  br label %103

103:                                              ; preds = %100, %94
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #21
  br label %104

104:                                              ; preds = %82, %85, %86, %87, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context22getQueryObjectivRobustENS_7QueryIDEjiPiS2_(%"class.gl::Context"*, i32, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context16getQueryObjectivENS_7QueryIDEjPi(%"class.gl::Context"* %0, i32 %1, i32 %2, i32* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17getQueryObjectuivENS_7QueryIDEjPj(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %5 = alloca i8, align 1
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %10, label %16

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 1
  %12 = load %"class.gl::Query"**, %"class.gl::Query"*** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %12, i64 %6
  %14 = load %"class.gl::Query"*, %"class.gl::Query"** %13, align 8
  %15 = icmp eq %"class.gl::Query"* %14, inttoptr (i64 -1 to %"class.gl::Query"*)
  br i1 %15, label %82, label %79

16:                                               ; preds = %4
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, %6
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %67, %16
  %38 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %39 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %40 = and i64 %38, %27
  %41 = getelementptr inbounds i8, i8* %25, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %35, %43
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37
  %48 = zext i16 %45 to i32
  %49 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %36, align 8
  br label %50

50:                                               ; preds = %59, %47
  %51 = phi i32 [ %48, %47 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #21, !range !8
  %53 = zext i32 %52 to i64
  %54 = add i64 %40, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %49, i64 %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %70, label %59, !prof !9

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %37
  %64 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %82, !prof !10

67:                                               ; preds = %63
  %68 = add i64 %39, 16
  %69 = add i64 %68, %40
  br label %37

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #21
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %76, label %75, !prof !9

75:                                               ; preds = %70
  tail call void @llvm.trap() #21
  unreachable

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %49, i64 %55, i32 0, i32 1
  %78 = load %"class.gl::Query"*, %"class.gl::Query"** %77, align 8
  br label %79

79:                                               ; preds = %10, %76
  %80 = phi %"class.gl::Query"* [ %14, %10 ], [ %78, %76 ]
  %81 = icmp eq %"class.gl::Query"* %80, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %63, %10, %79
  %83 = and i32 %2, -2
  %84 = icmp eq i32 %83, 34918
  br i1 %84, label %85, label %104

85:                                               ; preds = %82
  store i32 0, i32* %3, align 4
  br label %104

86:                                               ; preds = %79
  switch i32 %2, label %104 [
    i32 34918, label %87
    i32 34919, label %89
  ]

87:                                               ; preds = %86
  %88 = tail call i32 @_ZN2gl5Query9getResultEPKNS_7ContextEPj(%"class.gl::Query"* nonnull %80, %"class.gl::Context"* %0, i32* %3) #21
  br label %104

89:                                               ; preds = %86
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #21
  store i8 0, i8* %5, align 1
  %90 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 35
  %91 = load i8, i8* %90, align 1, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %89
  store i8 1, i8* %5, align 1
  br label %100

94:                                               ; preds = %89
  %95 = call i32 @_ZN2gl5Query17isResultAvailableEPKNS_7ContextEPb(%"class.gl::Query"* nonnull %80, %"class.gl::Context"* %0, i8* nonnull %5) #21
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %103, label %97

97:                                               ; preds = %94
  %98 = load i8, i8* %5, align 1, !range !2
  %99 = zext i8 %98 to i32
  br label %100

100:                                              ; preds = %97, %93
  %101 = phi i32 [ %99, %97 ], [ 1, %93 ]
  %102 = call i32 @_ZN2gl18CastFromStateValueIjjEET_jT0_(i32 34919, i32 %101) #21
  store i32 %102, i32* %3, align 4
  br label %103

103:                                              ; preds = %100, %94
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #21
  br label %104

104:                                              ; preds = %82, %85, %86, %87, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23getQueryObjectuivRobustENS_7QueryIDEjiPiPj(%"class.gl::Context"*, i32, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context17getQueryObjectuivENS_7QueryIDEjPj(%"class.gl::Context"* %0, i32 %1, i32 %2, i32* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18getQueryObjecti64vENS_7QueryIDEjPl(%"class.gl::Context"*, i32, i32, i64*) local_unnamed_addr #5 align 2 {
  %5 = alloca i8, align 1
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %10, label %16

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 1
  %12 = load %"class.gl::Query"**, %"class.gl::Query"*** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %12, i64 %6
  %14 = load %"class.gl::Query"*, %"class.gl::Query"** %13, align 8
  %15 = icmp eq %"class.gl::Query"* %14, inttoptr (i64 -1 to %"class.gl::Query"*)
  br i1 %15, label %82, label %79

16:                                               ; preds = %4
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, %6
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %67, %16
  %38 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %39 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %40 = and i64 %38, %27
  %41 = getelementptr inbounds i8, i8* %25, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %35, %43
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37
  %48 = zext i16 %45 to i32
  %49 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %36, align 8
  br label %50

50:                                               ; preds = %59, %47
  %51 = phi i32 [ %48, %47 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #21, !range !8
  %53 = zext i32 %52 to i64
  %54 = add i64 %40, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %49, i64 %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %70, label %59, !prof !9

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %37
  %64 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %82, !prof !10

67:                                               ; preds = %63
  %68 = add i64 %39, 16
  %69 = add i64 %68, %40
  br label %37

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #21
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %76, label %75, !prof !9

75:                                               ; preds = %70
  tail call void @llvm.trap() #21
  unreachable

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %49, i64 %55, i32 0, i32 1
  %78 = load %"class.gl::Query"*, %"class.gl::Query"** %77, align 8
  br label %79

79:                                               ; preds = %10, %76
  %80 = phi %"class.gl::Query"* [ %14, %10 ], [ %78, %76 ]
  %81 = icmp eq %"class.gl::Query"* %80, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %63, %10, %79
  %83 = and i32 %2, -2
  %84 = icmp eq i32 %83, 34918
  br i1 %84, label %85, label %104

85:                                               ; preds = %82
  store i64 0, i64* %3, align 8
  br label %104

86:                                               ; preds = %79
  switch i32 %2, label %104 [
    i32 34918, label %87
    i32 34919, label %89
  ]

87:                                               ; preds = %86
  %88 = tail call i32 @_ZN2gl5Query9getResultEPKNS_7ContextEPl(%"class.gl::Query"* nonnull %80, %"class.gl::Context"* %0, i64* %3) #21
  br label %104

89:                                               ; preds = %86
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #21
  store i8 0, i8* %5, align 1
  %90 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 35
  %91 = load i8, i8* %90, align 1, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %89
  store i8 1, i8* %5, align 1
  br label %100

94:                                               ; preds = %89
  %95 = call i32 @_ZN2gl5Query17isResultAvailableEPKNS_7ContextEPb(%"class.gl::Query"* nonnull %80, %"class.gl::Context"* %0, i8* nonnull %5) #21
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %103, label %97

97:                                               ; preds = %94
  %98 = load i8, i8* %5, align 1, !range !2
  %99 = zext i8 %98 to i32
  br label %100

100:                                              ; preds = %97, %93
  %101 = phi i32 [ %99, %97 ], [ 1, %93 ]
  %102 = call i64 @_ZN2gl18CastFromStateValueIljEET_jT0_(i32 34919, i32 %101) #21
  store i64 %102, i64* %3, align 8
  br label %103

103:                                              ; preds = %100, %94
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #21
  br label %104

104:                                              ; preds = %82, %85, %86, %87, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context24getQueryObjecti64vRobustENS_7QueryIDEjiPiPl(%"class.gl::Context"*, i32, i32, i32, i32* nocapture readnone, i64*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context18getQueryObjecti64vENS_7QueryIDEjPl(%"class.gl::Context"* %0, i32 %1, i32 %2, i64* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19getQueryObjectui64vENS_7QueryIDEjPm(%"class.gl::Context"*, i32, i32, i64*) local_unnamed_addr #5 align 2 {
  %5 = alloca i8, align 1
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %10, label %16

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 1
  %12 = load %"class.gl::Query"**, %"class.gl::Query"*** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %12, i64 %6
  %14 = load %"class.gl::Query"*, %"class.gl::Query"** %13, align 8
  %15 = icmp eq %"class.gl::Query"* %14, inttoptr (i64 -1 to %"class.gl::Query"*)
  br i1 %15, label %82, label %79

16:                                               ; preds = %4
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, %6
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %67, %16
  %38 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %39 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %40 = and i64 %38, %27
  %41 = getelementptr inbounds i8, i8* %25, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %35, %43
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37
  %48 = zext i16 %45 to i32
  %49 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %36, align 8
  br label %50

50:                                               ; preds = %59, %47
  %51 = phi i32 [ %48, %47 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #21, !range !8
  %53 = zext i32 %52 to i64
  %54 = add i64 %40, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %49, i64 %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %70, label %59, !prof !9

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %37
  %64 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %82, !prof !10

67:                                               ; preds = %63
  %68 = add i64 %39, 16
  %69 = add i64 %68, %40
  br label %37

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #21
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %76, label %75, !prof !9

75:                                               ; preds = %70
  tail call void @llvm.trap() #21
  unreachable

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %49, i64 %55, i32 0, i32 1
  %78 = load %"class.gl::Query"*, %"class.gl::Query"** %77, align 8
  br label %79

79:                                               ; preds = %10, %76
  %80 = phi %"class.gl::Query"* [ %14, %10 ], [ %78, %76 ]
  %81 = icmp eq %"class.gl::Query"* %80, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %63, %10, %79
  %83 = and i32 %2, -2
  %84 = icmp eq i32 %83, 34918
  br i1 %84, label %85, label %104

85:                                               ; preds = %82
  store i64 0, i64* %3, align 8
  br label %104

86:                                               ; preds = %79
  switch i32 %2, label %104 [
    i32 34918, label %87
    i32 34919, label %89
  ]

87:                                               ; preds = %86
  %88 = tail call i32 @_ZN2gl5Query9getResultEPKNS_7ContextEPm(%"class.gl::Query"* nonnull %80, %"class.gl::Context"* %0, i64* %3) #21
  br label %104

89:                                               ; preds = %86
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #21
  store i8 0, i8* %5, align 1
  %90 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 35
  %91 = load i8, i8* %90, align 1, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %89
  store i8 1, i8* %5, align 1
  br label %100

94:                                               ; preds = %89
  %95 = call i32 @_ZN2gl5Query17isResultAvailableEPKNS_7ContextEPb(%"class.gl::Query"* nonnull %80, %"class.gl::Context"* %0, i8* nonnull %5) #21
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %103, label %97

97:                                               ; preds = %94
  %98 = load i8, i8* %5, align 1, !range !2
  %99 = zext i8 %98 to i32
  br label %100

100:                                              ; preds = %97, %93
  %101 = phi i32 [ %99, %97 ], [ 1, %93 ]
  %102 = call i64 @_ZN2gl18CastFromStateValueImjEET_jT0_(i32 34919, i32 %101) #21
  store i64 %102, i64* %3, align 8
  br label %103

103:                                              ; preds = %100, %94
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #21
  br label %104

104:                                              ; preds = %82, %85, %86, %87, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context25getQueryObjectui64vRobustENS_7QueryIDEjiPiPm(%"class.gl::Context"*, i32, i32, i32, i32* nocapture readnone, i64*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context19getQueryObjectui64vENS_7QueryIDEjPm(%"class.gl::Context"* %0, i32 %1, i32 %2, i64* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::FenceNV"* @_ZNK2gl7Context10getFenceNVENS_9FenceNVIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 1
  %9 = load %"class.gl::FenceNV"**, %"class.gl::FenceNV"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %9, i64 %3
  %11 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %10, align 8
  %12 = icmp eq %"class.gl::FenceNV"* %11, inttoptr (i64 -1 to %"class.gl::FenceNV"*)
  %13 = select i1 %12, %"class.gl::FenceNV"* null, %"class.gl::FenceNV"* %11
  br label %77

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #21, !range !8
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %68, label %57, !prof !9

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !10

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #21
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !9

73:                                               ; preds = %68
  tail call void @llvm.trap() #21
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::FenceNV"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  ret %"class.gl::FenceNV"* %78
}

declare void @_ZN2gl5QueryC1EPN2rx13GLImplFactoryENS_9QueryTypeENS_7QueryIDE(%"class.gl::Query"*, %"class.rx::GLImplFactory"*, i8 zeroext, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_5QueryENS_7QueryIDEE6assignES2_PS1_(%"class.gl::ResourceMap.556"*, i32, %"class.gl::Query"*) local_unnamed_addr #5 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %0, i64 0, i32 1
  %16 = load %"class.gl::Query"**, %"class.gl::Query"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #27
  %22 = bitcast i8* %21 to %"class.gl::Query"**
  %23 = bitcast %"class.gl::Query"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %22, i64 %8
  %25 = bitcast %"class.gl::Query"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::Query"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::Query"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #27
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %0, i64 0, i32 1
  %34 = load %"class.gl::Query"**, %"class.gl::Query"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.558", %"class.absl::container_internal::raw_hash_map.558"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !98
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.558", %"class.absl::container_internal::raw_hash_map.558"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !98
  %49 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !98
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !98
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %59, align 8, !noalias !98
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #21, !range !8
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !98
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !9

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !10

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl5QueryEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.559"* %38, i64 %46) #21, !noalias !98
  %95 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %59, align 8, !noalias !98
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !98
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::Query"* null, %"class.gl::Query"** %97, align 8, !noalias !98
  %98 = load i8*, i8** %47, align 8, !noalias !98
  %99 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %59, align 8, !noalias !98
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.560"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #21, !noalias !98
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !9

108:                                              ; preds = %100
  tail call void @llvm.trap() #21
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::Query"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::Query"* %2, %"class.gl::Query"** %112, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Texture"* @_ZNK2gl7Context16getTextureByTypeENS_11TextureTypeE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %3, i8 zeroext %1) #21
  ret %"class.gl::Texture"* %4
}

declare %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Texture"* @_ZNK2gl7Context18getTextureByTargetENS_13TextureTargetE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %3 = tail call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %5 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %4, i8 zeroext %3) #21
  ret %"class.gl::Texture"* %5
}

declare zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.gl::Texture"* @_ZNK2gl7Context17getSamplerTextureEjNS_11TextureTypeE(%"class.gl::Context"* nocapture readonly, i32, i8 zeroext) local_unnamed_addr #9 align 2 {
  %4 = zext i8 %2 to i64
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 72, i32 0, i32 0, i64 %4, i32 0, i32 0
  %7 = load %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::BindingPointer.410", %"class.gl::BindingPointer.410"* %7, i64 %5, i32 0, i32 1
  %9 = load %"class.gl::Texture"*, %"class.gl::Texture"** %8, align 8
  ret %"class.gl::Texture"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Compiler"* @_ZNK2gl7Context11getCompilerEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 15, i32 0, i32 1
  %3 = load %"class.gl::Compiler"*, %"class.gl::Compiler"** %2, align 8
  %4 = icmp eq %"class.gl::Compiler"* %3, null
  br i1 %4, label %5, label %35

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 696) #27
  %7 = bitcast i8* %6 to %"class.gl::Compiler"*
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %9 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 45
  %13 = load %"class.egl::Display"*, %"class.egl::Display"** %12, align 8
  tail call void @_ZN2gl8CompilerC1EPN2rx13GLImplFactoryERKNS_5StateEPN3egl7DisplayE(%"class.gl::Compiler"* nonnull %7, %"class.rx::GLImplFactory"* %10, %"class.gl::State"* dereferenceable(12296) %11, %"class.egl::Display"* %13) #21
  %14 = getelementptr inbounds i8, i8* %6, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %15, align 8
  %18 = load %"class.gl::Compiler"*, %"class.gl::Compiler"** %2, align 8
  %19 = bitcast %"class.gl::Compiler"** %2 to i8**
  store i8* %6, i8** %19, align 8
  %20 = icmp eq %"class.gl::Compiler"* %18, null
  br i1 %20, label %35, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.gl::Compiler", %"class.gl::Compiler"* %18, i64 0, i32 0
  %23 = getelementptr inbounds %"class.gl::Compiler", %"class.gl::Compiler"* %18, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, -1
  store i64 %25, i64* %23, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %21
  %28 = bitcast %"class.gl::Compiler"* %18 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %29 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %28, align 8
  %30 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %29, align 8
  tail call void %30(%"class.angle::RefCountObject"* %22, %"class.gl::Context"* %0) #21
  %31 = bitcast %"class.gl::Compiler"* %18 to void (%"class.angle::RefCountObject"*)***
  %32 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %32, i64 2
  %34 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %33, align 8
  tail call void %34(%"class.angle::RefCountObject"* nonnull %22) #21
  br label %35

35:                                               ; preds = %27, %21, %5, %1
  %36 = load %"class.gl::Compiler"*, %"class.gl::Compiler"** %2, align 8
  ret %"class.gl::Compiler"* %36
}

declare void @_ZN2gl8CompilerC1EPN2rx13GLImplFactoryERKNS_5StateEPN3egl7DisplayE(%"class.gl::Compiler"*, %"class.rx::GLImplFactory"*, %"class.gl::State"* dereferenceable(12296), %"class.egl::Display"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl7Context15getBooleanvImplEjPh(%"class.gl::Context"*, i32, i8*) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %8 [
    i32 36346, label %4
    i32 37107, label %5
  ]

4:                                                ; preds = %3
  store i8 1, i8* %2, align 1
  br label %10

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 39
  %7 = load i8, i8* %6, align 8, !range !2
  store i8 %7, i8* %2, align 1
  br label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZNK2gl5State11getBooleanvEjPh(%"class.gl::State"* %9, i32 %1, i8* %2) #21
  br label %10

10:                                               ; preds = %8, %5, %4
  ret void
}

declare void @_ZNK2gl5State11getBooleanvEjPh(%"class.gl::State"*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl7Context13getFloatvImplEjPf(%"class.gl::Context"*, i32, float*) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %64 [
    i32 33902, label %4
    i32 33901, label %14
    i32 2834, label %24
    i32 2850, label %34
    i32 34047, label %44
    i32 34045, label %49
    i32 36443, label %54
    i32 36444, label %59
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 14
  %6 = bitcast float* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = bitcast float* %2 to i32*
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 15
  %10 = bitcast float* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds float, float* %2, i64 1
  %13 = bitcast float* %12 to i32*
  store i32 %11, i32* %13, align 4
  br label %66

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 12
  %16 = bitcast float* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = bitcast float* %2 to i32*
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 13
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds float, float* %2, i64 1
  %23 = bitcast float* %22 to i32*
  store i32 %21, i32* %23, align 4
  br label %66

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 118
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = bitcast float* %2 to i32*
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 119
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds float, float* %2, i64 1
  %33 = bitcast float* %32 to i32*
  store i32 %31, i32* %33, align 4
  br label %66

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 120
  %36 = bitcast float* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = bitcast float* %2 to i32*
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 121
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds float, float* %2, i64 1
  %43 = bitcast float* %42 to i32*
  store i32 %41, i32* %43, align 4
  br label %66

44:                                               ; preds = %3
  %45 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 60
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = bitcast float* %2 to i32*
  store i32 %47, i32* %48, align 4
  br label %66

49:                                               ; preds = %3
  %50 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 9
  %51 = bitcast float* %50 to i32*
  %52 = load i32, i32* %51, align 8
  %53 = bitcast float* %2 to i32*
  store i32 %52, i32* %53, align 4
  br label %66

54:                                               ; preds = %3
  %55 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 0
  %56 = bitcast float* %55 to i32*
  %57 = load i32, i32* %56, align 8
  %58 = bitcast float* %2 to i32*
  store i32 %57, i32* %58, align 4
  br label %66

59:                                               ; preds = %3
  %60 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 1
  %61 = bitcast float* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = bitcast float* %2 to i32*
  store i32 %62, i32* %63, align 4
  br label %66

64:                                               ; preds = %3
  %65 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZNK2gl5State9getFloatvEjPf(%"class.gl::State"* %65, i32 %1, float* %2) #21
  br label %66

66:                                               ; preds = %64, %59, %54, %49, %44, %34, %24, %14, %4
  ret void
}

declare void @_ZNK2gl5State9getFloatvEjPf(%"class.gl::State"*, i32, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl7Context15getIntegervImplEjPi(%"class.gl::Context"*, i32, i32*) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %1039 [
    i32 34921, label %4
    i32 36347, label %7
    i32 35658, label %10
    i32 36348, label %13
    i32 35659, label %16
    i32 35661, label %20
    i32 35660, label %23
    i32 34930, label %26
    i32 36349, label %29
    i32 35657, label %32
    i32 34024, label %35
    i32 36063, label %38
    i32 34852, label %41
    i32 3408, label %44
    i32 3379, label %47
    i32 34040, label %50
    i32 34076, label %53
    i32 32883, label %56
    i32 35071, label %59
    i32 35380, label %62
    i32 35375, label %65
    i32 35371, label %68
    i32 35373, label %71
    i32 35374, label %74
    i32 37154, label %77
    i32 37157, label %80
    i32 35076, label %83
    i32 35077, label %86
    i32 33307, label %89
    i32 33308, label %92
    i32 33001, label %95
    i32 33000, label %98
    i32 35978, label %101
    i32 35979, label %104
    i32 35968, label %107
    i32 34466, label %110
    i32 36183, label %120
    i32 3386, label %123
    i32 34467, label %129
    i32 33366, label %287
    i32 36345, label %290
    i32 36344, label %300
    i32 34814, label %458
    i32 34815, label %468
    i32 33309, label %626
    i32 33310, label %636
    i32 37158, label %637
    i32 37801, label %638
    i32 37187, label %648
    i32 37188, label %651
    i32 33388, label %654
    i32 33512, label %657
    i32 38449, label %660
    i32 36795, label %663
    i32 37653, label %671
    i32 37654, label %674
    i32 37656, label %677
    i32 36441, label %680
    i32 37134, label %683
    i32 37135, label %686
    i32 37136, label %689
    i32 33497, label %692
    i32 33498, label %695
    i32 33509, label %698
    i32 37580, label %701
    i32 37586, label %704
    i32 37066, label %707
    i32 37078, label %710
    i32 37584, label %713
    i32 37590, label %716
    i32 37070, label %719
    i32 37082, label %722
    i32 36446, label %725
    i32 36447, label %728
    i32 37099, label %731
    i32 37307, label %734
    i32 37308, label %737
    i32 33378, label %740
    i32 33379, label %743
    i32 33380, label %746
    i32 33381, label %749
    i32 37309, label %752
    i32 33382, label %755
    i32 37083, label %759
    i32 36665, label %762
    i32 33390, label %765
    i32 37596, label %768
    i32 37592, label %771
    i32 37585, label %774
    i32 37591, label %777
    i32 36664, label %780
    i32 37071, label %783
    i32 37085, label %786
    i32 37084, label %789
    i32 37087, label %792
    i32 37655, label %795
    i32 33374, label %798
    i32 36319, label %801
    i32 35372, label %804
    i32 35378, label %807
    i32 37155, label %811
    i32 37156, label %814
    i32 36320, label %817
    i32 36321, label %820
    i32 36442, label %823
    i32 35881, label %826
    i32 37583, label %829
    i32 37589, label %832
    i32 37069, label %835
    i32 37079, label %838
    i32 36477, label %841
    i32 36478, label %844
    i32 36479, label %847
    i32 36480, label %850
    i32 36481, label %853
    i32 36482, label %856
    i32 36483, label %859
    i32 36484, label %862
    i32 36485, label %865
    i32 36486, label %868
    i32 36489, label %871
    i32 36490, label %874
    i32 34924, label %877
    i32 34925, label %880
    i32 36382, label %883
    i32 36383, label %887
    i32 37581, label %891
    i32 37582, label %894
    i32 37587, label %897
    i32 37588, label %900
    i32 37067, label %903
    i32 37068, label %906
    i32 37080, label %909
    i32 37081, label %912
    i32 34018, label %915
    i32 3382, label %918
    i32 3384, label %921
    i32 3385, label %924
    i32 3377, label %927
    i32 3378, label %930
    i32 33529, label %940
    i32 33530, label %943
    i32 34966, label %946
    i32 34967, label %946
    i32 34968, label %946
    i32 35743, label %946
    i32 34970, label %946
    i32 32892, label %964
    i32 32895, label %964
    i32 32899, label %964
    i32 35211, label %964
    i32 32906, label %964
    i32 32890, label %982
    i32 32897, label %982
    i32 32904, label %982
    i32 32891, label %1000
    i32 32898, label %1000
    i32 32894, label %1000
    i32 35210, label %1000
    i32 32905, label %1000
    i32 37296, label %1018
    i32 35068, label %1021
    i32 36445, label %1024
    i32 35883, label %1027
    i32 37279, label %1030
    i32 37724, label %1033
    i32 37725, label %1036
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 57
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %2, align 4
  br label %1042

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 58
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %2, align 4
  br label %1042

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 52, i32 0, i32 0, i64 0
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %2, align 4
  br label %1042

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 75
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %2, align 4
  br label %1042

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 75
  %18 = load i32, i32* %17, align 4
  %19 = shl nsw i32 %18, 2
  store i32 %19, i32* %2, align 4
  br label %1042

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 76
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %2, align 4
  br label %1042

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 50, i32 0, i32 0, i64 0
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %2, align 4
  br label %1042

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 50, i32 0, i32 0, i64 4
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %2, align 4
  br label %1042

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 60
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %2, align 4
  br label %1042

32:                                               ; preds = %3
  %33 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 52, i32 0, i32 0, i64 4
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %2, align 4
  br label %1042

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 11
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %2, align 4
  br label %1042

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 20
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %2, align 4
  br label %1042

41:                                               ; preds = %3
  %42 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 16
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %2, align 4
  br label %1042

44:                                               ; preds = %3
  %45 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 108
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %2, align 4
  br label %1042

47:                                               ; preds = %3
  %48 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 6
  %49 = load i32, i32* %48, align 4
  store i32 %49, i32* %2, align 4
  br label %1042

50:                                               ; preds = %3
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 7
  %52 = load i32, i32* %51, align 8
  store i32 %52, i32* %2, align 4
  br label %1042

53:                                               ; preds = %3
  %54 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 10
  %55 = load i32, i32* %54, align 4
  store i32 %55, i32* %2, align 4
  br label %1042

56:                                               ; preds = %3
  %57 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 5
  %58 = load i32, i32* %57, align 8
  store i32 %58, i32* %2, align 4
  br label %1042

59:                                               ; preds = %3
  %60 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 8
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %2, align 4
  br label %1042

62:                                               ; preds = %3
  %63 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 72
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %2, align 4
  br label %1042

65:                                               ; preds = %3
  %66 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 70
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %2, align 4
  br label %1042

68:                                               ; preds = %3
  %69 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 49, i32 0, i32 0, i64 0
  %70 = load i32, i32* %69, align 4
  store i32 %70, i32* %2, align 4
  br label %1042

71:                                               ; preds = %3
  %72 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 49, i32 0, i32 0, i64 4
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %2, align 4
  br label %1042

74:                                               ; preds = %3
  %75 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 73
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %2, align 4
  br label %1042

77:                                               ; preds = %3
  %78 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 59
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %2, align 4
  br label %1042

80:                                               ; preds = %3
  %81 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 61
  %82 = load i32, i32* %81, align 8
  store i32 %82, i32* %2, align 4
  br label %1042

83:                                               ; preds = %3
  %84 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 64
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %2, align 4
  br label %1042

86:                                               ; preds = %3
  %87 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 65
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %2, align 4
  br label %1042

89:                                               ; preds = %3
  %90 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %91 = load i32, i32* %90, align 4
  store i32 %91, i32* %2, align 4
  br label %1042

92:                                               ; preds = %3
  %93 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 1
  %94 = load i32, i32* %93, align 4
  store i32 %94, i32* %2, align 4
  br label %1042

95:                                               ; preds = %3
  %96 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 31
  %97 = load i32, i32* %96, align 4
  store i32 %97, i32* %2, align 4
  br label %1042

98:                                               ; preds = %3
  %99 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 32
  %100 = load i32, i32* %99, align 8
  store i32 %100, i32* %2, align 4
  br label %1042

101:                                              ; preds = %3
  %102 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 89
  %103 = load i32, i32* %102, align 8
  store i32 %103, i32* %2, align 4
  br label %1042

104:                                              ; preds = %3
  %105 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 90
  %106 = load i32, i32* %105, align 4
  store i32 %106, i32* %2, align 4
  br label %1042

107:                                              ; preds = %3
  %108 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 91
  %109 = load i32, i32* %108, align 8
  store i32 %109, i32* %2, align 4
  br label %1042

110:                                              ; preds = %3
  %111 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 34
  %112 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 34, i32 0, i32 1
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector"* %111 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = lshr exact i64 %117, 2
  %119 = trunc i64 %118 to i32
  store i32 %119, i32* %2, align 4
  br label %1042

120:                                              ; preds = %3
  %121 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 92
  %122 = load i32, i32* %121, align 4
  store i32 %122, i32* %2, align 4
  br label %1042

123:                                              ; preds = %3
  %124 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 21
  %125 = load i32, i32* %124, align 8
  store i32 %125, i32* %2, align 4
  %126 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 22
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds i32, i32* %2, i64 1
  store i32 %127, i32* %128, align 4
  br label %1042

129:                                              ; preds = %3
  %130 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 34, i32 0, i32 0
  %131 = load i32*, i32** %130, align 8
  %132 = ptrtoint i32* %131 to i64
  %133 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 34, i32 0, i32 1
  %134 = load i32*, i32** %133, align 8
  %135 = icmp eq i32* %131, %134
  br i1 %135, label %1042, label %136

136:                                              ; preds = %129
  %137 = getelementptr i32, i32* %134, i64 -1
  %138 = ptrtoint i32* %137 to i64
  %139 = sub i64 %138, %132
  %140 = lshr i64 %139, 2
  %141 = add nuw nsw i64 %140, 1
  %142 = icmp ult i64 %141, 8
  br i1 %142, label %235, label %143

143:                                              ; preds = %136
  %144 = getelementptr i32, i32* %134, i64 -1
  %145 = ptrtoint i32* %144 to i64
  %146 = sub i64 %145, %132
  %147 = lshr i64 %146, 2
  %148 = add nuw nsw i64 %147, 1
  %149 = getelementptr i32, i32* %2, i64 %148
  %150 = getelementptr i32, i32* %131, i64 %148
  %151 = icmp ugt i32* %150, %2
  %152 = icmp ult i32* %131, %149
  %153 = and i1 %151, %152
  br i1 %153, label %235, label %154

154:                                              ; preds = %143
  %155 = and i64 %141, 9223372036854775800
  %156 = getelementptr i32, i32* %2, i64 %155
  %157 = getelementptr i32, i32* %131, i64 %155
  %158 = add nsw i64 %155, -8
  %159 = lshr exact i64 %158, 3
  %160 = add nuw nsw i64 %159, 1
  %161 = and i64 %160, 3
  %162 = icmp ult i64 %158, 24
  br i1 %162, label %214, label %163

163:                                              ; preds = %154
  %164 = sub nsw i64 %160, %161
  br label %165

165:                                              ; preds = %165, %163
  %166 = phi i64 [ 0, %163 ], [ %211, %165 ]
  %167 = phi i64 [ %164, %163 ], [ %212, %165 ]
  %168 = getelementptr i32, i32* %2, i64 %166
  %169 = getelementptr i32, i32* %131, i64 %166
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4, !alias.scope !101
  %172 = getelementptr i32, i32* %169, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4, !alias.scope !101
  %175 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> %171, <4 x i32>* %175, align 4, !alias.scope !104, !noalias !101
  %176 = getelementptr i32, i32* %168, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> %174, <4 x i32>* %177, align 4, !alias.scope !104, !noalias !101
  %178 = or i64 %166, 8
  %179 = getelementptr i32, i32* %2, i64 %178
  %180 = getelementptr i32, i32* %131, i64 %178
  %181 = bitcast i32* %180 to <4 x i32>*
  %182 = load <4 x i32>, <4 x i32>* %181, align 4, !alias.scope !101
  %183 = getelementptr i32, i32* %180, i64 4
  %184 = bitcast i32* %183 to <4 x i32>*
  %185 = load <4 x i32>, <4 x i32>* %184, align 4, !alias.scope !101
  %186 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> %182, <4 x i32>* %186, align 4, !alias.scope !104, !noalias !101
  %187 = getelementptr i32, i32* %179, i64 4
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> %185, <4 x i32>* %188, align 4, !alias.scope !104, !noalias !101
  %189 = or i64 %166, 16
  %190 = getelementptr i32, i32* %2, i64 %189
  %191 = getelementptr i32, i32* %131, i64 %189
  %192 = bitcast i32* %191 to <4 x i32>*
  %193 = load <4 x i32>, <4 x i32>* %192, align 4, !alias.scope !101
  %194 = getelementptr i32, i32* %191, i64 4
  %195 = bitcast i32* %194 to <4 x i32>*
  %196 = load <4 x i32>, <4 x i32>* %195, align 4, !alias.scope !101
  %197 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> %193, <4 x i32>* %197, align 4, !alias.scope !104, !noalias !101
  %198 = getelementptr i32, i32* %190, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> %196, <4 x i32>* %199, align 4, !alias.scope !104, !noalias !101
  %200 = or i64 %166, 24
  %201 = getelementptr i32, i32* %2, i64 %200
  %202 = getelementptr i32, i32* %131, i64 %200
  %203 = bitcast i32* %202 to <4 x i32>*
  %204 = load <4 x i32>, <4 x i32>* %203, align 4, !alias.scope !101
  %205 = getelementptr i32, i32* %202, i64 4
  %206 = bitcast i32* %205 to <4 x i32>*
  %207 = load <4 x i32>, <4 x i32>* %206, align 4, !alias.scope !101
  %208 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> %204, <4 x i32>* %208, align 4, !alias.scope !104, !noalias !101
  %209 = getelementptr i32, i32* %201, i64 4
  %210 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> %207, <4 x i32>* %210, align 4, !alias.scope !104, !noalias !101
  %211 = add i64 %166, 32
  %212 = add i64 %167, -4
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %165, !llvm.loop !106

214:                                              ; preds = %165, %154
  %215 = phi i64 [ 0, %154 ], [ %211, %165 ]
  %216 = icmp eq i64 %161, 0
  br i1 %216, label %233, label %217

217:                                              ; preds = %214, %217
  %218 = phi i64 [ %230, %217 ], [ %215, %214 ]
  %219 = phi i64 [ %231, %217 ], [ %161, %214 ]
  %220 = getelementptr i32, i32* %2, i64 %218
  %221 = getelementptr i32, i32* %131, i64 %218
  %222 = bitcast i32* %221 to <4 x i32>*
  %223 = load <4 x i32>, <4 x i32>* %222, align 4, !alias.scope !101
  %224 = getelementptr i32, i32* %221, i64 4
  %225 = bitcast i32* %224 to <4 x i32>*
  %226 = load <4 x i32>, <4 x i32>* %225, align 4, !alias.scope !101
  %227 = bitcast i32* %220 to <4 x i32>*
  store <4 x i32> %223, <4 x i32>* %227, align 4, !alias.scope !104, !noalias !101
  %228 = getelementptr i32, i32* %220, i64 4
  %229 = bitcast i32* %228 to <4 x i32>*
  store <4 x i32> %226, <4 x i32>* %229, align 4, !alias.scope !104, !noalias !101
  %230 = add i64 %218, 8
  %231 = add i64 %219, -1
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %217, !llvm.loop !108

233:                                              ; preds = %217, %214
  %234 = icmp eq i64 %141, %155
  br i1 %234, label %1042, label %235

235:                                              ; preds = %233, %143, %136
  %236 = phi i32* [ %2, %143 ], [ %2, %136 ], [ %156, %233 ]
  %237 = phi i32* [ %131, %143 ], [ %131, %136 ], [ %157, %233 ]
  %238 = ptrtoint i32* %237 to i64
  %239 = getelementptr i32, i32* %134, i64 -1
  %240 = ptrtoint i32* %239 to i64
  %241 = sub i64 %240, %238
  %242 = lshr i64 %241, 2
  %243 = add nuw nsw i64 %242, 1
  %244 = and i64 %243, 7
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %255, label %246

246:                                              ; preds = %235, %246
  %247 = phi i32* [ %252, %246 ], [ %236, %235 ]
  %248 = phi i32* [ %251, %246 ], [ %237, %235 ]
  %249 = phi i64 [ %253, %246 ], [ %244, %235 ]
  %250 = load i32, i32* %248, align 4
  store i32 %250, i32* %247, align 4
  %251 = getelementptr inbounds i32, i32* %248, i64 1
  %252 = getelementptr inbounds i32, i32* %247, i64 1
  %253 = add i64 %249, -1
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %246, !llvm.loop !110

255:                                              ; preds = %246, %235
  %256 = phi i32* [ %236, %235 ], [ %252, %246 ]
  %257 = phi i32* [ %237, %235 ], [ %251, %246 ]
  %258 = icmp ult i64 %241, 28
  br i1 %258, label %1042, label %259

259:                                              ; preds = %255, %259
  %260 = phi i32* [ %285, %259 ], [ %256, %255 ]
  %261 = phi i32* [ %284, %259 ], [ %257, %255 ]
  %262 = load i32, i32* %261, align 4
  store i32 %262, i32* %260, align 4
  %263 = getelementptr inbounds i32, i32* %261, i64 1
  %264 = getelementptr inbounds i32, i32* %260, i64 1
  %265 = load i32, i32* %263, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %261, i64 2
  %267 = getelementptr inbounds i32, i32* %260, i64 2
  %268 = load i32, i32* %266, align 4
  store i32 %268, i32* %267, align 4
  %269 = getelementptr inbounds i32, i32* %261, i64 3
  %270 = getelementptr inbounds i32, i32* %260, i64 3
  %271 = load i32, i32* %269, align 4
  store i32 %271, i32* %270, align 4
  %272 = getelementptr inbounds i32, i32* %261, i64 4
  %273 = getelementptr inbounds i32, i32* %260, i64 4
  %274 = load i32, i32* %272, align 4
  store i32 %274, i32* %273, align 4
  %275 = getelementptr inbounds i32, i32* %261, i64 5
  %276 = getelementptr inbounds i32, i32* %260, i64 5
  %277 = load i32, i32* %275, align 4
  store i32 %277, i32* %276, align 4
  %278 = getelementptr inbounds i32, i32* %261, i64 6
  %279 = getelementptr inbounds i32, i32* %260, i64 6
  %280 = load i32, i32* %278, align 4
  store i32 %280, i32* %279, align 4
  %281 = getelementptr inbounds i32, i32* %261, i64 7
  %282 = getelementptr inbounds i32, i32* %260, i64 7
  %283 = load i32, i32* %281, align 4
  store i32 %283, i32* %282, align 4
  %284 = getelementptr inbounds i32, i32* %261, i64 8
  %285 = getelementptr inbounds i32, i32* %260, i64 8
  %286 = icmp eq i32* %284, %134
  br i1 %286, label %1042, label %259, !llvm.loop !111

287:                                              ; preds = %3
  %288 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 38
  %289 = load i32, i32* %288, align 4
  store i32 %289, i32* %2, align 4
  br label %1042

290:                                              ; preds = %3
  %291 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 36
  %292 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 36, i32 0, i32 1
  %293 = bitcast i32** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast %"class.std::__1::vector"* %291 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = sub i64 %294, %296
  %298 = lshr exact i64 %297, 2
  %299 = trunc i64 %298 to i32
  store i32 %299, i32* %2, align 4
  br label %1042

300:                                              ; preds = %3
  %301 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 36, i32 0, i32 0
  %302 = load i32*, i32** %301, align 8
  %303 = ptrtoint i32* %302 to i64
  %304 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 36, i32 0, i32 1
  %305 = load i32*, i32** %304, align 8
  %306 = icmp eq i32* %302, %305
  br i1 %306, label %1042, label %307

307:                                              ; preds = %300
  %308 = getelementptr i32, i32* %305, i64 -1
  %309 = ptrtoint i32* %308 to i64
  %310 = sub i64 %309, %303
  %311 = lshr i64 %310, 2
  %312 = add nuw nsw i64 %311, 1
  %313 = icmp ult i64 %312, 8
  br i1 %313, label %406, label %314

314:                                              ; preds = %307
  %315 = getelementptr i32, i32* %305, i64 -1
  %316 = ptrtoint i32* %315 to i64
  %317 = sub i64 %316, %303
  %318 = lshr i64 %317, 2
  %319 = add nuw nsw i64 %318, 1
  %320 = getelementptr i32, i32* %2, i64 %319
  %321 = getelementptr i32, i32* %302, i64 %319
  %322 = icmp ugt i32* %321, %2
  %323 = icmp ult i32* %302, %320
  %324 = and i1 %322, %323
  br i1 %324, label %406, label %325

325:                                              ; preds = %314
  %326 = and i64 %312, 9223372036854775800
  %327 = getelementptr i32, i32* %2, i64 %326
  %328 = getelementptr i32, i32* %302, i64 %326
  %329 = add nsw i64 %326, -8
  %330 = lshr exact i64 %329, 3
  %331 = add nuw nsw i64 %330, 1
  %332 = and i64 %331, 3
  %333 = icmp ult i64 %329, 24
  br i1 %333, label %385, label %334

334:                                              ; preds = %325
  %335 = sub nsw i64 %331, %332
  br label %336

336:                                              ; preds = %336, %334
  %337 = phi i64 [ 0, %334 ], [ %382, %336 ]
  %338 = phi i64 [ %335, %334 ], [ %383, %336 ]
  %339 = getelementptr i32, i32* %2, i64 %337
  %340 = getelementptr i32, i32* %302, i64 %337
  %341 = bitcast i32* %340 to <4 x i32>*
  %342 = load <4 x i32>, <4 x i32>* %341, align 4, !alias.scope !112
  %343 = getelementptr i32, i32* %340, i64 4
  %344 = bitcast i32* %343 to <4 x i32>*
  %345 = load <4 x i32>, <4 x i32>* %344, align 4, !alias.scope !112
  %346 = bitcast i32* %339 to <4 x i32>*
  store <4 x i32> %342, <4 x i32>* %346, align 4, !alias.scope !115, !noalias !112
  %347 = getelementptr i32, i32* %339, i64 4
  %348 = bitcast i32* %347 to <4 x i32>*
  store <4 x i32> %345, <4 x i32>* %348, align 4, !alias.scope !115, !noalias !112
  %349 = or i64 %337, 8
  %350 = getelementptr i32, i32* %2, i64 %349
  %351 = getelementptr i32, i32* %302, i64 %349
  %352 = bitcast i32* %351 to <4 x i32>*
  %353 = load <4 x i32>, <4 x i32>* %352, align 4, !alias.scope !112
  %354 = getelementptr i32, i32* %351, i64 4
  %355 = bitcast i32* %354 to <4 x i32>*
  %356 = load <4 x i32>, <4 x i32>* %355, align 4, !alias.scope !112
  %357 = bitcast i32* %350 to <4 x i32>*
  store <4 x i32> %353, <4 x i32>* %357, align 4, !alias.scope !115, !noalias !112
  %358 = getelementptr i32, i32* %350, i64 4
  %359 = bitcast i32* %358 to <4 x i32>*
  store <4 x i32> %356, <4 x i32>* %359, align 4, !alias.scope !115, !noalias !112
  %360 = or i64 %337, 16
  %361 = getelementptr i32, i32* %2, i64 %360
  %362 = getelementptr i32, i32* %302, i64 %360
  %363 = bitcast i32* %362 to <4 x i32>*
  %364 = load <4 x i32>, <4 x i32>* %363, align 4, !alias.scope !112
  %365 = getelementptr i32, i32* %362, i64 4
  %366 = bitcast i32* %365 to <4 x i32>*
  %367 = load <4 x i32>, <4 x i32>* %366, align 4, !alias.scope !112
  %368 = bitcast i32* %361 to <4 x i32>*
  store <4 x i32> %364, <4 x i32>* %368, align 4, !alias.scope !115, !noalias !112
  %369 = getelementptr i32, i32* %361, i64 4
  %370 = bitcast i32* %369 to <4 x i32>*
  store <4 x i32> %367, <4 x i32>* %370, align 4, !alias.scope !115, !noalias !112
  %371 = or i64 %337, 24
  %372 = getelementptr i32, i32* %2, i64 %371
  %373 = getelementptr i32, i32* %302, i64 %371
  %374 = bitcast i32* %373 to <4 x i32>*
  %375 = load <4 x i32>, <4 x i32>* %374, align 4, !alias.scope !112
  %376 = getelementptr i32, i32* %373, i64 4
  %377 = bitcast i32* %376 to <4 x i32>*
  %378 = load <4 x i32>, <4 x i32>* %377, align 4, !alias.scope !112
  %379 = bitcast i32* %372 to <4 x i32>*
  store <4 x i32> %375, <4 x i32>* %379, align 4, !alias.scope !115, !noalias !112
  %380 = getelementptr i32, i32* %372, i64 4
  %381 = bitcast i32* %380 to <4 x i32>*
  store <4 x i32> %378, <4 x i32>* %381, align 4, !alias.scope !115, !noalias !112
  %382 = add i64 %337, 32
  %383 = add i64 %338, -4
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %385, label %336, !llvm.loop !117

385:                                              ; preds = %336, %325
  %386 = phi i64 [ 0, %325 ], [ %382, %336 ]
  %387 = icmp eq i64 %332, 0
  br i1 %387, label %404, label %388

388:                                              ; preds = %385, %388
  %389 = phi i64 [ %401, %388 ], [ %386, %385 ]
  %390 = phi i64 [ %402, %388 ], [ %332, %385 ]
  %391 = getelementptr i32, i32* %2, i64 %389
  %392 = getelementptr i32, i32* %302, i64 %389
  %393 = bitcast i32* %392 to <4 x i32>*
  %394 = load <4 x i32>, <4 x i32>* %393, align 4, !alias.scope !112
  %395 = getelementptr i32, i32* %392, i64 4
  %396 = bitcast i32* %395 to <4 x i32>*
  %397 = load <4 x i32>, <4 x i32>* %396, align 4, !alias.scope !112
  %398 = bitcast i32* %391 to <4 x i32>*
  store <4 x i32> %394, <4 x i32>* %398, align 4, !alias.scope !115, !noalias !112
  %399 = getelementptr i32, i32* %391, i64 4
  %400 = bitcast i32* %399 to <4 x i32>*
  store <4 x i32> %397, <4 x i32>* %400, align 4, !alias.scope !115, !noalias !112
  %401 = add i64 %389, 8
  %402 = add i64 %390, -1
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %404, label %388, !llvm.loop !118

404:                                              ; preds = %388, %385
  %405 = icmp eq i64 %312, %326
  br i1 %405, label %1042, label %406

406:                                              ; preds = %404, %314, %307
  %407 = phi i32* [ %2, %314 ], [ %2, %307 ], [ %327, %404 ]
  %408 = phi i32* [ %302, %314 ], [ %302, %307 ], [ %328, %404 ]
  %409 = ptrtoint i32* %408 to i64
  %410 = getelementptr i32, i32* %305, i64 -1
  %411 = ptrtoint i32* %410 to i64
  %412 = sub i64 %411, %409
  %413 = lshr i64 %412, 2
  %414 = add nuw nsw i64 %413, 1
  %415 = and i64 %414, 7
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %426, label %417

417:                                              ; preds = %406, %417
  %418 = phi i32* [ %423, %417 ], [ %407, %406 ]
  %419 = phi i32* [ %422, %417 ], [ %408, %406 ]
  %420 = phi i64 [ %424, %417 ], [ %415, %406 ]
  %421 = load i32, i32* %419, align 4
  store i32 %421, i32* %418, align 4
  %422 = getelementptr inbounds i32, i32* %419, i64 1
  %423 = getelementptr inbounds i32, i32* %418, i64 1
  %424 = add i64 %420, -1
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %426, label %417, !llvm.loop !119

426:                                              ; preds = %417, %406
  %427 = phi i32* [ %407, %406 ], [ %423, %417 ]
  %428 = phi i32* [ %408, %406 ], [ %422, %417 ]
  %429 = icmp ult i64 %412, 28
  br i1 %429, label %1042, label %430

430:                                              ; preds = %426, %430
  %431 = phi i32* [ %456, %430 ], [ %427, %426 ]
  %432 = phi i32* [ %455, %430 ], [ %428, %426 ]
  %433 = load i32, i32* %432, align 4
  store i32 %433, i32* %431, align 4
  %434 = getelementptr inbounds i32, i32* %432, i64 1
  %435 = getelementptr inbounds i32, i32* %431, i64 1
  %436 = load i32, i32* %434, align 4
  store i32 %436, i32* %435, align 4
  %437 = getelementptr inbounds i32, i32* %432, i64 2
  %438 = getelementptr inbounds i32, i32* %431, i64 2
  %439 = load i32, i32* %437, align 4
  store i32 %439, i32* %438, align 4
  %440 = getelementptr inbounds i32, i32* %432, i64 3
  %441 = getelementptr inbounds i32, i32* %431, i64 3
  %442 = load i32, i32* %440, align 4
  store i32 %442, i32* %441, align 4
  %443 = getelementptr inbounds i32, i32* %432, i64 4
  %444 = getelementptr inbounds i32, i32* %431, i64 4
  %445 = load i32, i32* %443, align 4
  store i32 %445, i32* %444, align 4
  %446 = getelementptr inbounds i32, i32* %432, i64 5
  %447 = getelementptr inbounds i32, i32* %431, i64 5
  %448 = load i32, i32* %446, align 4
  store i32 %448, i32* %447, align 4
  %449 = getelementptr inbounds i32, i32* %432, i64 6
  %450 = getelementptr inbounds i32, i32* %431, i64 6
  %451 = load i32, i32* %449, align 4
  store i32 %451, i32* %450, align 4
  %452 = getelementptr inbounds i32, i32* %432, i64 7
  %453 = getelementptr inbounds i32, i32* %431, i64 7
  %454 = load i32, i32* %452, align 4
  store i32 %454, i32* %453, align 4
  %455 = getelementptr inbounds i32, i32* %432, i64 8
  %456 = getelementptr inbounds i32, i32* %431, i64 8
  %457 = icmp eq i32* %455, %305
  br i1 %457, label %1042, label %430, !llvm.loop !120

458:                                              ; preds = %3
  %459 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 35
  %460 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 35, i32 0, i32 1
  %461 = bitcast i32** %460 to i64*
  %462 = load i64, i64* %461, align 8
  %463 = bitcast %"class.std::__1::vector"* %459 to i64*
  %464 = load i64, i64* %463, align 8
  %465 = sub i64 %462, %464
  %466 = lshr exact i64 %465, 2
  %467 = trunc i64 %466 to i32
  store i32 %467, i32* %2, align 4
  br label %1042

468:                                              ; preds = %3
  %469 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 35, i32 0, i32 0
  %470 = load i32*, i32** %469, align 8
  %471 = ptrtoint i32* %470 to i64
  %472 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 35, i32 0, i32 1
  %473 = load i32*, i32** %472, align 8
  %474 = icmp eq i32* %470, %473
  br i1 %474, label %1042, label %475

475:                                              ; preds = %468
  %476 = getelementptr i32, i32* %473, i64 -1
  %477 = ptrtoint i32* %476 to i64
  %478 = sub i64 %477, %471
  %479 = lshr i64 %478, 2
  %480 = add nuw nsw i64 %479, 1
  %481 = icmp ult i64 %480, 8
  br i1 %481, label %574, label %482

482:                                              ; preds = %475
  %483 = getelementptr i32, i32* %473, i64 -1
  %484 = ptrtoint i32* %483 to i64
  %485 = sub i64 %484, %471
  %486 = lshr i64 %485, 2
  %487 = add nuw nsw i64 %486, 1
  %488 = getelementptr i32, i32* %2, i64 %487
  %489 = getelementptr i32, i32* %470, i64 %487
  %490 = icmp ugt i32* %489, %2
  %491 = icmp ult i32* %470, %488
  %492 = and i1 %490, %491
  br i1 %492, label %574, label %493

493:                                              ; preds = %482
  %494 = and i64 %480, 9223372036854775800
  %495 = getelementptr i32, i32* %2, i64 %494
  %496 = getelementptr i32, i32* %470, i64 %494
  %497 = add nsw i64 %494, -8
  %498 = lshr exact i64 %497, 3
  %499 = add nuw nsw i64 %498, 1
  %500 = and i64 %499, 3
  %501 = icmp ult i64 %497, 24
  br i1 %501, label %553, label %502

502:                                              ; preds = %493
  %503 = sub nsw i64 %499, %500
  br label %504

504:                                              ; preds = %504, %502
  %505 = phi i64 [ 0, %502 ], [ %550, %504 ]
  %506 = phi i64 [ %503, %502 ], [ %551, %504 ]
  %507 = getelementptr i32, i32* %2, i64 %505
  %508 = getelementptr i32, i32* %470, i64 %505
  %509 = bitcast i32* %508 to <4 x i32>*
  %510 = load <4 x i32>, <4 x i32>* %509, align 4, !alias.scope !121
  %511 = getelementptr i32, i32* %508, i64 4
  %512 = bitcast i32* %511 to <4 x i32>*
  %513 = load <4 x i32>, <4 x i32>* %512, align 4, !alias.scope !121
  %514 = bitcast i32* %507 to <4 x i32>*
  store <4 x i32> %510, <4 x i32>* %514, align 4, !alias.scope !124, !noalias !121
  %515 = getelementptr i32, i32* %507, i64 4
  %516 = bitcast i32* %515 to <4 x i32>*
  store <4 x i32> %513, <4 x i32>* %516, align 4, !alias.scope !124, !noalias !121
  %517 = or i64 %505, 8
  %518 = getelementptr i32, i32* %2, i64 %517
  %519 = getelementptr i32, i32* %470, i64 %517
  %520 = bitcast i32* %519 to <4 x i32>*
  %521 = load <4 x i32>, <4 x i32>* %520, align 4, !alias.scope !121
  %522 = getelementptr i32, i32* %519, i64 4
  %523 = bitcast i32* %522 to <4 x i32>*
  %524 = load <4 x i32>, <4 x i32>* %523, align 4, !alias.scope !121
  %525 = bitcast i32* %518 to <4 x i32>*
  store <4 x i32> %521, <4 x i32>* %525, align 4, !alias.scope !124, !noalias !121
  %526 = getelementptr i32, i32* %518, i64 4
  %527 = bitcast i32* %526 to <4 x i32>*
  store <4 x i32> %524, <4 x i32>* %527, align 4, !alias.scope !124, !noalias !121
  %528 = or i64 %505, 16
  %529 = getelementptr i32, i32* %2, i64 %528
  %530 = getelementptr i32, i32* %470, i64 %528
  %531 = bitcast i32* %530 to <4 x i32>*
  %532 = load <4 x i32>, <4 x i32>* %531, align 4, !alias.scope !121
  %533 = getelementptr i32, i32* %530, i64 4
  %534 = bitcast i32* %533 to <4 x i32>*
  %535 = load <4 x i32>, <4 x i32>* %534, align 4, !alias.scope !121
  %536 = bitcast i32* %529 to <4 x i32>*
  store <4 x i32> %532, <4 x i32>* %536, align 4, !alias.scope !124, !noalias !121
  %537 = getelementptr i32, i32* %529, i64 4
  %538 = bitcast i32* %537 to <4 x i32>*
  store <4 x i32> %535, <4 x i32>* %538, align 4, !alias.scope !124, !noalias !121
  %539 = or i64 %505, 24
  %540 = getelementptr i32, i32* %2, i64 %539
  %541 = getelementptr i32, i32* %470, i64 %539
  %542 = bitcast i32* %541 to <4 x i32>*
  %543 = load <4 x i32>, <4 x i32>* %542, align 4, !alias.scope !121
  %544 = getelementptr i32, i32* %541, i64 4
  %545 = bitcast i32* %544 to <4 x i32>*
  %546 = load <4 x i32>, <4 x i32>* %545, align 4, !alias.scope !121
  %547 = bitcast i32* %540 to <4 x i32>*
  store <4 x i32> %543, <4 x i32>* %547, align 4, !alias.scope !124, !noalias !121
  %548 = getelementptr i32, i32* %540, i64 4
  %549 = bitcast i32* %548 to <4 x i32>*
  store <4 x i32> %546, <4 x i32>* %549, align 4, !alias.scope !124, !noalias !121
  %550 = add i64 %505, 32
  %551 = add i64 %506, -4
  %552 = icmp eq i64 %551, 0
  br i1 %552, label %553, label %504, !llvm.loop !126

553:                                              ; preds = %504, %493
  %554 = phi i64 [ 0, %493 ], [ %550, %504 ]
  %555 = icmp eq i64 %500, 0
  br i1 %555, label %572, label %556

556:                                              ; preds = %553, %556
  %557 = phi i64 [ %569, %556 ], [ %554, %553 ]
  %558 = phi i64 [ %570, %556 ], [ %500, %553 ]
  %559 = getelementptr i32, i32* %2, i64 %557
  %560 = getelementptr i32, i32* %470, i64 %557
  %561 = bitcast i32* %560 to <4 x i32>*
  %562 = load <4 x i32>, <4 x i32>* %561, align 4, !alias.scope !121
  %563 = getelementptr i32, i32* %560, i64 4
  %564 = bitcast i32* %563 to <4 x i32>*
  %565 = load <4 x i32>, <4 x i32>* %564, align 4, !alias.scope !121
  %566 = bitcast i32* %559 to <4 x i32>*
  store <4 x i32> %562, <4 x i32>* %566, align 4, !alias.scope !124, !noalias !121
  %567 = getelementptr i32, i32* %559, i64 4
  %568 = bitcast i32* %567 to <4 x i32>*
  store <4 x i32> %565, <4 x i32>* %568, align 4, !alias.scope !124, !noalias !121
  %569 = add i64 %557, 8
  %570 = add i64 %558, -1
  %571 = icmp eq i64 %570, 0
  br i1 %571, label %572, label %556, !llvm.loop !127

572:                                              ; preds = %556, %553
  %573 = icmp eq i64 %480, %494
  br i1 %573, label %1042, label %574

574:                                              ; preds = %572, %482, %475
  %575 = phi i32* [ %2, %482 ], [ %2, %475 ], [ %495, %572 ]
  %576 = phi i32* [ %470, %482 ], [ %470, %475 ], [ %496, %572 ]
  %577 = ptrtoint i32* %576 to i64
  %578 = getelementptr i32, i32* %473, i64 -1
  %579 = ptrtoint i32* %578 to i64
  %580 = sub i64 %579, %577
  %581 = lshr i64 %580, 2
  %582 = add nuw nsw i64 %581, 1
  %583 = and i64 %582, 7
  %584 = icmp eq i64 %583, 0
  br i1 %584, label %594, label %585

585:                                              ; preds = %574, %585
  %586 = phi i32* [ %591, %585 ], [ %575, %574 ]
  %587 = phi i32* [ %590, %585 ], [ %576, %574 ]
  %588 = phi i64 [ %592, %585 ], [ %583, %574 ]
  %589 = load i32, i32* %587, align 4
  store i32 %589, i32* %586, align 4
  %590 = getelementptr inbounds i32, i32* %587, i64 1
  %591 = getelementptr inbounds i32, i32* %586, i64 1
  %592 = add i64 %588, -1
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %594, label %585, !llvm.loop !128

594:                                              ; preds = %585, %574
  %595 = phi i32* [ %575, %574 ], [ %591, %585 ]
  %596 = phi i32* [ %576, %574 ], [ %590, %585 ]
  %597 = icmp ult i64 %580, 28
  br i1 %597, label %1042, label %598

598:                                              ; preds = %594, %598
  %599 = phi i32* [ %624, %598 ], [ %595, %594 ]
  %600 = phi i32* [ %623, %598 ], [ %596, %594 ]
  %601 = load i32, i32* %600, align 4
  store i32 %601, i32* %599, align 4
  %602 = getelementptr inbounds i32, i32* %600, i64 1
  %603 = getelementptr inbounds i32, i32* %599, i64 1
  %604 = load i32, i32* %602, align 4
  store i32 %604, i32* %603, align 4
  %605 = getelementptr inbounds i32, i32* %600, i64 2
  %606 = getelementptr inbounds i32, i32* %599, i64 2
  %607 = load i32, i32* %605, align 4
  store i32 %607, i32* %606, align 4
  %608 = getelementptr inbounds i32, i32* %600, i64 3
  %609 = getelementptr inbounds i32, i32* %599, i64 3
  %610 = load i32, i32* %608, align 4
  store i32 %610, i32* %609, align 4
  %611 = getelementptr inbounds i32, i32* %600, i64 4
  %612 = getelementptr inbounds i32, i32* %599, i64 4
  %613 = load i32, i32* %611, align 4
  store i32 %613, i32* %612, align 4
  %614 = getelementptr inbounds i32, i32* %600, i64 5
  %615 = getelementptr inbounds i32, i32* %599, i64 5
  %616 = load i32, i32* %614, align 4
  store i32 %616, i32* %615, align 4
  %617 = getelementptr inbounds i32, i32* %600, i64 6
  %618 = getelementptr inbounds i32, i32* %599, i64 6
  %619 = load i32, i32* %617, align 4
  store i32 %619, i32* %618, align 4
  %620 = getelementptr inbounds i32, i32* %600, i64 7
  %621 = getelementptr inbounds i32, i32* %599, i64 7
  %622 = load i32, i32* %620, align 4
  store i32 %622, i32* %621, align 4
  %623 = getelementptr inbounds i32, i32* %600, i64 8
  %624 = getelementptr inbounds i32, i32* %599, i64 8
  %625 = icmp eq i32* %623, %473
  br i1 %625, label %1042, label %598, !llvm.loop !129

626:                                              ; preds = %3
  %627 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 30
  %628 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 30, i32 0, i32 1
  %629 = bitcast i8*** %628 to i64*
  %630 = load i64, i64* %629, align 8
  %631 = bitcast %"class.std::__1::vector.586"* %627 to i64*
  %632 = load i64, i64* %631, align 8
  %633 = sub i64 %630, %632
  %634 = lshr exact i64 %633, 3
  %635 = trunc i64 %634 to i32
  store i32 %635, i32* %2, align 4
  br label %1042

636:                                              ; preds = %3
  store i32 0, i32* %2, align 4
  br label %1042

637:                                              ; preds = %3
  store i32 2, i32* %2, align 4
  br label %1042

638:                                              ; preds = %3
  %639 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 32
  %640 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 32, i32 0, i32 1
  %641 = bitcast i8*** %640 to i64*
  %642 = load i64, i64* %641, align 8
  %643 = bitcast %"class.std::__1::vector.586"* %639 to i64*
  %644 = load i64, i64* %643, align 8
  %645 = sub i64 %642, %644
  %646 = lshr exact i64 %645, 3
  %647 = trunc i64 %646 to i32
  store i32 %647, i32* %2, align 4
  br label %1042

648:                                              ; preds = %3
  %649 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 110
  %650 = load i32, i32* %649, align 4
  store i32 %650, i32* %2, align 4
  br label %1042

651:                                              ; preds = %3
  %652 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 111
  %653 = load i32, i32* %652, align 8
  store i32 %653, i32* %2, align 4
  br label %1042

654:                                              ; preds = %3
  %655 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 112
  %656 = load i32, i32* %655, align 4
  store i32 %656, i32* %2, align 4
  br label %1042

657:                                              ; preds = %3
  %658 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 113
  %659 = load i32, i32* %658, align 8
  store i32 %659, i32* %2, align 4
  br label %1042

660:                                              ; preds = %3
  %661 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 82
  %662 = load i32, i32* %661, align 4
  store i32 %662, i32* %2, align 4
  br label %1042

663:                                              ; preds = %3
  %664 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %665 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %664, align 8
  %666 = bitcast %"class.rx::ContextImpl"* %665 to i32 (%"class.rx::ContextImpl"*)***
  %667 = load i32 (%"class.rx::ContextImpl"*)**, i32 (%"class.rx::ContextImpl"*)*** %666, align 8
  %668 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %667, i64 52
  %669 = load i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %668, align 8
  %670 = tail call i32 %669(%"class.rx::ContextImpl"* %665) #21
  store i32 %670, i32* %2, align 4
  br label %1042

671:                                              ; preds = %3
  %672 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 17
  %673 = load i32, i32* %672, align 8
  store i32 %673, i32* %2, align 4
  br label %1042

674:                                              ; preds = %3
  %675 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 18
  %676 = load i32, i32* %675, align 4
  store i32 %676, i32* %2, align 4
  br label %1042

677:                                              ; preds = %3
  %678 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 19
  %679 = load i32, i32* %678, align 8
  store i32 %679, i32* %2, align 4
  br label %1042

680:                                              ; preds = %3
  %681 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 23
  %682 = load i32, i32* %681, align 8
  store i32 %682, i32* %2, align 4
  br label %1042

683:                                              ; preds = %3
  %684 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 24
  %685 = load i32, i32* %684, align 4
  store i32 %685, i32* %2, align 4
  br label %1042

686:                                              ; preds = %3
  %687 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 25
  %688 = load i32, i32* %687, align 8
  store i32 %688, i32* %2, align 4
  br label %1042

689:                                              ; preds = %3
  %690 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 26
  %691 = load i32, i32* %690, align 4
  store i32 %691, i32* %2, align 4
  br label %1042

692:                                              ; preds = %3
  %693 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 28
  %694 = load i32, i32* %693, align 8
  store i32 %694, i32* %2, align 4
  br label %1042

695:                                              ; preds = %3
  %696 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 29
  %697 = load i32, i32* %696, align 4
  store i32 %697, i32* %2, align 4
  br label %1042

698:                                              ; preds = %3
  %699 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 30
  %700 = load i32, i32* %699, align 8
  store i32 %700, i32* %2, align 4
  br label %1042

701:                                              ; preds = %3
  %702 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 53, i32 0, i32 0, i64 0
  %703 = load i32, i32* %702, align 4
  store i32 %703, i32* %2, align 4
  br label %1042

704:                                              ; preds = %3
  %705 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 54, i32 0, i32 0, i64 0
  %706 = load i32, i32* %705, align 4
  store i32 %706, i32* %2, align 4
  br label %1042

707:                                              ; preds = %3
  %708 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 55, i32 0, i32 0, i64 0
  %709 = load i32, i32* %708, align 4
  store i32 %709, i32* %2, align 4
  br label %1042

710:                                              ; preds = %3
  %711 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 51, i32 0, i32 0, i64 0
  %712 = load i32, i32* %711, align 4
  store i32 %712, i32* %2, align 4
  br label %1042

713:                                              ; preds = %3
  %714 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 53, i32 0, i32 0, i64 4
  %715 = load i32, i32* %714, align 4
  store i32 %715, i32* %2, align 4
  br label %1042

716:                                              ; preds = %3
  %717 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 54, i32 0, i32 0, i64 4
  %718 = load i32, i32* %717, align 4
  store i32 %718, i32* %2, align 4
  br label %1042

719:                                              ; preds = %3
  %720 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 55, i32 0, i32 0, i64 4
  %721 = load i32, i32* %720, align 4
  store i32 %721, i32* %2, align 4
  br label %1042

722:                                              ; preds = %3
  %723 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 51, i32 0, i32 0, i64 4
  %724 = load i32, i32* %723, align 4
  store i32 %724, i32* %2, align 4
  br label %1042

725:                                              ; preds = %3
  %726 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 62
  %727 = load i32, i32* %726, align 4
  store i32 %727, i32* %2, align 4
  br label %1042

728:                                              ; preds = %3
  %729 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 63
  %730 = load i32, i32* %729, align 8
  store i32 %730, i32* %2, align 4
  br label %1042

731:                                              ; preds = %3
  %732 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 68
  %733 = load i32, i32* %732, align 4
  store i32 %733, i32* %2, align 4
  br label %1042

734:                                              ; preds = %3
  %735 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 49, i32 0, i32 0, i64 5
  %736 = load i32, i32* %735, align 4
  store i32 %736, i32* %2, align 4
  br label %1042

737:                                              ; preds = %3
  %738 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 50, i32 0, i32 0, i64 5
  %739 = load i32, i32* %738, align 4
  store i32 %739, i32* %2, align 4
  br label %1042

740:                                              ; preds = %3
  %741 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 69
  %742 = load i32, i32* %741, align 8
  store i32 %742, i32* %2, align 4
  br label %1042

743:                                              ; preds = %3
  %744 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 52, i32 0, i32 0, i64 5
  %745 = load i32, i32* %744, align 4
  store i32 %745, i32* %2, align 4
  br label %1042

746:                                              ; preds = %3
  %747 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 53, i32 0, i32 0, i64 5
  %748 = load i32, i32* %747, align 4
  store i32 %748, i32* %2, align 4
  br label %1042

749:                                              ; preds = %3
  %750 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 54, i32 0, i32 0, i64 5
  %751 = load i32, i32* %750, align 4
  store i32 %751, i32* %2, align 4
  br label %1042

752:                                              ; preds = %3
  %753 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 55, i32 0, i32 0, i64 5
  %754 = load i32, i32* %753, align 4
  store i32 %754, i32* %2, align 4
  br label %1042

755:                                              ; preds = %3
  %756 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 56, i32 0, i32 0, i64 5
  %757 = load i64, i64* %756, align 8
  %758 = trunc i64 %757 to i32
  store i32 %758, i32* %2, align 4
  br label %1042

759:                                              ; preds = %3
  %760 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 51, i32 0, i32 0, i64 5
  %761 = load i32, i32* %760, align 4
  store i32 %761, i32* %2, align 4
  br label %1042

762:                                              ; preds = %3
  %763 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 77
  %764 = load i32, i32* %763, align 4
  store i32 %764, i32* %2, align 4
  br label %1042

765:                                              ; preds = %3
  %766 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 78
  %767 = load i32, i32* %766, align 8
  store i32 %767, i32* %2, align 4
  br label %1042

768:                                              ; preds = %3
  %769 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 79
  %770 = load i32, i32* %769, align 4
  store i32 %770, i32* %2, align 4
  br label %1042

771:                                              ; preds = %3
  %772 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 80
  %773 = load i32, i32* %772, align 8
  store i32 %773, i32* %2, align 4
  br label %1042

774:                                              ; preds = %3
  %775 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 81
  %776 = load i32, i32* %775, align 4
  store i32 %776, i32* %2, align 4
  br label %1042

777:                                              ; preds = %3
  %778 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 82
  %779 = load i32, i32* %778, align 8
  store i32 %779, i32* %2, align 4
  br label %1042

780:                                              ; preds = %3
  %781 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 83
  %782 = load i32, i32* %781, align 4
  store i32 %782, i32* %2, align 4
  br label %1042

783:                                              ; preds = %3
  %784 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 84
  %785 = load i32, i32* %784, align 8
  store i32 %785, i32* %2, align 4
  br label %1042

786:                                              ; preds = %3
  %787 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 85
  %788 = load i32, i32* %787, align 4
  store i32 %788, i32* %2, align 4
  br label %1042

789:                                              ; preds = %3
  %790 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 87
  %791 = load i32, i32* %790, align 8
  store i32 %791, i32* %2, align 4
  br label %1042

792:                                              ; preds = %3
  %793 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 88
  %794 = load i32, i32* %793, align 4
  store i32 %794, i32* %2, align 4
  br label %1042

795:                                              ; preds = %3
  %796 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 93
  %797 = load i32, i32* %796, align 8
  store i32 %797, i32* %2, align 4
  br label %1042

798:                                              ; preds = %3
  %799 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 94
  %800 = load i32, i32* %799, align 4
  store i32 %800, i32* %2, align 4
  br label %1042

801:                                              ; preds = %3
  %802 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 52, i32 0, i32 0, i64 3
  %803 = load i32, i32* %802, align 4
  store i32 %803, i32* %2, align 4
  br label %1042

804:                                              ; preds = %3
  %805 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 49, i32 0, i32 0, i64 3
  %806 = load i32, i32* %805, align 4
  store i32 %806, i32* %2, align 4
  br label %1042

807:                                              ; preds = %3
  %808 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 56, i32 0, i32 0, i64 3
  %809 = load i64, i64* %808, align 8
  %810 = trunc i64 %809 to i32
  store i32 %810, i32* %2, align 4
  br label %1042

811:                                              ; preds = %3
  %812 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 95
  %813 = load i32, i32* %812, align 8
  store i32 %813, i32* %2, align 4
  br label %1042

814:                                              ; preds = %3
  %815 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 96
  %816 = load i32, i32* %815, align 4
  store i32 %816, i32* %2, align 4
  br label %1042

817:                                              ; preds = %3
  %818 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 97
  %819 = load i32, i32* %818, align 8
  store i32 %819, i32* %2, align 4
  br label %1042

820:                                              ; preds = %3
  %821 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 98
  %822 = load i32, i32* %821, align 4
  store i32 %822, i32* %2, align 4
  br label %1042

823:                                              ; preds = %3
  %824 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 99
  %825 = load i32, i32* %824, align 8
  store i32 %825, i32* %2, align 4
  br label %1042

826:                                              ; preds = %3
  %827 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 50, i32 0, i32 0, i64 3
  %828 = load i32, i32* %827, align 4
  store i32 %828, i32* %2, align 4
  br label %1042

829:                                              ; preds = %3
  %830 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 53, i32 0, i32 0, i64 3
  %831 = load i32, i32* %830, align 4
  store i32 %831, i32* %2, align 4
  br label %1042

832:                                              ; preds = %3
  %833 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 54, i32 0, i32 0, i64 3
  %834 = load i32, i32* %833, align 4
  store i32 %834, i32* %2, align 4
  br label %1042

835:                                              ; preds = %3
  %836 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 55, i32 0, i32 0, i64 3
  %837 = load i32, i32* %836, align 4
  store i32 %837, i32* %2, align 4
  br label %1042

838:                                              ; preds = %3
  %839 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 51, i32 0, i32 0, i64 3
  %840 = load i32, i32* %839, align 4
  store i32 %840, i32* %2, align 4
  br label %1042

841:                                              ; preds = %3
  %842 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 104
  %843 = load i32, i32* %842, align 4
  store i32 %843, i32* %2, align 4
  br label %1042

844:                                              ; preds = %3
  %845 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 105
  %846 = load i32, i32* %845, align 8
  store i32 %846, i32* %2, align 4
  br label %1042

847:                                              ; preds = %3
  %848 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 52, i32 0, i32 0, i64 1
  %849 = load i32, i32* %848, align 4
  store i32 %849, i32* %2, align 4
  br label %1042

850:                                              ; preds = %3
  %851 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 52, i32 0, i32 0, i64 2
  %852 = load i32, i32* %851, align 4
  store i32 %852, i32* %2, align 4
  br label %1042

853:                                              ; preds = %3
  %854 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 50, i32 0, i32 0, i64 1
  %855 = load i32, i32* %854, align 4
  store i32 %855, i32* %2, align 4
  br label %1042

856:                                              ; preds = %3
  %857 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 50, i32 0, i32 0, i64 2
  %858 = load i32, i32* %857, align 4
  store i32 %858, i32* %2, align 4
  br label %1042

859:                                              ; preds = %3
  %860 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 101
  %861 = load i32, i32* %860, align 8
  store i32 %861, i32* %2, align 4
  br label %1042

862:                                              ; preds = %3
  %863 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 103
  %864 = load i32, i32* %863, align 8
  store i32 %864, i32* %2, align 4
  br label %1042

865:                                              ; preds = %3
  %866 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 102
  %867 = load i32, i32* %866, align 4
  store i32 %867, i32* %2, align 4
  br label %1042

868:                                              ; preds = %3
  %869 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 107
  %870 = load i32, i32* %869, align 8
  store i32 %870, i32* %2, align 4
  br label %1042

871:                                              ; preds = %3
  %872 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 49, i32 0, i32 0, i64 1
  %873 = load i32, i32* %872, align 4
  store i32 %873, i32* %2, align 4
  br label %1042

874:                                              ; preds = %3
  %875 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 49, i32 0, i32 0, i64 2
  %876 = load i32, i32* %875, align 4
  store i32 %876, i32* %2, align 4
  br label %1042

877:                                              ; preds = %3
  %878 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 100
  %879 = load i32, i32* %878, align 4
  store i32 %879, i32* %2, align 4
  br label %1042

880:                                              ; preds = %3
  %881 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 106
  %882 = load i32, i32* %881, align 4
  store i32 %882, i32* %2, align 4
  br label %1042

883:                                              ; preds = %3
  %884 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 56, i32 0, i32 0, i64 1
  %885 = load i64, i64* %884, align 8
  %886 = trunc i64 %885 to i32
  store i32 %886, i32* %2, align 4
  br label %1042

887:                                              ; preds = %3
  %888 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 56, i32 0, i32 0, i64 2
  %889 = load i64, i64* %888, align 8
  %890 = trunc i64 %889 to i32
  store i32 %890, i32* %2, align 4
  br label %1042

891:                                              ; preds = %3
  %892 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 53, i32 0, i32 0, i64 1
  %893 = load i32, i32* %892, align 4
  store i32 %893, i32* %2, align 4
  br label %1042

894:                                              ; preds = %3
  %895 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 53, i32 0, i32 0, i64 2
  %896 = load i32, i32* %895, align 4
  store i32 %896, i32* %2, align 4
  br label %1042

897:                                              ; preds = %3
  %898 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 54, i32 0, i32 0, i64 1
  %899 = load i32, i32* %898, align 4
  store i32 %899, i32* %2, align 4
  br label %1042

900:                                              ; preds = %3
  %901 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 54, i32 0, i32 0, i64 2
  %902 = load i32, i32* %901, align 4
  store i32 %902, i32* %2, align 4
  br label %1042

903:                                              ; preds = %3
  %904 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 55, i32 0, i32 0, i64 1
  %905 = load i32, i32* %904, align 4
  store i32 %905, i32* %2, align 4
  br label %1042

906:                                              ; preds = %3
  %907 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 55, i32 0, i32 0, i64 2
  %908 = load i32, i32* %907, align 4
  store i32 %908, i32* %2, align 4
  br label %1042

909:                                              ; preds = %3
  %910 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 51, i32 0, i32 0, i64 1
  %911 = load i32, i32* %910, align 4
  store i32 %911, i32* %2, align 4
  br label %1042

912:                                              ; preds = %3
  %913 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 51, i32 0, i32 0, i64 2
  %914 = load i32, i32* %913, align 4
  store i32 %914, i32* %2, align 4
  br label %1042

915:                                              ; preds = %3
  %916 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 112
  %917 = load i32, i32* %916, align 4
  store i32 %917, i32* %2, align 4
  br label %1042

918:                                              ; preds = %3
  %919 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 115
  %920 = load i32, i32* %919, align 8
  store i32 %920, i32* %2, align 4
  br label %1042

921:                                              ; preds = %3
  %922 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 116
  %923 = load i32, i32* %922, align 4
  store i32 %923, i32* %2, align 4
  br label %1042

924:                                              ; preds = %3
  %925 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 117
  %926 = load i32, i32* %925, align 8
  store i32 %926, i32* %2, align 4
  br label %1042

927:                                              ; preds = %3
  %928 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 114
  %929 = load i32, i32* %928, align 4
  store i32 %929, i32* %2, align 4
  br label %1042

930:                                              ; preds = %3
  %931 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %932 = load i32, i32* %931, align 4
  %933 = icmp ugt i32 %932, 1
  br i1 %933, label %934, label %937

934:                                              ; preds = %930
  %935 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 109
  %936 = load i32, i32* %935, align 8
  store i32 %936, i32* %2, align 4
  br label %1042

937:                                              ; preds = %930
  %938 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 113
  %939 = load i32, i32* %938, align 8
  store i32 %939, i32* %2, align 4
  br label %1042

940:                                              ; preds = %3
  %941 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 110
  %942 = load i32, i32* %941, align 4
  store i32 %942, i32* %2, align 4
  br label %1042

943:                                              ; preds = %3
  %944 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 111
  %945 = load i32, i32* %944, align 8
  store i32 %945, i32* %2, align 4
  br label %1042

946:                                              ; preds = %3, %3, %3, %3, %3
  %947 = tail call zeroext i8 @_ZN2gl22ParamToVertexArrayTypeEj(i32 %1) #21
  %948 = tail call i32 @_ZNK2gl7Context16vertexArrayIndexENS_21ClientVertexArrayTypeE(%"class.gl::Context"* %0, i8 zeroext %947) #21
  %949 = zext i32 %948 to i64
  %950 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 68, i32 0, i32 0
  %951 = load %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"** %950, align 8
  %952 = getelementptr inbounds %"struct.gl::VertexAttribCurrentValueData", %"struct.gl::VertexAttribCurrentValueData"* %951, i64 %949
  %953 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %954 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %953, align 8
  %955 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %954, i64 %949) #21
  %956 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %954, i64 0, i32 5, i32 1, i32 0, i32 0
  %957 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %956, align 8
  %958 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %957, i64 %949, i32 5
  %959 = load i32, i32* %958, align 8
  %960 = zext i32 %959 to i64
  %961 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %954, i64 0, i32 5, i32 3, i32 0, i32 0
  %962 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %961, align 8
  %963 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %962, i64 %960
  tail call void @_ZN2gl19QueryVertexAttribivERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPi(%"struct.gl::VertexAttribute"* dereferenceable(48) %955, %"class.gl::VertexBinding"* dereferenceable(40) %963, %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20) %952, i32 34975, i32* %2) #21
  br label %1042

964:                                              ; preds = %3, %3, %3, %3, %3
  %965 = tail call zeroext i8 @_ZN2gl22ParamToVertexArrayTypeEj(i32 %1) #21
  %966 = tail call i32 @_ZNK2gl7Context16vertexArrayIndexENS_21ClientVertexArrayTypeE(%"class.gl::Context"* %0, i8 zeroext %965) #21
  %967 = zext i32 %966 to i64
  %968 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 68, i32 0, i32 0
  %969 = load %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"** %968, align 8
  %970 = getelementptr inbounds %"struct.gl::VertexAttribCurrentValueData", %"struct.gl::VertexAttribCurrentValueData"* %969, i64 %967
  %971 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %972 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %971, align 8
  %973 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %972, i64 %967) #21
  %974 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %972, i64 0, i32 5, i32 1, i32 0, i32 0
  %975 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %974, align 8
  %976 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %975, i64 %967, i32 5
  %977 = load i32, i32* %976, align 8
  %978 = zext i32 %977 to i64
  %979 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %972, i64 0, i32 5, i32 3, i32 0, i32 0
  %980 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %979, align 8
  %981 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %980, i64 %978
  tail call void @_ZN2gl19QueryVertexAttribivERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPi(%"struct.gl::VertexAttribute"* dereferenceable(48) %973, %"class.gl::VertexBinding"* dereferenceable(40) %981, %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20) %970, i32 34340, i32* %2) #21
  br label %1042

982:                                              ; preds = %3, %3, %3
  %983 = tail call zeroext i8 @_ZN2gl22ParamToVertexArrayTypeEj(i32 %1) #21
  %984 = tail call i32 @_ZNK2gl7Context16vertexArrayIndexENS_21ClientVertexArrayTypeE(%"class.gl::Context"* %0, i8 zeroext %983) #21
  %985 = zext i32 %984 to i64
  %986 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 68, i32 0, i32 0
  %987 = load %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"** %986, align 8
  %988 = getelementptr inbounds %"struct.gl::VertexAttribCurrentValueData", %"struct.gl::VertexAttribCurrentValueData"* %987, i64 %985
  %989 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %990 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %989, align 8
  %991 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %990, i64 %985) #21
  %992 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %990, i64 0, i32 5, i32 1, i32 0, i32 0
  %993 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %992, align 8
  %994 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %993, i64 %985, i32 5
  %995 = load i32, i32* %994, align 8
  %996 = zext i32 %995 to i64
  %997 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %990, i64 0, i32 5, i32 3, i32 0, i32 0
  %998 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %997, align 8
  %999 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %998, i64 %996
  tail call void @_ZN2gl19QueryVertexAttribivERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPi(%"struct.gl::VertexAttribute"* dereferenceable(48) %991, %"class.gl::VertexBinding"* dereferenceable(40) %999, %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20) %988, i32 34339, i32* %2) #21
  br label %1042

1000:                                             ; preds = %3, %3, %3, %3, %3
  %1001 = tail call zeroext i8 @_ZN2gl22ParamToVertexArrayTypeEj(i32 %1) #21
  %1002 = tail call i32 @_ZNK2gl7Context16vertexArrayIndexENS_21ClientVertexArrayTypeE(%"class.gl::Context"* %0, i8 zeroext %1001) #21
  %1003 = zext i32 %1002 to i64
  %1004 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 68, i32 0, i32 0
  %1005 = load %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"** %1004, align 8
  %1006 = getelementptr inbounds %"struct.gl::VertexAttribCurrentValueData", %"struct.gl::VertexAttribCurrentValueData"* %1005, i64 %1003
  %1007 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %1008 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %1007, align 8
  %1009 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %1008, i64 %1003) #21
  %1010 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %1008, i64 0, i32 5, i32 1, i32 0, i32 0
  %1011 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %1010, align 8
  %1012 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %1011, i64 %1003, i32 5
  %1013 = load i32, i32* %1012, align 8
  %1014 = zext i32 %1013 to i64
  %1015 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %1008, i64 0, i32 5, i32 3, i32 0, i32 0
  %1016 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %1015, align 8
  %1017 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1016, i64 %1014
  tail call void @_ZN2gl19QueryVertexAttribivERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPi(%"struct.gl::VertexAttribute"* dereferenceable(48) %1009, %"class.gl::VertexBinding"* dereferenceable(40) %1017, %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20) %1006, i32 34341, i32* %2) #21
  br label %1042

1018:                                             ; preds = %3
  %1019 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 100
  %1020 = load i32, i32* %1019, align 4
  store i32 %1020, i32* %2, align 4
  br label %1042

1021:                                             ; preds = %3
  %1022 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 156
  %1023 = load i32, i32* %1022, align 8
  store i32 %1023, i32* %2, align 4
  br label %1042

1024:                                             ; preds = %3
  %1025 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 2
  %1026 = load i32, i32* %1025, align 8
  store i32 %1026, i32* %2, align 4
  br label %1042

1027:                                             ; preds = %3
  %1028 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 122
  %1029 = load i32, i32* %1028, align 4
  store i32 %1029, i32* %2, align 4
  br label %1042

1030:                                             ; preds = %3
  %1031 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 123
  %1032 = load i32, i32* %1031, align 8
  store i32 %1032, i32* %2, align 4
  br label %1042

1033:                                             ; preds = %3
  %1034 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 58
  %1035 = load i32, i32* %1034, align 8
  store i32 %1035, i32* %2, align 4
  br label %1042

1036:                                             ; preds = %3
  %1037 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 59
  %1038 = load i32, i32* %1037, align 4
  store i32 %1038, i32* %2, align 4
  br label %1042

1039:                                             ; preds = %3
  %1040 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %1041 = tail call i32 @_ZNK2gl5State11getIntegervEPKNS_7ContextEjPi(%"class.gl::State"* %1040, %"class.gl::Context"* %0, i32 %1, i32* %2) #21
  br label %1042

1042:                                             ; preds = %594, %598, %426, %430, %255, %259, %572, %404, %233, %468, %300, %129, %1039, %4, %7, %10, %13, %16, %20, %23, %26, %29, %32, %35, %38, %41, %44, %47, %50, %53, %56, %59, %62, %65, %68, %71, %74, %77, %80, %83, %86, %89, %92, %95, %98, %101, %104, %107, %110, %120, %123, %287, %290, %458, %626, %636, %637, %638, %648, %651, %654, %657, %660, %663, %671, %674, %677, %680, %683, %686, %689, %692, %695, %698, %701, %704, %707, %710, %713, %716, %719, %722, %725, %728, %731, %734, %737, %740, %743, %746, %749, %752, %755, %759, %762, %765, %768, %771, %774, %777, %780, %783, %786, %789, %792, %795, %798, %801, %804, %807, %811, %814, %817, %820, %823, %826, %829, %832, %835, %838, %841, %844, %847, %850, %853, %856, %859, %862, %865, %868, %871, %874, %877, %880, %883, %887, %891, %894, %897, %900, %903, %906, %909, %912, %915, %918, %921, %924, %927, %940, %943, %946, %964, %982, %1000, %1018, %1021, %1024, %1027, %1030, %1033, %1036, %937, %934
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl7Context26getIntegerVertexAttribImplEjjPi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = tail call zeroext i8 @_ZN2gl22ParamToVertexArrayTypeEj(i32 %1) #21
  %6 = tail call i32 @_ZNK2gl7Context16vertexArrayIndexENS_21ClientVertexArrayTypeE(%"class.gl::Context"* %0, i8 zeroext %5) #21
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 68, i32 0, i32 0
  %9 = load %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"** %8, align 8
  %10 = getelementptr inbounds %"struct.gl::VertexAttribCurrentValueData", %"struct.gl::VertexAttribCurrentValueData"* %9, i64 %7
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %12 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %11, align 8
  %13 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %12, i64 %7) #21
  %14 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %12, i64 0, i32 5, i32 1, i32 0, i32 0
  %15 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %14, align 8
  %16 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %15, i64 %7, i32 5
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %12, i64 0, i32 5, i32 3, i32 0, i32 0
  %20 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %19, align 8
  %21 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %20, i64 %18
  tail call void @_ZN2gl19QueryVertexAttribivERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPi(%"struct.gl::VertexAttribute"* dereferenceable(48) %13, %"class.gl::VertexBinding"* dereferenceable(40) %21, %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20) %10, i32 %2, i32* %3) #21
  ret void
}

declare i32 @_ZNK2gl5State11getIntegervEPKNS_7ContextEjPi(%"class.gl::State"*, %"class.gl::Context"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl7Context21getVertexAttribivImplEjjPi(%"class.gl::Context"* nocapture readonly, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 68, i32 0, i32 0
  %7 = load %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"** %6, align 8
  %8 = getelementptr inbounds %"struct.gl::VertexAttribCurrentValueData", %"struct.gl::VertexAttribCurrentValueData"* %7, i64 %5
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %10 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %9, align 8
  %11 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %10, i64 %5) #21
  %12 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 1, i32 0, i32 0
  %13 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %12, align 8
  %14 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %13, i64 %5, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 3, i32 0, i32 0
  %18 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %17, align 8
  %19 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %18, i64 %16
  tail call void @_ZN2gl19QueryVertexAttribivERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPi(%"struct.gl::VertexAttribute"* dereferenceable(48) %11, %"class.gl::VertexBinding"* dereferenceable(40) %19, %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20) %8, i32 %2, i32* %3) #21
  ret void
}

declare i32 @_ZNK2gl7Context16vertexArrayIndexENS_21ClientVertexArrayTypeE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #3

declare zeroext i8 @_ZN2gl22ParamToVertexArrayTypeEj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl7Context17getInteger64vImplEjPl(%"class.gl::Context"* nocapture readonly, i32, i64* nocapture) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %32 [
    i32 36203, label %4
    i32 35376, label %7
    i32 35377, label %10
    i32 35379, label %13
    i32 37137, label %16
    i32 36392, label %19
    i32 37086, label %27
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 4
  %6 = load i64, i64* %5, align 8
  br label %30

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 71
  %9 = load i64, i64* %8, align 8
  br label %30

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 56, i32 0, i32 0, i64 0
  %12 = load i64, i64* %11, align 8
  br label %30

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 56, i32 0, i32 0, i64 4
  %15 = load i64, i64* %14, align 8
  br label %30

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 27
  %18 = load i64, i64* %17, align 8
  br label %30

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %21 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %20, align 8
  %22 = bitcast %"class.rx::ContextImpl"* %21 to i64 (%"class.rx::ContextImpl"*)***
  %23 = load i64 (%"class.rx::ContextImpl"*)**, i64 (%"class.rx::ContextImpl"*)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.rx::ContextImpl"*)*, i64 (%"class.rx::ContextImpl"*)** %23, i64 53
  %25 = load i64 (%"class.rx::ContextImpl"*)*, i64 (%"class.rx::ContextImpl"*)** %24, align 8
  %26 = tail call i64 %25(%"class.rx::ContextImpl"* %21) #21
  br label %30

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 86
  %29 = load i64, i64* %28, align 8
  br label %30

30:                                               ; preds = %4, %7, %10, %13, %16, %19, %27
  %31 = phi i64 [ %29, %27 ], [ %26, %19 ], [ %18, %16 ], [ %15, %13 ], [ %12, %10 ], [ %9, %7 ], [ %6, %4 ]
  store i64 %31, i64* %2, align 8
  br label %32

32:                                               ; preds = %30, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11getPointervEjPPv(%"class.gl::Context"*, i32, i8**) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZNK2gl5State11getPointervEPKNS_7ContextEjPPv(%"class.gl::State"* %4, %"class.gl::Context"* %0, i32 %1, i8** %2) #21
  ret void
}

declare void @_ZNK2gl5State11getPointervEPKNS_7ContextEjPPv(%"class.gl::State"*, %"class.gl::Context"*, i32, i8**) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context28getPointervRobustANGLERobustEjiPiPPv(%"class.gl::Context"* nocapture, i32, i32, i32* nocapture, i8** nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13getIntegeri_vEjjPi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #21
  store i32 -1431655766, i32* %5, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #21
  store i32 -1431655766, i32* %6, align 4
  %9 = call zeroext i1 @_ZNK2gl7Context28getIndexedQueryParameterInfoEjPjS1_(%"class.gl::Context"* %0, i32 %1, i32* nonnull %5, i32* nonnull %6)
  %10 = load i32, i32* %5, align 4
  %11 = icmp eq i32 %10, 5124
  br i1 %11, label %12, label %23

12:                                               ; preds = %4
  switch i32 %1, label %21 [
    i32 37310, label %13
    i32 37311, label %17
  ]

13:                                               ; preds = %12
  %14 = zext i32 %2 to i64
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 66, i32 0, i64 %14
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %3, align 4
  br label %25

17:                                               ; preds = %12
  %18 = zext i32 %2 to i64
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 67, i32 0, i64 %18
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %3, align 4
  br label %25

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZNK2gl5State13getIntegeri_vEjjPi(%"class.gl::State"* %22, i32 %1, i32 %2, i32* %3) #21
  br label %25

23:                                               ; preds = %4
  %24 = load i32, i32* %6, align 4
  tail call void @_ZN2gl22CastIndexedStateValuesIiEEvPNS_7ContextEjjjjPT_(%"class.gl::Context"* %0, i32 %10, i32 %1, i32 %2, i32 %24, i32* %3) #21
  br label %25

25:                                               ; preds = %13, %17, %21, %23
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context28getIndexedQueryParameterInfoEjPjS1_(%"class.gl::Context"* nocapture readonly, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 1
  %7 = load i32, i32* %5, align 4
  %8 = icmp ult i32 %7, 3
  br i1 %8, label %32, label %9

9:                                                ; preds = %4
  switch i32 %1, label %12 [
    i32 35983, label %10
    i32 35368, label %10
    i32 35972, label %11
    i32 35973, label %11
    i32 35369, label %11
    i32 35370, label %11
  ]

10:                                               ; preds = %9, %9
  store i32 5124, i32* %2, align 4
  store i32 1, i32* %3, align 4
  br label %32

11:                                               ; preds = %9, %9, %9, %9
  store i32 27326, i32* %2, align 4
  store i32 1, i32* %3, align 4
  br label %32

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 57
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 58
  %18 = load i8, i8* %17, align 2, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16, %12
  switch i32 %1, label %23 [
    i32 32969, label %21
    i32 32971, label %21
    i32 32968, label %21
    i32 32970, label %21
    i32 32777, label %21
    i32 34877, label %21
    i32 3107, label %22
  ]

21:                                               ; preds = %20, %20, %20, %20, %20, %20
  store i32 5124, i32* %2, align 4
  store i32 1, i32* %3, align 4
  br label %32

22:                                               ; preds = %20
  store i32 35670, i32* %2, align 4
  store i32 4, i32* %3, align 4
  br label %32

23:                                               ; preds = %16, %20
  %24 = icmp ugt i32 %7, 3
  br i1 %24, label %28, label %25

25:                                               ; preds = %23
  %26 = load i32, i32* %6, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %23, %25
  switch i32 %1, label %32 [
    i32 36668, label %29
    i32 37310, label %30
    i32 37311, label %30
    i32 37569, label %30
    i32 37075, label %30
    i32 36687, label %30
    i32 33494, label %30
    i32 33495, label %30
    i32 33496, label %30
    i32 36434, label %30
    i32 36666, label %30
    i32 36667, label %30
    i32 36669, label %30
    i32 36670, label %30
    i32 36974, label %30
    i32 37570, label %31
    i32 37571, label %31
    i32 37076, label %31
    i32 37077, label %31
  ]

29:                                               ; preds = %28
  store i32 35670, i32* %2, align 4
  store i32 1, i32* %3, align 4
  br label %32

30:                                               ; preds = %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28
  store i32 5124, i32* %2, align 4
  store i32 1, i32* %3, align 4
  br label %32

31:                                               ; preds = %28, %28, %28, %28
  store i32 27326, i32* %2, align 4
  store i32 1, i32* %3, align 4
  br label %32

32:                                               ; preds = %4, %28, %25, %31, %30, %29, %22, %21, %11, %10
  %33 = phi i1 [ true, %31 ], [ true, %30 ], [ true, %29 ], [ true, %22 ], [ true, %21 ], [ true, %11 ], [ true, %10 ], [ false, %25 ], [ false, %28 ], [ false, %4 ]
  ret i1 %33
}

declare void @_ZNK2gl5State13getIntegeri_vEjjPi(%"class.gl::State"*, i32, i32, i32*) local_unnamed_addr #3

declare void @_ZN2gl22CastIndexedStateValuesIiEEvPNS_7ContextEjjjjPT_(%"class.gl::Context"*, i32, i32, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19getIntegeri_vRobustEjjiPiS1_(%"class.gl::Context"*, i32, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #21
  store i32 -1431655766, i32* %7, align 4
  %10 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #21
  store i32 -1431655766, i32* %8, align 4
  %11 = call zeroext i1 @_ZNK2gl7Context28getIndexedQueryParameterInfoEjPjS1_(%"class.gl::Context"* %0, i32 %1, i32* nonnull %7, i32* nonnull %8) #21
  %12 = load i32, i32* %7, align 4
  %13 = icmp eq i32 %12, 5124
  br i1 %13, label %14, label %25

14:                                               ; preds = %6
  switch i32 %1, label %23 [
    i32 37310, label %15
    i32 37311, label %19
  ]

15:                                               ; preds = %14
  %16 = zext i32 %2 to i64
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 66, i32 0, i64 %16
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %5, align 4
  br label %27

19:                                               ; preds = %14
  %20 = zext i32 %2 to i64
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 67, i32 0, i64 %20
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %5, align 4
  br label %27

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZNK2gl5State13getIntegeri_vEjjPi(%"class.gl::State"* %24, i32 %1, i32 %2, i32* %5) #21
  br label %27

25:                                               ; preds = %6
  %26 = load i32, i32* %8, align 4
  tail call void @_ZN2gl22CastIndexedStateValuesIiEEvPNS_7ContextEjjjjPT_(%"class.gl::Context"* %0, i32 %12, i32 %1, i32 %2, i32 %26, i32* %5) #21
  br label %27

27:                                               ; preds = %15, %19, %23, %25
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15getInteger64i_vEjjPl(%"class.gl::Context"*, i32, i32, i64*) local_unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #21
  store i32 -1431655766, i32* %5, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #21
  store i32 -1431655766, i32* %6, align 4
  %9 = call zeroext i1 @_ZNK2gl7Context28getIndexedQueryParameterInfoEjPjS1_(%"class.gl::Context"* %0, i32 %1, i32* nonnull %5, i32* nonnull %6)
  %10 = load i32, i32* %5, align 4
  %11 = icmp eq i32 %10, 27326
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZNK2gl5State15getInteger64i_vEjjPl(%"class.gl::State"* %13, i32 %1, i32 %2, i64* %3) #21
  br label %16

14:                                               ; preds = %4
  %15 = load i32, i32* %6, align 4
  tail call void @_ZN2gl22CastIndexedStateValuesIlEEvPNS_7ContextEjjjjPT_(%"class.gl::Context"* %0, i32 %10, i32 %1, i32 %2, i32 %15, i64* %3) #21
  br label %16

16:                                               ; preds = %14, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #21
  ret void
}

declare void @_ZNK2gl5State15getInteger64i_vEjjPl(%"class.gl::State"*, i32, i32, i64*) local_unnamed_addr #3

declare void @_ZN2gl22CastIndexedStateValuesIlEEvPNS_7ContextEjjjjPT_(%"class.gl::Context"*, i32, i32, i32, i32, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21getInteger64i_vRobustEjjiPiPl(%"class.gl::Context"*, i32, i32, i32, i32* nocapture readnone, i64*) local_unnamed_addr #1 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #21
  store i32 -1431655766, i32* %7, align 4
  %10 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #21
  store i32 -1431655766, i32* %8, align 4
  %11 = call zeroext i1 @_ZNK2gl7Context28getIndexedQueryParameterInfoEjPjS1_(%"class.gl::Context"* %0, i32 %1, i32* nonnull %7, i32* nonnull %8) #21
  %12 = load i32, i32* %7, align 4
  %13 = icmp eq i32 %12, 27326
  br i1 %13, label %14, label %16

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZNK2gl5State15getInteger64i_vEjjPl(%"class.gl::State"* %15, i32 %1, i32 %2, i64* %5) #21
  br label %18

16:                                               ; preds = %6
  %17 = load i32, i32* %8, align 4
  tail call void @_ZN2gl22CastIndexedStateValuesIlEEvPNS_7ContextEjjjjPT_(%"class.gl::Context"* %0, i32 %12, i32 %1, i32 %2, i32 %17, i64* %5) #21
  br label %18

18:                                               ; preds = %14, %16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13getBooleani_vEjjPh(%"class.gl::Context"*, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #21
  store i32 -1431655766, i32* %5, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #21
  store i32 -1431655766, i32* %6, align 4
  %9 = call zeroext i1 @_ZNK2gl7Context28getIndexedQueryParameterInfoEjPjS1_(%"class.gl::Context"* %0, i32 %1, i32* nonnull %5, i32* nonnull %6)
  %10 = load i32, i32* %5, align 4
  %11 = icmp eq i32 %10, 35670
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZNK2gl5State13getBooleani_vEjjPh(%"class.gl::State"* %13, i32 %1, i32 %2, i8* %3) #21
  br label %16

14:                                               ; preds = %4
  %15 = load i32, i32* %6, align 4
  tail call void @_ZN2gl22CastIndexedStateValuesIhEEvPNS_7ContextEjjjjPT_(%"class.gl::Context"* %0, i32 %10, i32 %1, i32 %2, i32 %15, i8* %3) #21
  br label %16

16:                                               ; preds = %14, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #21
  ret void
}

declare void @_ZNK2gl5State13getBooleani_vEjjPh(%"class.gl::State"*, i32, i32, i8*) local_unnamed_addr #3

declare void @_ZN2gl22CastIndexedStateValuesIhEEvPNS_7ContextEjjjjPT_(%"class.gl::Context"*, i32, i32, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19getBooleani_vRobustEjjiPiPh(%"class.gl::Context"*, i32, i32, i32, i32* nocapture readnone, i8*) local_unnamed_addr #1 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #21
  store i32 -1431655766, i32* %7, align 4
  %10 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #21
  store i32 -1431655766, i32* %8, align 4
  %11 = call zeroext i1 @_ZNK2gl7Context28getIndexedQueryParameterInfoEjPjS1_(%"class.gl::Context"* %0, i32 %1, i32* nonnull %7, i32* nonnull %8) #21
  %12 = load i32, i32* %7, align 4
  %13 = icmp eq i32 %12, 35670
  br i1 %13, label %14, label %16

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZNK2gl5State13getBooleani_vEjjPh(%"class.gl::State"* %15, i32 %1, i32 %2, i8* %5) #21
  br label %18

16:                                               ; preds = %6
  %17 = load i32, i32* %8, align 4
  tail call void @_ZN2gl22CastIndexedStateValuesIhEEvPNS_7ContextEjjjjPT_(%"class.gl::Context"* %0, i32 %12, i32 %1, i32 %2, i32 %17, i8* %5) #21
  br label %18

18:                                               ; preds = %14, %16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20getBufferParameterivENS_13BufferBindingEjPi(%"class.gl::Context"* nocapture readonly, i8 zeroext, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = icmp eq i8 %1, 6
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %8 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %8, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  br label %13

10:                                               ; preds = %4
  %11 = zext i8 %1 to i64
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 %11, i32 0, i32 1
  br label %13

13:                                               ; preds = %6, %10
  %14 = phi %"class.gl::Buffer"** [ %9, %6 ], [ %12, %10 ]
  %15 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %14, align 8
  tail call void @_ZN2gl22QueryBufferParameterivEPKNS_6BufferEjPi(%"class.gl::Buffer"* %15, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl22QueryBufferParameterivEPKNS_6BufferEjPi(%"class.gl::Buffer"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context26getBufferParameterivRobustENS_13BufferBindingEjiPiS2_(%"class.gl::Context"* nocapture readonly, i8 zeroext, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  %7 = icmp eq i8 %1, 6
  br i1 %7, label %8, label %12

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %10 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  br label %15

12:                                               ; preds = %6
  %13 = zext i8 %1 to i64
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 %13, i32 0, i32 1
  br label %15

15:                                               ; preds = %8, %12
  %16 = phi %"class.gl::Buffer"** [ %11, %8 ], [ %14, %12 ]
  %17 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %16, align 8
  tail call void @_ZN2gl22QueryBufferParameterivEPKNS_6BufferEjPi(%"class.gl::Buffer"* %17, i32 %2, i32* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context35getFramebufferAttachmentParameterivEjjjPi(%"class.gl::Context"*, i32, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %7 = tail call %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"* %6, i32 %1) #21
  tail call void @_ZN2gl37QueryFramebufferAttachmentParameterivEPKNS_7ContextEPKNS_11FramebufferEjjPi(%"class.gl::Context"* %0, %"class.gl::Framebuffer"* %7, i32 %2, i32 %3, i32* %4) #21
  ret void
}

declare %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"*, i32) local_unnamed_addr #3

declare void @_ZN2gl37QueryFramebufferAttachmentParameterivEPKNS_7ContextEPKNS_11FramebufferEjjPi(%"class.gl::Context"*, %"class.gl::Framebuffer"*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context41getFramebufferAttachmentParameterivRobustEjjjiPiS1_(%"class.gl::Context"*, i32, i32, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %9 = tail call %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"* %8, i32 %1) #21
  tail call void @_ZN2gl37QueryFramebufferAttachmentParameterivEPKNS_7ContextEPKNS_11FramebufferEjjPi(%"class.gl::Context"* %0, %"class.gl::Framebuffer"* %9, i32 %2, i32 %3, i32* %6) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context26getRenderbufferParameterivEjjPi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 62, i32 0, i32 1
  %6 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %5, align 8
  tail call void @_ZN2gl19QueryRenderbufferivEPKNS_7ContextEPKNS_12RenderbufferEjPi(%"class.gl::Context"* %0, %"class.gl::Renderbuffer"* %6, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl19QueryRenderbufferivEPKNS_7ContextEPKNS_12RenderbufferEjPi(%"class.gl::Context"*, %"class.gl::Renderbuffer"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context32getRenderbufferParameterivRobustEjjiPiS1_(%"class.gl::Context"*, i32, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 62, i32 0, i32 1
  %8 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %7, align 8
  tail call void @_ZN2gl19QueryRenderbufferivEPKNS_7ContextEPKNS_12RenderbufferEjPi(%"class.gl::Context"* %0, %"class.gl::Renderbuffer"* %8, i32 %2, i32* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9texBufferENS_11TextureTypeEjNS_8BufferIDE(%"class.gl::Context"*, i8 zeroext, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %5, i8 zeroext %1) #21
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 10
  %8 = load %"class.gl::BufferManager"*, %"class.gl::BufferManager"** %7, align 8
  %9 = tail call %"class.gl::Buffer"* @_ZNK2gl13BufferManager9getBufferENS_8BufferIDE(%"class.gl::BufferManager"* %8, i32 %3) #21
  %10 = tail call i32 @_ZN2gl7Texture9setBufferEPKNS_7ContextEPNS_6BufferEj(%"class.gl::Texture"* %6, %"class.gl::Context"* %0, %"class.gl::Buffer"* %9, i32 %2) #21
  ret void
}

declare i32 @_ZN2gl7Texture9setBufferEPKNS_7ContextEPNS_6BufferEj(%"class.gl::Texture"*, %"class.gl::Context"*, %"class.gl::Buffer"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14texBufferRangeENS_11TextureTypeEjNS_8BufferIDEll(%"class.gl::Context"*, i8 zeroext, i32, i32, i64, i64) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %8 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %7, i8 zeroext %1) #21
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 10
  %10 = load %"class.gl::BufferManager"*, %"class.gl::BufferManager"** %9, align 8
  %11 = tail call %"class.gl::Buffer"* @_ZNK2gl13BufferManager9getBufferENS_8BufferIDE(%"class.gl::BufferManager"* %10, i32 %3) #21
  %12 = tail call i32 @_ZN2gl7Texture14setBufferRangeEPKNS_7ContextEPNS_6BufferEjll(%"class.gl::Texture"* %8, %"class.gl::Context"* %0, %"class.gl::Buffer"* %11, i32 %2, i64 %4, i64 %5) #21
  ret void
}

declare i32 @_ZN2gl7Texture14setBufferRangeEPKNS_7ContextEPNS_6BufferEjll(%"class.gl::Texture"*, %"class.gl::Context"*, %"class.gl::Buffer"*, i32, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17getTexParameterfvENS_11TextureTypeEjPf(%"class.gl::Context"*, i8 zeroext, i32, float*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %5, i8 zeroext %1) #21
  tail call void @_ZN2gl19QueryTexParameterfvEPKNS_7ContextEPKNS_7TextureEjPf(%"class.gl::Context"* %0, %"class.gl::Texture"* %6, i32 %2, float* %3) #21
  ret void
}

declare void @_ZN2gl19QueryTexParameterfvEPKNS_7ContextEPKNS_7TextureEjPf(%"class.gl::Context"*, %"class.gl::Texture"*, i32, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23getTexParameterfvRobustENS_11TextureTypeEjiPiPf(%"class.gl::Context"*, i8 zeroext, i32, i32, i32* nocapture readnone, float*) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %8 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %7, i8 zeroext %1) #21
  tail call void @_ZN2gl19QueryTexParameterfvEPKNS_7ContextEPKNS_7TextureEjPf(%"class.gl::Context"* %0, %"class.gl::Texture"* %8, i32 %2, float* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17getTexParameterivENS_11TextureTypeEjPi(%"class.gl::Context"*, i8 zeroext, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %5, i8 zeroext %1) #21
  tail call void @_ZN2gl19QueryTexParameterivEPKNS_7ContextEPKNS_7TextureEjPi(%"class.gl::Context"* %0, %"class.gl::Texture"* %6, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl19QueryTexParameterivEPKNS_7ContextEPKNS_7TextureEjPi(%"class.gl::Context"*, %"class.gl::Texture"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18getTexParameterIivENS_11TextureTypeEjPi(%"class.gl::Context"*, i8 zeroext, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %5, i8 zeroext %1) #21
  tail call void @_ZN2gl20QueryTexParameterIivEPKNS_7ContextEPKNS_7TextureEjPi(%"class.gl::Context"* %0, %"class.gl::Texture"* %6, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl20QueryTexParameterIivEPKNS_7ContextEPKNS_7TextureEjPi(%"class.gl::Context"*, %"class.gl::Texture"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19getTexParameterIuivENS_11TextureTypeEjPj(%"class.gl::Context"*, i8 zeroext, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %5, i8 zeroext %1) #21
  tail call void @_ZN2gl21QueryTexParameterIuivEPKNS_7ContextEPKNS_7TextureEjPj(%"class.gl::Context"* %0, %"class.gl::Texture"* %6, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl21QueryTexParameterIuivEPKNS_7ContextEPKNS_7TextureEjPj(%"class.gl::Context"*, %"class.gl::Texture"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23getTexParameterivRobustENS_11TextureTypeEjiPiS2_(%"class.gl::Context"*, i8 zeroext, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %8 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %7, i8 zeroext %1) #21
  tail call void @_ZN2gl19QueryTexParameterivEPKNS_7ContextEPKNS_7TextureEjPi(%"class.gl::Context"* %0, %"class.gl::Texture"* %8, i32 %2, i32* %5) #21
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context24getTexParameterIivRobustENS_11TextureTypeEjiPiS2_(%"class.gl::Context"* nocapture, i8 zeroext, i32, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context25getTexParameterIuivRobustENS_11TextureTypeEjiPiPj(%"class.gl::Context"* nocapture, i8 zeroext, i32, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context22getTexLevelParameterivENS_13TextureTargetEijPi(%"class.gl::Context"*, i8 zeroext, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %6 = tail call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %8 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %7, i8 zeroext %6) #21
  tail call void @_ZN2gl24QueryTexLevelParameterivEPKNS_7TextureENS_13TextureTargetEijPi(%"class.gl::Texture"* %8, i8 zeroext %1, i32 %2, i32 %3, i32* %4) #21
  ret void
}

declare void @_ZN2gl24QueryTexLevelParameterivEPKNS_7TextureENS_13TextureTargetEijPi(%"class.gl::Texture"*, i8 zeroext, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context28getTexLevelParameterivRobustENS_13TextureTargetEijiPiS2_(%"class.gl::Context"* nocapture, i8 zeroext, i32, i32, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context22getTexLevelParameterfvENS_13TextureTargetEijPf(%"class.gl::Context"*, i8 zeroext, i32, i32, float*) local_unnamed_addr #1 align 2 {
  %6 = tail call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %8 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %7, i8 zeroext %6) #21
  tail call void @_ZN2gl24QueryTexLevelParameterfvEPKNS_7TextureENS_13TextureTargetEijPf(%"class.gl::Texture"* %8, i8 zeroext %1, i32 %2, i32 %3, float* %4) #21
  ret void
}

declare void @_ZN2gl24QueryTexLevelParameterfvEPKNS_7TextureENS_13TextureTargetEijPf(%"class.gl::Texture"*, i8 zeroext, i32, i32, float*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context28getTexLevelParameterfvRobustENS_13TextureTargetEijiPiPf(%"class.gl::Context"* nocapture, i8 zeroext, i32, i32, i32, i32* nocapture, float* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13texParameterfENS_11TextureTypeEjf(%"class.gl::Context"*, i8 zeroext, i32, float) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %5, i8 zeroext %1) #21
  tail call void @_ZN2gl16SetTexParameterfEPNS_7ContextEPNS_7TextureEjf(%"class.gl::Context"* %0, %"class.gl::Texture"* %6, i32 %2, float %3) #21
  ret void
}

declare void @_ZN2gl16SetTexParameterfEPNS_7ContextEPNS_7TextureEjf(%"class.gl::Context"*, %"class.gl::Texture"*, i32, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14texParameterfvENS_11TextureTypeEjPKf(%"class.gl::Context"*, i8 zeroext, i32, float*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %5, i8 zeroext %1) #21
  tail call void @_ZN2gl17SetTexParameterfvEPNS_7ContextEPNS_7TextureEjPKf(%"class.gl::Context"* %0, %"class.gl::Texture"* %6, i32 %2, float* %3) #21
  ret void
}

declare void @_ZN2gl17SetTexParameterfvEPNS_7ContextEPNS_7TextureEjPKf(%"class.gl::Context"*, %"class.gl::Texture"*, i32, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20texParameterfvRobustENS_11TextureTypeEjiPKf(%"class.gl::Context"*, i8 zeroext, i32, i32, float*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %7 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %6, i8 zeroext %1) #21
  tail call void @_ZN2gl17SetTexParameterfvEPNS_7ContextEPNS_7TextureEjPKf(%"class.gl::Context"* %0, %"class.gl::Texture"* %7, i32 %2, float* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13texParameteriENS_11TextureTypeEji(%"class.gl::Context"*, i8 zeroext, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %5, i8 zeroext %1) #21
  tail call void @_ZN2gl16SetTexParameteriEPNS_7ContextEPNS_7TextureEji(%"class.gl::Context"* %0, %"class.gl::Texture"* %6, i32 %2, i32 %3) #21
  ret void
}

declare void @_ZN2gl16SetTexParameteriEPNS_7ContextEPNS_7TextureEji(%"class.gl::Context"*, %"class.gl::Texture"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14texParameterivENS_11TextureTypeEjPKi(%"class.gl::Context"*, i8 zeroext, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %5, i8 zeroext %1) #21
  tail call void @_ZN2gl17SetTexParameterivEPNS_7ContextEPNS_7TextureEjPKi(%"class.gl::Context"* %0, %"class.gl::Texture"* %6, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl17SetTexParameterivEPNS_7ContextEPNS_7TextureEjPKi(%"class.gl::Context"*, %"class.gl::Texture"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15texParameterIivENS_11TextureTypeEjPKi(%"class.gl::Context"*, i8 zeroext, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %5, i8 zeroext %1) #21
  tail call void @_ZN2gl18SetTexParameterIivEPNS_7ContextEPNS_7TextureEjPKi(%"class.gl::Context"* %0, %"class.gl::Texture"* %6, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl18SetTexParameterIivEPNS_7ContextEPNS_7TextureEjPKi(%"class.gl::Context"*, %"class.gl::Texture"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16texParameterIuivENS_11TextureTypeEjPKj(%"class.gl::Context"*, i8 zeroext, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %5, i8 zeroext %1) #21
  tail call void @_ZN2gl19SetTexParameterIuivEPNS_7ContextEPNS_7TextureEjPKj(%"class.gl::Context"* %0, %"class.gl::Texture"* %6, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl19SetTexParameterIuivEPNS_7ContextEPNS_7TextureEjPKj(%"class.gl::Context"*, %"class.gl::Texture"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20texParameterivRobustENS_11TextureTypeEjiPKi(%"class.gl::Context"*, i8 zeroext, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %7 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %6, i8 zeroext %1) #21
  tail call void @_ZN2gl17SetTexParameterivEPNS_7ContextEPNS_7TextureEjPKi(%"class.gl::Context"* %0, %"class.gl::Texture"* %7, i32 %2, i32* %4) #21
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context21texParameterIivRobustENS_11TextureTypeEjiPKi(%"class.gl::Context"* nocapture, i8 zeroext, i32, i32, i32* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context22texParameterIuivRobustENS_11TextureTypeEjiPKj(%"class.gl::Context"* nocapture, i8 zeroext, i32, i32, i32* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19drawArraysInstancedENS_13PrimitiveModeEiii(%"class.gl::Context"*, i8 zeroext, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 18
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = zext i8 %1 to i64
  %13 = getelementptr inbounds %"class.angle::PackedEnumMap.1054", %"class.angle::PackedEnumMap.1054"* @_ZN2glL23kMinimumPrimitiveCountsE, i64 0, i32 0, i32 0, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %3
  br i1 %15, label %16, label %25

16:                                               ; preds = %7, %5, %11
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %18 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %17, align 8
  %19 = bitcast %"class.rx::ContextImpl"* %18 to i32 (%"class.rx::ContextImpl"*)***
  %20 = load i32 (%"class.rx::ContextImpl"*)**, i32 (%"class.rx::ContextImpl"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %20, i64 47
  %22 = load i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %21, align 8
  %23 = tail call i32 %22(%"class.rx::ContextImpl"* %18) #21
  br label %24

24:                                               ; preds = %44, %159, %150, %79, %64, %29, %107, %16
  ret void

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %27 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %26, align 8
  %28 = icmp eq %"class.gl::GLES1Renderer"* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %31 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %27, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %30) #21
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %24, label %33

33:                                               ; preds = %29, %25
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %35 = load i64, i64* %34, align 8, !noalias !130
  %36 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %37 = load i64, i64* %36, align 8, !noalias !130
  %38 = and i64 %37, %35
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %64, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %42 = tail call i64 @llvm.cttz.i64(i64 %38, i1 true) #21, !range !73
  %43 = bitcast %"class.gl::State"* %41 to i8*
  br label %44

44:                                               ; preds = %56, %40
  %45 = phi i64 [ %42, %40 ], [ %61, %56 ]
  %46 = phi i64 [ %38, %40 ], [ %59, %56 ]
  %47 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %45, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds i8, i8* %43, i64 %48
  %50 = bitcast i8* %49 to %"class.gl::State"*
  %51 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %45, i32 0
  %52 = bitcast i64* %51 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %53 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %52, align 16
  %54 = tail call i32 %53(%"class.gl::State"* %50, %"class.gl::Context"* %0, i32 4) #21
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %24, label %56

56:                                               ; preds = %44
  %57 = shl i64 1, %45
  %58 = xor i64 %57, -1
  %59 = and i64 %46, %58
  %60 = icmp eq i64 %59, 0
  %61 = tail call i64 @llvm.cttz.i64(i64 %59, i1 true) #21, !range !73
  br i1 %60, label %62, label %44

62:                                               ; preds = %56
  %63 = load i64, i64* %34, align 8
  br label %64

64:                                               ; preds = %62, %33
  %65 = phi i64 [ %63, %62 ], [ %35, %33 ]
  %66 = and i64 %38, 4095
  %67 = xor i64 %66, 4095
  %68 = and i64 %65, %67
  store i64 %68, i64* %34, align 8
  %69 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %70 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %71 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %73 = bitcast %"class.rx::ContextImpl"* %71 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %74 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %73, align 8
  %75 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %74, i64 51
  %76 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %75, align 8
  %77 = tail call i32 %76(%"class.rx::ContextImpl"* %71, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %69, %"class.angle::BitSetT.168"* dereferenceable(8) %72) #21
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %24, label %79

79:                                               ; preds = %64
  %80 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %80, align 8
  %81 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %70, align 8
  %82 = bitcast %"class.rx::ContextImpl"* %81 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32)***
  %83 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32)*** %82, align 8
  %84 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32)** %83, i64 24
  %85 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32)** %84, align 8
  %86 = tail call i32 %85(%"class.rx::ContextImpl"* %81, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, i32 %4) #21
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %24, label %88

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 9
  %90 = load i8, i8* %89, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 86, i32 0, i32 1
  %94 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %93, align 8
  tail call void @_ZN2gl17TransformFeedback15onVerticesDrawnEPKNS_7ContextEii(%"class.gl::TransformFeedback"* %94, %"class.gl::Context"* %0, i32 %3, i32 %4) #21
  br label %95

95:                                               ; preds = %88, %92
  %96 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 11, i32 0
  %97 = load i64, i64* %96, align 8, !noalias !133
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %95
  %100 = tail call i64 @llvm.cttz.i64(i64 %97, i1 true) #21, !range !73
  %101 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  br label %118

102:                                              ; preds = %126, %95
  %103 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 0, i32 0
  %104 = load i64, i64* %103, align 8, !noalias !136
  %105 = icmp eq i64 %104, 0
  %106 = tail call i64 @llvm.cttz.i64(i64 %104, i1 true) #21, !range !73
  br i1 %105, label %107, label %113

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 1, i32 0
  %109 = load i64, i64* %108, align 8, !noalias !136
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %24, label %111

111:                                              ; preds = %107
  %112 = tail call i64 @llvm.cttz.i64(i64 %109, i1 true) #21, !range !73
  br label %113

113:                                              ; preds = %111, %102
  %114 = phi i64 [ 0, %102 ], [ 1, %111 ]
  %115 = phi i64 [ %104, %102 ], [ %109, %111 ]
  %116 = phi i64 [ %106, %102 ], [ %112, %111 ]
  %117 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 77, i32 0, i32 0
  br label %132

118:                                              ; preds = %126, %99
  %119 = phi i64 [ %100, %99 ], [ %131, %126 ]
  %120 = phi i64 [ %97, %99 ], [ %129, %126 ]
  %121 = tail call dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State29getIndexedShaderStorageBufferEm(%"class.gl::State"* %101, i64 %119) #21
  %122 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %121, i64 0, i32 0, i32 0, i32 1
  %123 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %122, align 8
  %124 = icmp eq %"class.gl::Buffer"* %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %118
  tail call void @_ZN2gl6Buffer13onDataChangedEv(%"class.gl::Buffer"* nonnull %123) #21
  br label %126

126:                                              ; preds = %125, %118
  %127 = shl i64 1, %119
  %128 = xor i64 %127, -1
  %129 = and i64 %120, %128
  %130 = icmp eq i64 %129, 0
  %131 = tail call i64 @llvm.cttz.i64(i64 %129, i1 true) #21, !range !73
  br i1 %130, label %102, label %118

132:                                              ; preds = %159, %113
  %133 = phi i64 [ %116, %113 ], [ %162, %159 ]
  %134 = phi i64 [ %115, %113 ], [ %161, %159 ]
  %135 = phi i64 [ %114, %113 ], [ %160, %159 ]
  %136 = shl i64 %135, 6
  %137 = add i64 %136, %133
  %138 = load %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"** %117, align 8
  %139 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %138, i64 %137, i32 0, i32 0, i32 1
  %140 = load %"class.gl::Texture"*, %"class.gl::Texture"** %139, align 8
  %141 = icmp eq %"class.gl::Texture"* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %132
  %143 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %140, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %143, i32 1) #21
  br label %144

144:                                              ; preds = %142, %132
  %145 = shl i64 1, %133
  %146 = xor i64 %145, -1
  %147 = and i64 %134, %146
  %148 = icmp eq i64 %147, 0
  %149 = tail call i64 @llvm.cttz.i64(i64 %147, i1 true) #21, !range !73
  br i1 %148, label %150, label %159

150:                                              ; preds = %144
  %151 = add i64 %135, 1
  %152 = icmp ult i64 %151, 2
  br i1 %152, label %153, label %24

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 %151, i32 0
  %155 = load i64, i64* %154, align 8, !noalias !139
  %156 = icmp eq i64 %155, 0
  %157 = tail call i64 @llvm.cttz.i64(i64 %155, i1 true) #21, !range !73
  %158 = select i1 %156, i64 0, i64 %157
  br label %159

159:                                              ; preds = %153, %144
  %160 = phi i64 [ %151, %153 ], [ %135, %144 ]
  %161 = phi i64 [ %155, %153 ], [ %147, %144 ]
  %162 = phi i64 [ %158, %153 ], [ %149, %144 ]
  %163 = icmp eq i64 %161, 0
  br i1 %163, label %24, label %132
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context17noopDrawInstancedENS_13PrimitiveModeEii(%"class.gl::Context"* nocapture readonly, i8 zeroext, i32, i32) local_unnamed_addr #9 align 2 {
  %5 = icmp eq i32 %3, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 18
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = zext i8 %1 to i64
  %12 = getelementptr inbounds %"class.angle::PackedEnumMap.1054", %"class.angle::PackedEnumMap.1054"* @_ZN2glL23kMinimumPrimitiveCountsE, i64 0, i32 0, i32 0, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, %2
  br label %15

15:                                               ; preds = %10, %6, %4
  %16 = phi i1 [ true, %4 ], [ %14, %10 ], [ true, %6 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21drawElementsInstancedENS_13PrimitiveModeEiNS_16DrawElementsTypeEPKvi(%"class.gl::Context"*, i8 zeroext, i32, i64, i8*, i32) local_unnamed_addr #1 align 2 {
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 18
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = zext i8 %1 to i64
  %14 = getelementptr inbounds %"class.angle::PackedEnumMap.1054", %"class.angle::PackedEnumMap.1054"* @_ZN2glL23kMinimumPrimitiveCountsE, i64 0, i32 0, i32 0, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, %2
  br i1 %16, label %17, label %26

17:                                               ; preds = %8, %6, %12
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %19 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %18, align 8
  %20 = bitcast %"class.rx::ContextImpl"* %19 to i32 (%"class.rx::ContextImpl"*)***
  %21 = load i32 (%"class.rx::ContextImpl"*)**, i32 (%"class.rx::ContextImpl"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %21, i64 47
  %23 = load i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %22, align 8
  %24 = tail call i32 %23(%"class.rx::ContextImpl"* %19) #21
  br label %25

25:                                               ; preds = %45, %153, %144, %80, %65, %30, %101, %17
  ret void

26:                                               ; preds = %12
  %27 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %28 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %27, align 8
  %29 = icmp eq %"class.gl::GLES1Renderer"* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %32 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %28, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %31) #21
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %25, label %34

34:                                               ; preds = %30, %26
  %35 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %36 = load i64, i64* %35, align 8, !noalias !142
  %37 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %38 = load i64, i64* %37, align 8, !noalias !142
  %39 = and i64 %38, %36
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %65, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %43 = tail call i64 @llvm.cttz.i64(i64 %39, i1 true) #21, !range !73
  %44 = bitcast %"class.gl::State"* %42 to i8*
  br label %45

45:                                               ; preds = %57, %41
  %46 = phi i64 [ %43, %41 ], [ %62, %57 ]
  %47 = phi i64 [ %39, %41 ], [ %60, %57 ]
  %48 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %46, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds i8, i8* %44, i64 %49
  %51 = bitcast i8* %50 to %"class.gl::State"*
  %52 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %46, i32 0
  %53 = bitcast i64* %52 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %54 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %53, align 16
  %55 = tail call i32 %54(%"class.gl::State"* %51, %"class.gl::Context"* %0, i32 4) #21
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %25, label %57

57:                                               ; preds = %45
  %58 = shl i64 1, %46
  %59 = xor i64 %58, -1
  %60 = and i64 %47, %59
  %61 = icmp eq i64 %60, 0
  %62 = tail call i64 @llvm.cttz.i64(i64 %60, i1 true) #21, !range !73
  br i1 %61, label %63, label %45

63:                                               ; preds = %57
  %64 = load i64, i64* %35, align 8
  br label %65

65:                                               ; preds = %63, %34
  %66 = phi i64 [ %64, %63 ], [ %36, %34 ]
  %67 = and i64 %39, 4095
  %68 = xor i64 %67, 4095
  %69 = and i64 %66, %68
  store i64 %69, i64* %35, align 8
  %70 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %71 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %72 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %71, align 8
  %73 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %74 = bitcast %"class.rx::ContextImpl"* %72 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %75 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %74, align 8
  %76 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %75, i64 51
  %77 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %76, align 8
  %78 = tail call i32 %77(%"class.rx::ContextImpl"* %72, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %70, %"class.angle::BitSetT.168"* dereferenceable(8) %73) #21
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %25, label %80

80:                                               ; preds = %65
  %81 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %81, align 8
  %82 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %71, align 8
  %83 = bitcast %"class.rx::ContextImpl"* %82 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)***
  %84 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)*** %83, align 8
  %85 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)** %84, i64 28
  %86 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)** %85, align 8
  %87 = tail call i32 %86(%"class.rx::ContextImpl"* %82, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i64 %3, i8* %4, i32 %5) #21
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %25, label %89

89:                                               ; preds = %80
  %90 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 11, i32 0
  %91 = load i64, i64* %90, align 8, !noalias !145
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = tail call i64 @llvm.cttz.i64(i64 %91, i1 true) #21, !range !73
  %95 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  br label %112

96:                                               ; preds = %120, %89
  %97 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 0, i32 0
  %98 = load i64, i64* %97, align 8, !noalias !148
  %99 = icmp eq i64 %98, 0
  %100 = tail call i64 @llvm.cttz.i64(i64 %98, i1 true) #21, !range !73
  br i1 %99, label %101, label %107

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 1, i32 0
  %103 = load i64, i64* %102, align 8, !noalias !148
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %25, label %105

105:                                              ; preds = %101
  %106 = tail call i64 @llvm.cttz.i64(i64 %103, i1 true) #21, !range !73
  br label %107

107:                                              ; preds = %105, %96
  %108 = phi i64 [ 0, %96 ], [ 1, %105 ]
  %109 = phi i64 [ %98, %96 ], [ %103, %105 ]
  %110 = phi i64 [ %100, %96 ], [ %106, %105 ]
  %111 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 77, i32 0, i32 0
  br label %126

112:                                              ; preds = %120, %93
  %113 = phi i64 [ %94, %93 ], [ %125, %120 ]
  %114 = phi i64 [ %91, %93 ], [ %123, %120 ]
  %115 = tail call dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State29getIndexedShaderStorageBufferEm(%"class.gl::State"* %95, i64 %113) #21
  %116 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %115, i64 0, i32 0, i32 0, i32 1
  %117 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %116, align 8
  %118 = icmp eq %"class.gl::Buffer"* %117, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %112
  tail call void @_ZN2gl6Buffer13onDataChangedEv(%"class.gl::Buffer"* nonnull %117) #21
  br label %120

120:                                              ; preds = %119, %112
  %121 = shl i64 1, %113
  %122 = xor i64 %121, -1
  %123 = and i64 %114, %122
  %124 = icmp eq i64 %123, 0
  %125 = tail call i64 @llvm.cttz.i64(i64 %123, i1 true) #21, !range !73
  br i1 %124, label %96, label %112

126:                                              ; preds = %153, %107
  %127 = phi i64 [ %110, %107 ], [ %156, %153 ]
  %128 = phi i64 [ %109, %107 ], [ %155, %153 ]
  %129 = phi i64 [ %108, %107 ], [ %154, %153 ]
  %130 = shl i64 %129, 6
  %131 = add i64 %130, %127
  %132 = load %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"** %111, align 8
  %133 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %132, i64 %131, i32 0, i32 0, i32 1
  %134 = load %"class.gl::Texture"*, %"class.gl::Texture"** %133, align 8
  %135 = icmp eq %"class.gl::Texture"* %134, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %126
  %137 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %134, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %137, i32 1) #21
  br label %138

138:                                              ; preds = %136, %126
  %139 = shl i64 1, %127
  %140 = xor i64 %139, -1
  %141 = and i64 %128, %140
  %142 = icmp eq i64 %141, 0
  %143 = tail call i64 @llvm.cttz.i64(i64 %141, i1 true) #21, !range !73
  br i1 %142, label %144, label %153

144:                                              ; preds = %138
  %145 = add i64 %129, 1
  %146 = icmp ult i64 %145, 2
  br i1 %146, label %147, label %25

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 %145, i32 0
  %149 = load i64, i64* %148, align 8, !noalias !151
  %150 = icmp eq i64 %149, 0
  %151 = tail call i64 @llvm.cttz.i64(i64 %149, i1 true) #21, !range !73
  %152 = select i1 %150, i64 0, i64 %151
  br label %153

153:                                              ; preds = %147, %138
  %154 = phi i64 [ %145, %147 ], [ %129, %138 ]
  %155 = phi i64 [ %149, %147 ], [ %141, %138 ]
  %156 = phi i64 [ %152, %147 ], [ %143, %138 ]
  %157 = icmp eq i64 %155, 0
  br i1 %157, label %25, label %126
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context22drawElementsBaseVertexENS_13PrimitiveModeEiNS_16DrawElementsTypeEPKvi(%"class.gl::Context"*, i8 zeroext, i32, i64, i8*, i32) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 18
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = zext i8 %1 to i64
  %12 = getelementptr inbounds %"class.angle::PackedEnumMap.1054", %"class.angle::PackedEnumMap.1054"* @_ZN2glL23kMinimumPrimitiveCountsE, i64 0, i32 0, i32 0, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, %2
  br i1 %14, label %15, label %24

15:                                               ; preds = %6, %10
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %17 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %16, align 8
  %18 = bitcast %"class.rx::ContextImpl"* %17 to i32 (%"class.rx::ContextImpl"*)***
  %19 = load i32 (%"class.rx::ContextImpl"*)**, i32 (%"class.rx::ContextImpl"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %19, i64 47
  %21 = load i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %20, align 8
  %22 = tail call i32 %21(%"class.rx::ContextImpl"* %17) #21
  br label %23

23:                                               ; preds = %43, %151, %142, %78, %63, %28, %99, %15
  ret void

24:                                               ; preds = %10
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %26 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %25, align 8
  %27 = icmp eq %"class.gl::GLES1Renderer"* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %30 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %26, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %29) #21
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %23, label %32

32:                                               ; preds = %28, %24
  %33 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %34 = load i64, i64* %33, align 8, !noalias !154
  %35 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %36 = load i64, i64* %35, align 8, !noalias !154
  %37 = and i64 %36, %34
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %63, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %41 = tail call i64 @llvm.cttz.i64(i64 %37, i1 true) #21, !range !73
  %42 = bitcast %"class.gl::State"* %40 to i8*
  br label %43

43:                                               ; preds = %55, %39
  %44 = phi i64 [ %41, %39 ], [ %60, %55 ]
  %45 = phi i64 [ %37, %39 ], [ %58, %55 ]
  %46 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %44, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds i8, i8* %42, i64 %47
  %49 = bitcast i8* %48 to %"class.gl::State"*
  %50 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %44, i32 0
  %51 = bitcast i64* %50 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %52 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %51, align 16
  %53 = tail call i32 %52(%"class.gl::State"* %49, %"class.gl::Context"* %0, i32 4) #21
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %23, label %55

55:                                               ; preds = %43
  %56 = shl i64 1, %44
  %57 = xor i64 %56, -1
  %58 = and i64 %45, %57
  %59 = icmp eq i64 %58, 0
  %60 = tail call i64 @llvm.cttz.i64(i64 %58, i1 true) #21, !range !73
  br i1 %59, label %61, label %43

61:                                               ; preds = %55
  %62 = load i64, i64* %33, align 8
  br label %63

63:                                               ; preds = %61, %32
  %64 = phi i64 [ %62, %61 ], [ %34, %32 ]
  %65 = and i64 %37, 4095
  %66 = xor i64 %65, 4095
  %67 = and i64 %64, %66
  store i64 %67, i64* %33, align 8
  %68 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %69 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %70 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %69, align 8
  %71 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %72 = bitcast %"class.rx::ContextImpl"* %70 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %73 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %72, align 8
  %74 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %73, i64 51
  %75 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %74, align 8
  %76 = tail call i32 %75(%"class.rx::ContextImpl"* %70, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %68, %"class.angle::BitSetT.168"* dereferenceable(8) %71) #21
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %23, label %78

78:                                               ; preds = %63
  %79 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %79, align 8
  %80 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %69, align 8
  %81 = bitcast %"class.rx::ContextImpl"* %80 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)***
  %82 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)*** %81, align 8
  %83 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)** %82, i64 27
  %84 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)** %83, align 8
  %85 = tail call i32 %84(%"class.rx::ContextImpl"* %80, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i64 %3, i8* %4, i32 %5) #21
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %23, label %87

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 11, i32 0
  %89 = load i64, i64* %88, align 8, !noalias !157
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %87
  %92 = tail call i64 @llvm.cttz.i64(i64 %89, i1 true) #21, !range !73
  %93 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  br label %110

94:                                               ; preds = %118, %87
  %95 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 0, i32 0
  %96 = load i64, i64* %95, align 8, !noalias !160
  %97 = icmp eq i64 %96, 0
  %98 = tail call i64 @llvm.cttz.i64(i64 %96, i1 true) #21, !range !73
  br i1 %97, label %99, label %105

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 1, i32 0
  %101 = load i64, i64* %100, align 8, !noalias !160
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %23, label %103

103:                                              ; preds = %99
  %104 = tail call i64 @llvm.cttz.i64(i64 %101, i1 true) #21, !range !73
  br label %105

105:                                              ; preds = %103, %94
  %106 = phi i64 [ 0, %94 ], [ 1, %103 ]
  %107 = phi i64 [ %96, %94 ], [ %101, %103 ]
  %108 = phi i64 [ %98, %94 ], [ %104, %103 ]
  %109 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 77, i32 0, i32 0
  br label %124

110:                                              ; preds = %118, %91
  %111 = phi i64 [ %92, %91 ], [ %123, %118 ]
  %112 = phi i64 [ %89, %91 ], [ %121, %118 ]
  %113 = tail call dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State29getIndexedShaderStorageBufferEm(%"class.gl::State"* %93, i64 %111) #21
  %114 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %113, i64 0, i32 0, i32 0, i32 1
  %115 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %114, align 8
  %116 = icmp eq %"class.gl::Buffer"* %115, null
  br i1 %116, label %118, label %117

117:                                              ; preds = %110
  tail call void @_ZN2gl6Buffer13onDataChangedEv(%"class.gl::Buffer"* nonnull %115) #21
  br label %118

118:                                              ; preds = %117, %110
  %119 = shl i64 1, %111
  %120 = xor i64 %119, -1
  %121 = and i64 %112, %120
  %122 = icmp eq i64 %121, 0
  %123 = tail call i64 @llvm.cttz.i64(i64 %121, i1 true) #21, !range !73
  br i1 %122, label %94, label %110

124:                                              ; preds = %151, %105
  %125 = phi i64 [ %108, %105 ], [ %154, %151 ]
  %126 = phi i64 [ %107, %105 ], [ %153, %151 ]
  %127 = phi i64 [ %106, %105 ], [ %152, %151 ]
  %128 = shl i64 %127, 6
  %129 = add i64 %128, %125
  %130 = load %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"** %109, align 8
  %131 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %130, i64 %129, i32 0, i32 0, i32 1
  %132 = load %"class.gl::Texture"*, %"class.gl::Texture"** %131, align 8
  %133 = icmp eq %"class.gl::Texture"* %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %124
  %135 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %132, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %135, i32 1) #21
  br label %136

136:                                              ; preds = %134, %124
  %137 = shl i64 1, %125
  %138 = xor i64 %137, -1
  %139 = and i64 %126, %138
  %140 = icmp eq i64 %139, 0
  %141 = tail call i64 @llvm.cttz.i64(i64 %139, i1 true) #21, !range !73
  br i1 %140, label %142, label %151

142:                                              ; preds = %136
  %143 = add i64 %127, 1
  %144 = icmp ult i64 %143, 2
  br i1 %144, label %145, label %23

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 %143, i32 0
  %147 = load i64, i64* %146, align 8, !noalias !163
  %148 = icmp eq i64 %147, 0
  %149 = tail call i64 @llvm.cttz.i64(i64 %147, i1 true) #21, !range !73
  %150 = select i1 %148, i64 0, i64 %149
  br label %151

151:                                              ; preds = %145, %136
  %152 = phi i64 [ %143, %145 ], [ %127, %136 ]
  %153 = phi i64 [ %147, %145 ], [ %139, %136 ]
  %154 = phi i64 [ %150, %145 ], [ %141, %136 ]
  %155 = icmp eq i64 %153, 0
  br i1 %155, label %23, label %124
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context31drawElementsInstancedBaseVertexENS_13PrimitiveModeEiNS_16DrawElementsTypeEPKvii(%"class.gl::Context"*, i8 zeroext, i32, i64, i8*, i32, i32) local_unnamed_addr #1 align 2 {
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 18
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = zext i8 %1 to i64
  %15 = getelementptr inbounds %"class.angle::PackedEnumMap.1054", %"class.angle::PackedEnumMap.1054"* @_ZN2glL23kMinimumPrimitiveCountsE, i64 0, i32 0, i32 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, %2
  br i1 %17, label %18, label %27

18:                                               ; preds = %9, %7, %13
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %20 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %19, align 8
  %21 = bitcast %"class.rx::ContextImpl"* %20 to i32 (%"class.rx::ContextImpl"*)***
  %22 = load i32 (%"class.rx::ContextImpl"*)**, i32 (%"class.rx::ContextImpl"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %22, i64 47
  %24 = load i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %23, align 8
  %25 = tail call i32 %24(%"class.rx::ContextImpl"* %20) #21
  br label %26

26:                                               ; preds = %46, %154, %145, %81, %66, %31, %102, %18
  ret void

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %29 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %28, align 8
  %30 = icmp eq %"class.gl::GLES1Renderer"* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %33 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %29, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %32) #21
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %26, label %35

35:                                               ; preds = %31, %27
  %36 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %37 = load i64, i64* %36, align 8, !noalias !166
  %38 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %39 = load i64, i64* %38, align 8, !noalias !166
  %40 = and i64 %39, %37
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %66, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %44 = tail call i64 @llvm.cttz.i64(i64 %40, i1 true) #21, !range !73
  %45 = bitcast %"class.gl::State"* %43 to i8*
  br label %46

46:                                               ; preds = %58, %42
  %47 = phi i64 [ %44, %42 ], [ %63, %58 ]
  %48 = phi i64 [ %40, %42 ], [ %61, %58 ]
  %49 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %47, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %45, i64 %50
  %52 = bitcast i8* %51 to %"class.gl::State"*
  %53 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %47, i32 0
  %54 = bitcast i64* %53 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %55 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %54, align 16
  %56 = tail call i32 %55(%"class.gl::State"* %52, %"class.gl::Context"* %0, i32 4) #21
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %26, label %58

58:                                               ; preds = %46
  %59 = shl i64 1, %47
  %60 = xor i64 %59, -1
  %61 = and i64 %48, %60
  %62 = icmp eq i64 %61, 0
  %63 = tail call i64 @llvm.cttz.i64(i64 %61, i1 true) #21, !range !73
  br i1 %62, label %64, label %46

64:                                               ; preds = %58
  %65 = load i64, i64* %36, align 8
  br label %66

66:                                               ; preds = %64, %35
  %67 = phi i64 [ %65, %64 ], [ %37, %35 ]
  %68 = and i64 %40, 4095
  %69 = xor i64 %68, 4095
  %70 = and i64 %67, %69
  store i64 %70, i64* %36, align 8
  %71 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %72 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %73 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %72, align 8
  %74 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %75 = bitcast %"class.rx::ContextImpl"* %73 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %76 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %75, align 8
  %77 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %76, i64 51
  %78 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %77, align 8
  %79 = tail call i32 %78(%"class.rx::ContextImpl"* %73, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %71, %"class.angle::BitSetT.168"* dereferenceable(8) %74) #21
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %26, label %81

81:                                               ; preds = %66
  %82 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %82, align 8
  %83 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %72, align 8
  %84 = bitcast %"class.rx::ContextImpl"* %83 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32)***
  %85 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32)*** %84, align 8
  %86 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32)** %85, i64 29
  %87 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32)** %86, align 8
  %88 = tail call i32 %87(%"class.rx::ContextImpl"* %83, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i64 %3, i8* %4, i32 %5, i32 %6) #21
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %26, label %90

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 11, i32 0
  %92 = load i64, i64* %91, align 8, !noalias !169
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %90
  %95 = tail call i64 @llvm.cttz.i64(i64 %92, i1 true) #21, !range !73
  %96 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  br label %113

97:                                               ; preds = %121, %90
  %98 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 0, i32 0
  %99 = load i64, i64* %98, align 8, !noalias !172
  %100 = icmp eq i64 %99, 0
  %101 = tail call i64 @llvm.cttz.i64(i64 %99, i1 true) #21, !range !73
  br i1 %100, label %102, label %108

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 1, i32 0
  %104 = load i64, i64* %103, align 8, !noalias !172
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %26, label %106

106:                                              ; preds = %102
  %107 = tail call i64 @llvm.cttz.i64(i64 %104, i1 true) #21, !range !73
  br label %108

108:                                              ; preds = %106, %97
  %109 = phi i64 [ 0, %97 ], [ 1, %106 ]
  %110 = phi i64 [ %99, %97 ], [ %104, %106 ]
  %111 = phi i64 [ %101, %97 ], [ %107, %106 ]
  %112 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 77, i32 0, i32 0
  br label %127

113:                                              ; preds = %121, %94
  %114 = phi i64 [ %95, %94 ], [ %126, %121 ]
  %115 = phi i64 [ %92, %94 ], [ %124, %121 ]
  %116 = tail call dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State29getIndexedShaderStorageBufferEm(%"class.gl::State"* %96, i64 %114) #21
  %117 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %116, i64 0, i32 0, i32 0, i32 1
  %118 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %117, align 8
  %119 = icmp eq %"class.gl::Buffer"* %118, null
  br i1 %119, label %121, label %120

120:                                              ; preds = %113
  tail call void @_ZN2gl6Buffer13onDataChangedEv(%"class.gl::Buffer"* nonnull %118) #21
  br label %121

121:                                              ; preds = %120, %113
  %122 = shl i64 1, %114
  %123 = xor i64 %122, -1
  %124 = and i64 %115, %123
  %125 = icmp eq i64 %124, 0
  %126 = tail call i64 @llvm.cttz.i64(i64 %124, i1 true) #21, !range !73
  br i1 %125, label %97, label %113

127:                                              ; preds = %154, %108
  %128 = phi i64 [ %111, %108 ], [ %157, %154 ]
  %129 = phi i64 [ %110, %108 ], [ %156, %154 ]
  %130 = phi i64 [ %109, %108 ], [ %155, %154 ]
  %131 = shl i64 %130, 6
  %132 = add i64 %131, %128
  %133 = load %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"** %112, align 8
  %134 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %133, i64 %132, i32 0, i32 0, i32 1
  %135 = load %"class.gl::Texture"*, %"class.gl::Texture"** %134, align 8
  %136 = icmp eq %"class.gl::Texture"* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %127
  %138 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %135, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %138, i32 1) #21
  br label %139

139:                                              ; preds = %137, %127
  %140 = shl i64 1, %128
  %141 = xor i64 %140, -1
  %142 = and i64 %129, %141
  %143 = icmp eq i64 %142, 0
  %144 = tail call i64 @llvm.cttz.i64(i64 %142, i1 true) #21, !range !73
  br i1 %143, label %145, label %154

145:                                              ; preds = %139
  %146 = add i64 %130, 1
  %147 = icmp ult i64 %146, 2
  br i1 %147, label %148, label %26

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 %146, i32 0
  %150 = load i64, i64* %149, align 8, !noalias !175
  %151 = icmp eq i64 %150, 0
  %152 = tail call i64 @llvm.cttz.i64(i64 %150, i1 true) #21, !range !73
  %153 = select i1 %151, i64 0, i64 %152
  br label %154

154:                                              ; preds = %148, %139
  %155 = phi i64 [ %146, %148 ], [ %130, %139 ]
  %156 = phi i64 [ %150, %148 ], [ %142, %139 ]
  %157 = phi i64 [ %153, %148 ], [ %144, %139 ]
  %158 = icmp eq i64 %156, 0
  br i1 %158, label %26, label %127
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17drawRangeElementsENS_13PrimitiveModeEjjiNS_16DrawElementsTypeEPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i64, i8*) local_unnamed_addr #1 align 2 {
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 18
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = zext i8 %1 to i64
  %13 = getelementptr inbounds %"class.angle::PackedEnumMap.1054", %"class.angle::PackedEnumMap.1054"* @_ZN2glL23kMinimumPrimitiveCountsE, i64 0, i32 0, i32 0, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %4
  br i1 %15, label %16, label %25

16:                                               ; preds = %7, %11
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %18 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %17, align 8
  %19 = bitcast %"class.rx::ContextImpl"* %18 to i32 (%"class.rx::ContextImpl"*)***
  %20 = load i32 (%"class.rx::ContextImpl"*)**, i32 (%"class.rx::ContextImpl"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %20, i64 47
  %22 = load i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %21, align 8
  %23 = tail call i32 %22(%"class.rx::ContextImpl"* %18) #21
  br label %24

24:                                               ; preds = %44, %152, %143, %79, %64, %29, %100, %16
  ret void

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %27 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %26, align 8
  %28 = icmp eq %"class.gl::GLES1Renderer"* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %31 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %27, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %30) #21
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %24, label %33

33:                                               ; preds = %29, %25
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %35 = load i64, i64* %34, align 8, !noalias !178
  %36 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %37 = load i64, i64* %36, align 8, !noalias !178
  %38 = and i64 %37, %35
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %64, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %42 = tail call i64 @llvm.cttz.i64(i64 %38, i1 true) #21, !range !73
  %43 = bitcast %"class.gl::State"* %41 to i8*
  br label %44

44:                                               ; preds = %56, %40
  %45 = phi i64 [ %42, %40 ], [ %61, %56 ]
  %46 = phi i64 [ %38, %40 ], [ %59, %56 ]
  %47 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %45, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds i8, i8* %43, i64 %48
  %50 = bitcast i8* %49 to %"class.gl::State"*
  %51 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %45, i32 0
  %52 = bitcast i64* %51 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %53 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %52, align 16
  %54 = tail call i32 %53(%"class.gl::State"* %50, %"class.gl::Context"* %0, i32 4) #21
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %24, label %56

56:                                               ; preds = %44
  %57 = shl i64 1, %45
  %58 = xor i64 %57, -1
  %59 = and i64 %46, %58
  %60 = icmp eq i64 %59, 0
  %61 = tail call i64 @llvm.cttz.i64(i64 %59, i1 true) #21, !range !73
  br i1 %60, label %62, label %44

62:                                               ; preds = %56
  %63 = load i64, i64* %34, align 8
  br label %64

64:                                               ; preds = %62, %33
  %65 = phi i64 [ %63, %62 ], [ %35, %33 ]
  %66 = and i64 %38, 4095
  %67 = xor i64 %66, 4095
  %68 = and i64 %65, %67
  store i64 %68, i64* %34, align 8
  %69 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %70 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %71 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %73 = bitcast %"class.rx::ContextImpl"* %71 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %74 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %73, align 8
  %75 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %74, i64 51
  %76 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %75, align 8
  %77 = tail call i32 %76(%"class.rx::ContextImpl"* %71, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %69, %"class.angle::BitSetT.168"* dereferenceable(8) %72) #21
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %24, label %79

79:                                               ; preds = %64
  %80 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %80, align 8
  %81 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %70, align 8
  %82 = bitcast %"class.rx::ContextImpl"* %81 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*)***
  %83 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*)*** %82, align 8
  %84 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*)** %83, i64 31
  %85 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*)** %84, align 8
  %86 = tail call i32 %85(%"class.rx::ContextImpl"* %81, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, i32 %4, i64 %5, i8* %6) #21
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %24, label %88

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 11, i32 0
  %90 = load i64, i64* %89, align 8, !noalias !181
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %88
  %93 = tail call i64 @llvm.cttz.i64(i64 %90, i1 true) #21, !range !73
  %94 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  br label %111

95:                                               ; preds = %119, %88
  %96 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 0, i32 0
  %97 = load i64, i64* %96, align 8, !noalias !184
  %98 = icmp eq i64 %97, 0
  %99 = tail call i64 @llvm.cttz.i64(i64 %97, i1 true) #21, !range !73
  br i1 %98, label %100, label %106

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 1, i32 0
  %102 = load i64, i64* %101, align 8, !noalias !184
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %24, label %104

104:                                              ; preds = %100
  %105 = tail call i64 @llvm.cttz.i64(i64 %102, i1 true) #21, !range !73
  br label %106

106:                                              ; preds = %104, %95
  %107 = phi i64 [ 0, %95 ], [ 1, %104 ]
  %108 = phi i64 [ %97, %95 ], [ %102, %104 ]
  %109 = phi i64 [ %99, %95 ], [ %105, %104 ]
  %110 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 77, i32 0, i32 0
  br label %125

111:                                              ; preds = %119, %92
  %112 = phi i64 [ %93, %92 ], [ %124, %119 ]
  %113 = phi i64 [ %90, %92 ], [ %122, %119 ]
  %114 = tail call dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State29getIndexedShaderStorageBufferEm(%"class.gl::State"* %94, i64 %112) #21
  %115 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %114, i64 0, i32 0, i32 0, i32 1
  %116 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %115, align 8
  %117 = icmp eq %"class.gl::Buffer"* %116, null
  br i1 %117, label %119, label %118

118:                                              ; preds = %111
  tail call void @_ZN2gl6Buffer13onDataChangedEv(%"class.gl::Buffer"* nonnull %116) #21
  br label %119

119:                                              ; preds = %118, %111
  %120 = shl i64 1, %112
  %121 = xor i64 %120, -1
  %122 = and i64 %113, %121
  %123 = icmp eq i64 %122, 0
  %124 = tail call i64 @llvm.cttz.i64(i64 %122, i1 true) #21, !range !73
  br i1 %123, label %95, label %111

125:                                              ; preds = %152, %106
  %126 = phi i64 [ %109, %106 ], [ %155, %152 ]
  %127 = phi i64 [ %108, %106 ], [ %154, %152 ]
  %128 = phi i64 [ %107, %106 ], [ %153, %152 ]
  %129 = shl i64 %128, 6
  %130 = add i64 %129, %126
  %131 = load %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"** %110, align 8
  %132 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %131, i64 %130, i32 0, i32 0, i32 1
  %133 = load %"class.gl::Texture"*, %"class.gl::Texture"** %132, align 8
  %134 = icmp eq %"class.gl::Texture"* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %125
  %136 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %133, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %136, i32 1) #21
  br label %137

137:                                              ; preds = %135, %125
  %138 = shl i64 1, %126
  %139 = xor i64 %138, -1
  %140 = and i64 %127, %139
  %141 = icmp eq i64 %140, 0
  %142 = tail call i64 @llvm.cttz.i64(i64 %140, i1 true) #21, !range !73
  br i1 %141, label %143, label %152

143:                                              ; preds = %137
  %144 = add i64 %128, 1
  %145 = icmp ult i64 %144, 2
  br i1 %145, label %146, label %24

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 %144, i32 0
  %148 = load i64, i64* %147, align 8, !noalias !187
  %149 = icmp eq i64 %148, 0
  %150 = tail call i64 @llvm.cttz.i64(i64 %148, i1 true) #21, !range !73
  %151 = select i1 %149, i64 0, i64 %150
  br label %152

152:                                              ; preds = %146, %137
  %153 = phi i64 [ %144, %146 ], [ %128, %137 ]
  %154 = phi i64 [ %148, %146 ], [ %140, %137 ]
  %155 = phi i64 [ %151, %146 ], [ %142, %137 ]
  %156 = icmp eq i64 %154, 0
  br i1 %156, label %24, label %125
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context27drawRangeElementsBaseVertexENS_13PrimitiveModeEjjiNS_16DrawElementsTypeEPKvi(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i64, i8*, i32) local_unnamed_addr #1 align 2 {
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 18
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = zext i8 %1 to i64
  %14 = getelementptr inbounds %"class.angle::PackedEnumMap.1054", %"class.angle::PackedEnumMap.1054"* @_ZN2glL23kMinimumPrimitiveCountsE, i64 0, i32 0, i32 0, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, %4
  br i1 %16, label %17, label %26

17:                                               ; preds = %8, %12
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %19 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %18, align 8
  %20 = bitcast %"class.rx::ContextImpl"* %19 to i32 (%"class.rx::ContextImpl"*)***
  %21 = load i32 (%"class.rx::ContextImpl"*)**, i32 (%"class.rx::ContextImpl"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %21, i64 47
  %23 = load i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %22, align 8
  %24 = tail call i32 %23(%"class.rx::ContextImpl"* %19) #21
  br label %25

25:                                               ; preds = %45, %153, %144, %80, %65, %30, %101, %17
  ret void

26:                                               ; preds = %12
  %27 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %28 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %27, align 8
  %29 = icmp eq %"class.gl::GLES1Renderer"* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %32 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %28, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %31) #21
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %25, label %34

34:                                               ; preds = %30, %26
  %35 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %36 = load i64, i64* %35, align 8, !noalias !190
  %37 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %38 = load i64, i64* %37, align 8, !noalias !190
  %39 = and i64 %38, %36
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %65, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %43 = tail call i64 @llvm.cttz.i64(i64 %39, i1 true) #21, !range !73
  %44 = bitcast %"class.gl::State"* %42 to i8*
  br label %45

45:                                               ; preds = %57, %41
  %46 = phi i64 [ %43, %41 ], [ %62, %57 ]
  %47 = phi i64 [ %39, %41 ], [ %60, %57 ]
  %48 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %46, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds i8, i8* %44, i64 %49
  %51 = bitcast i8* %50 to %"class.gl::State"*
  %52 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %46, i32 0
  %53 = bitcast i64* %52 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %54 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %53, align 16
  %55 = tail call i32 %54(%"class.gl::State"* %51, %"class.gl::Context"* %0, i32 4) #21
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %25, label %57

57:                                               ; preds = %45
  %58 = shl i64 1, %46
  %59 = xor i64 %58, -1
  %60 = and i64 %47, %59
  %61 = icmp eq i64 %60, 0
  %62 = tail call i64 @llvm.cttz.i64(i64 %60, i1 true) #21, !range !73
  br i1 %61, label %63, label %45

63:                                               ; preds = %57
  %64 = load i64, i64* %35, align 8
  br label %65

65:                                               ; preds = %63, %34
  %66 = phi i64 [ %64, %63 ], [ %36, %34 ]
  %67 = and i64 %39, 4095
  %68 = xor i64 %67, 4095
  %69 = and i64 %66, %68
  store i64 %69, i64* %35, align 8
  %70 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %71 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %72 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %71, align 8
  %73 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %74 = bitcast %"class.rx::ContextImpl"* %72 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %75 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %74, align 8
  %76 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %75, i64 51
  %77 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %76, align 8
  %78 = tail call i32 %77(%"class.rx::ContextImpl"* %72, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %70, %"class.angle::BitSetT.168"* dereferenceable(8) %73) #21
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %25, label %80

80:                                               ; preds = %65
  %81 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %81, align 8
  %82 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %71, align 8
  %83 = bitcast %"class.rx::ContextImpl"* %82 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*, i32)***
  %84 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*, i32)*** %83, align 8
  %85 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*, i32)** %84, i64 32
  %86 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*, i32)** %85, align 8
  %87 = tail call i32 %86(%"class.rx::ContextImpl"* %82, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, i32 %4, i64 %5, i8* %6, i32 %7) #21
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %25, label %89

89:                                               ; preds = %80
  %90 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 11, i32 0
  %91 = load i64, i64* %90, align 8, !noalias !193
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = tail call i64 @llvm.cttz.i64(i64 %91, i1 true) #21, !range !73
  %95 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  br label %112

96:                                               ; preds = %120, %89
  %97 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 0, i32 0
  %98 = load i64, i64* %97, align 8, !noalias !196
  %99 = icmp eq i64 %98, 0
  %100 = tail call i64 @llvm.cttz.i64(i64 %98, i1 true) #21, !range !73
  br i1 %99, label %101, label %107

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 1, i32 0
  %103 = load i64, i64* %102, align 8, !noalias !196
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %25, label %105

105:                                              ; preds = %101
  %106 = tail call i64 @llvm.cttz.i64(i64 %103, i1 true) #21, !range !73
  br label %107

107:                                              ; preds = %105, %96
  %108 = phi i64 [ 0, %96 ], [ 1, %105 ]
  %109 = phi i64 [ %98, %96 ], [ %103, %105 ]
  %110 = phi i64 [ %100, %96 ], [ %106, %105 ]
  %111 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 77, i32 0, i32 0
  br label %126

112:                                              ; preds = %120, %93
  %113 = phi i64 [ %94, %93 ], [ %125, %120 ]
  %114 = phi i64 [ %91, %93 ], [ %123, %120 ]
  %115 = tail call dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State29getIndexedShaderStorageBufferEm(%"class.gl::State"* %95, i64 %113) #21
  %116 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %115, i64 0, i32 0, i32 0, i32 1
  %117 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %116, align 8
  %118 = icmp eq %"class.gl::Buffer"* %117, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %112
  tail call void @_ZN2gl6Buffer13onDataChangedEv(%"class.gl::Buffer"* nonnull %117) #21
  br label %120

120:                                              ; preds = %119, %112
  %121 = shl i64 1, %113
  %122 = xor i64 %121, -1
  %123 = and i64 %114, %122
  %124 = icmp eq i64 %123, 0
  %125 = tail call i64 @llvm.cttz.i64(i64 %123, i1 true) #21, !range !73
  br i1 %124, label %96, label %112

126:                                              ; preds = %153, %107
  %127 = phi i64 [ %110, %107 ], [ %156, %153 ]
  %128 = phi i64 [ %109, %107 ], [ %155, %153 ]
  %129 = phi i64 [ %108, %107 ], [ %154, %153 ]
  %130 = shl i64 %129, 6
  %131 = add i64 %130, %127
  %132 = load %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"** %111, align 8
  %133 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %132, i64 %131, i32 0, i32 0, i32 1
  %134 = load %"class.gl::Texture"*, %"class.gl::Texture"** %133, align 8
  %135 = icmp eq %"class.gl::Texture"* %134, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %126
  %137 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %134, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %137, i32 1) #21
  br label %138

138:                                              ; preds = %136, %126
  %139 = shl i64 1, %127
  %140 = xor i64 %139, -1
  %141 = and i64 %128, %140
  %142 = icmp eq i64 %141, 0
  %143 = tail call i64 @llvm.cttz.i64(i64 %141, i1 true) #21, !range !73
  br i1 %142, label %144, label %153

144:                                              ; preds = %138
  %145 = add i64 %129, 1
  %146 = icmp ult i64 %145, 2
  br i1 %146, label %147, label %25

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 %145, i32 0
  %149 = load i64, i64* %148, align 8, !noalias !199
  %150 = icmp eq i64 %149, 0
  %151 = tail call i64 @llvm.cttz.i64(i64 %149, i1 true) #21, !range !73
  %152 = select i1 %150, i64 0, i64 %151
  br label %153

153:                                              ; preds = %147, %138
  %154 = phi i64 [ %145, %147 ], [ %129, %138 ]
  %155 = phi i64 [ %149, %147 ], [ %141, %138 ]
  %156 = phi i64 [ %152, %147 ], [ %143, %138 ]
  %157 = icmp eq i64 %155, 0
  br i1 %157, label %25, label %126
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18drawArraysIndirectENS_13PrimitiveModeEPKv(%"class.gl::Context"*, i8 zeroext, i8*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %5 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %4, align 8
  %6 = icmp eq %"class.gl::GLES1Renderer"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %9 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %5, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %8) #21
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %135, label %11

11:                                               ; preds = %7, %3
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %13 = load i64, i64* %12, align 8, !noalias !202
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %15 = load i64, i64* %14, align 8, !noalias !202
  %16 = and i64 %15, %13
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %42, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %20 = tail call i64 @llvm.cttz.i64(i64 %16, i1 true) #21, !range !73
  %21 = bitcast %"class.gl::State"* %19 to i8*
  br label %22

22:                                               ; preds = %34, %18
  %23 = phi i64 [ %20, %18 ], [ %39, %34 ]
  %24 = phi i64 [ %16, %18 ], [ %37, %34 ]
  %25 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %23, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %21, i64 %26
  %28 = bitcast i8* %27 to %"class.gl::State"*
  %29 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %23, i32 0
  %30 = bitcast i64* %29 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %31 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %30, align 16
  %32 = tail call i32 %31(%"class.gl::State"* %28, %"class.gl::Context"* %0, i32 4) #21
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %135, label %34

34:                                               ; preds = %22
  %35 = shl i64 1, %23
  %36 = xor i64 %35, -1
  %37 = and i64 %24, %36
  %38 = icmp eq i64 %37, 0
  %39 = tail call i64 @llvm.cttz.i64(i64 %37, i1 true) #21, !range !73
  br i1 %38, label %40, label %22

40:                                               ; preds = %34
  %41 = load i64, i64* %12, align 8
  br label %42

42:                                               ; preds = %40, %11
  %43 = phi i64 [ %41, %40 ], [ %13, %11 ]
  %44 = and i64 %16, 4095
  %45 = xor i64 %44, 4095
  %46 = and i64 %43, %45
  store i64 %46, i64* %12, align 8
  %47 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %48 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %49 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %51 = bitcast %"class.rx::ContextImpl"* %49 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %52 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %51, align 8
  %53 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %52, i64 51
  %54 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %53, align 8
  %55 = tail call i32 %54(%"class.rx::ContextImpl"* %49, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %47, %"class.angle::BitSetT.168"* dereferenceable(8) %50) #21
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %135, label %57

57:                                               ; preds = %42
  %58 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %58, align 8
  %59 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %48, align 8
  %60 = bitcast %"class.rx::ContextImpl"* %59 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i8*)***
  %61 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i8*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i8*)*** %60, align 8
  %62 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i8*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i8*)** %61, i64 33
  %63 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i8*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i8*)** %62, align 8
  %64 = tail call i32 %63(%"class.rx::ContextImpl"* %59, %"class.gl::Context"* %0, i8 zeroext %1, i8* %2) #21
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %135, label %66

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 11, i32 0
  %68 = load i64, i64* %67, align 8, !noalias !205
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  %71 = tail call i64 @llvm.cttz.i64(i64 %68, i1 true) #21, !range !73
  %72 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  br label %89

73:                                               ; preds = %97, %66
  %74 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 0, i32 0
  %75 = load i64, i64* %74, align 8, !noalias !208
  %76 = icmp eq i64 %75, 0
  %77 = tail call i64 @llvm.cttz.i64(i64 %75, i1 true) #21, !range !73
  br i1 %76, label %78, label %84

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 1, i32 0
  %80 = load i64, i64* %79, align 8, !noalias !208
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %135, label %82

82:                                               ; preds = %78
  %83 = tail call i64 @llvm.cttz.i64(i64 %80, i1 true) #21, !range !73
  br label %84

84:                                               ; preds = %82, %73
  %85 = phi i64 [ 0, %73 ], [ 1, %82 ]
  %86 = phi i64 [ %75, %73 ], [ %80, %82 ]
  %87 = phi i64 [ %77, %73 ], [ %83, %82 ]
  %88 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 77, i32 0, i32 0
  br label %103

89:                                               ; preds = %97, %70
  %90 = phi i64 [ %71, %70 ], [ %102, %97 ]
  %91 = phi i64 [ %68, %70 ], [ %100, %97 ]
  %92 = tail call dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State29getIndexedShaderStorageBufferEm(%"class.gl::State"* %72, i64 %90) #21
  %93 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %92, i64 0, i32 0, i32 0, i32 1
  %94 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %93, align 8
  %95 = icmp eq %"class.gl::Buffer"* %94, null
  br i1 %95, label %97, label %96

96:                                               ; preds = %89
  tail call void @_ZN2gl6Buffer13onDataChangedEv(%"class.gl::Buffer"* nonnull %94) #21
  br label %97

97:                                               ; preds = %96, %89
  %98 = shl i64 1, %90
  %99 = xor i64 %98, -1
  %100 = and i64 %91, %99
  %101 = icmp eq i64 %100, 0
  %102 = tail call i64 @llvm.cttz.i64(i64 %100, i1 true) #21, !range !73
  br i1 %101, label %73, label %89

103:                                              ; preds = %130, %84
  %104 = phi i64 [ %87, %84 ], [ %133, %130 ]
  %105 = phi i64 [ %86, %84 ], [ %132, %130 ]
  %106 = phi i64 [ %85, %84 ], [ %131, %130 ]
  %107 = shl i64 %106, 6
  %108 = add i64 %107, %104
  %109 = load %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"** %88, align 8
  %110 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %109, i64 %108, i32 0, i32 0, i32 1
  %111 = load %"class.gl::Texture"*, %"class.gl::Texture"** %110, align 8
  %112 = icmp eq %"class.gl::Texture"* %111, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %111, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %114, i32 1) #21
  br label %115

115:                                              ; preds = %113, %103
  %116 = shl i64 1, %104
  %117 = xor i64 %116, -1
  %118 = and i64 %105, %117
  %119 = icmp eq i64 %118, 0
  %120 = tail call i64 @llvm.cttz.i64(i64 %118, i1 true) #21, !range !73
  br i1 %119, label %121, label %130

121:                                              ; preds = %115
  %122 = add i64 %106, 1
  %123 = icmp ult i64 %122, 2
  br i1 %123, label %124, label %135

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 %122, i32 0
  %126 = load i64, i64* %125, align 8, !noalias !211
  %127 = icmp eq i64 %126, 0
  %128 = tail call i64 @llvm.cttz.i64(i64 %126, i1 true) #21, !range !73
  %129 = select i1 %127, i64 0, i64 %128
  br label %130

130:                                              ; preds = %124, %115
  %131 = phi i64 [ %122, %124 ], [ %106, %115 ]
  %132 = phi i64 [ %126, %124 ], [ %118, %115 ]
  %133 = phi i64 [ %129, %124 ], [ %120, %115 ]
  %134 = icmp eq i64 %132, 0
  br i1 %134, label %135, label %103

135:                                              ; preds = %22, %130, %121, %57, %42, %7, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20drawElementsIndirectENS_13PrimitiveModeENS_16DrawElementsTypeEPKv(%"class.gl::Context"*, i8 zeroext, i64, i8*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %6 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %5, align 8
  %7 = icmp eq %"class.gl::GLES1Renderer"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %10 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %6, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %9) #21
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %136, label %12

12:                                               ; preds = %8, %4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %14 = load i64, i64* %13, align 8, !noalias !214
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %16 = load i64, i64* %15, align 8, !noalias !214
  %17 = and i64 %16, %14
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %43, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %21 = tail call i64 @llvm.cttz.i64(i64 %17, i1 true) #21, !range !73
  %22 = bitcast %"class.gl::State"* %20 to i8*
  br label %23

23:                                               ; preds = %35, %19
  %24 = phi i64 [ %21, %19 ], [ %40, %35 ]
  %25 = phi i64 [ %17, %19 ], [ %38, %35 ]
  %26 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %24, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %22, i64 %27
  %29 = bitcast i8* %28 to %"class.gl::State"*
  %30 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %24, i32 0
  %31 = bitcast i64* %30 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %32 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %31, align 16
  %33 = tail call i32 %32(%"class.gl::State"* %29, %"class.gl::Context"* %0, i32 4) #21
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %136, label %35

35:                                               ; preds = %23
  %36 = shl i64 1, %24
  %37 = xor i64 %36, -1
  %38 = and i64 %25, %37
  %39 = icmp eq i64 %38, 0
  %40 = tail call i64 @llvm.cttz.i64(i64 %38, i1 true) #21, !range !73
  br i1 %39, label %41, label %23

41:                                               ; preds = %35
  %42 = load i64, i64* %13, align 8
  br label %43

43:                                               ; preds = %41, %12
  %44 = phi i64 [ %42, %41 ], [ %14, %12 ]
  %45 = and i64 %17, 4095
  %46 = xor i64 %45, 4095
  %47 = and i64 %44, %46
  store i64 %47, i64* %13, align 8
  %48 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %49 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %50 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %52 = bitcast %"class.rx::ContextImpl"* %50 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %53 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %52, align 8
  %54 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %53, i64 51
  %55 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %54, align 8
  %56 = tail call i32 %55(%"class.rx::ContextImpl"* %50, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %48, %"class.angle::BitSetT.168"* dereferenceable(8) %51) #21
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %136, label %58

58:                                               ; preds = %43
  %59 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %59, align 8
  %60 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %49, align 8
  %61 = bitcast %"class.rx::ContextImpl"* %60 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i64, i8*)***
  %62 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i64, i8*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i64, i8*)*** %61, align 8
  %63 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i64, i8*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i64, i8*)** %62, i64 34
  %64 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i64, i8*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i64, i8*)** %63, align 8
  %65 = tail call i32 %64(%"class.rx::ContextImpl"* %60, %"class.gl::Context"* %0, i8 zeroext %1, i64 %2, i8* %3) #21
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %136, label %67

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 11, i32 0
  %69 = load i64, i64* %68, align 8, !noalias !217
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = tail call i64 @llvm.cttz.i64(i64 %69, i1 true) #21, !range !73
  %73 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  br label %90

74:                                               ; preds = %98, %67
  %75 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 0, i32 0
  %76 = load i64, i64* %75, align 8, !noalias !220
  %77 = icmp eq i64 %76, 0
  %78 = tail call i64 @llvm.cttz.i64(i64 %76, i1 true) #21, !range !73
  br i1 %77, label %79, label %85

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 1, i32 0
  %81 = load i64, i64* %80, align 8, !noalias !220
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %136, label %83

83:                                               ; preds = %79
  %84 = tail call i64 @llvm.cttz.i64(i64 %81, i1 true) #21, !range !73
  br label %85

85:                                               ; preds = %83, %74
  %86 = phi i64 [ 0, %74 ], [ 1, %83 ]
  %87 = phi i64 [ %76, %74 ], [ %81, %83 ]
  %88 = phi i64 [ %78, %74 ], [ %84, %83 ]
  %89 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 77, i32 0, i32 0
  br label %104

90:                                               ; preds = %98, %71
  %91 = phi i64 [ %72, %71 ], [ %103, %98 ]
  %92 = phi i64 [ %69, %71 ], [ %101, %98 ]
  %93 = tail call dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State29getIndexedShaderStorageBufferEm(%"class.gl::State"* %73, i64 %91) #21
  %94 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %93, i64 0, i32 0, i32 0, i32 1
  %95 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %94, align 8
  %96 = icmp eq %"class.gl::Buffer"* %95, null
  br i1 %96, label %98, label %97

97:                                               ; preds = %90
  tail call void @_ZN2gl6Buffer13onDataChangedEv(%"class.gl::Buffer"* nonnull %95) #21
  br label %98

98:                                               ; preds = %97, %90
  %99 = shl i64 1, %91
  %100 = xor i64 %99, -1
  %101 = and i64 %92, %100
  %102 = icmp eq i64 %101, 0
  %103 = tail call i64 @llvm.cttz.i64(i64 %101, i1 true) #21, !range !73
  br i1 %102, label %74, label %90

104:                                              ; preds = %131, %85
  %105 = phi i64 [ %88, %85 ], [ %134, %131 ]
  %106 = phi i64 [ %87, %85 ], [ %133, %131 ]
  %107 = phi i64 [ %86, %85 ], [ %132, %131 ]
  %108 = shl i64 %107, 6
  %109 = add i64 %108, %105
  %110 = load %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"** %89, align 8
  %111 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %110, i64 %109, i32 0, i32 0, i32 1
  %112 = load %"class.gl::Texture"*, %"class.gl::Texture"** %111, align 8
  %113 = icmp eq %"class.gl::Texture"* %112, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %104
  %115 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %112, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %115, i32 1) #21
  br label %116

116:                                              ; preds = %114, %104
  %117 = shl i64 1, %105
  %118 = xor i64 %117, -1
  %119 = and i64 %106, %118
  %120 = icmp eq i64 %119, 0
  %121 = tail call i64 @llvm.cttz.i64(i64 %119, i1 true) #21, !range !73
  br i1 %120, label %122, label %131

122:                                              ; preds = %116
  %123 = add i64 %107, 1
  %124 = icmp ult i64 %123, 2
  br i1 %124, label %125, label %136

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 %123, i32 0
  %127 = load i64, i64* %126, align 8, !noalias !223
  %128 = icmp eq i64 %127, 0
  %129 = tail call i64 @llvm.cttz.i64(i64 %127, i1 true) #21, !range !73
  %130 = select i1 %128, i64 0, i64 %129
  br label %131

131:                                              ; preds = %125, %116
  %132 = phi i64 [ %123, %125 ], [ %107, %116 ]
  %133 = phi i64 [ %127, %125 ], [ %119, %116 ]
  %134 = phi i64 [ %130, %125 ], [ %121, %116 ]
  %135 = icmp eq i64 %133, 0
  br i1 %135, label %136, label %104

136:                                              ; preds = %23, %131, %122, %58, %43, %8, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context5flushEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %4 = bitcast %"class.rx::ContextImpl"* %3 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)***
  %5 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)** %5, i64 21
  %7 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)** %6, align 8
  %8 = tail call i32 %7(%"class.rx::ContextImpl"* %3, %"class.gl::Context"* %0) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context6finishEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %4 = bitcast %"class.rx::ContextImpl"* %3 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)***
  %5 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)** %5, i64 22
  %7 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)** %6, align 8
  %8 = tail call i32 %7(%"class.rx::ContextImpl"* %3, %"class.gl::Context"* %0) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17insertEventMarkerEiPKc(%"class.gl::Context"* nocapture readonly, i32, i8*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %4, align 8
  %6 = bitcast %"class.rx::ContextImpl"* %5 to i32 (%"class.rx::ContextImpl"*, i32, i8*)***
  %7 = load i32 (%"class.rx::ContextImpl"*, i32, i8*)**, i32 (%"class.rx::ContextImpl"*, i32, i8*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, i32, i8*)*, i32 (%"class.rx::ContextImpl"*, i32, i8*)** %7, i64 42
  %9 = load i32 (%"class.rx::ContextImpl"*, i32, i8*)*, i32 (%"class.rx::ContextImpl"*, i32, i8*)** %8, align 8
  %10 = tail call i32 %9(%"class.rx::ContextImpl"* %5, i32 %1, i8* %2) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15pushGroupMarkerEiPKc(%"class.gl::Context"* nocapture readonly, i32, i8*) local_unnamed_addr #1 align 2 {
  %4 = icmp eq i8* %2, null
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %6 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %5, align 8
  %7 = bitcast %"class.rx::ContextImpl"* %6 to i32 (%"class.rx::ContextImpl"*, i32, i8*)***
  %8 = load i32 (%"class.rx::ContextImpl"*, i32, i8*)**, i32 (%"class.rx::ContextImpl"*, i32, i8*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, i32, i8*)*, i32 (%"class.rx::ContextImpl"*, i32, i8*)** %8, i64 43
  %10 = load i32 (%"class.rx::ContextImpl"*, i32, i8*)*, i32 (%"class.rx::ContextImpl"*, i32, i8*)** %9, align 8
  br i1 %4, label %11, label %14

11:                                               ; preds = %3
  %12 = tail call i32 %10(%"class.rx::ContextImpl"* %6, i32 %1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)) #21
  br label %13

13:                                               ; preds = %14, %11
  ret void

14:                                               ; preds = %3
  %15 = tail call i32 %10(%"class.rx::ContextImpl"* %6, i32 %1, i8* nonnull %2) #21
  br label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14popGroupMarkerEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %4 = bitcast %"class.rx::ContextImpl"* %3 to i32 (%"class.rx::ContextImpl"*)***
  %5 = load i32 (%"class.rx::ContextImpl"*)**, i32 (%"class.rx::ContextImpl"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %5, i64 44
  %7 = load i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %6, align 8
  %8 = tail call i32 %7(%"class.rx::ContextImpl"* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19bindUniformLocationENS_15ShaderProgramIDENS_15UniformLocationEPKc(%"class.gl::Context"*, i32, i32, i8*) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %16, label %88, label %80

17:                                               ; preds = %4
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %88, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %77, %11
  %81 = phi %"class.gl::Program"* [ %15, %11 ], [ %79, %77 ]
  %82 = icmp eq %"class.gl::Program"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %81, i64 0, i32 11, i32 0, i32 0, i32 0
  %85 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %84, align 8
  %86 = icmp eq %"struct.gl::Program::LinkingState"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %81, %"class.gl::Context"* %0) #21
  br label %88

88:                                               ; preds = %64, %11, %80, %83, %87
  %89 = phi %"class.gl::Program"* [ null, %80 ], [ %81, %83 ], [ %81, %87 ], [ null, %11 ], [ null, %64 ]
  tail call void @_ZN2gl7Program19bindUniformLocationENS_15UniformLocationEPKc(%"class.gl::Program"* %89, i32 %2, i8* %3) #21
  ret void
}

declare void @_ZN2gl7Program19bindUniformLocationENS_15UniformLocationEPKc(%"class.gl::Program"*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18coverageModulationEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State21setCoverageModulationEj(%"class.gl::State"* %3, i32 %1) #21
  ret void
}

declare void @_ZN2gl5State21setCoverageModulationEj(%"class.gl::State"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context23getProgramResourceIndexENS_15ShaderProgramIDEjPKc(%"class.gl::Context"*, i32, i32, i8*) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %16, label %88, label %80

17:                                               ; preds = %4
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %88, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %77, %11
  %81 = phi %"class.gl::Program"* [ %15, %11 ], [ %79, %77 ]
  %82 = icmp eq %"class.gl::Program"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %81, i64 0, i32 11, i32 0, i32 0, i32 0
  %85 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %84, align 8
  %86 = icmp eq %"struct.gl::Program::LinkingState"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %81, %"class.gl::Context"* %0) #21
  br label %88

88:                                               ; preds = %64, %11, %80, %83, %87
  %89 = phi %"class.gl::Program"* [ null, %80 ], [ %81, %83 ], [ %81, %87 ], [ null, %11 ], [ null, %64 ]
  %90 = tail call i32 @_ZN2gl25QueryProgramResourceIndexEPKNS_7ProgramEjPKc(%"class.gl::Program"* %89, i32 %2, i8* %3) #21
  ret i32 %90
}

declare i32 @_ZN2gl25QueryProgramResourceIndexEPKNS_7ProgramEjPKc(%"class.gl::Program"*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context22getProgramResourceNameENS_15ShaderProgramIDEjjiPiPc(%"class.gl::Context"*, i32, i32, i32, i32, i32*, i8*) local_unnamed_addr #5 align 2 {
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %9 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %8, align 8
  %10 = zext i32 %1 to i64
  %11 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %9, i64 0, i32 2, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %12, %10
  br i1 %13, label %14, label %20

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %9, i64 0, i32 2, i32 1
  %16 = load %"class.gl::Program"**, %"class.gl::Program"*** %15, align 8
  %17 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %16, i64 %10
  %18 = load %"class.gl::Program"*, %"class.gl::Program"** %17, align 8
  %19 = icmp eq %"class.gl::Program"* %18, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %19, label %91, label %83

20:                                               ; preds = %7
  %21 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %22 = add i64 %21, %10
  %23 = zext i64 %22 to i128
  %24 = mul nuw i128 %23, 11376068507788127593
  %25 = lshr i128 %24, 64
  %26 = xor i128 %25, %24
  %27 = trunc i128 %26 to i64
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %9, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %9, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = lshr i64 %27, 7
  %33 = ptrtoint i8* %29 to i64
  %34 = lshr i64 %33, 12
  %35 = xor i64 %32, %34
  %36 = trunc i128 %26 to i8
  %37 = and i8 %36, 127
  %38 = insertelement <16 x i8> undef, i8 %37, i32 0
  %39 = shufflevector <16 x i8> %38, <16 x i8> undef, <16 x i32> zeroinitializer
  %40 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %9, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %41

41:                                               ; preds = %71, %20
  %42 = phi i64 [ %35, %20 ], [ %73, %71 ]
  %43 = phi i64 [ 0, %20 ], [ %72, %71 ]
  %44 = and i64 %42, %31
  %45 = getelementptr inbounds i8, i8* %29, i64 %44
  %46 = bitcast i8* %45 to <16 x i8>*
  %47 = load <16 x i8>, <16 x i8>* %46, align 1
  %48 = icmp eq <16 x i8> %39, %47
  %49 = bitcast <16 x i1> %48 to i16
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %67, label %51

51:                                               ; preds = %41
  %52 = zext i16 %49 to i32
  %53 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %40, align 8
  br label %54

54:                                               ; preds = %63, %51
  %55 = phi i32 [ %52, %51 ], [ %65, %63 ]
  %56 = tail call i32 @llvm.cttz.i32(i32 %55, i1 false) #21, !range !8
  %57 = zext i32 %56 to i64
  %58 = add i64 %44, %57
  %59 = and i64 %58, %31
  %60 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %53, i64 %59, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %1
  br i1 %62, label %74, label %63, !prof !9

63:                                               ; preds = %54
  %64 = add i32 %55, -1
  %65 = and i32 %64, %55
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %54

67:                                               ; preds = %63, %41
  %68 = icmp eq <16 x i8> %47, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %69 = bitcast <16 x i1> %68 to i16
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %71, label %91, !prof !10

71:                                               ; preds = %67
  %72 = add i64 %43, 16
  %73 = add i64 %72, %44
  br label %41

74:                                               ; preds = %54
  %75 = getelementptr inbounds i8, i8* %29, i64 %59
  %76 = icmp ne i8* %75, null
  tail call void @llvm.assume(i1 %76) #21
  %77 = load i8, i8* %75, align 1
  %78 = icmp sgt i8 %77, -1
  br i1 %78, label %80, label %79, !prof !9

79:                                               ; preds = %74
  tail call void @llvm.trap() #21
  unreachable

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %53, i64 %59, i32 0, i32 1
  %82 = load %"class.gl::Program"*, %"class.gl::Program"** %81, align 8
  br label %83

83:                                               ; preds = %80, %14
  %84 = phi %"class.gl::Program"* [ %18, %14 ], [ %82, %80 ]
  %85 = icmp eq %"class.gl::Program"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %84, i64 0, i32 11, i32 0, i32 0, i32 0
  %88 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %87, align 8
  %89 = icmp eq %"struct.gl::Program::LinkingState"* %88, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %86
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %84, %"class.gl::Context"* %0) #21
  br label %91

91:                                               ; preds = %67, %14, %83, %86, %90
  %92 = phi %"class.gl::Program"* [ null, %83 ], [ %84, %86 ], [ %84, %90 ], [ null, %14 ], [ null, %67 ]
  tail call void @_ZN2gl24QueryProgramResourceNameEPKNS_7ProgramEjjiPiPc(%"class.gl::Program"* %92, i32 %2, i32 %3, i32 %4, i32* %5, i8* %6) #21
  ret void
}

declare void @_ZN2gl24QueryProgramResourceNameEPKNS_7ProgramEjjiPiPc(%"class.gl::Program"*, i32, i32, i32, i32*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context26getProgramResourceLocationENS_15ShaderProgramIDEjPKc(%"class.gl::Context"*, i32, i32, i8*) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %16, label %88, label %80

17:                                               ; preds = %4
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %88, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %77, %11
  %81 = phi %"class.gl::Program"* [ %15, %11 ], [ %79, %77 ]
  %82 = icmp eq %"class.gl::Program"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %81, i64 0, i32 11, i32 0, i32 0, i32 0
  %85 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %84, align 8
  %86 = icmp eq %"struct.gl::Program::LinkingState"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %81, %"class.gl::Context"* %0) #21
  br label %88

88:                                               ; preds = %64, %11, %80, %83, %87
  %89 = phi %"class.gl::Program"* [ null, %80 ], [ %81, %83 ], [ %81, %87 ], [ null, %11 ], [ null, %64 ]
  %90 = tail call i32 @_ZN2gl28QueryProgramResourceLocationEPKNS_7ProgramEjPKc(%"class.gl::Program"* %89, i32 %2, i8* %3) #21
  ret i32 %90
}

declare i32 @_ZN2gl28QueryProgramResourceLocationEPKNS_7ProgramEjPKc(%"class.gl::Program"*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20getProgramResourceivENS_15ShaderProgramIDEjjiPKjiPiS4_(%"class.gl::Context"*, i32, i32, i32, i32, i32*, i32, i32*, i32*) local_unnamed_addr #5 align 2 {
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %11 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %10, align 8
  %12 = zext i32 %1 to i64
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %11, i64 0, i32 2, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %14, %12
  br i1 %15, label %16, label %22

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %11, i64 0, i32 2, i32 1
  %18 = load %"class.gl::Program"**, %"class.gl::Program"*** %17, align 8
  %19 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %18, i64 %12
  %20 = load %"class.gl::Program"*, %"class.gl::Program"** %19, align 8
  %21 = icmp eq %"class.gl::Program"* %20, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %21, label %93, label %85

22:                                               ; preds = %9
  %23 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %24 = add i64 %23, %12
  %25 = zext i64 %24 to i128
  %26 = mul nuw i128 %25, 11376068507788127593
  %27 = lshr i128 %26, 64
  %28 = xor i128 %27, %26
  %29 = trunc i128 %28 to i64
  %30 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %11, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %11, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = lshr i64 %29, 7
  %35 = ptrtoint i8* %31 to i64
  %36 = lshr i64 %35, 12
  %37 = xor i64 %34, %36
  %38 = trunc i128 %28 to i8
  %39 = and i8 %38, 127
  %40 = insertelement <16 x i8> undef, i8 %39, i32 0
  %41 = shufflevector <16 x i8> %40, <16 x i8> undef, <16 x i32> zeroinitializer
  %42 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %11, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %43

43:                                               ; preds = %73, %22
  %44 = phi i64 [ %37, %22 ], [ %75, %73 ]
  %45 = phi i64 [ 0, %22 ], [ %74, %73 ]
  %46 = and i64 %44, %33
  %47 = getelementptr inbounds i8, i8* %31, i64 %46
  %48 = bitcast i8* %47 to <16 x i8>*
  %49 = load <16 x i8>, <16 x i8>* %48, align 1
  %50 = icmp eq <16 x i8> %41, %49
  %51 = bitcast <16 x i1> %50 to i16
  %52 = icmp eq i16 %51, 0
  br i1 %52, label %69, label %53

53:                                               ; preds = %43
  %54 = zext i16 %51 to i32
  %55 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %42, align 8
  br label %56

56:                                               ; preds = %65, %53
  %57 = phi i32 [ %54, %53 ], [ %67, %65 ]
  %58 = tail call i32 @llvm.cttz.i32(i32 %57, i1 false) #21, !range !8
  %59 = zext i32 %58 to i64
  %60 = add i64 %46, %59
  %61 = and i64 %60, %33
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %55, i64 %61, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %1
  br i1 %64, label %76, label %65, !prof !9

65:                                               ; preds = %56
  %66 = add i32 %57, -1
  %67 = and i32 %66, %57
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %56

69:                                               ; preds = %65, %43
  %70 = icmp eq <16 x i8> %49, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %71 = bitcast <16 x i1> %70 to i16
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %73, label %93, !prof !10

73:                                               ; preds = %69
  %74 = add i64 %45, 16
  %75 = add i64 %74, %46
  br label %43

76:                                               ; preds = %56
  %77 = getelementptr inbounds i8, i8* %31, i64 %61
  %78 = icmp ne i8* %77, null
  tail call void @llvm.assume(i1 %78) #21
  %79 = load i8, i8* %77, align 1
  %80 = icmp sgt i8 %79, -1
  br i1 %80, label %82, label %81, !prof !9

81:                                               ; preds = %76
  tail call void @llvm.trap() #21
  unreachable

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %55, i64 %61, i32 0, i32 1
  %84 = load %"class.gl::Program"*, %"class.gl::Program"** %83, align 8
  br label %85

85:                                               ; preds = %82, %16
  %86 = phi %"class.gl::Program"* [ %20, %16 ], [ %84, %82 ]
  %87 = icmp eq %"class.gl::Program"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %86, i64 0, i32 11, i32 0, i32 0, i32 0
  %90 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %89, align 8
  %91 = icmp eq %"struct.gl::Program::LinkingState"* %90, null
  br i1 %91, label %93, label %92

92:                                               ; preds = %88
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %86, %"class.gl::Context"* %0) #21
  br label %93

93:                                               ; preds = %69, %16, %85, %88, %92
  %94 = phi %"class.gl::Program"* [ null, %85 ], [ %86, %88 ], [ %86, %92 ], [ null, %16 ], [ null, %69 ]
  tail call void @_ZN2gl22QueryProgramResourceivEPKNS_7ProgramEjNS_17UniformBlockIndexEiPKjiPiS6_(%"class.gl::Program"* %94, i32 %2, i32 %3, i32 %4, i32* %5, i32 %6, i32* %7, i32* %8) #21
  ret void
}

declare void @_ZN2gl22QueryProgramResourceivEPKNS_7ProgramEjNS_17UniformBlockIndexEiPKjiPiS6_(%"class.gl::Program"*, i32, i32, i32, i32*, i32, i32*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21getProgramInterfaceivENS_15ShaderProgramIDEjjPi(%"class.gl::Context"*, i32, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZN2gl23QueryProgramInterfaceivEPKNS_7ProgramEjjPi(%"class.gl::Program"* %90, i32 %2, i32 %3, i32* %4) #21
  ret void
}

declare void @_ZN2gl23QueryProgramInterfaceivEPKNS_7ProgramEjjPi(%"class.gl::Program"*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context27getProgramInterfaceivRobustENS_15ShaderProgramIDEjjiPiS2_(%"class.gl::Context"* nocapture, i32, i32, i32, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11handleErrorEjPKcS2_S2_j(%"class.gl::Context"*, i32, i8*, i8*, i8*, i32) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 8
  tail call void @_ZN2gl8ErrorSet11handleErrorEjPKcS2_S2_j(%"class.gl::ErrorSet"* %7, i32 %1, i8* %2, i8* %3, i8* %4, i32 %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl8ErrorSet11handleErrorEjPKcS2_S2_j(%"class.gl::ErrorSet"*, i32, i8*, i8*, i8*, i32) local_unnamed_addr #13 align 2 {
  %7 = alloca %"class.std::__1::basic_stringstream", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = icmp eq i32 %1, 1285
  br i1 %10, label %11, label %28

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 0
  %13 = load %"class.gl::Context"*, %"class.gl::Context"** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %13, i64 0, i32 38
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 33362
  br i1 %16, label %17, label %28

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %13, i64 0, i32 45
  %19 = load %"class.egl::Display"*, %"class.egl::Display"** %18, align 8
  %20 = getelementptr inbounds %"class.egl::Display", %"class.egl::Display"* %19, i64 0, i32 28, i32 1, i32 4
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %13, i64 0, i32 36
  store i8 3, i8* %24, align 2
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %13, i64 0, i32 37
  store i8 1, i8* %25, align 1
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %13, i64 0, i32 35
  store i8 1, i8* %26, align 1
  %27 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %13, i64 0, i32 4
  store i8 0, i8* %27, align 1
  store %"class.gl::Context"* null, %"class.gl::Context"** @_ZN2gl20gCurrentValidContextE, align 8
  br label %28

28:                                               ; preds = %17, %23, %11, %6
  %29 = bitcast %"class.std::__1::basic_stringstream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %29) #21
  %30 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast i64* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 272, i1 false)
  %32 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 2, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %35, i64 0, i32 0
  %37 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %38 = bitcast %"class.std::__1::basic_stringstream"* %7 to i64*
  store i64 %37, i64* %38, align 8
  %39 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %40 = bitcast %"class.std::__1::basic_stringstream"* %7 to i8**
  %41 = inttoptr i64 %37 to i8*
  %42 = getelementptr i8, i8* %41, i64 -24
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds i8, i8* %29, i64 %44
  %46 = bitcast i8* %45 to i64*
  store i64 %39, i64* %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %47, align 8
  %48 = load i8*, i8** %40, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %29, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = bitcast %"class.std::__1::basic_stringbuf"* %35 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %53, i8* %54) #21
  %55 = getelementptr inbounds i8, i8* %52, i64 136
  %56 = bitcast i8* %55 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %56, align 8
  %57 = getelementptr inbounds i8, i8* %52, i64 144
  %58 = bitcast i8* %57 to i32*
  store i32 -1, i32* %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 0, i32 1
  %60 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %61 = bitcast %"class.std::__1::basic_ostream.base"* %59 to i64*
  store i64 %60, i64* %61, align 8
  %62 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %63 = inttoptr i64 %60 to i8*
  %64 = getelementptr i8, i8* %63, i64 -24
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::basic_ostream.base"* %59 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 %66
  %69 = bitcast i8* %68 to i64*
  store i64 %62, i64* %69, align 8
  %70 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %70, i64* %38, align 8
  %71 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %72 = inttoptr i64 %70 to i8*
  %73 = getelementptr i8, i8* %72, i64 -24
  %74 = bitcast i8* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds i8, i8* %29, i64 %75
  %77 = bitcast i8* %76 to i64*
  store i64 %71, i64* %77, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %34, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %36) #21
  %78 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %35, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1, i32 1
  %80 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1, i32 3
  %81 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 32, i1 false) #21
  store i32 24, i32* %80, align 8
  %82 = bitcast %"class.std::__1::basic_ostream.base"* %59 to %"class.std::__1::basic_ostream"*
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %82, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 7) #21
  %84 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2gl4priv6FmtHexILi8EjEERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES7_T0_(%"class.std::__1::basic_ostream"* dereferenceable(160) %83, i32 %1) #21
  %85 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %84, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i64 5) #21
  %86 = call i64 @strlen(i8* %3) #21
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %85, i8* %3, i64 %86) #21
  %88 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %87, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #21
  %89 = call i64 @strlen(i8* %4) #21
  %90 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %88, i8* %4, i64 %89) #21
  %91 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %90, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0), i64 1) #21
  %92 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %91, i32 %5) #21
  %93 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %92, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i64 0, i64 0), i64 2) #21
  %94 = call i64 @strlen(i8* %2) #21
  %95 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %93, i8* %2, i64 %94) #21
  %96 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #21
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 24, i1 false)
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.std::__1::basic_stringbuf"* %35) #21
  %99 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1
  %100 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %101 = bitcast %"class.std::__1::__tree_end_node"* %100 to %"class.std::__1::__tree_node.1143"**
  %102 = load %"class.std::__1::__tree_node.1143"*, %"class.std::__1::__tree_node.1143"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node.1143"* %102, null
  br i1 %103, label %132, label %104

104:                                              ; preds = %28
  %105 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %106

106:                                              ; preds = %128, %104
  %107 = phi %"class.std::__1::__tree_node.1143"* [ %131, %128 ], [ %102, %104 ]
  %108 = phi %"class.std::__1::__tree_node_base"** [ %130, %128 ], [ %105, %104 ]
  %109 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %107, i64 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = icmp ugt i32 %110, %1
  br i1 %111, label %112, label %118

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %107, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, null
  br i1 %115, label %116, label %128

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %107, i64 0, i32 0, i32 0
  br label %134

118:                                              ; preds = %106
  %119 = icmp ult i32 %110, %1
  br i1 %119, label %120, label %126

120:                                              ; preds = %118
  %121 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %107, i64 0, i32 0, i32 1
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node_base"* %122, null
  br i1 %123, label %124, label %128

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %107, i64 0, i32 0, i32 0
  br label %134

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %107, i64 0, i32 0, i32 0
  br label %134

128:                                              ; preds = %120, %112
  %129 = phi %"class.std::__1::__tree_node_base"* [ %114, %112 ], [ %122, %120 ]
  %130 = phi %"class.std::__1::__tree_node_base"** [ %113, %112 ], [ %121, %120 ]
  %131 = bitcast %"class.std::__1::__tree_node_base"* %129 to %"class.std::__1::__tree_node.1143"*
  br label %106

132:                                              ; preds = %28
  %133 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 0, i32 0
  br label %134

134:                                              ; preds = %132, %126, %124, %116
  %135 = phi %"class.std::__1::__tree_end_node"* [ %100, %132 ], [ %117, %116 ], [ %125, %124 ], [ %127, %126 ]
  %136 = phi %"class.std::__1::__tree_node_base"** [ %133, %132 ], [ %113, %116 ], [ %121, %124 ], [ %108, %126 ]
  %137 = bitcast %"class.std::__1::__tree_node_base"** %136 to %"class.std::__1::__tree_node.1143"**
  %138 = load %"class.std::__1::__tree_node.1143"*, %"class.std::__1::__tree_node.1143"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node.1143"* %138, null
  br i1 %139, label %140, label %164

140:                                              ; preds = %134
  %141 = call i8* @_Znwm(i64 32) #27, !noalias !226
  %142 = getelementptr inbounds i8, i8* %141, i64 28
  %143 = bitcast i8* %142 to i32*
  store i32 %1, i32* %143, align 4, !noalias !226
  %144 = bitcast i8* %141 to %"class.std::__1::__tree_node_base"*
  %145 = getelementptr inbounds i8, i8* %141, i64 16
  %146 = bitcast i8* %145 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 0, i64 16, i1 false) #21
  store %"class.std::__1::__tree_end_node"* %135, %"class.std::__1::__tree_end_node"** %146, align 8
  %147 = bitcast %"class.std::__1::__tree_node_base"** %136 to i8**
  store i8* %141, i8** %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::set.35", %"class.std::__1::set.35"* %99, i64 0, i32 0, i32 0
  %149 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %148, align 8
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %149, i64 0, i32 0
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, null
  br i1 %152, label %157, label %153

153:                                              ; preds = %140
  %154 = ptrtoint %"class.std::__1::__tree_node_base"* %151 to i64
  %155 = bitcast %"class.std::__1::set.35"* %99 to i64*
  store i64 %154, i64* %155, align 8
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  br label %157

157:                                              ; preds = %153, %140
  %158 = phi %"class.std::__1::__tree_node_base"* [ %144, %140 ], [ %156, %153 ]
  %159 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %160, %"class.std::__1::__tree_node_base"* %158) #21
  %161 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = add i64 %162, 1
  store i64 %163, i64* %161, align 8
  br label %164

164:                                              ; preds = %134, %157
  %165 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 0
  %166 = load %"class.gl::Context"*, %"class.gl::Context"** %165, align 8
  %167 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %166, i64 0, i32 2, i32 91
  %168 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #21
  %169 = call i64 @strlen(i8* %2) #21
  %170 = icmp ugt i64 %169, -17
  br i1 %170, label %171, label %173

171:                                              ; preds = %164
  %172 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %172) #28
  unreachable

173:                                              ; preds = %164
  %174 = icmp ult i64 %169, 23
  br i1 %174, label %184, label %175

175:                                              ; preds = %173
  %176 = add nuw i64 %169, 16
  %177 = and i64 %176, -16
  %178 = call i8* @_Znwm(i64 %177) #27
  %179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %178, i8** %179, align 8
  %180 = or i64 %177, -9223372036854775808
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %169, i64* %182, align 8
  %183 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %189

184:                                              ; preds = %173
  %185 = trunc i64 %169 to i8
  %186 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %187 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %186, i64 0, i32 1, i32 0
  store i8 %185, i8* %187, align 1
  %188 = icmp eq i64 %169, 0
  br i1 %188, label %192, label %189

189:                                              ; preds = %184, %175
  %190 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %186, %184 ], [ %183, %175 ]
  %191 = phi i8* [ %168, %184 ], [ %178, %175 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %191, i8* align 1 %2, i64 %169, i1 false) #21
  br label %192

192:                                              ; preds = %184, %189
  %193 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %186, %184 ], [ %190, %189 ]
  %194 = phi i8* [ %168, %184 ], [ %191, %189 ]
  %195 = getelementptr inbounds i8, i8* %194, i64 %169
  store i8 0, i8* %195, align 1
  call void @_ZNK2gl5Debug13insertMessageEjjjjONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.gl::Debug"* %167, i32 33350, i32 33356, i32 %1, i32 37190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i32 2) #21
  %196 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %193, i64 0, i32 1, i32 0
  %197 = load i8, i8* %196, align 1
  %198 = icmp slt i8 %197, 0
  br i1 %198, label %199, label %202

199:                                              ; preds = %192
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load i8*, i8** %200, align 8
  call void @_ZdlPv(i8* %201) #27
  br label %202

202:                                              ; preds = %192, %199
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #21
  %203 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %202
  %208 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %208) #27
  br label %209

209:                                              ; preds = %202, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #21
  %210 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %210, i64* %38, align 8
  %211 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %212 = inttoptr i64 %210 to i8*
  %213 = getelementptr i8, i8* %212, i64 -24
  %214 = bitcast i8* %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = getelementptr inbounds i8, i8* %29, i64 %215
  %217 = bitcast i8* %216 to i64*
  store i64 %211, i64* %217, align 8
  %218 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  store i64 %218, i64* %61, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8
  %219 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %220 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %219, i64 0, i32 1, i32 0
  %221 = load i8, i8* %220, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %223, label %226

223:                                              ; preds = %209
  %224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load i8*, i8** %224, align 8
  call void @_ZdlPv(i8* %225) #27
  br label %226

226:                                              ; preds = %209, %223
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %36) #21
  %227 = bitcast %"class.std::__1::basic_stringstream"* %7 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %227, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #21
  %228 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 2
  %229 = bitcast %"class.std::__1::basic_ios.base"* %228 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %229) #21
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %29) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl7Context15validationErrorEjPKc(%"class.gl::Context"*, i32, i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 8
  tail call void @_ZN2gl8ErrorSet15validationErrorEjPKc(%"class.gl::ErrorSet"* %4, i32 %1, i8* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl8ErrorSet15validationErrorEjPKc(%"class.gl::ErrorSet"*, i32, i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.1143"**
  %8 = load %"class.std::__1::__tree_node.1143"*, %"class.std::__1::__tree_node.1143"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node.1143"* %8, null
  br i1 %9, label %38, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %34, %10
  %13 = phi %"class.std::__1::__tree_node.1143"* [ %37, %34 ], [ %8, %10 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %36, %34 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %13, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp ugt i32 %16, %1
  br i1 %17, label %18, label %24

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %13, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %13, i64 0, i32 0, i32 0
  br label %40

24:                                               ; preds = %12
  %25 = icmp ult i32 %16, %1
  br i1 %25, label %26, label %32

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %13, i64 0, i32 0, i32 1
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %13, i64 0, i32 0, i32 0
  br label %40

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %13, i64 0, i32 0, i32 0
  br label %40

34:                                               ; preds = %26, %18
  %35 = phi %"class.std::__1::__tree_node_base"* [ %20, %18 ], [ %28, %26 ]
  %36 = phi %"class.std::__1::__tree_node_base"** [ %19, %18 ], [ %27, %26 ]
  %37 = bitcast %"class.std::__1::__tree_node_base"* %35 to %"class.std::__1::__tree_node.1143"*
  br label %12

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %40

40:                                               ; preds = %38, %32, %30, %22
  %41 = phi %"class.std::__1::__tree_end_node"* [ %6, %38 ], [ %23, %22 ], [ %31, %30 ], [ %33, %32 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %39, %38 ], [ %19, %22 ], [ %27, %30 ], [ %14, %32 ]
  %43 = bitcast %"class.std::__1::__tree_node_base"** %42 to %"class.std::__1::__tree_node.1143"**
  %44 = load %"class.std::__1::__tree_node.1143"*, %"class.std::__1::__tree_node.1143"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node.1143"* %44, null
  br i1 %45, label %46, label %70

46:                                               ; preds = %40
  %47 = tail call i8* @_Znwm(i64 32) #27, !noalias !229
  %48 = getelementptr inbounds i8, i8* %47, i64 28
  %49 = bitcast i8* %48 to i32*
  store i32 %1, i32* %49, align 4, !noalias !229
  %50 = bitcast i8* %47 to %"class.std::__1::__tree_node_base"*
  %51 = getelementptr inbounds i8, i8* %47, i64 16
  %52 = bitcast i8* %51 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 16, i1 false) #21
  store %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"** %52, align 8
  %53 = bitcast %"class.std::__1::__tree_node_base"** %42 to i8**
  store i8* %47, i8** %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::set.35", %"class.std::__1::set.35"* %5, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %46
  %60 = ptrtoint %"class.std::__1::__tree_node_base"* %57 to i64
  %61 = bitcast %"class.std::__1::set.35"* %5 to i64*
  store i64 %60, i64* %61, align 8
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  br label %63

63:                                               ; preds = %59, %46
  %64 = phi %"class.std::__1::__tree_node_base"* [ %50, %46 ], [ %62, %59 ]
  %65 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %66, %"class.std::__1::__tree_node_base"* %64) #21
  %67 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %67, align 8
  br label %70

70:                                               ; preds = %40, %63
  %71 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 0
  %72 = load %"class.gl::Context"*, %"class.gl::Context"** %71, align 8
  %73 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %72, i64 0, i32 2, i32 91
  %74 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #21
  %75 = tail call i64 @strlen(i8* %2) #21
  %76 = icmp ugt i64 %75, -17
  br i1 %76, label %77, label %79

77:                                               ; preds = %70
  %78 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %78) #28
  unreachable

79:                                               ; preds = %70
  %80 = icmp ult i64 %75, 23
  br i1 %80, label %90, label %81

81:                                               ; preds = %79
  %82 = add nuw i64 %75, 16
  %83 = and i64 %82, -16
  %84 = tail call i8* @_Znwm(i64 %83) #27
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %84, i8** %85, align 8
  %86 = or i64 %83, -9223372036854775808
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %75, i64* %88, align 8
  %89 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %95

90:                                               ; preds = %79
  %91 = trunc i64 %75 to i8
  %92 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  store i8 %91, i8* %93, align 1
  %94 = icmp eq i64 %75, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %90, %81
  %96 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %92, %90 ], [ %89, %81 ]
  %97 = phi i8* [ %74, %90 ], [ %84, %81 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %97, i8* align 1 %2, i64 %75, i1 false) #21
  br label %98

98:                                               ; preds = %90, %95
  %99 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %92, %90 ], [ %96, %95 ]
  %100 = phi i8* [ %74, %90 ], [ %97, %95 ]
  %101 = getelementptr inbounds i8, i8* %100, i64 %75
  store i8 0, i8* %101, align 1
  call void @_ZNK2gl5Debug13insertMessageEjjjjONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.gl::Debug"* %73, i32 33350, i32 33356, i32 %1, i32 37190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i32 1) #21
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #27
  br label %108

108:                                              ; preds = %98, %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context8getErrorEv(%"class.gl::Context"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 8, i32 1, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %49, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 8, i32 1
  %7 = getelementptr inbounds %"class.std::__1::set.35", %"class.std::__1::set.35"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.1143"*
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 1, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %15, label %23

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node_base"*
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 2
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_end_node"**
  %19 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 0, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, %16
  br i1 %22, label %40, label %31

23:                                               ; preds = %5, %23
  %24 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ %13, %5 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %28, label %23

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node_base"*
  br label %40

31:                                               ; preds = %15, %31
  %32 = phi %"class.std::__1::__tree_end_node"** [ %35, %31 ], [ %18, %15 ]
  %33 = bitcast %"class.std::__1::__tree_end_node"** %32 to %"class.std::__1::__tree_node_base"**
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, %34
  br i1 %39, label %40, label %31

40:                                               ; preds = %31, %15, %28
  %41 = phi %"class.std::__1::__tree_node_base"* [ %30, %28 ], [ %16, %15 ], [ %16, %31 ]
  %42 = phi %"class.std::__1::__tree_end_node"* [ %29, %28 ], [ %19, %15 ], [ %36, %31 ]
  %43 = ptrtoint %"class.std::__1::__tree_end_node"* %42 to i64
  %44 = bitcast %"class.std::__1::set.35"* %6 to i64*
  store i64 %43, i64* %44, align 8
  %45 = add i64 %3, -1
  store i64 %45, i64* %2, align 8
  %46 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 8, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %47, %"class.std::__1::__tree_node_base"* %41) #21
  %48 = bitcast %"class.std::__1::__tree_end_node"* %8 to i8*
  tail call void @_ZdlPv(i8* %48) #27
  br label %49

49:                                               ; preds = %1, %40
  %50 = phi i32 [ %11, %40 ], [ 0, %1 ]
  ret i32 %50
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl8ErrorSet5emptyEv(%"class.gl::ErrorSet"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl8ErrorSet8popErrorEv(%"class.gl::ErrorSet"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::set.35", %"class.std::__1::set.35"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.1143"*
  %6 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 1, i32 0
  %9 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node_base"* %9, null
  br i1 %10, label %11, label %19

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node_base"*
  %13 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 2
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_end_node"**
  %15 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, %12
  br i1 %18, label %36, label %27

19:                                               ; preds = %1, %19
  %20 = phi %"class.std::__1::__tree_node_base"* [ %22, %19 ], [ %9, %1 ]
  %21 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  %23 = icmp eq %"class.std::__1::__tree_node_base"* %22, null
  br i1 %23, label %24, label %19

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %20, i64 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node_base"*
  br label %36

27:                                               ; preds = %11, %27
  %28 = phi %"class.std::__1::__tree_end_node"** [ %31, %27 ], [ %14, %11 ]
  %29 = bitcast %"class.std::__1::__tree_end_node"** %28 to %"class.std::__1::__tree_node_base"**
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %30, i64 0, i32 2
  %32 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, %30
  br i1 %35, label %36, label %27

36:                                               ; preds = %27, %24, %11
  %37 = phi %"class.std::__1::__tree_node_base"* [ %26, %24 ], [ %12, %11 ], [ %12, %27 ]
  %38 = phi %"class.std::__1::__tree_end_node"* [ %25, %24 ], [ %15, %11 ], [ %32, %27 ]
  %39 = ptrtoint %"class.std::__1::__tree_end_node"* %38 to i64
  %40 = bitcast %"class.std::__1::set.35"* %2 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %45, %"class.std::__1::__tree_node_base"* %37) #21
  %46 = bitcast %"class.std::__1::__tree_end_node"* %4 to i8*
  tail call void @_ZdlPv(i8* %46) #27
  ret i32 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl7Context14setContextLostEv(%"class.gl::Context"* nocapture) local_unnamed_addr #14 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 35
  store i8 1, i8* %2, align 1
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 4
  store i8 0, i8* %3, align 1
  store %"class.gl::Context"* null, %"class.gl::Context"** @_ZN2gl20gCurrentValidContextE, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.gl::Context"** @_ZTWN2gl20gCurrentValidContextE() local_unnamed_addr #15 {
  ret %"class.gl::Context"** @_ZN2gl20gCurrentValidContextE
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context22getGraphicsResetStatusEv(%"class.gl::Context"* nocapture) local_unnamed_addr #13 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 38
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 33377
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 35
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp ne i8 %6, 0
  br i1 %4, label %8, label %20

8:                                                ; preds = %1
  br i1 %7, label %52, label %9

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %11 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %10, align 8
  %12 = bitcast %"class.rx::ContextImpl"* %11 to i8 (%"class.rx::ContextImpl"*)***
  %13 = load i8 (%"class.rx::ContextImpl"*)**, i8 (%"class.rx::ContextImpl"*)*** %12, align 8
  %14 = getelementptr inbounds i8 (%"class.rx::ContextImpl"*)*, i8 (%"class.rx::ContextImpl"*)** %13, i64 41
  %15 = load i8 (%"class.rx::ContextImpl"*)*, i8 (%"class.rx::ContextImpl"*)** %14, align 8
  %16 = tail call zeroext i8 %15(%"class.rx::ContextImpl"* %11) #21
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %52, label %18

18:                                               ; preds = %9
  store i8 1, i8* %5, align 1
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 4
  store i8 0, i8* %19, align 1
  store %"class.gl::Context"* null, %"class.gl::Context"** @_ZN2gl20gCurrentValidContextE, align 8
  br label %52

20:                                               ; preds = %1
  br i1 %7, label %33, label %21

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %23 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %22, align 8
  %24 = bitcast %"class.rx::ContextImpl"* %23 to i8 (%"class.rx::ContextImpl"*)***
  %25 = load i8 (%"class.rx::ContextImpl"*)**, i8 (%"class.rx::ContextImpl"*)*** %24, align 8
  %26 = getelementptr inbounds i8 (%"class.rx::ContextImpl"*)*, i8 (%"class.rx::ContextImpl"*)** %25, i64 41
  %27 = load i8 (%"class.rx::ContextImpl"*)*, i8 (%"class.rx::ContextImpl"*)** %26, align 8
  %28 = tail call zeroext i8 %27(%"class.rx::ContextImpl"* %23) #21
  %29 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 36
  store i8 %28, i8* %29, align 2
  %30 = icmp eq i8 %28, 0
  br i1 %30, label %49, label %31

31:                                               ; preds = %21
  store i8 1, i8* %5, align 1
  %32 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 4
  store i8 0, i8* %32, align 1
  store %"class.gl::Context"* null, %"class.gl::Context"** @_ZN2gl20gCurrentValidContextE, align 8
  br label %49

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 37
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  %37 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 36
  %38 = load i8, i8* %37, align 2
  br i1 %36, label %39, label %49

39:                                               ; preds = %33
  %40 = icmp eq i8 %38, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %43 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %42, align 8
  %44 = bitcast %"class.rx::ContextImpl"* %43 to i8 (%"class.rx::ContextImpl"*)***
  %45 = load i8 (%"class.rx::ContextImpl"*)**, i8 (%"class.rx::ContextImpl"*)*** %44, align 8
  %46 = getelementptr inbounds i8 (%"class.rx::ContextImpl"*)*, i8 (%"class.rx::ContextImpl"*)** %45, i64 41
  %47 = load i8 (%"class.rx::ContextImpl"*)*, i8 (%"class.rx::ContextImpl"*)** %46, align 8
  %48 = tail call zeroext i8 %47(%"class.rx::ContextImpl"* %43) #21
  store i8 %48, i8* %37, align 2
  br label %49

49:                                               ; preds = %33, %39, %21, %41, %31
  %50 = phi i8 [ 0, %39 ], [ 0, %21 ], [ %48, %41 ], [ %28, %31 ], [ %38, %33 ]
  %51 = tail call i32 @_ZN2gl8ToGLenumENS_19GraphicsResetStatusE(i8 zeroext %50) #21
  br label %52

52:                                               ; preds = %8, %18, %9, %49
  %53 = phi i32 [ %51, %49 ], [ 0, %9 ], [ 0, %18 ], [ 0, %8 ]
  ret i32 %53
}

declare i32 @_ZN2gl8ToGLenumENS_19GraphicsResetStatusE(i8 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context26isResetNotificationEnabledEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 38
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 33362
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.egl::Config"* @_ZNK2gl7Context9getConfigEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 16
  %3 = load %"struct.egl::Config"*, %"struct.egl::Config"** %2, align 8
  ret %"struct.egl::Config"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2gl7Context13getClientTypeEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2gl7Context15getRenderBufferEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %3 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %2, align 8
  %4 = load i32, i32* getelementptr inbounds (%"struct.gl::FramebufferID", %"struct.gl::FramebufferID"* @_ZN2gl11Framebuffer29kDefaultDrawFramebufferHandleE, i64 0, i32 0), align 4
  %5 = tail call %"class.gl::Framebuffer"* @_ZNK2gl18FramebufferManager14getFramebufferENS_13FramebufferIDE(%"class.gl::FramebufferManager"* %3, i32 %4) #21
  %6 = icmp eq %"class.gl::Framebuffer"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer13getAttachmentEPKNS_7ContextEj(%"class.gl::Framebuffer"* nonnull %5, %"class.gl::Context"* %0, i32 1029) #21
  %9 = tail call %"class.egl::Surface"* @_ZNK2gl21FramebufferAttachment10getSurfaceEv(%"class.gl::FramebufferAttachment"* %8) #21
  %10 = tail call i32 @_ZNK3egl7Surface15getRenderBufferEv(%"class.egl::Surface"* %9) #21
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 12344, %1 ]
  ret i32 %12
}

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer13getAttachmentEPKNS_7ContextEj(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

declare %"class.egl::Surface"* @_ZNK2gl21FramebufferAttachment10getSurfaceEv(%"class.gl::FramebufferAttachment"*) local_unnamed_addr #3

declare i32 @_ZNK3egl7Surface15getRenderBufferEv(%"class.egl::Surface"*) local_unnamed_addr #3

declare void @_ZN2gl11VertexArrayC1EPN2rx13GLImplFactoryENS_13VertexArrayIDEmm(%"class.gl::VertexArray"*, %"class.rx::GLImplFactory"*, i32, i64, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_11VertexArrayENS_13VertexArrayIDEE6assignES2_PS1_(%"class.gl::ResourceMap.566"*, i32, %"class.gl::VertexArray"*) local_unnamed_addr #5 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %0, i64 0, i32 1
  %16 = load %"class.gl::VertexArray"**, %"class.gl::VertexArray"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #27
  %22 = bitcast i8* %21 to %"class.gl::VertexArray"**
  %23 = bitcast %"class.gl::VertexArray"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %22, i64 %8
  %25 = bitcast %"class.gl::VertexArray"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::VertexArray"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::VertexArray"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #27
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %0, i64 0, i32 1
  %34 = load %"class.gl::VertexArray"**, %"class.gl::VertexArray"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.568", %"class.absl::container_internal::raw_hash_map.568"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !232
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.568", %"class.absl::container_internal::raw_hash_map.568"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !232
  %49 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !232
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !232
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %59, align 8, !noalias !232
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #21, !range !8
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !232
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !9

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !10

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11VertexArrayEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.569"* %38, i64 %46) #21, !noalias !232
  %95 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %59, align 8, !noalias !232
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !232
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::VertexArray"* null, %"class.gl::VertexArray"** %97, align 8, !noalias !232
  %98 = load i8*, i8** %47, align 8, !noalias !232
  %99 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %59, align 8, !noalias !232
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.570"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #21, !noalias !232
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !9

108:                                              ; preds = %100
  tail call void @llvm.trap() #21
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::VertexArray"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::VertexArray"* %2, %"class.gl::VertexArray"** %112, align 8
  ret void
}

declare void @_ZN2gl17TransformFeedbackC1EPN2rx13GLImplFactoryENS_19TransformFeedbackIDERKNS_4CapsE(%"class.gl::TransformFeedback"*, %"class.rx::GLImplFactory"*, i32, %"struct.gl::Caps"* dereferenceable(872)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_17TransformFeedbackENS_19TransformFeedbackIDEE6assignES2_PS1_(%"class.gl::ResourceMap.576"*, i32, %"class.gl::TransformFeedback"*) local_unnamed_addr #5 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %0, i64 0, i32 1
  %16 = load %"class.gl::TransformFeedback"**, %"class.gl::TransformFeedback"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #27
  %22 = bitcast i8* %21 to %"class.gl::TransformFeedback"**
  %23 = bitcast %"class.gl::TransformFeedback"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %22, i64 %8
  %25 = bitcast %"class.gl::TransformFeedback"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::TransformFeedback"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::TransformFeedback"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #27
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %0, i64 0, i32 1
  %34 = load %"class.gl::TransformFeedback"**, %"class.gl::TransformFeedback"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.578", %"class.absl::container_internal::raw_hash_map.578"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !235
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.578", %"class.absl::container_internal::raw_hash_map.578"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !235
  %49 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !235
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !235
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %59, align 8, !noalias !235
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #21, !range !8
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !235
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !9

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !10

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl17TransformFeedbackEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.579"* %38, i64 %46) #21, !noalias !235
  %95 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %59, align 8, !noalias !235
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !235
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::TransformFeedback"* null, %"class.gl::TransformFeedback"** %97, align 8, !noalias !235
  %98 = load i8*, i8** %47, align 8, !noalias !235
  %99 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %59, align 8, !noalias !235
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.580"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #21, !noalias !235
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !9

108:                                              ; preds = %100
  tail call void @llvm.trap() #21
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::TransformFeedback"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::TransformFeedback"* %2, %"class.gl::TransformFeedback"** %112, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context22isVertexArrayGeneratedENS_13VertexArrayIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 1
  %9 = load %"class.gl::VertexArray"**, %"class.gl::VertexArray"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %9, i64 %3
  %11 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %10, align 8
  %12 = icmp ne %"class.gl::VertexArray"* %11, inttoptr (i64 -1 to %"class.gl::VertexArray"*)
  br label %76

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %15 = add i64 %14, %3
  %16 = zext i64 %15 to i128
  %17 = mul nuw i128 %16, 11376068507788127593
  %18 = lshr i128 %17, 64
  %19 = xor i128 %18, %17
  %20 = trunc i128 %19 to i64
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = lshr i64 %20, 7
  %26 = ptrtoint i8* %22 to i64
  %27 = lshr i64 %26, 12
  %28 = xor i64 %25, %27
  %29 = trunc i128 %19 to i8
  %30 = and i8 %29, 127
  %31 = insertelement <16 x i8> undef, i8 %30, i32 0
  %32 = shufflevector <16 x i8> %31, <16 x i8> undef, <16 x i32> zeroinitializer
  %33 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 1
  br label %34

34:                                               ; preds = %64, %13
  %35 = phi i64 [ %28, %13 ], [ %66, %64 ]
  %36 = phi i64 [ 0, %13 ], [ %65, %64 ]
  %37 = and i64 %35, %24
  %38 = getelementptr inbounds i8, i8* %22, i64 %37
  %39 = bitcast i8* %38 to <16 x i8>*
  %40 = load <16 x i8>, <16 x i8>* %39, align 1
  %41 = icmp eq <16 x i8> %32, %40
  %42 = bitcast <16 x i1> %41 to i16
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %60, label %44

44:                                               ; preds = %34
  %45 = zext i16 %42 to i32
  %46 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %33, align 8
  br label %47

47:                                               ; preds = %56, %44
  %48 = phi i32 [ %45, %44 ], [ %58, %56 ]
  %49 = tail call i32 @llvm.cttz.i32(i32 %48, i1 false) #21, !range !8
  %50 = zext i32 %49 to i64
  %51 = add i64 %37, %50
  %52 = and i64 %51, %24
  %53 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %46, i64 %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %67, label %56, !prof !9

56:                                               ; preds = %47
  %57 = add i32 %48, -1
  %58 = and i32 %57, %48
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %47

60:                                               ; preds = %56, %34
  %61 = icmp eq <16 x i8> %40, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %62 = bitcast <16 x i1> %61 to i16
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %64, label %73, !prof !10

64:                                               ; preds = %60
  %65 = add i64 %36, 16
  %66 = add i64 %65, %37
  br label %34

67:                                               ; preds = %47
  %68 = getelementptr inbounds i8, i8* %22, i64 %52
  %69 = icmp ne i8* %68, null
  tail call void @llvm.assume(i1 %69) #21
  %70 = load i8, i8* %68, align 1
  %71 = icmp sgt i8 %70, -1
  br i1 %71, label %73, label %72, !prof !9

72:                                               ; preds = %67
  tail call void @llvm.trap() #21
  unreachable

73:                                               ; preds = %60, %67
  %74 = phi i8* [ %68, %67 ], [ null, %60 ]
  %75 = icmp ne i8* %74, null
  br label %76

76:                                               ; preds = %7, %73
  %77 = phi i1 [ %12, %7 ], [ %75, %73 ]
  ret i1 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context28isTransformFeedbackGeneratedENS_19TransformFeedbackIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 1
  %9 = load %"class.gl::TransformFeedback"**, %"class.gl::TransformFeedback"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %9, i64 %3
  %11 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %10, align 8
  %12 = icmp ne %"class.gl::TransformFeedback"* %11, inttoptr (i64 -1 to %"class.gl::TransformFeedback"*)
  br label %76

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %15 = add i64 %14, %3
  %16 = zext i64 %15 to i128
  %17 = mul nuw i128 %16, 11376068507788127593
  %18 = lshr i128 %17, 64
  %19 = xor i128 %18, %17
  %20 = trunc i128 %19 to i64
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = lshr i64 %20, 7
  %26 = ptrtoint i8* %22 to i64
  %27 = lshr i64 %26, 12
  %28 = xor i64 %25, %27
  %29 = trunc i128 %19 to i8
  %30 = and i8 %29, 127
  %31 = insertelement <16 x i8> undef, i8 %30, i32 0
  %32 = shufflevector <16 x i8> %31, <16 x i8> undef, <16 x i32> zeroinitializer
  %33 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 1
  br label %34

34:                                               ; preds = %64, %13
  %35 = phi i64 [ %28, %13 ], [ %66, %64 ]
  %36 = phi i64 [ 0, %13 ], [ %65, %64 ]
  %37 = and i64 %35, %24
  %38 = getelementptr inbounds i8, i8* %22, i64 %37
  %39 = bitcast i8* %38 to <16 x i8>*
  %40 = load <16 x i8>, <16 x i8>* %39, align 1
  %41 = icmp eq <16 x i8> %32, %40
  %42 = bitcast <16 x i1> %41 to i16
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %60, label %44

44:                                               ; preds = %34
  %45 = zext i16 %42 to i32
  %46 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %33, align 8
  br label %47

47:                                               ; preds = %56, %44
  %48 = phi i32 [ %45, %44 ], [ %58, %56 ]
  %49 = tail call i32 @llvm.cttz.i32(i32 %48, i1 false) #21, !range !8
  %50 = zext i32 %49 to i64
  %51 = add i64 %37, %50
  %52 = and i64 %51, %24
  %53 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %46, i64 %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %67, label %56, !prof !9

56:                                               ; preds = %47
  %57 = add i32 %48, -1
  %58 = and i32 %57, %48
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %47

60:                                               ; preds = %56, %34
  %61 = icmp eq <16 x i8> %40, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %62 = bitcast <16 x i1> %61 to i16
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %64, label %73, !prof !10

64:                                               ; preds = %60
  %65 = add i64 %36, 16
  %66 = add i64 %65, %37
  br label %34

67:                                               ; preds = %47
  %68 = getelementptr inbounds i8, i8* %22, i64 %52
  %69 = icmp ne i8* %68, null
  tail call void @llvm.assume(i1 %69) #21
  %70 = load i8, i8* %68, align 1
  %71 = icmp sgt i8 %70, -1
  br i1 %71, label %73, label %72, !prof !9

72:                                               ; preds = %67
  tail call void @llvm.trap() #21
  unreachable

73:                                               ; preds = %60, %67
  %74 = phi i8* [ %68, %67 ], [ null, %60 ]
  %75 = icmp ne i8* %74, null
  br label %76

76:                                               ; preds = %7, %73
  %77 = phi i1 [ %12, %7 ], [ %75, %73 ]
  ret i1 %77
}

declare void @_ZN2gl5State13detachTextureEPKNS_7ContextERKN5angle13PackedEnumMapINS_11TextureTypeENS_14BindingPointerINS_7TextureEEELm11EEENS_9TextureIDE(%"class.gl::State"*, %"class.gl::Context"*, %"class.angle::PackedEnumMap.544"* dereferenceable(176), i32) local_unnamed_addr #3

declare i32 @_ZN2gl5State12detachBufferEPNS_7ContextEPKNS_6BufferE(%"class.gl::State"*, %"class.gl::Context"*, %"class.gl::Buffer"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2gl5State28removeReadFramebufferBindingENS_13FramebufferIDE(%"class.gl::State"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN2gl5State28removeDrawFramebufferBindingENS_13FramebufferIDE(%"class.gl::State"*, i32) local_unnamed_addr #3

declare void @_ZN2gl5State18detachRenderbufferEPKNS_7ContextENS_14RenderbufferIDE(%"class.gl::State"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17detachVertexArrayENS_13VertexArrayIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = tail call zeroext i1 @_ZN2gl5State24removeVertexArrayBindingEPKNS_7ContextENS_13VertexArrayIDE(%"class.gl::State"* %3, %"class.gl::Context"* %0, i32 %1) #21
  br i1 %4, label %5, label %12

5:                                                ; preds = %2
  %6 = tail call %"class.gl::VertexArray"* @_ZN2gl7Context26checkVertexArrayAllocationENS_13VertexArrayIDE(%"class.gl::Context"* %0, i32 0) #21
  tail call void @_ZN2gl5State21setVertexArrayBindingEPKNS_7ContextEPNS_11VertexArrayE(%"class.gl::State"* %3, %"class.gl::Context"* %0, %"class.gl::VertexArray"* %6) #21
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 66
  %8 = icmp eq %"class.gl::VertexArray"* %6, null
  %9 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %6, i64 0, i32 2
  %10 = select i1 %8, %"class.angle::Subject"* null, %"class.angle::Subject"* %9
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %7, %"class.angle::Subject"* %10) #21
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache26onVertexArrayBindingChangeEPNS_7ContextE(%"class.gl::StateCache"* %11, %"class.gl::Context"* %0) #21
  br label %12

12:                                               ; preds = %5, %2
  ret void
}

declare zeroext i1 @_ZN2gl5State24removeVertexArrayBindingEPKNS_7ContextENS_13VertexArrayIDE(%"class.gl::State"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23detachTransformFeedbackENS_19TransformFeedbackIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = tail call zeroext i1 @_ZN2gl5State30removeTransformFeedbackBindingEPKNS_7ContextENS_19TransformFeedbackIDE(%"class.gl::State"* %3, %"class.gl::Context"* %0, i32 %1) #21
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = tail call %"class.gl::TransformFeedback"* @_ZN2gl7Context32checkTransformFeedbackAllocationENS_19TransformFeedbackIDE(%"class.gl::Context"* %0, i32 0) #21
  tail call void @_ZN2gl5State27setTransformFeedbackBindingEPKNS_7ContextEPNS_17TransformFeedbackE(%"class.gl::State"* %3, %"class.gl::Context"* %0, %"class.gl::TransformFeedback"* %6) #21
  br label %7

7:                                                ; preds = %5, %2
  ret void
}

declare zeroext i1 @_ZN2gl5State30removeTransformFeedbackBindingEPKNS_7ContextENS_19TransformFeedbackIDE(%"class.gl::State"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13detachSamplerENS_9SamplerIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State13detachSamplerEPKNS_7ContextENS_9SamplerIDE(%"class.gl::State"* %3, %"class.gl::Context"* %0, i32 %1) #21
  ret void
}

declare void @_ZN2gl5State13detachSamplerEPKNS_7ContextENS_9SamplerIDE(%"class.gl::State"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

declare void @_ZN2gl5State21detachProgramPipelineEPKNS_7ContextENS_17ProgramPipelineIDE(%"class.gl::State"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19vertexAttribDivisorEjj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State22setVertexAttribDivisorEPKNS_7ContextEjj(%"class.gl::State"* %4, %"class.gl::Context"* %0, i32 %1, i32 %2) #21
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache24onVertexArrayStateChangeEPNS_7ContextE(%"class.gl::StateCache"* %5, %"class.gl::Context"* %0)
  ret void
}

declare void @_ZN2gl5State22setVertexAttribDivisorEPKNS_7ContextEjj(%"class.gl::State"*, %"class.gl::Context"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17samplerParameteriENS_9SamplerIDEji(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %6 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %8, i64 0, i32 0
  %10 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"* %6, %"class.rx::GLImplFactory"* %9, i32 %1)
  tail call void @_ZN2gl20SetSamplerParameteriEPNS_7ContextEPNS_7SamplerEji(%"class.gl::Context"* %0, %"class.gl::Sampler"* %10, i32 %2, i32 %3) #21
  ret void
}

declare void @_ZN2gl20SetSamplerParameteriEPNS_7ContextEPNS_7SamplerEji(%"class.gl::Context"*, %"class.gl::Sampler"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18samplerParameterivENS_9SamplerIDEjPKi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %6 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %8, i64 0, i32 0
  %10 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"* %6, %"class.rx::GLImplFactory"* %9, i32 %1)
  tail call void @_ZN2gl21SetSamplerParameterivEPNS_7ContextEPNS_7SamplerEjPKi(%"class.gl::Context"* %0, %"class.gl::Sampler"* %10, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl21SetSamplerParameterivEPNS_7ContextEPNS_7SamplerEjPKi(%"class.gl::Context"*, %"class.gl::Sampler"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19samplerParameterIivENS_9SamplerIDEjPKi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %6 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %8, i64 0, i32 0
  %10 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"* %6, %"class.rx::GLImplFactory"* %9, i32 %1)
  tail call void @_ZN2gl22SetSamplerParameterIivEPNS_7ContextEPNS_7SamplerEjPKi(%"class.gl::Context"* %0, %"class.gl::Sampler"* %10, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl22SetSamplerParameterIivEPNS_7ContextEPNS_7SamplerEjPKi(%"class.gl::Context"*, %"class.gl::Sampler"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20samplerParameterIuivENS_9SamplerIDEjPKj(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %6 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %8, i64 0, i32 0
  %10 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"* %6, %"class.rx::GLImplFactory"* %9, i32 %1)
  tail call void @_ZN2gl23SetSamplerParameterIuivEPNS_7ContextEPNS_7SamplerEjPKj(%"class.gl::Context"* %0, %"class.gl::Sampler"* %10, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl23SetSamplerParameterIuivEPNS_7ContextEPNS_7SamplerEjPKj(%"class.gl::Context"*, %"class.gl::Sampler"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context24samplerParameterivRobustENS_9SamplerIDEjiPKi(%"class.gl::Context"*, i32, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %7 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %9 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %9, i64 0, i32 0
  %11 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"* %7, %"class.rx::GLImplFactory"* %10, i32 %1) #21
  tail call void @_ZN2gl21SetSamplerParameterivEPNS_7ContextEPNS_7SamplerEjPKi(%"class.gl::Context"* %0, %"class.gl::Sampler"* %11, i32 %2, i32* %4) #21
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context25samplerParameterIivRobustENS_9SamplerIDEjiPKi(%"class.gl::Context"* nocapture, i32, i32, i32, i32* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context26samplerParameterIuivRobustENS_9SamplerIDEjiPKj(%"class.gl::Context"* nocapture, i32, i32, i32, i32* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17samplerParameterfENS_9SamplerIDEjf(%"class.gl::Context"*, i32, i32, float) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %6 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %8, i64 0, i32 0
  %10 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"* %6, %"class.rx::GLImplFactory"* %9, i32 %1)
  tail call void @_ZN2gl20SetSamplerParameterfEPNS_7ContextEPNS_7SamplerEjf(%"class.gl::Context"* %0, %"class.gl::Sampler"* %10, i32 %2, float %3) #21
  ret void
}

declare void @_ZN2gl20SetSamplerParameterfEPNS_7ContextEPNS_7SamplerEjf(%"class.gl::Context"*, %"class.gl::Sampler"*, i32, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18samplerParameterfvENS_9SamplerIDEjPKf(%"class.gl::Context"*, i32, i32, float*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %6 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %8, i64 0, i32 0
  %10 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"* %6, %"class.rx::GLImplFactory"* %9, i32 %1)
  tail call void @_ZN2gl21SetSamplerParameterfvEPNS_7ContextEPNS_7SamplerEjPKf(%"class.gl::Context"* %0, %"class.gl::Sampler"* %10, i32 %2, float* %3) #21
  ret void
}

declare void @_ZN2gl21SetSamplerParameterfvEPNS_7ContextEPNS_7SamplerEjPKf(%"class.gl::Context"*, %"class.gl::Sampler"*, i32, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context24samplerParameterfvRobustENS_9SamplerIDEjiPKf(%"class.gl::Context"*, i32, i32, i32, float*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %7 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %9 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %9, i64 0, i32 0
  %11 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"* %7, %"class.rx::GLImplFactory"* %10, i32 %1) #21
  tail call void @_ZN2gl21SetSamplerParameterfvEPNS_7ContextEPNS_7SamplerEjPKf(%"class.gl::Context"* %0, %"class.gl::Sampler"* %11, i32 %2, float* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21getSamplerParameterivENS_9SamplerIDEjPi(%"class.gl::Context"* nocapture readonly, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %6 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %8, i64 0, i32 0
  %10 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"* %6, %"class.rx::GLImplFactory"* %9, i32 %1)
  tail call void @_ZN2gl23QuerySamplerParameterivEPKNS_7SamplerEjPi(%"class.gl::Sampler"* %10, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl23QuerySamplerParameterivEPKNS_7SamplerEjPi(%"class.gl::Sampler"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context22getSamplerParameterIivENS_9SamplerIDEjPi(%"class.gl::Context"* nocapture readonly, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %6 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %8, i64 0, i32 0
  %10 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"* %6, %"class.rx::GLImplFactory"* %9, i32 %1)
  tail call void @_ZN2gl24QuerySamplerParameterIivEPKNS_7SamplerEjPi(%"class.gl::Sampler"* %10, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl24QuerySamplerParameterIivEPKNS_7SamplerEjPi(%"class.gl::Sampler"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23getSamplerParameterIuivENS_9SamplerIDEjPj(%"class.gl::Context"* nocapture readonly, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %6 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %8, i64 0, i32 0
  %10 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"* %6, %"class.rx::GLImplFactory"* %9, i32 %1)
  tail call void @_ZN2gl25QuerySamplerParameterIuivEPKNS_7SamplerEjPj(%"class.gl::Sampler"* %10, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl25QuerySamplerParameterIuivEPKNS_7SamplerEjPj(%"class.gl::Sampler"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context27getSamplerParameterivRobustENS_9SamplerIDEjiPiS2_(%"class.gl::Context"* nocapture readonly, i32, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %8 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %10, i64 0, i32 0
  %12 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"* %8, %"class.rx::GLImplFactory"* %11, i32 %1) #21
  tail call void @_ZN2gl23QuerySamplerParameterivEPKNS_7SamplerEjPi(%"class.gl::Sampler"* %12, i32 %2, i32* %5) #21
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context28getSamplerParameterIivRobustENS_9SamplerIDEjiPiS2_(%"class.gl::Context"* nocapture, i32, i32, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context29getSamplerParameterIuivRobustENS_9SamplerIDEjiPiPj(%"class.gl::Context"* nocapture, i32, i32, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21getSamplerParameterfvENS_9SamplerIDEjPf(%"class.gl::Context"* nocapture readonly, i32, i32, float*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %6 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %8, i64 0, i32 0
  %10 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"* %6, %"class.rx::GLImplFactory"* %9, i32 %1)
  tail call void @_ZN2gl23QuerySamplerParameterfvEPKNS_7SamplerEjPf(%"class.gl::Sampler"* %10, i32 %2, float* %3) #21
  ret void
}

declare void @_ZN2gl23QuerySamplerParameterfvEPKNS_7SamplerEjPf(%"class.gl::Sampler"*, i32, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context27getSamplerParameterfvRobustENS_9SamplerIDEjiPiPf(%"class.gl::Context"* nocapture readonly, i32, i32, i32, i32* nocapture readnone, float*) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %8 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %10, i64 0, i32 0
  %12 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager22checkSamplerAllocationEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::SamplerManager"* %8, %"class.rx::GLImplFactory"* %11, i32 %1) #21
  tail call void @_ZN2gl23QuerySamplerParameterfvEPKNS_7SamplerEjPf(%"class.gl::Sampler"* %12, i32 %2, float* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17programParameteriENS_15ShaderProgramIDEji(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %16, label %88, label %80

17:                                               ; preds = %4
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %88, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %77, %11
  %81 = phi %"class.gl::Program"* [ %15, %11 ], [ %79, %77 ]
  %82 = icmp eq %"class.gl::Program"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %81, i64 0, i32 11, i32 0, i32 0, i32 0
  %85 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %84, align 8
  %86 = icmp eq %"struct.gl::Program::LinkingState"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %81, %"class.gl::Context"* %0) #21
  br label %88

88:                                               ; preds = %64, %11, %80, %83, %87
  %89 = phi %"class.gl::Program"* [ null, %80 ], [ %81, %83 ], [ %81, %87 ], [ null, %11 ], [ null, %64 ]
  tail call void @_ZN2gl20SetProgramParameteriEPNS_7ProgramEji(%"class.gl::Program"* %89, i32 %2, i32 %3) #21
  ret void
}

declare void @_ZN2gl20SetProgramParameteriEPNS_7ProgramEji(%"class.gl::Program"*, i32, i32) local_unnamed_addr #3

declare void @_ZNK3egl7Display22getBackendVendorStringEv(%"class.std::__1::basic_string"* sret, %"class.egl::Display"*) local_unnamed_addr #3

declare void @_ZNK3egl7Display29getBackendRendererDescriptionEv(%"class.std::__1::basic_string"* sret, %"class.egl::Display"*) local_unnamed_addr #3

declare void @_ZNK3egl7Display23getBackendVersionStringEv(%"class.std::__1::basic_string"* sret, %"class.egl::Display"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

declare void @_ZNK2gl10Extensions10getStringsEv(%"class.std::__1::vector.125"* sret, %"struct.gl::Extensions"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc i8* @"_ZZN2gl7Context20initExtensionStringsEvENK3$_0clERKNSt3__16vectorIPKcNS2_9allocatorIS5_EEEE"(%"class.std::__1::vector.586"* nocapture readonly dereferenceable(24)) unnamed_addr #16 align 2 {
  %2 = alloca %"class.std::__1::basic_ostringstream", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_ostringstream"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %4) #21
  %5 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_stringbuf"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 256, i1 false)
  %7 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %2 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %2 to i8**
  %15 = inttoptr i64 %11 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %4, i64 %18
  %20 = bitcast i8* %19 to i64*
  store i64 %13, i64* %20, align 8
  %21 = load i8*, i8** %14, align 8
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %4, i64 %24
  %26 = bitcast i8* %25 to %"class.std::__1::ios_base"*
  %27 = bitcast %"class.std::__1::basic_stringbuf"* %9 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %26, i8* %27) #21
  %28 = getelementptr inbounds i8, i8* %25, i64 136
  %29 = bitcast i8* %28 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %29, align 8
  %30 = getelementptr inbounds i8, i8* %25, i64 144
  %31 = bitcast i8* %30 to i32*
  store i32 -1, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %10) #21
  %32 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 1, i32 3
  %35 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 32, i1 false) #21
  store i32 16, i32* %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.586", %"class.std::__1::vector.586"* %0, i64 0, i32 0, i32 0
  %37 = load i8**, i8*** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector.586", %"class.std::__1::vector.586"* %0, i64 0, i32 0, i32 1
  %39 = load i8**, i8*** %38, align 8
  %40 = bitcast %"class.std::__1::basic_ostringstream"* %2 to %"class.std::__1::basic_ostream"*
  %41 = icmp eq i8** %37, %39
  br i1 %41, label %50, label %42

42:                                               ; preds = %1, %42
  %43 = phi i8** [ %48, %42 ], [ %37, %1 ]
  %44 = load i8*, i8** %43, align 8
  %45 = call i64 @strlen(i8* %44) #21
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %40, i8* %44, i64 %45) #21
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %40, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0), i64 1) #21
  %48 = getelementptr inbounds i8*, i8** %43, i64 1
  %49 = icmp eq i8** %48, %39
  br i1 %49, label %50, label %42

50:                                               ; preds = %42, %1
  %51 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #21
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_stringbuf"* %9) #21
  %52 = load atomic i8, i8* bitcast (i64* @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings to i8*) acquire, align 8
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %61, !prof !38

54:                                               ; preds = %50
  %55 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings) #21
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %54
  %58 = call i8* @_Znwm(i64 24) #27
  %59 = getelementptr inbounds i8, i8* %58, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #21
  %60 = bitcast i8* %58 to i8**
  store i8* %59, i8** %60, align 8
  store i8* %58, i8** bitcast (%"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings) #21
  br label %61

61:                                               ; preds = %57, %54, %50
  %62 = load %"class.std::__1::set.1056"*, %"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings, align 8
  %63 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %62, i64 0, i32 0
  %64 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.1057"* %63, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #21
  %65 = load %"class.std::__1::set.1056"*, %"class.std::__1::set.1056"** @_ZZ16MakeStaticStringRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE7strings, align 8
  %66 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %65, i64 0, i32 0, i32 1, i32 0, i32 0
  %67 = icmp eq %"class.std::__1::__tree_end_node"* %64, %66
  br i1 %67, label %79, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 4
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = bitcast %"class.std::__1::__tree_end_node"* %69 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %93

77:                                               ; preds = %68
  %78 = bitcast %"class.std::__1::__tree_end_node"* %69 to i8*
  br label %93

79:                                               ; preds = %61
  %80 = getelementptr inbounds %"class.std::__1::set.1056", %"class.std::__1::set.1056"* %65, i64 0, i32 0
  %81 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1057"* %80, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #21
  %82 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %81, 0
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 4
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %79
  %89 = bitcast %"class.std::__1::__tree_end_node"* %83 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %93

91:                                               ; preds = %79
  %92 = bitcast %"class.std::__1::__tree_end_node"* %83 to i8*
  br label %93

93:                                               ; preds = %74, %77, %88, %91
  %94 = phi i8* [ %76, %74 ], [ %78, %77 ], [ %90, %88 ], [ %92, %91 ]
  %95 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #27
  br label %102

102:                                              ; preds = %93, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #21
  %103 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %103, i64* %12, align 8
  %104 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %105 = inttoptr i64 %103 to i8*
  %106 = getelementptr i8, i8* %105, i64 -24
  %107 = bitcast i8* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds i8, i8* %4, i64 %108
  %110 = bitcast i8* %109 to i64*
  store i64 %104, i64* %110, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %111 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %102
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %117) #27
  br label %118

118:                                              ; preds = %102, %115
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %10) #21
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %40, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #21
  %119 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %2, i64 0, i32 2
  %120 = bitcast %"class.std::__1::basic_ios.base"* %119 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %120) #21
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %4) #21
  ret i8* %94
}

declare dereferenceable(24) %"class.std::__1::map.936"* @_ZN2gl19GetExtensionInfoMapEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2gl7Context9getStringEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %45 [
    i32 7936, label %3
    i32 7937, label %16
    i32 7938, label %19
    i32 35724, label %22
    i32 7939, label %25
    i32 37800, label %28
    i32 38576, label %31
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 45
  %5 = load %"class.egl::Display"*, %"class.egl::Display"** %4, align 8
  %6 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK3egl7Display15getVendorStringEv(%"class.egl::Display"* %5) #21
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  br label %45

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  br label %45

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 28
  %18 = load i8*, i8** %17, align 8
  br label %45

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 26
  %21 = load i8*, i8** %20, align 8
  br label %45

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 27
  %24 = load i8*, i8** %23, align 8
  br label %45

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 29
  %27 = load i8*, i8** %26, align 8
  br label %45

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 31
  %30 = load i8*, i8** %29, align 8
  br label %45

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 76
  %33 = tail call i32 @_ZN5angle24SerializeContextToStringEPKN2gl7ContextEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.gl::Context"* %0, %"class.std::__1::basic_string"* %32) #21
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %45

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  br label %45

43:                                               ; preds = %35
  %44 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  br label %45

45:                                               ; preds = %2, %11, %14, %16, %19, %22, %25, %28, %31, %40, %43
  %46 = phi i8* [ %30, %28 ], [ %27, %25 ], [ %24, %22 ], [ %21, %19 ], [ %18, %16 ], [ null, %31 ], [ null, %2 ], [ %13, %11 ], [ %15, %14 ], [ %42, %40 ], [ %44, %43 ]
  ret i8* %46
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK2gl7Context9getStringEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %45 [
    i32 7936, label %3
    i32 7937, label %16
    i32 7938, label %19
    i32 35724, label %22
    i32 7939, label %25
    i32 37800, label %28
    i32 38576, label %31
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 45
  %5 = load %"class.egl::Display"*, %"class.egl::Display"** %4, align 8
  %6 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK3egl7Display15getVendorStringEv(%"class.egl::Display"* %5) #21
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  br label %45

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  br label %45

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 28
  %18 = load i8*, i8** %17, align 8
  br label %45

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 26
  %21 = load i8*, i8** %20, align 8
  br label %45

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 27
  %24 = load i8*, i8** %23, align 8
  br label %45

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 29
  %27 = load i8*, i8** %26, align 8
  br label %45

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 31
  %30 = load i8*, i8** %29, align 8
  br label %45

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 76
  %33 = tail call i32 @_ZN5angle24SerializeContextToStringEPKN2gl7ContextEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.gl::Context"* %0, %"class.std::__1::basic_string"* %32) #21
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %45

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  br label %45

43:                                               ; preds = %35
  %44 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  br label %45

45:                                               ; preds = %43, %40, %14, %11, %2, %31, %28, %25, %22, %19, %16
  %46 = phi i8* [ %30, %28 ], [ %27, %25 ], [ %24, %22 ], [ %21, %19 ], [ %18, %16 ], [ null, %31 ], [ null, %2 ], [ %13, %11 ], [ %15, %14 ], [ %42, %40 ], [ %44, %43 ]
  ret i8* %46
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN2gl7Context10getStringiEjj(%"class.gl::Context"* nocapture readonly, i32, i32) local_unnamed_addr #9 align 2 {
  switch i32 %1, label %14 [
    i32 7939, label %4
    i32 37800, label %6
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 30, i32 0, i32 0
  br label %8

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 32, i32 0, i32 0
  br label %8

8:                                                ; preds = %6, %4
  %9 = phi i8*** [ %5, %4 ], [ %7, %6 ]
  %10 = zext i32 %2 to i64
  %11 = load i8**, i8*** %9, align 8
  %12 = getelementptr inbounds i8*, i8** %11, i64 %10
  %13 = load i8*, i8** %12, align 8
  br label %14

14:                                               ; preds = %8, %3
  %15 = phi i8* [ null, %3 ], [ %13, %8 ]
  ret i8* %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK2gl7Context10getStringiEjj(%"class.gl::Context"* nocapture readonly, i32, i32) local_unnamed_addr #9 align 2 {
  switch i32 %1, label %14 [
    i32 7939, label %4
    i32 37800, label %6
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 30, i32 0, i32 0
  br label %8

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 32, i32 0, i32 0
  br label %8

8:                                                ; preds = %4, %6
  %9 = phi i8*** [ %7, %6 ], [ %5, %4 ]
  %10 = zext i32 %2 to i64
  %11 = load i8**, i8*** %9, align 8
  %12 = getelementptr inbounds i8*, i8** %11, i64 %10
  %13 = load i8*, i8** %12, align 8
  br label %14

14:                                               ; preds = %8, %3
  %15 = phi i8* [ null, %3 ], [ %13, %8 ]
  ret i8* %15
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK3egl7Display15getVendorStringEv(%"class.egl::Display"*) local_unnamed_addr #3

declare i32 @_ZN5angle24SerializeContextToStringEPKN2gl7ContextEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.gl::Context"*, %"class.std::__1::basic_string"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2gl7Context23getExtensionStringCountEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 30
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 30, i32 0, i32 1
  %4 = bitcast i8*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.586"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context22isExtensionRequestableEPKc(%"class.gl::Context"* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = tail call dereferenceable(24) %"class.std::__1::map.936"* @_ZN2gl19GetExtensionInfoMapEv() #21
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #21
  %6 = tail call i64 @strlen(i8* %1) #21
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #28
  unreachable

10:                                               ; preds = %2
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #27
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

21:                                               ; preds = %10
  %22 = trunc i64 %6 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21, %12
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %20, %12 ]
  %28 = phi i8* [ %5, %21 ], [ %15, %12 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %1, i64 %6, i1 false) #21
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %27, %26 ]
  %31 = phi i8* [ %5, %21 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %6
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %"class.std::__1::map.936", %"class.std::__1::map.936"* %4, i64 0, i32 0
  %34 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN2gl13ExtensionInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree.937"* %33, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #21
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #27
  br label %41

41:                                               ; preds = %29, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #21
  %42 = getelementptr inbounds %"class.std::__1::map.936", %"class.std::__1::map.936"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %43 = icmp eq %"class.std::__1::__tree_end_node"* %34, %42
  br i1 %43, label %57, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 7
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to i8*
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 8
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 0
  %54 = getelementptr inbounds i8, i8* %53, i64 %52
  %55 = load i8, i8* %54, align 1, !range !2
  %56 = icmp ne i8 %55, 0
  br label %57

57:                                               ; preds = %41, %44, %49
  %58 = phi i1 [ false, %44 ], [ false, %41 ], [ %56, %49 ]
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context21isExtensionDisablableEPKc(%"class.gl::Context"* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = tail call dereferenceable(24) %"class.std::__1::map.936"* @_ZN2gl19GetExtensionInfoMapEv() #21
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #21
  %6 = tail call i64 @strlen(i8* %1) #21
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #28
  unreachable

10:                                               ; preds = %2
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #27
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

21:                                               ; preds = %10
  %22 = trunc i64 %6 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21, %12
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %20, %12 ]
  %28 = phi i8* [ %5, %21 ], [ %15, %12 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %1, i64 %6, i1 false) #21
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %27, %26 ]
  %31 = phi i8* [ %5, %21 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %6
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %"class.std::__1::map.936", %"class.std::__1::map.936"* %4, i64 0, i32 0
  %34 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN2gl13ExtensionInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree.937"* %33, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #21
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #27
  br label %41

41:                                               ; preds = %29, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #21
  %42 = getelementptr inbounds %"class.std::__1::map.936", %"class.std::__1::map.936"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %43 = icmp eq %"class.std::__1::__tree_end_node"* %34, %42
  br i1 %43, label %58, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 4
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"struct.std::__1::pair.945"*
  %47 = getelementptr inbounds %"struct.std::__1::pair.945", %"struct.std::__1::pair.945"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 8
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 0
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  %56 = load i8, i8* %55, align 1, !range !2
  %57 = icmp ne i8 %56, 0
  br label %58

58:                                               ; preds = %41, %44, %50
  %59 = phi i1 [ false, %44 ], [ false, %41 ], [ %57, %50 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16requestExtensionEPKc(%"class.gl::Context"*, i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context19setExtensionEnabledEPKcb(%"class.gl::Context"* %0, i8* %1, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19setExtensionEnabledEPKcb(%"class.gl::Context"*, i8* nocapture readonly, i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = zext i1 %2 to i8
  %7 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0)) #29
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @_ZN2gl7Context19setExtensionEnabledEPKcb(%"class.gl::Context"* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i1 zeroext %2)
  br label %10

10:                                               ; preds = %9, %3
  %11 = tail call dereferenceable(24) %"class.std::__1::map.936"* @_ZN2gl19GetExtensionInfoMapEv() #21
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #21
  %13 = tail call i64 @strlen(i8* %1) #21
  %14 = icmp ugt i64 %13, -17
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %16) #28
  unreachable

17:                                               ; preds = %10
  %18 = icmp ult i64 %13, 23
  br i1 %18, label %27, label %19

19:                                               ; preds = %17
  %20 = add nuw i64 %13, 16
  %21 = and i64 %20, -16
  %22 = tail call i8* @_Znwm(i64 %21) #27
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = or i64 %21, -9223372036854775808
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %13, i64* %26, align 8
  br label %32

27:                                               ; preds = %17
  %28 = trunc i64 %13 to i8
  %29 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 %28, i8* %30, align 1
  %31 = icmp eq i64 %13, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %27, %19
  %33 = phi i8* [ %22, %19 ], [ %12, %27 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %33, i8* align 1 %1, i64 %13, i1 false) #21
  br label %34

34:                                               ; preds = %27, %32
  %35 = phi i8* [ %12, %27 ], [ %33, %32 ]
  %36 = getelementptr inbounds i8, i8* %35, i64 %13
  store i8 0, i8* %36, align 1
  %37 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #21
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %38 = getelementptr inbounds %"class.std::__1::map.936", %"class.std::__1::map.936"* %11, i64 0, i32 0
  %39 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN2gl13ExtensionInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree.937"* %38, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #21
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %34
  call void @abort() #28
  unreachable

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 1, i32 3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #21
  %45 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #27
  br label %52

52:                                               ; preds = %43, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #21
  %53 = getelementptr inbounds i8, i8* %44, i64 8
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 0
  %57 = getelementptr inbounds i8, i8* %56, i64 %55
  %58 = load i8, i8* %57, align 1, !range !2
  %59 = zext i8 %58 to i32
  %60 = zext i1 %2 to i32
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %63, label %62

62:                                               ; preds = %52
  store i8 %6, i8* %57, align 1
  call void @_ZN2gl7Context34reinitializeAfterExtensionsChangedEv(%"class.gl::Context"* %0)
  br label %63

63:                                               ; preds = %52, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16disableExtensionEPKc(%"class.gl::Context"*, i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context19setExtensionEnabledEPKcb(%"class.gl::Context"* %0, i8* %1, i1 zeroext false)
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #17

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context34reinitializeAfterExtensionsChangedEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context10updateCapsEv(%"class.gl::Context"* %0)
  tail call void @_ZN2gl7Context20initExtensionStringsEv(%"class.gl::Context"* %0)
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 15, i32 0, i32 1
  %3 = load %"class.gl::Compiler"*, %"class.gl::Compiler"** %2, align 8
  store %"class.gl::Compiler"* null, %"class.gl::Compiler"** %2, align 8
  %4 = icmp eq %"class.gl::Compiler"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::Compiler", %"class.gl::Compiler"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.gl::Compiler", %"class.gl::Compiler"* %3, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %5
  %12 = bitcast %"class.gl::Compiler"* %3 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %13 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %12, align 8
  %14 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %13, align 8
  tail call void %14(%"class.angle::RefCountObject"* %6, %"class.gl::Context"* %0) #21
  %15 = bitcast %"class.gl::Compiler"* %3 to void (%"class.angle::RefCountObject"*)***
  %16 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %16, i64 2
  %18 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %17, align 8
  tail call void %18(%"class.angle::RefCountObject"* nonnull %6) #21
  br label %19

19:                                               ; preds = %1, %5, %11
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %21 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %20, align 8
  tail call void @_ZNK2gl14TextureManager22signalAllTexturesDirtyEv(%"class.gl::TextureManager"* %21) #21
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 0, i32 0, i32 1
  %23 = load %"class.gl::Texture"*, %"class.gl::Texture"** %22, align 8
  %24 = icmp eq %"class.gl::Texture"* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %19
  tail call void @_ZN2gl7Texture18signalDirtyStorageENS_9InitStateE(%"class.gl::Texture"* nonnull %23, i32 1) #21
  br label %26

26:                                               ; preds = %19, %25
  %27 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 1, i32 0, i32 1
  %28 = load %"class.gl::Texture"*, %"class.gl::Texture"** %27, align 8
  %29 = icmp eq %"class.gl::Texture"* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @_ZN2gl7Texture18signalDirtyStorageENS_9InitStateE(%"class.gl::Texture"* nonnull %28, i32 1) #21
  br label %31

31:                                               ; preds = %30, %26
  %32 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 2, i32 0, i32 1
  %33 = load %"class.gl::Texture"*, %"class.gl::Texture"** %32, align 8
  %34 = icmp eq %"class.gl::Texture"* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @_ZN2gl7Texture18signalDirtyStorageENS_9InitStateE(%"class.gl::Texture"* nonnull %33, i32 1) #21
  br label %36

36:                                               ; preds = %35, %31
  %37 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 3, i32 0, i32 1
  %38 = load %"class.gl::Texture"*, %"class.gl::Texture"** %37, align 8
  %39 = icmp eq %"class.gl::Texture"* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @_ZN2gl7Texture18signalDirtyStorageENS_9InitStateE(%"class.gl::Texture"* nonnull %38, i32 1) #21
  br label %41

41:                                               ; preds = %40, %36
  %42 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 4, i32 0, i32 1
  %43 = load %"class.gl::Texture"*, %"class.gl::Texture"** %42, align 8
  %44 = icmp eq %"class.gl::Texture"* %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  tail call void @_ZN2gl7Texture18signalDirtyStorageENS_9InitStateE(%"class.gl::Texture"* nonnull %43, i32 1) #21
  br label %46

46:                                               ; preds = %45, %41
  %47 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 5, i32 0, i32 1
  %48 = load %"class.gl::Texture"*, %"class.gl::Texture"** %47, align 8
  %49 = icmp eq %"class.gl::Texture"* %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  tail call void @_ZN2gl7Texture18signalDirtyStorageENS_9InitStateE(%"class.gl::Texture"* nonnull %48, i32 1) #21
  br label %51

51:                                               ; preds = %50, %46
  %52 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 6, i32 0, i32 1
  %53 = load %"class.gl::Texture"*, %"class.gl::Texture"** %52, align 8
  %54 = icmp eq %"class.gl::Texture"* %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %51
  tail call void @_ZN2gl7Texture18signalDirtyStorageENS_9InitStateE(%"class.gl::Texture"* nonnull %53, i32 1) #21
  br label %56

56:                                               ; preds = %55, %51
  %57 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 7, i32 0, i32 1
  %58 = load %"class.gl::Texture"*, %"class.gl::Texture"** %57, align 8
  %59 = icmp eq %"class.gl::Texture"* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %56
  tail call void @_ZN2gl7Texture18signalDirtyStorageENS_9InitStateE(%"class.gl::Texture"* nonnull %58, i32 1) #21
  br label %61

61:                                               ; preds = %60, %56
  %62 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 8, i32 0, i32 1
  %63 = load %"class.gl::Texture"*, %"class.gl::Texture"** %62, align 8
  %64 = icmp eq %"class.gl::Texture"* %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  tail call void @_ZN2gl7Texture18signalDirtyStorageENS_9InitStateE(%"class.gl::Texture"* nonnull %63, i32 1) #21
  br label %66

66:                                               ; preds = %65, %61
  %67 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 9, i32 0, i32 1
  %68 = load %"class.gl::Texture"*, %"class.gl::Texture"** %67, align 8
  %69 = icmp eq %"class.gl::Texture"* %68, null
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  tail call void @_ZN2gl7Texture18signalDirtyStorageENS_9InitStateE(%"class.gl::Texture"* nonnull %68, i32 1) #21
  br label %71

71:                                               ; preds = %70, %66
  %72 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 17, i32 0, i32 0, i64 10, i32 0, i32 1
  %73 = load %"class.gl::Texture"*, %"class.gl::Texture"** %72, align 8
  %74 = icmp eq %"class.gl::Texture"* %73, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  tail call void @_ZN2gl7Texture18signalDirtyStorageENS_9InitStateE(%"class.gl::Texture"* nonnull %73, i32 1) #21
  br label %76

76:                                               ; preds = %75, %71
  %77 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %78 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %77, align 8
  tail call void @_ZNK2gl18FramebufferManager38invalidateFramebufferCompletenessCacheEv(%"class.gl::FramebufferManager"* %78) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10updateCapsEv(%"class.gl::Context"*) local_unnamed_addr #5 align 2 {
  %2 = alloca %"struct.gl::TextureCaps", align 8
  %3 = alloca %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 34
  %5 = bitcast %"class.std::__1::vector"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 34, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 6
  tail call void @_ZN2gl14TextureCapsMap5clearEv(%"class.gl::TextureCapsMap"* %9) #21
  %10 = tail call dereferenceable(24) %"class.std::__1::set.35"* @_ZN2gl26GetAllSizedInternalFormatsEv() #21
  %11 = getelementptr inbounds %"class.std::__1::set.35", %"class.std::__1::set.35"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::set.35", %"class.std::__1::set.35"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = icmp eq %"class.std::__1::__tree_end_node"* %12, %13
  br i1 %14, label %41, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"struct.gl::TextureCaps", %"struct.gl::TextureCaps"* %2, i64 0, i32 0
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7
  %20 = getelementptr inbounds %"struct.gl::TextureCaps", %"struct.gl::TextureCaps"* %2, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.gl::TextureCaps", %"struct.gl::TextureCaps"* %2, i64 0, i32 2
  %22 = getelementptr inbounds %"struct.gl::TextureCaps", %"struct.gl::TextureCaps"* %2, i64 0, i32 3
  %23 = getelementptr inbounds %"struct.gl::TextureCaps", %"struct.gl::TextureCaps"* %2, i64 0, i32 4
  %24 = getelementptr inbounds %"struct.gl::Version", %"struct.gl::Version"* %18, i64 0, i32 0
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 1
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 159
  %27 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 92
  %28 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 26
  %29 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 25
  %30 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 24
  %31 = getelementptr inbounds %"struct.gl::TextureCaps", %"struct.gl::TextureCaps"* %2, i64 0, i32 5
  %32 = getelementptr inbounds %"class.std::__1::set.35", %"class.std::__1::set.35"* %31, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.gl::TextureCaps", %"struct.gl::TextureCaps"* %2, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node.1143"**
  %35 = getelementptr inbounds %"struct.gl::TextureCaps", %"struct.gl::TextureCaps"* %2, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::set.35", %"class.std::__1::set.35"* %31, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %38 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 34, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast i32** %38 to i64*
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  br label %45

41:                                               ; preds = %261, %1
  %42 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 5
  %43 = load i8, i8* %42, align 1, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %264, label %266

45:                                               ; preds = %15, %261
  %46 = phi %"class.std::__1::__tree_end_node"* [ %12, %15 ], [ %262, %261 ]
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_node.1143"*
  %48 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %47, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %50 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %17, align 8
  %51 = bitcast %"class.rx::ContextImpl"* %50 to %"class.gl::TextureCapsMap"* (%"class.rx::ContextImpl"*)***
  %52 = load %"class.gl::TextureCapsMap"* (%"class.rx::ContextImpl"*)**, %"class.gl::TextureCapsMap"* (%"class.rx::ContextImpl"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.gl::TextureCapsMap"* (%"class.rx::ContextImpl"*)*, %"class.gl::TextureCapsMap"* (%"class.rx::ContextImpl"*)** %52, i64 57
  %54 = load %"class.gl::TextureCapsMap"* (%"class.rx::ContextImpl"*)*, %"class.gl::TextureCapsMap"* (%"class.rx::ContextImpl"*)** %53, align 8
  %55 = call dereferenceable(7264) %"class.gl::TextureCapsMap"* %54(%"class.rx::ContextImpl"* %50) #21
  %56 = call dereferenceable(32) %"struct.gl::TextureCaps"* @_ZNK2gl14TextureCapsMap3getEj(%"class.gl::TextureCapsMap"* %55, i32 %49) #21
  call void @_ZN2gl11TextureCapsC1ERKS0_(%"struct.gl::TextureCaps"* nonnull %2, %"struct.gl::TextureCaps"* dereferenceable(32) %56) #21
  %57 = call dereferenceable(128) %"struct.gl::InternalFormat"* @_ZN2gl26GetSizedInternalFormatInfoEj(i32 %49) #21
  %58 = load i8, i8* %16, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %45
  %61 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %57, i64 0, i32 21
  %62 = load i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)** %61, align 8
  %63 = call zeroext i1 %62(%"struct.gl::Version"* dereferenceable(8) %18, %"struct.gl::Extensions"* dereferenceable(228) %19) #21
  br label %64

64:                                               ; preds = %45, %60
  %65 = phi i1 [ false, %45 ], [ %63, %60 ]
  %66 = zext i1 %65 to i8
  store i8 %66, i8* %16, align 8
  %67 = load i8, i8* %20, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %57, i64 0, i32 22
  %71 = load i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)** %70, align 8
  %72 = call zeroext i1 %71(%"struct.gl::Version"* dereferenceable(8) %18, %"struct.gl::Extensions"* dereferenceable(228) %19) #21
  br label %73

73:                                               ; preds = %64, %69
  %74 = phi i1 [ false, %64 ], [ %72, %69 ]
  %75 = zext i1 %74 to i8
  store i8 %75, i8* %20, align 1
  %76 = load i8, i8* %21, align 2, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %57, i64 0, i32 23
  %80 = load i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)** %79, align 8
  %81 = call zeroext i1 %80(%"struct.gl::Version"* dereferenceable(8) %18, %"struct.gl::Extensions"* dereferenceable(228) %19) #21
  br label %82

82:                                               ; preds = %73, %78
  %83 = phi i1 [ false, %73 ], [ %81, %78 ]
  %84 = zext i1 %83 to i8
  store i8 %84, i8* %21, align 2
  %85 = load i8, i8* %22, align 1, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %91, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %57, i64 0, i32 24
  %89 = load i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)** %88, align 8
  %90 = call zeroext i1 %89(%"struct.gl::Version"* dereferenceable(8) %18, %"struct.gl::Extensions"* dereferenceable(228) %19) #21
  br label %91

91:                                               ; preds = %82, %87
  %92 = phi i1 [ false, %82 ], [ %90, %87 ]
  %93 = zext i1 %92 to i8
  store i8 %93, i8* %22, align 1
  %94 = load i8, i8* %23, align 4, !range !2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %101, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %57, i64 0, i32 25
  %98 = load i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)** %97, align 8
  %99 = call zeroext i1 %98(%"struct.gl::Version"* dereferenceable(8) %18, %"struct.gl::Extensions"* dereferenceable(228) %19) #21
  %100 = load i8, i8* %22, align 1
  br label %101

101:                                              ; preds = %91, %96
  %102 = phi i8 [ %93, %91 ], [ %100, %96 ]
  %103 = phi i1 [ false, %91 ], [ %99, %96 ]
  %104 = zext i1 %103 to i8
  store i8 %104, i8* %23, align 4
  %105 = icmp eq i8 %102, 0
  br i1 %105, label %119, label %106

106:                                              ; preds = %101
  %107 = load i32, i32* %24, align 4
  %108 = icmp ult i32 %107, 3
  br i1 %108, label %114, label %109

109:                                              ; preds = %106
  %110 = icmp eq i32 %107, 3
  br i1 %110, label %111, label %121

111:                                              ; preds = %109
  %112 = load i32, i32* %25, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %121

114:                                              ; preds = %106, %111
  %115 = load i8, i8* %26, align 2, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %121

117:                                              ; preds = %114
  %118 = call zeroext i1 @_ZNK2gl14InternalFormat5isIntEv(%"struct.gl::InternalFormat"* %57) #21
  br i1 %118, label %119, label %121

119:                                              ; preds = %101, %117
  %120 = load %"class.std::__1::__tree_node.1143"*, %"class.std::__1::__tree_node.1143"** %34, align 8
  call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.36"* %32, %"class.std::__1::__tree_node.1143"* %120) #21
  store i64 0, i64* %35, align 8
  store %"class.std::__1::__tree_end_node"* %33, %"class.std::__1::__tree_end_node"** %36, align 8
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %37, align 8
  br label %166

121:                                              ; preds = %109, %114, %117, %111
  %122 = call i32 @_ZNK2gl11TextureCaps13getMaxSamplesEv(%"struct.gl::TextureCaps"* nonnull %2) #21
  %123 = call zeroext i1 @_ZNK2gl14InternalFormat5isIntEv(%"struct.gl::InternalFormat"* %57) #21
  br i1 %123, label %130, label %124

124:                                              ; preds = %121
  %125 = call zeroext i1 @_ZNK2gl14InternalFormat28isRequiredRenderbufferFormatERKNS_7VersionE(%"struct.gl::InternalFormat"* %57, %"struct.gl::Version"* dereferenceable(8) %18) #21
  br i1 %125, label %126, label %130

126:                                              ; preds = %124
  %127 = load i32, i32* %27, align 4
  %128 = icmp ult i32 %122, %127
  %129 = select i1 %128, i32 %122, i32 %127
  store i32 %129, i32* %27, align 4
  br label %130

130:                                              ; preds = %126, %124, %121
  %131 = load i32, i32* %24, align 4
  %132 = icmp ult i32 %131, 3
  br i1 %132, label %138, label %133

133:                                              ; preds = %130
  %134 = icmp eq i32 %131, 3
  br i1 %134, label %135, label %141

135:                                              ; preds = %133
  %136 = load i32, i32* %25, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %135, %130
  %139 = load i8, i8* %26, align 2, !range !2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %166, label %141

141:                                              ; preds = %135, %133, %138
  %142 = call zeroext i1 @_ZNK2gl14InternalFormat5isIntEv(%"struct.gl::InternalFormat"* %57) #21
  br i1 %142, label %143, label %147

143:                                              ; preds = %141
  %144 = load i32, i32* %28, align 4
  %145 = icmp ult i32 %122, %144
  %146 = select i1 %145, i32 %122, i32 %144
  store i32 %146, i32* %28, align 4
  br label %147

147:                                              ; preds = %143, %141
  %148 = load i8, i8* %16, align 8, !range !2
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %233, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %57, i64 0, i32 9
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %158, label %154

154:                                              ; preds = %150
  %155 = load i32, i32* %29, align 8
  %156 = icmp ult i32 %122, %155
  %157 = select i1 %156, i32 %122, i32 %155
  store i32 %157, i32* %29, align 8
  br label %166

158:                                              ; preds = %150
  %159 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %57, i64 0, i32 3
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %166, label %162

162:                                              ; preds = %158
  %163 = load i32, i32* %30, align 4
  %164 = icmp ult i32 %122, %163
  %165 = select i1 %164, i32 %122, i32 %163
  store i32 %165, i32* %30, align 4
  br label %166

166:                                              ; preds = %154, %162, %138, %158, %119
  %167 = load i8, i8* %16, align 8
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %233, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %57, i64 0, i32 13
  %171 = load i8, i8* %170, align 4, !range !2
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %233, label %173

173:                                              ; preds = %169
  %174 = load i32*, i32** %7, align 8
  %175 = load i32*, i32** %38, align 8
  %176 = icmp eq i32* %174, %175
  %177 = ptrtoint i32* %175 to i64
  br i1 %176, label %181, label %178

178:                                              ; preds = %173
  store i32 %49, i32* %174, align 4
  %179 = getelementptr inbounds i32, i32* %174, i64 1
  %180 = ptrtoint i32* %179 to i64
  store i64 %180, i64* %8, align 8
  br label %233

181:                                              ; preds = %173
  %182 = ptrtoint i32* %174 to i64
  %183 = load i64, i64* %5, align 8
  %184 = sub i64 %182, %183
  %185 = ashr exact i64 %184, 2
  %186 = add nsw i64 %185, 1
  %187 = icmp ugt i64 %186, 4611686018427387903
  br i1 %187, label %188, label %190

188:                                              ; preds = %181
  %189 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %189) #28
  unreachable

190:                                              ; preds = %181
  %191 = sub i64 %177, %183
  %192 = ashr exact i64 %191, 2
  %193 = icmp ult i64 %192, 2305843009213693951
  br i1 %193, label %194, label %202

194:                                              ; preds = %190
  %195 = ashr exact i64 %191, 1
  %196 = icmp ult i64 %195, %186
  %197 = select i1 %196, i64 %186, i64 %195
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %207, label %199

199:                                              ; preds = %194
  %200 = icmp ugt i64 %197, 4611686018427387903
  br i1 %200, label %201, label %202

201:                                              ; preds = %199
  call void @abort() #28
  unreachable

202:                                              ; preds = %199, %190
  %203 = phi i64 [ %197, %199 ], [ 4611686018427387903, %190 ]
  %204 = shl i64 %203, 2
  %205 = call i8* @_Znwm(i64 %204) #27
  %206 = bitcast i8* %205 to i32*
  br label %207

207:                                              ; preds = %202, %194
  %208 = phi i64 [ %203, %202 ], [ 0, %194 ]
  %209 = phi i32* [ %206, %202 ], [ null, %194 ]
  %210 = getelementptr inbounds i32, i32* %209, i64 %185
  %211 = getelementptr inbounds i32, i32* %209, i64 %208
  %212 = ptrtoint i32* %211 to i64
  store i32 %49, i32* %210, align 4
  %213 = getelementptr inbounds i32, i32* %210, i64 1
  %214 = ptrtoint i32* %213 to i64
  %215 = load i32*, i32** %40, align 8
  %216 = load i64, i64* %8, align 8
  %217 = ptrtoint i32* %215 to i64
  %218 = sub i64 %216, %217
  %219 = ashr exact i64 %218, 2
  %220 = sub nsw i64 0, %219
  %221 = getelementptr inbounds i32, i32* %210, i64 %220
  %222 = ptrtoint i32* %221 to i64
  %223 = icmp sgt i64 %218, 0
  br i1 %223, label %224, label %228

224:                                              ; preds = %207
  %225 = bitcast i32* %221 to i8*
  %226 = bitcast i32* %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %225, i8* align 4 %226, i64 %218, i1 false) #21
  %227 = load i32*, i32** %40, align 8
  br label %228

228:                                              ; preds = %224, %207
  %229 = phi i32* [ %215, %207 ], [ %227, %224 ]
  store i64 %222, i64* %5, align 8
  store i64 %214, i64* %8, align 8
  store i64 %212, i64* %39, align 8
  %230 = icmp eq i32* %229, null
  br i1 %230, label %233, label %231

231:                                              ; preds = %228
  %232 = bitcast i32* %229 to i8*
  call void @_ZdlPv(i8* %232) #27
  br label %233

233:                                              ; preds = %147, %231, %228, %178, %169, %166
  call void @_ZN2gl14TextureCapsMap6insertEjRKNS_11TextureCapsE(%"class.gl::TextureCapsMap"* %9, i32 %49, %"struct.gl::TextureCaps"* nonnull dereferenceable(32) %2) #21
  call void @_ZN2gl11TextureCapsD1Ev(%"struct.gl::TextureCaps"* nonnull %2) #21
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #21
  %234 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 1, i32 0
  %235 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %234, align 8
  %236 = icmp eq %"class.std::__1::__tree_node_base"* %235, null
  br i1 %236, label %237, label %245

237:                                              ; preds = %233
  %238 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_node_base"*
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 2
  %240 = bitcast %"class.std::__1::__tree_end_node"* %239 to %"class.std::__1::__tree_end_node"**
  %241 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %240, align 8
  %242 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %241, i64 0, i32 0
  %243 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %242, align 8
  %244 = icmp eq %"class.std::__1::__tree_node_base"* %243, %238
  br i1 %244, label %261, label %252

245:                                              ; preds = %233, %245
  %246 = phi %"class.std::__1::__tree_node_base"* [ %248, %245 ], [ %235, %233 ]
  %247 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %246, i64 0, i32 0, i32 0
  %248 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %247, align 8
  %249 = icmp eq %"class.std::__1::__tree_node_base"* %248, null
  br i1 %249, label %250, label %245

250:                                              ; preds = %245
  %251 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %246, i64 0, i32 0
  br label %261

252:                                              ; preds = %237, %252
  %253 = phi %"class.std::__1::__tree_end_node"** [ %256, %252 ], [ %240, %237 ]
  %254 = bitcast %"class.std::__1::__tree_end_node"** %253 to %"class.std::__1::__tree_node_base"**
  %255 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %254, align 8
  %256 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %255, i64 0, i32 2
  %257 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %256, align 8
  %258 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %257, i64 0, i32 0
  %259 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %258, align 8
  %260 = icmp eq %"class.std::__1::__tree_node_base"* %259, %255
  br i1 %260, label %261, label %252

261:                                              ; preds = %252, %237, %250
  %262 = phi %"class.std::__1::__tree_end_node"* [ %251, %250 ], [ %241, %237 ], [ %257, %252 ]
  %263 = icmp eq %"class.std::__1::__tree_end_node"* %262, %13
  br i1 %263, label %41, label %45

264:                                              ; preds = %41
  %265 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 50
  store %"class.gl::MemoryProgramCache"* null, %"class.gl::MemoryProgramCache"** %265, align 8
  br label %266

266:                                              ; preds = %41, %264
  %267 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 9, i32 0
  store i32 65, i32* %267, align 4
  %268 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 9
  %269 = load i8, i8* %268, align 1, !range !2
  %270 = icmp eq i8 %269, 0
  %271 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %272 = load i32, i32* %271, align 4
  br i1 %270, label %273, label %279

273:                                              ; preds = %266
  %274 = icmp ult i32 %272, 3
  br i1 %274, label %277, label %275

275:                                              ; preds = %273
  store i32 449, i32* %267, align 4
  %276 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  br label %282

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  br label %292

279:                                              ; preds = %266
  store i32 449, i32* %267, align 4
  %280 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %281 = icmp ult i32 %272, 3
  br i1 %281, label %292, label %282

282:                                              ; preds = %275, %279
  %283 = phi i32* [ %276, %275 ], [ %280, %279 ]
  store i32 6605, i32* %267, align 4
  %284 = icmp eq i32 %272, 3
  br i1 %284, label %286, label %285

285:                                              ; preds = %282
  store i32 7167, i32* %267, align 4
  br label %302

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 1
  %288 = load i32, i32* %287, align 4
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %292, label %290

290:                                              ; preds = %286
  store i32 7167, i32* %267, align 4
  %291 = icmp eq i32 %288, 1
  br i1 %291, label %292, label %302

292:                                              ; preds = %290, %286, %277, %279
  %293 = phi i32* [ %280, %279 ], [ %283, %290 ], [ %278, %277 ], [ %283, %286 ]
  %294 = phi i32 [ 449, %279 ], [ 7167, %290 ], [ 65, %277 ], [ 6605, %286 ]
  %295 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 190
  %296 = load i8, i8* %295, align 1, !range !2
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %298, label %302

298:                                              ; preds = %292
  %299 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 191
  %300 = load i8, i8* %299, align 2, !range !2
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %306, label %302

302:                                              ; preds = %290, %285, %298, %292
  %303 = phi i32* [ %293, %298 ], [ %293, %292 ], [ %283, %290 ], [ %283, %285 ]
  %304 = phi i32 [ %294, %298 ], [ %294, %292 ], [ 7167, %290 ], [ 7167, %285 ]
  %305 = or i32 %304, 1024
  store i32 %305, i32* %267, align 4
  br label %306

306:                                              ; preds = %298, %302
  %307 = phi i32* [ %293, %298 ], [ %303, %302 ]
  %308 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 150
  %309 = load i8, i8* %308, align 8, !range !2
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %311, label %317

311:                                              ; preds = %306
  %312 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 45
  %313 = load %"class.egl::Display"*, %"class.egl::Display"** %312, align 8
  %314 = getelementptr inbounds %"class.egl::Display", %"class.egl::Display"* %313, i64 0, i32 28, i32 9, i32 4
  %315 = load i8, i8* %314, align 8, !range !2
  %316 = icmp ne i8 %315, 0
  br label %317

317:                                              ; preds = %306, %311
  %318 = phi i1 [ true, %306 ], [ %316, %311 ]
  %319 = call { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* } @_ZN5angle16WorkerThreadPool6CreateEb(i1 zeroext %318) #21
  %320 = extractvalue { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* } %319, 0
  %321 = ptrtoint %"class.angle::WorkerThreadPool"* %320 to i64
  %322 = extractvalue { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* } %319, 1
  %323 = ptrtoint %"class.std::__1::__shared_weak_count"* %322 to i64
  %324 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 74
  %325 = bitcast %"class.std::__1::shared_ptr.608"* %324 to i64*
  store i64 %321, i64* %325, align 8
  %326 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 74, i32 1
  %327 = bitcast %"class.std::__1::__shared_weak_count"** %326 to i64*
  %328 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %326, align 8
  store i64 %323, i64* %327, align 8
  %329 = icmp eq %"class.std::__1::__shared_weak_count"* %328, null
  br i1 %329, label %340, label %330

330:                                              ; preds = %317
  %331 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %328, i64 0, i32 0, i32 1
  %332 = atomicrmw add i64* %331, i64 -1 acq_rel
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %334, label %340

334:                                              ; preds = %330
  %335 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %328, i64 0, i32 0
  %336 = bitcast %"class.std::__1::__shared_weak_count"* %328 to void (%"class.std::__1::__shared_count"*)***
  %337 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %336, align 8
  %338 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %337, i64 2
  %339 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %338, align 8
  call void %339(%"class.std::__1::__shared_count"* %335) #21
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %328) #21
  br label %340

340:                                              ; preds = %334, %330, %317
  %341 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 97
  %342 = load i8, i8* %341, align 1, !range !2
  %343 = icmp eq i8 %342, 0
  br i1 %343, label %362, label %344

344:                                              ; preds = %340
  %345 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %346 = load i64, i64* %345, align 8
  %347 = or i64 %346, 22
  store i64 %347, i64* %345, align 8
  %348 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 61, i32 0
  %349 = load i64, i64* %348, align 8
  %350 = or i64 %349, 24
  store i64 %350, i64* %348, align 8
  %351 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 63, i32 0
  %352 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 57, i32 0
  %353 = load i64, i64* %352, align 8
  %354 = or i64 %353, 8
  store i64 %354, i64* %352, align 8
  %355 = bitcast i64* %351 to <2 x i64>*
  %356 = load <2 x i64>, <2 x i64>* %355, align 8
  %357 = or <2 x i64> %356, <i64 6, i64 2>
  %358 = bitcast i64* %351 to <2 x i64>*
  store <2 x i64> %357, <2 x i64>* %358, align 8
  %359 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 65, i32 0
  %360 = load i64, i64* %359, align 8
  %361 = or i64 %360, 8
  store i64 %361, i64* %359, align 8
  br label %362

362:                                              ; preds = %340, %344
  %363 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 13, i32 67
  %364 = load i8, i8* %363, align 1, !range !2
  %365 = icmp eq i8 %364, 0
  br i1 %365, label %366, label %373

366:                                              ; preds = %362
  %367 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 121
  %368 = load i8, i8* %367, align 1, !range !2
  %369 = icmp eq i8 %368, 0
  br i1 %369, label %370, label %373

370:                                              ; preds = %366
  %371 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 39
  %372 = load i8, i8* %371, align 8, !range !2
  br label %373

373:                                              ; preds = %366, %362, %370
  %374 = phi i8 [ 0, %362 ], [ 1, %366 ], [ %372, %370 ]
  %375 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 47
  store i8 %374, i8* %375, align 1
  %376 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22
  %377 = bitcast %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %377) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %377, i8 -86, i64 56, i1 false)
  %378 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %376, i64 0, i32 0
  %379 = load i64, i64* %378, align 8, !noalias !238
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %392, label %381

381:                                              ; preds = %373
  %382 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 1
  %383 = load %"class.gl::VertexArray"**, %"class.gl::VertexArray"*** %382, align 8, !noalias !238
  br label %384

384:                                              ; preds = %389, %381
  %385 = phi i64 [ 0, %381 ], [ %390, %389 ]
  %386 = getelementptr inbounds %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %383, i64 %385
  %387 = bitcast %"class.gl::VertexArray"** %386 to i64*
  %388 = load i64, i64* %387, align 8, !noalias !238
  switch i64 %388, label %392 [
    i64 -1, label %389
    i64 0, label %389
  ]

389:                                              ; preds = %384, %384
  %390 = add nuw i64 %385, 1
  %391 = icmp eq i64 %390, %379
  br i1 %391, label %392, label %384

392:                                              ; preds = %389, %384, %373
  %393 = phi i64 [ 0, %373 ], [ %379, %389 ], [ %385, %384 ]
  %394 = trunc i64 %393 to i32
  %395 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 0
  %396 = load i8*, i8** %395, align 8, !noalias !238
  %397 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 1
  %398 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %397, align 8, !noalias !238
  %399 = icmp ne i8* %396, null
  call void @llvm.assume(i1 %399) #21, !noalias !238
  %400 = load i8, i8* %396, align 1, !noalias !238
  %401 = icmp slt i8 %400, -1
  br i1 %401, label %402, label %417

402:                                              ; preds = %392, %402
  %403 = phi %"union.absl::container_internal::map_slot_type.570"* [ %414, %402 ], [ %398, %392 ]
  %404 = phi i8* [ %413, %402 ], [ %396, %392 ]
  %405 = bitcast i8* %404 to <16 x i8>*
  %406 = load <16 x i8>, <16 x i8>* %405, align 1, !noalias !238
  %407 = icmp slt <16 x i8> %406, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %408 = bitcast <16 x i1> %407 to i16
  %409 = zext i16 %408 to i32
  %410 = add nuw nsw i32 %409, 1
  %411 = call i32 @llvm.cttz.i32(i32 %410, i1 true) #21, !range !8
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds i8, i8* %404, i64 %412
  %414 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %403, i64 %412
  %415 = load i8, i8* %413, align 1, !noalias !238
  %416 = icmp slt i8 %415, -1
  br i1 %416, label %402, label %417

417:                                              ; preds = %402, %392
  %418 = phi %"union.absl::container_internal::map_slot_type.570"* [ %398, %392 ], [ %414, %402 ]
  %419 = phi i8* [ %396, %392 ], [ %413, %402 ]
  %420 = phi i8 [ %400, %392 ], [ %415, %402 ]
  %421 = icmp eq i8 %420, -1
  %422 = select i1 %421, i8* null, i8* %419, !prof !10
  %423 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %3, i64 0, i32 0
  store %"class.gl::ResourceMap.566"* %376, %"class.gl::ResourceMap.566"** %423, align 8, !alias.scope !238
  %424 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %3, i64 0, i32 1
  store i32 %394, i32* %424, align 8, !alias.scope !238
  %425 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 0
  store i8* %422, i8** %425, align 8, !alias.scope !238
  %426 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.570"* %418, %"union.absl::container_internal::map_slot_type.570"** %426, align 8, !alias.scope !238
  %427 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %427, align 8, !alias.scope !238
  %428 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %3, i64 0, i32 4, i32 1
  store %"class.gl::VertexArray"* null, %"class.gl::VertexArray"** %428, align 8, !alias.scope !238
  %429 = getelementptr inbounds %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator", %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* %3, i64 0, i32 5
  store i8 1, i8* %429, align 8, !alias.scope !238
  %430 = trunc i64 %379 to i32
  %431 = icmp ugt i32 %430, %394
  br i1 %431, label %432, label %437

432:                                              ; preds = %417
  store i32 %394, i32* %427, align 8, !alias.scope !238
  %433 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 1
  %434 = load %"class.gl::VertexArray"**, %"class.gl::VertexArray"*** %433, align 8, !noalias !238
  %435 = and i64 %393, 4294967295
  %436 = getelementptr inbounds %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %434, i64 %435
  br label %447

437:                                              ; preds = %417
  %438 = icmp eq i8* %422, null
  br i1 %438, label %452, label %439

439:                                              ; preds = %437
  %440 = load i8, i8* %422, align 1, !noalias !238
  %441 = icmp sgt i8 %440, -1
  br i1 %441, label %443, label %442, !prof !9

442:                                              ; preds = %439
  call void @llvm.trap() #21, !noalias !238
  unreachable

443:                                              ; preds = %439
  %444 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %418, i64 0, i32 0, i32 0
  %445 = load i32, i32* %444, align 8, !noalias !238
  store i32 %445, i32* %427, align 8, !alias.scope !238
  %446 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %418, i64 0, i32 0, i32 1
  br label %447

447:                                              ; preds = %443, %432
  %448 = phi %"class.gl::VertexArray"** [ %436, %432 ], [ %446, %443 ]
  %449 = bitcast %"class.gl::VertexArray"** %448 to i64*
  %450 = load i64, i64* %449, align 8, !noalias !238
  %451 = bitcast %"class.gl::VertexArray"** %428 to i64*
  store i64 %450, i64* %451, align 8, !alias.scope !238
  br label %452

452:                                              ; preds = %447, %437
  br label %453

453:                                              ; preds = %452, %491
  %454 = phi i32 [ %496, %491 ], [ %394, %452 ]
  %455 = icmp eq i32 %454, %430
  br i1 %455, label %456, label %491

456:                                              ; preds = %453
  %457 = load i8*, i8** %425, align 8
  %458 = icmp eq i8* %457, null
  br i1 %458, label %463, label %459

459:                                              ; preds = %456
  %460 = load i8, i8* %457, align 1
  %461 = icmp sgt i8 %460, -1
  br i1 %461, label %491, label %462, !prof !9

462:                                              ; preds = %459
  call void @llvm.trap() #21
  unreachable

463:                                              ; preds = %456
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %377) #21
  %464 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  call void @_ZN2gl10StateCache20updateValidDrawModesEPNS_7ContextE(%"class.gl::StateCache"* %464, %"class.gl::Context"* %0) #21
  call void @_ZN2gl10StateCache27updateValidBindTextureTypesEPNS_7ContextE(%"class.gl::StateCache"* %464, %"class.gl::Context"* %0) #21
  %465 = load i32, i32* %307, align 4
  %466 = icmp sgt i32 %465, 2
  br i1 %466, label %473, label %467

467:                                              ; preds = %463
  %468 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 0
  %469 = load i8, i8* %468, align 4, !range !2
  %470 = zext i8 %469 to i32
  %471 = shl nuw nsw i32 %470, 16
  %472 = or i32 %471, 257
  br label %473

473:                                              ; preds = %467, %463
  %474 = phi i32 [ 65793, %463 ], [ %472, %467 ]
  %475 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 15, i32 0, i32 0, i64 0
  %476 = bitcast i8* %475 to i32*
  store i32 %474, i32* %476, align 4
  %477 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  %478 = bitcast i64* %477 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %478, align 8
  call void @_ZN2gl10StateCache33updateVertexAttribTypesValidationEPNS_7ContextE(%"class.gl::StateCache"* %464, %"class.gl::Context"* %0) #21
  %479 = load i32, i32* %307, align 4
  %480 = icmp ult i32 %479, 2
  br i1 %480, label %488, label %481

481:                                              ; preds = %473
  %482 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 65
  %483 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %482, align 8
  %484 = icmp eq %"class.gl::ProgramExecutable"* %483, null
  br i1 %484, label %488, label %485

485:                                              ; preds = %481
  %486 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %483, i64 0, i32 18
  %487 = load i8, i8* %486, align 8, !range !2
  br label %488

488:                                              ; preds = %473, %481, %485
  %489 = phi i8 [ 1, %473 ], [ 0, %481 ], [ %487, %485 ]
  %490 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 18
  store i8 %489, i8* %490, align 8
  ret void

491:                                              ; preds = %459, %453
  %492 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %428, align 8
  %493 = load i8, i8* %375, align 1, !range !2
  %494 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %492, i64 0, i32 14
  store i8 %493, i8* %494, align 8
  %495 = call dereferenceable(56) %"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* @_ZN2gl11ResourceMapINS_11VertexArrayENS_13VertexArrayIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::VertexArray, gl::VertexArrayID>::Iterator"* nonnull %3)
  %496 = load i32, i32* %424, align 8
  br label %453
}

declare void @_ZNK2gl14TextureManager22signalAllTexturesDirtyEv(%"class.gl::TextureManager"*) local_unnamed_addr #3

declare void @_ZN2gl7Texture18signalDirtyStorageENS_9InitStateE(%"class.gl::Texture"*, i32) local_unnamed_addr #3

declare void @_ZNK2gl18FramebufferManager38invalidateFramebufferCompletenessCacheEv(%"class.gl::FramebufferManager"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2gl7Context34getRequestableExtensionStringCountEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 32
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 32, i32 0, i32 1
  %4 = bitcast i8*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.586"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context22beginTransformFeedbackENS_13PrimitiveModeE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 86, i32 0, i32 1
  %4 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = tail call i32 @_ZN2gl17TransformFeedback5beginEPKNS_7ContextENS_13PrimitiveModeEPNS_7ProgramE(%"class.gl::TransformFeedback"* %4, %"class.gl::Context"* %0, i8 zeroext %1, %"class.gl::Program"* %6) #21
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  %11 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %3, align 8
  %12 = icmp eq %"class.gl::TransformFeedback"* %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %11, i64 0, i32 2, i32 1
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = tail call zeroext i1 @_ZNK2gl17TransformFeedback8isPausedEv(%"class.gl::TransformFeedback"* nonnull %11) #21
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  br label %21

21:                                               ; preds = %9, %13, %17
  %22 = phi i8 [ 0, %13 ], [ 0, %9 ], [ %20, %17 ]
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 9
  store i8 %22, i8* %23, align 8
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  %25 = bitcast i64* %24 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %25, align 8
  tail call void @_ZN2gl10StateCache20updateValidDrawModesEPNS_7ContextE(%"class.gl::StateCache"* %10, %"class.gl::Context"* %0) #21
  br label %26

26:                                               ; preds = %2, %21
  ret void
}

declare i32 @_ZN2gl17TransformFeedback5beginEPKNS_7ContextENS_13PrimitiveModeEPNS_7ProgramE(%"class.gl::TransformFeedback"*, %"class.gl::Context"*, i8 zeroext, %"class.gl::Program"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache31onActiveTransformFeedbackChangeEPNS_7ContextE(%"class.gl::StateCache"*, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 86, i32 0, i32 1
  %4 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %3, align 8
  %5 = icmp eq %"class.gl::TransformFeedback"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %4, i64 0, i32 2, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = tail call zeroext i1 @_ZNK2gl17TransformFeedback8isPausedEv(%"class.gl::TransformFeedback"* nonnull %4) #21
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i8
  br label %14

14:                                               ; preds = %2, %6, %10
  %15 = phi i8 [ 0, %6 ], [ 0, %2 ], [ %13, %10 ]
  %16 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 9
  store i8 %15, i8* %16, align 8
  %17 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  %18 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %18, align 8
  tail call void @_ZN2gl10StateCache20updateValidDrawModesEPNS_7ContextE(%"class.gl::StateCache"* %0, %"class.gl::Context"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context26hasActiveTransformFeedbackENS_15ShaderProgramIDE(%"class.gl::Context"*, i32) local_unnamed_addr #5 align 2 {
  %3 = alloca %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24
  %5 = bitcast %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 56, i1 false)
  %6 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %4, i64 0, i32 0
  %7 = load i64, i64* %6, align 8, !noalias !241
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 1
  %11 = load %"class.gl::TransformFeedback"**, %"class.gl::TransformFeedback"*** %10, align 8, !noalias !241
  br label %12

12:                                               ; preds = %17, %9
  %13 = phi i64 [ 0, %9 ], [ %18, %17 ]
  %14 = getelementptr inbounds %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %11, i64 %13
  %15 = bitcast %"class.gl::TransformFeedback"** %14 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !241
  switch i64 %16, label %20 [
    i64 -1, label %17
    i64 0, label %17
  ]

17:                                               ; preds = %12, %12
  %18 = add nuw i64 %13, 1
  %19 = icmp eq i64 %18, %7
  br i1 %19, label %20, label %12

20:                                               ; preds = %17, %12, %2
  %21 = phi i64 [ 0, %2 ], [ %7, %17 ], [ %13, %12 ]
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8, !noalias !241
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 1
  %26 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %25, align 8, !noalias !241
  %27 = icmp ne i8* %24, null
  tail call void @llvm.assume(i1 %27) #21, !noalias !241
  %28 = load i8, i8* %24, align 1, !noalias !241
  %29 = icmp slt i8 %28, -1
  br i1 %29, label %30, label %45

30:                                               ; preds = %20, %30
  %31 = phi %"union.absl::container_internal::map_slot_type.580"* [ %42, %30 ], [ %26, %20 ]
  %32 = phi i8* [ %41, %30 ], [ %24, %20 ]
  %33 = bitcast i8* %32 to <16 x i8>*
  %34 = load <16 x i8>, <16 x i8>* %33, align 1, !noalias !241
  %35 = icmp slt <16 x i8> %34, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %36 = bitcast <16 x i1> %35 to i16
  %37 = zext i16 %36 to i32
  %38 = add nuw nsw i32 %37, 1
  %39 = tail call i32 @llvm.cttz.i32(i32 %38, i1 true) #21, !range !8
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %32, i64 %40
  %42 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %31, i64 %40
  %43 = load i8, i8* %41, align 1, !noalias !241
  %44 = icmp slt i8 %43, -1
  br i1 %44, label %30, label %45

45:                                               ; preds = %30, %20
  %46 = phi %"union.absl::container_internal::map_slot_type.580"* [ %26, %20 ], [ %42, %30 ]
  %47 = phi i8* [ %24, %20 ], [ %41, %30 ]
  %48 = phi i8 [ %28, %20 ], [ %43, %30 ]
  %49 = icmp eq i8 %48, -1
  %50 = select i1 %49, i8* null, i8* %47, !prof !10
  %51 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %3, i64 0, i32 0
  store %"class.gl::ResourceMap.576"* %4, %"class.gl::ResourceMap.576"** %51, align 8, !alias.scope !241
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %3, i64 0, i32 1
  store i32 %22, i32* %52, align 8, !alias.scope !241
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 0
  store i8* %50, i8** %53, align 8, !alias.scope !241
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.580"* %46, %"union.absl::container_internal::map_slot_type.580"** %54, align 8, !alias.scope !241
  %55 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %55, align 8, !alias.scope !241
  %56 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %3, i64 0, i32 4, i32 1
  store %"class.gl::TransformFeedback"* null, %"class.gl::TransformFeedback"** %56, align 8, !alias.scope !241
  %57 = getelementptr inbounds %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator", %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* %3, i64 0, i32 5
  store i8 1, i8* %57, align 8, !alias.scope !241
  %58 = trunc i64 %7 to i32
  %59 = icmp ugt i32 %58, %22
  br i1 %59, label %60, label %65

60:                                               ; preds = %45
  store i32 %22, i32* %55, align 8, !alias.scope !241
  %61 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 1
  %62 = load %"class.gl::TransformFeedback"**, %"class.gl::TransformFeedback"*** %61, align 8, !noalias !241
  %63 = and i64 %21, 4294967295
  %64 = getelementptr inbounds %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %62, i64 %63
  br label %75

65:                                               ; preds = %45
  %66 = icmp eq i8* %50, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %65
  %68 = load i8, i8* %50, align 1, !noalias !241
  %69 = icmp sgt i8 %68, -1
  br i1 %69, label %71, label %70, !prof !9

70:                                               ; preds = %67
  tail call void @llvm.trap() #21, !noalias !241
  unreachable

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %46, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 8, !noalias !241
  store i32 %73, i32* %55, align 8, !alias.scope !241
  %74 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %46, i64 0, i32 0, i32 1
  br label %75

75:                                               ; preds = %71, %60
  %76 = phi %"class.gl::TransformFeedback"** [ %64, %60 ], [ %74, %71 ]
  %77 = bitcast %"class.gl::TransformFeedback"** %76 to i64*
  %78 = load i64, i64* %77, align 8, !noalias !241
  %79 = bitcast %"class.gl::TransformFeedback"** %56 to i64*
  store i64 %78, i64* %79, align 8, !alias.scope !241
  br label %80

80:                                               ; preds = %75, %65
  br label %81

81:                                               ; preds = %80, %96
  %82 = phi i32 [ %98, %96 ], [ %22, %80 ]
  %83 = icmp eq i32 %82, %58
  br i1 %83, label %84, label %91

84:                                               ; preds = %81
  %85 = load i8*, i8** %53, align 8
  %86 = icmp eq i8* %85, null
  br i1 %86, label %99, label %87

87:                                               ; preds = %84
  %88 = load i8, i8* %85, align 1
  %89 = icmp sgt i8 %88, -1
  br i1 %89, label %91, label %90, !prof !9

90:                                               ; preds = %87
  call void @llvm.trap() #21
  unreachable

91:                                               ; preds = %87, %81
  %92 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %56, align 8
  %93 = icmp eq %"class.gl::TransformFeedback"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  %95 = call zeroext i1 @_ZNK2gl17TransformFeedback15hasBoundProgramENS_15ShaderProgramIDE(%"class.gl::TransformFeedback"* nonnull %92, i32 %1) #21
  br i1 %95, label %99, label %96

96:                                               ; preds = %94, %91
  %97 = call dereferenceable(56) %"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* @_ZN2gl11ResourceMapINS_17TransformFeedbackENS_19TransformFeedbackIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::TransformFeedback, gl::TransformFeedbackID>::Iterator"* nonnull %3)
  %98 = load i32, i32* %52, align 8
  br label %81

99:                                               ; preds = %84, %94
  %100 = phi i1 [ true, %94 ], [ false, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #21
  ret i1 %100
}

declare zeroext i1 @_ZNK2gl17TransformFeedback15hasBoundProgramENS_15ShaderProgramIDE(%"class.gl::TransformFeedback"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl7Context27generateSupportedExtensionsEv(%"struct.gl::Extensions"* noalias sret, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 getelementptr inbounds ({ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, [1 x i8], i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }, { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, [1 x i8], i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }* @__const._ZNK2gl7Context27generateSupportedExtensionsEv.supportedExtensions, i64 0, i32 0), i64 228, i1 false)
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %4, align 8
  %6 = bitcast %"class.rx::ContextImpl"* %5 to %"struct.gl::Extensions"* (%"class.rx::ContextImpl"*)***
  %7 = load %"struct.gl::Extensions"* (%"class.rx::ContextImpl"*)**, %"struct.gl::Extensions"* (%"class.rx::ContextImpl"*)*** %6, align 8
  %8 = getelementptr inbounds %"struct.gl::Extensions"* (%"class.rx::ContextImpl"*)*, %"struct.gl::Extensions"* (%"class.rx::ContextImpl"*)** %7, i64 58
  %9 = load %"struct.gl::Extensions"* (%"class.rx::ContextImpl"*)*, %"struct.gl::Extensions"* (%"class.rx::ContextImpl"*)** %8, align 8
  %10 = tail call dereferenceable(228) %"struct.gl::Extensions"* %9(%"class.rx::ContextImpl"* %5) #21
  tail call void @_ZN2gl10ExtensionsC1ERKS0_(%"struct.gl::Extensions"* %0, %"struct.gl::Extensions"* dereferenceable(228) %10) #21
  %11 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 150
  store i8 1, i8* %11, align 4
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 0
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 1
  %14 = load i32, i32* %12, align 4
  %15 = icmp ult i32 %14, 2
  br i1 %15, label %16, label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 143
  call void @llvm.memset.p0i8.i64(i8* align 1 %17, i8 1, i64 5, i1 false)
  store i8 0, i8* %11, align 4
  %18 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 53
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 174
  store i8 0, i8* %19, align 1
  br label %22

20:                                               ; preds = %2
  %21 = icmp eq i32 %14, 2
  br i1 %21, label %22, label %56

22:                                               ; preds = %20, %16
  %23 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 133
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 92
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 136
  store i8 0, i8* %25, align 2
  %26 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 81
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 83
  store i8 0, i8* %27, align 4
  %28 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 82
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 120
  store i8 0, i8* %29, align 2
  %30 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 159
  store i8 0, i8* %30, align 2
  %31 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 57
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 58
  store i8 0, i8* %32, align 2
  %33 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 132
  store i8 0, i8* %33, align 2
  %34 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 128
  store i8 0, i8* %34, align 2
  %35 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 26
  store i8 0, i8* %35, align 2
  %36 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 45
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %22
  %40 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 127
  store i8 0, i8* %40, align 1
  br label %41

41:                                               ; preds = %22, %39
  %42 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 16
  %43 = load i8, i8* %42, align 4, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 14
  %47 = load i8, i8* %46, align 2, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %45, %41
  %50 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 15
  store i8 0, i8* %51, align 1
  br label %52

52:                                               ; preds = %49, %45
  %53 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 108
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 192
  store i8 0, i8* %54, align 1
  %55 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 193
  store i8 0, i8* %55, align 4
  br label %61

56:                                               ; preds = %20
  %57 = icmp ugt i32 %14, 3
  br i1 %57, label %70, label %58

58:                                               ; preds = %56
  %59 = load i32, i32* %13, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %70

61:                                               ; preds = %58, %52
  %62 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 142
  store i8 0, i8* %62, align 4
  %63 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 188
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 152
  store i8 0, i8* %64, align 2
  %65 = icmp ugt i32 %14, 2
  br i1 %65, label %70, label %66

66:                                               ; preds = %61
  br i1 %15, label %83, label %67

67:                                               ; preds = %66
  %68 = load i32, i32* %13, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %83, label %70

70:                                               ; preds = %58, %56, %67, %61
  %71 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 133
  %72 = load i8, i8* %71, align 1, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 46
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 13
  store i8 0, i8* %79, align 1
  br label %80

80:                                               ; preds = %74, %70, %78
  %81 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 130
  store i8 0, i8* %81, align 4
  %82 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 131
  store i8 0, i8* %82, align 1
  br label %83

83:                                               ; preds = %67, %66, %80
  %84 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 45
  %85 = load %"class.egl::Display"*, %"class.egl::Display"** %84, align 8
  %86 = getelementptr inbounds %"class.egl::Display", %"class.egl::Display"* %85, i64 0, i32 28, i32 6, i32 4
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 59
  store i8 0, i8* %90, align 1
  br label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 116
  store i8 1, i8* %92, align 2
  %93 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 107
  store i8 1, i8* %93, align 4
  %94 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 123
  store i8 1, i8* %94, align 1
  %95 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 138
  store i8 1, i8* %95, align 4
  %96 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 122
  store i8 1, i8* %96, align 4
  %97 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 160
  store i8 1, i8* %97, align 1
  %98 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 4
  %99 = load i8, i8* %98, align 1, !range !2
  %100 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 114
  store i8 %99, i8* %100, align 4
  %101 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 40
  %102 = load i8, i8* %101, align 1, !range !2
  %103 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 137
  store i8 %102, i8* %103, align 1
  %104 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 109
  store i8 1, i8* %104, align 2
  %105 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 110
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %106, align 4
  %107 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 89
  store i8 1, i8* %107, align 2
  %108 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 124
  %109 = xor i8 %99, 1
  store i8 %109, i8* %108, align 2
  %110 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 97
  %111 = load i8, i8* %110, align 1, !range !2
  %112 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 139
  store i8 %111, i8* %112, align 1
  %113 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 39
  %114 = load i8, i8* %113, align 8, !range !2
  %115 = icmp ne i8 %114, 0
  %116 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 67
  %117 = load i8, i8* %116, align 1
  %118 = and i8 %117, 1
  %119 = icmp ne i8 %118, 0
  %120 = and i1 %115, %119
  %121 = zext i1 %120 to i8
  store i8 %121, i8* %116, align 1
  %122 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 140
  store i8 1, i8* %122, align 2
  %123 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 41
  %124 = load i8, i8* %123, align 2, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %91
  %127 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 148
  store i8 1, i8* %127, align 2
  %128 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 149
  store i8 1, i8* %128, align 1
  br label %129

129:                                              ; preds = %91, %126
  %130 = tail call dereferenceable(73) %"struct.egl::DisplayExtensions"* @_ZNK3egl7Display13getExtensionsEv(%"class.egl::Display"* %85) #21
  %131 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %130, i64 0, i32 26
  %132 = load i8, i8* %131, align 1, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 94
  store i8 0, i8* %135, align 1
  br label %136

136:                                              ; preds = %129, %134
  %137 = load %"class.egl::Display"*, %"class.egl::Display"** %84, align 8
  %138 = tail call dereferenceable(73) %"struct.egl::DisplayExtensions"* @_ZNK3egl7Display13getExtensionsEv(%"class.egl::Display"* %137) #21
  %139 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %138, i64 0, i32 69
  %140 = load i8, i8* %139, align 1, !range !2
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %144, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 186
  store i8 1, i8* %143, align 1
  br label %144

144:                                              ; preds = %136, %142
  %145 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 158
  store i8 1, i8* %145, align 1
  %146 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 163
  store i8 1, i8* %146, align 2
  %147 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 187
  store i8 1, i8* %147, align 2
  %148 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %0, i64 0, i32 194
  store i8 1, i8* %148, align 1
  ret void
}

declare void @_ZN2gl10ExtensionsC1ERKS0_(%"struct.gl::Extensions"*, %"struct.gl::Extensions"* dereferenceable(228)) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(456) %"struct.angle::FrontendFeatures"* @_ZNK2gl7Context19getFrontendFeaturesEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 45
  %3 = load %"class.egl::Display"*, %"class.egl::Display"** %2, align 8
  %4 = getelementptr inbounds %"class.egl::Display", %"class.egl::Display"* %3, i64 0, i32 28
  ret %"struct.angle::FrontendFeatures"* %4
}

declare dereferenceable(73) %"struct.egl::DisplayExtensions"* @_ZNK3egl7Display13getExtensionsEv(%"class.egl::Display"*) local_unnamed_addr #3

declare dereferenceable(872) %"struct.gl::Caps"* @_ZN2gl4CapsaSERKS0_(%"struct.gl::Caps"*, %"struct.gl::Caps"* dereferenceable(872)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2gl4CapsD1Ev(%"struct.gl::Caps"*) unnamed_addr #6

declare dereferenceable(228) %"struct.gl::Extensions"* @_ZN2gl10ExtensionsaSERKS0_(%"struct.gl::Extensions"*, %"struct.gl::Extensions"* dereferenceable(228)) local_unnamed_addr #3

declare zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"*, i8*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"*) unnamed_addr #6

declare dereferenceable(12) %"struct.gl::Limitations"* @_ZN2gl11LimitationsaSERKS0_(%"struct.gl::Limitations"*, %"struct.gl::Limitations"* dereferenceable(12)) local_unnamed_addr #3

declare void @_ZN3egl7Display24overrideFrontendFeaturesERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEb(%"class.egl::Display"*, %"class.std::__1::vector.125"* dereferenceable(24), i1 zeroext) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

declare void @_ZN2gl14TextureCapsMap5clearEv(%"class.gl::TextureCapsMap"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::set.35"* @_ZN2gl26GetAllSizedInternalFormatsEv() local_unnamed_addr #3

declare dereferenceable(32) %"struct.gl::TextureCaps"* @_ZNK2gl14TextureCapsMap3getEj(%"class.gl::TextureCapsMap"*, i32) local_unnamed_addr #3

declare void @_ZN2gl11TextureCapsC1ERKS0_(%"struct.gl::TextureCaps"*, %"struct.gl::TextureCaps"* dereferenceable(32)) unnamed_addr #3

declare dereferenceable(128) %"struct.gl::InternalFormat"* @_ZN2gl26GetSizedInternalFormatInfoEj(i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK2gl14InternalFormat5isIntEv(%"struct.gl::InternalFormat"*) local_unnamed_addr #3

declare i32 @_ZNK2gl11TextureCaps13getMaxSamplesEv(%"struct.gl::TextureCaps"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2gl14InternalFormat28isRequiredRenderbufferFormatERKNS_7VersionE(%"struct.gl::InternalFormat"*, %"struct.gl::Version"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN2gl14TextureCapsMap6insertEjRKNS_11TextureCapsE(%"class.gl::TextureCapsMap"*, i32, %"struct.gl::TextureCaps"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2gl11TextureCapsD1Ev(%"struct.gl::TextureCaps"*) unnamed_addr #6

declare { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* } @_ZN5angle16WorkerThreadPool6CreateEb(i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache10initializeEPNS_7ContextE(%"class.gl::StateCache"*, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl10StateCache20updateValidDrawModesEPNS_7ContextE(%"class.gl::StateCache"* %0, %"class.gl::Context"* %1)
  tail call void @_ZN2gl10StateCache27updateValidBindTextureTypesEPNS_7ContextE(%"class.gl::StateCache"* %0, %"class.gl::Context"* %1)
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 2
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 0
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = zext i8 %8 to i32
  %10 = shl nuw nsw i32 %9, 16
  %11 = or i32 %10, 257
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i32 [ 65793, %2 ], [ %11, %6 ]
  %14 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 15, i32 0, i32 0, i64 0
  %15 = bitcast i8* %14 to i32*
  store i32 %13, i32* %15, align 4
  %16 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  %17 = bitcast i64* %16 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %17, align 8
  tail call void @_ZN2gl10StateCache33updateVertexAttribTypesValidationEPNS_7ContextE(%"class.gl::StateCache"* %0, %"class.gl::Context"* %1)
  %18 = load i32, i32* %3, align 4
  %19 = icmp ult i32 %18, 2
  br i1 %19, label %27, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 65
  %22 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %21, align 8
  %23 = icmp eq %"class.gl::ProgramExecutable"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %22, i64 0, i32 18
  %26 = load i8, i8* %25, align 8, !range !2
  br label %27

27:                                               ; preds = %12, %20, %24
  %28 = phi i8 [ 1, %12 ], [ 0, %20 ], [ %26, %24 ]
  %29 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 18
  store i8 %28, i8* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context15prepareForClearEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.angle::BitSetT.168", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 61
  %6 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %5, align 8
  %7 = tail call i32 @_ZN2gl11Framebuffer33ensureClearAttachmentsInitializedEPKNS_7ContextEj(%"class.gl::Framebuffer"* %6, %"class.gl::Context"* %0, i32 %1) #21
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %67, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 58
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %12 = load i64, i64* %11, align 8, !noalias !244
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 59, i32 0
  %14 = load i64, i64* %13, align 8, !noalias !244
  %15 = and i64 %14, %12
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %40, label %17

17:                                               ; preds = %9
  %18 = tail call i64 @llvm.cttz.i64(i64 %15, i1 true) #21, !range !73
  %19 = bitcast %"class.gl::State"* %4 to i8*
  br label %20

20:                                               ; preds = %32, %17
  %21 = phi i64 [ %18, %17 ], [ %37, %32 ]
  %22 = phi i64 [ %15, %17 ], [ %35, %32 ]
  %23 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %21, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %19, i64 %24
  %26 = bitcast i8* %25 to %"class.gl::State"*
  %27 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %21, i32 0
  %28 = bitcast i64* %27 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %29 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %28, align 16
  %30 = tail call i32 %29(%"class.gl::State"* %26, %"class.gl::Context"* %0, i32 1) #21
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %67, label %32

32:                                               ; preds = %20
  %33 = shl i64 1, %21
  %34 = xor i64 %33, -1
  %35 = and i64 %22, %34
  %36 = icmp eq i64 %35, 0
  %37 = tail call i64 @llvm.cttz.i64(i64 %35, i1 true) #21, !range !73
  br i1 %36, label %38, label %20

38:                                               ; preds = %32
  %39 = load i64, i64* %11, align 8
  br label %40

40:                                               ; preds = %38, %9
  %41 = phi i64 [ %39, %38 ], [ %12, %9 ]
  %42 = and i64 %15, 4095
  %43 = xor i64 %42, 4095
  %44 = and i64 %41, %43
  store i64 %44, i64* %11, align 8
  %45 = bitcast %"class.angle::BitSetT.168"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #21
  %46 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %3, i64 0, i32 0
  %47 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %48 = load i64, i64* %47, align 8, !noalias !247
  %49 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %10, i64 0, i32 0
  %50 = load i64, i64* %49, align 8, !noalias !247
  %51 = and i64 %50, %48
  store i64 %51, i64* %46, align 8, !alias.scope !247
  %52 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %53 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %52, align 8
  %54 = bitcast %"class.rx::ContextImpl"* %53 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %55 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %54, align 8
  %56 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %55, i64 51
  %57 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %56, align 8
  %58 = call i32 %57(%"class.rx::ContextImpl"* %53, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %3, %"class.angle::BitSetT.168"* dereferenceable(8) %10) #21
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %65, label %60

60:                                               ; preds = %40
  %61 = load i64, i64* %46, align 8, !noalias !250
  %62 = xor i64 %61, -1
  %63 = load i64, i64* %47, align 8
  %64 = and i64 %63, %62
  store i64 %64, i64* %47, align 8
  br label %65

65:                                               ; preds = %60, %40
  %66 = phi i32 [ 0, %60 ], [ 1, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #21
  br label %67

67:                                               ; preds = %20, %2, %65
  %68 = phi i32 [ 1, %2 ], [ %66, %65 ], [ 1, %20 ]
  ret i32 %68
}

declare i32 @_ZN2gl11Framebuffer33ensureClearAttachmentsInitializedEPKNS_7ContextEj(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context17syncStateForClearEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.angle::BitSetT.168", align 8
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 58
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !253
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 59, i32 0
  %7 = load i64, i64* %6, align 8, !noalias !253
  %8 = and i64 %7, %5
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %12 = tail call i64 @llvm.cttz.i64(i64 %8, i1 true) #21, !range !73
  %13 = bitcast %"class.gl::State"* %11 to i8*
  br label %14

14:                                               ; preds = %26, %10
  %15 = phi i64 [ %12, %10 ], [ %31, %26 ]
  %16 = phi i64 [ %8, %10 ], [ %29, %26 ]
  %17 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %15, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %13, i64 %18
  %20 = bitcast i8* %19 to %"class.gl::State"*
  %21 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %15, i32 0
  %22 = bitcast i64* %21 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %23 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %22, align 16
  %24 = tail call i32 %23(%"class.gl::State"* %20, %"class.gl::Context"* %0, i32 1) #21
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %61, label %26

26:                                               ; preds = %14
  %27 = shl i64 1, %15
  %28 = xor i64 %27, -1
  %29 = and i64 %16, %28
  %30 = icmp eq i64 %29, 0
  %31 = tail call i64 @llvm.cttz.i64(i64 %29, i1 true) #21, !range !73
  br i1 %30, label %32, label %14

32:                                               ; preds = %26
  %33 = load i64, i64* %4, align 8
  br label %34

34:                                               ; preds = %32, %1
  %35 = phi i64 [ %33, %32 ], [ %5, %1 ]
  %36 = and i64 %8, 4095
  %37 = xor i64 %36, 4095
  %38 = and i64 %35, %37
  store i64 %38, i64* %4, align 8
  %39 = bitcast %"class.angle::BitSetT.168"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #21
  %40 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %2, i64 0, i32 0
  %41 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %42 = load i64, i64* %41, align 8, !noalias !256
  %43 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %3, i64 0, i32 0
  %44 = load i64, i64* %43, align 8, !noalias !256
  %45 = and i64 %44, %42
  store i64 %45, i64* %40, align 8, !alias.scope !256
  %46 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %47 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %46, align 8
  %48 = bitcast %"class.rx::ContextImpl"* %47 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %49 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %49, i64 51
  %51 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %50, align 8
  %52 = call i32 %51(%"class.rx::ContextImpl"* %47, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %2, %"class.angle::BitSetT.168"* dereferenceable(8) %3) #21
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %59, label %54

54:                                               ; preds = %34
  %55 = load i64, i64* %40, align 8, !noalias !259
  %56 = xor i64 %55, -1
  %57 = load i64, i64* %41, align 8
  %58 = and i64 %57, %56
  store i64 %58, i64* %41, align 8
  br label %59

59:                                               ; preds = %54, %34
  %60 = phi i32 [ 0, %54 ], [ 1, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #21
  br label %61

61:                                               ; preds = %14, %59
  %62 = phi i32 [ %60, %59 ], [ 1, %14 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context21prepareForClearBufferEji(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.angle::BitSetT.168", align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 61
  %7 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %6, align 8
  %8 = tail call i32 @_ZN2gl11Framebuffer39ensureClearBufferAttachmentsInitializedEPKNS_7ContextEji(%"class.gl::Framebuffer"* %7, %"class.gl::Context"* %0, i32 %1, i32 %2) #21
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %68, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 58
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %13 = load i64, i64* %12, align 8, !noalias !262
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 59, i32 0
  %15 = load i64, i64* %14, align 8, !noalias !262
  %16 = and i64 %15, %13
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %41, label %18

18:                                               ; preds = %10
  %19 = tail call i64 @llvm.cttz.i64(i64 %16, i1 true) #21, !range !73
  %20 = bitcast %"class.gl::State"* %5 to i8*
  br label %21

21:                                               ; preds = %33, %18
  %22 = phi i64 [ %19, %18 ], [ %38, %33 ]
  %23 = phi i64 [ %16, %18 ], [ %36, %33 ]
  %24 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %22, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %20, i64 %25
  %27 = bitcast i8* %26 to %"class.gl::State"*
  %28 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %22, i32 0
  %29 = bitcast i64* %28 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %30 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %29, align 16
  %31 = tail call i32 %30(%"class.gl::State"* %27, %"class.gl::Context"* %0, i32 1) #21
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %68, label %33

33:                                               ; preds = %21
  %34 = shl i64 1, %22
  %35 = xor i64 %34, -1
  %36 = and i64 %23, %35
  %37 = icmp eq i64 %36, 0
  %38 = tail call i64 @llvm.cttz.i64(i64 %36, i1 true) #21, !range !73
  br i1 %37, label %39, label %21

39:                                               ; preds = %33
  %40 = load i64, i64* %12, align 8
  br label %41

41:                                               ; preds = %39, %10
  %42 = phi i64 [ %40, %39 ], [ %13, %10 ]
  %43 = and i64 %16, 4095
  %44 = xor i64 %43, 4095
  %45 = and i64 %42, %44
  store i64 %45, i64* %12, align 8
  %46 = bitcast %"class.angle::BitSetT.168"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #21
  %47 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %4, i64 0, i32 0
  %48 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %49 = load i64, i64* %48, align 8, !noalias !265
  %50 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %11, i64 0, i32 0
  %51 = load i64, i64* %50, align 8, !noalias !265
  %52 = and i64 %51, %49
  store i64 %52, i64* %47, align 8, !alias.scope !265
  %53 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %54 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %53, align 8
  %55 = bitcast %"class.rx::ContextImpl"* %54 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %56 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %56, i64 51
  %58 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %57, align 8
  %59 = call i32 %58(%"class.rx::ContextImpl"* %54, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %4, %"class.angle::BitSetT.168"* dereferenceable(8) %11) #21
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %66, label %61

61:                                               ; preds = %41
  %62 = load i64, i64* %47, align 8, !noalias !268
  %63 = xor i64 %62, -1
  %64 = load i64, i64* %48, align 8
  %65 = and i64 %64, %63
  store i64 %65, i64* %48, align 8
  br label %66

66:                                               ; preds = %61, %41
  %67 = phi i32 [ 0, %61 ], [ 1, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #21
  br label %68

68:                                               ; preds = %21, %3, %66
  %69 = phi i32 [ 1, %3 ], [ %67, %66 ], [ 1, %21 ]
  ret i32 %69
}

declare i32 @_ZN2gl11Framebuffer39ensureClearBufferAttachmentsInitializedEPKNS_7ContextEji(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context9syncStateERKN5angle7BitSetTILm64EmmEERKNS2_ILm12EmmEENS_7CommandE(%"class.gl::Context"*, %"class.angle::BitSetT.168"* dereferenceable(8), %"class.angle::BitSetT.536"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.angle::BitSetT.168", align 8
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %7 = load i64, i64* %6, align 8, !noalias !271
  %8 = getelementptr inbounds %"class.angle::BitSetT.536", %"class.angle::BitSetT.536"* %2, i64 0, i32 0
  %9 = load i64, i64* %8, align 8, !noalias !271
  %10 = and i64 %9, %7
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %36, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %14 = tail call i64 @llvm.cttz.i64(i64 %10, i1 true) #21, !range !73
  %15 = bitcast %"class.gl::State"* %13 to i8*
  br label %16

16:                                               ; preds = %28, %12
  %17 = phi i64 [ %14, %12 ], [ %33, %28 ]
  %18 = phi i64 [ %10, %12 ], [ %31, %28 ]
  %19 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %17, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %15, i64 %20
  %22 = bitcast i8* %21 to %"class.gl::State"*
  %23 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %17, i32 0
  %24 = bitcast i64* %23 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %25 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %24, align 16
  %26 = tail call i32 %25(%"class.gl::State"* %22, %"class.gl::Context"* %0, i32 %3) #21
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %63, label %28

28:                                               ; preds = %16
  %29 = shl i64 1, %17
  %30 = xor i64 %29, -1
  %31 = and i64 %18, %30
  %32 = icmp eq i64 %31, 0
  %33 = tail call i64 @llvm.cttz.i64(i64 %31, i1 true) #21, !range !73
  br i1 %32, label %34, label %16

34:                                               ; preds = %28
  %35 = load i64, i64* %6, align 8
  br label %36

36:                                               ; preds = %34, %4
  %37 = phi i64 [ %35, %34 ], [ %7, %4 ]
  %38 = and i64 %10, 4095
  %39 = xor i64 %38, 4095
  %40 = and i64 %37, %39
  store i64 %40, i64* %6, align 8
  %41 = bitcast %"class.angle::BitSetT.168"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #21
  %42 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %5, i64 0, i32 0
  %43 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %44 = load i64, i64* %43, align 8, !noalias !274
  %45 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %1, i64 0, i32 0
  %46 = load i64, i64* %45, align 8, !noalias !274
  %47 = and i64 %46, %44
  store i64 %47, i64* %42, align 8, !alias.scope !274
  %48 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %49 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %48, align 8
  %50 = bitcast %"class.rx::ContextImpl"* %49 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %51 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %50, align 8
  %52 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %51, i64 51
  %53 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %52, align 8
  %54 = call i32 %53(%"class.rx::ContextImpl"* %49, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %5, %"class.angle::BitSetT.168"* dereferenceable(8) %1) #21
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %61, label %56

56:                                               ; preds = %36
  %57 = load i64, i64* %42, align 8, !noalias !277
  %58 = xor i64 %57, -1
  %59 = load i64, i64* %43, align 8
  %60 = and i64 %59, %58
  store i64 %60, i64* %43, align 8
  br label %61

61:                                               ; preds = %36, %56
  %62 = phi i32 [ 0, %56 ], [ 1, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #21
  ret i32 %62

63:                                               ; preds = %16
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15blitFramebufferEiiiiiiiijj(%"class.gl::Context"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %12 = alloca %"class.angle::BitSetT.168", align 8
  %13 = alloca %"struct.gl::Rectangle", align 4
  %14 = alloca %"struct.gl::Rectangle", align 4
  %15 = icmp eq i32 %9, 0
  br i1 %15, label %128, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 61
  %19 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %18, align 8
  %20 = and i32 %9, 16384
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %16
  %23 = tail call zeroext i1 @_ZNK2gl11Framebuffer20hasEnabledDrawBufferEv(%"class.gl::Framebuffer"* %19) #21
  %24 = and i32 %9, -16385
  %25 = select i1 %23, i32 %9, i32 %24
  br label %26

26:                                               ; preds = %22, %16
  %27 = phi i32 [ %9, %16 ], [ %25, %22 ]
  %28 = and i32 %27, 1024
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %19, i64 0, i32 3
  %32 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState20getStencilAttachmentEv(%"class.gl::FramebufferState"* %31) #21
  %33 = icmp eq %"class.gl::FramebufferAttachment"* %32, null
  %34 = and i32 %27, -1025
  %35 = select i1 %33, i32 %34, i32 %27
  br label %36

36:                                               ; preds = %30, %26
  %37 = phi i32 [ %27, %26 ], [ %35, %30 ]
  %38 = and i32 %37, 256
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %19, i64 0, i32 3
  %42 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState18getDepthAttachmentEv(%"class.gl::FramebufferState"* %41) #21
  %43 = icmp eq %"class.gl::FramebufferAttachment"* %42, null
  %44 = and i32 %37, -257
  %45 = select i1 %43, i32 %44, i32 %37
  br label %46

46:                                               ; preds = %40, %36
  %47 = phi i32 [ %37, %36 ], [ %45, %40 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 91
  tail call void @_ZNK2gl5Debug17insertPerfWarningEjPKcPj(%"class.gl::Debug"* %50, i32 37192, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.27, i64 0, i64 0), i32* nonnull @_ZZN2gl7Context15blitFramebufferEiiiiiiiijjE12sRepeatCount) #21
  br label %128

51:                                               ; preds = %46
  %52 = bitcast %"struct.gl::Rectangle"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #21
  %53 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %13, i64 0, i32 0
  %54 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %13, i64 0, i32 1
  %55 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %13, i64 0, i32 2
  %56 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %13, i64 0, i32 3
  %57 = sub nsw i32 %3, %1
  %58 = sub nsw i32 %4, %2
  store i32 %1, i32* %53, align 4
  store i32 %2, i32* %54, align 4
  store i32 %57, i32* %55, align 4
  store i32 %58, i32* %56, align 4
  %59 = bitcast %"struct.gl::Rectangle"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #21
  %60 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %14, i64 0, i32 0
  %61 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %14, i64 0, i32 1
  %62 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %14, i64 0, i32 2
  %63 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %14, i64 0, i32 3
  %64 = sub nsw i32 %7, %5
  %65 = sub nsw i32 %8, %6
  store i32 %5, i32* %60, align 4
  store i32 %6, i32* %61, align 4
  store i32 %64, i32* %62, align 4
  store i32 %65, i32* %63, align 4
  %66 = icmp eq i32 %64, 0
  %67 = icmp eq i32 %65, 0
  %68 = or i1 %66, %67
  br i1 %68, label %127, label %69

69:                                               ; preds = %51
  %70 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 60
  %71 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %72 = load i64, i64* %71, align 8, !noalias !280
  %73 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 61, i32 0
  %74 = load i64, i64* %73, align 8, !noalias !280
  %75 = and i64 %74, %72
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %100, label %77

77:                                               ; preds = %69
  %78 = tail call i64 @llvm.cttz.i64(i64 %75, i1 true) #21, !range !73
  %79 = bitcast %"class.gl::State"* %17 to i8*
  br label %80

80:                                               ; preds = %92, %77
  %81 = phi i64 [ %78, %77 ], [ %97, %92 ]
  %82 = phi i64 [ %75, %77 ], [ %95, %92 ]
  %83 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %81, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds i8, i8* %79, i64 %84
  %86 = bitcast i8* %85 to %"class.gl::State"*
  %87 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %81, i32 0
  %88 = bitcast i64* %87 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %89 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %88, align 16
  %90 = tail call i32 %89(%"class.gl::State"* %86, %"class.gl::Context"* %0, i32 0) #21
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %127, label %92

92:                                               ; preds = %80
  %93 = shl i64 1, %81
  %94 = xor i64 %93, -1
  %95 = and i64 %82, %94
  %96 = icmp eq i64 %95, 0
  %97 = tail call i64 @llvm.cttz.i64(i64 %95, i1 true) #21, !range !73
  br i1 %96, label %98, label %80

98:                                               ; preds = %92
  %99 = load i64, i64* %71, align 8
  br label %100

100:                                              ; preds = %98, %69
  %101 = phi i64 [ %99, %98 ], [ %72, %69 ]
  %102 = and i64 %75, 4095
  %103 = xor i64 %102, 4095
  %104 = and i64 %101, %103
  store i64 %104, i64* %71, align 8
  %105 = bitcast %"class.angle::BitSetT.168"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #21
  %106 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %12, i64 0, i32 0
  %107 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %108 = load i64, i64* %107, align 8, !noalias !283
  %109 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %70, i64 0, i32 0
  %110 = load i64, i64* %109, align 8, !noalias !283
  %111 = and i64 %110, %108
  store i64 %111, i64* %106, align 8, !alias.scope !283
  %112 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %113 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %112, align 8
  %114 = bitcast %"class.rx::ContextImpl"* %113 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %115 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %114, align 8
  %116 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %115, i64 51
  %117 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %116, align 8
  %118 = call i32 %117(%"class.rx::ContextImpl"* %113, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %12, %"class.angle::BitSetT.168"* dereferenceable(8) %70) #21
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %121

120:                                              ; preds = %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #21
  br label %127

121:                                              ; preds = %100
  %122 = load i64, i64* %106, align 8, !noalias !286
  %123 = xor i64 %122, -1
  %124 = load i64, i64* %107, align 8
  %125 = and i64 %124, %123
  store i64 %125, i64* %107, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #21
  %126 = call i32 @_ZN2gl11Framebuffer4blitEPKNS_7ContextERKNS_9RectangleES6_jj(%"class.gl::Framebuffer"* %19, %"class.gl::Context"* %0, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %13, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %14, i32 %47, i32 %10) #21
  br label %127

127:                                              ; preds = %80, %120, %121, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #21
  br label %128

128:                                              ; preds = %49, %127, %11
  ret void
}

declare zeroext i1 @_ZNK2gl11Framebuffer20hasEnabledDrawBufferEv(%"class.gl::Framebuffer"*) local_unnamed_addr #3

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState20getStencilAttachmentEv(%"class.gl::FramebufferState"*) local_unnamed_addr #3

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState18getDepthAttachmentEv(%"class.gl::FramebufferState"*) local_unnamed_addr #3

declare void @_ZNK2gl5Debug17insertPerfWarningEjPKcPj(%"class.gl::Debug"*, i32, i8*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context16syncStateForBlitEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.angle::BitSetT.168", align 8
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 60
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !289
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 61, i32 0
  %7 = load i64, i64* %6, align 8, !noalias !289
  %8 = and i64 %7, %5
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %12 = tail call i64 @llvm.cttz.i64(i64 %8, i1 true) #21, !range !73
  %13 = bitcast %"class.gl::State"* %11 to i8*
  br label %14

14:                                               ; preds = %26, %10
  %15 = phi i64 [ %12, %10 ], [ %31, %26 ]
  %16 = phi i64 [ %8, %10 ], [ %29, %26 ]
  %17 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %15, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %13, i64 %18
  %20 = bitcast i8* %19 to %"class.gl::State"*
  %21 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %15, i32 0
  %22 = bitcast i64* %21 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %23 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %22, align 16
  %24 = tail call i32 %23(%"class.gl::State"* %20, %"class.gl::Context"* %0, i32 0) #21
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %61, label %26

26:                                               ; preds = %14
  %27 = shl i64 1, %15
  %28 = xor i64 %27, -1
  %29 = and i64 %16, %28
  %30 = icmp eq i64 %29, 0
  %31 = tail call i64 @llvm.cttz.i64(i64 %29, i1 true) #21, !range !73
  br i1 %30, label %32, label %14

32:                                               ; preds = %26
  %33 = load i64, i64* %4, align 8
  br label %34

34:                                               ; preds = %32, %1
  %35 = phi i64 [ %33, %32 ], [ %5, %1 ]
  %36 = and i64 %8, 4095
  %37 = xor i64 %36, 4095
  %38 = and i64 %35, %37
  store i64 %38, i64* %4, align 8
  %39 = bitcast %"class.angle::BitSetT.168"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #21
  %40 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %2, i64 0, i32 0
  %41 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %42 = load i64, i64* %41, align 8, !noalias !292
  %43 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %3, i64 0, i32 0
  %44 = load i64, i64* %43, align 8, !noalias !292
  %45 = and i64 %44, %42
  store i64 %45, i64* %40, align 8, !alias.scope !292
  %46 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %47 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %46, align 8
  %48 = bitcast %"class.rx::ContextImpl"* %47 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %49 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %49, i64 51
  %51 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %50, align 8
  %52 = call i32 %51(%"class.rx::ContextImpl"* %47, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %2, %"class.angle::BitSetT.168"* dereferenceable(8) %3) #21
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %59, label %54

54:                                               ; preds = %34
  %55 = load i64, i64* %40, align 8, !noalias !295
  %56 = xor i64 %55, -1
  %57 = load i64, i64* %41, align 8
  %58 = and i64 %57, %56
  store i64 %58, i64* %41, align 8
  br label %59

59:                                               ; preds = %54, %34
  %60 = phi i32 [ 0, %54 ], [ 1, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #21
  br label %61

61:                                               ; preds = %14, %59
  %62 = phi i32 [ %60, %59 ], [ 1, %14 ]
  ret i32 %62
}

declare i32 @_ZN2gl11Framebuffer4blitEPKNS_7ContextERKNS_9RectangleES6_jj(%"class.gl::Framebuffer"*, %"class.gl::Context"*, %"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"* dereferenceable(16), i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17blitFramebufferNVEiiiiiiiijj(%"class.gl::Context"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context15blitFramebufferEiiiiiiiijj(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context5clearEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"struct.gl::Rectangle", align 4
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 25, i32 8
  %6 = load i8, i8* %5, align 2, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %65

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 26
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %27, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 61
  %14 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %13, align 8
  %15 = tail call { i64, i32 } @_ZNK2gl11Framebuffer10getExtentsEv(%"class.gl::Framebuffer"* %14) #21
  %16 = extractvalue { i64, i32 } %15, 0
  %17 = trunc i64 %16 to i32
  %18 = lshr i64 %16, 32
  %19 = trunc i64 %18 to i32
  %20 = bitcast %"struct.gl::Rectangle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #21
  %21 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %3, i64 0, i32 0
  %22 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %3, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %3, i64 0, i32 2
  %24 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %3, i64 0, i32 3
  store i32 0, i32* %21, align 4
  store i32 0, i32* %22, align 4
  store i32 %17, i32* %23, align 4
  store i32 %19, i32* %24, align 4
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 28
  %26 = call zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* nonnull dereferenceable(16) %3, %"struct.gl::Rectangle"* dereferenceable(16) %25, %"struct.gl::Rectangle"* null) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #21
  br i1 %26, label %27, label %65

27:                                               ; preds = %12, %8
  %28 = call zeroext i1 @_ZNK2gl5State33allActiveDrawBufferChannelsMaskedEv(%"class.gl::State"* %4) #21
  %29 = and i32 %1, -16385
  %30 = select i1 %28, i32 %29, i32 %1
  %31 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 61
  %32 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %31, align 8
  %33 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer18getDepthAttachmentEv(%"class.gl::Framebuffer"* %32) #21
  %34 = icmp eq %"class.gl::FramebufferAttachment"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %27
  %36 = call dereferenceable(60) %"struct.gl::DepthStencilState"* @_ZNK2gl5State20getDepthStencilStateEv(%"class.gl::State"* %4) #21
  %37 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %36, i64 0, i32 2
  %38 = load i8, i8* %37, align 4, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35, %27
  %41 = and i32 %30, -257
  br label %42

42:                                               ; preds = %35, %40
  %43 = phi i32 [ %41, %40 ], [ %30, %35 ]
  %44 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %31, align 8
  %45 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer20getStencilAttachmentEv(%"class.gl::Framebuffer"* %44) #21
  %46 = icmp eq %"class.gl::FramebufferAttachment"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = call dereferenceable(60) %"struct.gl::DepthStencilState"* @_ZNK2gl5State20getDepthStencilStateEv(%"class.gl::State"* %4) #21
  %49 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %48, i64 0, i32 9
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47, %42
  %53 = and i32 %43, -1025
  br label %54

54:                                               ; preds = %52, %47
  %55 = phi i32 [ %53, %52 ], [ %43, %47 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 91
  call void @_ZNK2gl5Debug17insertPerfWarningEjPKcPj(%"class.gl::Debug"* %58, i32 37192, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.28, i64 0, i64 0), i32* nonnull @_ZZN2gl7Context5clearEjE12sRepeatCount) #21
  br label %65

59:                                               ; preds = %54
  %60 = call i32 @_ZN2gl7Context15prepareForClearEj(%"class.gl::Context"* %0, i32 %55)
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %65, label %62

62:                                               ; preds = %59
  %63 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %31, align 8
  %64 = call i32 @_ZN2gl11Framebuffer5clearEPKNS_7ContextEj(%"class.gl::Framebuffer"* %63, %"class.gl::Context"* %0, i32 %55) #21
  br label %65

65:                                               ; preds = %59, %12, %2, %62, %57
  ret void
}

declare zeroext i1 @_ZNK2gl5State33allActiveDrawBufferChannelsMaskedEv(%"class.gl::State"*) local_unnamed_addr #3

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer18getDepthAttachmentEv(%"class.gl::Framebuffer"*) local_unnamed_addr #3

declare dereferenceable(60) %"struct.gl::DepthStencilState"* @_ZNK2gl5State20getDepthStencilStateEv(%"class.gl::State"*) local_unnamed_addr #3

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer20getStencilAttachmentEv(%"class.gl::Framebuffer"*) local_unnamed_addr #3

declare i32 @_ZN2gl11Framebuffer5clearEPKNS_7ContextEj(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context22isClearBufferMaskedOutEji(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %24 [
    i32 6144, label %4
    i32 6145, label %9
    i32 6146, label %13
    i32 34041, label %17
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 31
  %6 = sext i32 %2 to i64
  %7 = tail call zeroext i8 @_ZNK2gl13BlendStateExt19getColorMaskIndexedEm(%"class.gl::BlendStateExt"* %5, i64 %6) #21
  %8 = icmp eq i8 %7, 0
  br label %24

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %11 = tail call dereferenceable(60) %"struct.gl::DepthStencilState"* @_ZNK2gl5State20getDepthStencilStateEv(%"class.gl::State"* %10) #21
  %12 = tail call zeroext i1 @_ZNK2gl17DepthStencilState16isDepthMaskedOutEv(%"struct.gl::DepthStencilState"* %11) #21
  br label %24

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %15 = tail call dereferenceable(60) %"struct.gl::DepthStencilState"* @_ZNK2gl5State20getDepthStencilStateEv(%"class.gl::State"* %14) #21
  %16 = tail call zeroext i1 @_ZNK2gl17DepthStencilState18isStencilMaskedOutEv(%"struct.gl::DepthStencilState"* %15) #21
  br label %24

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %19 = tail call dereferenceable(60) %"struct.gl::DepthStencilState"* @_ZNK2gl5State20getDepthStencilStateEv(%"class.gl::State"* %18) #21
  %20 = tail call zeroext i1 @_ZNK2gl17DepthStencilState16isDepthMaskedOutEv(%"struct.gl::DepthStencilState"* %19) #21
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = tail call dereferenceable(60) %"struct.gl::DepthStencilState"* @_ZNK2gl5State20getDepthStencilStateEv(%"class.gl::State"* %18) #21
  %23 = tail call zeroext i1 @_ZNK2gl17DepthStencilState18isStencilMaskedOutEv(%"struct.gl::DepthStencilState"* %22) #21
  br label %24

24:                                               ; preds = %3, %17, %21, %13, %9, %4
  %25 = phi i1 [ %16, %13 ], [ %12, %9 ], [ %8, %4 ], [ false, %17 ], [ %23, %21 ], [ true, %3 ]
  ret i1 %25
}

declare zeroext i1 @_ZNK2gl17DepthStencilState16isDepthMaskedOutEv(%"struct.gl::DepthStencilState"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2gl17DepthStencilState18isStencilMaskedOutEv(%"struct.gl::DepthStencilState"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context15noopClearBufferEji(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"struct.gl::Rectangle", align 4
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 61
  %6 = icmp eq i32 %1, 6144
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %5, align 8
  %9 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %8, i64 0, i32 3, i32 9, i32 0
  %10 = load i8, i8* %9, align 1, !noalias !298
  %11 = shl i32 1, %2
  %12 = trunc i32 %11 to i8
  %13 = and i8 %10, %12
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %40, label %15

15:                                               ; preds = %7, %3
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 25, i32 8
  %17 = load i8, i8* %16, align 2, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %40

19:                                               ; preds = %15
  %20 = tail call zeroext i1 @_ZNK2gl7Context22isClearBufferMaskedOutEji(%"class.gl::Context"* %0, i32 %1, i32 %2)
  br i1 %20, label %40, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 26
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %40, label %25

25:                                               ; preds = %21
  %26 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %5, align 8
  %27 = tail call { i64, i32 } @_ZNK2gl11Framebuffer10getExtentsEv(%"class.gl::Framebuffer"* %26) #21
  %28 = extractvalue { i64, i32 } %27, 0
  %29 = trunc i64 %28 to i32
  %30 = lshr i64 %28, 32
  %31 = trunc i64 %30 to i32
  %32 = bitcast %"struct.gl::Rectangle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #21
  %33 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %4, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %4, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %4, i64 0, i32 2
  %36 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %4, i64 0, i32 3
  store i32 0, i32* %33, align 4
  store i32 0, i32* %34, align 4
  store i32 %29, i32* %35, align 4
  store i32 %31, i32* %36, align 4
  %37 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 28
  %38 = call zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* nonnull dereferenceable(16) %4, %"struct.gl::Rectangle"* dereferenceable(16) %37, %"struct.gl::Rectangle"* null) #21
  %39 = xor i1 %38, true
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #21
  br label %40

40:                                               ; preds = %7, %15, %25, %21, %19
  %41 = phi i1 [ true, %19 ], [ true, %15 ], [ true, %7 ], [ %39, %25 ], [ false, %21 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13clearBufferfvEjiPKf(%"class.gl::Context"*, i32, i32, float*) local_unnamed_addr #1 align 2 {
  %5 = alloca %"struct.gl::Rectangle", align 4
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 61
  %7 = icmp eq i32 %1, 6144
  br i1 %7, label %8, label %16

8:                                                ; preds = %4
  %9 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %6, align 8
  %10 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %9, i64 0, i32 3, i32 9, i32 0
  %11 = load i8, i8* %10, align 1, !noalias !301
  %12 = shl i32 1, %2
  %13 = trunc i32 %12 to i8
  %14 = and i8 %11, %13
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %58, label %16

16:                                               ; preds = %8, %4
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 25, i32 8
  %18 = load i8, i8* %17, align 2, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %58

20:                                               ; preds = %16
  %21 = tail call zeroext i1 @_ZNK2gl7Context22isClearBufferMaskedOutEji(%"class.gl::Context"* %0, i32 %1, i32 %2) #21
  br i1 %21, label %58, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 26
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %40, label %26

26:                                               ; preds = %22
  %27 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %6, align 8
  %28 = tail call { i64, i32 } @_ZNK2gl11Framebuffer10getExtentsEv(%"class.gl::Framebuffer"* %27) #21
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = trunc i64 %29 to i32
  %31 = lshr i64 %29, 32
  %32 = trunc i64 %31 to i32
  %33 = bitcast %"struct.gl::Rectangle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #21
  %34 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %5, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %5, i64 0, i32 2
  %37 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %5, i64 0, i32 3
  store i32 0, i32* %34, align 4
  store i32 0, i32* %35, align 4
  store i32 %30, i32* %36, align 4
  store i32 %32, i32* %37, align 4
  %38 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 28
  %39 = call zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* nonnull dereferenceable(16) %5, %"struct.gl::Rectangle"* dereferenceable(16) %38, %"struct.gl::Rectangle"* null) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #21
  br i1 %39, label %40, label %58

40:                                               ; preds = %26, %22
  %41 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %6, align 8
  switch i32 %1, label %58 [
    i32 6145, label %42
    i32 6144, label %44
  ]

42:                                               ; preds = %40
  %43 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer18getDepthAttachmentEv(%"class.gl::Framebuffer"* %41) #21
  br label %50

44:                                               ; preds = %40
  %45 = sext i32 %2 to i64
  %46 = call i64 @_ZNK2gl11Framebuffer22getNumColorAttachmentsEv(%"class.gl::Framebuffer"* %41) #21
  %47 = icmp ugt i64 %46, %45
  br i1 %47, label %48, label %58

48:                                               ; preds = %44
  %49 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer18getColorAttachmentEm(%"class.gl::Framebuffer"* %41, i64 %45) #21
  br label %50

50:                                               ; preds = %48, %42
  %51 = phi %"class.gl::FramebufferAttachment"* [ %43, %42 ], [ %49, %48 ]
  %52 = icmp eq %"class.gl::FramebufferAttachment"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = call i32 @_ZN2gl7Context21prepareForClearBufferEji(%"class.gl::Context"* %0, i32 %1, i32 %2)
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = call i32 @_ZN2gl11Framebuffer13clearBufferfvEPKNS_7ContextEjiPKf(%"class.gl::Framebuffer"* %41, %"class.gl::Context"* %0, i32 %1, i32 %2, float* %3) #21
  ret void

58:                                               ; preds = %53, %26, %40, %44, %8, %16, %20, %50
  ret void
}

declare i64 @_ZNK2gl11Framebuffer22getNumColorAttachmentsEv(%"class.gl::Framebuffer"*) local_unnamed_addr #3

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer18getColorAttachmentEm(%"class.gl::Framebuffer"*, i64) local_unnamed_addr #3

declare i32 @_ZN2gl11Framebuffer13clearBufferfvEPKNS_7ContextEjiPKf(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i32, i32, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14clearBufferuivEjiPKj(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = alloca %"struct.gl::Rectangle", align 4
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 61
  %7 = icmp eq i32 %1, 6144
  br i1 %7, label %8, label %16

8:                                                ; preds = %4
  %9 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %6, align 8
  %10 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %9, i64 0, i32 3, i32 9, i32 0
  %11 = load i8, i8* %10, align 1, !noalias !304
  %12 = shl i32 1, %2
  %13 = trunc i32 %12 to i8
  %14 = and i8 %11, %13
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %54, label %16

16:                                               ; preds = %8, %4
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 25, i32 8
  %18 = load i8, i8* %17, align 2, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %54

20:                                               ; preds = %16
  %21 = tail call zeroext i1 @_ZNK2gl7Context22isClearBufferMaskedOutEji(%"class.gl::Context"* %0, i32 %1, i32 %2) #21
  br i1 %21, label %54, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 26
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %40, label %26

26:                                               ; preds = %22
  %27 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %6, align 8
  %28 = tail call { i64, i32 } @_ZNK2gl11Framebuffer10getExtentsEv(%"class.gl::Framebuffer"* %27) #21
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = trunc i64 %29 to i32
  %31 = lshr i64 %29, 32
  %32 = trunc i64 %31 to i32
  %33 = bitcast %"struct.gl::Rectangle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #21
  %34 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %5, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %5, i64 0, i32 2
  %37 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %5, i64 0, i32 3
  store i32 0, i32* %34, align 4
  store i32 0, i32* %35, align 4
  store i32 %30, i32* %36, align 4
  store i32 %32, i32* %37, align 4
  %38 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 28
  %39 = call zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* nonnull dereferenceable(16) %5, %"struct.gl::Rectangle"* dereferenceable(16) %38, %"struct.gl::Rectangle"* null) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #21
  br i1 %39, label %40, label %54

40:                                               ; preds = %26, %22
  %41 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %6, align 8
  br i1 %7, label %42, label %54

42:                                               ; preds = %40
  %43 = sext i32 %2 to i64
  %44 = call i64 @_ZNK2gl11Framebuffer22getNumColorAttachmentsEv(%"class.gl::Framebuffer"* %41) #21
  %45 = icmp ugt i64 %44, %43
  br i1 %45, label %46, label %54

46:                                               ; preds = %42
  %47 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer18getColorAttachmentEm(%"class.gl::Framebuffer"* %41, i64 %43) #21
  %48 = icmp eq %"class.gl::FramebufferAttachment"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %46
  %50 = call i32 @_ZN2gl7Context21prepareForClearBufferEji(%"class.gl::Context"* %0, i32 6144, i32 %2)
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = call i32 @_ZN2gl11Framebuffer14clearBufferuivEPKNS_7ContextEjiPKj(%"class.gl::Framebuffer"* %41, %"class.gl::Context"* %0, i32 6144, i32 %2, i32* %3) #21
  ret void

54:                                               ; preds = %49, %46, %26, %8, %16, %20, %40, %42
  ret void
}

declare i32 @_ZN2gl11Framebuffer14clearBufferuivEPKNS_7ContextEjiPKj(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13clearBufferivEjiPKi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = alloca %"struct.gl::Rectangle", align 4
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 61
  %7 = icmp eq i32 %1, 6144
  br i1 %7, label %8, label %16

8:                                                ; preds = %4
  %9 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %6, align 8
  %10 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %9, i64 0, i32 3, i32 9, i32 0
  %11 = load i8, i8* %10, align 1, !noalias !307
  %12 = shl i32 1, %2
  %13 = trunc i32 %12 to i8
  %14 = and i8 %11, %13
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %58, label %16

16:                                               ; preds = %8, %4
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 25, i32 8
  %18 = load i8, i8* %17, align 2, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %58

20:                                               ; preds = %16
  %21 = tail call zeroext i1 @_ZNK2gl7Context22isClearBufferMaskedOutEji(%"class.gl::Context"* %0, i32 %1, i32 %2) #21
  br i1 %21, label %58, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 26
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %40, label %26

26:                                               ; preds = %22
  %27 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %6, align 8
  %28 = tail call { i64, i32 } @_ZNK2gl11Framebuffer10getExtentsEv(%"class.gl::Framebuffer"* %27) #21
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = trunc i64 %29 to i32
  %31 = lshr i64 %29, 32
  %32 = trunc i64 %31 to i32
  %33 = bitcast %"struct.gl::Rectangle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #21
  %34 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %5, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %5, i64 0, i32 2
  %37 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %5, i64 0, i32 3
  store i32 0, i32* %34, align 4
  store i32 0, i32* %35, align 4
  store i32 %30, i32* %36, align 4
  store i32 %32, i32* %37, align 4
  %38 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 28
  %39 = call zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* nonnull dereferenceable(16) %5, %"struct.gl::Rectangle"* dereferenceable(16) %38, %"struct.gl::Rectangle"* null) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #21
  br i1 %39, label %40, label %58

40:                                               ; preds = %26, %22
  %41 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %6, align 8
  switch i32 %1, label %58 [
    i32 6146, label %42
    i32 6144, label %44
  ]

42:                                               ; preds = %40
  %43 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer20getStencilAttachmentEv(%"class.gl::Framebuffer"* %41) #21
  br label %50

44:                                               ; preds = %40
  %45 = sext i32 %2 to i64
  %46 = call i64 @_ZNK2gl11Framebuffer22getNumColorAttachmentsEv(%"class.gl::Framebuffer"* %41) #21
  %47 = icmp ugt i64 %46, %45
  br i1 %47, label %48, label %58

48:                                               ; preds = %44
  %49 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer18getColorAttachmentEm(%"class.gl::Framebuffer"* %41, i64 %45) #21
  br label %50

50:                                               ; preds = %48, %42
  %51 = phi %"class.gl::FramebufferAttachment"* [ %43, %42 ], [ %49, %48 ]
  %52 = icmp eq %"class.gl::FramebufferAttachment"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = call i32 @_ZN2gl7Context21prepareForClearBufferEji(%"class.gl::Context"* %0, i32 %1, i32 %2)
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = call i32 @_ZN2gl11Framebuffer13clearBufferivEPKNS_7ContextEjiPKi(%"class.gl::Framebuffer"* %41, %"class.gl::Context"* %0, i32 %1, i32 %2, i32* %3) #21
  ret void

58:                                               ; preds = %53, %26, %40, %44, %8, %16, %20, %50
  ret void
}

declare i32 @_ZN2gl11Framebuffer13clearBufferivEPKNS_7ContextEjiPKi(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13clearBufferfiEjifi(%"class.gl::Context"*, i32, i32, float, i32) local_unnamed_addr #1 align 2 {
  %6 = alloca %"struct.gl::Rectangle", align 4
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 61
  %8 = icmp eq i32 %1, 6144
  br i1 %8, label %9, label %17

9:                                                ; preds = %5
  %10 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %7, align 8
  %11 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %10, i64 0, i32 3, i32 9, i32 0
  %12 = load i8, i8* %11, align 1, !noalias !310
  %13 = shl i32 1, %2
  %14 = trunc i32 %13 to i8
  %15 = and i8 %12, %14
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %53, label %17

17:                                               ; preds = %9, %5
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 25, i32 8
  %19 = load i8, i8* %18, align 2, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %53

21:                                               ; preds = %17
  %22 = tail call zeroext i1 @_ZNK2gl7Context22isClearBufferMaskedOutEji(%"class.gl::Context"* %0, i32 %1, i32 %2) #21
  br i1 %22, label %53, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 26
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %41, label %27

27:                                               ; preds = %23
  %28 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %7, align 8
  %29 = tail call { i64, i32 } @_ZNK2gl11Framebuffer10getExtentsEv(%"class.gl::Framebuffer"* %28) #21
  %30 = extractvalue { i64, i32 } %29, 0
  %31 = trunc i64 %30 to i32
  %32 = lshr i64 %30, 32
  %33 = trunc i64 %32 to i32
  %34 = bitcast %"struct.gl::Rectangle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #21
  %35 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %6, i64 0, i32 0
  %36 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %6, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %6, i64 0, i32 2
  %38 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %6, i64 0, i32 3
  store i32 0, i32* %35, align 4
  store i32 0, i32* %36, align 4
  store i32 %31, i32* %37, align 4
  store i32 %33, i32* %38, align 4
  %39 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 28
  %40 = call zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* nonnull dereferenceable(16) %6, %"struct.gl::Rectangle"* dereferenceable(16) %39, %"struct.gl::Rectangle"* null) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #21
  br i1 %40, label %41, label %53

41:                                               ; preds = %27, %23
  %42 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %7, align 8
  %43 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer18getDepthAttachmentEv(%"class.gl::Framebuffer"* %42) #21
  %44 = icmp eq %"class.gl::FramebufferAttachment"* %43, null
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer20getStencilAttachmentEv(%"class.gl::Framebuffer"* %42) #21
  %47 = icmp eq %"class.gl::FramebufferAttachment"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %41, %45
  %49 = call i32 @_ZN2gl7Context21prepareForClearBufferEji(%"class.gl::Context"* %0, i32 %1, i32 %2)
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  %52 = call i32 @_ZN2gl11Framebuffer13clearBufferfiEPKNS_7ContextEjifi(%"class.gl::Framebuffer"* %42, %"class.gl::Context"* %0, i32 %1, i32 %2, float %3, i32 %4) #21
  ret void

53:                                               ; preds = %48, %27, %9, %17, %21, %45
  ret void
}

declare i32 @_ZN2gl11Framebuffer13clearBufferfiEPKNS_7ContextEjifi(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i32, i32, float, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10readPixelsEiiiijjPv(%"class.gl::Context"*, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %9 = alloca %"class.angle::BitSetT.168", align 8
  %10 = alloca %"struct.gl::Rectangle", align 4
  %11 = alloca %"struct.gl::PixelPackState", align 4
  %12 = icmp eq i32 %3, 0
  %13 = icmp eq i32 %4, 0
  %14 = or i1 %12, %13
  br i1 %14, label %86, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 56
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %18 = load i64, i64* %17, align 8, !noalias !313
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 57, i32 0
  %20 = load i64, i64* %19, align 8, !noalias !313
  %21 = and i64 %20, %18
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %47, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %25 = tail call i64 @llvm.cttz.i64(i64 %21, i1 true) #21, !range !73
  %26 = bitcast %"class.gl::State"* %24 to i8*
  br label %27

27:                                               ; preds = %39, %23
  %28 = phi i64 [ %25, %23 ], [ %44, %39 ]
  %29 = phi i64 [ %21, %23 ], [ %42, %39 ]
  %30 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %28, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds i8, i8* %26, i64 %31
  %33 = bitcast i8* %32 to %"class.gl::State"*
  %34 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %28, i32 0
  %35 = bitcast i64* %34 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %36 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %35, align 16
  %37 = tail call i32 %36(%"class.gl::State"* %33, %"class.gl::Context"* %0, i32 6) #21
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %86, label %39

39:                                               ; preds = %27
  %40 = shl i64 1, %28
  %41 = xor i64 %40, -1
  %42 = and i64 %29, %41
  %43 = icmp eq i64 %42, 0
  %44 = tail call i64 @llvm.cttz.i64(i64 %42, i1 true) #21, !range !73
  br i1 %43, label %45, label %27

45:                                               ; preds = %39
  %46 = load i64, i64* %17, align 8
  br label %47

47:                                               ; preds = %45, %15
  %48 = phi i64 [ %46, %45 ], [ %18, %15 ]
  %49 = and i64 %21, 4095
  %50 = xor i64 %49, 4095
  %51 = and i64 %48, %50
  store i64 %51, i64* %17, align 8
  %52 = bitcast %"class.angle::BitSetT.168"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #21
  %53 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %9, i64 0, i32 0
  %54 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %55 = load i64, i64* %54, align 8, !noalias !316
  %56 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %16, i64 0, i32 0
  %57 = load i64, i64* %56, align 8, !noalias !316
  %58 = and i64 %57, %55
  store i64 %58, i64* %53, align 8, !alias.scope !316
  %59 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %60 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %59, align 8
  %61 = bitcast %"class.rx::ContextImpl"* %60 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %62 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %61, align 8
  %63 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %62, i64 51
  %64 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %63, align 8
  %65 = call i32 %64(%"class.rx::ContextImpl"* %60, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %9, %"class.angle::BitSetT.168"* dereferenceable(8) %16) #21
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %68

67:                                               ; preds = %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #21
  br label %86

68:                                               ; preds = %47
  %69 = load i64, i64* %53, align 8, !noalias !319
  %70 = xor i64 %69, -1
  %71 = load i64, i64* %54, align 8
  %72 = and i64 %71, %70
  store i64 %72, i64* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #21
  %73 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 60
  %74 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %73, align 8
  %75 = bitcast %"struct.gl::Rectangle"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #21
  %76 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 0
  %77 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 1
  %78 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 2
  %79 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 3
  store i32 %1, i32* %76, align 4
  store i32 %2, i32* %77, align 4
  store i32 %3, i32* %78, align 4
  store i32 %4, i32* %79, align 4
  %80 = bitcast %"struct.gl::PixelPackState"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %80) #21
  %81 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 88
  %82 = bitcast %"struct.gl::PixelPackState"* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %80, i8* align 4 %82, i64 28, i1 false)
  %83 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 7, i32 0, i32 1
  %84 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %83, align 8
  %85 = call i32 @_ZN2gl11Framebuffer10readPixelsEPKNS_7ContextERKNS_9RectangleEjjRKNS_14PixelPackStateEPNS_6BufferEPv(%"class.gl::Framebuffer"* %74, %"class.gl::Context"* %0, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %10, i32 %5, i32 %6, %"struct.gl::PixelPackState"* nonnull dereferenceable(28) %11, %"class.gl::Buffer"* %84, i8* %7) #21
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %80) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #21
  br label %86

86:                                               ; preds = %27, %67, %8, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context22syncStateForReadPixelsEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.angle::BitSetT.168", align 8
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 56
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !322
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 57, i32 0
  %7 = load i64, i64* %6, align 8, !noalias !322
  %8 = and i64 %7, %5
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %12 = tail call i64 @llvm.cttz.i64(i64 %8, i1 true) #21, !range !73
  %13 = bitcast %"class.gl::State"* %11 to i8*
  br label %14

14:                                               ; preds = %26, %10
  %15 = phi i64 [ %12, %10 ], [ %31, %26 ]
  %16 = phi i64 [ %8, %10 ], [ %29, %26 ]
  %17 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %15, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %13, i64 %18
  %20 = bitcast i8* %19 to %"class.gl::State"*
  %21 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %15, i32 0
  %22 = bitcast i64* %21 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %23 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %22, align 16
  %24 = tail call i32 %23(%"class.gl::State"* %20, %"class.gl::Context"* %0, i32 6) #21
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %61, label %26

26:                                               ; preds = %14
  %27 = shl i64 1, %15
  %28 = xor i64 %27, -1
  %29 = and i64 %16, %28
  %30 = icmp eq i64 %29, 0
  %31 = tail call i64 @llvm.cttz.i64(i64 %29, i1 true) #21, !range !73
  br i1 %30, label %32, label %14

32:                                               ; preds = %26
  %33 = load i64, i64* %4, align 8
  br label %34

34:                                               ; preds = %32, %1
  %35 = phi i64 [ %33, %32 ], [ %5, %1 ]
  %36 = and i64 %8, 4095
  %37 = xor i64 %36, 4095
  %38 = and i64 %35, %37
  store i64 %38, i64* %4, align 8
  %39 = bitcast %"class.angle::BitSetT.168"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #21
  %40 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %2, i64 0, i32 0
  %41 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %42 = load i64, i64* %41, align 8, !noalias !325
  %43 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %3, i64 0, i32 0
  %44 = load i64, i64* %43, align 8, !noalias !325
  %45 = and i64 %44, %42
  store i64 %45, i64* %40, align 8, !alias.scope !325
  %46 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %47 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %46, align 8
  %48 = bitcast %"class.rx::ContextImpl"* %47 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %49 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %49, i64 51
  %51 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %50, align 8
  %52 = call i32 %51(%"class.rx::ContextImpl"* %47, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %2, %"class.angle::BitSetT.168"* dereferenceable(8) %3) #21
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %59, label %54

54:                                               ; preds = %34
  %55 = load i64, i64* %40, align 8, !noalias !328
  %56 = xor i64 %55, -1
  %57 = load i64, i64* %41, align 8
  %58 = and i64 %57, %56
  store i64 %58, i64* %41, align 8
  br label %59

59:                                               ; preds = %54, %34
  %60 = phi i32 [ 0, %54 ], [ 1, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #21
  br label %61

61:                                               ; preds = %14, %59
  %62 = phi i32 [ %60, %59 ], [ 1, %14 ]
  ret i32 %62
}

declare i32 @_ZN2gl11Framebuffer10readPixelsEPKNS_7ContextERKNS_9RectangleEjjRKNS_14PixelPackStateEPNS_6BufferEPv(%"class.gl::Framebuffer"*, %"class.gl::Context"*, %"struct.gl::Rectangle"* dereferenceable(16), i32, i32, %"struct.gl::PixelPackState"* dereferenceable(28), %"class.gl::Buffer"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16readPixelsRobustEiiiijjiPiS1_S1_Pv(%"class.gl::Context"*, i32, i32, i32, i32, i32, i32, i32, i32* nocapture readnone, i32* nocapture readnone, i32* nocapture readnone, i8*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context10readPixelsEiiiijjPv(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i8* %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17readnPixelsRobustEiiiijjiPiS1_S1_Pv(%"class.gl::Context"*, i32, i32, i32, i32, i32, i32, i32, i32* nocapture readnone, i32* nocapture readnone, i32* nocapture readnone, i8*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context10readPixelsEiiiijjPv(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i8* %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14copyTexImage2DENS_13TextureTargetEijiiiii(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %10 = alloca %"class.angle::BitSetT.168", align 8
  %11 = alloca %"struct.gl::Rectangle", align 4
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %13 = load i64, i64* %12, align 8, !noalias !331
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 65, i32 0
  %15 = load i64, i64* %14, align 8, !noalias !331
  %16 = and i64 %15, %13
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %42, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %20 = tail call i64 @llvm.cttz.i64(i64 %16, i1 true) #21, !range !73
  %21 = bitcast %"class.gl::State"* %19 to i8*
  br label %22

22:                                               ; preds = %34, %18
  %23 = phi i64 [ %20, %18 ], [ %39, %34 ]
  %24 = phi i64 [ %16, %18 ], [ %37, %34 ]
  %25 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %23, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %21, i64 %26
  %28 = bitcast i8* %27 to %"class.gl::State"*
  %29 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %23, i32 0
  %30 = bitcast i64* %29 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %31 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %30, align 16
  %32 = tail call i32 %31(%"class.gl::State"* %28, %"class.gl::Context"* %0, i32 2) #21
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %80, label %34

34:                                               ; preds = %22
  %35 = shl i64 1, %23
  %36 = xor i64 %35, -1
  %37 = and i64 %24, %36
  %38 = icmp eq i64 %37, 0
  %39 = tail call i64 @llvm.cttz.i64(i64 %37, i1 true) #21, !range !73
  br i1 %38, label %40, label %22

40:                                               ; preds = %34
  %41 = load i64, i64* %12, align 8
  br label %42

42:                                               ; preds = %40, %9
  %43 = phi i64 [ %41, %40 ], [ %13, %9 ]
  %44 = and i64 %16, 4095
  %45 = xor i64 %44, 4095
  %46 = and i64 %43, %45
  store i64 %46, i64* %12, align 8
  %47 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 64
  %48 = bitcast %"class.angle::BitSetT.168"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #21
  %49 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %10, i64 0, i32 0
  %50 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %51 = load i64, i64* %50, align 8, !noalias !334
  %52 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %47, i64 0, i32 0
  %53 = load i64, i64* %52, align 8, !noalias !334
  %54 = and i64 %53, %51
  store i64 %54, i64* %49, align 8, !alias.scope !334
  %55 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %56 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %55, align 8
  %57 = bitcast %"class.rx::ContextImpl"* %56 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %58 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %57, align 8
  %59 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %58, i64 51
  %60 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %59, align 8
  %61 = call i32 %60(%"class.rx::ContextImpl"* %56, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %10, %"class.angle::BitSetT.168"* dereferenceable(8) %47) #21
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %64

63:                                               ; preds = %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #21
  br label %80

64:                                               ; preds = %42
  %65 = load i64, i64* %49, align 8, !noalias !337
  %66 = xor i64 %65, -1
  %67 = load i64, i64* %50, align 8
  %68 = and i64 %67, %66
  store i64 %68, i64* %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #21
  %69 = bitcast %"struct.gl::Rectangle"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #21
  %70 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %11, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %11, i64 0, i32 1
  %72 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %11, i64 0, i32 2
  %73 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %11, i64 0, i32 3
  store i32 %4, i32* %70, align 4
  store i32 %5, i32* %71, align 4
  store i32 %6, i32* %72, align 4
  store i32 %7, i32* %73, align 4
  %74 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %75 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 60
  %76 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %75, align 8
  %77 = call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %78 = call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %74, i8 zeroext %77) #21
  %79 = call i32 @_ZN2gl7Texture9copyImageEPNS_7ContextENS_13TextureTargetEiRKNS_9RectangleEjPNS_11FramebufferE(%"class.gl::Texture"* %78, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %11, i32 %3, %"class.gl::Framebuffer"* %76) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #21
  br label %80

80:                                               ; preds = %22, %63, %64
  ret void
}

declare i32 @_ZN2gl7Texture9copyImageEPNS_7ContextENS_13TextureTargetEiRKNS_9RectangleEjPNS_11FramebufferE(%"class.gl::Texture"*, %"class.gl::Context"*, i8 zeroext, i32, %"struct.gl::Rectangle"* dereferenceable(16), i32, %"class.gl::Framebuffer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17copyTexSubImage2DENS_13TextureTargetEiiiiiii(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %10 = alloca %"class.angle::BitSetT.168", align 8
  %11 = alloca %"struct.gl::Offset", align 4
  %12 = alloca %"struct.gl::Rectangle", align 4
  %13 = alloca %"class.gl::ImageIndex", align 4
  %14 = icmp eq i32 %7, 0
  %15 = icmp eq i32 %8, 0
  %16 = or i1 %14, %15
  br i1 %16, label %91, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %19 = load i64, i64* %18, align 8, !noalias !340
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 65, i32 0
  %21 = load i64, i64* %20, align 8, !noalias !340
  %22 = and i64 %21, %19
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %48, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %26 = tail call i64 @llvm.cttz.i64(i64 %22, i1 true) #21, !range !73
  %27 = bitcast %"class.gl::State"* %25 to i8*
  br label %28

28:                                               ; preds = %40, %24
  %29 = phi i64 [ %26, %24 ], [ %45, %40 ]
  %30 = phi i64 [ %22, %24 ], [ %43, %40 ]
  %31 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %29, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds i8, i8* %27, i64 %32
  %34 = bitcast i8* %33 to %"class.gl::State"*
  %35 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %29, i32 0
  %36 = bitcast i64* %35 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %37 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %36, align 16
  %38 = tail call i32 %37(%"class.gl::State"* %34, %"class.gl::Context"* %0, i32 2) #21
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %91, label %40

40:                                               ; preds = %28
  %41 = shl i64 1, %29
  %42 = xor i64 %41, -1
  %43 = and i64 %30, %42
  %44 = icmp eq i64 %43, 0
  %45 = tail call i64 @llvm.cttz.i64(i64 %43, i1 true) #21, !range !73
  br i1 %44, label %46, label %28

46:                                               ; preds = %40
  %47 = load i64, i64* %18, align 8
  br label %48

48:                                               ; preds = %46, %17
  %49 = phi i64 [ %47, %46 ], [ %19, %17 ]
  %50 = and i64 %22, 4095
  %51 = xor i64 %50, 4095
  %52 = and i64 %49, %51
  store i64 %52, i64* %18, align 8
  %53 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 64
  %54 = bitcast %"class.angle::BitSetT.168"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #21
  %55 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %10, i64 0, i32 0
  %56 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %57 = load i64, i64* %56, align 8, !noalias !343
  %58 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %53, i64 0, i32 0
  %59 = load i64, i64* %58, align 8, !noalias !343
  %60 = and i64 %59, %57
  store i64 %60, i64* %55, align 8, !alias.scope !343
  %61 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %62 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %61, align 8
  %63 = bitcast %"class.rx::ContextImpl"* %62 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %64 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %63, align 8
  %65 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %64, i64 51
  %66 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %65, align 8
  %67 = call i32 %66(%"class.rx::ContextImpl"* %62, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %10, %"class.angle::BitSetT.168"* dereferenceable(8) %53) #21
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %70

69:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #21
  br label %91

70:                                               ; preds = %48
  %71 = load i64, i64* %55, align 8, !noalias !346
  %72 = xor i64 %71, -1
  %73 = load i64, i64* %56, align 8
  %74 = and i64 %73, %72
  store i64 %74, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #21
  %75 = bitcast %"struct.gl::Offset"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %75) #21
  %76 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %11, i64 0, i32 0
  %77 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %11, i64 0, i32 1
  %78 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %11, i64 0, i32 2
  store i32 %3, i32* %76, align 4
  store i32 %4, i32* %77, align 4
  store i32 0, i32* %78, align 4
  %79 = bitcast %"struct.gl::Rectangle"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #21
  %80 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %12, i64 0, i32 0
  %81 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %12, i64 0, i32 1
  %82 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %12, i64 0, i32 2
  %83 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %12, i64 0, i32 3
  store i32 %5, i32* %80, align 4
  store i32 %6, i32* %81, align 4
  store i32 %7, i32* %82, align 4
  store i32 %8, i32* %83, align 4
  %84 = getelementptr inbounds %"class.gl::ImageIndex", %"class.gl::ImageIndex"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %84, i8 -86, i64 16, i1 false)
  call void @_ZN2gl10ImageIndex14MakeFromTargetENS_13TextureTargetEii(%"class.gl::ImageIndex"* nonnull sret %13, i8 zeroext %1, i32 %2, i32 1) #21
  %85 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %86 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 60
  %87 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %86, align 8
  %88 = call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %89 = call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %85, i8 zeroext %88) #21
  %90 = call i32 @_ZN2gl7Texture12copySubImageEPNS_7ContextERKNS_10ImageIndexERKNS_6OffsetERKNS_9RectangleEPNS_11FramebufferE(%"class.gl::Texture"* %89, %"class.gl::Context"* %0, %"class.gl::ImageIndex"* nonnull dereferenceable(16) %13, %"struct.gl::Offset"* nonnull dereferenceable(12) %11, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %12, %"class.gl::Framebuffer"* %87) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %75) #21
  br label %91

91:                                               ; preds = %28, %69, %9, %70
  ret void
}

declare void @_ZN2gl10ImageIndex14MakeFromTargetENS_13TextureTargetEii(%"class.gl::ImageIndex"* sret, i8 zeroext, i32, i32) local_unnamed_addr #3

declare i32 @_ZN2gl7Texture12copySubImageEPNS_7ContextERKNS_10ImageIndexERKNS_6OffsetERKNS_9RectangleEPNS_11FramebufferE(%"class.gl::Texture"*, %"class.gl::Context"*, %"class.gl::ImageIndex"* dereferenceable(16), %"struct.gl::Offset"* dereferenceable(12), %"struct.gl::Rectangle"* dereferenceable(16), %"class.gl::Framebuffer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17copyTexSubImage3DENS_13TextureTargetEiiiiiiii(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %11 = alloca %"class.angle::BitSetT.168", align 8
  %12 = alloca %"struct.gl::Offset", align 4
  %13 = alloca %"struct.gl::Rectangle", align 4
  %14 = alloca %"class.gl::ImageIndex", align 4
  %15 = icmp eq i32 %8, 0
  %16 = icmp eq i32 %9, 0
  %17 = or i1 %15, %16
  br i1 %17, label %93, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %20 = load i64, i64* %19, align 8, !noalias !349
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 65, i32 0
  %22 = load i64, i64* %21, align 8, !noalias !349
  %23 = and i64 %22, %20
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %49, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %27 = tail call i64 @llvm.cttz.i64(i64 %23, i1 true) #21, !range !73
  %28 = bitcast %"class.gl::State"* %26 to i8*
  br label %29

29:                                               ; preds = %41, %25
  %30 = phi i64 [ %27, %25 ], [ %46, %41 ]
  %31 = phi i64 [ %23, %25 ], [ %44, %41 ]
  %32 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %30, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds i8, i8* %28, i64 %33
  %35 = bitcast i8* %34 to %"class.gl::State"*
  %36 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %30, i32 0
  %37 = bitcast i64* %36 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %38 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %37, align 16
  %39 = tail call i32 %38(%"class.gl::State"* %35, %"class.gl::Context"* %0, i32 2) #21
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %93, label %41

41:                                               ; preds = %29
  %42 = shl i64 1, %30
  %43 = xor i64 %42, -1
  %44 = and i64 %31, %43
  %45 = icmp eq i64 %44, 0
  %46 = tail call i64 @llvm.cttz.i64(i64 %44, i1 true) #21, !range !73
  br i1 %45, label %47, label %29

47:                                               ; preds = %41
  %48 = load i64, i64* %19, align 8
  br label %49

49:                                               ; preds = %47, %18
  %50 = phi i64 [ %48, %47 ], [ %20, %18 ]
  %51 = and i64 %23, 4095
  %52 = xor i64 %51, 4095
  %53 = and i64 %50, %52
  store i64 %53, i64* %19, align 8
  %54 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 64
  %55 = bitcast %"class.angle::BitSetT.168"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #21
  %56 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %11, i64 0, i32 0
  %57 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %58 = load i64, i64* %57, align 8, !noalias !352
  %59 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %54, i64 0, i32 0
  %60 = load i64, i64* %59, align 8, !noalias !352
  %61 = and i64 %60, %58
  store i64 %61, i64* %56, align 8, !alias.scope !352
  %62 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %63 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %62, align 8
  %64 = bitcast %"class.rx::ContextImpl"* %63 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %65 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %65, i64 51
  %67 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %66, align 8
  %68 = call i32 %67(%"class.rx::ContextImpl"* %63, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %11, %"class.angle::BitSetT.168"* dereferenceable(8) %54) #21
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %71

70:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #21
  br label %93

71:                                               ; preds = %49
  %72 = load i64, i64* %56, align 8, !noalias !355
  %73 = xor i64 %72, -1
  %74 = load i64, i64* %57, align 8
  %75 = and i64 %74, %73
  store i64 %75, i64* %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #21
  %76 = bitcast %"struct.gl::Offset"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %76) #21
  %77 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %12, i64 0, i32 0
  %78 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %12, i64 0, i32 1
  %79 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %12, i64 0, i32 2
  store i32 %3, i32* %77, align 4
  store i32 %4, i32* %78, align 4
  store i32 %5, i32* %79, align 4
  %80 = bitcast %"struct.gl::Rectangle"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #21
  %81 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %13, i64 0, i32 0
  %82 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %13, i64 0, i32 1
  %83 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %13, i64 0, i32 2
  %84 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %13, i64 0, i32 3
  store i32 %6, i32* %81, align 4
  store i32 %7, i32* %82, align 4
  store i32 %8, i32* %83, align 4
  store i32 %9, i32* %84, align 4
  %85 = getelementptr inbounds %"class.gl::ImageIndex", %"class.gl::ImageIndex"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %85, i8 -86, i64 16, i1 false)
  %86 = call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  call void @_ZN2gl10ImageIndex12MakeFromTypeENS_11TextureTypeEiii(%"class.gl::ImageIndex"* nonnull sret %14, i8 zeroext %86, i32 %2, i32 %5, i32 1) #21
  %87 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %88 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 60
  %89 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %88, align 8
  %90 = call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %91 = call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %87, i8 zeroext %90) #21
  %92 = call i32 @_ZN2gl7Texture12copySubImageEPNS_7ContextERKNS_10ImageIndexERKNS_6OffsetERKNS_9RectangleEPNS_11FramebufferE(%"class.gl::Texture"* %91, %"class.gl::Context"* %0, %"class.gl::ImageIndex"* nonnull dereferenceable(16) %14, %"struct.gl::Offset"* nonnull dereferenceable(12) %12, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %13, %"class.gl::Framebuffer"* %89) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %76) #21
  br label %93

93:                                               ; preds = %29, %70, %10, %71
  ret void
}

declare void @_ZN2gl10ImageIndex12MakeFromTypeENS_11TextureTypeEiii(%"class.gl::ImageIndex"* sret, i8 zeroext, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16copyImageSubDataEjjiiiijjiiiiiii(%"class.gl::Context"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #5 align 2 {
  %17 = icmp eq i32 %13, 0
  %18 = icmp eq i32 %14, 0
  %19 = or i1 %17, %18
  %20 = icmp eq i32 %15, 0
  %21 = or i1 %19, %20
  br i1 %21, label %120, label %22

22:                                               ; preds = %16
  %23 = icmp eq i32 %2, 36161
  br i1 %23, label %24, label %121

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 13
  %26 = load %"class.gl::RenderbufferManager"*, %"class.gl::RenderbufferManager"** %25, align 8
  %27 = tail call %"class.gl::Renderbuffer"* @_ZNK2gl19RenderbufferManager15getRenderbufferENS_14RenderbufferIDE(%"class.gl::RenderbufferManager"* %26, i32 %1) #21
  %28 = icmp eq i32 %8, 36161
  br i1 %28, label %29, label %33

29:                                               ; preds = %24
  %30 = load %"class.gl::RenderbufferManager"*, %"class.gl::RenderbufferManager"** %25, align 8
  %31 = tail call %"class.gl::Renderbuffer"* @_ZNK2gl19RenderbufferManager15getRenderbufferENS_14RenderbufferIDE(%"class.gl::RenderbufferManager"* %30, i32 %7) #21
  %32 = tail call i32 @_ZN2gl12Renderbuffer23copyRenderbufferSubDataEPNS_7ContextEPKS0_iiiiiiiiiii(%"class.gl::Renderbuffer"* %31, %"class.gl::Context"* %0, %"class.gl::Renderbuffer"* %27, i32 %3, i32 %4, i32 %5, i32 %6, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i32 %14, i32 %15) #21
  br label %120

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %35 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %34, align 8
  %36 = zext i32 %7 to i64
  %37 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %35, i64 0, i32 0, i32 1, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %38, %36
  br i1 %39, label %40, label %47

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %35, i64 0, i32 0, i32 1, i32 1
  %42 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %41, align 8
  %43 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %42, i64 %36
  %44 = load %"class.gl::Texture"*, %"class.gl::Texture"** %43, align 8
  %45 = icmp eq %"class.gl::Texture"* %44, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %46 = select i1 %45, %"class.gl::Texture"* null, %"class.gl::Texture"* %44
  br label %110

47:                                               ; preds = %33
  %48 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %49 = add i64 %48, %36
  %50 = zext i64 %49 to i128
  %51 = mul nuw i128 %50, 11376068507788127593
  %52 = lshr i128 %51, 64
  %53 = xor i128 %52, %51
  %54 = trunc i128 %53 to i64
  %55 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %35, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %35, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %58 = load i64, i64* %57, align 8
  %59 = lshr i64 %54, 7
  %60 = ptrtoint i8* %56 to i64
  %61 = lshr i64 %60, 12
  %62 = xor i64 %59, %61
  %63 = trunc i128 %53 to i8
  %64 = and i8 %63, 127
  %65 = insertelement <16 x i8> undef, i8 %64, i32 0
  %66 = shufflevector <16 x i8> %65, <16 x i8> undef, <16 x i32> zeroinitializer
  %67 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %35, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %68

68:                                               ; preds = %98, %47
  %69 = phi i64 [ %62, %47 ], [ %100, %98 ]
  %70 = phi i64 [ 0, %47 ], [ %99, %98 ]
  %71 = and i64 %69, %58
  %72 = getelementptr inbounds i8, i8* %56, i64 %71
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1
  %75 = icmp eq <16 x i8> %66, %74
  %76 = bitcast <16 x i1> %75 to i16
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %94, label %78

78:                                               ; preds = %68
  %79 = zext i16 %76 to i32
  %80 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %67, align 8
  br label %81

81:                                               ; preds = %90, %78
  %82 = phi i32 [ %79, %78 ], [ %92, %90 ]
  %83 = tail call i32 @llvm.cttz.i32(i32 %82, i1 false) #21, !range !8
  %84 = zext i32 %83 to i64
  %85 = add i64 %71, %84
  %86 = and i64 %85, %58
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %80, i64 %86, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, %7
  br i1 %89, label %101, label %90, !prof !9

90:                                               ; preds = %81
  %91 = add i32 %82, -1
  %92 = and i32 %91, %82
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %81

94:                                               ; preds = %90, %68
  %95 = icmp eq <16 x i8> %74, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %96 = bitcast <16 x i1> %95 to i16
  %97 = icmp eq i16 %96, 0
  br i1 %97, label %98, label %110, !prof !10

98:                                               ; preds = %94
  %99 = add i64 %70, 16
  %100 = add i64 %99, %71
  br label %68

101:                                              ; preds = %81
  %102 = getelementptr inbounds i8, i8* %56, i64 %86
  %103 = icmp ne i8* %102, null
  tail call void @llvm.assume(i1 %103) #21
  %104 = load i8, i8* %102, align 1
  %105 = icmp sgt i8 %104, -1
  br i1 %105, label %107, label %106, !prof !9

106:                                              ; preds = %101
  tail call void @llvm.trap() #21
  unreachable

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %80, i64 %86, i32 0, i32 1
  %109 = load %"class.gl::Texture"*, %"class.gl::Texture"** %108, align 8
  br label %110

110:                                              ; preds = %94, %40, %107
  %111 = phi %"class.gl::Texture"* [ %46, %40 ], [ %109, %107 ], [ null, %94 ]
  %112 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %111, i64 0, i32 5, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %118, label %115

115:                                              ; preds = %110
  %116 = tail call i32 @_ZN2gl7Texture9syncStateEPKNS_7ContextENS_7CommandE(%"class.gl::Texture"* %111, %"class.gl::Context"* %0, i32 8) #21
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %120, label %118

118:                                              ; preds = %110, %115
  %119 = tail call i32 @_ZN2gl7Texture23copyRenderbufferSubDataEPNS_7ContextEPKNS_12RenderbufferEiiiiiiiiiii(%"class.gl::Texture"* %111, %"class.gl::Context"* %0, %"class.gl::Renderbuffer"* %27, i32 %3, i32 %4, i32 %5, i32 %6, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i32 %14, i32 %15) #21
  ret void

120:                                              ; preds = %16, %29, %203, %294, %115
  ret void

121:                                              ; preds = %22
  %122 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %123 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %122, align 8
  %124 = zext i32 %1 to i64
  %125 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %123, i64 0, i32 0, i32 1, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = icmp ugt i64 %126, %124
  br i1 %127, label %128, label %135

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %123, i64 0, i32 0, i32 1, i32 1
  %130 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %129, align 8
  %131 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %130, i64 %124
  %132 = load %"class.gl::Texture"*, %"class.gl::Texture"** %131, align 8
  %133 = icmp eq %"class.gl::Texture"* %132, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %134 = select i1 %133, %"class.gl::Texture"* null, %"class.gl::Texture"* %132
  br label %198

135:                                              ; preds = %121
  %136 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %137 = add i64 %136, %124
  %138 = zext i64 %137 to i128
  %139 = mul nuw i128 %138, 11376068507788127593
  %140 = lshr i128 %139, 64
  %141 = xor i128 %140, %139
  %142 = trunc i128 %141 to i64
  %143 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %123, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %123, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %146 = load i64, i64* %145, align 8
  %147 = lshr i64 %142, 7
  %148 = ptrtoint i8* %144 to i64
  %149 = lshr i64 %148, 12
  %150 = xor i64 %147, %149
  %151 = trunc i128 %141 to i8
  %152 = and i8 %151, 127
  %153 = insertelement <16 x i8> undef, i8 %152, i32 0
  %154 = shufflevector <16 x i8> %153, <16 x i8> undef, <16 x i32> zeroinitializer
  %155 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %123, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %156

156:                                              ; preds = %186, %135
  %157 = phi i64 [ %150, %135 ], [ %188, %186 ]
  %158 = phi i64 [ 0, %135 ], [ %187, %186 ]
  %159 = and i64 %157, %146
  %160 = getelementptr inbounds i8, i8* %144, i64 %159
  %161 = bitcast i8* %160 to <16 x i8>*
  %162 = load <16 x i8>, <16 x i8>* %161, align 1
  %163 = icmp eq <16 x i8> %154, %162
  %164 = bitcast <16 x i1> %163 to i16
  %165 = icmp eq i16 %164, 0
  br i1 %165, label %182, label %166

166:                                              ; preds = %156
  %167 = zext i16 %164 to i32
  %168 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %155, align 8
  br label %169

169:                                              ; preds = %178, %166
  %170 = phi i32 [ %167, %166 ], [ %180, %178 ]
  %171 = tail call i32 @llvm.cttz.i32(i32 %170, i1 false) #21, !range !8
  %172 = zext i32 %171 to i64
  %173 = add i64 %159, %172
  %174 = and i64 %173, %146
  %175 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %168, i64 %174, i32 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = icmp eq i32 %176, %1
  br i1 %177, label %189, label %178, !prof !9

178:                                              ; preds = %169
  %179 = add i32 %170, -1
  %180 = and i32 %179, %170
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %169

182:                                              ; preds = %178, %156
  %183 = icmp eq <16 x i8> %162, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %184 = bitcast <16 x i1> %183 to i16
  %185 = icmp eq i16 %184, 0
  br i1 %185, label %186, label %198, !prof !10

186:                                              ; preds = %182
  %187 = add i64 %158, 16
  %188 = add i64 %187, %159
  br label %156

189:                                              ; preds = %169
  %190 = getelementptr inbounds i8, i8* %144, i64 %174
  %191 = icmp ne i8* %190, null
  tail call void @llvm.assume(i1 %191) #21
  %192 = load i8, i8* %190, align 1
  %193 = icmp sgt i8 %192, -1
  br i1 %193, label %195, label %194, !prof !9

194:                                              ; preds = %189
  tail call void @llvm.trap() #21
  unreachable

195:                                              ; preds = %189
  %196 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %168, i64 %174, i32 0, i32 1
  %197 = load %"class.gl::Texture"*, %"class.gl::Texture"** %196, align 8
  br label %198

198:                                              ; preds = %182, %128, %195
  %199 = phi %"class.gl::Texture"* [ %134, %128 ], [ %197, %195 ], [ null, %182 ]
  %200 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %199, i64 0, i32 5, i32 0
  %201 = load i64, i64* %200, align 8
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %206, label %203

203:                                              ; preds = %198
  %204 = tail call i32 @_ZN2gl7Texture9syncStateEPKNS_7ContextENS_7CommandE(%"class.gl::Texture"* %199, %"class.gl::Context"* %0, i32 8) #21
  %205 = icmp eq i32 %204, 1
  br i1 %205, label %120, label %206

206:                                              ; preds = %198, %203
  %207 = icmp eq i32 %8, 36161
  br i1 %207, label %208, label %213

208:                                              ; preds = %206
  %209 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 13
  %210 = load %"class.gl::RenderbufferManager"*, %"class.gl::RenderbufferManager"** %209, align 8
  %211 = tail call %"class.gl::Renderbuffer"* @_ZNK2gl19RenderbufferManager15getRenderbufferENS_14RenderbufferIDE(%"class.gl::RenderbufferManager"* %210, i32 %7) #21
  %212 = tail call i32 @_ZN2gl12Renderbuffer18copyTextureSubDataEPNS_7ContextEPKNS_7TextureEiiiiiiiiiii(%"class.gl::Renderbuffer"* %211, %"class.gl::Context"* %0, %"class.gl::Texture"* %199, i32 %3, i32 %4, i32 %5, i32 %6, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i32 %14, i32 %15) #21
  ret void

213:                                              ; preds = %206
  %214 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %122, align 8
  %215 = zext i32 %7 to i64
  %216 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %214, i64 0, i32 0, i32 1, i32 0
  %217 = load i64, i64* %216, align 8
  %218 = icmp ugt i64 %217, %215
  br i1 %218, label %219, label %226

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %214, i64 0, i32 0, i32 1, i32 1
  %221 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %220, align 8
  %222 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %221, i64 %215
  %223 = load %"class.gl::Texture"*, %"class.gl::Texture"** %222, align 8
  %224 = icmp eq %"class.gl::Texture"* %223, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %225 = select i1 %224, %"class.gl::Texture"* null, %"class.gl::Texture"* %223
  br label %289

226:                                              ; preds = %213
  %227 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %228 = add i64 %227, %215
  %229 = zext i64 %228 to i128
  %230 = mul nuw i128 %229, 11376068507788127593
  %231 = lshr i128 %230, 64
  %232 = xor i128 %231, %230
  %233 = trunc i128 %232 to i64
  %234 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %214, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %235 = load i8*, i8** %234, align 8
  %236 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %214, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %237 = load i64, i64* %236, align 8
  %238 = lshr i64 %233, 7
  %239 = ptrtoint i8* %235 to i64
  %240 = lshr i64 %239, 12
  %241 = xor i64 %238, %240
  %242 = trunc i128 %232 to i8
  %243 = and i8 %242, 127
  %244 = insertelement <16 x i8> undef, i8 %243, i32 0
  %245 = shufflevector <16 x i8> %244, <16 x i8> undef, <16 x i32> zeroinitializer
  %246 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %214, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %247

247:                                              ; preds = %277, %226
  %248 = phi i64 [ %241, %226 ], [ %279, %277 ]
  %249 = phi i64 [ 0, %226 ], [ %278, %277 ]
  %250 = and i64 %248, %237
  %251 = getelementptr inbounds i8, i8* %235, i64 %250
  %252 = bitcast i8* %251 to <16 x i8>*
  %253 = load <16 x i8>, <16 x i8>* %252, align 1
  %254 = icmp eq <16 x i8> %245, %253
  %255 = bitcast <16 x i1> %254 to i16
  %256 = icmp eq i16 %255, 0
  br i1 %256, label %273, label %257

257:                                              ; preds = %247
  %258 = zext i16 %255 to i32
  %259 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %246, align 8
  br label %260

260:                                              ; preds = %269, %257
  %261 = phi i32 [ %258, %257 ], [ %271, %269 ]
  %262 = tail call i32 @llvm.cttz.i32(i32 %261, i1 false) #21, !range !8
  %263 = zext i32 %262 to i64
  %264 = add i64 %250, %263
  %265 = and i64 %264, %237
  %266 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %259, i64 %265, i32 0, i32 0
  %267 = load i32, i32* %266, align 4
  %268 = icmp eq i32 %267, %7
  br i1 %268, label %280, label %269, !prof !9

269:                                              ; preds = %260
  %270 = add i32 %261, -1
  %271 = and i32 %270, %261
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %260

273:                                              ; preds = %269, %247
  %274 = icmp eq <16 x i8> %253, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %275 = bitcast <16 x i1> %274 to i16
  %276 = icmp eq i16 %275, 0
  br i1 %276, label %277, label %289, !prof !10

277:                                              ; preds = %273
  %278 = add i64 %249, 16
  %279 = add i64 %278, %250
  br label %247

280:                                              ; preds = %260
  %281 = getelementptr inbounds i8, i8* %235, i64 %265
  %282 = icmp ne i8* %281, null
  tail call void @llvm.assume(i1 %282) #21
  %283 = load i8, i8* %281, align 1
  %284 = icmp sgt i8 %283, -1
  br i1 %284, label %286, label %285, !prof !9

285:                                              ; preds = %280
  tail call void @llvm.trap() #21
  unreachable

286:                                              ; preds = %280
  %287 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %259, i64 %265, i32 0, i32 1
  %288 = load %"class.gl::Texture"*, %"class.gl::Texture"** %287, align 8
  br label %289

289:                                              ; preds = %273, %219, %286
  %290 = phi %"class.gl::Texture"* [ %225, %219 ], [ %288, %286 ], [ null, %273 ]
  %291 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %290, i64 0, i32 5, i32 0
  %292 = load i64, i64* %291, align 8
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %297, label %294

294:                                              ; preds = %289
  %295 = tail call i32 @_ZN2gl7Texture9syncStateEPKNS_7ContextENS_7CommandE(%"class.gl::Texture"* %290, %"class.gl::Context"* %0, i32 8) #21
  %296 = icmp eq i32 %295, 1
  br i1 %296, label %120, label %297

297:                                              ; preds = %289, %294
  %298 = tail call i32 @_ZN2gl7Texture18copyTextureSubDataEPNS_7ContextEPKS0_iiiiiiiiiii(%"class.gl::Texture"* %290, %"class.gl::Context"* %0, %"class.gl::Texture"* %199, i32 %3, i32 %4, i32 %5, i32 %6, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i32 %14, i32 %15) #21
  ret void
}

declare i32 @_ZN2gl12Renderbuffer23copyRenderbufferSubDataEPNS_7ContextEPKS0_iiiiiiiiiii(%"class.gl::Renderbuffer"*, %"class.gl::Context"*, %"class.gl::Renderbuffer"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context18syncTextureForCopyEPNS_7TextureE(%"class.gl::Context"*, %"class.gl::Texture"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %1, i64 0, i32 5, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @_ZN2gl7Texture9syncStateEPKNS_7ContextENS_7CommandE(%"class.gl::Texture"* %1, %"class.gl::Context"* %0, i32 8) #21
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %2 ]
  ret i32 %9
}

declare i32 @_ZN2gl7Texture23copyRenderbufferSubDataEPNS_7ContextEPKNS_12RenderbufferEiiiiiiiiiii(%"class.gl::Texture"*, %"class.gl::Context"*, %"class.gl::Renderbuffer"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #3

declare i32 @_ZN2gl12Renderbuffer18copyTextureSubDataEPNS_7ContextEPKNS_7TextureEiiiiiiiiiii(%"class.gl::Renderbuffer"*, %"class.gl::Context"*, %"class.gl::Texture"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #3

declare i32 @_ZN2gl7Texture18copyTextureSubDataEPNS_7ContextEPKS0_iiiiiiiiiii(%"class.gl::Texture"*, %"class.gl::Context"*, %"class.gl::Texture"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20framebufferTexture2DEjjNS_13TextureTargetENS_9TextureIDEi(%"class.gl::Context"*, i32, i32, i8 zeroext, i32, i32) local_unnamed_addr #5 align 2 {
  %7 = alloca %"class.gl::ImageIndex", align 4
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %9 = tail call %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"* %8, i32 %1) #21
  %10 = icmp eq i32 %4, 0
  br i1 %10, label %94, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %13 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %12, align 8
  %14 = zext i32 %4 to i64
  %15 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %13, i64 0, i32 0, i32 1, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, %14
  br i1 %17, label %18, label %25

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %13, i64 0, i32 0, i32 1, i32 1
  %20 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %19, align 8
  %21 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %20, i64 %14
  %22 = load %"class.gl::Texture"*, %"class.gl::Texture"** %21, align 8
  %23 = icmp eq %"class.gl::Texture"* %22, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %24 = select i1 %23, %"class.gl::Texture"* null, %"class.gl::Texture"* %22
  br label %88

25:                                               ; preds = %11
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %27 = add i64 %26, %14
  %28 = zext i64 %27 to i128
  %29 = mul nuw i128 %28, 11376068507788127593
  %30 = lshr i128 %29, 64
  %31 = xor i128 %30, %29
  %32 = trunc i128 %31 to i64
  %33 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %13, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %13, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = lshr i64 %32, 7
  %38 = ptrtoint i8* %34 to i64
  %39 = lshr i64 %38, 12
  %40 = xor i64 %37, %39
  %41 = trunc i128 %31 to i8
  %42 = and i8 %41, 127
  %43 = insertelement <16 x i8> undef, i8 %42, i32 0
  %44 = shufflevector <16 x i8> %43, <16 x i8> undef, <16 x i32> zeroinitializer
  %45 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %13, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %46

46:                                               ; preds = %76, %25
  %47 = phi i64 [ %40, %25 ], [ %78, %76 ]
  %48 = phi i64 [ 0, %25 ], [ %77, %76 ]
  %49 = and i64 %47, %36
  %50 = getelementptr inbounds i8, i8* %34, i64 %49
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1
  %53 = icmp eq <16 x i8> %44, %52
  %54 = bitcast <16 x i1> %53 to i16
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %72, label %56

56:                                               ; preds = %46
  %57 = zext i16 %54 to i32
  %58 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %45, align 8
  br label %59

59:                                               ; preds = %68, %56
  %60 = phi i32 [ %57, %56 ], [ %70, %68 ]
  %61 = tail call i32 @llvm.cttz.i32(i32 %60, i1 false) #21, !range !8
  %62 = zext i32 %61 to i64
  %63 = add i64 %49, %62
  %64 = and i64 %63, %36
  %65 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %58, i64 %64, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %4
  br i1 %67, label %79, label %68, !prof !9

68:                                               ; preds = %59
  %69 = add i32 %60, -1
  %70 = and i32 %69, %60
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %59

72:                                               ; preds = %68, %46
  %73 = icmp eq <16 x i8> %52, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %74 = bitcast <16 x i1> %73 to i16
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %76, label %88, !prof !10

76:                                               ; preds = %72
  %77 = add i64 %48, 16
  %78 = add i64 %77, %49
  br label %46

79:                                               ; preds = %59
  %80 = getelementptr inbounds i8, i8* %34, i64 %64
  %81 = icmp ne i8* %80, null
  tail call void @llvm.assume(i1 %81) #21
  %82 = load i8, i8* %80, align 1
  %83 = icmp sgt i8 %82, -1
  br i1 %83, label %85, label %84, !prof !9

84:                                               ; preds = %79
  tail call void @llvm.trap() #21
  unreachable

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %58, i64 %64, i32 0, i32 1
  %87 = load %"class.gl::Texture"*, %"class.gl::Texture"** %86, align 8
  br label %88

88:                                               ; preds = %72, %18, %85
  %89 = phi %"class.gl::Texture"* [ %24, %18 ], [ %87, %85 ], [ null, %72 ]
  %90 = getelementptr inbounds %"class.gl::ImageIndex", %"class.gl::ImageIndex"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %90, i8 -86, i64 16, i1 false)
  call void @_ZN2gl10ImageIndex14MakeFromTargetENS_13TextureTargetEii(%"class.gl::ImageIndex"* nonnull sret %7, i8 zeroext %3, i32 %5, i32 1) #21
  %91 = icmp eq %"class.gl::Texture"* %89, null
  %92 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %89, i64 0, i32 2, i32 0
  %93 = select i1 %91, %"class.gl::FramebufferAttachmentObject"* null, %"class.gl::FramebufferAttachmentObject"* %92
  call void @_ZN2gl11Framebuffer13setAttachmentEPKNS_7ContextEjjRKNS_10ImageIndexEPNS_27FramebufferAttachmentObjectE(%"class.gl::Framebuffer"* %9, %"class.gl::Context"* %0, i32 5890, i32 %2, %"class.gl::ImageIndex"* nonnull dereferenceable(16) %7, %"class.gl::FramebufferAttachmentObject"* %93) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #21
  br label %95

94:                                               ; preds = %6
  tail call void @_ZN2gl11Framebuffer15resetAttachmentEPKNS_7ContextEj(%"class.gl::Framebuffer"* %9, %"class.gl::Context"* %0, i32 %2) #21
  br label %95

95:                                               ; preds = %94, %88
  call void @_ZN2gl5State14setObjectDirtyEj(%"class.gl::State"* %8, i32 %1) #21
  ret void
}

declare void @_ZN2gl11Framebuffer13setAttachmentEPKNS_7ContextEjjRKNS_10ImageIndexEPNS_27FramebufferAttachmentObjectE(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i32, i32, %"class.gl::ImageIndex"* dereferenceable(16), %"class.gl::FramebufferAttachmentObject"*) local_unnamed_addr #3

declare void @_ZN2gl11Framebuffer15resetAttachmentEPKNS_7ContextEj(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20framebufferTexture3DEjjNS_13TextureTargetENS_9TextureIDEii(%"class.gl::Context"*, i32, i32, i8 zeroext, i32, i32, i32) local_unnamed_addr #5 align 2 {
  %8 = alloca %"class.gl::ImageIndex", align 4
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %10 = tail call %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"* %9, i32 %1) #21
  %11 = icmp eq i32 %4, 0
  br i1 %11, label %95, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %14 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %13, align 8
  %15 = zext i32 %4 to i64
  %16 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %14, i64 0, i32 0, i32 1, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %17, %15
  br i1 %18, label %19, label %26

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %14, i64 0, i32 0, i32 1, i32 1
  %21 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %20, align 8
  %22 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %21, i64 %15
  %23 = load %"class.gl::Texture"*, %"class.gl::Texture"** %22, align 8
  %24 = icmp eq %"class.gl::Texture"* %23, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %25 = select i1 %24, %"class.gl::Texture"* null, %"class.gl::Texture"* %23
  br label %89

26:                                               ; preds = %12
  %27 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %28 = add i64 %27, %15
  %29 = zext i64 %28 to i128
  %30 = mul nuw i128 %29, 11376068507788127593
  %31 = lshr i128 %30, 64
  %32 = xor i128 %31, %30
  %33 = trunc i128 %32 to i64
  %34 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %14, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %14, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = lshr i64 %33, 7
  %39 = ptrtoint i8* %35 to i64
  %40 = lshr i64 %39, 12
  %41 = xor i64 %38, %40
  %42 = trunc i128 %32 to i8
  %43 = and i8 %42, 127
  %44 = insertelement <16 x i8> undef, i8 %43, i32 0
  %45 = shufflevector <16 x i8> %44, <16 x i8> undef, <16 x i32> zeroinitializer
  %46 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %14, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %47

47:                                               ; preds = %77, %26
  %48 = phi i64 [ %41, %26 ], [ %79, %77 ]
  %49 = phi i64 [ 0, %26 ], [ %78, %77 ]
  %50 = and i64 %48, %37
  %51 = getelementptr inbounds i8, i8* %35, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp eq <16 x i8> %45, %53
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %73, label %57

57:                                               ; preds = %47
  %58 = zext i16 %55 to i32
  %59 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %46, align 8
  br label %60

60:                                               ; preds = %69, %57
  %61 = phi i32 [ %58, %57 ], [ %71, %69 ]
  %62 = tail call i32 @llvm.cttz.i32(i32 %61, i1 false) #21, !range !8
  %63 = zext i32 %62 to i64
  %64 = add i64 %50, %63
  %65 = and i64 %64, %37
  %66 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %59, i64 %65, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %4
  br i1 %68, label %80, label %69, !prof !9

69:                                               ; preds = %60
  %70 = add i32 %61, -1
  %71 = and i32 %70, %61
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %60

73:                                               ; preds = %69, %47
  %74 = icmp eq <16 x i8> %53, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %75 = bitcast <16 x i1> %74 to i16
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %77, label %89, !prof !10

77:                                               ; preds = %73
  %78 = add i64 %49, 16
  %79 = add i64 %78, %50
  br label %47

80:                                               ; preds = %60
  %81 = getelementptr inbounds i8, i8* %35, i64 %65
  %82 = icmp ne i8* %81, null
  tail call void @llvm.assume(i1 %82) #21
  %83 = load i8, i8* %81, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !9

85:                                               ; preds = %80
  tail call void @llvm.trap() #21
  unreachable

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %59, i64 %65, i32 0, i32 1
  %88 = load %"class.gl::Texture"*, %"class.gl::Texture"** %87, align 8
  br label %89

89:                                               ; preds = %73, %19, %86
  %90 = phi %"class.gl::Texture"* [ %25, %19 ], [ %88, %86 ], [ null, %73 ]
  %91 = getelementptr inbounds %"class.gl::ImageIndex", %"class.gl::ImageIndex"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %91, i8 -86, i64 16, i1 false)
  call void @_ZN2gl10ImageIndex6Make3DEii(%"class.gl::ImageIndex"* nonnull sret %8, i32 %5, i32 %6) #21
  %92 = icmp eq %"class.gl::Texture"* %90, null
  %93 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %90, i64 0, i32 2, i32 0
  %94 = select i1 %92, %"class.gl::FramebufferAttachmentObject"* null, %"class.gl::FramebufferAttachmentObject"* %93
  call void @_ZN2gl11Framebuffer13setAttachmentEPKNS_7ContextEjjRKNS_10ImageIndexEPNS_27FramebufferAttachmentObjectE(%"class.gl::Framebuffer"* %10, %"class.gl::Context"* %0, i32 5890, i32 %2, %"class.gl::ImageIndex"* nonnull dereferenceable(16) %8, %"class.gl::FramebufferAttachmentObject"* %94) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #21
  br label %96

95:                                               ; preds = %7
  tail call void @_ZN2gl11Framebuffer15resetAttachmentEPKNS_7ContextEj(%"class.gl::Framebuffer"* %10, %"class.gl::Context"* %0, i32 %2) #21
  br label %96

96:                                               ; preds = %95, %89
  call void @_ZN2gl5State14setObjectDirtyEj(%"class.gl::State"* %9, i32 %1) #21
  ret void
}

declare void @_ZN2gl10ImageIndex6Make3DEii(%"class.gl::ImageIndex"* sret, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23framebufferRenderbufferEjjjNS_14RenderbufferIDE(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.gl::ImageIndex", align 4
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %8 = tail call %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"* %7, i32 %1) #21
  %9 = icmp eq i32 %4, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 13
  %12 = load %"class.gl::RenderbufferManager"*, %"class.gl::RenderbufferManager"** %11, align 8
  %13 = tail call %"class.gl::Renderbuffer"* @_ZNK2gl19RenderbufferManager15getRenderbufferENS_14RenderbufferIDE(%"class.gl::RenderbufferManager"* %12, i32 %4) #21
  %14 = tail call dereferenceable(32) %"class.gl::RenderbufferState"* @_ZNK2gl12Renderbuffer8getStateEv(%"class.gl::Renderbuffer"* %13) #21
  %15 = tail call i32 @_ZNK2gl17RenderbufferState10getSamplesEv(%"class.gl::RenderbufferState"* %14) #21
  %16 = getelementptr inbounds %"class.gl::ImageIndex", %"class.gl::ImageIndex"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #21
  call void @_ZN2gl10ImageIndexC1Ev(%"class.gl::ImageIndex"* nonnull %6) #21
  %17 = icmp eq %"class.gl::Renderbuffer"* %13, null
  %18 = getelementptr inbounds %"class.gl::Renderbuffer", %"class.gl::Renderbuffer"* %13, i64 0, i32 1, i32 0
  %19 = select i1 %17, %"class.gl::FramebufferAttachmentObject"* null, %"class.gl::FramebufferAttachmentObject"* %18
  call void @_ZN2gl11Framebuffer24setAttachmentMultisampleEPKNS_7ContextEjjRKNS_10ImageIndexEPNS_27FramebufferAttachmentObjectEi(%"class.gl::Framebuffer"* %8, %"class.gl::Context"* %0, i32 36161, i32 %2, %"class.gl::ImageIndex"* nonnull dereferenceable(16) %6, %"class.gl::FramebufferAttachmentObject"* %19, i32 %15) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #21
  br label %21

20:                                               ; preds = %5
  tail call void @_ZN2gl11Framebuffer15resetAttachmentEPKNS_7ContextEj(%"class.gl::Framebuffer"* %8, %"class.gl::Context"* %0, i32 %2) #21
  br label %21

21:                                               ; preds = %20, %10
  call void @_ZN2gl5State14setObjectDirtyEj(%"class.gl::State"* %7, i32 %1) #21
  ret void
}

declare dereferenceable(32) %"class.gl::RenderbufferState"* @_ZNK2gl12Renderbuffer8getStateEv(%"class.gl::Renderbuffer"*) local_unnamed_addr #3

declare i32 @_ZNK2gl17RenderbufferState10getSamplesEv(%"class.gl::RenderbufferState"*) local_unnamed_addr #3

declare void @_ZN2gl11Framebuffer24setAttachmentMultisampleEPKNS_7ContextEjjRKNS_10ImageIndexEPNS_27FramebufferAttachmentObjectEi(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i32, i32, %"class.gl::ImageIndex"* dereferenceable(16), %"class.gl::FramebufferAttachmentObject"*, i32) local_unnamed_addr #3

declare void @_ZN2gl10ImageIndexC1Ev(%"class.gl::ImageIndex"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23framebufferTextureLayerEjjNS_9TextureIDEii(%"class.gl::Context"*, i32, i32, i32, i32, i32) local_unnamed_addr #5 align 2 {
  %7 = alloca %"class.gl::ImageIndex", align 4
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %9 = tail call %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"* %8, i32 %1) #21
  %10 = icmp eq i32 %3, 0
  br i1 %10, label %96, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %13 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %12, align 8
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %13, i64 0, i32 0, i32 1, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, %14
  br i1 %17, label %18, label %25

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %13, i64 0, i32 0, i32 1, i32 1
  %20 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %19, align 8
  %21 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %20, i64 %14
  %22 = load %"class.gl::Texture"*, %"class.gl::Texture"** %21, align 8
  %23 = icmp eq %"class.gl::Texture"* %22, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %24 = select i1 %23, %"class.gl::Texture"* null, %"class.gl::Texture"* %22
  br label %88

25:                                               ; preds = %11
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %27 = add i64 %26, %14
  %28 = zext i64 %27 to i128
  %29 = mul nuw i128 %28, 11376068507788127593
  %30 = lshr i128 %29, 64
  %31 = xor i128 %30, %29
  %32 = trunc i128 %31 to i64
  %33 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %13, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %13, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = lshr i64 %32, 7
  %38 = ptrtoint i8* %34 to i64
  %39 = lshr i64 %38, 12
  %40 = xor i64 %37, %39
  %41 = trunc i128 %31 to i8
  %42 = and i8 %41, 127
  %43 = insertelement <16 x i8> undef, i8 %42, i32 0
  %44 = shufflevector <16 x i8> %43, <16 x i8> undef, <16 x i32> zeroinitializer
  %45 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %13, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %46

46:                                               ; preds = %76, %25
  %47 = phi i64 [ %40, %25 ], [ %78, %76 ]
  %48 = phi i64 [ 0, %25 ], [ %77, %76 ]
  %49 = and i64 %47, %36
  %50 = getelementptr inbounds i8, i8* %34, i64 %49
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1
  %53 = icmp eq <16 x i8> %44, %52
  %54 = bitcast <16 x i1> %53 to i16
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %72, label %56

56:                                               ; preds = %46
  %57 = zext i16 %54 to i32
  %58 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %45, align 8
  br label %59

59:                                               ; preds = %68, %56
  %60 = phi i32 [ %57, %56 ], [ %70, %68 ]
  %61 = tail call i32 @llvm.cttz.i32(i32 %60, i1 false) #21, !range !8
  %62 = zext i32 %61 to i64
  %63 = add i64 %49, %62
  %64 = and i64 %63, %36
  %65 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %58, i64 %64, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %3
  br i1 %67, label %79, label %68, !prof !9

68:                                               ; preds = %59
  %69 = add i32 %60, -1
  %70 = and i32 %69, %60
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %59

72:                                               ; preds = %68, %46
  %73 = icmp eq <16 x i8> %52, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %74 = bitcast <16 x i1> %73 to i16
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %76, label %88, !prof !10

76:                                               ; preds = %72
  %77 = add i64 %48, 16
  %78 = add i64 %77, %49
  br label %46

79:                                               ; preds = %59
  %80 = getelementptr inbounds i8, i8* %34, i64 %64
  %81 = icmp ne i8* %80, null
  tail call void @llvm.assume(i1 %81) #21
  %82 = load i8, i8* %80, align 1
  %83 = icmp sgt i8 %82, -1
  br i1 %83, label %85, label %84, !prof !9

84:                                               ; preds = %79
  tail call void @llvm.trap() #21
  unreachable

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %58, i64 %64, i32 0, i32 1
  %87 = load %"class.gl::Texture"*, %"class.gl::Texture"** %86, align 8
  br label %88

88:                                               ; preds = %72, %18, %85
  %89 = phi %"class.gl::Texture"* [ %24, %18 ], [ %87, %85 ], [ null, %72 ]
  %90 = getelementptr inbounds %"class.gl::ImageIndex", %"class.gl::ImageIndex"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %90, i8 -86, i64 16, i1 false)
  %91 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %89, i64 0, i32 4, i32 0
  %92 = load i8, i8* %91, align 8
  call void @_ZN2gl10ImageIndex12MakeFromTypeENS_11TextureTypeEiii(%"class.gl::ImageIndex"* nonnull sret %7, i8 zeroext %92, i32 %4, i32 %5, i32 1) #21
  %93 = icmp eq %"class.gl::Texture"* %89, null
  %94 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %89, i64 0, i32 2, i32 0
  %95 = select i1 %93, %"class.gl::FramebufferAttachmentObject"* null, %"class.gl::FramebufferAttachmentObject"* %94
  call void @_ZN2gl11Framebuffer13setAttachmentEPKNS_7ContextEjjRKNS_10ImageIndexEPNS_27FramebufferAttachmentObjectE(%"class.gl::Framebuffer"* %9, %"class.gl::Context"* %0, i32 5890, i32 %2, %"class.gl::ImageIndex"* nonnull dereferenceable(16) %7, %"class.gl::FramebufferAttachmentObject"* %95) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #21
  br label %97

96:                                               ; preds = %6
  tail call void @_ZN2gl11Framebuffer15resetAttachmentEPKNS_7ContextEj(%"class.gl::Framebuffer"* %9, %"class.gl::Context"* %0, i32 %2) #21
  br label %97

97:                                               ; preds = %96, %88
  call void @_ZN2gl5State14setObjectDirtyEj(%"class.gl::State"* %8, i32 %1) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context27framebufferTextureMultiviewEjjNS_9TextureIDEiii(%"class.gl::Context"*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #5 align 2 {
  %8 = alloca %"class.gl::ImageIndex", align 4
  %9 = alloca %"class.gl::ImageIndex", align 4
  %10 = alloca %"class.gl::ImageIndex", align 4
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %12 = tail call %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"* %11, i32 %1) #21
  %13 = icmp eq i32 %3, 0
  br i1 %13, label %108, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %16 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %15, align 8
  %17 = zext i32 %3 to i64
  %18 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %16, i64 0, i32 0, i32 1, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %19, %17
  br i1 %20, label %21, label %28

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %16, i64 0, i32 0, i32 1, i32 1
  %23 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %22, align 8
  %24 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %23, i64 %17
  %25 = load %"class.gl::Texture"*, %"class.gl::Texture"** %24, align 8
  %26 = icmp eq %"class.gl::Texture"* %25, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %27 = select i1 %26, %"class.gl::Texture"* null, %"class.gl::Texture"* %25
  br label %91

28:                                               ; preds = %14
  %29 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %30 = add i64 %29, %17
  %31 = zext i64 %30 to i128
  %32 = mul nuw i128 %31, 11376068507788127593
  %33 = lshr i128 %32, 64
  %34 = xor i128 %33, %32
  %35 = trunc i128 %34 to i64
  %36 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %16, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %16, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %39 = load i64, i64* %38, align 8
  %40 = lshr i64 %35, 7
  %41 = ptrtoint i8* %37 to i64
  %42 = lshr i64 %41, 12
  %43 = xor i64 %40, %42
  %44 = trunc i128 %34 to i8
  %45 = and i8 %44, 127
  %46 = insertelement <16 x i8> undef, i8 %45, i32 0
  %47 = shufflevector <16 x i8> %46, <16 x i8> undef, <16 x i32> zeroinitializer
  %48 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %16, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %49

49:                                               ; preds = %79, %28
  %50 = phi i64 [ %43, %28 ], [ %81, %79 ]
  %51 = phi i64 [ 0, %28 ], [ %80, %79 ]
  %52 = and i64 %50, %39
  %53 = getelementptr inbounds i8, i8* %37, i64 %52
  %54 = bitcast i8* %53 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 1
  %56 = icmp eq <16 x i8> %47, %55
  %57 = bitcast <16 x i1> %56 to i16
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %75, label %59

59:                                               ; preds = %49
  %60 = zext i16 %57 to i32
  %61 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %48, align 8
  br label %62

62:                                               ; preds = %71, %59
  %63 = phi i32 [ %60, %59 ], [ %73, %71 ]
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #21, !range !8
  %65 = zext i32 %64 to i64
  %66 = add i64 %52, %65
  %67 = and i64 %66, %39
  %68 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %61, i64 %67, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, %3
  br i1 %70, label %82, label %71, !prof !9

71:                                               ; preds = %62
  %72 = add i32 %63, -1
  %73 = and i32 %72, %63
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %62

75:                                               ; preds = %71, %49
  %76 = icmp eq <16 x i8> %55, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %77 = bitcast <16 x i1> %76 to i16
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %79, label %91, !prof !10

79:                                               ; preds = %75
  %80 = add i64 %51, 16
  %81 = add i64 %80, %52
  br label %49

82:                                               ; preds = %62
  %83 = getelementptr inbounds i8, i8* %37, i64 %67
  %84 = icmp ne i8* %83, null
  tail call void @llvm.assume(i1 %84) #21
  %85 = load i8, i8* %83, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %88, label %87, !prof !9

87:                                               ; preds = %82
  tail call void @llvm.trap() #21
  unreachable

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %61, i64 %67, i32 0, i32 1
  %90 = load %"class.gl::Texture"*, %"class.gl::Texture"** %89, align 8
  br label %91

91:                                               ; preds = %75, %21, %88
  %92 = phi %"class.gl::Texture"* [ %27, %21 ], [ %90, %88 ], [ null, %75 ]
  %93 = getelementptr inbounds %"class.gl::ImageIndex", %"class.gl::ImageIndex"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %93, i8 -86, i64 16, i1 false)
  call void @_ZN2gl10ImageIndexC1Ev(%"class.gl::ImageIndex"* nonnull %8) #21
  %94 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %92, i64 0, i32 4, i32 0
  %95 = load i8, i8* %94, align 8
  %96 = icmp eq i8 %95, 1
  br i1 %96, label %97, label %99

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.gl::ImageIndex", %"class.gl::ImageIndex"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #21
  call void @_ZN2gl10ImageIndex16Make2DArrayRangeEiii(%"class.gl::ImageIndex"* nonnull sret %9, i32 %4, i32 %5, i32 %6) #21
  br label %101

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.gl::ImageIndex", %"class.gl::ImageIndex"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #21
  call void @_ZN2gl10ImageIndex27Make2DMultisampleArrayRangeEii(%"class.gl::ImageIndex"* nonnull sret %10, i32 %5, i32 %6) #21
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi %"class.gl::ImageIndex"* [ %10, %99 ], [ %9, %97 ]
  %103 = phi i8* [ %100, %99 ], [ %98, %97 ]
  %104 = call dereferenceable(16) %"class.gl::ImageIndex"* @_ZN2gl10ImageIndexaSERKS0_(%"class.gl::ImageIndex"* nonnull %8, %"class.gl::ImageIndex"* nonnull dereferenceable(16) %102) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #21
  %105 = icmp eq %"class.gl::Texture"* %92, null
  %106 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %92, i64 0, i32 2, i32 0
  %107 = select i1 %105, %"class.gl::FramebufferAttachmentObject"* null, %"class.gl::FramebufferAttachmentObject"* %106
  call void @_ZN2gl11Framebuffer22setAttachmentMultiviewEPKNS_7ContextEjjRKNS_10ImageIndexEPNS_27FramebufferAttachmentObjectEii(%"class.gl::Framebuffer"* %12, %"class.gl::Context"* %0, i32 5890, i32 %2, %"class.gl::ImageIndex"* nonnull dereferenceable(16) %8, %"class.gl::FramebufferAttachmentObject"* %107, i32 %6, i32 %5) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #21
  br label %109

108:                                              ; preds = %7
  tail call void @_ZN2gl11Framebuffer15resetAttachmentEPKNS_7ContextEj(%"class.gl::Framebuffer"* %12, %"class.gl::Context"* %0, i32 %2) #21
  br label %109

109:                                              ; preds = %108, %101
  call void @_ZN2gl5State14setObjectDirtyEj(%"class.gl::State"* %11, i32 %1) #21
  ret void
}

declare void @_ZN2gl10ImageIndex16Make2DArrayRangeEiii(%"class.gl::ImageIndex"* sret, i32, i32, i32) local_unnamed_addr #3

declare dereferenceable(16) %"class.gl::ImageIndex"* @_ZN2gl10ImageIndexaSERKS0_(%"class.gl::ImageIndex"*, %"class.gl::ImageIndex"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN2gl10ImageIndex27Make2DMultisampleArrayRangeEii(%"class.gl::ImageIndex"* sret, i32, i32) local_unnamed_addr #3

declare void @_ZN2gl11Framebuffer22setAttachmentMultiviewEPKNS_7ContextEjjRKNS_10ImageIndexEPNS_27FramebufferAttachmentObjectEii(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i32, i32, %"class.gl::ImageIndex"* dereferenceable(16), %"class.gl::FramebufferAttachmentObject"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18framebufferTextureEjjNS_9TextureIDEi(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #5 align 2 {
  %6 = alloca %"class.gl::ImageIndex", align 4
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %8 = tail call %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"* %7, i32 %1) #21
  %9 = icmp eq i32 %3, 0
  br i1 %9, label %95, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %12 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %11, align 8
  %13 = zext i32 %3 to i64
  %14 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %12, i64 0, i32 0, i32 1, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %15, %13
  br i1 %16, label %17, label %24

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %12, i64 0, i32 0, i32 1, i32 1
  %19 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %18, align 8
  %20 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %19, i64 %13
  %21 = load %"class.gl::Texture"*, %"class.gl::Texture"** %20, align 8
  %22 = icmp eq %"class.gl::Texture"* %21, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %23 = select i1 %22, %"class.gl::Texture"* null, %"class.gl::Texture"* %21
  br label %87

24:                                               ; preds = %10
  %25 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %26 = add i64 %25, %13
  %27 = zext i64 %26 to i128
  %28 = mul nuw i128 %27, 11376068507788127593
  %29 = lshr i128 %28, 64
  %30 = xor i128 %29, %28
  %31 = trunc i128 %30 to i64
  %32 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %12, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %12, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %35 = load i64, i64* %34, align 8
  %36 = lshr i64 %31, 7
  %37 = ptrtoint i8* %33 to i64
  %38 = lshr i64 %37, 12
  %39 = xor i64 %36, %38
  %40 = trunc i128 %30 to i8
  %41 = and i8 %40, 127
  %42 = insertelement <16 x i8> undef, i8 %41, i32 0
  %43 = shufflevector <16 x i8> %42, <16 x i8> undef, <16 x i32> zeroinitializer
  %44 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %12, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %45

45:                                               ; preds = %75, %24
  %46 = phi i64 [ %39, %24 ], [ %77, %75 ]
  %47 = phi i64 [ 0, %24 ], [ %76, %75 ]
  %48 = and i64 %46, %35
  %49 = getelementptr inbounds i8, i8* %33, i64 %48
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1
  %52 = icmp eq <16 x i8> %43, %51
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %71, label %55

55:                                               ; preds = %45
  %56 = zext i16 %53 to i32
  %57 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %44, align 8
  br label %58

58:                                               ; preds = %67, %55
  %59 = phi i32 [ %56, %55 ], [ %69, %67 ]
  %60 = tail call i32 @llvm.cttz.i32(i32 %59, i1 false) #21, !range !8
  %61 = zext i32 %60 to i64
  %62 = add i64 %48, %61
  %63 = and i64 %62, %35
  %64 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %57, i64 %63, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %3
  br i1 %66, label %78, label %67, !prof !9

67:                                               ; preds = %58
  %68 = add i32 %59, -1
  %69 = and i32 %68, %59
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %58

71:                                               ; preds = %67, %45
  %72 = icmp eq <16 x i8> %51, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %73 = bitcast <16 x i1> %72 to i16
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %75, label %87, !prof !10

75:                                               ; preds = %71
  %76 = add i64 %47, 16
  %77 = add i64 %76, %48
  br label %45

78:                                               ; preds = %58
  %79 = getelementptr inbounds i8, i8* %33, i64 %63
  %80 = icmp ne i8* %79, null
  tail call void @llvm.assume(i1 %80) #21
  %81 = load i8, i8* %79, align 1
  %82 = icmp sgt i8 %81, -1
  br i1 %82, label %84, label %83, !prof !9

83:                                               ; preds = %78
  tail call void @llvm.trap() #21
  unreachable

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %57, i64 %63, i32 0, i32 1
  %86 = load %"class.gl::Texture"*, %"class.gl::Texture"** %85, align 8
  br label %87

87:                                               ; preds = %71, %17, %84
  %88 = phi %"class.gl::Texture"* [ %23, %17 ], [ %86, %84 ], [ null, %71 ]
  %89 = getelementptr inbounds %"class.gl::ImageIndex", %"class.gl::ImageIndex"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %89, i8 -86, i64 16, i1 false)
  %90 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %88, i64 0, i32 4, i32 0
  %91 = load i8, i8* %90, align 8
  call void @_ZN2gl10ImageIndex12MakeFromTypeENS_11TextureTypeEiii(%"class.gl::ImageIndex"* nonnull sret %6, i8 zeroext %91, i32 %4, i32 -1, i32 -1) #21
  %92 = icmp eq %"class.gl::Texture"* %88, null
  %93 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %88, i64 0, i32 2, i32 0
  %94 = select i1 %92, %"class.gl::FramebufferAttachmentObject"* null, %"class.gl::FramebufferAttachmentObject"* %93
  call void @_ZN2gl11Framebuffer13setAttachmentEPKNS_7ContextEjjRKNS_10ImageIndexEPNS_27FramebufferAttachmentObjectE(%"class.gl::Framebuffer"* %8, %"class.gl::Context"* %0, i32 5890, i32 %2, %"class.gl::ImageIndex"* nonnull dereferenceable(16) %6, %"class.gl::FramebufferAttachmentObject"* %94) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #21
  br label %96

95:                                               ; preds = %5
  tail call void @_ZN2gl11Framebuffer15resetAttachmentEPKNS_7ContextEj(%"class.gl::Framebuffer"* %8, %"class.gl::Context"* %0, i32 %2) #21
  br label %96

96:                                               ; preds = %95, %87
  call void @_ZN2gl5State14setObjectDirtyEj(%"class.gl::State"* %7, i32 %1) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11drawBuffersEiPKj(%"class.gl::Context"* nocapture, i32, i32*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 61
  %5 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %4, align 8
  %6 = sext i32 %1 to i64
  tail call void @_ZN2gl11Framebuffer14setDrawBuffersEmPKj(%"class.gl::Framebuffer"* %5, i64 %6, i32* %2) #21
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = or i64 %8, 1040
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %10, align 8
  ret void
}

declare void @_ZN2gl11Framebuffer14setDrawBuffersEmPKj(%"class.gl::Framebuffer"*, i64, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10readBufferEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 60
  %5 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %4, align 8
  tail call void @_ZN2gl11Framebuffer13setReadBufferEj(%"class.gl::Framebuffer"* %5, i32 %1) #21
  tail call void @_ZN2gl5State14setObjectDirtyEj(%"class.gl::State"* %3, i32 36008) #21
  ret void
}

declare void @_ZN2gl11Framebuffer13setReadBufferEj(%"class.gl::Framebuffer"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18discardFramebufferEjiPKj(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call i32 @_ZN2gl5State15syncDirtyObjectEPKNS_7ContextEj(%"class.gl::State"* %5, %"class.gl::Context"* %0, i32 %1) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = tail call %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"* %5, i32 %1) #21
  %10 = sext i32 %2 to i64
  %11 = tail call i32 @_ZN2gl11Framebuffer7discardEPKNS_7ContextEmPKj(%"class.gl::Framebuffer"* %9, %"class.gl::Context"* %0, i64 %10, i32* %3) #21
  br label %12

12:                                               ; preds = %4, %8
  ret void
}

declare i32 @_ZN2gl5State15syncDirtyObjectEPKNS_7ContextEj(%"class.gl::State"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

declare i32 @_ZN2gl11Framebuffer7discardEPKNS_7ContextEmPKj(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i64, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21invalidateFramebufferEjiPKj(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"* %5, i32 %1) #21
  %7 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %6, i64 0, i32 3
  %8 = tail call zeroext i1 @_ZNK2gl16FramebufferState9isDefaultEv(%"class.gl::FramebufferState"* %7) #21
  br i1 %8, label %17, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %6, i64 0, i32 9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %6, i64 0, i32 5, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %13, %4
  %18 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %6, i64 0, i32 5, i32 1
  br label %21

19:                                               ; preds = %13, %9
  %20 = tail call dereferenceable(16) %"struct.gl::FramebufferStatus"* @_ZNK2gl11Framebuffer15checkStatusImplEPKNS_7ContextE(%"class.gl::Framebuffer"* %6, %"class.gl::Context"* %0) #21
  br label %21

21:                                               ; preds = %17, %19
  %22 = phi %"struct.gl::FramebufferStatus"* [ %18, %17 ], [ %20, %19 ]
  %23 = tail call zeroext i1 @_ZNK2gl17FramebufferStatus10isCompleteEv(%"struct.gl::FramebufferStatus"* %22) #21
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = tail call i32 @_ZN2gl5State15syncDirtyObjectEPKNS_7ContextEj(%"class.gl::State"* %5, %"class.gl::Context"* %0, i32 %1) #21
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = sext i32 %2 to i64
  %29 = tail call i32 @_ZN2gl11Framebuffer10invalidateEPKNS_7ContextEmPKj(%"class.gl::Framebuffer"* %6, %"class.gl::Context"* %0, i64 %28, i32* %3) #21
  ret void

30:                                               ; preds = %24, %21
  ret void
}

declare i32 @_ZN2gl11Framebuffer10invalidateEPKNS_7ContextEmPKj(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i64, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context24invalidateSubFramebufferEjiPKjiiii(%"class.gl::Context"*, i32, i32, i32*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %9 = alloca %"struct.gl::Rectangle", align 4
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %11 = tail call %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"* %10, i32 %1) #21
  %12 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %11, i64 0, i32 3
  %13 = tail call zeroext i1 @_ZNK2gl16FramebufferState9isDefaultEv(%"class.gl::FramebufferState"* %12) #21
  br i1 %13, label %22, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %11, i64 0, i32 9, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %11, i64 0, i32 5, i32 0
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %18, %8
  %23 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %11, i64 0, i32 5, i32 1
  br label %26

24:                                               ; preds = %18, %14
  %25 = tail call dereferenceable(16) %"struct.gl::FramebufferStatus"* @_ZNK2gl11Framebuffer15checkStatusImplEPKNS_7ContextE(%"class.gl::Framebuffer"* %11, %"class.gl::Context"* %0) #21
  br label %26

26:                                               ; preds = %22, %24
  %27 = phi %"struct.gl::FramebufferStatus"* [ %23, %22 ], [ %25, %24 ]
  %28 = tail call zeroext i1 @_ZNK2gl17FramebufferStatus10isCompleteEv(%"struct.gl::FramebufferStatus"* %27) #21
  br i1 %28, label %29, label %41

29:                                               ; preds = %26
  %30 = bitcast %"struct.gl::Rectangle"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #21
  %31 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 2
  %34 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 3
  store i32 %4, i32* %31, align 4
  store i32 %5, i32* %32, align 4
  store i32 %6, i32* %33, align 4
  store i32 %7, i32* %34, align 4
  %35 = tail call i32 @_ZN2gl5State15syncDirtyObjectEPKNS_7ContextEj(%"class.gl::State"* %10, %"class.gl::Context"* %0, i32 %1) #21
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %40, label %37

37:                                               ; preds = %29
  %38 = sext i32 %2 to i64
  %39 = call i32 @_ZN2gl11Framebuffer13invalidateSubEPKNS_7ContextEmPKjRKNS_9RectangleE(%"class.gl::Framebuffer"* %11, %"class.gl::Context"* %0, i64 %38, i32* %3, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %9) #21
  br label %40

40:                                               ; preds = %29, %37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #21
  br label %41

41:                                               ; preds = %26, %40
  ret void
}

declare i32 @_ZN2gl11Framebuffer13invalidateSubEPKNS_7ContextEmPKjRKNS_9RectangleE(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i64, i32*, %"struct.gl::Rectangle"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10texImage2DENS_13TextureTargetEiiiiijjPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %11 = alloca %"class.angle::BitSetT.168", align 8
  %12 = alloca %"struct.gl::Extents", align 4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %15 = load i64, i64* %14, align 8, !noalias !358
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 55, i32 0
  %17 = load i64, i64* %16, align 8, !noalias !358
  %18 = and i64 %17, %15
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %44, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %22 = tail call i64 @llvm.cttz.i64(i64 %18, i1 true) #21, !range !73
  %23 = bitcast %"class.gl::State"* %21 to i8*
  br label %24

24:                                               ; preds = %36, %20
  %25 = phi i64 [ %22, %20 ], [ %41, %36 ]
  %26 = phi i64 [ %18, %20 ], [ %39, %36 ]
  %27 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %25, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %23, i64 %28
  %30 = bitcast i8* %29 to %"class.gl::State"*
  %31 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %25, i32 0
  %32 = bitcast i64* %31 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %33 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %32, align 16
  %34 = tail call i32 %33(%"class.gl::State"* %30, %"class.gl::Context"* %0, i32 7) #21
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %81, label %36

36:                                               ; preds = %24
  %37 = shl i64 1, %25
  %38 = xor i64 %37, -1
  %39 = and i64 %26, %38
  %40 = icmp eq i64 %39, 0
  %41 = tail call i64 @llvm.cttz.i64(i64 %39, i1 true) #21, !range !73
  br i1 %40, label %42, label %24

42:                                               ; preds = %36
  %43 = load i64, i64* %14, align 8
  br label %44

44:                                               ; preds = %42, %10
  %45 = phi i64 [ %43, %42 ], [ %15, %10 ]
  %46 = and i64 %18, 4095
  %47 = xor i64 %46, 4095
  %48 = and i64 %45, %47
  store i64 %48, i64* %14, align 8
  %49 = bitcast %"class.angle::BitSetT.168"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #21
  %50 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %11, i64 0, i32 0
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %52 = load i64, i64* %51, align 8, !noalias !361
  %53 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %13, i64 0, i32 0
  %54 = load i64, i64* %53, align 8, !noalias !361
  %55 = and i64 %54, %52
  store i64 %55, i64* %50, align 8, !alias.scope !361
  %56 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %57 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %56, align 8
  %58 = bitcast %"class.rx::ContextImpl"* %57 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %59 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %58, align 8
  %60 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %59, i64 51
  %61 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %60, align 8
  %62 = call i32 %61(%"class.rx::ContextImpl"* %57, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %11, %"class.angle::BitSetT.168"* dereferenceable(8) %13) #21
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %65

64:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #21
  br label %81

65:                                               ; preds = %44
  %66 = load i64, i64* %50, align 8, !noalias !364
  %67 = xor i64 %66, -1
  %68 = load i64, i64* %51, align 8
  %69 = and i64 %68, %67
  store i64 %69, i64* %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #21
  %70 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %71 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 8, i32 0, i32 1
  %72 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %71, align 8
  %73 = bitcast %"struct.gl::Extents"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %73) #21
  %74 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %12, i64 0, i32 0
  %75 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %12, i64 0, i32 1
  %76 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %12, i64 0, i32 2
  store i32 %4, i32* %74, align 4
  store i32 %5, i32* %75, align 4
  store i32 1, i32* %76, align 4
  %77 = call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %78 = call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %70, i8 zeroext %77) #21
  %79 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 87
  %80 = call i32 @_ZN2gl7Texture8setImageEPNS_7ContextERKNS_16PixelUnpackStateEPNS_6BufferENS_13TextureTargetEijRKNS_7ExtentsEjjPKh(%"class.gl::Texture"* %78, %"class.gl::Context"* %0, %"struct.gl::PixelUnpackState"* dereferenceable(24) %79, %"class.gl::Buffer"* %72, i8 zeroext %1, i32 %2, i32 %3, %"struct.gl::Extents"* nonnull dereferenceable(12) %12, i32 %7, i32 %8, i8* %9) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %73) #21
  br label %81

81:                                               ; preds = %24, %64, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context20syncStateForTexImageEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.angle::BitSetT.168", align 8
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !367
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 55, i32 0
  %7 = load i64, i64* %6, align 8, !noalias !367
  %8 = and i64 %7, %5
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %12 = tail call i64 @llvm.cttz.i64(i64 %8, i1 true) #21, !range !73
  %13 = bitcast %"class.gl::State"* %11 to i8*
  br label %14

14:                                               ; preds = %26, %10
  %15 = phi i64 [ %12, %10 ], [ %31, %26 ]
  %16 = phi i64 [ %8, %10 ], [ %29, %26 ]
  %17 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %15, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %13, i64 %18
  %20 = bitcast i8* %19 to %"class.gl::State"*
  %21 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %15, i32 0
  %22 = bitcast i64* %21 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %23 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %22, align 16
  %24 = tail call i32 %23(%"class.gl::State"* %20, %"class.gl::Context"* %0, i32 7) #21
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %61, label %26

26:                                               ; preds = %14
  %27 = shl i64 1, %15
  %28 = xor i64 %27, -1
  %29 = and i64 %16, %28
  %30 = icmp eq i64 %29, 0
  %31 = tail call i64 @llvm.cttz.i64(i64 %29, i1 true) #21, !range !73
  br i1 %30, label %32, label %14

32:                                               ; preds = %26
  %33 = load i64, i64* %4, align 8
  br label %34

34:                                               ; preds = %32, %1
  %35 = phi i64 [ %33, %32 ], [ %5, %1 ]
  %36 = and i64 %8, 4095
  %37 = xor i64 %36, 4095
  %38 = and i64 %35, %37
  store i64 %38, i64* %4, align 8
  %39 = bitcast %"class.angle::BitSetT.168"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #21
  %40 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %2, i64 0, i32 0
  %41 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %42 = load i64, i64* %41, align 8, !noalias !370
  %43 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %3, i64 0, i32 0
  %44 = load i64, i64* %43, align 8, !noalias !370
  %45 = and i64 %44, %42
  store i64 %45, i64* %40, align 8, !alias.scope !370
  %46 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %47 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %46, align 8
  %48 = bitcast %"class.rx::ContextImpl"* %47 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %49 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %49, i64 51
  %51 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %50, align 8
  %52 = call i32 %51(%"class.rx::ContextImpl"* %47, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %2, %"class.angle::BitSetT.168"* dereferenceable(8) %3) #21
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %59, label %54

54:                                               ; preds = %34
  %55 = load i64, i64* %40, align 8, !noalias !373
  %56 = xor i64 %55, -1
  %57 = load i64, i64* %41, align 8
  %58 = and i64 %57, %56
  store i64 %58, i64* %41, align 8
  br label %59

59:                                               ; preds = %54, %34
  %60 = phi i32 [ 0, %54 ], [ 1, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #21
  br label %61

61:                                               ; preds = %14, %59
  %62 = phi i32 [ %60, %59 ], [ 1, %14 ]
  ret i32 %62
}

declare i32 @_ZN2gl7Texture8setImageEPNS_7ContextERKNS_16PixelUnpackStateEPNS_6BufferENS_13TextureTargetEijRKNS_7ExtentsEjjPKh(%"class.gl::Texture"*, %"class.gl::Context"*, %"struct.gl::PixelUnpackState"* dereferenceable(24), %"class.gl::Buffer"*, i8 zeroext, i32, i32, %"struct.gl::Extents"* dereferenceable(12), i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16texImage2DRobustENS_13TextureTargetEiiiiijjiPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context10texImage2DENS_13TextureTargetEiiiiijjPKv(%"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 undef, i32 %7, i32 %8, i8* %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10texImage3DENS_13TextureTargetEiiiiiijjPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %12 = alloca %"class.angle::BitSetT.168", align 8
  %13 = alloca %"struct.gl::Extents", align 4
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %16 = load i64, i64* %15, align 8, !noalias !376
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 55, i32 0
  %18 = load i64, i64* %17, align 8, !noalias !376
  %19 = and i64 %18, %16
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %45, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %23 = tail call i64 @llvm.cttz.i64(i64 %19, i1 true) #21, !range !73
  %24 = bitcast %"class.gl::State"* %22 to i8*
  br label %25

25:                                               ; preds = %37, %21
  %26 = phi i64 [ %23, %21 ], [ %42, %37 ]
  %27 = phi i64 [ %19, %21 ], [ %40, %37 ]
  %28 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %26, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %24, i64 %29
  %31 = bitcast i8* %30 to %"class.gl::State"*
  %32 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %26, i32 0
  %33 = bitcast i64* %32 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %34 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %33, align 16
  %35 = tail call i32 %34(%"class.gl::State"* %31, %"class.gl::Context"* %0, i32 7) #21
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %82, label %37

37:                                               ; preds = %25
  %38 = shl i64 1, %26
  %39 = xor i64 %38, -1
  %40 = and i64 %27, %39
  %41 = icmp eq i64 %40, 0
  %42 = tail call i64 @llvm.cttz.i64(i64 %40, i1 true) #21, !range !73
  br i1 %41, label %43, label %25

43:                                               ; preds = %37
  %44 = load i64, i64* %15, align 8
  br label %45

45:                                               ; preds = %43, %11
  %46 = phi i64 [ %44, %43 ], [ %16, %11 ]
  %47 = and i64 %19, 4095
  %48 = xor i64 %47, 4095
  %49 = and i64 %46, %48
  store i64 %49, i64* %15, align 8
  %50 = bitcast %"class.angle::BitSetT.168"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #21
  %51 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %12, i64 0, i32 0
  %52 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %53 = load i64, i64* %52, align 8, !noalias !379
  %54 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %14, i64 0, i32 0
  %55 = load i64, i64* %54, align 8, !noalias !379
  %56 = and i64 %55, %53
  store i64 %56, i64* %51, align 8, !alias.scope !379
  %57 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %58 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %57, align 8
  %59 = bitcast %"class.rx::ContextImpl"* %58 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %60 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %59, align 8
  %61 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %60, i64 51
  %62 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %61, align 8
  %63 = call i32 %62(%"class.rx::ContextImpl"* %58, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %12, %"class.angle::BitSetT.168"* dereferenceable(8) %14) #21
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %66

65:                                               ; preds = %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #21
  br label %82

66:                                               ; preds = %45
  %67 = load i64, i64* %51, align 8, !noalias !382
  %68 = xor i64 %67, -1
  %69 = load i64, i64* %52, align 8
  %70 = and i64 %69, %68
  store i64 %70, i64* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #21
  %71 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %72 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 8, i32 0, i32 1
  %73 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %72, align 8
  %74 = bitcast %"struct.gl::Extents"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %74) #21
  %75 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %13, i64 0, i32 0
  %76 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %13, i64 0, i32 1
  %77 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %13, i64 0, i32 2
  store i32 %4, i32* %75, align 4
  store i32 %5, i32* %76, align 4
  store i32 %6, i32* %77, align 4
  %78 = call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %79 = call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %71, i8 zeroext %78) #21
  %80 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 87
  %81 = call i32 @_ZN2gl7Texture8setImageEPNS_7ContextERKNS_16PixelUnpackStateEPNS_6BufferENS_13TextureTargetEijRKNS_7ExtentsEjjPKh(%"class.gl::Texture"* %79, %"class.gl::Context"* %0, %"struct.gl::PixelUnpackState"* dereferenceable(24) %80, %"class.gl::Buffer"* %73, i8 zeroext %1, i32 %2, i32 %3, %"struct.gl::Extents"* nonnull dereferenceable(12) %13, i32 %8, i32 %9, i8* %10) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %74) #21
  br label %82

82:                                               ; preds = %25, %65, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16texImage3DRobustENS_13TextureTargetEiiiiiijjiPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context10texImage3DENS_13TextureTargetEiiiiiijjPKv(%"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 undef, i32 %8, i32 %9, i8* %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13texSubImage2DENS_13TextureTargetEiiiiijjPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %11 = alloca %"class.angle::BitSetT.168", align 8
  %12 = alloca %"struct.gl::Box", align 4
  %13 = icmp eq i32 %5, 0
  %14 = icmp eq i32 %6, 0
  %15 = or i1 %13, %14
  br i1 %15, label %88, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %19 = load i64, i64* %18, align 8, !noalias !385
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 55, i32 0
  %21 = load i64, i64* %20, align 8, !noalias !385
  %22 = and i64 %21, %19
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %48, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %26 = tail call i64 @llvm.cttz.i64(i64 %22, i1 true) #21, !range !73
  %27 = bitcast %"class.gl::State"* %25 to i8*
  br label %28

28:                                               ; preds = %40, %24
  %29 = phi i64 [ %26, %24 ], [ %45, %40 ]
  %30 = phi i64 [ %22, %24 ], [ %43, %40 ]
  %31 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %29, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds i8, i8* %27, i64 %32
  %34 = bitcast i8* %33 to %"class.gl::State"*
  %35 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %29, i32 0
  %36 = bitcast i64* %35 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %37 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %36, align 16
  %38 = tail call i32 %37(%"class.gl::State"* %34, %"class.gl::Context"* %0, i32 7) #21
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %88, label %40

40:                                               ; preds = %28
  %41 = shl i64 1, %29
  %42 = xor i64 %41, -1
  %43 = and i64 %30, %42
  %44 = icmp eq i64 %43, 0
  %45 = tail call i64 @llvm.cttz.i64(i64 %43, i1 true) #21, !range !73
  br i1 %44, label %46, label %28

46:                                               ; preds = %40
  %47 = load i64, i64* %18, align 8
  br label %48

48:                                               ; preds = %46, %16
  %49 = phi i64 [ %47, %46 ], [ %19, %16 ]
  %50 = and i64 %22, 4095
  %51 = xor i64 %50, 4095
  %52 = and i64 %49, %51
  store i64 %52, i64* %18, align 8
  %53 = bitcast %"class.angle::BitSetT.168"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #21
  %54 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %11, i64 0, i32 0
  %55 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %56 = load i64, i64* %55, align 8, !noalias !388
  %57 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %17, i64 0, i32 0
  %58 = load i64, i64* %57, align 8, !noalias !388
  %59 = and i64 %58, %56
  store i64 %59, i64* %54, align 8, !alias.scope !388
  %60 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %61 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %60, align 8
  %62 = bitcast %"class.rx::ContextImpl"* %61 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %63 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %62, align 8
  %64 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %63, i64 51
  %65 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %64, align 8
  %66 = call i32 %65(%"class.rx::ContextImpl"* %61, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %11, %"class.angle::BitSetT.168"* dereferenceable(8) %17) #21
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %69

68:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #21
  br label %88

69:                                               ; preds = %48
  %70 = load i64, i64* %54, align 8, !noalias !391
  %71 = xor i64 %70, -1
  %72 = load i64, i64* %55, align 8
  %73 = and i64 %72, %71
  store i64 %73, i64* %55, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #21
  %74 = bitcast %"struct.gl::Box"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #21
  %75 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %12, i64 0, i32 0
  %76 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %12, i64 0, i32 1
  %77 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %12, i64 0, i32 2
  %78 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %12, i64 0, i32 3
  %79 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %12, i64 0, i32 4
  %80 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %12, i64 0, i32 5
  store i32 %3, i32* %75, align 4
  store i32 %4, i32* %76, align 4
  store i32 0, i32* %77, align 4
  store i32 %5, i32* %78, align 4
  store i32 %6, i32* %79, align 4
  store i32 1, i32* %80, align 4
  %81 = call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %82 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %83 = call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %82, i8 zeroext %81) #21
  %84 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 8, i32 0, i32 1
  %85 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %84, align 8
  %86 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 87
  %87 = call i32 @_ZN2gl7Texture11setSubImageEPNS_7ContextERKNS_16PixelUnpackStateEPNS_6BufferENS_13TextureTargetEiRKNS_3BoxEjjPKh(%"class.gl::Texture"* %83, %"class.gl::Context"* %0, %"struct.gl::PixelUnpackState"* dereferenceable(24) %86, %"class.gl::Buffer"* %85, i8 zeroext %1, i32 %2, %"struct.gl::Box"* nonnull dereferenceable(24) %12, i32 %7, i32 %8, i8* %9) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #21
  br label %88

88:                                               ; preds = %28, %68, %10, %69
  ret void
}

declare i32 @_ZN2gl7Texture11setSubImageEPNS_7ContextERKNS_16PixelUnpackStateEPNS_6BufferENS_13TextureTargetEiRKNS_3BoxEjjPKh(%"class.gl::Texture"*, %"class.gl::Context"*, %"struct.gl::PixelUnpackState"* dereferenceable(24), %"class.gl::Buffer"*, i8 zeroext, i32, %"struct.gl::Box"* dereferenceable(24), i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19texSubImage2DRobustENS_13TextureTargetEiiiiijjiPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context13texSubImage2DENS_13TextureTargetEiiiiijjPKv(%"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i8* %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13texSubImage3DENS_13TextureTargetEiiiiiiijjPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %13 = alloca %"class.angle::BitSetT.168", align 8
  %14 = alloca %"struct.gl::Box", align 4
  %15 = icmp eq i32 %6, 0
  %16 = icmp eq i32 %7, 0
  %17 = or i1 %15, %16
  %18 = icmp eq i32 %8, 0
  %19 = or i1 %17, %18
  br i1 %19, label %92, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %23 = load i64, i64* %22, align 8, !noalias !394
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 55, i32 0
  %25 = load i64, i64* %24, align 8, !noalias !394
  %26 = and i64 %25, %23
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %52, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %30 = tail call i64 @llvm.cttz.i64(i64 %26, i1 true) #21, !range !73
  %31 = bitcast %"class.gl::State"* %29 to i8*
  br label %32

32:                                               ; preds = %44, %28
  %33 = phi i64 [ %30, %28 ], [ %49, %44 ]
  %34 = phi i64 [ %26, %28 ], [ %47, %44 ]
  %35 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %33, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds i8, i8* %31, i64 %36
  %38 = bitcast i8* %37 to %"class.gl::State"*
  %39 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %33, i32 0
  %40 = bitcast i64* %39 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %41 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %40, align 16
  %42 = tail call i32 %41(%"class.gl::State"* %38, %"class.gl::Context"* %0, i32 7) #21
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %92, label %44

44:                                               ; preds = %32
  %45 = shl i64 1, %33
  %46 = xor i64 %45, -1
  %47 = and i64 %34, %46
  %48 = icmp eq i64 %47, 0
  %49 = tail call i64 @llvm.cttz.i64(i64 %47, i1 true) #21, !range !73
  br i1 %48, label %50, label %32

50:                                               ; preds = %44
  %51 = load i64, i64* %22, align 8
  br label %52

52:                                               ; preds = %50, %20
  %53 = phi i64 [ %51, %50 ], [ %23, %20 ]
  %54 = and i64 %26, 4095
  %55 = xor i64 %54, 4095
  %56 = and i64 %53, %55
  store i64 %56, i64* %22, align 8
  %57 = bitcast %"class.angle::BitSetT.168"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #21
  %58 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %13, i64 0, i32 0
  %59 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %60 = load i64, i64* %59, align 8, !noalias !397
  %61 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %21, i64 0, i32 0
  %62 = load i64, i64* %61, align 8, !noalias !397
  %63 = and i64 %62, %60
  store i64 %63, i64* %58, align 8, !alias.scope !397
  %64 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %65 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %64, align 8
  %66 = bitcast %"class.rx::ContextImpl"* %65 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %67 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %66, align 8
  %68 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %67, i64 51
  %69 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %68, align 8
  %70 = call i32 %69(%"class.rx::ContextImpl"* %65, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %13, %"class.angle::BitSetT.168"* dereferenceable(8) %21) #21
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %73

72:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #21
  br label %92

73:                                               ; preds = %52
  %74 = load i64, i64* %58, align 8, !noalias !400
  %75 = xor i64 %74, -1
  %76 = load i64, i64* %59, align 8
  %77 = and i64 %76, %75
  store i64 %77, i64* %59, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #21
  %78 = bitcast %"struct.gl::Box"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #21
  %79 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %14, i64 0, i32 0
  %80 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %14, i64 0, i32 1
  %81 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %14, i64 0, i32 2
  %82 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %14, i64 0, i32 3
  %83 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %14, i64 0, i32 4
  %84 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %14, i64 0, i32 5
  store i32 %3, i32* %79, align 4
  store i32 %4, i32* %80, align 4
  store i32 %5, i32* %81, align 4
  store i32 %6, i32* %82, align 4
  store i32 %7, i32* %83, align 4
  store i32 %8, i32* %84, align 4
  %85 = call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %86 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %87 = call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %86, i8 zeroext %85) #21
  %88 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 8, i32 0, i32 1
  %89 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %88, align 8
  %90 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 87
  %91 = call i32 @_ZN2gl7Texture11setSubImageEPNS_7ContextERKNS_16PixelUnpackStateEPNS_6BufferENS_13TextureTargetEiRKNS_3BoxEjjPKh(%"class.gl::Texture"* %87, %"class.gl::Context"* %0, %"struct.gl::PixelUnpackState"* dereferenceable(24) %90, %"class.gl::Buffer"* %89, i8 zeroext %1, i32 %2, %"struct.gl::Box"* nonnull dereferenceable(24) %14, i32 %9, i32 %10, i8* %11) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #21
  br label %92

92:                                               ; preds = %32, %72, %12, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19texSubImage3DRobustENS_13TextureTargetEiiiiiiijjiPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context13texSubImage3DENS_13TextureTargetEiiiiiiijjPKv(%"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, i8* %12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20compressedTexImage2DENS_13TextureTargetEijiiiiPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %10 = alloca %"class.angle::BitSetT.168", align 8
  %11 = alloca %"struct.gl::Extents", align 4
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %14 = load i64, i64* %13, align 8, !noalias !403
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 55, i32 0
  %16 = load i64, i64* %15, align 8, !noalias !403
  %17 = and i64 %16, %14
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %43, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %21 = tail call i64 @llvm.cttz.i64(i64 %17, i1 true) #21, !range !73
  %22 = bitcast %"class.gl::State"* %20 to i8*
  br label %23

23:                                               ; preds = %35, %19
  %24 = phi i64 [ %21, %19 ], [ %40, %35 ]
  %25 = phi i64 [ %17, %19 ], [ %38, %35 ]
  %26 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %24, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %22, i64 %27
  %29 = bitcast i8* %28 to %"class.gl::State"*
  %30 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %24, i32 0
  %31 = bitcast i64* %30 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %32 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %31, align 16
  %33 = tail call i32 %32(%"class.gl::State"* %29, %"class.gl::Context"* %0, i32 7) #21
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %79, label %35

35:                                               ; preds = %23
  %36 = shl i64 1, %24
  %37 = xor i64 %36, -1
  %38 = and i64 %25, %37
  %39 = icmp eq i64 %38, 0
  %40 = tail call i64 @llvm.cttz.i64(i64 %38, i1 true) #21, !range !73
  br i1 %39, label %41, label %23

41:                                               ; preds = %35
  %42 = load i64, i64* %13, align 8
  br label %43

43:                                               ; preds = %41, %9
  %44 = phi i64 [ %42, %41 ], [ %14, %9 ]
  %45 = and i64 %17, 4095
  %46 = xor i64 %45, 4095
  %47 = and i64 %44, %46
  store i64 %47, i64* %13, align 8
  %48 = bitcast %"class.angle::BitSetT.168"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #21
  %49 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %10, i64 0, i32 0
  %50 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %51 = load i64, i64* %50, align 8, !noalias !406
  %52 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %12, i64 0, i32 0
  %53 = load i64, i64* %52, align 8, !noalias !406
  %54 = and i64 %53, %51
  store i64 %54, i64* %49, align 8, !alias.scope !406
  %55 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %56 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %55, align 8
  %57 = bitcast %"class.rx::ContextImpl"* %56 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %58 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %57, align 8
  %59 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %58, i64 51
  %60 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %59, align 8
  %61 = call i32 %60(%"class.rx::ContextImpl"* %56, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %10, %"class.angle::BitSetT.168"* dereferenceable(8) %12) #21
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %64

63:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #21
  br label %79

64:                                               ; preds = %43
  %65 = load i64, i64* %49, align 8, !noalias !409
  %66 = xor i64 %65, -1
  %67 = load i64, i64* %50, align 8
  %68 = and i64 %67, %66
  store i64 %68, i64* %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #21
  %69 = bitcast %"struct.gl::Extents"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %69) #21
  %70 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %11, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %11, i64 0, i32 1
  %72 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %11, i64 0, i32 2
  store i32 %4, i32* %70, align 4
  store i32 %5, i32* %71, align 4
  store i32 1, i32* %72, align 4
  %73 = call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %74 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %75 = call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %74, i8 zeroext %73) #21
  %76 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 87
  %77 = sext i32 %7 to i64
  %78 = call i32 @_ZN2gl7Texture18setCompressedImageEPNS_7ContextERKNS_16PixelUnpackStateENS_13TextureTargetEijRKNS_7ExtentsEmPKh(%"class.gl::Texture"* %75, %"class.gl::Context"* %0, %"struct.gl::PixelUnpackState"* dereferenceable(24) %76, i8 zeroext %1, i32 %2, i32 %3, %"struct.gl::Extents"* nonnull dereferenceable(12) %11, i64 %77, i8* %8) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %69) #21
  br label %79

79:                                               ; preds = %23, %63, %64
  ret void
}

declare i32 @_ZN2gl7Texture18setCompressedImageEPNS_7ContextERKNS_16PixelUnpackStateENS_13TextureTargetEijRKNS_7ExtentsEmPKh(%"class.gl::Texture"*, %"class.gl::Context"*, %"struct.gl::PixelUnpackState"* dereferenceable(24), i8 zeroext, i32, i32, %"struct.gl::Extents"* dereferenceable(12), i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context26compressedTexImage2DRobustENS_13TextureTargetEijiiiiiPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context20compressedTexImage2DENS_13TextureTargetEijiiiiPKv(%"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 undef, i32 %7, i8* %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20compressedTexImage3DENS_13TextureTargetEijiiiiiPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %11 = alloca %"class.angle::BitSetT.168", align 8
  %12 = alloca %"struct.gl::Extents", align 4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %15 = load i64, i64* %14, align 8, !noalias !412
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 55, i32 0
  %17 = load i64, i64* %16, align 8, !noalias !412
  %18 = and i64 %17, %15
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %44, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %22 = tail call i64 @llvm.cttz.i64(i64 %18, i1 true) #21, !range !73
  %23 = bitcast %"class.gl::State"* %21 to i8*
  br label %24

24:                                               ; preds = %36, %20
  %25 = phi i64 [ %22, %20 ], [ %41, %36 ]
  %26 = phi i64 [ %18, %20 ], [ %39, %36 ]
  %27 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %25, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %23, i64 %28
  %30 = bitcast i8* %29 to %"class.gl::State"*
  %31 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %25, i32 0
  %32 = bitcast i64* %31 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %33 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %32, align 16
  %34 = tail call i32 %33(%"class.gl::State"* %30, %"class.gl::Context"* %0, i32 7) #21
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %80, label %36

36:                                               ; preds = %24
  %37 = shl i64 1, %25
  %38 = xor i64 %37, -1
  %39 = and i64 %26, %38
  %40 = icmp eq i64 %39, 0
  %41 = tail call i64 @llvm.cttz.i64(i64 %39, i1 true) #21, !range !73
  br i1 %40, label %42, label %24

42:                                               ; preds = %36
  %43 = load i64, i64* %14, align 8
  br label %44

44:                                               ; preds = %42, %10
  %45 = phi i64 [ %43, %42 ], [ %15, %10 ]
  %46 = and i64 %18, 4095
  %47 = xor i64 %46, 4095
  %48 = and i64 %45, %47
  store i64 %48, i64* %14, align 8
  %49 = bitcast %"class.angle::BitSetT.168"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #21
  %50 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %11, i64 0, i32 0
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %52 = load i64, i64* %51, align 8, !noalias !415
  %53 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %13, i64 0, i32 0
  %54 = load i64, i64* %53, align 8, !noalias !415
  %55 = and i64 %54, %52
  store i64 %55, i64* %50, align 8, !alias.scope !415
  %56 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %57 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %56, align 8
  %58 = bitcast %"class.rx::ContextImpl"* %57 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %59 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %58, align 8
  %60 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %59, i64 51
  %61 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %60, align 8
  %62 = call i32 %61(%"class.rx::ContextImpl"* %57, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %11, %"class.angle::BitSetT.168"* dereferenceable(8) %13) #21
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %65

64:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #21
  br label %80

65:                                               ; preds = %44
  %66 = load i64, i64* %50, align 8, !noalias !418
  %67 = xor i64 %66, -1
  %68 = load i64, i64* %51, align 8
  %69 = and i64 %68, %67
  store i64 %69, i64* %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #21
  %70 = bitcast %"struct.gl::Extents"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %70) #21
  %71 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %12, i64 0, i32 0
  %72 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %12, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %12, i64 0, i32 2
  store i32 %4, i32* %71, align 4
  store i32 %5, i32* %72, align 4
  store i32 %6, i32* %73, align 4
  %74 = call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %75 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %76 = call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %75, i8 zeroext %74) #21
  %77 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 87
  %78 = sext i32 %8 to i64
  %79 = call i32 @_ZN2gl7Texture18setCompressedImageEPNS_7ContextERKNS_16PixelUnpackStateENS_13TextureTargetEijRKNS_7ExtentsEmPKh(%"class.gl::Texture"* %76, %"class.gl::Context"* %0, %"struct.gl::PixelUnpackState"* dereferenceable(24) %77, i8 zeroext %1, i32 %2, i32 %3, %"struct.gl::Extents"* nonnull dereferenceable(12) %12, i64 %78, i8* %9) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %70) #21
  br label %80

80:                                               ; preds = %24, %64, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context26compressedTexImage3DRobustENS_13TextureTargetEijiiiiiiPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context20compressedTexImage3DENS_13TextureTargetEijiiiiiPKv(%"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 undef, i32 %8, i8* %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23compressedTexSubImage2DENS_13TextureTargetEiiiiijiPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %11 = alloca %"class.angle::BitSetT.168", align 8
  %12 = alloca %"struct.gl::Box", align 4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %15 = load i64, i64* %14, align 8, !noalias !421
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 55, i32 0
  %17 = load i64, i64* %16, align 8, !noalias !421
  %18 = and i64 %17, %15
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %44, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %22 = tail call i64 @llvm.cttz.i64(i64 %18, i1 true) #21, !range !73
  %23 = bitcast %"class.gl::State"* %21 to i8*
  br label %24

24:                                               ; preds = %36, %20
  %25 = phi i64 [ %22, %20 ], [ %41, %36 ]
  %26 = phi i64 [ %18, %20 ], [ %39, %36 ]
  %27 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %25, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %23, i64 %28
  %30 = bitcast i8* %29 to %"class.gl::State"*
  %31 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %25, i32 0
  %32 = bitcast i64* %31 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %33 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %32, align 16
  %34 = tail call i32 %33(%"class.gl::State"* %30, %"class.gl::Context"* %0, i32 7) #21
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %83, label %36

36:                                               ; preds = %24
  %37 = shl i64 1, %25
  %38 = xor i64 %37, -1
  %39 = and i64 %26, %38
  %40 = icmp eq i64 %39, 0
  %41 = tail call i64 @llvm.cttz.i64(i64 %39, i1 true) #21, !range !73
  br i1 %40, label %42, label %24

42:                                               ; preds = %36
  %43 = load i64, i64* %14, align 8
  br label %44

44:                                               ; preds = %42, %10
  %45 = phi i64 [ %43, %42 ], [ %15, %10 ]
  %46 = and i64 %18, 4095
  %47 = xor i64 %46, 4095
  %48 = and i64 %45, %47
  store i64 %48, i64* %14, align 8
  %49 = bitcast %"class.angle::BitSetT.168"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #21
  %50 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %11, i64 0, i32 0
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %52 = load i64, i64* %51, align 8, !noalias !424
  %53 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %13, i64 0, i32 0
  %54 = load i64, i64* %53, align 8, !noalias !424
  %55 = and i64 %54, %52
  store i64 %55, i64* %50, align 8, !alias.scope !424
  %56 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %57 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %56, align 8
  %58 = bitcast %"class.rx::ContextImpl"* %57 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %59 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %58, align 8
  %60 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %59, i64 51
  %61 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %60, align 8
  %62 = call i32 %61(%"class.rx::ContextImpl"* %57, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %11, %"class.angle::BitSetT.168"* dereferenceable(8) %13) #21
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %65

64:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #21
  br label %83

65:                                               ; preds = %44
  %66 = load i64, i64* %50, align 8, !noalias !427
  %67 = xor i64 %66, -1
  %68 = load i64, i64* %51, align 8
  %69 = and i64 %68, %67
  store i64 %69, i64* %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #21
  %70 = bitcast %"struct.gl::Box"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #21
  %71 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %12, i64 0, i32 0
  %72 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %12, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %12, i64 0, i32 2
  %74 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %12, i64 0, i32 3
  %75 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %12, i64 0, i32 4
  %76 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %12, i64 0, i32 5
  store i32 %3, i32* %71, align 4
  store i32 %4, i32* %72, align 4
  store i32 0, i32* %73, align 4
  store i32 %5, i32* %74, align 4
  store i32 %6, i32* %75, align 4
  store i32 1, i32* %76, align 4
  %77 = call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %78 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %79 = call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %78, i8 zeroext %77) #21
  %80 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 87
  %81 = sext i32 %8 to i64
  %82 = call i32 @_ZN2gl7Texture21setCompressedSubImageEPKNS_7ContextERKNS_16PixelUnpackStateENS_13TextureTargetEiRKNS_3BoxEjmPKh(%"class.gl::Texture"* %79, %"class.gl::Context"* %0, %"struct.gl::PixelUnpackState"* dereferenceable(24) %80, i8 zeroext %1, i32 %2, %"struct.gl::Box"* nonnull dereferenceable(24) %12, i32 %7, i64 %81, i8* %9) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #21
  br label %83

83:                                               ; preds = %24, %64, %65
  ret void
}

declare i32 @_ZN2gl7Texture21setCompressedSubImageEPKNS_7ContextERKNS_16PixelUnpackStateENS_13TextureTargetEiRKNS_3BoxEjmPKh(%"class.gl::Texture"*, %"class.gl::Context"*, %"struct.gl::PixelUnpackState"* dereferenceable(24), i8 zeroext, i32, %"struct.gl::Box"* dereferenceable(24), i32, i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context29compressedTexSubImage2DRobustENS_13TextureTargetEiiiiijiiPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context23compressedTexSubImage2DENS_13TextureTargetEiiiiijiPKv(%"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i8* %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23compressedTexSubImage3DENS_13TextureTargetEiiiiiiijiPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %13 = alloca %"class.angle::BitSetT.168", align 8
  %14 = alloca %"struct.gl::Box", align 4
  %15 = icmp eq i32 %6, 0
  %16 = icmp eq i32 %7, 0
  %17 = or i1 %15, %16
  br i1 %17, label %89, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %21 = load i64, i64* %20, align 8, !noalias !430
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 55, i32 0
  %23 = load i64, i64* %22, align 8, !noalias !430
  %24 = and i64 %23, %21
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %50, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %28 = tail call i64 @llvm.cttz.i64(i64 %24, i1 true) #21, !range !73
  %29 = bitcast %"class.gl::State"* %27 to i8*
  br label %30

30:                                               ; preds = %42, %26
  %31 = phi i64 [ %28, %26 ], [ %47, %42 ]
  %32 = phi i64 [ %24, %26 ], [ %45, %42 ]
  %33 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %31, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds i8, i8* %29, i64 %34
  %36 = bitcast i8* %35 to %"class.gl::State"*
  %37 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %31, i32 0
  %38 = bitcast i64* %37 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %39 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %38, align 16
  %40 = tail call i32 %39(%"class.gl::State"* %36, %"class.gl::Context"* %0, i32 7) #21
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %89, label %42

42:                                               ; preds = %30
  %43 = shl i64 1, %31
  %44 = xor i64 %43, -1
  %45 = and i64 %32, %44
  %46 = icmp eq i64 %45, 0
  %47 = tail call i64 @llvm.cttz.i64(i64 %45, i1 true) #21, !range !73
  br i1 %46, label %48, label %30

48:                                               ; preds = %42
  %49 = load i64, i64* %20, align 8
  br label %50

50:                                               ; preds = %48, %18
  %51 = phi i64 [ %49, %48 ], [ %21, %18 ]
  %52 = and i64 %24, 4095
  %53 = xor i64 %52, 4095
  %54 = and i64 %51, %53
  store i64 %54, i64* %20, align 8
  %55 = bitcast %"class.angle::BitSetT.168"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #21
  %56 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %13, i64 0, i32 0
  %57 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %58 = load i64, i64* %57, align 8, !noalias !433
  %59 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %19, i64 0, i32 0
  %60 = load i64, i64* %59, align 8, !noalias !433
  %61 = and i64 %60, %58
  store i64 %61, i64* %56, align 8, !alias.scope !433
  %62 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %63 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %62, align 8
  %64 = bitcast %"class.rx::ContextImpl"* %63 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %65 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %65, i64 51
  %67 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %66, align 8
  %68 = call i32 %67(%"class.rx::ContextImpl"* %63, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %13, %"class.angle::BitSetT.168"* dereferenceable(8) %19) #21
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %71

70:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #21
  br label %89

71:                                               ; preds = %50
  %72 = load i64, i64* %56, align 8, !noalias !436
  %73 = xor i64 %72, -1
  %74 = load i64, i64* %57, align 8
  %75 = and i64 %74, %73
  store i64 %75, i64* %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #21
  %76 = bitcast %"struct.gl::Box"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #21
  %77 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %14, i64 0, i32 0
  %78 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %14, i64 0, i32 1
  %79 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %14, i64 0, i32 2
  %80 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %14, i64 0, i32 3
  %81 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %14, i64 0, i32 4
  %82 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %14, i64 0, i32 5
  store i32 %3, i32* %77, align 4
  store i32 %4, i32* %78, align 4
  store i32 %5, i32* %79, align 4
  store i32 %6, i32* %80, align 4
  store i32 %7, i32* %81, align 4
  store i32 %8, i32* %82, align 4
  %83 = call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %84 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %85 = call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %84, i8 zeroext %83) #21
  %86 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 87
  %87 = sext i32 %10 to i64
  %88 = call i32 @_ZN2gl7Texture21setCompressedSubImageEPKNS_7ContextERKNS_16PixelUnpackStateENS_13TextureTargetEiRKNS_3BoxEjmPKh(%"class.gl::Texture"* %85, %"class.gl::Context"* %0, %"struct.gl::PixelUnpackState"* dereferenceable(24) %86, i8 zeroext %1, i32 %2, %"struct.gl::Box"* nonnull dereferenceable(24) %14, i32 %9, i64 %87, i8* %11) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #21
  br label %89

89:                                               ; preds = %30, %70, %12, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context29compressedTexSubImage3DRobustENS_13TextureTargetEiiiiiiijiiPKv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context23compressedTexSubImage3DENS_13TextureTargetEiiiiiiijiPKv(%"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, i8* %12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14generateMipmapENS_11TextureTypeE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %3, i8 zeroext %1) #21
  %5 = tail call i32 @_ZN2gl7Texture14generateMipmapEPNS_7ContextE(%"class.gl::Texture"* %4, %"class.gl::Context"* %0) #21
  ret void
}

declare i32 @_ZN2gl7Texture14generateMipmapEPNS_7ContextE(%"class.gl::Texture"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11copyTextureENS_9TextureIDEiNS_13TextureTargetES1_iijhhh(%"class.gl::Context"*, i32, i32, i8 zeroext, i32, i32, i32, i32, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #5 align 2 {
  %12 = alloca %"class.angle::BitSetT.168", align 8
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %15 = load i64, i64* %14, align 8, !noalias !439
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 55, i32 0
  %17 = load i64, i64* %16, align 8, !noalias !439
  %18 = and i64 %17, %15
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %44, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %22 = tail call i64 @llvm.cttz.i64(i64 %18, i1 true) #21, !range !73
  %23 = bitcast %"class.gl::State"* %21 to i8*
  br label %24

24:                                               ; preds = %36, %20
  %25 = phi i64 [ %22, %20 ], [ %41, %36 ]
  %26 = phi i64 [ %18, %20 ], [ %39, %36 ]
  %27 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %25, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %23, i64 %28
  %30 = bitcast i8* %29 to %"class.gl::State"*
  %31 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %25, i32 0
  %32 = bitcast i64* %31 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %33 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %32, align 16
  %34 = tail call i32 %33(%"class.gl::State"* %30, %"class.gl::Context"* %0, i32 7) #21
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %226, label %36

36:                                               ; preds = %24
  %37 = shl i64 1, %25
  %38 = xor i64 %37, -1
  %39 = and i64 %26, %38
  %40 = icmp eq i64 %39, 0
  %41 = tail call i64 @llvm.cttz.i64(i64 %39, i1 true) #21, !range !73
  br i1 %40, label %42, label %24

42:                                               ; preds = %36
  %43 = load i64, i64* %14, align 8
  br label %44

44:                                               ; preds = %42, %11
  %45 = phi i64 [ %43, %42 ], [ %15, %11 ]
  %46 = and i64 %18, 4095
  %47 = xor i64 %46, 4095
  %48 = and i64 %45, %47
  store i64 %48, i64* %14, align 8
  %49 = bitcast %"class.angle::BitSetT.168"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #21
  %50 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %12, i64 0, i32 0
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %52 = load i64, i64* %51, align 8, !noalias !442
  %53 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %13, i64 0, i32 0
  %54 = load i64, i64* %53, align 8, !noalias !442
  %55 = and i64 %54, %52
  store i64 %55, i64* %50, align 8, !alias.scope !442
  %56 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %57 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %56, align 8
  %58 = bitcast %"class.rx::ContextImpl"* %57 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %59 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %58, align 8
  %60 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %59, i64 51
  %61 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %60, align 8
  %62 = call i32 %61(%"class.rx::ContextImpl"* %57, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %12, %"class.angle::BitSetT.168"* dereferenceable(8) %13) #21
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %65

64:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #21
  br label %226

65:                                               ; preds = %44
  %66 = load i64, i64* %50, align 8, !noalias !445
  %67 = xor i64 %66, -1
  %68 = load i64, i64* %51, align 8
  %69 = and i64 %68, %67
  store i64 %69, i64* %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #21
  %70 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %71 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %70, align 8
  %72 = zext i32 %1 to i64
  %73 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = icmp ugt i64 %74, %72
  br i1 %75, label %76, label %83

76:                                               ; preds = %65
  %77 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 1
  %78 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %77, align 8
  %79 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %78, i64 %72
  %80 = load %"class.gl::Texture"*, %"class.gl::Texture"** %79, align 8
  %81 = icmp eq %"class.gl::Texture"* %80, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %82 = select i1 %81, %"class.gl::Texture"* null, %"class.gl::Texture"* %80
  br label %146

83:                                               ; preds = %65
  %84 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %85 = add i64 %84, %72
  %86 = zext i64 %85 to i128
  %87 = mul nuw i128 %86, 11376068507788127593
  %88 = lshr i128 %87, 64
  %89 = xor i128 %88, %87
  %90 = trunc i128 %89 to i64
  %91 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = lshr i64 %90, 7
  %96 = ptrtoint i8* %92 to i64
  %97 = lshr i64 %96, 12
  %98 = xor i64 %95, %97
  %99 = trunc i128 %89 to i8
  %100 = and i8 %99, 127
  %101 = insertelement <16 x i8> undef, i8 %100, i32 0
  %102 = shufflevector <16 x i8> %101, <16 x i8> undef, <16 x i32> zeroinitializer
  %103 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %104

104:                                              ; preds = %134, %83
  %105 = phi i64 [ %98, %83 ], [ %136, %134 ]
  %106 = phi i64 [ 0, %83 ], [ %135, %134 ]
  %107 = and i64 %105, %94
  %108 = getelementptr inbounds i8, i8* %92, i64 %107
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1
  %111 = icmp eq <16 x i8> %102, %110
  %112 = bitcast <16 x i1> %111 to i16
  %113 = icmp eq i16 %112, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %104
  %115 = zext i16 %112 to i32
  %116 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %103, align 8
  br label %117

117:                                              ; preds = %126, %114
  %118 = phi i32 [ %115, %114 ], [ %128, %126 ]
  %119 = call i32 @llvm.cttz.i32(i32 %118, i1 false) #21, !range !8
  %120 = zext i32 %119 to i64
  %121 = add i64 %107, %120
  %122 = and i64 %121, %94
  %123 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %116, i64 %122, i32 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, %1
  br i1 %125, label %137, label %126, !prof !9

126:                                              ; preds = %117
  %127 = add i32 %118, -1
  %128 = and i32 %127, %118
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %117

130:                                              ; preds = %126, %104
  %131 = icmp eq <16 x i8> %110, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %132 = bitcast <16 x i1> %131 to i16
  %133 = icmp eq i16 %132, 0
  br i1 %133, label %134, label %146, !prof !10

134:                                              ; preds = %130
  %135 = add i64 %106, 16
  %136 = add i64 %135, %107
  br label %104

137:                                              ; preds = %117
  %138 = getelementptr inbounds i8, i8* %92, i64 %122
  %139 = icmp ne i8* %138, null
  call void @llvm.assume(i1 %139) #21
  %140 = load i8, i8* %138, align 1
  %141 = icmp sgt i8 %140, -1
  br i1 %141, label %143, label %142, !prof !9

142:                                              ; preds = %137
  call void @llvm.trap() #21
  unreachable

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %116, i64 %122, i32 0, i32 1
  %145 = load %"class.gl::Texture"*, %"class.gl::Texture"** %144, align 8
  br label %146

146:                                              ; preds = %130, %76, %143
  %147 = phi %"class.gl::Texture"* [ %82, %76 ], [ %145, %143 ], [ null, %130 ]
  %148 = zext i32 %4 to i64
  %149 = icmp ugt i64 %74, %148
  br i1 %149, label %150, label %157

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 1
  %152 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %151, align 8
  %153 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %152, i64 %148
  %154 = load %"class.gl::Texture"*, %"class.gl::Texture"** %153, align 8
  %155 = icmp eq %"class.gl::Texture"* %154, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %156 = select i1 %155, %"class.gl::Texture"* null, %"class.gl::Texture"* %154
  br label %220

157:                                              ; preds = %146
  %158 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %159 = add i64 %158, %148
  %160 = zext i64 %159 to i128
  %161 = mul nuw i128 %160, 11376068507788127593
  %162 = lshr i128 %161, 64
  %163 = xor i128 %162, %161
  %164 = trunc i128 %163 to i64
  %165 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %166 = load i8*, i8** %165, align 8
  %167 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %168 = load i64, i64* %167, align 8
  %169 = lshr i64 %164, 7
  %170 = ptrtoint i8* %166 to i64
  %171 = lshr i64 %170, 12
  %172 = xor i64 %169, %171
  %173 = trunc i128 %163 to i8
  %174 = and i8 %173, 127
  %175 = insertelement <16 x i8> undef, i8 %174, i32 0
  %176 = shufflevector <16 x i8> %175, <16 x i8> undef, <16 x i32> zeroinitializer
  %177 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %178

178:                                              ; preds = %208, %157
  %179 = phi i64 [ %172, %157 ], [ %210, %208 ]
  %180 = phi i64 [ 0, %157 ], [ %209, %208 ]
  %181 = and i64 %179, %168
  %182 = getelementptr inbounds i8, i8* %166, i64 %181
  %183 = bitcast i8* %182 to <16 x i8>*
  %184 = load <16 x i8>, <16 x i8>* %183, align 1
  %185 = icmp eq <16 x i8> %176, %184
  %186 = bitcast <16 x i1> %185 to i16
  %187 = icmp eq i16 %186, 0
  br i1 %187, label %204, label %188

188:                                              ; preds = %178
  %189 = zext i16 %186 to i32
  %190 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %177, align 8
  br label %191

191:                                              ; preds = %200, %188
  %192 = phi i32 [ %189, %188 ], [ %202, %200 ]
  %193 = call i32 @llvm.cttz.i32(i32 %192, i1 false) #21, !range !8
  %194 = zext i32 %193 to i64
  %195 = add i64 %181, %194
  %196 = and i64 %195, %168
  %197 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %190, i64 %196, i32 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = icmp eq i32 %198, %4
  br i1 %199, label %211, label %200, !prof !9

200:                                              ; preds = %191
  %201 = add i32 %192, -1
  %202 = and i32 %201, %192
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %191

204:                                              ; preds = %200, %178
  %205 = icmp eq <16 x i8> %184, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %206 = bitcast <16 x i1> %205 to i16
  %207 = icmp eq i16 %206, 0
  br i1 %207, label %208, label %220, !prof !10

208:                                              ; preds = %204
  %209 = add i64 %180, 16
  %210 = add i64 %209, %181
  br label %178

211:                                              ; preds = %191
  %212 = getelementptr inbounds i8, i8* %166, i64 %196
  %213 = icmp ne i8* %212, null
  call void @llvm.assume(i1 %213) #21
  %214 = load i8, i8* %212, align 1
  %215 = icmp sgt i8 %214, -1
  br i1 %215, label %217, label %216, !prof !9

216:                                              ; preds = %211
  call void @llvm.trap() #21
  unreachable

217:                                              ; preds = %211
  %218 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %190, i64 %196, i32 0, i32 1
  %219 = load %"class.gl::Texture"*, %"class.gl::Texture"** %218, align 8
  br label %220

220:                                              ; preds = %204, %150, %217
  %221 = phi %"class.gl::Texture"* [ %156, %150 ], [ %219, %217 ], [ null, %204 ]
  %222 = icmp ne i8 %8, 0
  %223 = icmp ne i8 %9, 0
  %224 = icmp ne i8 %10, 0
  %225 = call i32 @_ZN2gl7Texture11copyTextureEPNS_7ContextENS_13TextureTargetEijjibbbPS0_(%"class.gl::Texture"* %221, %"class.gl::Context"* %0, i8 zeroext %3, i32 %5, i32 %6, i32 %7, i32 %2, i1 zeroext %222, i1 zeroext %223, i1 zeroext %224, %"class.gl::Texture"* %147) #21
  br label %226

226:                                              ; preds = %24, %64, %220
  ret void
}

declare i32 @_ZN2gl7Texture11copyTextureEPNS_7ContextENS_13TextureTargetEijjibbbPS0_(%"class.gl::Texture"*, %"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i1 zeroext, i1 zeroext, i1 zeroext, %"class.gl::Texture"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14copySubTextureENS_9TextureIDEiNS_13TextureTargetES1_iiiiiiihhh(%"class.gl::Context"*, i32, i32, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i32, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #5 align 2 {
  %16 = alloca %"class.angle::BitSetT.168", align 8
  %17 = alloca %"struct.gl::Offset", align 4
  %18 = alloca %"struct.gl::Box", align 4
  %19 = icmp eq i32 %10, 0
  %20 = icmp eq i32 %11, 0
  %21 = or i1 %19, %20
  br i1 %21, label %247, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %25 = load i64, i64* %24, align 8, !noalias !448
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 55, i32 0
  %27 = load i64, i64* %26, align 8, !noalias !448
  %28 = and i64 %27, %25
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %54, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %32 = tail call i64 @llvm.cttz.i64(i64 %28, i1 true) #21, !range !73
  %33 = bitcast %"class.gl::State"* %31 to i8*
  br label %34

34:                                               ; preds = %46, %30
  %35 = phi i64 [ %32, %30 ], [ %51, %46 ]
  %36 = phi i64 [ %28, %30 ], [ %49, %46 ]
  %37 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %35, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds i8, i8* %33, i64 %38
  %40 = bitcast i8* %39 to %"class.gl::State"*
  %41 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %35, i32 0
  %42 = bitcast i64* %41 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %43 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %42, align 16
  %44 = tail call i32 %43(%"class.gl::State"* %40, %"class.gl::Context"* %0, i32 7) #21
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %247, label %46

46:                                               ; preds = %34
  %47 = shl i64 1, %35
  %48 = xor i64 %47, -1
  %49 = and i64 %36, %48
  %50 = icmp eq i64 %49, 0
  %51 = tail call i64 @llvm.cttz.i64(i64 %49, i1 true) #21, !range !73
  br i1 %50, label %52, label %34

52:                                               ; preds = %46
  %53 = load i64, i64* %24, align 8
  br label %54

54:                                               ; preds = %52, %22
  %55 = phi i64 [ %53, %52 ], [ %25, %22 ]
  %56 = and i64 %28, 4095
  %57 = xor i64 %56, 4095
  %58 = and i64 %55, %57
  store i64 %58, i64* %24, align 8
  %59 = bitcast %"class.angle::BitSetT.168"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #21
  %60 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %16, i64 0, i32 0
  %61 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %62 = load i64, i64* %61, align 8, !noalias !451
  %63 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %23, i64 0, i32 0
  %64 = load i64, i64* %63, align 8, !noalias !451
  %65 = and i64 %64, %62
  store i64 %65, i64* %60, align 8, !alias.scope !451
  %66 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %67 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %66, align 8
  %68 = bitcast %"class.rx::ContextImpl"* %67 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %69 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %68, align 8
  %70 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %69, i64 51
  %71 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %70, align 8
  %72 = call i32 %71(%"class.rx::ContextImpl"* %67, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %16, %"class.angle::BitSetT.168"* dereferenceable(8) %23) #21
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %75

74:                                               ; preds = %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #21
  br label %247

75:                                               ; preds = %54
  %76 = load i64, i64* %60, align 8, !noalias !454
  %77 = xor i64 %76, -1
  %78 = load i64, i64* %61, align 8
  %79 = and i64 %78, %77
  store i64 %79, i64* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #21
  %80 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %81 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %80, align 8
  %82 = zext i32 %1 to i64
  %83 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %81, i64 0, i32 0, i32 1, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp ugt i64 %84, %82
  br i1 %85, label %86, label %93

86:                                               ; preds = %75
  %87 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %81, i64 0, i32 0, i32 1, i32 1
  %88 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %87, align 8
  %89 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %88, i64 %82
  %90 = load %"class.gl::Texture"*, %"class.gl::Texture"** %89, align 8
  %91 = icmp eq %"class.gl::Texture"* %90, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %92 = select i1 %91, %"class.gl::Texture"* null, %"class.gl::Texture"* %90
  br label %156

93:                                               ; preds = %75
  %94 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %95 = add i64 %94, %82
  %96 = zext i64 %95 to i128
  %97 = mul nuw i128 %96, 11376068507788127593
  %98 = lshr i128 %97, 64
  %99 = xor i128 %98, %97
  %100 = trunc i128 %99 to i64
  %101 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %81, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %81, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %104 = load i64, i64* %103, align 8
  %105 = lshr i64 %100, 7
  %106 = ptrtoint i8* %102 to i64
  %107 = lshr i64 %106, 12
  %108 = xor i64 %105, %107
  %109 = trunc i128 %99 to i8
  %110 = and i8 %109, 127
  %111 = insertelement <16 x i8> undef, i8 %110, i32 0
  %112 = shufflevector <16 x i8> %111, <16 x i8> undef, <16 x i32> zeroinitializer
  %113 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %81, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %114

114:                                              ; preds = %144, %93
  %115 = phi i64 [ %108, %93 ], [ %146, %144 ]
  %116 = phi i64 [ 0, %93 ], [ %145, %144 ]
  %117 = and i64 %115, %104
  %118 = getelementptr inbounds i8, i8* %102, i64 %117
  %119 = bitcast i8* %118 to <16 x i8>*
  %120 = load <16 x i8>, <16 x i8>* %119, align 1
  %121 = icmp eq <16 x i8> %112, %120
  %122 = bitcast <16 x i1> %121 to i16
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %114
  %125 = zext i16 %122 to i32
  %126 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %113, align 8
  br label %127

127:                                              ; preds = %136, %124
  %128 = phi i32 [ %125, %124 ], [ %138, %136 ]
  %129 = call i32 @llvm.cttz.i32(i32 %128, i1 false) #21, !range !8
  %130 = zext i32 %129 to i64
  %131 = add i64 %117, %130
  %132 = and i64 %131, %104
  %133 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %126, i64 %132, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, %1
  br i1 %135, label %147, label %136, !prof !9

136:                                              ; preds = %127
  %137 = add i32 %128, -1
  %138 = and i32 %137, %128
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %127

140:                                              ; preds = %136, %114
  %141 = icmp eq <16 x i8> %120, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %142 = bitcast <16 x i1> %141 to i16
  %143 = icmp eq i16 %142, 0
  br i1 %143, label %144, label %156, !prof !10

144:                                              ; preds = %140
  %145 = add i64 %116, 16
  %146 = add i64 %145, %117
  br label %114

147:                                              ; preds = %127
  %148 = getelementptr inbounds i8, i8* %102, i64 %132
  %149 = icmp ne i8* %148, null
  call void @llvm.assume(i1 %149) #21
  %150 = load i8, i8* %148, align 1
  %151 = icmp sgt i8 %150, -1
  br i1 %151, label %153, label %152, !prof !9

152:                                              ; preds = %147
  call void @llvm.trap() #21
  unreachable

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %126, i64 %132, i32 0, i32 1
  %155 = load %"class.gl::Texture"*, %"class.gl::Texture"** %154, align 8
  br label %156

156:                                              ; preds = %140, %86, %153
  %157 = phi %"class.gl::Texture"* [ %92, %86 ], [ %155, %153 ], [ null, %140 ]
  %158 = zext i32 %4 to i64
  %159 = icmp ugt i64 %84, %158
  br i1 %159, label %160, label %167

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %81, i64 0, i32 0, i32 1, i32 1
  %162 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %161, align 8
  %163 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %162, i64 %158
  %164 = load %"class.gl::Texture"*, %"class.gl::Texture"** %163, align 8
  %165 = icmp eq %"class.gl::Texture"* %164, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %166 = select i1 %165, %"class.gl::Texture"* null, %"class.gl::Texture"* %164
  br label %230

167:                                              ; preds = %156
  %168 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %169 = add i64 %168, %158
  %170 = zext i64 %169 to i128
  %171 = mul nuw i128 %170, 11376068507788127593
  %172 = lshr i128 %171, 64
  %173 = xor i128 %172, %171
  %174 = trunc i128 %173 to i64
  %175 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %81, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %81, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %178 = load i64, i64* %177, align 8
  %179 = lshr i64 %174, 7
  %180 = ptrtoint i8* %176 to i64
  %181 = lshr i64 %180, 12
  %182 = xor i64 %179, %181
  %183 = trunc i128 %173 to i8
  %184 = and i8 %183, 127
  %185 = insertelement <16 x i8> undef, i8 %184, i32 0
  %186 = shufflevector <16 x i8> %185, <16 x i8> undef, <16 x i32> zeroinitializer
  %187 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %81, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %188

188:                                              ; preds = %218, %167
  %189 = phi i64 [ %182, %167 ], [ %220, %218 ]
  %190 = phi i64 [ 0, %167 ], [ %219, %218 ]
  %191 = and i64 %189, %178
  %192 = getelementptr inbounds i8, i8* %176, i64 %191
  %193 = bitcast i8* %192 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1
  %195 = icmp eq <16 x i8> %186, %194
  %196 = bitcast <16 x i1> %195 to i16
  %197 = icmp eq i16 %196, 0
  br i1 %197, label %214, label %198

198:                                              ; preds = %188
  %199 = zext i16 %196 to i32
  %200 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %187, align 8
  br label %201

201:                                              ; preds = %210, %198
  %202 = phi i32 [ %199, %198 ], [ %212, %210 ]
  %203 = call i32 @llvm.cttz.i32(i32 %202, i1 false) #21, !range !8
  %204 = zext i32 %203 to i64
  %205 = add i64 %191, %204
  %206 = and i64 %205, %178
  %207 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %200, i64 %206, i32 0, i32 0
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, %4
  br i1 %209, label %221, label %210, !prof !9

210:                                              ; preds = %201
  %211 = add i32 %202, -1
  %212 = and i32 %211, %202
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %201

214:                                              ; preds = %210, %188
  %215 = icmp eq <16 x i8> %194, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %216 = bitcast <16 x i1> %215 to i16
  %217 = icmp eq i16 %216, 0
  br i1 %217, label %218, label %230, !prof !10

218:                                              ; preds = %214
  %219 = add i64 %190, 16
  %220 = add i64 %219, %191
  br label %188

221:                                              ; preds = %201
  %222 = getelementptr inbounds i8, i8* %176, i64 %206
  %223 = icmp ne i8* %222, null
  call void @llvm.assume(i1 %223) #21
  %224 = load i8, i8* %222, align 1
  %225 = icmp sgt i8 %224, -1
  br i1 %225, label %227, label %226, !prof !9

226:                                              ; preds = %221
  call void @llvm.trap() #21
  unreachable

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %200, i64 %206, i32 0, i32 1
  %229 = load %"class.gl::Texture"*, %"class.gl::Texture"** %228, align 8
  br label %230

230:                                              ; preds = %214, %160, %227
  %231 = phi %"class.gl::Texture"* [ %166, %160 ], [ %229, %227 ], [ null, %214 ]
  %232 = bitcast %"struct.gl::Offset"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %232) #21
  %233 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %17, i64 0, i32 0
  %234 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %17, i64 0, i32 1
  %235 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %17, i64 0, i32 2
  store i32 %6, i32* %233, align 4
  store i32 %7, i32* %234, align 4
  store i32 0, i32* %235, align 4
  %236 = bitcast %"struct.gl::Box"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #21
  %237 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %18, i64 0, i32 0
  %238 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %18, i64 0, i32 1
  %239 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %18, i64 0, i32 2
  %240 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %18, i64 0, i32 3
  %241 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %18, i64 0, i32 4
  %242 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %18, i64 0, i32 5
  store i32 %8, i32* %237, align 4
  store i32 %9, i32* %238, align 4
  store i32 0, i32* %239, align 4
  store i32 %10, i32* %240, align 4
  store i32 %11, i32* %241, align 4
  store i32 1, i32* %242, align 4
  %243 = icmp ne i8 %12, 0
  %244 = icmp ne i8 %13, 0
  %245 = icmp ne i8 %14, 0
  %246 = call i32 @_ZN2gl7Texture14copySubTextureEPKNS_7ContextENS_13TextureTargetEiRKNS_6OffsetEiRKNS_3BoxEbbbPS0_(%"class.gl::Texture"* %231, %"class.gl::Context"* %0, i8 zeroext %3, i32 %5, %"struct.gl::Offset"* nonnull dereferenceable(12) %17, i32 %2, %"struct.gl::Box"* nonnull dereferenceable(24) %18, i1 zeroext %243, i1 zeroext %244, i1 zeroext %245, %"class.gl::Texture"* %157) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %232) #21
  br label %247

247:                                              ; preds = %34, %74, %15, %230
  ret void
}

declare i32 @_ZN2gl7Texture14copySubTextureEPKNS_7ContextENS_13TextureTargetEiRKNS_6OffsetEiRKNS_3BoxEbbbPS0_(%"class.gl::Texture"*, %"class.gl::Context"*, i8 zeroext, i32, %"struct.gl::Offset"* dereferenceable(12), i32, %"struct.gl::Box"* dereferenceable(24), i1 zeroext, i1 zeroext, i1 zeroext, %"class.gl::Texture"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13copyTexture3DENS_9TextureIDEiNS_13TextureTargetES1_iijhhh(%"class.gl::Context"*, i32, i32, i8 zeroext, i32, i32, i32, i32, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #5 align 2 {
  %12 = alloca %"class.angle::BitSetT.168", align 8
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %15 = load i64, i64* %14, align 8, !noalias !457
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 55, i32 0
  %17 = load i64, i64* %16, align 8, !noalias !457
  %18 = and i64 %17, %15
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %44, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %22 = tail call i64 @llvm.cttz.i64(i64 %18, i1 true) #21, !range !73
  %23 = bitcast %"class.gl::State"* %21 to i8*
  br label %24

24:                                               ; preds = %36, %20
  %25 = phi i64 [ %22, %20 ], [ %41, %36 ]
  %26 = phi i64 [ %18, %20 ], [ %39, %36 ]
  %27 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %25, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %23, i64 %28
  %30 = bitcast i8* %29 to %"class.gl::State"*
  %31 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %25, i32 0
  %32 = bitcast i64* %31 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %33 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %32, align 16
  %34 = tail call i32 %33(%"class.gl::State"* %30, %"class.gl::Context"* %0, i32 7) #21
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %226, label %36

36:                                               ; preds = %24
  %37 = shl i64 1, %25
  %38 = xor i64 %37, -1
  %39 = and i64 %26, %38
  %40 = icmp eq i64 %39, 0
  %41 = tail call i64 @llvm.cttz.i64(i64 %39, i1 true) #21, !range !73
  br i1 %40, label %42, label %24

42:                                               ; preds = %36
  %43 = load i64, i64* %14, align 8
  br label %44

44:                                               ; preds = %42, %11
  %45 = phi i64 [ %43, %42 ], [ %15, %11 ]
  %46 = and i64 %18, 4095
  %47 = xor i64 %46, 4095
  %48 = and i64 %45, %47
  store i64 %48, i64* %14, align 8
  %49 = bitcast %"class.angle::BitSetT.168"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #21
  %50 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %12, i64 0, i32 0
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %52 = load i64, i64* %51, align 8, !noalias !460
  %53 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %13, i64 0, i32 0
  %54 = load i64, i64* %53, align 8, !noalias !460
  %55 = and i64 %54, %52
  store i64 %55, i64* %50, align 8, !alias.scope !460
  %56 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %57 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %56, align 8
  %58 = bitcast %"class.rx::ContextImpl"* %57 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %59 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %58, align 8
  %60 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %59, i64 51
  %61 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %60, align 8
  %62 = call i32 %61(%"class.rx::ContextImpl"* %57, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %12, %"class.angle::BitSetT.168"* dereferenceable(8) %13) #21
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %65

64:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #21
  br label %226

65:                                               ; preds = %44
  %66 = load i64, i64* %50, align 8, !noalias !463
  %67 = xor i64 %66, -1
  %68 = load i64, i64* %51, align 8
  %69 = and i64 %68, %67
  store i64 %69, i64* %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #21
  %70 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %71 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %70, align 8
  %72 = zext i32 %1 to i64
  %73 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = icmp ugt i64 %74, %72
  br i1 %75, label %76, label %83

76:                                               ; preds = %65
  %77 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 1
  %78 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %77, align 8
  %79 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %78, i64 %72
  %80 = load %"class.gl::Texture"*, %"class.gl::Texture"** %79, align 8
  %81 = icmp eq %"class.gl::Texture"* %80, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %82 = select i1 %81, %"class.gl::Texture"* null, %"class.gl::Texture"* %80
  br label %146

83:                                               ; preds = %65
  %84 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %85 = add i64 %84, %72
  %86 = zext i64 %85 to i128
  %87 = mul nuw i128 %86, 11376068507788127593
  %88 = lshr i128 %87, 64
  %89 = xor i128 %88, %87
  %90 = trunc i128 %89 to i64
  %91 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = lshr i64 %90, 7
  %96 = ptrtoint i8* %92 to i64
  %97 = lshr i64 %96, 12
  %98 = xor i64 %95, %97
  %99 = trunc i128 %89 to i8
  %100 = and i8 %99, 127
  %101 = insertelement <16 x i8> undef, i8 %100, i32 0
  %102 = shufflevector <16 x i8> %101, <16 x i8> undef, <16 x i32> zeroinitializer
  %103 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %104

104:                                              ; preds = %134, %83
  %105 = phi i64 [ %98, %83 ], [ %136, %134 ]
  %106 = phi i64 [ 0, %83 ], [ %135, %134 ]
  %107 = and i64 %105, %94
  %108 = getelementptr inbounds i8, i8* %92, i64 %107
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1
  %111 = icmp eq <16 x i8> %102, %110
  %112 = bitcast <16 x i1> %111 to i16
  %113 = icmp eq i16 %112, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %104
  %115 = zext i16 %112 to i32
  %116 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %103, align 8
  br label %117

117:                                              ; preds = %126, %114
  %118 = phi i32 [ %115, %114 ], [ %128, %126 ]
  %119 = call i32 @llvm.cttz.i32(i32 %118, i1 false) #21, !range !8
  %120 = zext i32 %119 to i64
  %121 = add i64 %107, %120
  %122 = and i64 %121, %94
  %123 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %116, i64 %122, i32 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, %1
  br i1 %125, label %137, label %126, !prof !9

126:                                              ; preds = %117
  %127 = add i32 %118, -1
  %128 = and i32 %127, %118
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %117

130:                                              ; preds = %126, %104
  %131 = icmp eq <16 x i8> %110, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %132 = bitcast <16 x i1> %131 to i16
  %133 = icmp eq i16 %132, 0
  br i1 %133, label %134, label %146, !prof !10

134:                                              ; preds = %130
  %135 = add i64 %106, 16
  %136 = add i64 %135, %107
  br label %104

137:                                              ; preds = %117
  %138 = getelementptr inbounds i8, i8* %92, i64 %122
  %139 = icmp ne i8* %138, null
  call void @llvm.assume(i1 %139) #21
  %140 = load i8, i8* %138, align 1
  %141 = icmp sgt i8 %140, -1
  br i1 %141, label %143, label %142, !prof !9

142:                                              ; preds = %137
  call void @llvm.trap() #21
  unreachable

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %116, i64 %122, i32 0, i32 1
  %145 = load %"class.gl::Texture"*, %"class.gl::Texture"** %144, align 8
  br label %146

146:                                              ; preds = %130, %76, %143
  %147 = phi %"class.gl::Texture"* [ %82, %76 ], [ %145, %143 ], [ null, %130 ]
  %148 = zext i32 %4 to i64
  %149 = icmp ugt i64 %74, %148
  br i1 %149, label %150, label %157

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 1
  %152 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %151, align 8
  %153 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %152, i64 %148
  %154 = load %"class.gl::Texture"*, %"class.gl::Texture"** %153, align 8
  %155 = icmp eq %"class.gl::Texture"* %154, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %156 = select i1 %155, %"class.gl::Texture"* null, %"class.gl::Texture"* %154
  br label %220

157:                                              ; preds = %146
  %158 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %159 = add i64 %158, %148
  %160 = zext i64 %159 to i128
  %161 = mul nuw i128 %160, 11376068507788127593
  %162 = lshr i128 %161, 64
  %163 = xor i128 %162, %161
  %164 = trunc i128 %163 to i64
  %165 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %166 = load i8*, i8** %165, align 8
  %167 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %168 = load i64, i64* %167, align 8
  %169 = lshr i64 %164, 7
  %170 = ptrtoint i8* %166 to i64
  %171 = lshr i64 %170, 12
  %172 = xor i64 %169, %171
  %173 = trunc i128 %163 to i8
  %174 = and i8 %173, 127
  %175 = insertelement <16 x i8> undef, i8 %174, i32 0
  %176 = shufflevector <16 x i8> %175, <16 x i8> undef, <16 x i32> zeroinitializer
  %177 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %71, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %178

178:                                              ; preds = %208, %157
  %179 = phi i64 [ %172, %157 ], [ %210, %208 ]
  %180 = phi i64 [ 0, %157 ], [ %209, %208 ]
  %181 = and i64 %179, %168
  %182 = getelementptr inbounds i8, i8* %166, i64 %181
  %183 = bitcast i8* %182 to <16 x i8>*
  %184 = load <16 x i8>, <16 x i8>* %183, align 1
  %185 = icmp eq <16 x i8> %176, %184
  %186 = bitcast <16 x i1> %185 to i16
  %187 = icmp eq i16 %186, 0
  br i1 %187, label %204, label %188

188:                                              ; preds = %178
  %189 = zext i16 %186 to i32
  %190 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %177, align 8
  br label %191

191:                                              ; preds = %200, %188
  %192 = phi i32 [ %189, %188 ], [ %202, %200 ]
  %193 = call i32 @llvm.cttz.i32(i32 %192, i1 false) #21, !range !8
  %194 = zext i32 %193 to i64
  %195 = add i64 %181, %194
  %196 = and i64 %195, %168
  %197 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %190, i64 %196, i32 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = icmp eq i32 %198, %4
  br i1 %199, label %211, label %200, !prof !9

200:                                              ; preds = %191
  %201 = add i32 %192, -1
  %202 = and i32 %201, %192
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %191

204:                                              ; preds = %200, %178
  %205 = icmp eq <16 x i8> %184, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %206 = bitcast <16 x i1> %205 to i16
  %207 = icmp eq i16 %206, 0
  br i1 %207, label %208, label %220, !prof !10

208:                                              ; preds = %204
  %209 = add i64 %180, 16
  %210 = add i64 %209, %181
  br label %178

211:                                              ; preds = %191
  %212 = getelementptr inbounds i8, i8* %166, i64 %196
  %213 = icmp ne i8* %212, null
  call void @llvm.assume(i1 %213) #21
  %214 = load i8, i8* %212, align 1
  %215 = icmp sgt i8 %214, -1
  br i1 %215, label %217, label %216, !prof !9

216:                                              ; preds = %211
  call void @llvm.trap() #21
  unreachable

217:                                              ; preds = %211
  %218 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %190, i64 %196, i32 0, i32 1
  %219 = load %"class.gl::Texture"*, %"class.gl::Texture"** %218, align 8
  br label %220

220:                                              ; preds = %204, %150, %217
  %221 = phi %"class.gl::Texture"* [ %156, %150 ], [ %219, %217 ], [ null, %204 ]
  %222 = icmp ne i8 %8, 0
  %223 = icmp ne i8 %9, 0
  %224 = icmp ne i8 %10, 0
  %225 = call i32 @_ZN2gl7Texture11copyTextureEPNS_7ContextENS_13TextureTargetEijjibbbPS0_(%"class.gl::Texture"* %221, %"class.gl::Context"* %0, i8 zeroext %3, i32 %5, i32 %6, i32 %7, i32 %2, i1 zeroext %222, i1 zeroext %223, i1 zeroext %224, %"class.gl::Texture"* %147) #21
  br label %226

226:                                              ; preds = %24, %64, %220
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16copySubTexture3DENS_9TextureIDEiNS_13TextureTargetES1_iiiiiiiiiihhh(%"class.gl::Context"*, i32, i32, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #5 align 2 {
  %19 = alloca %"class.angle::BitSetT.168", align 8
  %20 = alloca %"struct.gl::Offset", align 4
  %21 = alloca %"struct.gl::Box", align 4
  %22 = icmp eq i32 %12, 0
  %23 = icmp eq i32 %13, 0
  %24 = or i1 %22, %23
  %25 = icmp eq i32 %14, 0
  %26 = or i1 %24, %25
  br i1 %26, label %252, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54
  %29 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %30 = load i64, i64* %29, align 8, !noalias !466
  %31 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 55, i32 0
  %32 = load i64, i64* %31, align 8, !noalias !466
  %33 = and i64 %32, %30
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %59, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %37 = tail call i64 @llvm.cttz.i64(i64 %33, i1 true) #21, !range !73
  %38 = bitcast %"class.gl::State"* %36 to i8*
  br label %39

39:                                               ; preds = %51, %35
  %40 = phi i64 [ %37, %35 ], [ %56, %51 ]
  %41 = phi i64 [ %33, %35 ], [ %54, %51 ]
  %42 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %40, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds i8, i8* %38, i64 %43
  %45 = bitcast i8* %44 to %"class.gl::State"*
  %46 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %40, i32 0
  %47 = bitcast i64* %46 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %48 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %47, align 16
  %49 = tail call i32 %48(%"class.gl::State"* %45, %"class.gl::Context"* %0, i32 7) #21
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %252, label %51

51:                                               ; preds = %39
  %52 = shl i64 1, %40
  %53 = xor i64 %52, -1
  %54 = and i64 %41, %53
  %55 = icmp eq i64 %54, 0
  %56 = tail call i64 @llvm.cttz.i64(i64 %54, i1 true) #21, !range !73
  br i1 %55, label %57, label %39

57:                                               ; preds = %51
  %58 = load i64, i64* %29, align 8
  br label %59

59:                                               ; preds = %57, %27
  %60 = phi i64 [ %58, %57 ], [ %30, %27 ]
  %61 = and i64 %33, 4095
  %62 = xor i64 %61, 4095
  %63 = and i64 %60, %62
  store i64 %63, i64* %29, align 8
  %64 = bitcast %"class.angle::BitSetT.168"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #21
  %65 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %19, i64 0, i32 0
  %66 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %67 = load i64, i64* %66, align 8, !noalias !469
  %68 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %28, i64 0, i32 0
  %69 = load i64, i64* %68, align 8, !noalias !469
  %70 = and i64 %69, %67
  store i64 %70, i64* %65, align 8, !alias.scope !469
  %71 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %72 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %71, align 8
  %73 = bitcast %"class.rx::ContextImpl"* %72 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %74 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %73, align 8
  %75 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %74, i64 51
  %76 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %75, align 8
  %77 = call i32 %76(%"class.rx::ContextImpl"* %72, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %19, %"class.angle::BitSetT.168"* dereferenceable(8) %28) #21
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %80

79:                                               ; preds = %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #21
  br label %252

80:                                               ; preds = %59
  %81 = load i64, i64* %65, align 8, !noalias !472
  %82 = xor i64 %81, -1
  %83 = load i64, i64* %66, align 8
  %84 = and i64 %83, %82
  store i64 %84, i64* %66, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #21
  %85 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %86 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %85, align 8
  %87 = zext i32 %1 to i64
  %88 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %86, i64 0, i32 0, i32 1, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = icmp ugt i64 %89, %87
  br i1 %90, label %91, label %98

91:                                               ; preds = %80
  %92 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %86, i64 0, i32 0, i32 1, i32 1
  %93 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %92, align 8
  %94 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %93, i64 %87
  %95 = load %"class.gl::Texture"*, %"class.gl::Texture"** %94, align 8
  %96 = icmp eq %"class.gl::Texture"* %95, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %97 = select i1 %96, %"class.gl::Texture"* null, %"class.gl::Texture"* %95
  br label %161

98:                                               ; preds = %80
  %99 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %100 = add i64 %99, %87
  %101 = zext i64 %100 to i128
  %102 = mul nuw i128 %101, 11376068507788127593
  %103 = lshr i128 %102, 64
  %104 = xor i128 %103, %102
  %105 = trunc i128 %104 to i64
  %106 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %86, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %86, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %109 = load i64, i64* %108, align 8
  %110 = lshr i64 %105, 7
  %111 = ptrtoint i8* %107 to i64
  %112 = lshr i64 %111, 12
  %113 = xor i64 %110, %112
  %114 = trunc i128 %104 to i8
  %115 = and i8 %114, 127
  %116 = insertelement <16 x i8> undef, i8 %115, i32 0
  %117 = shufflevector <16 x i8> %116, <16 x i8> undef, <16 x i32> zeroinitializer
  %118 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %86, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %119

119:                                              ; preds = %149, %98
  %120 = phi i64 [ %113, %98 ], [ %151, %149 ]
  %121 = phi i64 [ 0, %98 ], [ %150, %149 ]
  %122 = and i64 %120, %109
  %123 = getelementptr inbounds i8, i8* %107, i64 %122
  %124 = bitcast i8* %123 to <16 x i8>*
  %125 = load <16 x i8>, <16 x i8>* %124, align 1
  %126 = icmp eq <16 x i8> %117, %125
  %127 = bitcast <16 x i1> %126 to i16
  %128 = icmp eq i16 %127, 0
  br i1 %128, label %145, label %129

129:                                              ; preds = %119
  %130 = zext i16 %127 to i32
  %131 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %118, align 8
  br label %132

132:                                              ; preds = %141, %129
  %133 = phi i32 [ %130, %129 ], [ %143, %141 ]
  %134 = call i32 @llvm.cttz.i32(i32 %133, i1 false) #21, !range !8
  %135 = zext i32 %134 to i64
  %136 = add i64 %122, %135
  %137 = and i64 %136, %109
  %138 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %131, i64 %137, i32 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %139, %1
  br i1 %140, label %152, label %141, !prof !9

141:                                              ; preds = %132
  %142 = add i32 %133, -1
  %143 = and i32 %142, %133
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %132

145:                                              ; preds = %141, %119
  %146 = icmp eq <16 x i8> %125, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %147 = bitcast <16 x i1> %146 to i16
  %148 = icmp eq i16 %147, 0
  br i1 %148, label %149, label %161, !prof !10

149:                                              ; preds = %145
  %150 = add i64 %121, 16
  %151 = add i64 %150, %122
  br label %119

152:                                              ; preds = %132
  %153 = getelementptr inbounds i8, i8* %107, i64 %137
  %154 = icmp ne i8* %153, null
  call void @llvm.assume(i1 %154) #21
  %155 = load i8, i8* %153, align 1
  %156 = icmp sgt i8 %155, -1
  br i1 %156, label %158, label %157, !prof !9

157:                                              ; preds = %152
  call void @llvm.trap() #21
  unreachable

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %131, i64 %137, i32 0, i32 1
  %160 = load %"class.gl::Texture"*, %"class.gl::Texture"** %159, align 8
  br label %161

161:                                              ; preds = %145, %91, %158
  %162 = phi %"class.gl::Texture"* [ %97, %91 ], [ %160, %158 ], [ null, %145 ]
  %163 = zext i32 %4 to i64
  %164 = icmp ugt i64 %89, %163
  br i1 %164, label %165, label %172

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %86, i64 0, i32 0, i32 1, i32 1
  %167 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %166, align 8
  %168 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %167, i64 %163
  %169 = load %"class.gl::Texture"*, %"class.gl::Texture"** %168, align 8
  %170 = icmp eq %"class.gl::Texture"* %169, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %171 = select i1 %170, %"class.gl::Texture"* null, %"class.gl::Texture"* %169
  br label %235

172:                                              ; preds = %161
  %173 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %174 = add i64 %173, %163
  %175 = zext i64 %174 to i128
  %176 = mul nuw i128 %175, 11376068507788127593
  %177 = lshr i128 %176, 64
  %178 = xor i128 %177, %176
  %179 = trunc i128 %178 to i64
  %180 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %86, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %181 = load i8*, i8** %180, align 8
  %182 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %86, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %183 = load i64, i64* %182, align 8
  %184 = lshr i64 %179, 7
  %185 = ptrtoint i8* %181 to i64
  %186 = lshr i64 %185, 12
  %187 = xor i64 %184, %186
  %188 = trunc i128 %178 to i8
  %189 = and i8 %188, 127
  %190 = insertelement <16 x i8> undef, i8 %189, i32 0
  %191 = shufflevector <16 x i8> %190, <16 x i8> undef, <16 x i32> zeroinitializer
  %192 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %86, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %193

193:                                              ; preds = %223, %172
  %194 = phi i64 [ %187, %172 ], [ %225, %223 ]
  %195 = phi i64 [ 0, %172 ], [ %224, %223 ]
  %196 = and i64 %194, %183
  %197 = getelementptr inbounds i8, i8* %181, i64 %196
  %198 = bitcast i8* %197 to <16 x i8>*
  %199 = load <16 x i8>, <16 x i8>* %198, align 1
  %200 = icmp eq <16 x i8> %191, %199
  %201 = bitcast <16 x i1> %200 to i16
  %202 = icmp eq i16 %201, 0
  br i1 %202, label %219, label %203

203:                                              ; preds = %193
  %204 = zext i16 %201 to i32
  %205 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %192, align 8
  br label %206

206:                                              ; preds = %215, %203
  %207 = phi i32 [ %204, %203 ], [ %217, %215 ]
  %208 = call i32 @llvm.cttz.i32(i32 %207, i1 false) #21, !range !8
  %209 = zext i32 %208 to i64
  %210 = add i64 %196, %209
  %211 = and i64 %210, %183
  %212 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %205, i64 %211, i32 0, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, %4
  br i1 %214, label %226, label %215, !prof !9

215:                                              ; preds = %206
  %216 = add i32 %207, -1
  %217 = and i32 %216, %207
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %206

219:                                              ; preds = %215, %193
  %220 = icmp eq <16 x i8> %199, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %221 = bitcast <16 x i1> %220 to i16
  %222 = icmp eq i16 %221, 0
  br i1 %222, label %223, label %235, !prof !10

223:                                              ; preds = %219
  %224 = add i64 %195, 16
  %225 = add i64 %224, %196
  br label %193

226:                                              ; preds = %206
  %227 = getelementptr inbounds i8, i8* %181, i64 %211
  %228 = icmp ne i8* %227, null
  call void @llvm.assume(i1 %228) #21
  %229 = load i8, i8* %227, align 1
  %230 = icmp sgt i8 %229, -1
  br i1 %230, label %232, label %231, !prof !9

231:                                              ; preds = %226
  call void @llvm.trap() #21
  unreachable

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %205, i64 %211, i32 0, i32 1
  %234 = load %"class.gl::Texture"*, %"class.gl::Texture"** %233, align 8
  br label %235

235:                                              ; preds = %219, %165, %232
  %236 = phi %"class.gl::Texture"* [ %171, %165 ], [ %234, %232 ], [ null, %219 ]
  %237 = bitcast %"struct.gl::Offset"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %237) #21
  %238 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %20, i64 0, i32 0
  %239 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %20, i64 0, i32 1
  %240 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %20, i64 0, i32 2
  store i32 %6, i32* %238, align 4
  store i32 %7, i32* %239, align 4
  store i32 %8, i32* %240, align 4
  %241 = bitcast %"struct.gl::Box"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %241) #21
  %242 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %21, i64 0, i32 0
  %243 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %21, i64 0, i32 1
  %244 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %21, i64 0, i32 2
  %245 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %21, i64 0, i32 3
  %246 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %21, i64 0, i32 4
  %247 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %21, i64 0, i32 5
  store i32 %9, i32* %242, align 4
  store i32 %10, i32* %243, align 4
  store i32 %11, i32* %244, align 4
  store i32 %12, i32* %245, align 4
  store i32 %13, i32* %246, align 4
  store i32 %14, i32* %247, align 4
  %248 = icmp ne i8 %15, 0
  %249 = icmp ne i8 %16, 0
  %250 = icmp ne i8 %17, 0
  %251 = call i32 @_ZN2gl7Texture14copySubTextureEPKNS_7ContextENS_13TextureTargetEiRKNS_6OffsetEiRKNS_3BoxEbbbPS0_(%"class.gl::Texture"* %236, %"class.gl::Context"* %0, i8 zeroext %3, i32 %5, %"struct.gl::Offset"* nonnull dereferenceable(12) %20, i32 %2, %"struct.gl::Box"* nonnull dereferenceable(24) %21, i1 zeroext %248, i1 zeroext %249, i1 zeroext %250, %"class.gl::Texture"* %162) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %241) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %237) #21
  br label %252

252:                                              ; preds = %39, %79, %18, %235
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21compressedCopyTextureENS_9TextureIDES1_(%"class.gl::Context"*, i32, i32) local_unnamed_addr #5 align 2 {
  %4 = alloca %"class.angle::BitSetT.168", align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 54
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %7 = load i64, i64* %6, align 8, !noalias !475
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 55, i32 0
  %9 = load i64, i64* %8, align 8, !noalias !475
  %10 = and i64 %9, %7
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %36, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %14 = tail call i64 @llvm.cttz.i64(i64 %10, i1 true) #21, !range !73
  %15 = bitcast %"class.gl::State"* %13 to i8*
  br label %16

16:                                               ; preds = %28, %12
  %17 = phi i64 [ %14, %12 ], [ %33, %28 ]
  %18 = phi i64 [ %10, %12 ], [ %31, %28 ]
  %19 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %17, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %15, i64 %20
  %22 = bitcast i8* %21 to %"class.gl::State"*
  %23 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %17, i32 0
  %24 = bitcast i64* %23 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %25 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %24, align 16
  %26 = tail call i32 %25(%"class.gl::State"* %22, %"class.gl::Context"* %0, i32 7) #21
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %215, label %28

28:                                               ; preds = %16
  %29 = shl i64 1, %17
  %30 = xor i64 %29, -1
  %31 = and i64 %18, %30
  %32 = icmp eq i64 %31, 0
  %33 = tail call i64 @llvm.cttz.i64(i64 %31, i1 true) #21, !range !73
  br i1 %32, label %34, label %16

34:                                               ; preds = %28
  %35 = load i64, i64* %6, align 8
  br label %36

36:                                               ; preds = %34, %3
  %37 = phi i64 [ %35, %34 ], [ %7, %3 ]
  %38 = and i64 %10, 4095
  %39 = xor i64 %38, 4095
  %40 = and i64 %37, %39
  store i64 %40, i64* %6, align 8
  %41 = bitcast %"class.angle::BitSetT.168"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #21
  %42 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %4, i64 0, i32 0
  %43 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %44 = load i64, i64* %43, align 8, !noalias !478
  %45 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %5, i64 0, i32 0
  %46 = load i64, i64* %45, align 8, !noalias !478
  %47 = and i64 %46, %44
  store i64 %47, i64* %42, align 8, !alias.scope !478
  %48 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %49 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %48, align 8
  %50 = bitcast %"class.rx::ContextImpl"* %49 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %51 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %50, align 8
  %52 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %51, i64 51
  %53 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %52, align 8
  %54 = call i32 %53(%"class.rx::ContextImpl"* %49, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %4, %"class.angle::BitSetT.168"* dereferenceable(8) %5) #21
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %57

56:                                               ; preds = %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #21
  br label %215

57:                                               ; preds = %36
  %58 = load i64, i64* %42, align 8, !noalias !481
  %59 = xor i64 %58, -1
  %60 = load i64, i64* %43, align 8
  %61 = and i64 %60, %59
  store i64 %61, i64* %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #21
  %62 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %63 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %62, align 8
  %64 = zext i32 %1 to i64
  %65 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %63, i64 0, i32 0, i32 1, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = icmp ugt i64 %66, %64
  br i1 %67, label %68, label %75

68:                                               ; preds = %57
  %69 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %63, i64 0, i32 0, i32 1, i32 1
  %70 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %69, align 8
  %71 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %70, i64 %64
  %72 = load %"class.gl::Texture"*, %"class.gl::Texture"** %71, align 8
  %73 = icmp eq %"class.gl::Texture"* %72, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %74 = select i1 %73, %"class.gl::Texture"* null, %"class.gl::Texture"* %72
  br label %138

75:                                               ; preds = %57
  %76 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %77 = add i64 %76, %64
  %78 = zext i64 %77 to i128
  %79 = mul nuw i128 %78, 11376068507788127593
  %80 = lshr i128 %79, 64
  %81 = xor i128 %80, %79
  %82 = trunc i128 %81 to i64
  %83 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %63, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %63, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %86 = load i64, i64* %85, align 8
  %87 = lshr i64 %82, 7
  %88 = ptrtoint i8* %84 to i64
  %89 = lshr i64 %88, 12
  %90 = xor i64 %87, %89
  %91 = trunc i128 %81 to i8
  %92 = and i8 %91, 127
  %93 = insertelement <16 x i8> undef, i8 %92, i32 0
  %94 = shufflevector <16 x i8> %93, <16 x i8> undef, <16 x i32> zeroinitializer
  %95 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %63, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %96

96:                                               ; preds = %126, %75
  %97 = phi i64 [ %90, %75 ], [ %128, %126 ]
  %98 = phi i64 [ 0, %75 ], [ %127, %126 ]
  %99 = and i64 %97, %86
  %100 = getelementptr inbounds i8, i8* %84, i64 %99
  %101 = bitcast i8* %100 to <16 x i8>*
  %102 = load <16 x i8>, <16 x i8>* %101, align 1
  %103 = icmp eq <16 x i8> %94, %102
  %104 = bitcast <16 x i1> %103 to i16
  %105 = icmp eq i16 %104, 0
  br i1 %105, label %122, label %106

106:                                              ; preds = %96
  %107 = zext i16 %104 to i32
  %108 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %95, align 8
  br label %109

109:                                              ; preds = %118, %106
  %110 = phi i32 [ %107, %106 ], [ %120, %118 ]
  %111 = call i32 @llvm.cttz.i32(i32 %110, i1 false) #21, !range !8
  %112 = zext i32 %111 to i64
  %113 = add i64 %99, %112
  %114 = and i64 %113, %86
  %115 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %108, i64 %114, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, %1
  br i1 %117, label %129, label %118, !prof !9

118:                                              ; preds = %109
  %119 = add i32 %110, -1
  %120 = and i32 %119, %110
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %109

122:                                              ; preds = %118, %96
  %123 = icmp eq <16 x i8> %102, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %124 = bitcast <16 x i1> %123 to i16
  %125 = icmp eq i16 %124, 0
  br i1 %125, label %126, label %138, !prof !10

126:                                              ; preds = %122
  %127 = add i64 %98, 16
  %128 = add i64 %127, %99
  br label %96

129:                                              ; preds = %109
  %130 = getelementptr inbounds i8, i8* %84, i64 %114
  %131 = icmp ne i8* %130, null
  call void @llvm.assume(i1 %131) #21
  %132 = load i8, i8* %130, align 1
  %133 = icmp sgt i8 %132, -1
  br i1 %133, label %135, label %134, !prof !9

134:                                              ; preds = %129
  call void @llvm.trap() #21
  unreachable

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %108, i64 %114, i32 0, i32 1
  %137 = load %"class.gl::Texture"*, %"class.gl::Texture"** %136, align 8
  br label %138

138:                                              ; preds = %122, %68, %135
  %139 = phi %"class.gl::Texture"* [ %74, %68 ], [ %137, %135 ], [ null, %122 ]
  %140 = zext i32 %2 to i64
  %141 = icmp ugt i64 %66, %140
  br i1 %141, label %142, label %149

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %63, i64 0, i32 0, i32 1, i32 1
  %144 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %143, align 8
  %145 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %144, i64 %140
  %146 = load %"class.gl::Texture"*, %"class.gl::Texture"** %145, align 8
  %147 = icmp eq %"class.gl::Texture"* %146, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %148 = select i1 %147, %"class.gl::Texture"* null, %"class.gl::Texture"* %146
  br label %212

149:                                              ; preds = %138
  %150 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %151 = add i64 %150, %140
  %152 = zext i64 %151 to i128
  %153 = mul nuw i128 %152, 11376068507788127593
  %154 = lshr i128 %153, 64
  %155 = xor i128 %154, %153
  %156 = trunc i128 %155 to i64
  %157 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %63, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %63, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %160 = load i64, i64* %159, align 8
  %161 = lshr i64 %156, 7
  %162 = ptrtoint i8* %158 to i64
  %163 = lshr i64 %162, 12
  %164 = xor i64 %161, %163
  %165 = trunc i128 %155 to i8
  %166 = and i8 %165, 127
  %167 = insertelement <16 x i8> undef, i8 %166, i32 0
  %168 = shufflevector <16 x i8> %167, <16 x i8> undef, <16 x i32> zeroinitializer
  %169 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %63, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %170

170:                                              ; preds = %200, %149
  %171 = phi i64 [ %164, %149 ], [ %202, %200 ]
  %172 = phi i64 [ 0, %149 ], [ %201, %200 ]
  %173 = and i64 %171, %160
  %174 = getelementptr inbounds i8, i8* %158, i64 %173
  %175 = bitcast i8* %174 to <16 x i8>*
  %176 = load <16 x i8>, <16 x i8>* %175, align 1
  %177 = icmp eq <16 x i8> %168, %176
  %178 = bitcast <16 x i1> %177 to i16
  %179 = icmp eq i16 %178, 0
  br i1 %179, label %196, label %180

180:                                              ; preds = %170
  %181 = zext i16 %178 to i32
  %182 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %169, align 8
  br label %183

183:                                              ; preds = %192, %180
  %184 = phi i32 [ %181, %180 ], [ %194, %192 ]
  %185 = call i32 @llvm.cttz.i32(i32 %184, i1 false) #21, !range !8
  %186 = zext i32 %185 to i64
  %187 = add i64 %173, %186
  %188 = and i64 %187, %160
  %189 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %182, i64 %188, i32 0, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = icmp eq i32 %190, %2
  br i1 %191, label %203, label %192, !prof !9

192:                                              ; preds = %183
  %193 = add i32 %184, -1
  %194 = and i32 %193, %184
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %183

196:                                              ; preds = %192, %170
  %197 = icmp eq <16 x i8> %176, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %198 = bitcast <16 x i1> %197 to i16
  %199 = icmp eq i16 %198, 0
  br i1 %199, label %200, label %212, !prof !10

200:                                              ; preds = %196
  %201 = add i64 %172, 16
  %202 = add i64 %201, %173
  br label %170

203:                                              ; preds = %183
  %204 = getelementptr inbounds i8, i8* %158, i64 %188
  %205 = icmp ne i8* %204, null
  call void @llvm.assume(i1 %205) #21
  %206 = load i8, i8* %204, align 1
  %207 = icmp sgt i8 %206, -1
  br i1 %207, label %209, label %208, !prof !9

208:                                              ; preds = %203
  call void @llvm.trap() #21
  unreachable

209:                                              ; preds = %203
  %210 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %182, i64 %188, i32 0, i32 1
  %211 = load %"class.gl::Texture"*, %"class.gl::Texture"** %210, align 8
  br label %212

212:                                              ; preds = %196, %142, %209
  %213 = phi %"class.gl::Texture"* [ %148, %142 ], [ %211, %209 ], [ null, %196 ]
  %214 = call i32 @_ZN2gl7Texture21copyCompressedTextureEPNS_7ContextEPKS0_(%"class.gl::Texture"* %213, %"class.gl::Context"* %0, %"class.gl::Texture"* %139) #21
  br label %215

215:                                              ; preds = %16, %56, %212
  ret void
}

declare i32 @_ZN2gl7Texture21copyCompressedTextureEPNS_7ContextEPKS0_(%"class.gl::Texture"*, %"class.gl::Context"*, %"class.gl::Texture"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17getBufferPointervENS_13BufferBindingEjPPv(%"class.gl::Context"* nocapture readonly, i8 zeroext, i32, i8**) local_unnamed_addr #1 align 2 {
  %5 = icmp eq i8 %1, 6
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %8 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %8, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  br label %13

10:                                               ; preds = %4
  %11 = zext i8 %1 to i64
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 %11, i32 0, i32 1
  br label %13

13:                                               ; preds = %6, %10
  %14 = phi %"class.gl::Buffer"** [ %9, %6 ], [ %12, %10 ]
  %15 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %14, align 8
  tail call void @_ZN2gl19QueryBufferPointervEPKNS_6BufferEjPPv(%"class.gl::Buffer"* %15, i32 %2, i8** %3) #21
  ret void
}

declare void @_ZN2gl19QueryBufferPointervEPKNS_6BufferEjPPv(%"class.gl::Buffer"*, i32, i8**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23getBufferPointervRobustENS_13BufferBindingEjiPiPPv(%"class.gl::Context"* nocapture readonly, i8 zeroext, i32, i32, i32* nocapture readnone, i8**) local_unnamed_addr #1 align 2 {
  %7 = icmp eq i8 %1, 6
  br i1 %7, label %8, label %12

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %10 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  br label %15

12:                                               ; preds = %6
  %13 = zext i8 %1 to i64
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 %13, i32 0, i32 1
  br label %15

15:                                               ; preds = %8, %12
  %16 = phi %"class.gl::Buffer"** [ %11, %8 ], [ %14, %12 ]
  %17 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %16, align 8
  tail call void @_ZN2gl19QueryBufferPointervEPKNS_6BufferEjPPv(%"class.gl::Buffer"* %17, i32 %2, i8** %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2gl7Context9mapBufferENS_13BufferBindingEj(%"class.gl::Context"*, i8 zeroext, i32) local_unnamed_addr #1 align 2 {
  %4 = icmp eq i8 %1, 6
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %7 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %7, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  br label %12

9:                                                ; preds = %3
  %10 = zext i8 %1 to i64
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 %10, i32 0, i32 1
  br label %12

12:                                               ; preds = %5, %9
  %13 = phi %"class.gl::Buffer"** [ %8, %5 ], [ %11, %9 ]
  %14 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %13, align 8
  %15 = tail call i32 @_ZN2gl6Buffer3mapEPKNS_7ContextEj(%"class.gl::Buffer"* %14, %"class.gl::Context"* %0, i32 %2) #21
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %14, i64 0, i32 4, i32 8
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %12, %17
  %21 = phi i8* [ %19, %17 ], [ null, %12 ]
  ret i8* %21
}

declare i32 @_ZN2gl6Buffer3mapEPKNS_7ContextEj(%"class.gl::Buffer"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2gl7Context11unmapBufferENS_13BufferBindingE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %3 = alloca i8, align 1
  %4 = icmp eq i8 %1, 6
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %7 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %7, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  br label %12

9:                                                ; preds = %2
  %10 = zext i8 %1 to i64
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 %10, i32 0, i32 1
  br label %12

12:                                               ; preds = %5, %9
  %13 = phi %"class.gl::Buffer"** [ %8, %5 ], [ %11, %9 ]
  %14 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #21
  store i8 -86, i8* %3, align 1
  %15 = call i32 @_ZN2gl6Buffer5unmapEPKNS_7ContextEPh(%"class.gl::Buffer"* %14, %"class.gl::Context"* %0, i8* nonnull %3) #21
  %16 = icmp eq i32 %15, 1
  %17 = load i8, i8* %3, align 1
  %18 = select i1 %16, i8 0, i8 %17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #21
  ret i8 %18
}

declare i32 @_ZN2gl6Buffer5unmapEPKNS_7ContextEPh(%"class.gl::Buffer"*, %"class.gl::Context"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2gl7Context14mapBufferRangeENS_13BufferBindingEllj(%"class.gl::Context"*, i8 zeroext, i64, i64, i32) local_unnamed_addr #1 align 2 {
  %6 = icmp eq i8 %1, 6
  br i1 %6, label %7, label %11

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %9 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %9, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  br label %14

11:                                               ; preds = %5
  %12 = zext i8 %1 to i64
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 %12, i32 0, i32 1
  br label %14

14:                                               ; preds = %7, %11
  %15 = phi %"class.gl::Buffer"** [ %10, %7 ], [ %13, %11 ]
  %16 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %15, align 8
  %17 = tail call i32 @_ZN2gl6Buffer8mapRangeEPKNS_7ContextEllj(%"class.gl::Buffer"* %16, %"class.gl::Context"* %0, i64 %2, i64 %3, i32 %4) #21
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %16, i64 0, i32 4, i32 8
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i8* [ %21, %19 ], [ null, %14 ]
  ret i8* %23
}

declare i32 @_ZN2gl6Buffer8mapRangeEPKNS_7ContextEllj(%"class.gl::Buffer"*, %"class.gl::Context"*, i64, i64, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context22flushMappedBufferRangeENS_13BufferBindingEll(%"class.gl::Context"* nocapture, i8 zeroext, i64, i64) local_unnamed_addr #12 align 2 {
  ret void
}

declare i32 @_ZN2gl7Texture9syncStateEPKNS_7ContextENS_7CommandE(%"class.gl::Texture"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19activeShaderProgramENS_17ProgramPipelineIDENS_15ShaderProgramIDE(%"class.gl::Context"* nocapture readonly, i32, i32) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %5 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %4, align 8
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %10, label %17

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 1
  %12 = load %"class.gl::Program"**, %"class.gl::Program"*** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %12, i64 %6
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %13, align 8
  %15 = icmp eq %"class.gl::Program"* %14, inttoptr (i64 -1 to %"class.gl::Program"*)
  %16 = select i1 %15, %"class.gl::Program"* null, %"class.gl::Program"* %14
  br label %80

17:                                               ; preds = %3
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %6
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %2
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %80, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %64, %10, %77
  %81 = phi %"class.gl::Program"* [ %16, %10 ], [ %79, %77 ], [ null, %64 ]
  %82 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 17
  %83 = load %"class.gl::ProgramPipelineManager"*, %"class.gl::ProgramPipelineManager"** %82, align 8
  %84 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %85 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %84, align 8
  %86 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %85, i64 0, i32 0
  %87 = tail call %"class.gl::ProgramPipeline"* @_ZN2gl22ProgramPipelineManager30checkProgramPipelineAllocationEPN2rx13GLImplFactoryENS_17ProgramPipelineIDE(%"class.gl::ProgramPipelineManager"* %83, %"class.rx::GLImplFactory"* %86, i32 %1)
  tail call void @_ZN2gl15ProgramPipeline19activeShaderProgramEPNS_7ProgramE(%"class.gl::ProgramPipeline"* %87, %"class.gl::Program"* %81) #21
  ret void
}

declare void @_ZN2gl15ProgramPipeline19activeShaderProgramEPNS_7ProgramE(%"class.gl::ProgramPipeline"*, %"class.gl::Program"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13activeTextureEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = add i32 %1, -33984
  tail call void @_ZN2gl5State16setActiveSamplerEj(%"class.gl::State"* %3, i32 %4) #21
  ret void
}

declare void @_ZN2gl5State16setActiveSamplerEj(%"class.gl::State"*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context12blendBarrierEv(%"class.gl::Context"* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10blendColorEffff(%"class.gl::Context"*, float, float, float, float) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State13setBlendColorEffff(%"class.gl::State"* %6, float %1, float %2, float %3, float %4) #21
  ret void
}

declare void @_ZN2gl5State13setBlendColorEffff(%"class.gl::State"*, float, float, float, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13blendEquationEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State16setBlendEquationEjj(%"class.gl::State"* %3, i32 %1, i32 %1) #21
  ret void
}

declare void @_ZN2gl5State16setBlendEquationEjj(%"class.gl::State"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14blendEquationiEjj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State23setBlendEquationIndexedEjjj(%"class.gl::State"* %4, i32 %2, i32 %2, i32 %1) #21
  ret void
}

declare void @_ZN2gl5State23setBlendEquationIndexedEjjj(%"class.gl::State"*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21blendEquationSeparateEjj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State16setBlendEquationEjj(%"class.gl::State"* %4, i32 %1, i32 %2) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context22blendEquationSeparateiEjjj(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State23setBlendEquationIndexedEjjj(%"class.gl::State"* %5, i32 %2, i32 %3, i32 %1) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9blendFuncEjj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State15setBlendFactorsEjjjj(%"class.gl::State"* %4, i32 %1, i32 %2, i32 %1, i32 %2) #21
  ret void
}

declare void @_ZN2gl5State15setBlendFactorsEjjjj(%"class.gl::State"*, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10blendFunciEjjj(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State22setBlendFactorsIndexedEjjjjj(%"class.gl::State"* %5, i32 %2, i32 %3, i32 %2, i32 %3, i32 %1) #21
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 116
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %10, align 8
  br label %11

11:                                               ; preds = %4, %9
  ret void
}

declare void @_ZN2gl5State22setBlendFactorsIndexedEjjjjj(%"class.gl::State"*, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl10StateCache24onBlendFuncIndexedChangeEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readnone) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  store i64 1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17blendFuncSeparateEjjjj(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State15setBlendFactorsEjjjj(%"class.gl::State"* %6, i32 %1, i32 %2, i32 %3, i32 %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18blendFuncSeparateiEjjjjj(%"class.gl::Context"*, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State22setBlendFactorsIndexedEjjjjj(%"class.gl::State"* %7, i32 %2, i32 %3, i32 %4, i32 %5, i32 %1) #21
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 116
  %9 = load i8, i8* %8, align 2, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %12, align 8
  br label %13

13:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10clearColorEffff(%"class.gl::Context"*, float, float, float, float) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State18setColorClearValueEffff(%"class.gl::State"* %6, float %1, float %2, float %3, float %4) #21
  ret void
}

declare void @_ZN2gl5State18setColorClearValueEffff(%"class.gl::State"*, float, float, float, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11clearDepthfEf(%"class.gl::Context"*, float) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = fcmp ogt float %1, 0.000000e+00
  %5 = fcmp ogt float %1, 1.000000e+00
  %6 = select i1 %5, float 1.000000e+00, float %1
  %7 = select i1 %4, float %6, float 0.000000e+00
  tail call void @_ZN2gl5State18setDepthClearValueEf(%"class.gl::State"* %3, float %7) #21
  ret void
}

declare void @_ZN2gl5State18setDepthClearValueEf(%"class.gl::State"*, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12clearStencilEi(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State20setStencilClearValueEi(%"class.gl::State"* %3, i32 %1) #21
  ret void
}

declare void @_ZN2gl5State20setStencilClearValueEi(%"class.gl::State"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9colorMaskEhhhh(%"class.gl::Context"*, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %7 = icmp ne i8 %1, 0
  %8 = icmp ne i8 %2, 0
  %9 = icmp ne i8 %3, 0
  %10 = icmp ne i8 %4, 0
  tail call void @_ZN2gl5State12setColorMaskEbbbb(%"class.gl::State"* %6, i1 zeroext %7, i1 zeroext %8, i1 zeroext %9, i1 zeroext %10) #21
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %11, align 8
  ret void
}

declare void @_ZN2gl5State12setColorMaskEbbbb(%"class.gl::State"*, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl10StateCache17onColorMaskChangeEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readnone) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  store i64 1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10colorMaskiEjhhhh(%"class.gl::Context"*, i32, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %8 = icmp ne i8 %2, 0
  %9 = icmp ne i8 %3, 0
  %10 = icmp ne i8 %4, 0
  %11 = icmp ne i8 %5, 0
  tail call void @_ZN2gl5State19setColorMaskIndexedEbbbbj(%"class.gl::State"* %7, i1 zeroext %8, i1 zeroext %9, i1 zeroext %10, i1 zeroext %11, i32 %1) #21
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %12, align 8
  ret void
}

declare void @_ZN2gl5State19setColorMaskIndexedEbbbbj(%"class.gl::State"*, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8cullFaceENS_12CullFaceModeE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State11setCullModeENS_12CullFaceModeE(%"class.gl::State"* %3, i8 zeroext %1) #21
  ret void
}

declare void @_ZN2gl5State11setCullModeENS_12CullFaceModeE(%"class.gl::State"*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9depthFuncEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State12setDepthFuncEj(%"class.gl::State"* %3, i32 %1) #21
  ret void
}

declare void @_ZN2gl5State12setDepthFuncEj(%"class.gl::State"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9depthMaskEh(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = icmp ne i8 %1, 0
  tail call void @_ZN2gl5State12setDepthMaskEb(%"class.gl::State"* %3, i1 zeroext %4) #21
  ret void
}

declare void @_ZN2gl5State12setDepthMaskEb(%"class.gl::State"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11depthRangefEff(%"class.gl::Context"*, float, float) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %5 = fcmp ogt float %1, 0.000000e+00
  %6 = fcmp ogt float %1, 1.000000e+00
  %7 = select i1 %6, float 1.000000e+00, float %1
  %8 = select i1 %5, float %7, float 0.000000e+00
  %9 = fcmp ogt float %2, 0.000000e+00
  %10 = fcmp ogt float %2, 1.000000e+00
  %11 = select i1 %10, float 1.000000e+00, float %2
  %12 = select i1 %9, float %11, float 0.000000e+00
  tail call void @_ZN2gl5State13setDepthRangeEff(%"class.gl::State"* %4, float %8, float %12) #21
  ret void
}

declare void @_ZN2gl5State13setDepthRangeEff(%"class.gl::State"*, float, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11clipControlEjj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State14setClipControlEjj(%"class.gl::State"* %4, i32 %1, i32 %2) #21
  ret void
}

declare void @_ZN2gl5State14setClipControlEjj(%"class.gl::State"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context7disableEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State16setEnableFeatureEjb(%"class.gl::State"* %3, i32 %1, i1 zeroext false) #21
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %4, align 8
  ret void
}

declare void @_ZN2gl5State16setEnableFeatureEjb(%"class.gl::State"*, i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl10StateCache18onContextCapChangeEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readnone) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  store i64 1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8disableiEjj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State23setEnableFeatureIndexedEjbj(%"class.gl::State"* %4, i32 %1, i1 zeroext false, i32 %2) #21
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %5, align 8
  ret void
}

declare void @_ZN2gl5State23setEnableFeatureIndexedEjbj(%"class.gl::State"*, i32, i1 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context24disableVertexAttribArrayEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State26setEnableVertexAttribArrayEjb(%"class.gl::State"* %3, i32 %1, i1 zeroext false) #21
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache24onVertexArrayStateChangeEPNS_7ContextE(%"class.gl::StateCache"* %4, %"class.gl::Context"* %0)
  ret void
}

declare void @_ZN2gl5State26setEnableVertexAttribArrayEjb(%"class.gl::State"*, i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context6enableEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State16setEnableFeatureEjb(%"class.gl::State"* %3, i32 %1, i1 zeroext true) #21
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context7enableiEjj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State23setEnableFeatureIndexedEjbj(%"class.gl::State"* %4, i32 %1, i1 zeroext true, i32 %2) #21
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23enableVertexAttribArrayEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State26setEnableVertexAttribArrayEjb(%"class.gl::State"* %3, i32 %1, i1 zeroext true) #21
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache24onVertexArrayStateChangeEPNS_7ContextE(%"class.gl::StateCache"* %4, %"class.gl::Context"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9frontFaceEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State12setFrontFaceEj(%"class.gl::State"* %3, i32 %1) #21
  ret void
}

declare void @_ZN2gl5State12setFrontFaceEj(%"class.gl::State"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context4hintEjj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %12 [
    i32 33170, label %4
    i32 35723, label %6
    i32 3152, label %8
    i32 3153, label %8
    i32 3154, label %8
    i32 3156, label %8
    i32 35568, label %10
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State21setGenerateMipmapHintEj(%"class.gl::State"* %5, i32 %2) #21
  br label %12

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State31setFragmentShaderDerivativeHintEj(%"class.gl::State"* %7, i32 %2) #21
  br label %12

8:                                                ; preds = %3, %3, %3, %3
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl10GLES1State7setHintEjj(%"class.gl::GLES1State"* %9, i32 %1, i32 %2) #21
  br label %12

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State23setTextureFilteringHintEj(%"class.gl::State"* %11, i32 %2) #21
  br label %12

12:                                               ; preds = %3, %10, %8, %6, %4
  ret void
}

declare void @_ZN2gl5State21setGenerateMipmapHintEj(%"class.gl::State"*, i32) local_unnamed_addr #3

declare void @_ZN2gl5State31setFragmentShaderDerivativeHintEj(%"class.gl::State"*, i32) local_unnamed_addr #3

declare void @_ZN2gl10GLES1State7setHintEjj(%"class.gl::GLES1State"*, i32, i32) local_unnamed_addr #3

declare void @_ZN2gl5State23setTextureFilteringHintEj(%"class.gl::State"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9lineWidthEf(%"class.gl::Context"*, float) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State12setLineWidthEf(%"class.gl::State"* %3, float %1) #21
  ret void
}

declare void @_ZN2gl5State12setLineWidthEf(%"class.gl::State"*, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11pixelStoreiEji(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %27 [
    i32 3317, label %4
    i32 3333, label %6
    i32 37796, label %8
    i32 3314, label %11
    i32 32878, label %13
    i32 32877, label %15
    i32 3315, label %17
    i32 3316, label %19
    i32 3330, label %21
    i32 3331, label %23
    i32 3332, label %25
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State18setUnpackAlignmentEi(%"class.gl::State"* %5, i32 %2) #21
  br label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State16setPackAlignmentEi(%"class.gl::State"* %7, i32 %2) #21
  br label %27

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %10 = icmp ne i32 %2, 0
  tail call void @_ZN2gl5State22setPackReverseRowOrderEb(%"class.gl::State"* %9, i1 zeroext %10) #21
  br label %27

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State18setUnpackRowLengthEi(%"class.gl::State"* %12, i32 %2) #21
  br label %27

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State20setUnpackImageHeightEi(%"class.gl::State"* %14, i32 %2) #21
  br label %27

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State19setUnpackSkipImagesEi(%"class.gl::State"* %16, i32 %2) #21
  br label %27

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State17setUnpackSkipRowsEi(%"class.gl::State"* %18, i32 %2) #21
  br label %27

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State19setUnpackSkipPixelsEi(%"class.gl::State"* %20, i32 %2) #21
  br label %27

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State16setPackRowLengthEi(%"class.gl::State"* %22, i32 %2) #21
  br label %27

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State15setPackSkipRowsEi(%"class.gl::State"* %24, i32 %2) #21
  br label %27

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State17setPackSkipPixelsEi(%"class.gl::State"* %26, i32 %2) #21
  br label %27

27:                                               ; preds = %3, %25, %23, %21, %19, %17, %15, %13, %11, %8, %6, %4
  ret void
}

declare void @_ZN2gl5State18setUnpackAlignmentEi(%"class.gl::State"*, i32) local_unnamed_addr #3

declare void @_ZN2gl5State16setPackAlignmentEi(%"class.gl::State"*, i32) local_unnamed_addr #3

declare void @_ZN2gl5State22setPackReverseRowOrderEb(%"class.gl::State"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN2gl5State18setUnpackRowLengthEi(%"class.gl::State"*, i32) local_unnamed_addr #3

declare void @_ZN2gl5State20setUnpackImageHeightEi(%"class.gl::State"*, i32) local_unnamed_addr #3

declare void @_ZN2gl5State19setUnpackSkipImagesEi(%"class.gl::State"*, i32) local_unnamed_addr #3

declare void @_ZN2gl5State17setUnpackSkipRowsEi(%"class.gl::State"*, i32) local_unnamed_addr #3

declare void @_ZN2gl5State19setUnpackSkipPixelsEi(%"class.gl::State"*, i32) local_unnamed_addr #3

declare void @_ZN2gl5State16setPackRowLengthEi(%"class.gl::State"*, i32) local_unnamed_addr #3

declare void @_ZN2gl5State15setPackSkipRowsEi(%"class.gl::State"*, i32) local_unnamed_addr #3

declare void @_ZN2gl5State17setPackSkipPixelsEi(%"class.gl::State"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13polygonOffsetEff(%"class.gl::Context"*, float, float) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State22setPolygonOffsetParamsEff(%"class.gl::State"* %4, float %1, float %2) #21
  ret void
}

declare void @_ZN2gl5State22setPolygonOffsetParamsEff(%"class.gl::State"*, float, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14sampleCoverageEfh(%"class.gl::Context"*, float, i8 zeroext) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %5 = fcmp ogt float %1, 0.000000e+00
  %6 = fcmp ogt float %1, 1.000000e+00
  %7 = select i1 %6, float 1.000000e+00, float %1
  %8 = select i1 %5, float %7, float 0.000000e+00
  %9 = icmp ne i8 %2, 0
  tail call void @_ZN2gl5State23setSampleCoverageParamsEfb(%"class.gl::State"* %4, float %8, i1 zeroext %9) #21
  ret void
}

declare void @_ZN2gl5State23setSampleCoverageParamsEfb(%"class.gl::State"*, float, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11sampleMaskiEjj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State19setSampleMaskParamsEjj(%"class.gl::State"* %4, i32 %1, i32 %2) #21
  ret void
}

declare void @_ZN2gl5State19setSampleMaskParamsEjj(%"class.gl::State"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context7scissorEiiii(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State16setScissorParamsEiiii(%"class.gl::State"* %6, i32 %1, i32 %2, i32 %3, i32 %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19stencilFuncSeparateEjjij(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = icmp slt i32 %3, 255
  %7 = select i1 %6, i32 %3, i32 255
  %8 = icmp sgt i32 %7, 0
  %9 = select i1 %8, i32 %7, i32 0
  switch i32 %1, label %14 [
    i32 1032, label %10
    i32 1028, label %10
    i32 1029, label %12
  ]

10:                                               ; preds = %5, %5
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State16setStencilParamsEjij(%"class.gl::State"* %11, i32 %2, i32 %9, i32 %4) #21
  switch i32 %1, label %14 [
    i32 1032, label %12
    i32 1029, label %12
  ]

12:                                               ; preds = %5, %10, %10
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State20setStencilBackParamsEjij(%"class.gl::State"* %13, i32 %2, i32 %9, i32 %4) #21
  br label %14

14:                                               ; preds = %5, %10, %12
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %15, align 8
  ret void
}

declare void @_ZN2gl5State16setStencilParamsEjij(%"class.gl::State"*, i32, i32, i32) local_unnamed_addr #3

declare void @_ZN2gl5State20setStencilBackParamsEjij(%"class.gl::State"*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl10StateCache20onStencilStateChangeEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readnone) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  store i64 1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19stencilMaskSeparateEjj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %8 [
    i32 1032, label %4
    i32 1028, label %4
    i32 1029, label %6
  ]

4:                                                ; preds = %3, %3
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State19setStencilWritemaskEj(%"class.gl::State"* %5, i32 %2) #21
  switch i32 %1, label %8 [
    i32 1032, label %6
    i32 1029, label %6
  ]

6:                                                ; preds = %3, %4, %4
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State23setStencilBackWritemaskEj(%"class.gl::State"* %7, i32 %2) #21
  br label %8

8:                                                ; preds = %3, %4, %6
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %9, align 8
  ret void
}

declare void @_ZN2gl5State19setStencilWritemaskEj(%"class.gl::State"*, i32) local_unnamed_addr #3

declare void @_ZN2gl5State23setStencilBackWritemaskEj(%"class.gl::State"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17stencilOpSeparateEjjjj(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %10 [
    i32 1032, label %6
    i32 1028, label %6
    i32 1029, label %8
  ]

6:                                                ; preds = %5, %5
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State20setStencilOperationsEjjj(%"class.gl::State"* %7, i32 %2, i32 %3, i32 %4) #21
  switch i32 %1, label %10 [
    i32 1032, label %8
    i32 1029, label %8
  ]

8:                                                ; preds = %5, %6, %6
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State24setStencilBackOperationsEjjj(%"class.gl::State"* %9, i32 %2, i32 %3, i32 %4) #21
  br label %10

10:                                               ; preds = %5, %6, %8
  ret void
}

declare void @_ZN2gl5State20setStencilOperationsEjjj(%"class.gl::State"*, i32, i32, i32) local_unnamed_addr #3

declare void @_ZN2gl5State24setStencilBackOperationsEjjj(%"class.gl::State"*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14vertexAttrib1fEjf(%"class.gl::Context"*, i32, float) local_unnamed_addr #1 align 2 {
  %4 = alloca [4 x float], align 16
  %5 = bitcast [4 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #21
  %6 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  %7 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 1
  %8 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 2
  %9 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 3
  store float %2, float* %6, align 16
  store float 0.000000e+00, float* %7, align 4
  store float 0.000000e+00, float* %8, align 8
  store float 1.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  call void @_ZN2gl5State16setVertexAttribfEjPKf(%"class.gl::State"* %10, i32 %1, float* nonnull %6) #21
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #21
  ret void
}

declare void @_ZN2gl5State16setVertexAttribfEjPKf(%"class.gl::State"*, i32, float*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl10StateCache30onDefaultVertexAttributeChangeEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readnone) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  store i64 1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15vertexAttrib1fvEjPKf(%"class.gl::Context"*, i32, float* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca [4 x float], align 16
  %5 = bitcast [4 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #21
  %6 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  %7 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 1
  %8 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 2
  %9 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 3
  %10 = bitcast float* %2 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = bitcast [4 x float]* %4 to i32*
  store i32 %11, i32* %12, align 16
  store float 0.000000e+00, float* %7, align 4
  store float 0.000000e+00, float* %8, align 8
  store float 1.000000e+00, float* %9, align 4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  call void @_ZN2gl5State16setVertexAttribfEjPKf(%"class.gl::State"* %13, i32 %1, float* nonnull %6) #21
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14vertexAttrib2fEjff(%"class.gl::Context"*, i32, float, float) local_unnamed_addr #1 align 2 {
  %5 = alloca [4 x float], align 16
  %6 = bitcast [4 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #21
  %7 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 0
  %8 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 1
  %9 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 2
  %10 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 3
  store float %2, float* %7, align 16
  store float %3, float* %8, align 4
  store float 0.000000e+00, float* %9, align 8
  store float 1.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  call void @_ZN2gl5State16setVertexAttribfEjPKf(%"class.gl::State"* %11, i32 %1, float* nonnull %7) #21
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15vertexAttrib2fvEjPKf(%"class.gl::Context"*, i32, float* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca [4 x float], align 16
  %5 = bitcast [4 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #21
  %6 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  %7 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 1
  %8 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 2
  %9 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 3
  %10 = bitcast float* %2 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = bitcast [4 x float]* %4 to i32*
  store i32 %11, i32* %12, align 16
  %13 = getelementptr inbounds float, float* %2, i64 1
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast float* %7 to i32*
  store i32 %15, i32* %16, align 4
  store float 0.000000e+00, float* %8, align 8
  store float 1.000000e+00, float* %9, align 4
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  call void @_ZN2gl5State16setVertexAttribfEjPKf(%"class.gl::State"* %17, i32 %1, float* nonnull %6) #21
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14vertexAttrib3fEjfff(%"class.gl::Context"*, i32, float, float, float) local_unnamed_addr #1 align 2 {
  %6 = alloca [4 x float], align 16
  %7 = bitcast [4 x float]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #21
  %8 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 0
  %9 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 1
  %10 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 2
  %11 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 3
  store float %2, float* %8, align 16
  store float %3, float* %9, align 4
  store float %4, float* %10, align 8
  store float 1.000000e+00, float* %11, align 4
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  call void @_ZN2gl5State16setVertexAttribfEjPKf(%"class.gl::State"* %12, i32 %1, float* nonnull %8) #21
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15vertexAttrib3fvEjPKf(%"class.gl::Context"*, i32, float* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca [4 x float], align 16
  %5 = bitcast [4 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #21
  %6 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  %7 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 1
  %8 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 2
  %9 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 3
  %10 = bitcast float* %2 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = bitcast [4 x float]* %4 to i32*
  store i32 %11, i32* %12, align 16
  %13 = getelementptr inbounds float, float* %2, i64 1
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast float* %7 to i32*
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds float, float* %2, i64 2
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast float* %8 to i32*
  store i32 %19, i32* %20, align 8
  store float 1.000000e+00, float* %9, align 4
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  call void @_ZN2gl5State16setVertexAttribfEjPKf(%"class.gl::State"* %21, i32 %1, float* nonnull %6) #21
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14vertexAttrib4fEjffff(%"class.gl::Context"*, i32, float, float, float, float) local_unnamed_addr #1 align 2 {
  %7 = alloca [4 x float], align 16
  %8 = bitcast [4 x float]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #21
  %9 = getelementptr inbounds [4 x float], [4 x float]* %7, i64 0, i64 0
  %10 = getelementptr inbounds [4 x float], [4 x float]* %7, i64 0, i64 1
  %11 = getelementptr inbounds [4 x float], [4 x float]* %7, i64 0, i64 2
  %12 = getelementptr inbounds [4 x float], [4 x float]* %7, i64 0, i64 3
  store float %2, float* %9, align 16
  store float %3, float* %10, align 4
  store float %4, float* %11, align 8
  store float %5, float* %12, align 4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  call void @_ZN2gl5State16setVertexAttribfEjPKf(%"class.gl::State"* %13, i32 %1, float* nonnull %9) #21
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15vertexAttrib4fvEjPKf(%"class.gl::Context"*, i32, float*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State16setVertexAttribfEjPKf(%"class.gl::State"* %4, i32 %1, float* %2) #21
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19vertexAttribPointerEjiNS_16VertexAttribTypeEhiPKv(%"class.gl::Context"*, i32, i32, i32, i8 zeroext, i32, i8*) local_unnamed_addr #1 align 2 {
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 0, i32 0, i32 1
  %9 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %8, align 8
  %10 = icmp ne i8 %4, 0
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %12 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %11, align 8
  %13 = zext i32 %1 to i64
  tail call void @_ZN2gl11VertexArray22setVertexAttribPointerEPKNS_7ContextEmPNS_6BufferEiNS_16VertexAttribTypeEbiPKv(%"class.gl::VertexArray"* %12, %"class.gl::Context"* %0, i64 %13, %"class.gl::Buffer"* %9, i32 %2, i32 %3, i1 zeroext %10, i32 %5, i8* %6) #21
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = or i64 %15, 32
  store i64 %16, i64* %14, align 8
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache24onVertexArrayStateChangeEPNS_7ContextE(%"class.gl::StateCache"* %17, %"class.gl::Context"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18vertexAttribFormatEjiNS_16VertexAttribTypeEhj(%"class.gl::Context"*, i32, i32, i32, i8 zeroext, i32) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %8 = icmp ne i8 %4, 0
  tail call void @_ZN2gl5State21setVertexAttribFormatEjiNS_16VertexAttribTypeEbbj(%"class.gl::State"* %7, i32 %1, i32 %2, i32 %3, i1 zeroext %8, i1 zeroext false, i32 %5) #21
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 47
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %56, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %14 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 5
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 6
  %17 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %17, align 8
  %18 = icmp eq %"class.gl::VertexArray"* %14, null
  br i1 %18, label %56, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %56, label %23

23:                                               ; preds = %19
  %24 = tail call i64 @llvm.cttz.i64(i64 %21, i1 true) #21, !range !73
  %25 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %14, i64 0, i32 5, i32 1, i32 0, i32 0
  %26 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %14, i64 0, i32 5, i32 3, i32 0, i32 0
  br label %27

27:                                               ; preds = %48, %23
  %28 = phi i64 [ 9223372036854775807, %23 ], [ %49, %48 ]
  %29 = phi i64 [ 9223372036854775807, %23 ], [ %50, %48 ]
  %30 = phi i64 [ %24, %23 ], [ %55, %48 ]
  %31 = phi i64 [ %21, %23 ], [ %53, %48 ]
  %32 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %25, align 8
  %33 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %32, i64 %30, i32 5
  %34 = load i32, i32* %33, align 8
  %35 = zext i32 %34 to i64
  %36 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %26, align 8
  %37 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %32, i64 %30, i32 6
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %36, i64 %35, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %27
  %43 = icmp slt i64 %38, %29
  %44 = select i1 %43, i64 %38, i64 %29
  store i64 %44, i64* %16, align 8
  br label %48

45:                                               ; preds = %27
  %46 = icmp slt i64 %38, %28
  %47 = select i1 %46, i64 %38, i64 %28
  store i64 %47, i64* %15, align 8
  br label %48

48:                                               ; preds = %45, %42
  %49 = phi i64 [ %47, %45 ], [ %28, %42 ]
  %50 = phi i64 [ %29, %45 ], [ %44, %42 ]
  %51 = shl i64 1, %30
  %52 = xor i64 %51, -1
  %53 = and i64 %31, %52
  %54 = icmp eq i64 %53, 0
  %55 = tail call i64 @llvm.cttz.i64(i64 %53, i1 true) #21, !range !73
  br i1 %54, label %56, label %27

56:                                               ; preds = %48, %6, %12, %19
  ret void
}

declare void @_ZN2gl5State21setVertexAttribFormatEjiNS_16VertexAttribTypeEbbj(%"class.gl::State"*, i32, i32, i32, i1 zeroext, i1 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache25onVertexArrayFormatChangeEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #18 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 47
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %50, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %8 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 6
  %11 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %11, align 8
  %12 = icmp eq %"class.gl::VertexArray"* %8, null
  br i1 %12, label %50, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %50, label %17

17:                                               ; preds = %13
  %18 = tail call i64 @llvm.cttz.i64(i64 %15, i1 true) #21, !range !73
  %19 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %8, i64 0, i32 5, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %8, i64 0, i32 5, i32 3, i32 0, i32 0
  br label %21

21:                                               ; preds = %42, %17
  %22 = phi i64 [ 9223372036854775807, %17 ], [ %43, %42 ]
  %23 = phi i64 [ 9223372036854775807, %17 ], [ %44, %42 ]
  %24 = phi i64 [ %18, %17 ], [ %49, %42 ]
  %25 = phi i64 [ %15, %17 ], [ %47, %42 ]
  %26 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %19, align 8
  %27 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %26, i64 %24, i32 5
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %20, align 8
  %31 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %26, i64 %24, i32 6
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %30, i64 %29, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %21
  %37 = icmp slt i64 %32, %23
  %38 = select i1 %37, i64 %32, i64 %23
  store i64 %38, i64* %10, align 8
  br label %42

39:                                               ; preds = %21
  %40 = icmp slt i64 %32, %22
  %41 = select i1 %40, i64 %32, i64 %22
  store i64 %41, i64* %9, align 8
  br label %42

42:                                               ; preds = %39, %36
  %43 = phi i64 [ %41, %39 ], [ %22, %36 ]
  %44 = phi i64 [ %23, %39 ], [ %38, %36 ]
  %45 = shl i64 1, %24
  %46 = xor i64 %45, -1
  %47 = and i64 %25, %46
  %48 = icmp eq i64 %47, 0
  %49 = tail call i64 @llvm.cttz.i64(i64 %47, i1 true) #21, !range !73
  br i1 %48, label %50, label %21

50:                                               ; preds = %42, %2, %6, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19vertexAttribIFormatEjiNS_16VertexAttribTypeEj(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State21setVertexAttribFormatEjiNS_16VertexAttribTypeEbbj(%"class.gl::State"* %6, i32 %1, i32 %2, i32 %3, i1 zeroext false, i1 zeroext true, i32 %4) #21
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 47
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %12 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 5
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 6
  %15 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %15, align 8
  %16 = icmp eq %"class.gl::VertexArray"* %12, null
  br i1 %16, label %54, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %54, label %21

21:                                               ; preds = %17
  %22 = tail call i64 @llvm.cttz.i64(i64 %19, i1 true) #21, !range !73
  %23 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %12, i64 0, i32 5, i32 1, i32 0, i32 0
  %24 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %12, i64 0, i32 5, i32 3, i32 0, i32 0
  br label %25

25:                                               ; preds = %46, %21
  %26 = phi i64 [ 9223372036854775807, %21 ], [ %47, %46 ]
  %27 = phi i64 [ 9223372036854775807, %21 ], [ %48, %46 ]
  %28 = phi i64 [ %22, %21 ], [ %53, %46 ]
  %29 = phi i64 [ %19, %21 ], [ %51, %46 ]
  %30 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %23, align 8
  %31 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %30, i64 %28, i32 5
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %24, align 8
  %35 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %30, i64 %28, i32 6
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %34, i64 %33, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %25
  %41 = icmp slt i64 %36, %27
  %42 = select i1 %41, i64 %36, i64 %27
  store i64 %42, i64* %14, align 8
  br label %46

43:                                               ; preds = %25
  %44 = icmp slt i64 %36, %26
  %45 = select i1 %44, i64 %36, i64 %26
  store i64 %45, i64* %13, align 8
  br label %46

46:                                               ; preds = %43, %40
  %47 = phi i64 [ %45, %43 ], [ %26, %40 ]
  %48 = phi i64 [ %27, %43 ], [ %42, %40 ]
  %49 = shl i64 1, %28
  %50 = xor i64 %49, -1
  %51 = and i64 %29, %50
  %52 = icmp eq i64 %51, 0
  %53 = tail call i64 @llvm.cttz.i64(i64 %51, i1 true) #21, !range !73
  br i1 %52, label %54, label %25

54:                                               ; preds = %46, %5, %10, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19vertexAttribBindingEjj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %5 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %4, align 8
  %6 = zext i32 %1 to i64
  tail call void @_ZN2gl11VertexArray22setVertexAttribBindingEPKNS_7ContextEmj(%"class.gl::VertexArray"* %5, %"class.gl::Context"* %0, i64 %6, i32 %2) #21
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = or i64 %8, 32
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache24onVertexArrayStateChangeEPNS_7ContextE(%"class.gl::StateCache"* %10, %"class.gl::Context"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20vertexBindingDivisorEjj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State23setVertexBindingDivisorEjj(%"class.gl::State"* %4, i32 %1, i32 %2) #21
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 47
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %52, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %10 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 5
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 6
  %13 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %13, align 8
  %14 = icmp eq %"class.gl::VertexArray"* %10, null
  br i1 %14, label %52, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %52, label %19

19:                                               ; preds = %15
  %20 = tail call i64 @llvm.cttz.i64(i64 %17, i1 true) #21, !range !73
  %21 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 3, i32 0, i32 0
  br label %23

23:                                               ; preds = %44, %19
  %24 = phi i64 [ 9223372036854775807, %19 ], [ %45, %44 ]
  %25 = phi i64 [ 9223372036854775807, %19 ], [ %46, %44 ]
  %26 = phi i64 [ %20, %19 ], [ %51, %44 ]
  %27 = phi i64 [ %17, %19 ], [ %49, %44 ]
  %28 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %21, align 8
  %29 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %28, i64 %26, i32 5
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %22, align 8
  %33 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %28, i64 %26, i32 6
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %32, i64 %31, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %23
  %39 = icmp slt i64 %34, %25
  %40 = select i1 %39, i64 %34, i64 %25
  store i64 %40, i64* %12, align 8
  br label %44

41:                                               ; preds = %23
  %42 = icmp slt i64 %34, %24
  %43 = select i1 %42, i64 %34, i64 %24
  store i64 %43, i64* %11, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi i64 [ %43, %41 ], [ %24, %38 ]
  %46 = phi i64 [ %25, %41 ], [ %40, %38 ]
  %47 = shl i64 1, %26
  %48 = xor i64 %47, -1
  %49 = and i64 %27, %48
  %50 = icmp eq i64 %49, 0
  %51 = tail call i64 @llvm.cttz.i64(i64 %49, i1 true) #21, !range !73
  br i1 %50, label %52, label %23

52:                                               ; preds = %44, %3, %8, %15
  ret void
}

declare void @_ZN2gl5State23setVertexBindingDivisorEjj(%"class.gl::State"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8viewportEiiii(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State17setViewportParamsEiiii(%"class.gl::State"* %6, i32 %1, i32 %2, i32 %3, i32 %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20vertexAttribIPointerEjiNS_16VertexAttribTypeEiPKv(%"class.gl::Context"*, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 0, i32 0, i32 1
  %8 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %10 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %9, align 8
  %11 = zext i32 %1 to i64
  tail call void @_ZN2gl11VertexArray23setVertexAttribIPointerEPKNS_7ContextEmPNS_6BufferEiNS_16VertexAttribTypeEiPKv(%"class.gl::VertexArray"* %10, %"class.gl::Context"* %0, i64 %11, %"class.gl::Buffer"* %8, i32 %2, i32 %3, i32 %4, i8* %5) #21
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = or i64 %13, 32
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache24onVertexArrayStateChangeEPNS_7ContextE(%"class.gl::StateCache"* %15, %"class.gl::Context"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15vertexAttribI4iEjiiii(%"class.gl::Context"*, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca [4 x i32], align 16
  %8 = bitcast [4 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #21
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 0
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 1
  %11 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 2
  %12 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 3
  store i32 %2, i32* %9, align 16
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 8
  store i32 %5, i32* %12, align 4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  call void @_ZN2gl5State16setVertexAttribiEjPKi(%"class.gl::State"* %13, i32 %1, i32* nonnull %9) #21
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #21
  ret void
}

declare void @_ZN2gl5State16setVertexAttribiEjPKi(%"class.gl::State"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16vertexAttribI4uiEjjjjj(%"class.gl::Context"*, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca [4 x i32], align 16
  %8 = bitcast [4 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #21
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 0
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 1
  %11 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 2
  %12 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 3
  store i32 %2, i32* %9, align 16
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 8
  store i32 %5, i32* %12, align 4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  call void @_ZN2gl5State16setVertexAttribuEjPKj(%"class.gl::State"* %13, i32 %1, i32* nonnull %9) #21
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #21
  ret void
}

declare void @_ZN2gl5State16setVertexAttribuEjPKj(%"class.gl::State"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16vertexAttribI4ivEjPKi(%"class.gl::Context"*, i32, i32*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State16setVertexAttribiEjPKi(%"class.gl::State"* %4, i32 %1, i32* %2) #21
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17vertexAttribI4uivEjPKj(%"class.gl::Context"*, i32, i32*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State16setVertexAttribuEjPKj(%"class.gl::State"* %4, i32 %1, i32* %2) #21
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %5, align 8
  ret void
}

declare void @_ZN2gl19QueryVertexAttribivERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPi(%"struct.gl::VertexAttribute"* dereferenceable(48), %"class.gl::VertexBinding"* dereferenceable(40), %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20), i32, i32*) local_unnamed_addr #3

declare dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17getVertexAttribivEjjPi(%"class.gl::Context"* nocapture readonly, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 68, i32 0, i32 0
  %7 = load %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"** %6, align 8
  %8 = getelementptr inbounds %"struct.gl::VertexAttribCurrentValueData", %"struct.gl::VertexAttribCurrentValueData"* %7, i64 %5
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %10 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %9, align 8
  %11 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %10, i64 %5) #21
  %12 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 1, i32 0, i32 0
  %13 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %12, align 8
  %14 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %13, i64 %5, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 3, i32 0, i32 0
  %18 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %17, align 8
  %19 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %18, i64 %16
  tail call void @_ZN2gl19QueryVertexAttribivERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPi(%"struct.gl::VertexAttribute"* dereferenceable(48) %11, %"class.gl::VertexBinding"* dereferenceable(40) %19, %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20) %8, i32 %2, i32* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23getVertexAttribivRobustEjjiPiS1_(%"class.gl::Context"* nocapture readonly, i32, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 68, i32 0, i32 0
  %9 = load %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"** %8, align 8
  %10 = getelementptr inbounds %"struct.gl::VertexAttribCurrentValueData", %"struct.gl::VertexAttribCurrentValueData"* %9, i64 %7
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %12 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %11, align 8
  %13 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %12, i64 %7) #21
  %14 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %12, i64 0, i32 5, i32 1, i32 0, i32 0
  %15 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %14, align 8
  %16 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %15, i64 %7, i32 5
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %12, i64 0, i32 5, i32 3, i32 0, i32 0
  %20 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %19, align 8
  %21 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %20, i64 %18
  tail call void @_ZN2gl19QueryVertexAttribivERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPi(%"struct.gl::VertexAttribute"* dereferenceable(48) %13, %"class.gl::VertexBinding"* dereferenceable(40) %21, %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20) %10, i32 %2, i32* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17getVertexAttribfvEjjPf(%"class.gl::Context"* nocapture readonly, i32, i32, float*) local_unnamed_addr #1 align 2 {
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 68, i32 0, i32 0
  %7 = load %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"** %6, align 8
  %8 = getelementptr inbounds %"struct.gl::VertexAttribCurrentValueData", %"struct.gl::VertexAttribCurrentValueData"* %7, i64 %5
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %10 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %9, align 8
  %11 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %10, i64 %5) #21
  %12 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 1, i32 0, i32 0
  %13 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %12, align 8
  %14 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %13, i64 %5, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 3, i32 0, i32 0
  %18 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %17, align 8
  %19 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %18, i64 %16
  tail call void @_ZN2gl19QueryVertexAttribfvERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPf(%"struct.gl::VertexAttribute"* dereferenceable(48) %11, %"class.gl::VertexBinding"* dereferenceable(40) %19, %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20) %8, i32 %2, float* %3) #21
  ret void
}

declare void @_ZN2gl19QueryVertexAttribfvERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPf(%"struct.gl::VertexAttribute"* dereferenceable(48), %"class.gl::VertexBinding"* dereferenceable(40), %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20), i32, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23getVertexAttribfvRobustEjjiPiPf(%"class.gl::Context"* nocapture readonly, i32, i32, i32, i32* nocapture readnone, float*) local_unnamed_addr #1 align 2 {
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 68, i32 0, i32 0
  %9 = load %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"** %8, align 8
  %10 = getelementptr inbounds %"struct.gl::VertexAttribCurrentValueData", %"struct.gl::VertexAttribCurrentValueData"* %9, i64 %7
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %12 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %11, align 8
  %13 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %12, i64 %7) #21
  %14 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %12, i64 0, i32 5, i32 1, i32 0, i32 0
  %15 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %14, align 8
  %16 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %15, i64 %7, i32 5
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %12, i64 0, i32 5, i32 3, i32 0, i32 0
  %20 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %19, align 8
  %21 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %20, i64 %18
  tail call void @_ZN2gl19QueryVertexAttribfvERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPf(%"struct.gl::VertexAttribute"* dereferenceable(48) %13, %"class.gl::VertexBinding"* dereferenceable(40) %21, %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20) %10, i32 %2, float* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18getVertexAttribIivEjjPi(%"class.gl::Context"* nocapture readonly, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 68, i32 0, i32 0
  %7 = load %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"** %6, align 8
  %8 = getelementptr inbounds %"struct.gl::VertexAttribCurrentValueData", %"struct.gl::VertexAttribCurrentValueData"* %7, i64 %5
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %10 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %9, align 8
  %11 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %10, i64 %5) #21
  %12 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 1, i32 0, i32 0
  %13 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %12, align 8
  %14 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %13, i64 %5, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 3, i32 0, i32 0
  %18 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %17, align 8
  %19 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %18, i64 %16
  tail call void @_ZN2gl20QueryVertexAttribIivERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPi(%"struct.gl::VertexAttribute"* dereferenceable(48) %11, %"class.gl::VertexBinding"* dereferenceable(40) %19, %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20) %8, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl20QueryVertexAttribIivERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPi(%"struct.gl::VertexAttribute"* dereferenceable(48), %"class.gl::VertexBinding"* dereferenceable(40), %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20), i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context24getVertexAttribIivRobustEjjiPiS1_(%"class.gl::Context"* nocapture readonly, i32, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 68, i32 0, i32 0
  %9 = load %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"** %8, align 8
  %10 = getelementptr inbounds %"struct.gl::VertexAttribCurrentValueData", %"struct.gl::VertexAttribCurrentValueData"* %9, i64 %7
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %12 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %11, align 8
  %13 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %12, i64 %7) #21
  %14 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %12, i64 0, i32 5, i32 1, i32 0, i32 0
  %15 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %14, align 8
  %16 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %15, i64 %7, i32 5
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %12, i64 0, i32 5, i32 3, i32 0, i32 0
  %20 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %19, align 8
  %21 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %20, i64 %18
  tail call void @_ZN2gl20QueryVertexAttribIivERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPi(%"struct.gl::VertexAttribute"* dereferenceable(48) %13, %"class.gl::VertexBinding"* dereferenceable(40) %21, %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20) %10, i32 %2, i32* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19getVertexAttribIuivEjjPj(%"class.gl::Context"* nocapture readonly, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 68, i32 0, i32 0
  %7 = load %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"** %6, align 8
  %8 = getelementptr inbounds %"struct.gl::VertexAttribCurrentValueData", %"struct.gl::VertexAttribCurrentValueData"* %7, i64 %5
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %10 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %9, align 8
  %11 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %10, i64 %5) #21
  %12 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 1, i32 0, i32 0
  %13 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %12, align 8
  %14 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %13, i64 %5, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 3, i32 0, i32 0
  %18 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %17, align 8
  %19 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %18, i64 %16
  tail call void @_ZN2gl21QueryVertexAttribIuivERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPj(%"struct.gl::VertexAttribute"* dereferenceable(48) %11, %"class.gl::VertexBinding"* dereferenceable(40) %19, %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20) %8, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl21QueryVertexAttribIuivERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPj(%"struct.gl::VertexAttribute"* dereferenceable(48), %"class.gl::VertexBinding"* dereferenceable(40), %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20), i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context25getVertexAttribIuivRobustEjjiPiPj(%"class.gl::Context"* nocapture readonly, i32, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 68, i32 0, i32 0
  %9 = load %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"** %8, align 8
  %10 = getelementptr inbounds %"struct.gl::VertexAttribCurrentValueData", %"struct.gl::VertexAttribCurrentValueData"* %9, i64 %7
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %12 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %11, align 8
  %13 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %12, i64 %7) #21
  %14 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %12, i64 0, i32 5, i32 1, i32 0, i32 0
  %15 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %14, align 8
  %16 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %15, i64 %7, i32 5
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %12, i64 0, i32 5, i32 3, i32 0, i32 0
  %20 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %19, align 8
  %21 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %20, i64 %18
  tail call void @_ZN2gl21QueryVertexAttribIuivERKNS_15VertexAttributeERKNS_13VertexBindingERKNS_28VertexAttribCurrentValueDataEjPj(%"struct.gl::VertexAttribute"* dereferenceable(48) %13, %"class.gl::VertexBinding"* dereferenceable(40) %21, %"struct.gl::VertexAttribCurrentValueData"* dereferenceable(20) %10, i32 %2, i32* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23getVertexAttribPointervEjjPPv(%"class.gl::Context"* nocapture readonly, i32, i32, i8**) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %6 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %6, i64 %7) #21
  tail call void @_ZN2gl25QueryVertexAttribPointervERKNS_15VertexAttributeEjPPv(%"struct.gl::VertexAttribute"* dereferenceable(48) %8, i32 %2, i8** %3) #21
  ret void
}

declare void @_ZN2gl25QueryVertexAttribPointervERKNS_15VertexAttributeEjPPv(%"struct.gl::VertexAttribute"* dereferenceable(48), i32, i8**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context29getVertexAttribPointervRobustEjjiPiPPv(%"class.gl::Context"* nocapture readonly, i32, i32, i32, i32* nocapture readnone, i8**) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %8 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = tail call dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* %8, i64 %9) #21
  tail call void @_ZN2gl25QueryVertexAttribPointervERKNS_15VertexAttributeEjPPv(%"struct.gl::VertexAttribute"* dereferenceable(48) %10, i32 %2, i8** %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19debugMessageControlEjjjiPKjh(%"class.gl::Context"*, i32, i32, i32, i32, i32*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #21
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = sext i32 %4 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #21
  %14 = shl nuw nsw i64 %13, 2
  %15 = icmp eq i32 %4, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %7
  %17 = icmp slt i32 %4, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %19) #28
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %14) #27
  %22 = bitcast i8* %21 to i32*
  %23 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds i32, i32* %22, i64 %13
  store i32* %24, i32** %12, align 8
  %25 = bitcast i32** %11 to i64*
  %26 = bitcast i32* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 %26, i64 %14, i1 false) #21
  %27 = ptrtoint i32* %24 to i64
  store i64 %27, i64* %25, align 8
  br label %28

28:                                               ; preds = %7, %20
  %29 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 91
  %30 = icmp ne i8 %6, 0
  call void @_ZN2gl5Debug17setMessageControlEjjjONSt3__16vectorIjNS1_9allocatorIjEEEEb(%"class.gl::Debug"* %29, i32 %1, i32 %2, i32 %3, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, i1 zeroext %30) #21
  %31 = load i32*, i32** %10, align 8
  %32 = icmp eq i32* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = ptrtoint i32* %31 to i64
  %35 = bitcast i32** %11 to i64*
  store i64 %34, i64* %35, align 8
  %36 = bitcast i32* %31 to i8*
  call void @_ZdlPv(i8* %36) #27
  br label %37

37:                                               ; preds = %28, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #21
  ret void
}

declare void @_ZN2gl5Debug17setMessageControlEjjjONSt3__16vectorIjNS1_9allocatorIjEEEEb(%"class.gl::Debug"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24), i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18debugMessageInsertEjjjjiPKc(%"class.gl::Context"*, i32, i32, i32, i32, i32, i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #21
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = icmp sgt i32 %5, 0
  %14 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  br i1 %13, label %15, label %17

15:                                               ; preds = %7
  %16 = sext i32 %5 to i64
  br label %22

17:                                               ; preds = %7
  %18 = tail call i64 @strlen(i8* %6) #29
  %19 = icmp ugt i64 %18, -17
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %21) #28
  unreachable

22:                                               ; preds = %15, %17
  %23 = phi i64 [ %16, %15 ], [ %18, %17 ]
  %24 = icmp ult i64 %23, 23
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = add nuw i64 %23, 16
  %27 = and i64 %26, -16
  %28 = tail call i8* @_Znwm(i64 %27) #27
  store i8* %28, i8** %10, align 8
  %29 = or i64 %27, -9223372036854775808
  store i64 %29, i64* %12, align 8
  store i64 %23, i64* %11, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %36

31:                                               ; preds = %22
  %32 = trunc i64 %23 to i8
  %33 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 %32, i8* %34, align 1
  %35 = icmp eq i64 %23, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31, %25
  %37 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %33, %31 ], [ %30, %25 ]
  %38 = phi i8* [ %9, %31 ], [ %28, %25 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 %6, i64 %23, i1 false) #21
  br label %39

39:                                               ; preds = %31, %36
  %40 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %33, %31 ], [ %37, %36 ]
  %41 = phi i8* [ %9, %31 ], [ %38, %36 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %23
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 91
  call void @_ZNK2gl5Debug13insertMessageEjjjjONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.gl::Debug"* %43, i32 %1, i32 %2, i32 %3, i32 %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i32 1) #21
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %39
  %48 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %48) #27
  br label %49

49:                                               ; preds = %39, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #21
  ret void
}

declare void @_ZNK2gl5Debug13insertMessageEjjjjONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.gl::Debug"*, i32, i32, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20debugMessageCallbackEPFvjjjjiPKcPKvES4_(%"class.gl::Context"*, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 91
  tail call void @_ZN2gl5Debug11setCallbackEPFvjjjjiPKcPKvES4_(%"class.gl::Debug"* %4, void (i32, i32, i32, i32, i32, i8*, i8*)* %1, i8* %2) #21
  ret void
}

declare void @_ZN2gl5Debug11setCallbackEPFvjjjjiPKcPKvES4_(%"class.gl::Debug"*, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context18getDebugMessageLogEjiPjS1_S1_S1_PiPc(%"class.gl::Context"*, i32, i32, i32*, i32*, i32*, i32*, i32*, i8*) local_unnamed_addr #1 align 2 {
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 91
  %11 = tail call i64 @_ZN2gl5Debug11getMessagesEjiPjS1_S1_S1_PiPc(%"class.gl::Debug"* %10, i32 %1, i32 %2, i32* %3, i32* %4, i32* %5, i32* %6, i32* %7, i8* %8) #21
  %12 = trunc i64 %11 to i32
  ret i32 %12
}

declare i64 @_ZN2gl5Debug11getMessagesEjiPjS1_S1_S1_PiPc(%"class.gl::Debug"*, i32, i32, i32*, i32*, i32*, i32*, i32*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14pushDebugGroupEjjiPKc(%"class.gl::Context"*, i32, i32, i32, i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #21
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = icmp sgt i32 %3, 0
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  br i1 %11, label %13, label %15

13:                                               ; preds = %5
  %14 = sext i32 %3 to i64
  br label %20

15:                                               ; preds = %5
  %16 = tail call i64 @strlen(i8* %4) #29
  %17 = icmp ugt i64 %16, -17
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %19) #28
  unreachable

20:                                               ; preds = %13, %15
  %21 = phi i64 [ %14, %13 ], [ %16, %15 ]
  %22 = icmp ult i64 %21, 23
  br i1 %22, label %28, label %23

23:                                               ; preds = %20
  %24 = add nuw i64 %21, 16
  %25 = and i64 %24, -16
  %26 = tail call i8* @_Znwm(i64 %25) #27
  store i8* %26, i8** %8, align 8
  %27 = or i64 %25, -9223372036854775808
  store i64 %27, i64* %10, align 8
  store i64 %21, i64* %9, align 8
  br label %33

28:                                               ; preds = %20
  %29 = trunc i64 %21 to i8
  %30 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1
  %32 = icmp eq i64 %21, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %28, %23
  %34 = phi i8* [ %26, %23 ], [ %7, %28 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 %4, i64 %21, i1 false) #21
  br label %35

35:                                               ; preds = %28, %33
  %36 = phi i8* [ %7, %28 ], [ %34, %33 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %21
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %39 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %38, align 8
  %40 = bitcast %"class.rx::ContextImpl"* %39 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32, i32, %"class.std::__1::basic_string"*)***
  %41 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32, i32, %"class.std::__1::basic_string"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32, i32, %"class.std::__1::basic_string"*)*** %40, align 8
  %42 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32, i32, %"class.std::__1::basic_string"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32, i32, %"class.std::__1::basic_string"*)** %41, i64 45
  %43 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32, i32, %"class.std::__1::basic_string"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32, i32, %"class.std::__1::basic_string"*)** %42, align 8
  %44 = call i32 %43(%"class.rx::ContextImpl"* %39, %"class.gl::Context"* %0, i32 %1, i32 %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #21
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %48, label %46

46:                                               ; preds = %35
  %47 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 91
  call void @_ZN2gl5Debug9pushGroupEjjONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Debug"* %47, i32 %1, i32 %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #21
  br label %48

48:                                               ; preds = %35, %46
  %49 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %54) #27
  br label %55

55:                                               ; preds = %48, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #21
  ret void
}

declare void @_ZN2gl5Debug9pushGroupEjjONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Debug"*, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context19handleNoopDrawEventEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %4 = bitcast %"class.rx::ContextImpl"* %3 to i32 (%"class.rx::ContextImpl"*)***
  %5 = load i32 (%"class.rx::ContextImpl"*)**, i32 (%"class.rx::ContextImpl"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %5, i64 47
  %7 = load i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %6, align 8
  %8 = tail call i32 %7(%"class.rx::ContextImpl"* %3) #21
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13popDebugGroupEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 91
  tail call void @_ZN2gl5Debug8popGroupEv(%"class.gl::Debug"* %2) #21
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %3, align 8
  %5 = bitcast %"class.rx::ContextImpl"* %4 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)***
  %6 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)** %6, i64 46
  %8 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*)** %7, align 8
  %9 = tail call i32 %8(%"class.rx::ContextImpl"* %4, %"class.gl::Context"* %0) #21
  ret void
}

declare void @_ZN2gl5Debug8popGroupEv(%"class.gl::Debug"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context20primitiveBoundingBoxEffffffff(%"class.gl::Context"* nocapture, float, float, float, float, float, float, float, float) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13bufferStorageENS_13BufferBindingElPKvj(%"class.gl::Context"*, i8 zeroext, i64, i8*, i32) local_unnamed_addr #1 align 2 {
  %6 = icmp eq i8 %1, 6
  br i1 %6, label %7, label %11

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %9 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %9, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  br label %14

11:                                               ; preds = %5
  %12 = zext i8 %1 to i64
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 %12, i32 0, i32 1
  br label %14

14:                                               ; preds = %7, %11
  %15 = phi %"class.gl::Buffer"** [ %10, %7 ], [ %13, %11 ]
  %16 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %15, align 8
  %17 = tail call i32 @_ZN2gl6Buffer13bufferStorageEPNS_7ContextENS_13BufferBindingElPKvj(%"class.gl::Buffer"* %16, %"class.gl::Context"* %0, i8 zeroext %1, i64 %2, i8* %3, i32 %4) #21
  ret void
}

declare i32 @_ZN2gl6Buffer13bufferStorageEPNS_7ContextENS_13BufferBindingElPKvj(%"class.gl::Buffer"*, %"class.gl::Context"*, i8 zeroext, i64, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21bufferStorageExternalENS_13BufferBindingEllPvj(%"class.gl::Context"*, i8 zeroext, i64, i64, i8*, i32) local_unnamed_addr #1 align 2 {
  %7 = icmp eq i8 %1, 6
  br i1 %7, label %8, label %12

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %10 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  br label %15

12:                                               ; preds = %6
  %13 = zext i8 %1 to i64
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 %13, i32 0, i32 1
  br label %15

15:                                               ; preds = %8, %12
  %16 = phi %"class.gl::Buffer"** [ %11, %8 ], [ %14, %12 ]
  %17 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %16, align 8
  %18 = tail call i32 @_ZN2gl6Buffer21bufferStorageExternalEPNS_7ContextENS_13BufferBindingElPvj(%"class.gl::Buffer"* %17, %"class.gl::Context"* %0, i8 zeroext %1, i64 %3, i8* %4, i32 %5) #21
  ret void
}

declare i32 @_ZN2gl6Buffer21bufferStorageExternalEPNS_7ContextENS_13BufferBindingElPvj(%"class.gl::Buffer"*, %"class.gl::Context"*, i8 zeroext, i64, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context26namedBufferStorageExternalEjllPvj(%"class.gl::Context"* nocapture, i32, i64, i64, i8* nocapture, i32) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10bufferDataENS_13BufferBindingElPKvNS_11BufferUsageE(%"class.gl::Context"*, i8 zeroext, i64, i8*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %6 = icmp eq i8 %1, 6
  br i1 %6, label %7, label %11

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %9 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %9, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  br label %14

11:                                               ; preds = %5
  %12 = zext i8 %1 to i64
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 %12, i32 0, i32 1
  br label %14

14:                                               ; preds = %7, %11
  %15 = phi %"class.gl::Buffer"** [ %10, %7 ], [ %13, %11 ]
  %16 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %15, align 8
  %17 = tail call i32 @_ZN2gl6Buffer10bufferDataEPNS_7ContextENS_13BufferBindingEPKvlNS_11BufferUsageE(%"class.gl::Buffer"* %16, %"class.gl::Context"* %0, i8 zeroext %1, i8* %3, i64 %2, i8 zeroext %4) #21
  ret void
}

declare i32 @_ZN2gl6Buffer10bufferDataEPNS_7ContextENS_13BufferBindingEPKvlNS_11BufferUsageE(%"class.gl::Buffer"*, %"class.gl::Context"*, i8 zeroext, i8*, i64, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13bufferSubDataENS_13BufferBindingEllPKv(%"class.gl::Context"*, i8 zeroext, i64, i64, i8*) local_unnamed_addr #1 align 2 {
  %6 = icmp eq i8* %4, null
  %7 = icmp eq i64 %3, 0
  %8 = or i1 %7, %6
  br i1 %8, label %22, label %9

9:                                                ; preds = %5
  %10 = icmp eq i8 %1, 6
  br i1 %10, label %11, label %15

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %13 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %12, align 8
  %14 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %13, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  br label %18

15:                                               ; preds = %9
  %16 = zext i8 %1 to i64
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 %16, i32 0, i32 1
  br label %18

18:                                               ; preds = %11, %15
  %19 = phi %"class.gl::Buffer"** [ %14, %11 ], [ %17, %15 ]
  %20 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %19, align 8
  %21 = tail call i32 @_ZN2gl6Buffer13bufferSubDataEPKNS_7ContextENS_13BufferBindingEPKvll(%"class.gl::Buffer"* %20, %"class.gl::Context"* %0, i8 zeroext %1, i8* nonnull %4, i64 %3, i64 %2) #21
  br label %22

22:                                               ; preds = %5, %18
  ret void
}

declare i32 @_ZN2gl6Buffer13bufferSubDataEPKNS_7ContextENS_13BufferBindingEPKvll(%"class.gl::Buffer"*, %"class.gl::Context"*, i8 zeroext, i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12attachShaderENS_15ShaderProgramIDES1_(%"class.gl::Context"* nocapture readonly, i32, i32) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %5 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %4, align 8
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %10, label %17

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 1
  %12 = load %"class.gl::Program"**, %"class.gl::Program"*** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %12, i64 %6
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %13, align 8
  %15 = icmp eq %"class.gl::Program"* %14, inttoptr (i64 -1 to %"class.gl::Program"*)
  %16 = select i1 %15, %"class.gl::Program"* null, %"class.gl::Program"* %14
  br label %80

17:                                               ; preds = %3
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %6
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %80, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %64, %10, %77
  %81 = phi %"class.gl::Program"* [ %16, %10 ], [ %79, %77 ], [ null, %64 ]
  %82 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %5, i32 %2) #21
  tail call void @_ZN2gl7Program12attachShaderEPNS_6ShaderE(%"class.gl::Program"* %81, %"class.gl::Shader"* %82) #21
  ret void
}

declare %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17copyBufferSubDataENS_13BufferBindingES1_lll(%"class.gl::Context"*, i8 zeroext, i8 zeroext, i64, i64, i64) local_unnamed_addr #1 align 2 {
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %32, label %8

8:                                                ; preds = %6
  %9 = icmp eq i8 %1, 6
  br i1 %9, label %10, label %14

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %12 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %11, align 8
  %13 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %12, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  br label %17

14:                                               ; preds = %8
  %15 = zext i8 %1 to i64
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 %15, i32 0, i32 1
  br label %17

17:                                               ; preds = %10, %14
  %18 = phi %"class.gl::Buffer"** [ %13, %10 ], [ %16, %14 ]
  %19 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %18, align 8
  %20 = icmp eq i8 %2, 6
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %23 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %22, align 8
  %24 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %23, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  br label %28

25:                                               ; preds = %17
  %26 = zext i8 %2 to i64
  %27 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 %26, i32 0, i32 1
  br label %28

28:                                               ; preds = %21, %25
  %29 = phi %"class.gl::Buffer"** [ %24, %21 ], [ %27, %25 ]
  %30 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %29, align 8
  %31 = tail call i32 @_ZN2gl6Buffer17copyBufferSubDataEPKNS_7ContextEPS0_lll(%"class.gl::Buffer"* %30, %"class.gl::Context"* %0, %"class.gl::Buffer"* %19, i64 %3, i64 %4, i64 %5) #21
  br label %32

32:                                               ; preds = %6, %28
  ret void
}

declare i32 @_ZN2gl6Buffer17copyBufferSubDataEPKNS_7ContextEPS0_lll(%"class.gl::Buffer"*, %"class.gl::Context"*, %"class.gl::Buffer"*, i64, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18bindAttribLocationENS_15ShaderProgramIDEjPKc(%"class.gl::Context"*, i32, i32, i8*) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %16, label %88, label %80

17:                                               ; preds = %4
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %88, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %77, %11
  %81 = phi %"class.gl::Program"* [ %15, %11 ], [ %79, %77 ]
  %82 = icmp eq %"class.gl::Program"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %81, i64 0, i32 11, i32 0, i32 0, i32 0
  %85 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %84, align 8
  %86 = icmp eq %"struct.gl::Program::LinkingState"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %81, %"class.gl::Context"* %0) #21
  br label %88

88:                                               ; preds = %64, %11, %80, %83, %87
  %89 = phi %"class.gl::Program"* [ null, %80 ], [ %81, %83 ], [ %81, %87 ], [ null, %11 ], [ null, %64 ]
  tail call void @_ZN2gl7Program21bindAttributeLocationEjPKc(%"class.gl::Program"* %89, i32 %2, i8* %3) #21
  ret void
}

declare void @_ZN2gl7Program21bindAttributeLocationEjPKc(%"class.gl::Program"*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14bindBufferBaseENS_13BufferBindingEjNS_8BufferIDE(%"class.gl::Context"*, i8 zeroext, i32, i32) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context15bindBufferRangeENS_13BufferBindingEjNS_8BufferIDEll(%"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, i64 0, i64 0)
  ret void
}

declare i32 @_ZN2gl5State23setIndexedBufferBindingEPKNS_7ContextENS_13BufferBindingEjPNS_6BufferEll(%"class.gl::State"*, %"class.gl::Context"*, i8 zeroext, i32, %"class.gl::Buffer"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl10StateCache26onUniformBufferStateChangeEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readnone) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  store i64 1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15bindFramebufferEjNS_13FramebufferIDE(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %35 [
    i32 36160, label %4
    i32 36008, label %4
    i32 36009, label %19
  ]

4:                                                ; preds = %3, %3
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %7 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %9 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 9
  %13 = load %"class.egl::ShareGroup"*, %"class.egl::ShareGroup"** %12, align 8
  %14 = tail call %"class.gl::Framebuffer"* @_ZN2gl18FramebufferManager26checkFramebufferAllocationEPN2rx13GLImplFactoryERKNS_4CapsENS_13FramebufferIDEPN3egl10ShareGroupE(%"class.gl::FramebufferManager"* %7, %"class.rx::GLImplFactory"* %10, %"struct.gl::Caps"* dereferenceable(872) %11, i32 %2, %"class.egl::ShareGroup"* %13) #21
  tail call void @_ZN2gl5State25setReadFramebufferBindingEPNS_11FramebufferE(%"class.gl::State"* %5, %"class.gl::Framebuffer"* %14) #21
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 68
  %16 = icmp eq %"class.gl::Framebuffer"* %14, null
  %17 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %14, i64 0, i32 2
  %18 = select i1 %16, %"class.angle::Subject"* null, %"class.angle::Subject"* %17
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %15, %"class.angle::Subject"* %18) #21
  switch i32 %1, label %35 [
    i32 36160, label %19
    i32 36009, label %19
  ]

19:                                               ; preds = %3, %4, %4
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %22 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %21, align 8
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %24 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %24, i64 0, i32 0
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5
  %27 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 9
  %28 = load %"class.egl::ShareGroup"*, %"class.egl::ShareGroup"** %27, align 8
  %29 = tail call %"class.gl::Framebuffer"* @_ZN2gl18FramebufferManager26checkFramebufferAllocationEPN2rx13GLImplFactoryERKNS_4CapsENS_13FramebufferIDEPN3egl10ShareGroupE(%"class.gl::FramebufferManager"* %22, %"class.rx::GLImplFactory"* %25, %"struct.gl::Caps"* dereferenceable(872) %26, i32 %2, %"class.egl::ShareGroup"* %28) #21
  tail call void @_ZN2gl5State25setDrawFramebufferBindingEPNS_11FramebufferE(%"class.gl::State"* %20, %"class.gl::Framebuffer"* %29) #21
  %30 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 67
  %31 = icmp eq %"class.gl::Framebuffer"* %29, null
  %32 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %29, i64 0, i32 2
  %33 = select i1 %31, %"class.angle::Subject"* null, %"class.angle::Subject"* %32
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %30, %"class.angle::Subject"* %33) #21
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %34, align 8
  br label %35

35:                                               ; preds = %3, %4, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.gl::Renderbuffer"* @_ZN2gl19RenderbufferManager27checkRenderbufferAllocationEPN2rx13GLImplFactoryENS_14RenderbufferIDE(%"class.gl::RenderbufferManager"*, %"class.rx::GLImplFactory"*, i32) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0
  %5 = zext i32 %2 to i64
  %6 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 1
  %11 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %11, i64 %5
  %13 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %12, align 8
  %14 = icmp eq %"class.gl::Renderbuffer"* %13, inttoptr (i64 -1 to %"class.gl::Renderbuffer"*)
  br i1 %14, label %81, label %78

15:                                               ; preds = %3
  %16 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %17 = add i64 %16, %5
  %18 = zext i64 %17 to i128
  %19 = mul nuw i128 %18, 11376068507788127593
  %20 = lshr i128 %19, 64
  %21 = xor i128 %20, %19
  %22 = trunc i128 %21 to i64
  %23 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %22, 7
  %28 = ptrtoint i8* %24 to i64
  %29 = lshr i64 %28, 12
  %30 = xor i64 %27, %29
  %31 = trunc i128 %21 to i8
  %32 = and i8 %31, 127
  %33 = insertelement <16 x i8> undef, i8 %32, i32 0
  %34 = shufflevector <16 x i8> %33, <16 x i8> undef, <16 x i32> zeroinitializer
  %35 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %36

36:                                               ; preds = %66, %15
  %37 = phi i64 [ %30, %15 ], [ %68, %66 ]
  %38 = phi i64 [ 0, %15 ], [ %67, %66 ]
  %39 = and i64 %37, %26
  %40 = getelementptr inbounds i8, i8* %24, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %34, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %35, align 8
  br label %49

49:                                               ; preds = %58, %46
  %50 = phi i32 [ %47, %46 ], [ %60, %58 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #21, !range !8
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %26
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %48, i64 %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %2
  br i1 %57, label %69, label %58, !prof !9

58:                                               ; preds = %49
  %59 = add i32 %50, -1
  %60 = and i32 %59, %50
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %49

62:                                               ; preds = %58, %36
  %63 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %81, !prof !10

66:                                               ; preds = %62
  %67 = add i64 %38, 16
  %68 = add i64 %67, %39
  br label %36

69:                                               ; preds = %49
  %70 = getelementptr inbounds i8, i8* %24, i64 %54
  %71 = icmp ne i8* %70, null
  tail call void @llvm.assume(i1 %71) #21
  %72 = load i8, i8* %70, align 1
  %73 = icmp sgt i8 %72, -1
  br i1 %73, label %75, label %74, !prof !9

74:                                               ; preds = %69
  tail call void @llvm.trap() #21
  unreachable

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %48, i64 %54, i32 0, i32 1
  %77 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %76, align 8
  br label %78

78:                                               ; preds = %75, %9
  %79 = phi %"class.gl::Renderbuffer"* [ %13, %9 ], [ %77, %75 ]
  %80 = icmp eq %"class.gl::Renderbuffer"* %79, null
  br i1 %80, label %81, label %85

81:                                               ; preds = %62, %78, %9
  %82 = icmp eq i32 %2, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = tail call %"class.gl::Renderbuffer"* @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE25checkObjectAllocationImplIJEEEPS1_PN2rx13GLImplFactoryES3_DpT_(%"class.gl::TypedResourceManager.279"* %4, %"class.rx::GLImplFactory"* %1, i32 %2) #21
  br label %85

85:                                               ; preds = %78, %81, %83
  %86 = phi %"class.gl::Renderbuffer"* [ %84, %83 ], [ %79, %78 ], [ null, %81 ]
  ret %"class.gl::Renderbuffer"* %86
}

declare void @_ZN2gl5State22setRenderbufferBindingEPKNS_7ContextEPNS_12RenderbufferE(%"class.gl::State"*, %"class.gl::Context"*, %"class.gl::Renderbuffer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23texStorage2DMultisampleENS_11TextureTypeEijiih(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i8 zeroext) local_unnamed_addr #1 align 2 {
  %8 = alloca %"struct.gl::Extents", align 4
  %9 = bitcast %"struct.gl::Extents"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #21
  %10 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %8, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %8, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %8, i64 0, i32 2
  store i32 %4, i32* %10, align 4
  store i32 %5, i32* %11, align 4
  store i32 1, i32* %12, align 4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %14 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %13, i8 zeroext %1) #21
  %15 = icmp ne i8 %6, 0
  %16 = call i32 @_ZN2gl7Texture21setStorageMultisampleEPNS_7ContextENS_11TextureTypeEiiRKNS_7ExtentsEb(%"class.gl::Texture"* %14, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, %"struct.gl::Extents"* nonnull dereferenceable(12) %8, i1 zeroext %15) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #21
  ret void
}

declare i32 @_ZN2gl7Texture21setStorageMultisampleEPNS_7ContextENS_11TextureTypeEiiRKNS_7ExtentsEb(%"class.gl::Texture"*, %"class.gl::Context"*, i8 zeroext, i32, i32, %"struct.gl::Extents"* dereferenceable(12), i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23texStorage3DMultisampleENS_11TextureTypeEijiiih(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i8 zeroext) local_unnamed_addr #1 align 2 {
  %9 = alloca %"struct.gl::Extents", align 4
  %10 = bitcast %"struct.gl::Extents"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #21
  %11 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %9, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %9, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %9, i64 0, i32 2
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  store i32 %6, i32* %13, align 4
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %15 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %14, i8 zeroext %1) #21
  %16 = icmp ne i8 %7, 0
  %17 = call i32 @_ZN2gl7Texture21setStorageMultisampleEPNS_7ContextENS_11TextureTypeEiiRKNS_7ExtentsEb(%"class.gl::Texture"* %15, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, %"struct.gl::Extents"* nonnull dereferenceable(12) %9, i1 zeroext %16) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18texImage2DExternalENS_13TextureTargetEiiiiijj(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %10 = alloca %"struct.gl::Extents", align 4
  %11 = bitcast %"struct.gl::Extents"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #21
  %12 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %10, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %10, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %10, i64 0, i32 2
  store i32 %4, i32* %12, align 4
  store i32 %5, i32* %13, align 4
  store i32 1, i32* %14, align 4
  %15 = tail call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %17 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %16, i8 zeroext %15) #21
  %18 = call i32 @_ZN2gl7Texture16setImageExternalEPNS_7ContextENS_13TextureTargetEijRKNS_7ExtentsEjj(%"class.gl::Texture"* %17, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, %"struct.gl::Extents"* nonnull dereferenceable(12) %10, i32 %7, i32 %8) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #21
  ret void
}

declare i32 @_ZN2gl7Texture16setImageExternalEPNS_7ContextENS_13TextureTargetEijRKNS_7ExtentsEjj(%"class.gl::Texture"*, %"class.gl::Context"*, i8 zeroext, i32, i32, %"struct.gl::Extents"* dereferenceable(12), i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17invalidateTextureENS_11TextureTypeE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %3, align 8
  %5 = bitcast %"class.rx::ContextImpl"* %4 to void (%"class.rx::ContextImpl"*, i8)***
  %6 = load void (%"class.rx::ContextImpl"*, i8)**, void (%"class.rx::ContextImpl"*, i8)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.rx::ContextImpl"*, i8)*, void (%"class.rx::ContextImpl"*, i8)** %6, i64 49
  %8 = load void (%"class.rx::ContextImpl"*, i8)*, void (%"class.rx::ContextImpl"*, i8)** %7, align 8
  tail call void %8(%"class.rx::ContextImpl"* %4, i8 zeroext %1) #21
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State25invalidateTextureBindingsENS_11TextureTypeE(%"class.gl::State"* %9, i8 zeroext %1) #21
  ret void
}

declare void @_ZN2gl5State25invalidateTextureBindingsENS_11TextureTypeE(%"class.gl::State"*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16getMultisamplefvEjjPf(%"class.gl::Context"*, i32, i32, float*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call i32 @_ZN2gl5State15syncDirtyObjectEPKNS_7ContextEj(%"class.gl::State"* %5, %"class.gl::Context"* %0, i32 36009) #21
  %7 = icmp ne i32 %6, 1
  %8 = icmp eq i32 %1, 36432
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %15

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 61
  %12 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %11, align 8
  %13 = zext i32 %2 to i64
  %14 = tail call i32 @_ZNK2gl11Framebuffer17getSamplePositionEPKNS_7ContextEmPf(%"class.gl::Framebuffer"* %12, %"class.gl::Context"* %0, i64 %13, float* %3) #21
  ret void

15:                                               ; preds = %4
  ret void
}

declare i32 @_ZNK2gl11Framebuffer17getSamplePositionEPKNS_7ContextEmPf(%"class.gl::Framebuffer"*, %"class.gl::Context"*, i64, float*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context22getMultisamplefvRobustEjjiPiPf(%"class.gl::Context"* nocapture, i32, i32, i32, i32* nocapture, float* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19renderbufferStorageEjjii(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 121
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 2
  %13 = icmp eq i32 %2, 34041
  %14 = and i1 %13, %12
  br i1 %14, label %22, label %15

15:                                               ; preds = %9, %5
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 12450
  %19 = icmp eq i32 %2, 6402
  %20 = and i1 %19, %18
  %21 = select i1 %20, i32 33190, i32 %2
  br label %22

22:                                               ; preds = %9, %15
  %23 = phi i32 [ 35056, %9 ], [ %21, %15 ]
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 62, i32 0, i32 1
  %25 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %24, align 8
  %26 = tail call i32 @_ZN2gl12Renderbuffer10setStorageEPKNS_7ContextEjii(%"class.gl::Renderbuffer"* %25, %"class.gl::Context"* %0, i32 %23, i32 %3, i32 %4) #21
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2gl7Context30getConvertedRenderbufferFormatEj(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 121
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 2
  %10 = icmp eq i32 %1, 34041
  %11 = and i1 %10, %9
  br i1 %11, label %19, label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 12450
  %16 = icmp eq i32 %1, 6402
  %17 = and i1 %16, %15
  %18 = select i1 %17, i32 33190, i32 %1
  br label %19

19:                                               ; preds = %12, %6
  %20 = phi i32 [ 35056, %6 ], [ %18, %12 ]
  ret i32 %20
}

declare i32 @_ZN2gl12Renderbuffer10setStorageEPKNS_7ContextEjii(%"class.gl::Renderbuffer"*, %"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context30renderbufferStorageMultisampleEjijii(%"class.gl::Context"*, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 121
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 2
  %14 = icmp eq i32 %3, 34041
  %15 = and i1 %14, %13
  br i1 %15, label %23, label %16

16:                                               ; preds = %10, %6
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 12450
  %20 = icmp eq i32 %3, 6402
  %21 = and i1 %20, %19
  %22 = select i1 %21, i32 33190, i32 %3
  br label %23

23:                                               ; preds = %10, %16
  %24 = phi i32 [ 35056, %10 ], [ %22, %16 ]
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 62, i32 0, i32 1
  %26 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %25, align 8
  %27 = tail call i32 @_ZN2gl12Renderbuffer21setStorageMultisampleEPKNS_7ContextEijiiNS_17MultisamplingModeE(%"class.gl::Renderbuffer"* %26, %"class.gl::Context"* %0, i32 %2, i32 %24, i32 %4, i32 %5, i32 0) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context34renderbufferStorageMultisampleImplEjijiiNS_17MultisamplingModeE(%"class.gl::Context"*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 121
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  %15 = icmp eq i32 %3, 34041
  %16 = and i1 %15, %14
  br i1 %16, label %24, label %17

17:                                               ; preds = %11, %7
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 12450
  %21 = icmp eq i32 %3, 6402
  %22 = and i1 %21, %20
  %23 = select i1 %22, i32 33190, i32 %3
  br label %24

24:                                               ; preds = %11, %17
  %25 = phi i32 [ 35056, %11 ], [ %23, %17 ]
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 62, i32 0, i32 1
  %27 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %26, align 8
  %28 = tail call i32 @_ZN2gl12Renderbuffer21setStorageMultisampleEPKNS_7ContextEijiiNS_17MultisamplingModeE(%"class.gl::Renderbuffer"* %27, %"class.gl::Context"* %0, i32 %2, i32 %25, i32 %4, i32 %5, i32 %6) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context33renderbufferStorageMultisampleEXTEjijii(%"class.gl::Context"*, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 121
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 2
  %14 = icmp eq i32 %3, 34041
  %15 = and i1 %14, %13
  br i1 %15, label %23, label %16

16:                                               ; preds = %10, %6
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 12450
  %20 = icmp eq i32 %3, 6402
  %21 = and i1 %20, %19
  %22 = select i1 %21, i32 33190, i32 %3
  br label %23

23:                                               ; preds = %10, %16
  %24 = phi i32 [ 35056, %10 ], [ %22, %16 ]
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 62, i32 0, i32 1
  %26 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %25, align 8
  %27 = tail call i32 @_ZN2gl12Renderbuffer21setStorageMultisampleEPKNS_7ContextEijiiNS_17MultisamplingModeE(%"class.gl::Renderbuffer"* %26, %"class.gl::Context"* %0, i32 %2, i32 %24, i32 %4, i32 %5, i32 1) #21
  ret void
}

declare i32 @_ZN2gl12Renderbuffer21setStorageMultisampleEPKNS_7ContextEijiiNS_17MultisamplingModeE(%"class.gl::Renderbuffer"*, %"class.gl::Context"*, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context31framebufferTexture2DMultisampleEjjNS_13TextureTargetENS_9TextureIDEii(%"class.gl::Context"*, i32, i32, i8 zeroext, i32, i32, i32) local_unnamed_addr #5 align 2 {
  %8 = alloca %"class.gl::ImageIndex", align 4
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %10 = tail call %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"* %9, i32 %1) #21
  %11 = icmp eq i32 %4, 0
  br i1 %11, label %95, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %14 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %13, align 8
  %15 = zext i32 %4 to i64
  %16 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %14, i64 0, i32 0, i32 1, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %17, %15
  br i1 %18, label %19, label %26

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %14, i64 0, i32 0, i32 1, i32 1
  %21 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %20, align 8
  %22 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %21, i64 %15
  %23 = load %"class.gl::Texture"*, %"class.gl::Texture"** %22, align 8
  %24 = icmp eq %"class.gl::Texture"* %23, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %25 = select i1 %24, %"class.gl::Texture"* null, %"class.gl::Texture"* %23
  br label %89

26:                                               ; preds = %12
  %27 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %28 = add i64 %27, %15
  %29 = zext i64 %28 to i128
  %30 = mul nuw i128 %29, 11376068507788127593
  %31 = lshr i128 %30, 64
  %32 = xor i128 %31, %30
  %33 = trunc i128 %32 to i64
  %34 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %14, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %14, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = lshr i64 %33, 7
  %39 = ptrtoint i8* %35 to i64
  %40 = lshr i64 %39, 12
  %41 = xor i64 %38, %40
  %42 = trunc i128 %32 to i8
  %43 = and i8 %42, 127
  %44 = insertelement <16 x i8> undef, i8 %43, i32 0
  %45 = shufflevector <16 x i8> %44, <16 x i8> undef, <16 x i32> zeroinitializer
  %46 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %14, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %47

47:                                               ; preds = %77, %26
  %48 = phi i64 [ %41, %26 ], [ %79, %77 ]
  %49 = phi i64 [ 0, %26 ], [ %78, %77 ]
  %50 = and i64 %48, %37
  %51 = getelementptr inbounds i8, i8* %35, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp eq <16 x i8> %45, %53
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %73, label %57

57:                                               ; preds = %47
  %58 = zext i16 %55 to i32
  %59 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %46, align 8
  br label %60

60:                                               ; preds = %69, %57
  %61 = phi i32 [ %58, %57 ], [ %71, %69 ]
  %62 = tail call i32 @llvm.cttz.i32(i32 %61, i1 false) #21, !range !8
  %63 = zext i32 %62 to i64
  %64 = add i64 %50, %63
  %65 = and i64 %64, %37
  %66 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %59, i64 %65, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %4
  br i1 %68, label %80, label %69, !prof !9

69:                                               ; preds = %60
  %70 = add i32 %61, -1
  %71 = and i32 %70, %61
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %60

73:                                               ; preds = %69, %47
  %74 = icmp eq <16 x i8> %53, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %75 = bitcast <16 x i1> %74 to i16
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %77, label %89, !prof !10

77:                                               ; preds = %73
  %78 = add i64 %49, 16
  %79 = add i64 %78, %50
  br label %47

80:                                               ; preds = %60
  %81 = getelementptr inbounds i8, i8* %35, i64 %65
  %82 = icmp ne i8* %81, null
  tail call void @llvm.assume(i1 %82) #21
  %83 = load i8, i8* %81, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !9

85:                                               ; preds = %80
  tail call void @llvm.trap() #21
  unreachable

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %59, i64 %65, i32 0, i32 1
  %88 = load %"class.gl::Texture"*, %"class.gl::Texture"** %87, align 8
  br label %89

89:                                               ; preds = %73, %19, %86
  %90 = phi %"class.gl::Texture"* [ %25, %19 ], [ %88, %86 ], [ null, %73 ]
  %91 = getelementptr inbounds %"class.gl::ImageIndex", %"class.gl::ImageIndex"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %91, i8 -86, i64 16, i1 false)
  call void @_ZN2gl10ImageIndex14MakeFromTargetENS_13TextureTargetEii(%"class.gl::ImageIndex"* nonnull sret %8, i8 zeroext %3, i32 %5, i32 1) #21
  %92 = icmp eq %"class.gl::Texture"* %90, null
  %93 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %90, i64 0, i32 2, i32 0
  %94 = select i1 %92, %"class.gl::FramebufferAttachmentObject"* null, %"class.gl::FramebufferAttachmentObject"* %93
  call void @_ZN2gl11Framebuffer24setAttachmentMultisampleEPKNS_7ContextEjjRKNS_10ImageIndexEPNS_27FramebufferAttachmentObjectEi(%"class.gl::Framebuffer"* %10, %"class.gl::Context"* %0, i32 5890, i32 %2, %"class.gl::ImageIndex"* nonnull dereferenceable(16) %8, %"class.gl::FramebufferAttachmentObject"* %94, i32 %6) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #21
  br label %96

95:                                               ; preds = %7
  tail call void @_ZN2gl11Framebuffer15resetAttachmentEPKNS_7ContextEj(%"class.gl::Framebuffer"* %10, %"class.gl::Context"* %0, i32 %2) #21
  br label %96

96:                                               ; preds = %95, %89
  call void @_ZN2gl5State14setObjectDirtyEj(%"class.gl::State"* %9, i32 %1) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9getSyncivEP8__GLsyncjiPiS3_(%"class.gl::Context"*, %struct.__GLsync*, i32, i32, i32*, i32*) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 35
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 15
  %12 = load %"class.gl::SyncManager"*, %"class.gl::SyncManager"** %11, align 8
  %13 = ptrtoint %struct.__GLsync* %1 to i64
  %14 = trunc i64 %13 to i32
  %15 = tail call %"class.gl::Sync"* @_ZNK2gl11SyncManager7getSyncEj(%"class.gl::SyncManager"* %12, i32 %14) #21
  br label %16

16:                                               ; preds = %6, %10
  %17 = phi %"class.gl::Sync"* [ null, %6 ], [ %15, %10 ]
  %18 = tail call i32 @_ZN2gl11QuerySyncivEPKNS_7ContextEPKNS_4SyncEjiPiS6_(%"class.gl::Context"* %0, %"class.gl::Sync"* %17, i32 %2, i32 %3, i32* %4, i32* %5) #21
  ret void
}

declare i32 @_ZN2gl11QuerySyncivEPKNS_7ContextEPKNS_4SyncEjiPiS6_(%"class.gl::Context"*, %"class.gl::Sync"*, i32, i32, i32*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context25getFramebufferParameterivEjjPi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"* %5, i32 %1) #21
  tail call void @_ZN2gl27QueryFramebufferParameterivEPKNS_11FramebufferEjPi(%"class.gl::Framebuffer"* %6, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl27QueryFramebufferParameterivEPKNS_11FramebufferEjPi(%"class.gl::Framebuffer"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context31getFramebufferParameterivRobustEjjiPiS1_(%"class.gl::Context"* nocapture, i32, i32, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21framebufferParameteriEjji(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"* %5, i32 %1) #21
  tail call void @_ZN2gl24SetFramebufferParameteriEPKNS_7ContextEPNS_11FramebufferEji(%"class.gl::Context"* %0, %"class.gl::Framebuffer"* %6, i32 %2, i32 %3) #21
  ret void
}

declare void @_ZN2gl24SetFramebufferParameteriEPKNS_7ContextEPNS_11FramebufferEji(%"class.gl::Context"*, %"class.gl::Framebuffer"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context16getScratchBufferEmPPN5angle12MemoryBufferE(%"class.gl::Context"*, i64, %"class.angle::MemoryBuffer"**) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.angle::ScratchBuffer", align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 72, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = bitcast %"class.angle::ScratchBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #21
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 45
  %11 = load %"class.egl::Display"*, %"class.egl::Display"** %10, align 8
  call void @_ZN3egl7Display20requestScratchBufferEv(%"class.angle::ScratchBuffer"* nonnull sret %4, %"class.egl::Display"* %11) #21
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 72, i32 1
  %13 = call dereferenceable(24) %"class.angle::ScratchBuffer"* @_ZN5angle13ScratchBufferaSEOS0_(%"class.angle::ScratchBuffer"* %12, %"class.angle::ScratchBuffer"* nonnull dereferenceable(24) %4) #21
  store i8 1, i8* %5, align 8
  call void @_ZN5angle13ScratchBufferD1Ev(%"class.angle::ScratchBuffer"* nonnull %4) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #21
  br label %14

14:                                               ; preds = %3, %8
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 72, i32 1
  %16 = call zeroext i1 @_ZN5angle13ScratchBuffer3getEmPPNS_12MemoryBufferE(%"class.angle::ScratchBuffer"* %15, i64 %1, %"class.angle::MemoryBuffer"** %2) #21
  ret i1 %16
}

declare void @_ZN3egl7Display20requestScratchBufferEv(%"class.angle::ScratchBuffer"* sret, %"class.egl::Display"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5angle13ScratchBuffer3getEmPPNS_12MemoryBufferE(%"class.angle::ScratchBuffer"*, i64, %"class.angle::MemoryBuffer"**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.angle::ScratchBuffer"* @_ZNK2gl7Context16getScratchBufferEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.angle::ScratchBuffer", align 8
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 72, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  %7 = bitcast %"class.angle::ScratchBuffer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #21
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 45
  %9 = load %"class.egl::Display"*, %"class.egl::Display"** %8, align 8
  call void @_ZN3egl7Display20requestScratchBufferEv(%"class.angle::ScratchBuffer"* nonnull sret %2, %"class.egl::Display"* %9) #21
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 72, i32 1
  %11 = call dereferenceable(24) %"class.angle::ScratchBuffer"* @_ZN5angle13ScratchBufferaSEOS0_(%"class.angle::ScratchBuffer"* %10, %"class.angle::ScratchBuffer"* nonnull dereferenceable(24) %2) #21
  store i8 1, i8* %3, align 8
  call void @_ZN5angle13ScratchBufferD1Ev(%"class.angle::ScratchBuffer"* nonnull %2) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #21
  br label %12

12:                                               ; preds = %1, %6
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 72, i32 1
  ret %"class.angle::ScratchBuffer"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context19getZeroFilledBufferEmPPN5angle12MemoryBufferE(%"class.gl::Context"*, i64, %"class.angle::MemoryBuffer"**) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.angle::ScratchBuffer", align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 73, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = bitcast %"class.angle::ScratchBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #21
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 45
  %11 = load %"class.egl::Display"*, %"class.egl::Display"** %10, align 8
  call void @_ZN3egl7Display23requestZeroFilledBufferEv(%"class.angle::ScratchBuffer"* nonnull sret %4, %"class.egl::Display"* %11) #21
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 73, i32 1
  %13 = call dereferenceable(24) %"class.angle::ScratchBuffer"* @_ZN5angle13ScratchBufferaSEOS0_(%"class.angle::ScratchBuffer"* %12, %"class.angle::ScratchBuffer"* nonnull dereferenceable(24) %4) #21
  store i8 1, i8* %5, align 8
  call void @_ZN5angle13ScratchBufferD1Ev(%"class.angle::ScratchBuffer"* nonnull %4) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #21
  br label %14

14:                                               ; preds = %3, %8
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 73, i32 1
  %16 = call zeroext i1 @_ZN5angle13ScratchBuffer14getInitializedEmPPNS_12MemoryBufferEh(%"class.angle::ScratchBuffer"* %15, i64 %1, %"class.angle::MemoryBuffer"** %2, i8 zeroext 0) #21
  ret i1 %16
}

declare void @_ZN3egl7Display23requestZeroFilledBufferEv(%"class.angle::ScratchBuffer"* sret, %"class.egl::Display"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5angle13ScratchBuffer14getInitializedEmPPNS_12MemoryBufferEh(%"class.angle::ScratchBuffer"*, i64, %"class.angle::MemoryBuffer"**, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15dispatchComputeEjjj(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.angle::BitSetT.168", align 8
  %6 = icmp eq i32 %1, 0
  %7 = icmp eq i32 %2, 0
  %8 = or i1 %6, %7
  %9 = icmp eq i32 %3, 0
  %10 = or i1 %8, %9
  br i1 %10, label %186, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %15 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %13, null
  %17 = icmp ne %"class.gl::ProgramPipeline"* %15, null
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %30

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %15, i64 0, i32 5, i32 5
  %21 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %20, align 8
  %22 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %21, i64 0, i32 55
  store i8 1, i8* %22, align 4
  %23 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %15, i64 0, i32 5, i32 6
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = or i64 %25, 140737488355328
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache25onProgramExecutableChangeEPNS_7ContextE(%"class.gl::StateCache"* %27, %"class.gl::Context"* %0) #21
  %28 = load %"class.gl::Program"*, %"class.gl::Program"** %12, align 8
  %29 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %14, align 8
  br label %30

30:                                               ; preds = %19, %11
  %31 = phi %"class.gl::ProgramPipeline"* [ %15, %11 ], [ %29, %19 ]
  %32 = phi %"class.gl::Program"* [ %13, %11 ], [ %28, %19 ]
  %33 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %34 = icmp eq %"class.gl::Program"* %32, null
  %35 = icmp ne %"class.gl::ProgramPipeline"* %31, null
  %36 = and i1 %35, %34
  br i1 %36, label %37, label %42

37:                                               ; preds = %30
  %38 = tail call i32 @_ZN2gl15ProgramPipeline4linkEPKNS_7ContextE(%"class.gl::ProgramPipeline"* nonnull %31, %"class.gl::Context"* %0) #21
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40, !prof !9

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 8
  tail call void @_ZN2gl8ErrorSet11handleErrorEjPKcS2_S2_j(%"class.gl::ErrorSet"* %41, i32 1282, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__._ZN2gl7Context18prepareForDispatchEv, i64 0, i64 0), i32 4018) #21
  br label %186

42:                                               ; preds = %37, %30
  %43 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %44 = load i64, i64* %43, align 8, !noalias !484
  %45 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 63, i32 0
  %46 = load i64, i64* %45, align 8, !noalias !484
  %47 = and i64 %46, %44
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %72, label %49

49:                                               ; preds = %42
  %50 = tail call i64 @llvm.cttz.i64(i64 %47, i1 true) #21, !range !73
  %51 = bitcast %"class.gl::State"* %33 to i8*
  br label %52

52:                                               ; preds = %64, %49
  %53 = phi i64 [ %50, %49 ], [ %69, %64 ]
  %54 = phi i64 [ %47, %49 ], [ %67, %64 ]
  %55 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %53, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds i8, i8* %51, i64 %56
  %58 = bitcast i8* %57 to %"class.gl::State"*
  %59 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %53, i32 0
  %60 = bitcast i64* %59 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %61 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %60, align 16
  %62 = tail call i32 %61(%"class.gl::State"* %58, %"class.gl::Context"* %0, i32 3) #21
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %186, label %64

64:                                               ; preds = %52
  %65 = shl i64 1, %53
  %66 = xor i64 %65, -1
  %67 = and i64 %54, %66
  %68 = icmp eq i64 %67, 0
  %69 = tail call i64 @llvm.cttz.i64(i64 %67, i1 true) #21, !range !73
  br i1 %68, label %70, label %52

70:                                               ; preds = %64
  %71 = load i64, i64* %43, align 8
  br label %72

72:                                               ; preds = %70, %42
  %73 = phi i64 [ %71, %70 ], [ %44, %42 ]
  %74 = and i64 %47, 4095
  %75 = xor i64 %74, 4095
  %76 = and i64 %73, %75
  store i64 %76, i64* %43, align 8
  %77 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 62
  %78 = bitcast %"class.angle::BitSetT.168"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #21
  %79 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %5, i64 0, i32 0
  %80 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %81 = load i64, i64* %80, align 8, !noalias !487
  %82 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %77, i64 0, i32 0
  %83 = load i64, i64* %82, align 8, !noalias !487
  %84 = and i64 %83, %81
  store i64 %84, i64* %79, align 8, !alias.scope !487
  %85 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %85, align 8
  %87 = bitcast %"class.rx::ContextImpl"* %86 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %88 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %87, align 8
  %89 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %88, i64 51
  %90 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %89, align 8
  %91 = call i32 %90(%"class.rx::ContextImpl"* %86, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %5, %"class.angle::BitSetT.168"* dereferenceable(8) %77) #21
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %94

93:                                               ; preds = %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #21
  br label %186

94:                                               ; preds = %72
  %95 = load i64, i64* %79, align 8, !noalias !490
  %96 = xor i64 %95, -1
  %97 = load i64, i64* %80, align 8
  %98 = and i64 %97, %96
  store i64 %98, i64* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #21
  %99 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %85, align 8
  %100 = bitcast %"class.rx::ContextImpl"* %99 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32, i32, i32)***
  %101 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32, i32, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32, i32, i32)*** %100, align 8
  %102 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32, i32, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32, i32, i32)** %101, i64 60
  %103 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32, i32, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32, i32, i32)** %102, align 8
  %104 = call i32 %103(%"class.rx::ContextImpl"* %99, %"class.gl::Context"* %0, i32 %1, i32 %2, i32 %3) #21
  %105 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 11, i32 0
  %106 = load i64, i64* %105, align 8, !noalias !493
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %94
  %109 = call i64 @llvm.cttz.i64(i64 %106, i1 true) #21, !range !73
  br label %126

110:                                              ; preds = %134, %94
  %111 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 0, i32 0
  %112 = load i64, i64* %111, align 8, !noalias !496
  %113 = icmp eq i64 %112, 0
  %114 = call i64 @llvm.cttz.i64(i64 %112, i1 true) #21, !range !73
  br i1 %113, label %115, label %121

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 1, i32 0
  %117 = load i64, i64* %116, align 8, !noalias !496
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %172, label %119

119:                                              ; preds = %115
  %120 = call i64 @llvm.cttz.i64(i64 %117, i1 true) #21, !range !73
  br label %121

121:                                              ; preds = %119, %110
  %122 = phi i64 [ 0, %110 ], [ 1, %119 ]
  %123 = phi i64 [ %112, %110 ], [ %117, %119 ]
  %124 = phi i64 [ %114, %110 ], [ %120, %119 ]
  %125 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 77, i32 0, i32 0
  br label %140

126:                                              ; preds = %134, %108
  %127 = phi i64 [ %109, %108 ], [ %139, %134 ]
  %128 = phi i64 [ %106, %108 ], [ %137, %134 ]
  %129 = call dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State29getIndexedShaderStorageBufferEm(%"class.gl::State"* %33, i64 %127) #21
  %130 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %129, i64 0, i32 0, i32 0, i32 1
  %131 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %130, align 8
  %132 = icmp eq %"class.gl::Buffer"* %131, null
  br i1 %132, label %134, label %133

133:                                              ; preds = %126
  call void @_ZN2gl6Buffer13onDataChangedEv(%"class.gl::Buffer"* nonnull %131) #21
  br label %134

134:                                              ; preds = %133, %126
  %135 = shl i64 1, %127
  %136 = xor i64 %135, -1
  %137 = and i64 %128, %136
  %138 = icmp eq i64 %137, 0
  %139 = call i64 @llvm.cttz.i64(i64 %137, i1 true) #21, !range !73
  br i1 %138, label %110, label %126

140:                                              ; preds = %167, %121
  %141 = phi i64 [ %124, %121 ], [ %170, %167 ]
  %142 = phi i64 [ %123, %121 ], [ %169, %167 ]
  %143 = phi i64 [ %122, %121 ], [ %168, %167 ]
  %144 = shl i64 %143, 6
  %145 = add i64 %144, %141
  %146 = load %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"** %125, align 8
  %147 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %146, i64 %145, i32 0, i32 0, i32 1
  %148 = load %"class.gl::Texture"*, %"class.gl::Texture"** %147, align 8
  %149 = icmp eq %"class.gl::Texture"* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %140
  %151 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %148, i64 0, i32 2, i32 0, i32 0
  call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %151, i32 1) #21
  br label %152

152:                                              ; preds = %150, %140
  %153 = shl i64 1, %141
  %154 = xor i64 %153, -1
  %155 = and i64 %142, %154
  %156 = icmp eq i64 %155, 0
  %157 = call i64 @llvm.cttz.i64(i64 %155, i1 true) #21, !range !73
  br i1 %156, label %158, label %167

158:                                              ; preds = %152
  %159 = add i64 %143, 1
  %160 = icmp ult i64 %159, 2
  br i1 %160, label %161, label %172

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 %159, i32 0
  %163 = load i64, i64* %162, align 8, !noalias !499
  %164 = icmp eq i64 %163, 0
  %165 = call i64 @llvm.cttz.i64(i64 %163, i1 true) #21, !range !73
  %166 = select i1 %164, i64 0, i64 %165
  br label %167

167:                                              ; preds = %161, %152
  %168 = phi i64 [ %159, %161 ], [ %143, %152 ]
  %169 = phi i64 [ %163, %161 ], [ %155, %152 ]
  %170 = phi i64 [ %166, %161 ], [ %157, %152 ]
  %171 = icmp eq i64 %169, 0
  br i1 %171, label %172, label %140

172:                                              ; preds = %158, %167, %115
  %173 = load %"class.gl::Program"*, %"class.gl::Program"** %12, align 8
  %174 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %14, align 8
  %175 = icmp eq %"class.gl::Program"* %173, null
  %176 = icmp ne %"class.gl::ProgramPipeline"* %174, null
  %177 = and i1 %175, %176
  br i1 %177, label %178, label %186

178:                                              ; preds = %172
  %179 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %174, i64 0, i32 5, i32 5
  %180 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %179, align 8
  %181 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %180, i64 0, i32 55
  store i8 0, i8* %181, align 4
  %182 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %174, i64 0, i32 5, i32 6
  store i8 0, i8* %182, align 8
  %183 = load i64, i64* %80, align 8
  %184 = or i64 %183, 140737488355328
  store i64 %184, i64* %80, align 8
  %185 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  call void @_ZN2gl10StateCache25onProgramExecutableChangeEPNS_7ContextE(%"class.gl::StateCache"* %185, %"class.gl::Context"* %0) #21
  br label %186

186:                                              ; preds = %52, %40, %93, %178, %172, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context25convertPpoToComputeOrDrawEb(%"class.gl::Context"*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %4 = load %"class.gl::Program"*, %"class.gl::Program"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %6 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %4, null
  %8 = icmp ne %"class.gl::ProgramPipeline"* %6, null
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %20

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %6, i64 0, i32 5, i32 5
  %12 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %11, align 8
  %13 = zext i1 %1 to i8
  %14 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %12, i64 0, i32 55
  store i8 %13, i8* %14, align 4
  %15 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %6, i64 0, i32 5, i32 6
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = or i64 %17, 140737488355328
  store i64 %18, i64* %16, align 8
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache25onProgramExecutableChangeEPNS_7ContextE(%"class.gl::StateCache"* %19, %"class.gl::Context"* %0)
  br label %20

20:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23dispatchComputeIndirectEl(%"class.gl::Context"*, i64) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.angle::BitSetT.168", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %5 = load %"class.gl::Program"*, %"class.gl::Program"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %7 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %6, align 8
  %8 = icmp eq %"class.gl::Program"* %5, null
  %9 = icmp ne %"class.gl::ProgramPipeline"* %7, null
  %10 = and i1 %8, %9
  br i1 %10, label %11, label %22

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %7, i64 0, i32 5, i32 5
  %13 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %12, align 8
  %14 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %13, i64 0, i32 55
  store i8 1, i8* %14, align 4
  %15 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %7, i64 0, i32 5, i32 6
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = or i64 %17, 140737488355328
  store i64 %18, i64* %16, align 8
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache25onProgramExecutableChangeEPNS_7ContextE(%"class.gl::StateCache"* %19, %"class.gl::Context"* %0) #21
  %20 = load %"class.gl::Program"*, %"class.gl::Program"** %4, align 8
  %21 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %6, align 8
  br label %22

22:                                               ; preds = %11, %2
  %23 = phi %"class.gl::ProgramPipeline"* [ %7, %2 ], [ %21, %11 ]
  %24 = phi %"class.gl::Program"* [ %5, %2 ], [ %20, %11 ]
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %26 = icmp eq %"class.gl::Program"* %24, null
  %27 = icmp ne %"class.gl::ProgramPipeline"* %23, null
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = tail call i32 @_ZN2gl15ProgramPipeline4linkEPKNS_7ContextE(%"class.gl::ProgramPipeline"* nonnull %23, %"class.gl::Context"* %0) #21
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32, !prof !9

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 8
  tail call void @_ZN2gl8ErrorSet11handleErrorEjPKcS2_S2_j(%"class.gl::ErrorSet"* %33, i32 1282, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__._ZN2gl7Context18prepareForDispatchEv, i64 0, i64 0), i32 4018) #21
  br label %166

34:                                               ; preds = %29, %22
  %35 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %36 = load i64, i64* %35, align 8, !noalias !502
  %37 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 63, i32 0
  %38 = load i64, i64* %37, align 8, !noalias !502
  %39 = and i64 %38, %36
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %64, label %41

41:                                               ; preds = %34
  %42 = tail call i64 @llvm.cttz.i64(i64 %39, i1 true) #21, !range !73
  %43 = bitcast %"class.gl::State"* %25 to i8*
  br label %44

44:                                               ; preds = %56, %41
  %45 = phi i64 [ %42, %41 ], [ %61, %56 ]
  %46 = phi i64 [ %39, %41 ], [ %59, %56 ]
  %47 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %45, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds i8, i8* %43, i64 %48
  %50 = bitcast i8* %49 to %"class.gl::State"*
  %51 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %45, i32 0
  %52 = bitcast i64* %51 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %53 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %52, align 16
  %54 = tail call i32 %53(%"class.gl::State"* %50, %"class.gl::Context"* %0, i32 3) #21
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %166, label %56

56:                                               ; preds = %44
  %57 = shl i64 1, %45
  %58 = xor i64 %57, -1
  %59 = and i64 %46, %58
  %60 = icmp eq i64 %59, 0
  %61 = tail call i64 @llvm.cttz.i64(i64 %59, i1 true) #21, !range !73
  br i1 %60, label %62, label %44

62:                                               ; preds = %56
  %63 = load i64, i64* %35, align 8
  br label %64

64:                                               ; preds = %62, %34
  %65 = phi i64 [ %63, %62 ], [ %36, %34 ]
  %66 = and i64 %39, 4095
  %67 = xor i64 %66, 4095
  %68 = and i64 %65, %67
  store i64 %68, i64* %35, align 8
  %69 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 62
  %70 = bitcast %"class.angle::BitSetT.168"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #21
  %71 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %3, i64 0, i32 0
  %72 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %73 = load i64, i64* %72, align 8, !noalias !505
  %74 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %69, i64 0, i32 0
  %75 = load i64, i64* %74, align 8, !noalias !505
  %76 = and i64 %75, %73
  store i64 %76, i64* %71, align 8, !alias.scope !505
  %77 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %78 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %77, align 8
  %79 = bitcast %"class.rx::ContextImpl"* %78 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %80 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %79, align 8
  %81 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %80, i64 51
  %82 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %81, align 8
  %83 = call i32 %82(%"class.rx::ContextImpl"* %78, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* nonnull dereferenceable(8) %3, %"class.angle::BitSetT.168"* dereferenceable(8) %69) #21
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %86

85:                                               ; preds = %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #21
  br label %166

86:                                               ; preds = %64
  %87 = load i64, i64* %71, align 8, !noalias !508
  %88 = xor i64 %87, -1
  %89 = load i64, i64* %72, align 8
  %90 = and i64 %89, %88
  store i64 %90, i64* %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #21
  %91 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %77, align 8
  %92 = bitcast %"class.rx::ContextImpl"* %91 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i64)***
  %93 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i64)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i64)*** %92, align 8
  %94 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i64)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i64)** %93, i64 61
  %95 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i64)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i64)** %94, align 8
  %96 = call i32 %95(%"class.rx::ContextImpl"* %91, %"class.gl::Context"* %0, i64 %1) #21
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %166, label %98

98:                                               ; preds = %86
  %99 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 11, i32 0
  %100 = load i64, i64* %99, align 8, !noalias !511
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %98
  %103 = call i64 @llvm.cttz.i64(i64 %100, i1 true) #21, !range !73
  br label %120

104:                                              ; preds = %128, %98
  %105 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 0, i32 0
  %106 = load i64, i64* %105, align 8, !noalias !514
  %107 = icmp eq i64 %106, 0
  %108 = call i64 @llvm.cttz.i64(i64 %106, i1 true) #21, !range !73
  br i1 %107, label %109, label %115

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 1, i32 0
  %111 = load i64, i64* %110, align 8, !noalias !514
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %166, label %113

113:                                              ; preds = %109
  %114 = call i64 @llvm.cttz.i64(i64 %111, i1 true) #21, !range !73
  br label %115

115:                                              ; preds = %113, %104
  %116 = phi i64 [ 0, %104 ], [ 1, %113 ]
  %117 = phi i64 [ %106, %104 ], [ %111, %113 ]
  %118 = phi i64 [ %108, %104 ], [ %114, %113 ]
  %119 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 77, i32 0, i32 0
  br label %134

120:                                              ; preds = %128, %102
  %121 = phi i64 [ %103, %102 ], [ %133, %128 ]
  %122 = phi i64 [ %100, %102 ], [ %131, %128 ]
  %123 = call dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State29getIndexedShaderStorageBufferEm(%"class.gl::State"* %25, i64 %121) #21
  %124 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %123, i64 0, i32 0, i32 0, i32 1
  %125 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %124, align 8
  %126 = icmp eq %"class.gl::Buffer"* %125, null
  br i1 %126, label %128, label %127

127:                                              ; preds = %120
  call void @_ZN2gl6Buffer13onDataChangedEv(%"class.gl::Buffer"* nonnull %125) #21
  br label %128

128:                                              ; preds = %127, %120
  %129 = shl i64 1, %121
  %130 = xor i64 %129, -1
  %131 = and i64 %122, %130
  %132 = icmp eq i64 %131, 0
  %133 = call i64 @llvm.cttz.i64(i64 %131, i1 true) #21, !range !73
  br i1 %132, label %104, label %120

134:                                              ; preds = %161, %115
  %135 = phi i64 [ %118, %115 ], [ %164, %161 ]
  %136 = phi i64 [ %117, %115 ], [ %163, %161 ]
  %137 = phi i64 [ %116, %115 ], [ %162, %161 ]
  %138 = shl i64 %137, 6
  %139 = add i64 %138, %135
  %140 = load %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"** %119, align 8
  %141 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %140, i64 %139, i32 0, i32 0, i32 1
  %142 = load %"class.gl::Texture"*, %"class.gl::Texture"** %141, align 8
  %143 = icmp eq %"class.gl::Texture"* %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %134
  %145 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %142, i64 0, i32 2, i32 0, i32 0
  call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %145, i32 1) #21
  br label %146

146:                                              ; preds = %144, %134
  %147 = shl i64 1, %135
  %148 = xor i64 %147, -1
  %149 = and i64 %136, %148
  %150 = icmp eq i64 %149, 0
  %151 = call i64 @llvm.cttz.i64(i64 %149, i1 true) #21, !range !73
  br i1 %150, label %152, label %161

152:                                              ; preds = %146
  %153 = add i64 %137, 1
  %154 = icmp ult i64 %153, 2
  br i1 %154, label %155, label %166

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 12, i32 0, i32 0, i64 %153, i32 0
  %157 = load i64, i64* %156, align 8, !noalias !517
  %158 = icmp eq i64 %157, 0
  %159 = call i64 @llvm.cttz.i64(i64 %157, i1 true) #21, !range !73
  %160 = select i1 %158, i64 0, i64 %159
  br label %161

161:                                              ; preds = %155, %146
  %162 = phi i64 [ %153, %155 ], [ %137, %146 ]
  %163 = phi i64 [ %157, %155 ], [ %149, %146 ]
  %164 = phi i64 [ %160, %155 ], [ %151, %146 ]
  %165 = icmp eq i64 %163, 0
  br i1 %165, label %166, label %134

166:                                              ; preds = %44, %161, %152, %86, %32, %85, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12texStorage2DENS_11TextureTypeEijii(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca %"struct.gl::Extents", align 4
  %8 = bitcast %"struct.gl::Extents"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #21
  %9 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %7, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %7, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %7, i64 0, i32 2
  store i32 %4, i32* %9, align 4
  store i32 %5, i32* %10, align 4
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %13 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %12, i8 zeroext %1) #21
  %14 = call i32 @_ZN2gl7Texture10setStorageEPNS_7ContextENS_11TextureTypeEijRKNS_7ExtentsE(%"class.gl::Texture"* %13, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, %"struct.gl::Extents"* nonnull dereferenceable(12) %7) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #21
  ret void
}

declare i32 @_ZN2gl7Texture10setStorageEPNS_7ContextENS_11TextureTypeEijRKNS_7ExtentsE(%"class.gl::Texture"*, %"class.gl::Context"*, i8 zeroext, i32, i32, %"struct.gl::Extents"* dereferenceable(12)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12texStorage3DENS_11TextureTypeEijiii(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %8 = alloca %"struct.gl::Extents", align 4
  %9 = bitcast %"struct.gl::Extents"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #21
  %10 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %8, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %8, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %8, i64 0, i32 2
  store i32 %4, i32* %10, align 4
  store i32 %5, i32* %11, align 4
  store i32 %6, i32* %12, align 4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %14 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %13, i8 zeroext %1) #21
  %15 = call i32 @_ZN2gl7Texture10setStorageEPNS_7ContextENS_11TextureTypeEijRKNS_7ExtentsE(%"class.gl::Texture"* %14, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, %"struct.gl::Extents"* nonnull dereferenceable(12) %8) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13memoryBarrierEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %3, align 8
  %5 = bitcast %"class.rx::ContextImpl"* %4 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32)***
  %6 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32)** %6, i64 62
  %8 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32)** %7, align 8
  %9 = tail call i32 %8(%"class.rx::ContextImpl"* %4, %"class.gl::Context"* %0, i32 %1) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21memoryBarrierByRegionEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %3, align 8
  %5 = bitcast %"class.rx::ContextImpl"* %4 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32)***
  %6 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32)** %6, i64 63
  %8 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i32)** %7, align 8
  %9 = tail call i32 %8(%"class.rx::ContextImpl"* %4, %"class.gl::Context"* %0, i32 %1) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15multiDrawArraysENS_13PrimitiveModeEPKiS3_i(%"class.gl::Context"*, i8 zeroext, i32*, i32*, i32) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %7 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %6, align 8
  %8 = icmp eq %"class.gl::GLES1Renderer"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %11 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %7, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %10) #21
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %67, label %13

13:                                               ; preds = %9, %5
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %15 = load i64, i64* %14, align 8, !noalias !520
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %17 = load i64, i64* %16, align 8, !noalias !520
  %18 = and i64 %17, %15
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %44, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %22 = tail call i64 @llvm.cttz.i64(i64 %18, i1 true) #21, !range !73
  %23 = bitcast %"class.gl::State"* %21 to i8*
  br label %24

24:                                               ; preds = %36, %20
  %25 = phi i64 [ %22, %20 ], [ %41, %36 ]
  %26 = phi i64 [ %18, %20 ], [ %39, %36 ]
  %27 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %25, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %23, i64 %28
  %30 = bitcast i8* %29 to %"class.gl::State"*
  %31 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %25, i32 0
  %32 = bitcast i64* %31 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %33 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %32, align 16
  %34 = tail call i32 %33(%"class.gl::State"* %30, %"class.gl::Context"* %0, i32 4) #21
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %67, label %36

36:                                               ; preds = %24
  %37 = shl i64 1, %25
  %38 = xor i64 %37, -1
  %39 = and i64 %26, %38
  %40 = icmp eq i64 %39, 0
  %41 = tail call i64 @llvm.cttz.i64(i64 %39, i1 true) #21, !range !73
  br i1 %40, label %42, label %24

42:                                               ; preds = %36
  %43 = load i64, i64* %14, align 8
  br label %44

44:                                               ; preds = %42, %13
  %45 = phi i64 [ %43, %42 ], [ %15, %13 ]
  %46 = and i64 %18, 4095
  %47 = xor i64 %46, 4095
  %48 = and i64 %45, %47
  store i64 %48, i64* %14, align 8
  %49 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %50 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %51 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %53 = bitcast %"class.rx::ContextImpl"* %51 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %54 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %53, align 8
  %55 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %54, i64 51
  %56 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %55, align 8
  %57 = tail call i32 %56(%"class.rx::ContextImpl"* %51, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %49, %"class.angle::BitSetT.168"* dereferenceable(8) %52) #21
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %67, label %59

59:                                               ; preds = %44
  %60 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %60, align 8
  %61 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %50, align 8
  %62 = bitcast %"class.rx::ContextImpl"* %61 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32)***
  %63 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32)*** %62, align 8
  %64 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32)** %63, i64 35
  %65 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32)** %64, align 8
  %66 = tail call i32 %65(%"class.rx::ContextImpl"* %61, %"class.gl::Context"* %0, i8 zeroext %1, i32* %2, i32* %3, i32 %4) #21
  br label %67

67:                                               ; preds = %24, %44, %9, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context24multiDrawArraysInstancedENS_13PrimitiveModeEPKiS3_S3_i(%"class.gl::Context"*, i8 zeroext, i32*, i32*, i32*, i32) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %8 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %7, align 8
  %9 = icmp eq %"class.gl::GLES1Renderer"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %12 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %8, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %11) #21
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %68, label %14

14:                                               ; preds = %10, %6
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %16 = load i64, i64* %15, align 8, !noalias !523
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %18 = load i64, i64* %17, align 8, !noalias !523
  %19 = and i64 %18, %16
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %45, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %23 = tail call i64 @llvm.cttz.i64(i64 %19, i1 true) #21, !range !73
  %24 = bitcast %"class.gl::State"* %22 to i8*
  br label %25

25:                                               ; preds = %37, %21
  %26 = phi i64 [ %23, %21 ], [ %42, %37 ]
  %27 = phi i64 [ %19, %21 ], [ %40, %37 ]
  %28 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %26, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %24, i64 %29
  %31 = bitcast i8* %30 to %"class.gl::State"*
  %32 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %26, i32 0
  %33 = bitcast i64* %32 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %34 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %33, align 16
  %35 = tail call i32 %34(%"class.gl::State"* %31, %"class.gl::Context"* %0, i32 4) #21
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %68, label %37

37:                                               ; preds = %25
  %38 = shl i64 1, %26
  %39 = xor i64 %38, -1
  %40 = and i64 %27, %39
  %41 = icmp eq i64 %40, 0
  %42 = tail call i64 @llvm.cttz.i64(i64 %40, i1 true) #21, !range !73
  br i1 %41, label %43, label %25

43:                                               ; preds = %37
  %44 = load i64, i64* %15, align 8
  br label %45

45:                                               ; preds = %43, %14
  %46 = phi i64 [ %44, %43 ], [ %16, %14 ]
  %47 = and i64 %19, 4095
  %48 = xor i64 %47, 4095
  %49 = and i64 %46, %48
  store i64 %49, i64* %15, align 8
  %50 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %52 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %54 = bitcast %"class.rx::ContextImpl"* %52 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %55 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %54, align 8
  %56 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %55, i64 51
  %57 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %56, align 8
  %58 = tail call i32 %57(%"class.rx::ContextImpl"* %52, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %50, %"class.angle::BitSetT.168"* dereferenceable(8) %53) #21
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %68, label %60

60:                                               ; preds = %45
  %61 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %61, align 8
  %62 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %51, align 8
  %63 = bitcast %"class.rx::ContextImpl"* %62 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32)***
  %64 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32)*** %63, align 8
  %65 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32)** %64, i64 36
  %66 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32)** %65, align 8
  %67 = tail call i32 %66(%"class.rx::ContextImpl"* %62, %"class.gl::Context"* %0, i8 zeroext %1, i32* %2, i32* %3, i32* %4, i32 %5) #21
  br label %68

68:                                               ; preds = %25, %45, %10, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17multiDrawElementsENS_13PrimitiveModeEPKiNS_16DrawElementsTypeEPKPKvi(%"class.gl::Context"*, i8 zeroext, i32*, i64, i8**, i32) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %8 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %7, align 8
  %9 = icmp eq %"class.gl::GLES1Renderer"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %12 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %8, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %11) #21
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %68, label %14

14:                                               ; preds = %10, %6
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %16 = load i64, i64* %15, align 8, !noalias !526
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %18 = load i64, i64* %17, align 8, !noalias !526
  %19 = and i64 %18, %16
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %45, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %23 = tail call i64 @llvm.cttz.i64(i64 %19, i1 true) #21, !range !73
  %24 = bitcast %"class.gl::State"* %22 to i8*
  br label %25

25:                                               ; preds = %37, %21
  %26 = phi i64 [ %23, %21 ], [ %42, %37 ]
  %27 = phi i64 [ %19, %21 ], [ %40, %37 ]
  %28 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %26, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %24, i64 %29
  %31 = bitcast i8* %30 to %"class.gl::State"*
  %32 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %26, i32 0
  %33 = bitcast i64* %32 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %34 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %33, align 16
  %35 = tail call i32 %34(%"class.gl::State"* %31, %"class.gl::Context"* %0, i32 4) #21
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %68, label %37

37:                                               ; preds = %25
  %38 = shl i64 1, %26
  %39 = xor i64 %38, -1
  %40 = and i64 %27, %39
  %41 = icmp eq i64 %40, 0
  %42 = tail call i64 @llvm.cttz.i64(i64 %40, i1 true) #21, !range !73
  br i1 %41, label %43, label %25

43:                                               ; preds = %37
  %44 = load i64, i64* %15, align 8
  br label %45

45:                                               ; preds = %43, %14
  %46 = phi i64 [ %44, %43 ], [ %16, %14 ]
  %47 = and i64 %19, 4095
  %48 = xor i64 %47, 4095
  %49 = and i64 %46, %48
  store i64 %49, i64* %15, align 8
  %50 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %52 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %54 = bitcast %"class.rx::ContextImpl"* %52 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %55 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %54, align 8
  %56 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %55, i64 51
  %57 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %56, align 8
  %58 = tail call i32 %57(%"class.rx::ContextImpl"* %52, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %50, %"class.angle::BitSetT.168"* dereferenceable(8) %53) #21
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %68, label %60

60:                                               ; preds = %45
  %61 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %61, align 8
  %62 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %51, align 8
  %63 = bitcast %"class.rx::ContextImpl"* %62 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32)***
  %64 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32)*** %63, align 8
  %65 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32)** %64, i64 37
  %66 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32)** %65, align 8
  %67 = tail call i32 %66(%"class.rx::ContextImpl"* %62, %"class.gl::Context"* %0, i8 zeroext %1, i32* %2, i64 %3, i8** %4, i32 %5) #21
  br label %68

68:                                               ; preds = %25, %45, %10, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context26multiDrawElementsInstancedENS_13PrimitiveModeEPKiNS_16DrawElementsTypeEPKPKvS3_i(%"class.gl::Context"*, i8 zeroext, i32*, i64, i8**, i32*, i32) local_unnamed_addr #1 align 2 {
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %9 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %8, align 8
  %10 = icmp eq %"class.gl::GLES1Renderer"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %13 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %9, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %12) #21
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %69, label %15

15:                                               ; preds = %11, %7
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %17 = load i64, i64* %16, align 8, !noalias !529
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %19 = load i64, i64* %18, align 8, !noalias !529
  %20 = and i64 %19, %17
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %46, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %24 = tail call i64 @llvm.cttz.i64(i64 %20, i1 true) #21, !range !73
  %25 = bitcast %"class.gl::State"* %23 to i8*
  br label %26

26:                                               ; preds = %38, %22
  %27 = phi i64 [ %24, %22 ], [ %43, %38 ]
  %28 = phi i64 [ %20, %22 ], [ %41, %38 ]
  %29 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %27, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i8, i8* %25, i64 %30
  %32 = bitcast i8* %31 to %"class.gl::State"*
  %33 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %27, i32 0
  %34 = bitcast i64* %33 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %35 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %34, align 16
  %36 = tail call i32 %35(%"class.gl::State"* %32, %"class.gl::Context"* %0, i32 4) #21
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %69, label %38

38:                                               ; preds = %26
  %39 = shl i64 1, %27
  %40 = xor i64 %39, -1
  %41 = and i64 %28, %40
  %42 = icmp eq i64 %41, 0
  %43 = tail call i64 @llvm.cttz.i64(i64 %41, i1 true) #21, !range !73
  br i1 %42, label %44, label %26

44:                                               ; preds = %38
  %45 = load i64, i64* %16, align 8
  br label %46

46:                                               ; preds = %44, %15
  %47 = phi i64 [ %45, %44 ], [ %17, %15 ]
  %48 = and i64 %20, 4095
  %49 = xor i64 %48, 4095
  %50 = and i64 %47, %49
  store i64 %50, i64* %16, align 8
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %52 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %53 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %55 = bitcast %"class.rx::ContextImpl"* %53 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %56 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %56, i64 51
  %58 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %57, align 8
  %59 = tail call i32 %58(%"class.rx::ContextImpl"* %53, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %51, %"class.angle::BitSetT.168"* dereferenceable(8) %54) #21
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %69, label %61

61:                                               ; preds = %46
  %62 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %62, align 8
  %63 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %52, align 8
  %64 = bitcast %"class.rx::ContextImpl"* %63 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32)***
  %65 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32)** %65, i64 38
  %67 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32)** %66, align 8
  %68 = tail call i32 %67(%"class.rx::ContextImpl"* %63, %"class.gl::Context"* %0, i8 zeroext %1, i32* %2, i64 %3, i8** %4, i32* %5, i32 %6) #21
  br label %69

69:                                               ; preds = %26, %46, %11, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context31drawArraysInstancedBaseInstanceENS_13PrimitiveModeEiiij(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.rx::ResetBaseVertexBaseInstance", align 8
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 18
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = zext i8 %1 to i64
  %13 = getelementptr inbounds %"class.angle::PackedEnumMap.1054", %"class.angle::PackedEnumMap.1054"* @_ZN2glL23kMinimumPrimitiveCountsE, i64 0, i32 0, i32 0, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %3
  br i1 %15, label %16, label %25

16:                                               ; preds = %6, %11
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %18 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %17, align 8
  %19 = bitcast %"class.rx::ContextImpl"* %18 to i32 (%"class.rx::ContextImpl"*)***
  %20 = load i32 (%"class.rx::ContextImpl"*)**, i32 (%"class.rx::ContextImpl"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %20, i64 47
  %22 = load i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %21, align 8
  %23 = tail call i32 %22(%"class.rx::ContextImpl"* %18) #21
  br label %24

24:                                               ; preds = %44, %64, %29, %16, %114
  ret void

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %27 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %26, align 8
  %28 = icmp eq %"class.gl::GLES1Renderer"* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %31 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %27, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %30) #21
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %24, label %33

33:                                               ; preds = %29, %25
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %35 = load i64, i64* %34, align 8, !noalias !532
  %36 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %37 = load i64, i64* %36, align 8, !noalias !532
  %38 = and i64 %37, %35
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %64, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %42 = tail call i64 @llvm.cttz.i64(i64 %38, i1 true) #21, !range !73
  %43 = bitcast %"class.gl::State"* %41 to i8*
  br label %44

44:                                               ; preds = %56, %40
  %45 = phi i64 [ %42, %40 ], [ %61, %56 ]
  %46 = phi i64 [ %38, %40 ], [ %59, %56 ]
  %47 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %45, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds i8, i8* %43, i64 %48
  %50 = bitcast i8* %49 to %"class.gl::State"*
  %51 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %45, i32 0
  %52 = bitcast i64* %51 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %53 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %52, align 16
  %54 = tail call i32 %53(%"class.gl::State"* %50, %"class.gl::Context"* %0, i32 4) #21
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %24, label %56

56:                                               ; preds = %44
  %57 = shl i64 1, %45
  %58 = xor i64 %57, -1
  %59 = and i64 %46, %58
  %60 = icmp eq i64 %59, 0
  %61 = tail call i64 @llvm.cttz.i64(i64 %59, i1 true) #21, !range !73
  br i1 %60, label %62, label %44

62:                                               ; preds = %56
  %63 = load i64, i64* %34, align 8
  br label %64

64:                                               ; preds = %62, %33
  %65 = phi i64 [ %63, %62 ], [ %35, %33 ]
  %66 = and i64 %38, 4095
  %67 = xor i64 %66, 4095
  %68 = and i64 %65, %67
  store i64 %68, i64* %34, align 8
  %69 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %70 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %71 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %73 = bitcast %"class.rx::ContextImpl"* %71 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %74 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %73, align 8
  %75 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %74, i64 51
  %76 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %75, align 8
  %77 = tail call i32 %76(%"class.rx::ContextImpl"* %71, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %69, %"class.angle::BitSetT.168"* dereferenceable(8) %72) #21
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %24, label %79

79:                                               ; preds = %64
  %80 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %82 = load %"class.gl::Program"*, %"class.gl::Program"** %81, align 8
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %95, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  %89 = load %"class.gl::Program"*, %"class.gl::Program"** %81, align 8
  %90 = icmp eq %"class.gl::Program"* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %84, %88
  %92 = phi %"class.gl::Program"* [ %89, %88 ], [ %82, %84 ]
  %93 = tail call zeroext i1 @_ZNK2gl7Program22hasBaseInstanceUniformEv(%"class.gl::Program"* nonnull %92) #21
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  tail call void @_ZN2gl7Program22setBaseInstanceUniformEj(%"class.gl::Program"* nonnull %92, i32 %5) #21
  br label %95

95:                                               ; preds = %79, %88, %94, %91
  %96 = phi i1 [ true, %94 ], [ false, %91 ], [ false, %88 ], [ false, %79 ]
  %97 = phi %"class.gl::Program"* [ %92, %94 ], [ %92, %91 ], [ null, %88 ], [ null, %79 ]
  %98 = bitcast %"class.rx::ResetBaseVertexBaseInstance"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #21
  %99 = bitcast %"class.rx::ResetBaseVertexBaseInstance"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 16, i1 false)
  call void @_ZN2rx27ResetBaseVertexBaseInstanceC1EPN2gl7ProgramEbb(%"class.rx::ResetBaseVertexBaseInstance"* nonnull %7, %"class.gl::Program"* %97, i1 zeroext false, i1 zeroext %96) #21
  %100 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %70, align 8
  %101 = bitcast %"class.rx::ContextImpl"* %100 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i32)***
  %102 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i32)*** %101, align 8
  %103 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i32)** %102, i64 25
  %104 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32, i32, i32)** %103, align 8
  %105 = call i32 %104(%"class.rx::ContextImpl"* %100, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, i32 %4, i32 %5) #21
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %114, label %107

107:                                              ; preds = %95
  %108 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 9
  %109 = load i8, i8* %108, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 86, i32 0, i32 1
  %113 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %112, align 8
  call void @_ZN2gl17TransformFeedback15onVerticesDrawnEPKNS_7ContextEii(%"class.gl::TransformFeedback"* %113, %"class.gl::Context"* %0, i32 %3, i32 1) #21
  br label %114

114:                                              ; preds = %95, %111, %107
  call void @_ZN2rx27ResetBaseVertexBaseInstanceD1Ev(%"class.rx::ResetBaseVertexBaseInstance"* nonnull %7) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #21
  br label %24
}

declare zeroext i1 @_ZNK2gl7Program22hasBaseInstanceUniformEv(%"class.gl::Program"*) local_unnamed_addr #3

declare void @_ZN2gl7Program22setBaseInstanceUniformEj(%"class.gl::Program"*, i32) local_unnamed_addr #3

declare void @_ZN2rx27ResetBaseVertexBaseInstanceC1EPN2gl7ProgramEbb(%"class.rx::ResetBaseVertexBaseInstance"*, %"class.gl::Program"*, i1 zeroext, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2rx27ResetBaseVertexBaseInstanceD1Ev(%"class.rx::ResetBaseVertexBaseInstance"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context43drawElementsInstancedBaseVertexBaseInstanceENS_13PrimitiveModeEiNS_16DrawElementsTypeEPKviij(%"class.gl::Context"*, i8 zeroext, i32, i64, i8*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %9 = alloca %"class.rx::ResetBaseVertexBaseInstance", align 8
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 18
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = zext i8 %1 to i64
  %15 = getelementptr inbounds %"class.angle::PackedEnumMap.1054", %"class.angle::PackedEnumMap.1054"* @_ZN2glL23kMinimumPrimitiveCountsE, i64 0, i32 0, i32 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, %2
  br i1 %17, label %18, label %27

18:                                               ; preds = %8, %13
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %20 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %19, align 8
  %21 = bitcast %"class.rx::ContextImpl"* %20 to i32 (%"class.rx::ContextImpl"*)***
  %22 = load i32 (%"class.rx::ContextImpl"*)**, i32 (%"class.rx::ContextImpl"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %22, i64 47
  %24 = load i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %23, align 8
  %25 = tail call i32 %24(%"class.rx::ContextImpl"* %20) #21
  br label %26

26:                                               ; preds = %46, %66, %31, %18, %101
  ret void

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %29 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %28, align 8
  %30 = icmp eq %"class.gl::GLES1Renderer"* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %33 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %29, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %32) #21
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %26, label %35

35:                                               ; preds = %31, %27
  %36 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %37 = load i64, i64* %36, align 8, !noalias !535
  %38 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %39 = load i64, i64* %38, align 8, !noalias !535
  %40 = and i64 %39, %37
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %66, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %44 = tail call i64 @llvm.cttz.i64(i64 %40, i1 true) #21, !range !73
  %45 = bitcast %"class.gl::State"* %43 to i8*
  br label %46

46:                                               ; preds = %58, %42
  %47 = phi i64 [ %44, %42 ], [ %63, %58 ]
  %48 = phi i64 [ %40, %42 ], [ %61, %58 ]
  %49 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %47, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %45, i64 %50
  %52 = bitcast i8* %51 to %"class.gl::State"*
  %53 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %47, i32 0
  %54 = bitcast i64* %53 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %55 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %54, align 16
  %56 = tail call i32 %55(%"class.gl::State"* %52, %"class.gl::Context"* %0, i32 4) #21
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %26, label %58

58:                                               ; preds = %46
  %59 = shl i64 1, %47
  %60 = xor i64 %59, -1
  %61 = and i64 %48, %60
  %62 = icmp eq i64 %61, 0
  %63 = tail call i64 @llvm.cttz.i64(i64 %61, i1 true) #21, !range !73
  br i1 %62, label %64, label %46

64:                                               ; preds = %58
  %65 = load i64, i64* %36, align 8
  br label %66

66:                                               ; preds = %64, %35
  %67 = phi i64 [ %65, %64 ], [ %37, %35 ]
  %68 = and i64 %40, 4095
  %69 = xor i64 %68, 4095
  %70 = and i64 %67, %69
  store i64 %70, i64* %36, align 8
  %71 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %72 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %73 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %72, align 8
  %74 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %75 = bitcast %"class.rx::ContextImpl"* %73 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %76 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %75, align 8
  %77 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %76, i64 51
  %78 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %77, align 8
  %79 = tail call i32 %78(%"class.rx::ContextImpl"* %73, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %71, %"class.angle::BitSetT.168"* dereferenceable(8) %74) #21
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %26, label %81

81:                                               ; preds = %66
  %82 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %82, align 8
  %83 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %84 = load %"class.gl::Program"*, %"class.gl::Program"** %83, align 8
  %85 = icmp eq %"class.gl::Program"* %84, null
  br i1 %85, label %101, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %84, i64 0, i32 11, i32 0, i32 0, i32 0
  %88 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %87, align 8
  %89 = icmp eq %"struct.gl::Program::LinkingState"* %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %86
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %84, %"class.gl::Context"* %0) #21
  %91 = load %"class.gl::Program"*, %"class.gl::Program"** %83, align 8
  %92 = icmp eq %"class.gl::Program"* %91, null
  br i1 %92, label %101, label %93

93:                                               ; preds = %90, %86
  %94 = phi %"class.gl::Program"* [ %91, %90 ], [ %84, %86 ]
  %95 = tail call zeroext i1 @_ZNK2gl7Program20hasBaseVertexUniformEv(%"class.gl::Program"* nonnull %94) #21
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  tail call void @_ZN2gl7Program20setBaseVertexUniformEi(%"class.gl::Program"* nonnull %94, i32 %6) #21
  br label %97

97:                                               ; preds = %93, %96
  %98 = phi i1 [ true, %96 ], [ false, %93 ]
  %99 = tail call zeroext i1 @_ZNK2gl7Program22hasBaseInstanceUniformEv(%"class.gl::Program"* nonnull %94) #21
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  tail call void @_ZN2gl7Program22setBaseInstanceUniformEj(%"class.gl::Program"* nonnull %94, i32 %7) #21
  br label %101

101:                                              ; preds = %90, %81, %100, %97
  %102 = phi i1 [ true, %100 ], [ false, %97 ], [ false, %81 ], [ false, %90 ]
  %103 = phi %"class.gl::Program"* [ %94, %100 ], [ %94, %97 ], [ null, %81 ], [ null, %90 ]
  %104 = phi i1 [ %98, %100 ], [ %98, %97 ], [ false, %81 ], [ false, %90 ]
  %105 = bitcast %"class.rx::ResetBaseVertexBaseInstance"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105) #21
  %106 = bitcast %"class.rx::ResetBaseVertexBaseInstance"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 16, i1 false)
  call void @_ZN2rx27ResetBaseVertexBaseInstanceC1EPN2gl7ProgramEbb(%"class.rx::ResetBaseVertexBaseInstance"* nonnull %9, %"class.gl::Program"* %103, i1 zeroext %104, i1 zeroext %102) #21
  %107 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %72, align 8
  %108 = bitcast %"class.rx::ContextImpl"* %107 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32, i32)***
  %109 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32, i32)*** %108, align 8
  %110 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32, i32)** %109, i64 30
  %111 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32, i32)** %110, align 8
  %112 = call i32 %111(%"class.rx::ContextImpl"* %107, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i64 %3, i8* %4, i32 %5, i32 %6, i32 %7) #21
  call void @_ZN2rx27ResetBaseVertexBaseInstanceD1Ev(%"class.rx::ResetBaseVertexBaseInstance"* nonnull %9) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105) #21
  br label %26
}

declare zeroext i1 @_ZNK2gl7Program20hasBaseVertexUniformEv(%"class.gl::Program"*) local_unnamed_addr #3

declare void @_ZN2gl7Program20setBaseVertexUniformEi(%"class.gl::Program"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context36multiDrawArraysInstancedBaseInstanceENS_13PrimitiveModeEPKiS3_S3_PKji(%"class.gl::Context"*, i8 zeroext, i32*, i32*, i32*, i32*, i32) local_unnamed_addr #1 align 2 {
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %9 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %8, align 8
  %10 = icmp eq %"class.gl::GLES1Renderer"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %13 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %9, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %12) #21
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %69, label %15

15:                                               ; preds = %11, %7
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %17 = load i64, i64* %16, align 8, !noalias !538
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %19 = load i64, i64* %18, align 8, !noalias !538
  %20 = and i64 %19, %17
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %46, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %24 = tail call i64 @llvm.cttz.i64(i64 %20, i1 true) #21, !range !73
  %25 = bitcast %"class.gl::State"* %23 to i8*
  br label %26

26:                                               ; preds = %38, %22
  %27 = phi i64 [ %24, %22 ], [ %43, %38 ]
  %28 = phi i64 [ %20, %22 ], [ %41, %38 ]
  %29 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %27, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i8, i8* %25, i64 %30
  %32 = bitcast i8* %31 to %"class.gl::State"*
  %33 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %27, i32 0
  %34 = bitcast i64* %33 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %35 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %34, align 16
  %36 = tail call i32 %35(%"class.gl::State"* %32, %"class.gl::Context"* %0, i32 4) #21
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %69, label %38

38:                                               ; preds = %26
  %39 = shl i64 1, %27
  %40 = xor i64 %39, -1
  %41 = and i64 %28, %40
  %42 = icmp eq i64 %41, 0
  %43 = tail call i64 @llvm.cttz.i64(i64 %41, i1 true) #21, !range !73
  br i1 %42, label %44, label %26

44:                                               ; preds = %38
  %45 = load i64, i64* %16, align 8
  br label %46

46:                                               ; preds = %44, %15
  %47 = phi i64 [ %45, %44 ], [ %17, %15 ]
  %48 = and i64 %20, 4095
  %49 = xor i64 %48, 4095
  %50 = and i64 %47, %49
  store i64 %50, i64* %16, align 8
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %52 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %53 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %55 = bitcast %"class.rx::ContextImpl"* %53 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %56 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %56, i64 51
  %58 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %57, align 8
  %59 = tail call i32 %58(%"class.rx::ContextImpl"* %53, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %51, %"class.angle::BitSetT.168"* dereferenceable(8) %54) #21
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %69, label %61

61:                                               ; preds = %46
  %62 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %62, align 8
  %63 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %52, align 8
  %64 = bitcast %"class.rx::ContextImpl"* %63 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32*, i32)***
  %65 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32*, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32*, i32)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32*, i32)** %65, i64 39
  %67 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32*, i32)** %66, align 8
  %68 = tail call i32 %67(%"class.rx::ContextImpl"* %63, %"class.gl::Context"* %0, i8 zeroext %1, i32* %2, i32* %3, i32* %4, i32* %5, i32 %6) #21
  br label %69

69:                                               ; preds = %26, %46, %11, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context48multiDrawElementsInstancedBaseVertexBaseInstanceENS_13PrimitiveModeEPKiNS_16DrawElementsTypeEPKPKvS3_S3_PKji(%"class.gl::Context"*, i8 zeroext, i32*, i64, i8**, i32*, i32*, i32*, i32) local_unnamed_addr #1 align 2 {
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %11 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %10, align 8
  %12 = icmp eq %"class.gl::GLES1Renderer"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %15 = tail call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %11, i8 zeroext %1, %"class.gl::Context"* %0, %"class.gl::State"* %14) #21
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %71, label %17

17:                                               ; preds = %13, %9
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %19 = load i64, i64* %18, align 8, !noalias !541
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 51, i32 0
  %21 = load i64, i64* %20, align 8, !noalias !541
  %22 = and i64 %21, %19
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %48, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %26 = tail call i64 @llvm.cttz.i64(i64 %22, i1 true) #21, !range !73
  %27 = bitcast %"class.gl::State"* %25 to i8*
  br label %28

28:                                               ; preds = %40, %24
  %29 = phi i64 [ %26, %24 ], [ %45, %40 ]
  %30 = phi i64 [ %22, %24 ], [ %43, %40 ]
  %31 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %29, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds i8, i8* %27, i64 %32
  %34 = bitcast i8* %33 to %"class.gl::State"*
  %35 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %29, i32 0
  %36 = bitcast i64* %35 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %37 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %36, align 16
  %38 = tail call i32 %37(%"class.gl::State"* %34, %"class.gl::Context"* %0, i32 4) #21
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %71, label %40

40:                                               ; preds = %28
  %41 = shl i64 1, %29
  %42 = xor i64 %41, -1
  %43 = and i64 %30, %42
  %44 = icmp eq i64 %43, 0
  %45 = tail call i64 @llvm.cttz.i64(i64 %43, i1 true) #21, !range !73
  br i1 %44, label %46, label %28

46:                                               ; preds = %40
  %47 = load i64, i64* %18, align 8
  br label %48

48:                                               ; preds = %46, %17
  %49 = phi i64 [ %47, %46 ], [ %19, %17 ]
  %50 = and i64 %22, 4095
  %51 = xor i64 %50, 4095
  %52 = and i64 %49, %51
  store i64 %52, i64* %18, align 8
  %53 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104
  %54 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %55 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 53
  %57 = bitcast %"class.rx::ContextImpl"* %55 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %58 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %57, align 8
  %59 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %58, i64 51
  %60 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %59, align 8
  %61 = tail call i32 %60(%"class.rx::ContextImpl"* %55, %"class.gl::Context"* %0, %"class.angle::BitSetT.168"* dereferenceable(8) %53, %"class.angle::BitSetT.168"* dereferenceable(8) %56) #21
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %71, label %63

63:                                               ; preds = %48
  %64 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %64, align 8
  %65 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %54, align 8
  %66 = bitcast %"class.rx::ContextImpl"* %65 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32*, i32*, i32)***
  %67 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32*, i32*, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32*, i32*, i32)*** %66, align 8
  %68 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32*, i32*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32*, i32*, i32)** %67, i64 40
  %69 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32*, i32*, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32*, i32*, i32)** %68, align 8
  %70 = tail call i32 %69(%"class.rx::ContextImpl"* %65, %"class.gl::Context"* %0, i8 zeroext %1, i32* %2, i64 %3, i8** %4, i32* %5, i32* %6, i32* %7, i32 %8) #21
  br label %71

71:                                               ; preds = %28, %48, %13, %63
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl7Context15provokingVertexENS_25ProvokingVertexConventionE(%"class.gl::Context"* nocapture, i8 zeroext) local_unnamed_addr #19 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = or i64 %4, 1152921504606846976
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 66
  store i8 %1, i8* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context22checkFramebufferStatusEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = tail call %"class.gl::Framebuffer"* @_ZNK2gl5State20getTargetFramebufferEj(%"class.gl::State"* %3, i32 %1) #21
  %5 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %4, i64 0, i32 3
  %6 = tail call zeroext i1 @_ZNK2gl16FramebufferState9isDefaultEv(%"class.gl::FramebufferState"* %5) #21
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %4, i64 0, i32 9, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %4, i64 0, i32 5, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11, %2
  %16 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %4, i64 0, i32 5, i32 1
  br label %19

17:                                               ; preds = %11, %7
  %18 = tail call dereferenceable(16) %"struct.gl::FramebufferStatus"* @_ZNK2gl11Framebuffer15checkStatusImplEPKNS_7ContextE(%"class.gl::Framebuffer"* %4, %"class.gl::Context"* %0) #21
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi %"struct.gl::FramebufferStatus"* [ %16, %15 ], [ %18, %17 ]
  %21 = getelementptr inbounds %"struct.gl::FramebufferStatus", %"struct.gl::FramebufferStatus"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13compileShaderENS_15ShaderProgramIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = tail call %"class.gl::Shader"* @_ZN2gl14GetValidShaderEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::Context"* %0, i32 %1) #21
  %4 = icmp eq %"class.gl::Shader"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN2gl6Shader7compileEPKNS_7ContextE(%"class.gl::Shader"* nonnull %3, %"class.gl::Context"* %0) #21
  br label %6

6:                                                ; preds = %2, %5
  ret void
}

declare %"class.gl::Shader"* @_ZN2gl14GetValidShaderEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13deleteBuffersEiPKNS_8BufferIDE(%"class.gl::Context"*, i32, %"struct.gl::BufferID"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 10
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %8 = bitcast %"class.gl::BufferManager"** %6 to %"class.gl::TypedResourceManager"**
  %9 = zext i32 %1 to i64
  br label %11

10:                                               ; preds = %20, %3
  ret void

11:                                               ; preds = %20, %5
  %12 = phi i64 [ 0, %5 ], [ %22, %20 ]
  %13 = getelementptr inbounds %"struct.gl::BufferID", %"struct.gl::BufferID"* %2, i64 %12, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = load %"class.gl::BufferManager"*, %"class.gl::BufferManager"** %6, align 8
  %16 = tail call %"class.gl::Buffer"* @_ZNK2gl13BufferManager9getBufferENS_8BufferIDE(%"class.gl::BufferManager"* %15, i32 %14) #21
  %17 = icmp eq %"class.gl::Buffer"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  %19 = tail call i32 @_ZN2gl5State12detachBufferEPNS_7ContextEPKNS_6BufferE(%"class.gl::State"* %7, %"class.gl::Context"* %0, %"class.gl::Buffer"* nonnull %16) #21
  br label %20

20:                                               ; preds = %11, %18
  %21 = load %"class.gl::TypedResourceManager"*, %"class.gl::TypedResourceManager"** %8, align 8
  tail call void @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager"* %21, %"class.gl::Context"* %0, i32 %14) #21
  %22 = add nuw nsw i64 %12, 1
  %23 = icmp eq i64 %22, %9
  br i1 %23, label %10, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18deleteFramebuffersEiPKNS_13FramebufferIDE(%"class.gl::Context"*, i32, %"struct.gl::FramebufferID"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %7 = bitcast %"class.gl::FramebufferManager"** %6 to %"class.gl::TypedResourceManager.314"**
  %8 = zext i32 %1 to i64
  br label %10

9:                                                ; preds = %22, %3
  ret void

10:                                               ; preds = %22, %5
  %11 = phi i64 [ 0, %5 ], [ %23, %22 ]
  %12 = getelementptr inbounds %"struct.gl::FramebufferID", %"struct.gl::FramebufferID"* %2, i64 %11, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %6, align 8
  %17 = tail call %"class.gl::Framebuffer"* @_ZNK2gl18FramebufferManager14getFramebufferENS_13FramebufferIDE(%"class.gl::FramebufferManager"* %16, i32 %13) #21
  %18 = icmp eq %"class.gl::Framebuffer"* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @_ZN2gl7Context17detachFramebufferENS_13FramebufferIDE(%"class.gl::Context"* %0, i32 %13) #21
  br label %20

20:                                               ; preds = %15, %19
  %21 = load %"class.gl::TypedResourceManager.314"*, %"class.gl::TypedResourceManager.314"** %7, align 8
  tail call void @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.314"* %21, %"class.gl::Context"* %0, i32 %13) #21
  br label %22

22:                                               ; preds = %10, %20
  %23 = add nuw nsw i64 %11, 1
  %24 = icmp eq i64 %23, %8
  br i1 %24, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19deleteRenderbuffersEiPKNS_14RenderbufferIDE(%"class.gl::Context"*, i32, %"struct.gl::RenderbufferID"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 13
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %8 = bitcast %"class.gl::RenderbufferManager"** %6 to %"class.gl::TypedResourceManager.279"**
  %9 = zext i32 %1 to i64
  br label %11

10:                                               ; preds = %19, %3
  ret void

11:                                               ; preds = %19, %5
  %12 = phi i64 [ 0, %5 ], [ %21, %19 ]
  %13 = getelementptr inbounds %"struct.gl::RenderbufferID", %"struct.gl::RenderbufferID"* %2, i64 %12, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = load %"class.gl::RenderbufferManager"*, %"class.gl::RenderbufferManager"** %6, align 8
  %16 = tail call %"class.gl::Renderbuffer"* @_ZNK2gl19RenderbufferManager15getRenderbufferENS_14RenderbufferIDE(%"class.gl::RenderbufferManager"* %15, i32 %14) #21
  %17 = icmp eq %"class.gl::Renderbuffer"* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %11
  tail call void @_ZN2gl5State18detachRenderbufferEPKNS_7ContextENS_14RenderbufferIDE(%"class.gl::State"* %7, %"class.gl::Context"* %0, i32 %14) #21
  br label %19

19:                                               ; preds = %11, %18
  %20 = load %"class.gl::TypedResourceManager.279"*, %"class.gl::TypedResourceManager.279"** %8, align 8
  tail call void @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.279"* %20, %"class.gl::Context"* %0, i32 %14) #21
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, %9
  br i1 %22, label %10, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14deleteTexturesEiPKNS_9TextureIDE(%"class.gl::Context"*, i32, %"struct.gl::TextureID"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  br label %8

7:                                                ; preds = %14, %3
  ret void

8:                                                ; preds = %14, %5
  %9 = phi i64 [ 0, %5 ], [ %15, %14 ]
  %10 = getelementptr inbounds %"struct.gl::TextureID", %"struct.gl::TextureID"* %2, i64 %9, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @_ZN2gl7Context13deleteTextureENS_9TextureIDE(%"class.gl::Context"* %0, i32 %11)
  br label %14

14:                                               ; preds = %8, %13
  %15 = add nuw nsw i64 %9, 1
  %16 = icmp eq i64 %15, %6
  br i1 %16, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12detachShaderENS_15ShaderProgramIDES1_(%"class.gl::Context"*, i32, i32) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %5 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %4, align 8
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %10, label %17

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 1
  %12 = load %"class.gl::Program"**, %"class.gl::Program"*** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %12, i64 %6
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %13, align 8
  %15 = icmp eq %"class.gl::Program"* %14, inttoptr (i64 -1 to %"class.gl::Program"*)
  %16 = select i1 %15, %"class.gl::Program"* null, %"class.gl::Program"* %14
  br label %80

17:                                               ; preds = %3
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %6
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %5, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %80, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %64, %10, %77
  %81 = phi %"class.gl::Program"* [ %16, %10 ], [ %79, %77 ], [ null, %64 ]
  %82 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %5, i32 %2) #21
  tail call void @_ZN2gl7Program12detachShaderEPKNS_7ContextEPNS_6ShaderE(%"class.gl::Program"* %81, %"class.gl::Context"* %0, %"class.gl::Shader"* %82) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10genBuffersEiPNS_8BufferIDE(%"class.gl::Context"* nocapture readonly, i32, %"struct.gl::BufferID"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 10
  %7 = zext i32 %1 to i64
  br label %9

8:                                                ; preds = %9, %3
  ret void

9:                                                ; preds = %9, %5
  %10 = phi i64 [ 0, %5 ], [ %14, %9 ]
  %11 = load %"class.gl::BufferManager"*, %"class.gl::BufferManager"** %6, align 8
  %12 = tail call i32 @_ZN2gl13BufferManager12createBufferEv(%"class.gl::BufferManager"* %11) #21
  %13 = getelementptr inbounds %"struct.gl::BufferID", %"struct.gl::BufferID"* %2, i64 %10, i32 0
  store i32 %12, i32* %13, align 4
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, %7
  br i1 %15, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15genFramebuffersEiPNS_13FramebufferIDE(%"class.gl::Context"* nocapture readonly, i32, %"struct.gl::FramebufferID"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %7 = zext i32 %1 to i64
  br label %9

8:                                                ; preds = %9, %3
  ret void

9:                                                ; preds = %9, %5
  %10 = phi i64 [ 0, %5 ], [ %14, %9 ]
  %11 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %6, align 8
  %12 = tail call i32 @_ZN2gl18FramebufferManager17createFramebufferEv(%"class.gl::FramebufferManager"* %11) #21
  %13 = getelementptr inbounds %"struct.gl::FramebufferID", %"struct.gl::FramebufferID"* %2, i64 %10, i32 0
  store i32 %12, i32* %13, align 4
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, %7
  br i1 %15, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16genRenderbuffersEiPNS_14RenderbufferIDE(%"class.gl::Context"* nocapture readonly, i32, %"struct.gl::RenderbufferID"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 13
  %7 = zext i32 %1 to i64
  br label %9

8:                                                ; preds = %9, %3
  ret void

9:                                                ; preds = %9, %5
  %10 = phi i64 [ 0, %5 ], [ %14, %9 ]
  %11 = load %"class.gl::RenderbufferManager"*, %"class.gl::RenderbufferManager"** %6, align 8
  %12 = tail call i32 @_ZN2gl19RenderbufferManager18createRenderbufferEv(%"class.gl::RenderbufferManager"* %11) #21
  %13 = getelementptr inbounds %"struct.gl::RenderbufferID", %"struct.gl::RenderbufferID"* %2, i64 %10, i32 0
  store i32 %12, i32* %13, align 4
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, %7
  br i1 %15, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11genTexturesEiPNS_9TextureIDE(%"class.gl::Context"* nocapture readonly, i32, %"struct.gl::TextureID"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %7 = zext i32 %1 to i64
  br label %9

8:                                                ; preds = %9, %3
  ret void

9:                                                ; preds = %9, %5
  %10 = phi i64 [ 0, %5 ], [ %14, %9 ]
  %11 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %6, align 8
  %12 = tail call i32 @_ZN2gl14TextureManager13createTextureEv(%"class.gl::TextureManager"* %11) #21
  %13 = getelementptr inbounds %"struct.gl::TextureID", %"struct.gl::TextureID"* %2, i64 %10, i32 0
  store i32 %12, i32* %13, align 4
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, %7
  br i1 %15, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15getActiveAttribENS_15ShaderProgramIDEjiPiS2_PjPc(%"class.gl::Context"*, i32, i32, i32, i32*, i32*, i32*, i8*) local_unnamed_addr #5 align 2 {
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %10 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %9, align 8
  %11 = zext i32 %1 to i64
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %10, i64 0, i32 2, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %13, %11
  br i1 %14, label %15, label %21

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %10, i64 0, i32 2, i32 1
  %17 = load %"class.gl::Program"**, %"class.gl::Program"*** %16, align 8
  %18 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %17, i64 %11
  %19 = load %"class.gl::Program"*, %"class.gl::Program"** %18, align 8
  %20 = icmp eq %"class.gl::Program"* %19, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %20, label %92, label %84

21:                                               ; preds = %8
  %22 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %23 = add i64 %22, %11
  %24 = zext i64 %23 to i128
  %25 = mul nuw i128 %24, 11376068507788127593
  %26 = lshr i128 %25, 64
  %27 = xor i128 %26, %25
  %28 = trunc i128 %27 to i64
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %10, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %10, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = lshr i64 %28, 7
  %34 = ptrtoint i8* %30 to i64
  %35 = lshr i64 %34, 12
  %36 = xor i64 %33, %35
  %37 = trunc i128 %27 to i8
  %38 = and i8 %37, 127
  %39 = insertelement <16 x i8> undef, i8 %38, i32 0
  %40 = shufflevector <16 x i8> %39, <16 x i8> undef, <16 x i32> zeroinitializer
  %41 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %10, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %42

42:                                               ; preds = %72, %21
  %43 = phi i64 [ %36, %21 ], [ %74, %72 ]
  %44 = phi i64 [ 0, %21 ], [ %73, %72 ]
  %45 = and i64 %43, %32
  %46 = getelementptr inbounds i8, i8* %30, i64 %45
  %47 = bitcast i8* %46 to <16 x i8>*
  %48 = load <16 x i8>, <16 x i8>* %47, align 1
  %49 = icmp eq <16 x i8> %40, %48
  %50 = bitcast <16 x i1> %49 to i16
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %42
  %53 = zext i16 %50 to i32
  %54 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %41, align 8
  br label %55

55:                                               ; preds = %64, %52
  %56 = phi i32 [ %53, %52 ], [ %66, %64 ]
  %57 = tail call i32 @llvm.cttz.i32(i32 %56, i1 false) #21, !range !8
  %58 = zext i32 %57 to i64
  %59 = add i64 %45, %58
  %60 = and i64 %59, %32
  %61 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %54, i64 %60, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %1
  br i1 %63, label %75, label %64, !prof !9

64:                                               ; preds = %55
  %65 = add i32 %56, -1
  %66 = and i32 %65, %56
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %55

68:                                               ; preds = %64, %42
  %69 = icmp eq <16 x i8> %48, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %92, !prof !10

72:                                               ; preds = %68
  %73 = add i64 %44, 16
  %74 = add i64 %73, %45
  br label %42

75:                                               ; preds = %55
  %76 = getelementptr inbounds i8, i8* %30, i64 %60
  %77 = icmp ne i8* %76, null
  tail call void @llvm.assume(i1 %77) #21
  %78 = load i8, i8* %76, align 1
  %79 = icmp sgt i8 %78, -1
  br i1 %79, label %81, label %80, !prof !9

80:                                               ; preds = %75
  tail call void @llvm.trap() #21
  unreachable

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %54, i64 %60, i32 0, i32 1
  %83 = load %"class.gl::Program"*, %"class.gl::Program"** %82, align 8
  br label %84

84:                                               ; preds = %81, %15
  %85 = phi %"class.gl::Program"* [ %19, %15 ], [ %83, %81 ]
  %86 = icmp eq %"class.gl::Program"* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %85, i64 0, i32 11, i32 0, i32 0, i32 0
  %89 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %88, align 8
  %90 = icmp eq %"struct.gl::Program::LinkingState"* %89, null
  br i1 %90, label %92, label %91

91:                                               ; preds = %87
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %85, %"class.gl::Context"* %0) #21
  br label %92

92:                                               ; preds = %68, %15, %84, %87, %91
  %93 = phi %"class.gl::Program"* [ null, %84 ], [ %85, %87 ], [ %85, %91 ], [ null, %15 ], [ null, %68 ]
  tail call void @_ZNK2gl7Program18getActiveAttributeEjiPiS1_PjPc(%"class.gl::Program"* %93, i32 %2, i32 %3, i32* %4, i32* %5, i32* %6, i8* %7) #21
  ret void
}

declare void @_ZNK2gl7Program18getActiveAttributeEjiPiS1_PjPc(%"class.gl::Program"*, i32, i32, i32*, i32*, i32*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16getActiveUniformENS_15ShaderProgramIDEjiPiS2_PjPc(%"class.gl::Context"*, i32, i32, i32, i32*, i32*, i32*, i8*) local_unnamed_addr #5 align 2 {
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %10 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %9, align 8
  %11 = zext i32 %1 to i64
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %10, i64 0, i32 2, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %13, %11
  br i1 %14, label %15, label %21

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %10, i64 0, i32 2, i32 1
  %17 = load %"class.gl::Program"**, %"class.gl::Program"*** %16, align 8
  %18 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %17, i64 %11
  %19 = load %"class.gl::Program"*, %"class.gl::Program"** %18, align 8
  %20 = icmp eq %"class.gl::Program"* %19, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %20, label %92, label %84

21:                                               ; preds = %8
  %22 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %23 = add i64 %22, %11
  %24 = zext i64 %23 to i128
  %25 = mul nuw i128 %24, 11376068507788127593
  %26 = lshr i128 %25, 64
  %27 = xor i128 %26, %25
  %28 = trunc i128 %27 to i64
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %10, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %10, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = lshr i64 %28, 7
  %34 = ptrtoint i8* %30 to i64
  %35 = lshr i64 %34, 12
  %36 = xor i64 %33, %35
  %37 = trunc i128 %27 to i8
  %38 = and i8 %37, 127
  %39 = insertelement <16 x i8> undef, i8 %38, i32 0
  %40 = shufflevector <16 x i8> %39, <16 x i8> undef, <16 x i32> zeroinitializer
  %41 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %10, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %42

42:                                               ; preds = %72, %21
  %43 = phi i64 [ %36, %21 ], [ %74, %72 ]
  %44 = phi i64 [ 0, %21 ], [ %73, %72 ]
  %45 = and i64 %43, %32
  %46 = getelementptr inbounds i8, i8* %30, i64 %45
  %47 = bitcast i8* %46 to <16 x i8>*
  %48 = load <16 x i8>, <16 x i8>* %47, align 1
  %49 = icmp eq <16 x i8> %40, %48
  %50 = bitcast <16 x i1> %49 to i16
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %42
  %53 = zext i16 %50 to i32
  %54 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %41, align 8
  br label %55

55:                                               ; preds = %64, %52
  %56 = phi i32 [ %53, %52 ], [ %66, %64 ]
  %57 = tail call i32 @llvm.cttz.i32(i32 %56, i1 false) #21, !range !8
  %58 = zext i32 %57 to i64
  %59 = add i64 %45, %58
  %60 = and i64 %59, %32
  %61 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %54, i64 %60, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %1
  br i1 %63, label %75, label %64, !prof !9

64:                                               ; preds = %55
  %65 = add i32 %56, -1
  %66 = and i32 %65, %56
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %55

68:                                               ; preds = %64, %42
  %69 = icmp eq <16 x i8> %48, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %92, !prof !10

72:                                               ; preds = %68
  %73 = add i64 %44, 16
  %74 = add i64 %73, %45
  br label %42

75:                                               ; preds = %55
  %76 = getelementptr inbounds i8, i8* %30, i64 %60
  %77 = icmp ne i8* %76, null
  tail call void @llvm.assume(i1 %77) #21
  %78 = load i8, i8* %76, align 1
  %79 = icmp sgt i8 %78, -1
  br i1 %79, label %81, label %80, !prof !9

80:                                               ; preds = %75
  tail call void @llvm.trap() #21
  unreachable

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %54, i64 %60, i32 0, i32 1
  %83 = load %"class.gl::Program"*, %"class.gl::Program"** %82, align 8
  br label %84

84:                                               ; preds = %81, %15
  %85 = phi %"class.gl::Program"* [ %19, %15 ], [ %83, %81 ]
  %86 = icmp eq %"class.gl::Program"* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %85, i64 0, i32 11, i32 0, i32 0, i32 0
  %89 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %88, align 8
  %90 = icmp eq %"struct.gl::Program::LinkingState"* %89, null
  br i1 %90, label %92, label %91

91:                                               ; preds = %87
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %85, %"class.gl::Context"* %0) #21
  br label %92

92:                                               ; preds = %68, %15, %84, %87, %91
  %93 = phi %"class.gl::Program"* [ null, %84 ], [ %85, %87 ], [ %85, %91 ], [ null, %15 ], [ null, %68 ]
  tail call void @_ZNK2gl7Program16getActiveUniformEjiPiS1_PjPc(%"class.gl::Program"* %93, i32 %2, i32 %3, i32* %4, i32* %5, i32* %6, i8* %7) #21
  ret void
}

declare void @_ZNK2gl7Program16getActiveUniformEjiPiS1_PjPc(%"class.gl::Program"*, i32, i32, i32*, i32*, i32*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18getAttachedShadersENS_15ShaderProgramIDEiPiPS1_(%"class.gl::Context"* nocapture readonly, i32, i32, i32*, %"struct.gl::ShaderProgramID"*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %19

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  %18 = select i1 %17, %"class.gl::Program"* null, %"class.gl::Program"* %16
  br label %82

19:                                               ; preds = %5
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = add i64 %20, %8
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %26, 7
  %32 = ptrtoint i8* %28 to i64
  %33 = lshr i64 %32, 12
  %34 = xor i64 %31, %33
  %35 = trunc i128 %25 to i8
  %36 = and i8 %35, 127
  %37 = insertelement <16 x i8> undef, i8 %36, i32 0
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> zeroinitializer
  %39 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %40

40:                                               ; preds = %70, %19
  %41 = phi i64 [ %34, %19 ], [ %72, %70 ]
  %42 = phi i64 [ 0, %19 ], [ %71, %70 ]
  %43 = and i64 %41, %30
  %44 = getelementptr inbounds i8, i8* %28, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %38, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  %52 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %39, align 8
  br label %53

53:                                               ; preds = %62, %50
  %54 = phi i32 [ %51, %50 ], [ %64, %62 ]
  %55 = tail call i32 @llvm.cttz.i32(i32 %54, i1 false) #21, !range !8
  %56 = zext i32 %55 to i64
  %57 = add i64 %43, %56
  %58 = and i64 %57, %30
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %1
  br i1 %61, label %73, label %62, !prof !9

62:                                               ; preds = %53
  %63 = add i32 %54, -1
  %64 = and i32 %63, %54
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %62, %40
  %67 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %82, !prof !10

70:                                               ; preds = %66
  %71 = add i64 %42, 16
  %72 = add i64 %71, %43
  br label %40

73:                                               ; preds = %53
  %74 = getelementptr inbounds i8, i8* %28, i64 %58
  %75 = icmp ne i8* %74, null
  tail call void @llvm.assume(i1 %75) #21
  %76 = load i8, i8* %74, align 1
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %73
  tail call void @llvm.trap() #21
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 1
  %81 = load %"class.gl::Program"*, %"class.gl::Program"** %80, align 8
  br label %82

82:                                               ; preds = %66, %12, %79
  %83 = phi %"class.gl::Program"* [ %18, %12 ], [ %81, %79 ], [ null, %66 ]
  tail call void @_ZNK2gl7Program18getAttachedShadersEiPiPNS_15ShaderProgramIDE(%"class.gl::Program"* %83, i32 %2, i32* %3, %"struct.gl::ShaderProgramID"* %4) #21
  ret void
}

declare void @_ZNK2gl7Program18getAttachedShadersEiPiPNS_15ShaderProgramIDE(%"class.gl::Program"*, i32, i32*, %"struct.gl::ShaderProgramID"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context17getAttribLocationENS_15ShaderProgramIDEPKc(%"class.gl::Context"*, i32, i8* nocapture readonly) local_unnamed_addr #5 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %16, label %88, label %80

17:                                               ; preds = %3
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %88, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %77, %11
  %81 = phi %"class.gl::Program"* [ %15, %11 ], [ %79, %77 ]
  %82 = icmp eq %"class.gl::Program"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %81, i64 0, i32 11, i32 0, i32 0, i32 0
  %85 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %84, align 8
  %86 = icmp eq %"struct.gl::Program::LinkingState"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %81, %"class.gl::Context"* %0) #21
  br label %88

88:                                               ; preds = %64, %11, %80, %83, %87
  %89 = phi %"class.gl::Program"* [ null, %80 ], [ %81, %83 ], [ %81, %87 ], [ null, %11 ], [ null, %64 ]
  %90 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #21
  %91 = tail call i64 @strlen(i8* %2) #21
  %92 = icmp ugt i64 %91, -17
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  %94 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %94) #28
  unreachable

95:                                               ; preds = %88
  %96 = icmp ult i64 %91, 23
  br i1 %96, label %106, label %97

97:                                               ; preds = %95
  %98 = add nuw i64 %91, 16
  %99 = and i64 %98, -16
  %100 = tail call i8* @_Znwm(i64 %99) #27
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %100, i8** %101, align 8
  %102 = or i64 %99, -9223372036854775808
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %91, i64* %104, align 8
  %105 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %111

106:                                              ; preds = %95
  %107 = trunc i64 %91 to i8
  %108 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  store i8 %107, i8* %109, align 1
  %110 = icmp eq i64 %91, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %106, %97
  %112 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %108, %106 ], [ %105, %97 ]
  %113 = phi i8* [ %90, %106 ], [ %100, %97 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %113, i8* align 1 %2, i64 %91, i1 false) #21
  br label %114

114:                                              ; preds = %106, %111
  %115 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %108, %106 ], [ %112, %111 ]
  %116 = phi i8* [ %90, %106 ], [ %113, %111 ]
  %117 = getelementptr inbounds i8, i8* %116, i64 %91
  store i8 0, i8* %117, align 1
  %118 = call i32 @_ZNK2gl7Program20getAttributeLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %89, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #21
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %124) #27
  br label %125

125:                                              ; preds = %114, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #21
  ret i32 %118
}

declare i32 @_ZNK2gl7Program20getAttributeLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11getBooleanvEjPh(%"class.gl::Context"*, i32, i8*) local_unnamed_addr #1 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #21
  store i32 -1431655766, i32* %4, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #21
  store i32 0, i32* %5, align 4
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %9 = call zeroext i1 @_ZN2gl21GetQueryParameterInfoERKNS_5StateEjPjS3_(%"class.gl::State"* dereferenceable(12296) %8, i32 %1, i32* nonnull %4, i32* nonnull %5) #21
  %10 = load i32, i32* %4, align 4
  %11 = icmp eq i32 %10, 35670
  br i1 %11, label %12, label %18

12:                                               ; preds = %3
  switch i32 %1, label %17 [
    i32 36346, label %13
    i32 37107, label %14
  ]

13:                                               ; preds = %12
  store i8 1, i8* %2, align 1
  br label %20

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 39
  %16 = load i8, i8* %15, align 8, !range !2
  store i8 %16, i8* %2, align 1
  br label %20

17:                                               ; preds = %12
  call void @_ZNK2gl5State11getBooleanvEjPh(%"class.gl::State"* %8, i32 %1, i8* %2) #21
  br label %20

18:                                               ; preds = %3
  %19 = load i32, i32* %5, align 4
  call void @_ZN2gl15CastStateValuesIhEEvPKNS_7ContextEjjjPT_(%"class.gl::Context"* %0, i32 %10, i32 %1, i32 %19, i8* %2) #21
  br label %20

20:                                               ; preds = %17, %14, %13, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context21getQueryParameterInfoEjPjS1_(%"class.gl::Context"*, i32, i32*, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = tail call zeroext i1 @_ZN2gl21GetQueryParameterInfoERKNS_5StateEjPjS3_(%"class.gl::State"* dereferenceable(12296) %5, i32 %1, i32* %2, i32* %3) #21
  ret i1 %6
}

declare void @_ZN2gl15CastStateValuesIhEEvPKNS_7ContextEjjjPT_(%"class.gl::Context"*, i32, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17getBooleanvRobustEjiPiPh(%"class.gl::Context"*, i32, i32, i32* nocapture readnone, i8*) local_unnamed_addr #1 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #21
  store i32 -1431655766, i32* %6, align 4
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #21
  store i32 0, i32* %7, align 4
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %11 = call zeroext i1 @_ZN2gl21GetQueryParameterInfoERKNS_5StateEjPjS3_(%"class.gl::State"* dereferenceable(12296) %10, i32 %1, i32* nonnull %6, i32* nonnull %7) #21
  %12 = load i32, i32* %6, align 4
  %13 = icmp eq i32 %12, 35670
  br i1 %13, label %14, label %20

14:                                               ; preds = %5
  switch i32 %1, label %19 [
    i32 36346, label %15
    i32 37107, label %16
  ]

15:                                               ; preds = %14
  store i8 1, i8* %4, align 1
  br label %22

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 39
  %18 = load i8, i8* %17, align 8, !range !2
  store i8 %18, i8* %4, align 1
  br label %22

19:                                               ; preds = %14
  call void @_ZNK2gl5State11getBooleanvEjPh(%"class.gl::State"* %10, i32 %1, i8* %4) #21
  br label %22

20:                                               ; preds = %5
  %21 = load i32, i32* %7, align 4
  call void @_ZN2gl15CastStateValuesIhEEvPKNS_7ContextEjjjPT_(%"class.gl::Context"* %0, i32 %12, i32 %1, i32 %21, i8* %4) #21
  br label %22

22:                                               ; preds = %15, %16, %19, %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9getFloatvEjPf(%"class.gl::Context"*, i32, float*) local_unnamed_addr #1 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #21
  store i32 -1431655766, i32* %4, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #21
  store i32 0, i32* %5, align 4
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %9 = call zeroext i1 @_ZN2gl21GetQueryParameterInfoERKNS_5StateEjPjS3_(%"class.gl::State"* dereferenceable(12296) %8, i32 %1, i32* nonnull %4, i32* nonnull %5) #21
  %10 = load i32, i32* %4, align 4
  %11 = icmp eq i32 %10, 5126
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  call void @_ZNK2gl7Context13getFloatvImplEjPf(%"class.gl::Context"* %0, i32 %1, float* %2)
  br label %15

13:                                               ; preds = %3
  %14 = load i32, i32* %5, align 4
  call void @_ZN2gl15CastStateValuesIfEEvPKNS_7ContextEjjjPT_(%"class.gl::Context"* %0, i32 %10, i32 %1, i32 %14, float* %2) #21
  br label %15

15:                                               ; preds = %13, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #21
  ret void
}

declare void @_ZN2gl15CastStateValuesIfEEvPKNS_7ContextEjjjPT_(%"class.gl::Context"*, i32, i32, i32, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15getFloatvRobustEjiPiPf(%"class.gl::Context"*, i32, i32, i32* nocapture readnone, float*) local_unnamed_addr #1 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #21
  store i32 -1431655766, i32* %6, align 4
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #21
  store i32 0, i32* %7, align 4
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %11 = call zeroext i1 @_ZN2gl21GetQueryParameterInfoERKNS_5StateEjPjS3_(%"class.gl::State"* dereferenceable(12296) %10, i32 %1, i32* nonnull %6, i32* nonnull %7) #21
  %12 = load i32, i32* %6, align 4
  %13 = icmp eq i32 %12, 5126
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  call void @_ZNK2gl7Context13getFloatvImplEjPf(%"class.gl::Context"* %0, i32 %1, float* %4) #21
  br label %17

15:                                               ; preds = %5
  %16 = load i32, i32* %7, align 4
  call void @_ZN2gl15CastStateValuesIfEEvPKNS_7ContextEjjjPT_(%"class.gl::Context"* %0, i32 %12, i32 %1, i32 %16, float* %4) #21
  br label %17

17:                                               ; preds = %14, %15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11getIntegervEjPi(%"class.gl::Context"*, i32, i32*) local_unnamed_addr #1 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #21
  store i32 0, i32* %4, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #21
  store i32 0, i32* %5, align 4
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %9 = call zeroext i1 @_ZN2gl21GetQueryParameterInfoERKNS_5StateEjPjS3_(%"class.gl::State"* dereferenceable(12296) %8, i32 %1, i32* nonnull %4, i32* nonnull %5) #21
  %10 = load i32, i32* %4, align 4
  %11 = icmp eq i32 %10, 5124
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  call void @_ZNK2gl7Context15getIntegervImplEjPi(%"class.gl::Context"* %0, i32 %1, i32* %2)
  br label %15

13:                                               ; preds = %3
  %14 = load i32, i32* %5, align 4
  call void @_ZN2gl15CastStateValuesIiEEvPKNS_7ContextEjjjPT_(%"class.gl::Context"* %0, i32 %10, i32 %1, i32 %14, i32* %2) #21
  br label %15

15:                                               ; preds = %13, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #21
  ret void
}

declare void @_ZN2gl15CastStateValuesIiEEvPKNS_7ContextEjjjPT_(%"class.gl::Context"*, i32, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17getIntegervRobustEjiPiS1_(%"class.gl::Context"*, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #21
  store i32 0, i32* %6, align 4
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #21
  store i32 0, i32* %7, align 4
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %11 = call zeroext i1 @_ZN2gl21GetQueryParameterInfoERKNS_5StateEjPjS3_(%"class.gl::State"* dereferenceable(12296) %10, i32 %1, i32* nonnull %6, i32* nonnull %7) #21
  %12 = load i32, i32* %6, align 4
  %13 = icmp eq i32 %12, 5124
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  call void @_ZNK2gl7Context15getIntegervImplEjPi(%"class.gl::Context"* %0, i32 %1, i32* %4) #21
  br label %17

15:                                               ; preds = %5
  %16 = load i32, i32* %7, align 4
  call void @_ZN2gl15CastStateValuesIiEEvPKNS_7ContextEjjjPT_(%"class.gl::Context"* %0, i32 %12, i32 %1, i32 %16, i32* %4) #21
  br label %17

17:                                               ; preds = %14, %15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12getProgramivENS_15ShaderProgramIDEjPi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %18

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  %17 = select i1 %16, %"class.gl::Program"* null, %"class.gl::Program"* %15
  br label %81

18:                                               ; preds = %4
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %7
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %81, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %65, %11, %78
  %82 = phi %"class.gl::Program"* [ %17, %11 ], [ %80, %78 ], [ null, %65 ]
  %83 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 35
  %84 = load i8, i8* %83, align 1, !range !2
  %85 = icmp eq i8 %84, 0
  %86 = icmp ne i32 %2, 37297
  %87 = and i1 %86, %85
  br i1 %87, label %88, label %166

88:                                               ; preds = %81
  br i1 %10, label %89, label %95

89:                                               ; preds = %88
  %90 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %91 = load %"class.gl::Program"**, %"class.gl::Program"*** %90, align 8
  %92 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %91, i64 %7
  %93 = load %"class.gl::Program"*, %"class.gl::Program"** %92, align 8
  %94 = icmp eq %"class.gl::Program"* %93, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %94, label %166, label %158

95:                                               ; preds = %88
  %96 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %97 = add i64 %96, %7
  %98 = zext i64 %97 to i128
  %99 = mul nuw i128 %98, 11376068507788127593
  %100 = lshr i128 %99, 64
  %101 = xor i128 %100, %99
  %102 = trunc i128 %101 to i64
  %103 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %106 = load i64, i64* %105, align 8
  %107 = lshr i64 %102, 7
  %108 = ptrtoint i8* %104 to i64
  %109 = lshr i64 %108, 12
  %110 = xor i64 %107, %109
  %111 = trunc i128 %101 to i8
  %112 = and i8 %111, 127
  %113 = insertelement <16 x i8> undef, i8 %112, i32 0
  %114 = shufflevector <16 x i8> %113, <16 x i8> undef, <16 x i32> zeroinitializer
  %115 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %116

116:                                              ; preds = %146, %95
  %117 = phi i64 [ %110, %95 ], [ %148, %146 ]
  %118 = phi i64 [ 0, %95 ], [ %147, %146 ]
  %119 = and i64 %117, %106
  %120 = getelementptr inbounds i8, i8* %104, i64 %119
  %121 = bitcast i8* %120 to <16 x i8>*
  %122 = load <16 x i8>, <16 x i8>* %121, align 1
  %123 = icmp eq <16 x i8> %114, %122
  %124 = bitcast <16 x i1> %123 to i16
  %125 = icmp eq i16 %124, 0
  br i1 %125, label %142, label %126

126:                                              ; preds = %116
  %127 = zext i16 %124 to i32
  %128 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %115, align 8
  br label %129

129:                                              ; preds = %138, %126
  %130 = phi i32 [ %127, %126 ], [ %140, %138 ]
  %131 = tail call i32 @llvm.cttz.i32(i32 %130, i1 false) #21, !range !8
  %132 = zext i32 %131 to i64
  %133 = add i64 %119, %132
  %134 = and i64 %133, %106
  %135 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %128, i64 %134, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %1
  br i1 %137, label %149, label %138, !prof !9

138:                                              ; preds = %129
  %139 = add i32 %130, -1
  %140 = and i32 %139, %130
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %129

142:                                              ; preds = %138, %116
  %143 = icmp eq <16 x i8> %122, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %144 = bitcast <16 x i1> %143 to i16
  %145 = icmp eq i16 %144, 0
  br i1 %145, label %146, label %166, !prof !10

146:                                              ; preds = %142
  %147 = add i64 %118, 16
  %148 = add i64 %147, %119
  br label %116

149:                                              ; preds = %129
  %150 = getelementptr inbounds i8, i8* %104, i64 %134
  %151 = icmp ne i8* %150, null
  tail call void @llvm.assume(i1 %151) #21
  %152 = load i8, i8* %150, align 1
  %153 = icmp sgt i8 %152, -1
  br i1 %153, label %155, label %154, !prof !9

154:                                              ; preds = %149
  tail call void @llvm.trap() #21
  unreachable

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %128, i64 %134, i32 0, i32 1
  %157 = load %"class.gl::Program"*, %"class.gl::Program"** %156, align 8
  br label %158

158:                                              ; preds = %155, %89
  %159 = phi %"class.gl::Program"* [ %93, %89 ], [ %157, %155 ]
  %160 = icmp eq %"class.gl::Program"* %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %159, i64 0, i32 11, i32 0, i32 0, i32 0
  %163 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %162, align 8
  %164 = icmp eq %"struct.gl::Program::LinkingState"* %163, null
  br i1 %164, label %166, label %165

165:                                              ; preds = %161
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %159, %"class.gl::Context"* %0) #21
  br label %166

166:                                              ; preds = %142, %165, %161, %158, %89, %81
  %167 = phi %"class.gl::Program"* [ %82, %81 ], [ null, %158 ], [ %159, %161 ], [ %159, %165 ], [ null, %89 ], [ null, %142 ]
  tail call void @_ZN2gl14QueryProgramivEPNS_7ContextEPKNS_7ProgramEjPi(%"class.gl::Context"* %0, %"class.gl::Program"* %167, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl14QueryProgramivEPNS_7ContextEPKNS_7ProgramEjPi(%"class.gl::Context"*, %"class.gl::Program"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18getProgramivRobustENS_15ShaderProgramIDEjiPiS2_(%"class.gl::Context"*, i32, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context12getProgramivENS_15ShaderProgramIDEjPi(%"class.gl::Context"* %0, i32 %1, i32 %2, i32* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20getProgramPipelineivENS_17ProgramPipelineIDEjPi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 35
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 17
  %10 = load %"class.gl::ProgramPipelineManager"*, %"class.gl::ProgramPipelineManager"** %9, align 8
  %11 = tail call %"class.gl::ProgramPipeline"* @_ZNK2gl22ProgramPipelineManager18getProgramPipelineENS_17ProgramPipelineIDE(%"class.gl::ProgramPipelineManager"* %10, i32 %1) #21
  br label %12

12:                                               ; preds = %4, %8
  %13 = phi %"class.gl::ProgramPipeline"* [ null, %4 ], [ %11, %8 ]
  tail call void @_ZN2gl22QueryProgramPipelineivEPKNS_7ContextEPNS_15ProgramPipelineEjPi(%"class.gl::Context"* %0, %"class.gl::ProgramPipeline"* %13, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl22QueryProgramPipelineivEPKNS_7ContextEPNS_15ProgramPipelineEjPi(%"class.gl::Context"*, %"class.gl::ProgramPipeline"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::MemoryObject"* @_ZNK2gl7Context15getMemoryObjectENS_14MemoryObjectIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 18
  %4 = load %"class.gl::MemoryObjectManager"*, %"class.gl::MemoryObjectManager"** %3, align 8
  %5 = tail call %"class.gl::MemoryObject"* @_ZNK2gl19MemoryObjectManager15getMemoryObjectENS_14MemoryObjectIDE(%"class.gl::MemoryObjectManager"* %4, i32 %1) #21
  ret %"class.gl::MemoryObject"* %5
}

declare %"class.gl::MemoryObject"* @_ZNK2gl19MemoryObjectManager15getMemoryObjectENS_14MemoryObjectIDE(%"class.gl::MemoryObjectManager"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Semaphore"* @_ZNK2gl7Context12getSemaphoreENS_11SemaphoreIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 19
  %4 = load %"class.gl::SemaphoreManager"*, %"class.gl::SemaphoreManager"** %3, align 8
  %5 = tail call %"class.gl::Semaphore"* @_ZNK2gl16SemaphoreManager12getSemaphoreENS_11SemaphoreIDE(%"class.gl::SemaphoreManager"* %4, i32 %1) #21
  ret %"class.gl::Semaphore"* %5
}

declare %"class.gl::Semaphore"* @_ZNK2gl16SemaphoreManager12getSemaphoreENS_11SemaphoreIDE(%"class.gl::SemaphoreManager"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17getProgramInfoLogENS_15ShaderProgramIDEiPiPc(%"class.gl::Context"*, i32, i32, i32*, i8*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  %91 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %90, i64 0, i32 4, i32 23, i32 0
  %92 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %91, align 8
  tail call void @_ZNK2gl17ProgramExecutable10getInfoLogEiPiPc(%"class.gl::ProgramExecutable"* %92, i32 %2, i32* %3, i8* %4) #21
  ret void
}

declare void @_ZNK2gl17ProgramExecutable10getInfoLogEiPiPc(%"class.gl::ProgramExecutable"*, i32, i32*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context25getProgramPipelineInfoLogENS_17ProgramPipelineIDEiPiPc(%"class.gl::Context"* nocapture readonly, i32, i32, i32*, i8*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 17
  %7 = load %"class.gl::ProgramPipelineManager"*, %"class.gl::ProgramPipelineManager"** %6, align 8
  %8 = tail call %"class.gl::ProgramPipeline"* @_ZNK2gl22ProgramPipelineManager18getProgramPipelineENS_17ProgramPipelineIDE(%"class.gl::ProgramPipelineManager"* %7, i32 %1) #21
  %9 = icmp eq %"class.gl::ProgramPipeline"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %8, i64 0, i32 5, i32 5
  %12 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %11, align 8
  tail call void @_ZNK2gl17ProgramExecutable10getInfoLogEiPiPc(%"class.gl::ProgramExecutable"* %12, i32 %2, i32* %3, i8* %4) #21
  br label %14

13:                                               ; preds = %5
  store i32 0, i32* %3, align 4
  store i8 0, i8* %4, align 1
  br label %14

14:                                               ; preds = %13, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11getShaderivENS_15ShaderProgramIDEjPi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 35
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %10 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %9, align 8
  %11 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %10, i32 %1) #21
  br label %12

12:                                               ; preds = %4, %8
  %13 = phi %"class.gl::Shader"* [ null, %4 ], [ %11, %8 ]
  tail call void @_ZN2gl13QueryShaderivEPKNS_7ContextEPNS_6ShaderEjPi(%"class.gl::Context"* %0, %"class.gl::Shader"* %13, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl13QueryShaderivEPKNS_7ContextEPNS_6ShaderEjPi(%"class.gl::Context"*, %"class.gl::Shader"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17getShaderivRobustENS_15ShaderProgramIDEjiPiS2_(%"class.gl::Context"*, i32, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 35
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %12 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %11, align 8
  %13 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %12, i32 %1) #21
  br label %14

14:                                               ; preds = %6, %10
  %15 = phi %"class.gl::Shader"* [ null, %6 ], [ %13, %10 ]
  tail call void @_ZN2gl13QueryShaderivEPKNS_7ContextEPNS_6ShaderEjPi(%"class.gl::Context"* %0, %"class.gl::Shader"* %15, i32 %2, i32* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16getShaderInfoLogENS_15ShaderProgramIDEiPiPc(%"class.gl::Context"* nocapture readonly, i32, i32, i32*, i8*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %7, i32 %1) #21
  tail call void @_ZN2gl6Shader10getInfoLogEiPiPc(%"class.gl::Shader"* %8, i32 %2, i32* %3, i8* %4) #21
  ret void
}

declare void @_ZN2gl6Shader10getInfoLogEiPiPc(%"class.gl::Shader"*, i32, i32*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context24getShaderPrecisionFormatEjjPiS1_(%"class.gl::Context"*, i32, i32, i32*, i32*) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %32 [
    i32 35633, label %6
    i32 35632, label %19
  ]

6:                                                ; preds = %5
  switch i32 %2, label %32 [
    i32 36336, label %7
    i32 36337, label %9
    i32 36338, label %11
    i32 36339, label %13
    i32 36340, label %15
    i32 36341, label %17
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 39
  tail call void @_ZNK2gl13TypePrecision3getEPiS1_(%"struct.gl::TypePrecision"* %8, i32* %3, i32* %4) #21
  br label %32

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 38
  tail call void @_ZNK2gl13TypePrecision3getEPiS1_(%"struct.gl::TypePrecision"* %10, i32* %3, i32* %4) #21
  br label %32

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 37
  tail call void @_ZNK2gl13TypePrecision3getEPiS1_(%"struct.gl::TypePrecision"* %12, i32* %3, i32* %4) #21
  br label %32

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 42
  tail call void @_ZNK2gl13TypePrecision3getEPiS1_(%"struct.gl::TypePrecision"* %14, i32* %3, i32* %4) #21
  br label %32

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 41
  tail call void @_ZNK2gl13TypePrecision3getEPiS1_(%"struct.gl::TypePrecision"* %16, i32* %3, i32* %4) #21
  br label %32

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 40
  tail call void @_ZNK2gl13TypePrecision3getEPiS1_(%"struct.gl::TypePrecision"* %18, i32* %3, i32* %4) #21
  br label %32

19:                                               ; preds = %5
  switch i32 %2, label %32 [
    i32 36336, label %20
    i32 36337, label %22
    i32 36338, label %24
    i32 36339, label %26
    i32 36340, label %28
    i32 36341, label %30
  ]

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 45
  tail call void @_ZNK2gl13TypePrecision3getEPiS1_(%"struct.gl::TypePrecision"* %21, i32* %3, i32* %4) #21
  br label %32

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 44
  tail call void @_ZNK2gl13TypePrecision3getEPiS1_(%"struct.gl::TypePrecision"* %23, i32* %3, i32* %4) #21
  br label %32

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 43
  tail call void @_ZNK2gl13TypePrecision3getEPiS1_(%"struct.gl::TypePrecision"* %25, i32* %3, i32* %4) #21
  br label %32

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 48
  tail call void @_ZNK2gl13TypePrecision3getEPiS1_(%"struct.gl::TypePrecision"* %27, i32* %3, i32* %4) #21
  br label %32

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 47
  tail call void @_ZNK2gl13TypePrecision3getEPiS1_(%"struct.gl::TypePrecision"* %29, i32* %3, i32* %4) #21
  br label %32

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 46
  tail call void @_ZNK2gl13TypePrecision3getEPiS1_(%"struct.gl::TypePrecision"* %31, i32* %3, i32* %4) #21
  br label %32

32:                                               ; preds = %5, %20, %22, %24, %26, %28, %30, %19, %7, %9, %11, %13, %15, %17, %6
  ret void
}

declare void @_ZNK2gl13TypePrecision3getEPiS1_(%"struct.gl::TypePrecision"*, i32*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15getShaderSourceENS_15ShaderProgramIDEiPiPc(%"class.gl::Context"* nocapture readonly, i32, i32, i32*, i8*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %7, i32 %1) #21
  tail call void @_ZNK2gl6Shader9getSourceEiPiPc(%"class.gl::Shader"* %8, i32 %2, i32* %3, i8* %4) #21
  ret void
}

declare void @_ZNK2gl6Shader9getSourceEiPiPc(%"class.gl::Shader"*, i32, i32*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12getUniformfvENS_15ShaderProgramIDENS_15UniformLocationEPf(%"class.gl::Context"*, i32, i32, float*) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %16, label %88, label %80

17:                                               ; preds = %4
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %88, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %77, %11
  %81 = phi %"class.gl::Program"* [ %15, %11 ], [ %79, %77 ]
  %82 = icmp eq %"class.gl::Program"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %81, i64 0, i32 11, i32 0, i32 0, i32 0
  %85 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %84, align 8
  %86 = icmp eq %"struct.gl::Program::LinkingState"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %81, %"class.gl::Context"* %0) #21
  br label %88

88:                                               ; preds = %64, %11, %80, %83, %87
  %89 = phi %"class.gl::Program"* [ null, %80 ], [ %81, %83 ], [ %81, %87 ], [ null, %11 ], [ null, %64 ]
  tail call void @_ZNK2gl7Program12getUniformfvEPKNS_7ContextENS_15UniformLocationEPf(%"class.gl::Program"* %89, %"class.gl::Context"* %0, i32 %2, float* %3) #21
  ret void
}

declare void @_ZNK2gl7Program12getUniformfvEPKNS_7ContextENS_15UniformLocationEPf(%"class.gl::Program"*, %"class.gl::Context"*, i32, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18getUniformfvRobustENS_15ShaderProgramIDENS_15UniformLocationEiPiPf(%"class.gl::Context"*, i32, i32, i32, i32* nocapture readnone, float*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context12getUniformfvENS_15ShaderProgramIDENS_15UniformLocationEPf(%"class.gl::Context"* %0, i32 %1, i32 %2, float* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12getUniformivENS_15ShaderProgramIDENS_15UniformLocationEPi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %16, label %88, label %80

17:                                               ; preds = %4
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %88, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %77, %11
  %81 = phi %"class.gl::Program"* [ %15, %11 ], [ %79, %77 ]
  %82 = icmp eq %"class.gl::Program"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %81, i64 0, i32 11, i32 0, i32 0, i32 0
  %85 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %84, align 8
  %86 = icmp eq %"struct.gl::Program::LinkingState"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %81, %"class.gl::Context"* %0) #21
  br label %88

88:                                               ; preds = %64, %11, %80, %83, %87
  %89 = phi %"class.gl::Program"* [ null, %80 ], [ %81, %83 ], [ %81, %87 ], [ null, %11 ], [ null, %64 ]
  tail call void @_ZNK2gl7Program12getUniformivEPKNS_7ContextENS_15UniformLocationEPi(%"class.gl::Program"* %89, %"class.gl::Context"* %0, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZNK2gl7Program12getUniformivEPKNS_7ContextENS_15UniformLocationEPi(%"class.gl::Program"*, %"class.gl::Context"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18getUniformivRobustENS_15ShaderProgramIDENS_15UniformLocationEiPiS3_(%"class.gl::Context"*, i32, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context12getUniformivENS_15ShaderProgramIDENS_15UniformLocationEPi(%"class.gl::Context"* %0, i32 %1, i32 %2, i32* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context18getUniformLocationENS_15ShaderProgramIDEPKc(%"class.gl::Context"*, i32, i8* nocapture readonly) local_unnamed_addr #5 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %16, label %88, label %80

17:                                               ; preds = %3
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %88, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %77, %11
  %81 = phi %"class.gl::Program"* [ %15, %11 ], [ %79, %77 ]
  %82 = icmp eq %"class.gl::Program"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %81, i64 0, i32 11, i32 0, i32 0, i32 0
  %85 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %84, align 8
  %86 = icmp eq %"struct.gl::Program::LinkingState"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %81, %"class.gl::Context"* %0) #21
  br label %88

88:                                               ; preds = %64, %11, %80, %83, %87
  %89 = phi %"class.gl::Program"* [ null, %80 ], [ %81, %83 ], [ %81, %87 ], [ null, %11 ], [ null, %64 ]
  %90 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #21
  %91 = tail call i64 @strlen(i8* %2) #21
  %92 = icmp ugt i64 %91, -17
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  %94 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %94) #28
  unreachable

95:                                               ; preds = %88
  %96 = icmp ult i64 %91, 23
  br i1 %96, label %106, label %97

97:                                               ; preds = %95
  %98 = add nuw i64 %91, 16
  %99 = and i64 %98, -16
  %100 = tail call i8* @_Znwm(i64 %99) #27
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %100, i8** %101, align 8
  %102 = or i64 %99, -9223372036854775808
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %91, i64* %104, align 8
  %105 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %111

106:                                              ; preds = %95
  %107 = trunc i64 %91 to i8
  %108 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  store i8 %107, i8* %109, align 1
  %110 = icmp eq i64 %91, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %106, %97
  %112 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %108, %106 ], [ %105, %97 ]
  %113 = phi i8* [ %90, %106 ], [ %100, %97 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %113, i8* align 1 %2, i64 %91, i1 false) #21
  br label %114

114:                                              ; preds = %106, %111
  %115 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %108, %106 ], [ %112, %111 ]
  %116 = phi i8* [ %90, %106 ], [ %113, %111 ]
  %117 = getelementptr inbounds i8, i8* %116, i64 %91
  store i8 0, i8* %117, align 1
  %118 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %89, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #21
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %124) #27
  br label %125

125:                                              ; preds = %114, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #21
  ret i32 %118
}

declare i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context8isBufferENS_8BufferIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 10
  %6 = load %"class.gl::BufferManager"*, %"class.gl::BufferManager"** %5, align 8
  %7 = tail call %"class.gl::Buffer"* @_ZNK2gl13BufferManager9getBufferENS_8BufferIDE(%"class.gl::BufferManager"* %6, i32 %1) #21
  %8 = icmp ne %"class.gl::Buffer"* %7, null
  %9 = zext i1 %8 to i8
  br label %10

10:                                               ; preds = %2, %4
  %11 = phi i8 [ %9, %4 ], [ 0, %2 ]
  ret i8 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context9isEnabledEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = tail call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 %1) #21
  %5 = zext i1 %4 to i8
  ret i8 %5
}

declare zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context10isEnablediEjj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %5 = tail call zeroext i1 @_ZNK2gl5State23getEnableFeatureIndexedEjj(%"class.gl::State"* %4, i32 %1, i32 %2) #21
  %6 = zext i1 %5 to i8
  ret i8 %6
}

declare zeroext i1 @_ZNK2gl5State23getEnableFeatureIndexedEjj(%"class.gl::State"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context13isFramebufferENS_13FramebufferIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %6 = load %"class.gl::FramebufferManager"*, %"class.gl::FramebufferManager"** %5, align 8
  %7 = tail call %"class.gl::Framebuffer"* @_ZNK2gl18FramebufferManager14getFramebufferENS_13FramebufferIDE(%"class.gl::FramebufferManager"* %6, i32 %1) #21
  %8 = icmp ne %"class.gl::Framebuffer"* %7, null
  %9 = zext i1 %8 to i8
  br label %10

10:                                               ; preds = %2, %4
  %11 = phi i8 [ %9, %4 ], [ 0, %2 ]
  ret i8 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context9isProgramENS_15ShaderProgramIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %85, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %18

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  %17 = select i1 %16, %"class.gl::Program"* null, %"class.gl::Program"* %15
  br label %81

18:                                               ; preds = %4
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %7
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %81, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %65, %11, %78
  %82 = phi %"class.gl::Program"* [ %17, %11 ], [ %80, %78 ], [ null, %65 ]
  %83 = icmp ne %"class.gl::Program"* %82, null
  %84 = zext i1 %83 to i8
  br label %85

85:                                               ; preds = %2, %81
  %86 = phi i8 [ %84, %81 ], [ 0, %2 ]
  ret i8 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context14isRenderbufferENS_14RenderbufferIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 13
  %6 = load %"class.gl::RenderbufferManager"*, %"class.gl::RenderbufferManager"** %5, align 8
  %7 = tail call %"class.gl::Renderbuffer"* @_ZNK2gl19RenderbufferManager15getRenderbufferENS_14RenderbufferIDE(%"class.gl::RenderbufferManager"* %6, i32 %1) #21
  %8 = icmp ne %"class.gl::Renderbuffer"* %7, null
  %9 = zext i1 %8 to i8
  br label %10

10:                                               ; preds = %2, %4
  %11 = phi i8 [ %9, %4 ], [ 0, %2 ]
  ret i8 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context8isShaderENS_15ShaderProgramIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %6, i32 %1) #21
  %8 = icmp ne %"class.gl::Shader"* %7, null
  %9 = zext i1 %8 to i8
  br label %10

10:                                               ; preds = %2, %4
  %11 = phi i8 [ %9, %4 ], [ 0, %2 ]
  ret i8 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context9isTextureENS_9TextureIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %85, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %6 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %6, i64 0, i32 0, i32 1, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %18

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %6, i64 0, i32 0, i32 1, i32 1
  %13 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %13, i64 %7
  %15 = load %"class.gl::Texture"*, %"class.gl::Texture"** %14, align 8
  %16 = icmp eq %"class.gl::Texture"* %15, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %17 = select i1 %16, %"class.gl::Texture"* null, %"class.gl::Texture"* %15
  br label %81

18:                                               ; preds = %4
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %7
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %6, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %6, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %6, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %81, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Texture"*, %"class.gl::Texture"** %79, align 8
  br label %81

81:                                               ; preds = %65, %11, %78
  %82 = phi %"class.gl::Texture"* [ %17, %11 ], [ %80, %78 ], [ null, %65 ]
  %83 = icmp ne %"class.gl::Texture"* %82, null
  %84 = zext i1 %83 to i8
  br label %85

85:                                               ; preds = %2, %81
  %86 = phi i8 [ %84, %81 ], [ 0, %2 ]
  ret i8 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11linkProgramENS_15ShaderProgramIDE(%"class.gl::Context"*, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %4 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %3, align 8
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 1
  %11 = load %"class.gl::Program"**, %"class.gl::Program"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %11, i64 %5
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %12, align 8
  %14 = icmp eq %"class.gl::Program"* %13, inttoptr (i64 -1 to %"class.gl::Program"*)
  %15 = select i1 %14, %"class.gl::Program"* null, %"class.gl::Program"* %13
  br label %79

16:                                               ; preds = %2
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, %5
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %67, %16
  %38 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %39 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %40 = and i64 %38, %27
  %41 = getelementptr inbounds i8, i8* %25, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %35, %43
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37
  %48 = zext i16 %45 to i32
  %49 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %36, align 8
  br label %50

50:                                               ; preds = %59, %47
  %51 = phi i32 [ %48, %47 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #21, !range !8
  %53 = zext i32 %52 to i64
  %54 = add i64 %40, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %49, i64 %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %70, label %59, !prof !9

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %37
  %64 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %79, !prof !10

67:                                               ; preds = %63
  %68 = add i64 %39, 16
  %69 = add i64 %68, %40
  br label %37

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #21
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %76, label %75, !prof !9

75:                                               ; preds = %70
  tail call void @llvm.trap() #21
  unreachable

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %49, i64 %55, i32 0, i32 1
  %78 = load %"class.gl::Program"*, %"class.gl::Program"** %77, align 8
  br label %79

79:                                               ; preds = %63, %9, %76
  %80 = phi %"class.gl::Program"* [ %15, %9 ], [ %78, %76 ], [ null, %63 ]
  %81 = tail call i32 @_ZN2gl7Program4linkEPKNS_7ContextE(%"class.gl::Program"* %80, %"class.gl::Context"* %0) #21
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %103, label %83

83:                                               ; preds = %79
  %84 = tail call i32 @_ZNK2gl7Program11getRefCountEv(%"class.gl::Program"* %80) #21
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %103, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %80, i64 0, i32 11, i32 0, i32 0, i32 0
  %88 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %87, align 8
  %89 = icmp eq %"struct.gl::Program::LinkingState"* %88, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %86
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* %80, %"class.gl::Context"* %0) #21
  br label %91

91:                                               ; preds = %90, %86
  %92 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %80, i64 0, i32 10
  %93 = load i8, i8* %92, align 8, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %101, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %97 = tail call i32 @_ZN2gl5State25onProgramExecutableChangeEPKNS_7ContextEPNS_7ProgramE(%"class.gl::State"* %96, %"class.gl::Context"* %0, %"class.gl::Program"* %80) #21
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %103, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %80, i64 0, i32 1
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %100, i32 8) #21
  br label %101

101:                                              ; preds = %99, %91
  %102 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache25onProgramExecutableChangeEPNS_7ContextE(%"class.gl::StateCache"* %102, %"class.gl::Context"* %0) #21
  br label %103

103:                                              ; preds = %79, %83, %95, %101
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context12shaderBinaryEiPKNS_15ShaderProgramIDEjPKvi(%"class.gl::Context"* nocapture, i32, %"struct.gl::ShaderProgramID"* nocapture, i32, i8* nocapture, i32) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context27bindFragDataLocationIndexedENS_15ShaderProgramIDEjjPKc(%"class.gl::Context"* nocapture readonly, i32, i32, i32, i8*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %19

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  %18 = select i1 %17, %"class.gl::Program"* null, %"class.gl::Program"* %16
  br label %82

19:                                               ; preds = %5
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = add i64 %20, %8
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %26, 7
  %32 = ptrtoint i8* %28 to i64
  %33 = lshr i64 %32, 12
  %34 = xor i64 %31, %33
  %35 = trunc i128 %25 to i8
  %36 = and i8 %35, 127
  %37 = insertelement <16 x i8> undef, i8 %36, i32 0
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> zeroinitializer
  %39 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %40

40:                                               ; preds = %70, %19
  %41 = phi i64 [ %34, %19 ], [ %72, %70 ]
  %42 = phi i64 [ 0, %19 ], [ %71, %70 ]
  %43 = and i64 %41, %30
  %44 = getelementptr inbounds i8, i8* %28, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %38, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  %52 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %39, align 8
  br label %53

53:                                               ; preds = %62, %50
  %54 = phi i32 [ %51, %50 ], [ %64, %62 ]
  %55 = tail call i32 @llvm.cttz.i32(i32 %54, i1 false) #21, !range !8
  %56 = zext i32 %55 to i64
  %57 = add i64 %43, %56
  %58 = and i64 %57, %30
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %1
  br i1 %61, label %73, label %62, !prof !9

62:                                               ; preds = %53
  %63 = add i32 %54, -1
  %64 = and i32 %63, %54
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %62, %40
  %67 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %82, !prof !10

70:                                               ; preds = %66
  %71 = add i64 %42, 16
  %72 = add i64 %71, %43
  br label %40

73:                                               ; preds = %53
  %74 = getelementptr inbounds i8, i8* %28, i64 %58
  %75 = icmp ne i8* %74, null
  tail call void @llvm.assume(i1 %75) #21
  %76 = load i8, i8* %74, align 1
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %73
  tail call void @llvm.trap() #21
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 1
  %81 = load %"class.gl::Program"*, %"class.gl::Program"** %80, align 8
  br label %82

82:                                               ; preds = %66, %12, %79
  %83 = phi %"class.gl::Program"* [ %18, %12 ], [ %81, %79 ], [ null, %66 ]
  tail call void @_ZN2gl7Program26bindFragmentOutputLocationEjPKc(%"class.gl::Program"* %83, i32 %2, i8* %4) #21
  tail call void @_ZN2gl7Program23bindFragmentOutputIndexEjPKc(%"class.gl::Program"* %83, i32 %3, i8* %4) #21
  ret void
}

declare void @_ZN2gl7Program26bindFragmentOutputLocationEjPKc(%"class.gl::Program"*, i32, i8*) local_unnamed_addr #3

declare void @_ZN2gl7Program23bindFragmentOutputIndexEjPKc(%"class.gl::Program"*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20bindFragDataLocationENS_15ShaderProgramIDEjPKc(%"class.gl::Context"* nocapture readonly, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context27bindFragDataLocationIndexedENS_15ShaderProgramIDEjjPKc(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 0, i8* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context16getFragDataIndexENS_15ShaderProgramIDEPKc(%"class.gl::Context"*, i32, i8* nocapture readonly) local_unnamed_addr #5 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %16, label %88, label %80

17:                                               ; preds = %3
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %88, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %77, %11
  %81 = phi %"class.gl::Program"* [ %15, %11 ], [ %79, %77 ]
  %82 = icmp eq %"class.gl::Program"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %81, i64 0, i32 11, i32 0, i32 0, i32 0
  %85 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %84, align 8
  %86 = icmp eq %"struct.gl::Program::LinkingState"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %81, %"class.gl::Context"* %0) #21
  br label %88

88:                                               ; preds = %64, %11, %80, %83, %87
  %89 = phi %"class.gl::Program"* [ null, %80 ], [ %81, %83 ], [ %81, %87 ], [ null, %11 ], [ null, %64 ]
  %90 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #21
  %91 = tail call i64 @strlen(i8* %2) #21
  %92 = icmp ugt i64 %91, -17
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  %94 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %94) #28
  unreachable

95:                                               ; preds = %88
  %96 = icmp ult i64 %91, 23
  br i1 %96, label %106, label %97

97:                                               ; preds = %95
  %98 = add nuw i64 %91, 16
  %99 = and i64 %98, -16
  %100 = tail call i8* @_Znwm(i64 %99) #27
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %100, i8** %101, align 8
  %102 = or i64 %99, -9223372036854775808
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %91, i64* %104, align 8
  %105 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %111

106:                                              ; preds = %95
  %107 = trunc i64 %91 to i8
  %108 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  store i8 %107, i8* %109, align 1
  %110 = icmp eq i64 %91, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %106, %97
  %112 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %108, %106 ], [ %105, %97 ]
  %113 = phi i8* [ %90, %106 ], [ %100, %97 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %113, i8* align 1 %2, i64 %91, i1 false) #21
  br label %114

114:                                              ; preds = %106, %111
  %115 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %108, %106 ], [ %112, %111 ]
  %116 = phi i8* [ %90, %106 ], [ %113, %111 ]
  %117 = getelementptr inbounds i8, i8* %116, i64 %91
  store i8 0, i8* %117, align 1
  %118 = call i32 @_ZNK2gl7Program16getFragDataIndexERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %89, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #21
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %124) #27
  br label %125

125:                                              ; preds = %114, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #21
  ret i32 %118
}

declare i32 @_ZNK2gl7Program16getFragDataIndexERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context31getProgramResourceLocationIndexENS_15ShaderProgramIDEjPKc(%"class.gl::Context"*, i32, i32, i8* nocapture readonly) local_unnamed_addr #5 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %4
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  %91 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #21
  %92 = tail call i64 @strlen(i8* %3) #21
  %93 = icmp ugt i64 %92, -17
  br i1 %93, label %94, label %96

94:                                               ; preds = %89
  %95 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %95) #28
  unreachable

96:                                               ; preds = %89
  %97 = icmp ult i64 %92, 23
  br i1 %97, label %107, label %98

98:                                               ; preds = %96
  %99 = add nuw i64 %92, 16
  %100 = and i64 %99, -16
  %101 = tail call i8* @_Znwm(i64 %100) #27
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %101, i8** %102, align 8
  %103 = or i64 %100, -9223372036854775808
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %92, i64* %105, align 8
  %106 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %112

107:                                              ; preds = %96
  %108 = trunc i64 %92 to i8
  %109 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  store i8 %108, i8* %110, align 1
  %111 = icmp eq i64 %92, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %107, %98
  %113 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %109, %107 ], [ %106, %98 ]
  %114 = phi i8* [ %91, %107 ], [ %101, %98 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %114, i8* align 1 %3, i64 %92, i1 false) #21
  br label %115

115:                                              ; preds = %107, %112
  %116 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %109, %107 ], [ %113, %112 ]
  %117 = phi i8* [ %91, %107 ], [ %114, %112 ]
  %118 = getelementptr inbounds i8, i8* %117, i64 %92
  store i8 0, i8* %118, align 1
  %119 = call i32 @_ZNK2gl7Program16getFragDataIndexERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %90, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #21
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  call void @_ZdlPv(i8* %125) #27
  br label %126

126:                                              ; preds = %115, %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #21
  ret i32 %119
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12shaderSourceENS_15ShaderProgramIDEiPKPKcPKi(%"class.gl::Context"* nocapture readonly, i32, i32, i8**, i32*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %7, i32 %1) #21
  tail call void @_ZN2gl6Shader9setSourceEiPKPKcPKi(%"class.gl::Shader"* %8, i32 %2, i8** %3, i32* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11stencilFuncEjij(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = icmp slt i32 %2, 255
  %6 = select i1 %5, i32 %2, i32 255
  %7 = icmp sgt i32 %6, 0
  %8 = select i1 %7, i32 %6, i32 0
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State16setStencilParamsEjij(%"class.gl::State"* %9, i32 %1, i32 %8, i32 %3) #21
  tail call void @_ZN2gl5State20setStencilBackParamsEjij(%"class.gl::State"* %9, i32 %1, i32 %8, i32 %3) #21
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11stencilMaskEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State19setStencilWritemaskEj(%"class.gl::State"* %3, i32 %1) #21
  tail call void @_ZN2gl5State23setStencilBackWritemaskEj(%"class.gl::State"* %3, i32 %1) #21
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9stencilOpEjjj(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State20setStencilOperationsEjjj(%"class.gl::State"* %5, i32 %1, i32 %2, i32 %3) #21
  tail call void @_ZN2gl5State24setStencilBackOperationsEjjj(%"class.gl::State"* %5, i32 %1, i32 %2, i32 %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15patchParameteriEji(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = icmp eq i32 %1, 36466
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State16setPatchVerticesEj(%"class.gl::State"* %6, i32 %2) #21
  br label %7

7:                                                ; preds = %3, %5
  ret void
}

declare void @_ZN2gl5State16setPatchVerticesEj(%"class.gl::State"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Program"* @_ZNK2gl7Context22getActiveLinkedProgramEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %3 = load %"class.gl::Program"*, %"class.gl::Program"** %2, align 8
  %4 = icmp eq %"class.gl::Program"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %3, i64 0, i32 11, i32 0, i32 0, i32 0
  %7 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %6, align 8
  %8 = icmp eq %"struct.gl::Program::LinkingState"* %7, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %3, %"class.gl::Context"* %0) #21
  %10 = load %"class.gl::Program"*, %"class.gl::Program"** %2, align 8
  %11 = icmp eq %"class.gl::Program"* %10, null
  br i1 %11, label %12, label %25

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %14 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %13, align 8
  %15 = icmp eq %"class.gl::ProgramPipeline"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %14, i64 0, i32 5, i32 1
  %18 = load %"class.gl::Program"*, %"class.gl::Program"** %17, align 8
  %19 = icmp eq %"class.gl::Program"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %18, i64 0, i32 11, i32 0, i32 0, i32 0
  %22 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %21, align 8
  %23 = icmp eq %"struct.gl::Program::LinkingState"* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %18, %"class.gl::Context"* %0) #21
  br label %25

25:                                               ; preds = %5, %24, %20, %16, %12, %9
  %26 = phi %"class.gl::Program"* [ %10, %9 ], [ null, %12 ], [ null, %16 ], [ %18, %20 ], [ %18, %24 ], [ %3, %5 ]
  ret %"class.gl::Program"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9uniform1fENS_15UniformLocationEf(%"class.gl::Context"*, i32, float) local_unnamed_addr #1 align 2 {
  %4 = alloca float, align 4
  store float %2, float* %4, align 4
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %9, align 8
  %11 = icmp eq %"struct.gl::Program::LinkingState"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %6, %"class.gl::Context"* %0) #21
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %14 = icmp eq %"class.gl::Program"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %3
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %17 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %16, align 8
  %18 = icmp eq %"class.gl::ProgramPipeline"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %17, i64 0, i32 5, i32 1
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %20, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %24, align 8
  %26 = icmp eq %"struct.gl::Program::LinkingState"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %21, %"class.gl::Context"* %0) #21
  br label %28

28:                                               ; preds = %8, %12, %15, %19, %23, %27
  %29 = phi %"class.gl::Program"* [ %13, %12 ], [ null, %15 ], [ null, %19 ], [ %21, %23 ], [ %21, %27 ], [ %6, %8 ]
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %29, i32 %1, i32 1, float* nonnull %4) #21
  ret void
}

declare void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"*, i32, i32, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10uniform1fvENS_15UniformLocationEiPKf(%"class.gl::Context"*, i32, i32, float*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %9, align 8
  %11 = icmp eq %"struct.gl::Program::LinkingState"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %6, %"class.gl::Context"* %0) #21
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %14 = icmp eq %"class.gl::Program"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %4
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %17 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %16, align 8
  %18 = icmp eq %"class.gl::ProgramPipeline"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %17, i64 0, i32 5, i32 1
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %20, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %24, align 8
  %26 = icmp eq %"struct.gl::Program::LinkingState"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %21, %"class.gl::Context"* %0) #21
  br label %28

28:                                               ; preds = %8, %12, %15, %19, %23, %27
  %29 = phi %"class.gl::Program"* [ %13, %12 ], [ null, %15 ], [ null, %19 ], [ %21, %23 ], [ %21, %27 ], [ %6, %8 ]
  tail call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %29, i32 %1, i32 %2, float* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16setUniform1iImplEPNS_7ProgramENS_15UniformLocationEiPKi(%"class.gl::Context"*, %"class.gl::Program"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %1, %"class.gl::Context"* %0, i32 %2, i32 %3, i32* %4) #21
  ret void
}

declare void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"*, %"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context22onSamplerUniformChangeEm(%"class.gl::Context"*, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State21onActiveTextureChangeEPKNS_7ContextEm(%"class.gl::State"* %3, %"class.gl::Context"* %0, i64 %1) #21
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %4, align 8
  ret void
}

declare void @_ZN2gl5State21onActiveTextureChangeEPKNS_7ContextEm(%"class.gl::State"*, %"class.gl::Context"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9uniform1iENS_15UniformLocationEi(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca i32, align 4
  store i32 %2, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %9, align 8
  %11 = icmp eq %"struct.gl::Program::LinkingState"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %6, %"class.gl::Context"* %0) #21
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %14 = icmp eq %"class.gl::Program"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %3
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %17 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %16, align 8
  %18 = icmp eq %"class.gl::ProgramPipeline"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %17, i64 0, i32 5, i32 1
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %20, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %24, align 8
  %26 = icmp eq %"struct.gl::Program::LinkingState"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %21, %"class.gl::Context"* %0) #21
  br label %28

28:                                               ; preds = %8, %12, %15, %19, %23, %27
  %29 = phi %"class.gl::Program"* [ %13, %12 ], [ null, %15 ], [ null, %19 ], [ %21, %23 ], [ %21, %27 ], [ %6, %8 ]
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %29, %"class.gl::Context"* %0, i32 %1, i32 1, i32* nonnull %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10uniform1ivENS_15UniformLocationEiPKi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %9, align 8
  %11 = icmp eq %"struct.gl::Program::LinkingState"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %6, %"class.gl::Context"* %0) #21
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %14 = icmp eq %"class.gl::Program"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %4
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %17 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %16, align 8
  %18 = icmp eq %"class.gl::ProgramPipeline"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %17, i64 0, i32 5, i32 1
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %20, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %24, align 8
  %26 = icmp eq %"struct.gl::Program::LinkingState"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %21, %"class.gl::Context"* %0) #21
  br label %28

28:                                               ; preds = %8, %12, %15, %19, %23, %27
  %29 = phi %"class.gl::Program"* [ %13, %12 ], [ null, %15 ], [ null, %19 ], [ %21, %23 ], [ %21, %27 ], [ %6, %8 ]
  tail call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %29, %"class.gl::Context"* %0, i32 %1, i32 %2, i32* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9uniform2fENS_15UniformLocationEff(%"class.gl::Context"*, i32, float, float) local_unnamed_addr #1 align 2 {
  %5 = alloca [2 x float], align 4
  %6 = bitcast [2 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #21
  %7 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 0
  %8 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 1
  store float %2, float* %7, align 4
  store float %3, float* %8, align 4
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %10 = load %"class.gl::Program"*, %"class.gl::Program"** %9, align 8
  %11 = icmp eq %"class.gl::Program"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %10, i64 0, i32 11, i32 0, i32 0, i32 0
  %14 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %13, align 8
  %15 = icmp eq %"struct.gl::Program::LinkingState"* %14, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %12
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %10, %"class.gl::Context"* %0) #21
  %17 = load %"class.gl::Program"*, %"class.gl::Program"** %9, align 8
  %18 = icmp eq %"class.gl::Program"* %17, null
  br i1 %18, label %19, label %32

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %21 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %20, align 8
  %22 = icmp eq %"class.gl::ProgramPipeline"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %21, i64 0, i32 5, i32 1
  %25 = load %"class.gl::Program"*, %"class.gl::Program"** %24, align 8
  %26 = icmp eq %"class.gl::Program"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %25, i64 0, i32 11, i32 0, i32 0, i32 0
  %29 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %28, align 8
  %30 = icmp eq %"struct.gl::Program::LinkingState"* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %25, %"class.gl::Context"* %0) #21
  br label %32

32:                                               ; preds = %12, %16, %19, %23, %27, %31
  %33 = phi %"class.gl::Program"* [ %17, %16 ], [ null, %19 ], [ null, %23 ], [ %25, %27 ], [ %25, %31 ], [ %10, %12 ]
  call void @_ZN2gl7Program13setUniform2fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %33, i32 %1, i32 1, float* nonnull %7) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #21
  ret void
}

declare void @_ZN2gl7Program13setUniform2fvENS_15UniformLocationEiPKf(%"class.gl::Program"*, i32, i32, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10uniform2fvENS_15UniformLocationEiPKf(%"class.gl::Context"*, i32, i32, float*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %9, align 8
  %11 = icmp eq %"struct.gl::Program::LinkingState"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %6, %"class.gl::Context"* %0) #21
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %14 = icmp eq %"class.gl::Program"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %4
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %17 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %16, align 8
  %18 = icmp eq %"class.gl::ProgramPipeline"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %17, i64 0, i32 5, i32 1
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %20, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %24, align 8
  %26 = icmp eq %"struct.gl::Program::LinkingState"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %21, %"class.gl::Context"* %0) #21
  br label %28

28:                                               ; preds = %8, %12, %15, %19, %23, %27
  %29 = phi %"class.gl::Program"* [ %13, %12 ], [ null, %15 ], [ null, %19 ], [ %21, %23 ], [ %21, %27 ], [ %6, %8 ]
  tail call void @_ZN2gl7Program13setUniform2fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %29, i32 %1, i32 %2, float* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9uniform2iENS_15UniformLocationEii(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca [2 x i32], align 4
  %6 = bitcast [2 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #21
  %7 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 0
  %8 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 1
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %10 = load %"class.gl::Program"*, %"class.gl::Program"** %9, align 8
  %11 = icmp eq %"class.gl::Program"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %10, i64 0, i32 11, i32 0, i32 0, i32 0
  %14 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %13, align 8
  %15 = icmp eq %"struct.gl::Program::LinkingState"* %14, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %12
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %10, %"class.gl::Context"* %0) #21
  %17 = load %"class.gl::Program"*, %"class.gl::Program"** %9, align 8
  %18 = icmp eq %"class.gl::Program"* %17, null
  br i1 %18, label %19, label %32

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %21 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %20, align 8
  %22 = icmp eq %"class.gl::ProgramPipeline"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %21, i64 0, i32 5, i32 1
  %25 = load %"class.gl::Program"*, %"class.gl::Program"** %24, align 8
  %26 = icmp eq %"class.gl::Program"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %25, i64 0, i32 11, i32 0, i32 0, i32 0
  %29 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %28, align 8
  %30 = icmp eq %"struct.gl::Program::LinkingState"* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %25, %"class.gl::Context"* %0) #21
  br label %32

32:                                               ; preds = %12, %16, %19, %23, %27, %31
  %33 = phi %"class.gl::Program"* [ %17, %16 ], [ null, %19 ], [ null, %23 ], [ %25, %27 ], [ %25, %31 ], [ %10, %12 ]
  call void @_ZN2gl7Program13setUniform2ivENS_15UniformLocationEiPKi(%"class.gl::Program"* %33, i32 %1, i32 1, i32* nonnull %7) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #21
  ret void
}

declare void @_ZN2gl7Program13setUniform2ivENS_15UniformLocationEiPKi(%"class.gl::Program"*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10uniform2ivENS_15UniformLocationEiPKi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %9, align 8
  %11 = icmp eq %"struct.gl::Program::LinkingState"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %6, %"class.gl::Context"* %0) #21
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %14 = icmp eq %"class.gl::Program"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %4
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %17 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %16, align 8
  %18 = icmp eq %"class.gl::ProgramPipeline"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %17, i64 0, i32 5, i32 1
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %20, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %24, align 8
  %26 = icmp eq %"struct.gl::Program::LinkingState"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %21, %"class.gl::Context"* %0) #21
  br label %28

28:                                               ; preds = %8, %12, %15, %19, %23, %27
  %29 = phi %"class.gl::Program"* [ %13, %12 ], [ null, %15 ], [ null, %19 ], [ %21, %23 ], [ %21, %27 ], [ %6, %8 ]
  tail call void @_ZN2gl7Program13setUniform2ivENS_15UniformLocationEiPKi(%"class.gl::Program"* %29, i32 %1, i32 %2, i32* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9uniform3fENS_15UniformLocationEfff(%"class.gl::Context"*, i32, float, float, float) local_unnamed_addr #1 align 2 {
  %6 = alloca [3 x float], align 4
  %7 = bitcast [3 x float]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #21
  %8 = getelementptr inbounds [3 x float], [3 x float]* %6, i64 0, i64 0
  %9 = getelementptr inbounds [3 x float], [3 x float]* %6, i64 0, i64 1
  %10 = getelementptr inbounds [3 x float], [3 x float]* %6, i64 0, i64 2
  store float %2, float* %8, align 4
  store float %3, float* %9, align 4
  store float %4, float* %10, align 4
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %12 = load %"class.gl::Program"*, %"class.gl::Program"** %11, align 8
  %13 = icmp eq %"class.gl::Program"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %12, i64 0, i32 11, i32 0, i32 0, i32 0
  %16 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %15, align 8
  %17 = icmp eq %"struct.gl::Program::LinkingState"* %16, null
  br i1 %17, label %34, label %18

18:                                               ; preds = %14
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %12, %"class.gl::Context"* %0) #21
  %19 = load %"class.gl::Program"*, %"class.gl::Program"** %11, align 8
  %20 = icmp eq %"class.gl::Program"* %19, null
  br i1 %20, label %21, label %34

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %23 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %22, align 8
  %24 = icmp eq %"class.gl::ProgramPipeline"* %23, null
  br i1 %24, label %34, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %23, i64 0, i32 5, i32 1
  %27 = load %"class.gl::Program"*, %"class.gl::Program"** %26, align 8
  %28 = icmp eq %"class.gl::Program"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %27, i64 0, i32 11, i32 0, i32 0, i32 0
  %31 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %30, align 8
  %32 = icmp eq %"struct.gl::Program::LinkingState"* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %27, %"class.gl::Context"* %0) #21
  br label %34

34:                                               ; preds = %14, %18, %21, %25, %29, %33
  %35 = phi %"class.gl::Program"* [ %19, %18 ], [ null, %21 ], [ null, %25 ], [ %27, %29 ], [ %27, %33 ], [ %12, %14 ]
  call void @_ZN2gl7Program13setUniform3fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %35, i32 %1, i32 1, float* nonnull %8) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #21
  ret void
}

declare void @_ZN2gl7Program13setUniform3fvENS_15UniformLocationEiPKf(%"class.gl::Program"*, i32, i32, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10uniform3fvENS_15UniformLocationEiPKf(%"class.gl::Context"*, i32, i32, float*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %9, align 8
  %11 = icmp eq %"struct.gl::Program::LinkingState"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %6, %"class.gl::Context"* %0) #21
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %14 = icmp eq %"class.gl::Program"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %4
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %17 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %16, align 8
  %18 = icmp eq %"class.gl::ProgramPipeline"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %17, i64 0, i32 5, i32 1
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %20, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %24, align 8
  %26 = icmp eq %"struct.gl::Program::LinkingState"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %21, %"class.gl::Context"* %0) #21
  br label %28

28:                                               ; preds = %8, %12, %15, %19, %23, %27
  %29 = phi %"class.gl::Program"* [ %13, %12 ], [ null, %15 ], [ null, %19 ], [ %21, %23 ], [ %21, %27 ], [ %6, %8 ]
  tail call void @_ZN2gl7Program13setUniform3fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %29, i32 %1, i32 %2, float* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9uniform3iENS_15UniformLocationEiii(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = alloca [3 x i32], align 4
  %7 = bitcast [3 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #21
  %8 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 0
  %9 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 1
  %10 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 2
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %12 = load %"class.gl::Program"*, %"class.gl::Program"** %11, align 8
  %13 = icmp eq %"class.gl::Program"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %12, i64 0, i32 11, i32 0, i32 0, i32 0
  %16 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %15, align 8
  %17 = icmp eq %"struct.gl::Program::LinkingState"* %16, null
  br i1 %17, label %34, label %18

18:                                               ; preds = %14
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %12, %"class.gl::Context"* %0) #21
  %19 = load %"class.gl::Program"*, %"class.gl::Program"** %11, align 8
  %20 = icmp eq %"class.gl::Program"* %19, null
  br i1 %20, label %21, label %34

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %23 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %22, align 8
  %24 = icmp eq %"class.gl::ProgramPipeline"* %23, null
  br i1 %24, label %34, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %23, i64 0, i32 5, i32 1
  %27 = load %"class.gl::Program"*, %"class.gl::Program"** %26, align 8
  %28 = icmp eq %"class.gl::Program"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %27, i64 0, i32 11, i32 0, i32 0, i32 0
  %31 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %30, align 8
  %32 = icmp eq %"struct.gl::Program::LinkingState"* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %27, %"class.gl::Context"* %0) #21
  br label %34

34:                                               ; preds = %14, %18, %21, %25, %29, %33
  %35 = phi %"class.gl::Program"* [ %19, %18 ], [ null, %21 ], [ null, %25 ], [ %27, %29 ], [ %27, %33 ], [ %12, %14 ]
  call void @_ZN2gl7Program13setUniform3ivENS_15UniformLocationEiPKi(%"class.gl::Program"* %35, i32 %1, i32 1, i32* nonnull %8) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #21
  ret void
}

declare void @_ZN2gl7Program13setUniform3ivENS_15UniformLocationEiPKi(%"class.gl::Program"*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10uniform3ivENS_15UniformLocationEiPKi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %9, align 8
  %11 = icmp eq %"struct.gl::Program::LinkingState"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %6, %"class.gl::Context"* %0) #21
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %14 = icmp eq %"class.gl::Program"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %4
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %17 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %16, align 8
  %18 = icmp eq %"class.gl::ProgramPipeline"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %17, i64 0, i32 5, i32 1
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %20, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %24, align 8
  %26 = icmp eq %"struct.gl::Program::LinkingState"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %21, %"class.gl::Context"* %0) #21
  br label %28

28:                                               ; preds = %8, %12, %15, %19, %23, %27
  %29 = phi %"class.gl::Program"* [ %13, %12 ], [ null, %15 ], [ null, %19 ], [ %21, %23 ], [ %21, %27 ], [ %6, %8 ]
  tail call void @_ZN2gl7Program13setUniform3ivENS_15UniformLocationEiPKi(%"class.gl::Program"* %29, i32 %1, i32 %2, i32* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9uniform4fENS_15UniformLocationEffff(%"class.gl::Context"*, i32, float, float, float, float) local_unnamed_addr #1 align 2 {
  %7 = alloca [4 x float], align 16
  %8 = bitcast [4 x float]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #21
  %9 = getelementptr inbounds [4 x float], [4 x float]* %7, i64 0, i64 0
  %10 = getelementptr inbounds [4 x float], [4 x float]* %7, i64 0, i64 1
  %11 = getelementptr inbounds [4 x float], [4 x float]* %7, i64 0, i64 2
  %12 = getelementptr inbounds [4 x float], [4 x float]* %7, i64 0, i64 3
  store float %2, float* %9, align 16
  store float %3, float* %10, align 4
  store float %4, float* %11, align 8
  store float %5, float* %12, align 4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %13, align 8
  %15 = icmp eq %"class.gl::Program"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %14, i64 0, i32 11, i32 0, i32 0, i32 0
  %18 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %17, align 8
  %19 = icmp eq %"struct.gl::Program::LinkingState"* %18, null
  br i1 %19, label %36, label %20

20:                                               ; preds = %16
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %14, %"class.gl::Context"* %0) #21
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %13, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %23, label %36

23:                                               ; preds = %20, %6
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %25 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %24, align 8
  %26 = icmp eq %"class.gl::ProgramPipeline"* %25, null
  br i1 %26, label %36, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %25, i64 0, i32 5, i32 1
  %29 = load %"class.gl::Program"*, %"class.gl::Program"** %28, align 8
  %30 = icmp eq %"class.gl::Program"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %29, i64 0, i32 11, i32 0, i32 0, i32 0
  %33 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %32, align 8
  %34 = icmp eq %"struct.gl::Program::LinkingState"* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %29, %"class.gl::Context"* %0) #21
  br label %36

36:                                               ; preds = %16, %20, %23, %27, %31, %35
  %37 = phi %"class.gl::Program"* [ %21, %20 ], [ null, %23 ], [ null, %27 ], [ %29, %31 ], [ %29, %35 ], [ %14, %16 ]
  call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %37, i32 %1, i32 1, float* nonnull %9) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #21
  ret void
}

declare void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"*, i32, i32, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10uniform4fvENS_15UniformLocationEiPKf(%"class.gl::Context"*, i32, i32, float*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %9, align 8
  %11 = icmp eq %"struct.gl::Program::LinkingState"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %6, %"class.gl::Context"* %0) #21
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %14 = icmp eq %"class.gl::Program"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %4
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %17 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %16, align 8
  %18 = icmp eq %"class.gl::ProgramPipeline"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %17, i64 0, i32 5, i32 1
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %20, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %24, align 8
  %26 = icmp eq %"struct.gl::Program::LinkingState"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %21, %"class.gl::Context"* %0) #21
  br label %28

28:                                               ; preds = %8, %12, %15, %19, %23, %27
  %29 = phi %"class.gl::Program"* [ %13, %12 ], [ null, %15 ], [ null, %19 ], [ %21, %23 ], [ %21, %27 ], [ %6, %8 ]
  tail call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %29, i32 %1, i32 %2, float* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9uniform4iENS_15UniformLocationEiiii(%"class.gl::Context"*, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca [4 x i32], align 16
  %8 = bitcast [4 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #21
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 0
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 1
  %11 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 2
  %12 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 3
  store i32 %2, i32* %9, align 16
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 8
  store i32 %5, i32* %12, align 4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %13, align 8
  %15 = icmp eq %"class.gl::Program"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %14, i64 0, i32 11, i32 0, i32 0, i32 0
  %18 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %17, align 8
  %19 = icmp eq %"struct.gl::Program::LinkingState"* %18, null
  br i1 %19, label %36, label %20

20:                                               ; preds = %16
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %14, %"class.gl::Context"* %0) #21
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %13, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %23, label %36

23:                                               ; preds = %20, %6
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %25 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %24, align 8
  %26 = icmp eq %"class.gl::ProgramPipeline"* %25, null
  br i1 %26, label %36, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %25, i64 0, i32 5, i32 1
  %29 = load %"class.gl::Program"*, %"class.gl::Program"** %28, align 8
  %30 = icmp eq %"class.gl::Program"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %29, i64 0, i32 11, i32 0, i32 0, i32 0
  %33 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %32, align 8
  %34 = icmp eq %"struct.gl::Program::LinkingState"* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %29, %"class.gl::Context"* %0) #21
  br label %36

36:                                               ; preds = %16, %20, %23, %27, %31, %35
  %37 = phi %"class.gl::Program"* [ %21, %20 ], [ null, %23 ], [ null, %27 ], [ %29, %31 ], [ %29, %35 ], [ %14, %16 ]
  call void @_ZN2gl7Program13setUniform4ivENS_15UniformLocationEiPKi(%"class.gl::Program"* %37, i32 %1, i32 1, i32* nonnull %9) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #21
  ret void
}

declare void @_ZN2gl7Program13setUniform4ivENS_15UniformLocationEiPKi(%"class.gl::Program"*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10uniform4ivENS_15UniformLocationEiPKi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %9, align 8
  %11 = icmp eq %"struct.gl::Program::LinkingState"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %6, %"class.gl::Context"* %0) #21
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %14 = icmp eq %"class.gl::Program"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %4
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %17 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %16, align 8
  %18 = icmp eq %"class.gl::ProgramPipeline"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %17, i64 0, i32 5, i32 1
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %20, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %24, align 8
  %26 = icmp eq %"struct.gl::Program::LinkingState"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %21, %"class.gl::Context"* %0) #21
  br label %28

28:                                               ; preds = %8, %12, %15, %19, %23, %27
  %29 = phi %"class.gl::Program"* [ %13, %12 ], [ null, %15 ], [ null, %19 ], [ %21, %23 ], [ %21, %27 ], [ %6, %8 ]
  tail call void @_ZN2gl7Program13setUniform4ivENS_15UniformLocationEiPKi(%"class.gl::Program"* %29, i32 %1, i32 %2, i32* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16uniformMatrix2fvENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %7 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %8 = icmp eq %"class.gl::Program"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %7, i64 0, i32 11, i32 0, i32 0, i32 0
  %11 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %10, align 8
  %12 = icmp eq %"struct.gl::Program::LinkingState"* %11, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %7, %"class.gl::Context"* %0) #21
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %15 = icmp eq %"class.gl::Program"* %14, null
  br i1 %15, label %16, label %29

16:                                               ; preds = %13, %5
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %18 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %17, align 8
  %19 = icmp eq %"class.gl::ProgramPipeline"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %18, i64 0, i32 5, i32 1
  %22 = load %"class.gl::Program"*, %"class.gl::Program"** %21, align 8
  %23 = icmp eq %"class.gl::Program"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %22, i64 0, i32 11, i32 0, i32 0, i32 0
  %26 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %25, align 8
  %27 = icmp eq %"struct.gl::Program::LinkingState"* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %22, %"class.gl::Context"* %0) #21
  br label %29

29:                                               ; preds = %9, %13, %16, %20, %24, %28
  %30 = phi %"class.gl::Program"* [ %14, %13 ], [ null, %16 ], [ null, %20 ], [ %22, %24 ], [ %22, %28 ], [ %7, %9 ]
  tail call void @_ZN2gl7Program19setUniformMatrix2fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %30, i32 %1, i32 %2, i8 zeroext %3, float* %4) #21
  ret void
}

declare void @_ZN2gl7Program19setUniformMatrix2fvENS_15UniformLocationEihPKf(%"class.gl::Program"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16uniformMatrix3fvENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %7 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %8 = icmp eq %"class.gl::Program"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %7, i64 0, i32 11, i32 0, i32 0, i32 0
  %11 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %10, align 8
  %12 = icmp eq %"struct.gl::Program::LinkingState"* %11, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %7, %"class.gl::Context"* %0) #21
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %15 = icmp eq %"class.gl::Program"* %14, null
  br i1 %15, label %16, label %29

16:                                               ; preds = %13, %5
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %18 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %17, align 8
  %19 = icmp eq %"class.gl::ProgramPipeline"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %18, i64 0, i32 5, i32 1
  %22 = load %"class.gl::Program"*, %"class.gl::Program"** %21, align 8
  %23 = icmp eq %"class.gl::Program"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %22, i64 0, i32 11, i32 0, i32 0, i32 0
  %26 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %25, align 8
  %27 = icmp eq %"struct.gl::Program::LinkingState"* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %22, %"class.gl::Context"* %0) #21
  br label %29

29:                                               ; preds = %9, %13, %16, %20, %24, %28
  %30 = phi %"class.gl::Program"* [ %14, %13 ], [ null, %16 ], [ null, %20 ], [ %22, %24 ], [ %22, %28 ], [ %7, %9 ]
  tail call void @_ZN2gl7Program19setUniformMatrix3fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %30, i32 %1, i32 %2, i8 zeroext %3, float* %4) #21
  ret void
}

declare void @_ZN2gl7Program19setUniformMatrix3fvENS_15UniformLocationEihPKf(%"class.gl::Program"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16uniformMatrix4fvENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %7 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %8 = icmp eq %"class.gl::Program"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %7, i64 0, i32 11, i32 0, i32 0, i32 0
  %11 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %10, align 8
  %12 = icmp eq %"struct.gl::Program::LinkingState"* %11, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %7, %"class.gl::Context"* %0) #21
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %15 = icmp eq %"class.gl::Program"* %14, null
  br i1 %15, label %16, label %29

16:                                               ; preds = %13, %5
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %18 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %17, align 8
  %19 = icmp eq %"class.gl::ProgramPipeline"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %18, i64 0, i32 5, i32 1
  %22 = load %"class.gl::Program"*, %"class.gl::Program"** %21, align 8
  %23 = icmp eq %"class.gl::Program"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %22, i64 0, i32 11, i32 0, i32 0, i32 0
  %26 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %25, align 8
  %27 = icmp eq %"struct.gl::Program::LinkingState"* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %22, %"class.gl::Context"* %0) #21
  br label %29

29:                                               ; preds = %9, %13, %16, %20, %24, %28
  %30 = phi %"class.gl::Program"* [ %14, %13 ], [ null, %16 ], [ null, %20 ], [ %22, %24 ], [ %22, %28 ], [ %7, %9 ]
  tail call void @_ZN2gl7Program19setUniformMatrix4fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %30, i32 %1, i32 %2, i8 zeroext %3, float* %4) #21
  ret void
}

declare void @_ZN2gl7Program19setUniformMatrix4fvENS_15UniformLocationEihPKf(%"class.gl::Program"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15validateProgramENS_15ShaderProgramIDE(%"class.gl::Context"*, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %4 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %3, align 8
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 1
  %11 = load %"class.gl::Program"**, %"class.gl::Program"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %11, i64 %5
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %12, align 8
  %14 = icmp eq %"class.gl::Program"* %13, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %14, label %86, label %78

15:                                               ; preds = %2
  %16 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %17 = add i64 %16, %5
  %18 = zext i64 %17 to i128
  %19 = mul nuw i128 %18, 11376068507788127593
  %20 = lshr i128 %19, 64
  %21 = xor i128 %20, %19
  %22 = trunc i128 %21 to i64
  %23 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %22, 7
  %28 = ptrtoint i8* %24 to i64
  %29 = lshr i64 %28, 12
  %30 = xor i64 %27, %29
  %31 = trunc i128 %21 to i8
  %32 = and i8 %31, 127
  %33 = insertelement <16 x i8> undef, i8 %32, i32 0
  %34 = shufflevector <16 x i8> %33, <16 x i8> undef, <16 x i32> zeroinitializer
  %35 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %36

36:                                               ; preds = %66, %15
  %37 = phi i64 [ %30, %15 ], [ %68, %66 ]
  %38 = phi i64 [ 0, %15 ], [ %67, %66 ]
  %39 = and i64 %37, %26
  %40 = getelementptr inbounds i8, i8* %24, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %34, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %35, align 8
  br label %49

49:                                               ; preds = %58, %46
  %50 = phi i32 [ %47, %46 ], [ %60, %58 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #21, !range !8
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %26
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %48, i64 %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %69, label %58, !prof !9

58:                                               ; preds = %49
  %59 = add i32 %50, -1
  %60 = and i32 %59, %50
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %49

62:                                               ; preds = %58, %36
  %63 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %86, !prof !10

66:                                               ; preds = %62
  %67 = add i64 %38, 16
  %68 = add i64 %67, %39
  br label %36

69:                                               ; preds = %49
  %70 = getelementptr inbounds i8, i8* %24, i64 %54
  %71 = icmp ne i8* %70, null
  tail call void @llvm.assume(i1 %71) #21
  %72 = load i8, i8* %70, align 1
  %73 = icmp sgt i8 %72, -1
  br i1 %73, label %75, label %74, !prof !9

74:                                               ; preds = %69
  tail call void @llvm.trap() #21
  unreachable

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %48, i64 %54, i32 0, i32 1
  %77 = load %"class.gl::Program"*, %"class.gl::Program"** %76, align 8
  br label %78

78:                                               ; preds = %75, %9
  %79 = phi %"class.gl::Program"* [ %13, %9 ], [ %77, %75 ]
  %80 = icmp eq %"class.gl::Program"* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %79, i64 0, i32 11, i32 0, i32 0, i32 0
  %83 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %82, align 8
  %84 = icmp eq %"struct.gl::Program::LinkingState"* %83, null
  br i1 %84, label %86, label %85

85:                                               ; preds = %81
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %79, %"class.gl::Context"* %0) #21
  br label %86

86:                                               ; preds = %62, %9, %78, %81, %85
  %87 = phi %"class.gl::Program"* [ null, %78 ], [ %79, %81 ], [ %79, %85 ], [ null, %9 ], [ null, %62 ]
  %88 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5
  tail call void @_ZN2gl7Program8validateERKNS_4CapsE(%"class.gl::Program"* %87, %"struct.gl::Caps"* dereferenceable(872) %88) #21
  ret void
}

declare void @_ZN2gl7Program8validateERKNS_4CapsE(%"class.gl::Program"*, %"struct.gl::Caps"* dereferenceable(872)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23validateProgramPipelineENS_17ProgramPipelineIDE(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 17
  %4 = load %"class.gl::ProgramPipelineManager"*, %"class.gl::ProgramPipelineManager"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %6 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %6, i64 0, i32 0
  %8 = tail call %"class.gl::ProgramPipeline"* @_ZN2gl22ProgramPipelineManager30checkProgramPipelineAllocationEPN2rx13GLImplFactoryENS_17ProgramPipelineIDE(%"class.gl::ProgramPipelineManager"* %4, %"class.rx::GLImplFactory"* %7, i32 %1)
  tail call void @_ZN2gl15ProgramPipeline8validateEPKNS_7ContextE(%"class.gl::ProgramPipeline"* %8, %"class.gl::Context"* %0) #21
  ret void
}

declare void @_ZN2gl15ProgramPipeline8validateEPKNS_7ContextE(%"class.gl::ProgramPipeline"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16getProgramBinaryENS_15ShaderProgramIDEiPiPjPv(%"class.gl::Context"*, i32, i32, i32*, i32*, i8*) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %8 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %9
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 1
  %15 = load %"class.gl::Program"**, %"class.gl::Program"*** %14, align 8
  %16 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %15, i64 %9
  %17 = load %"class.gl::Program"*, %"class.gl::Program"** %16, align 8
  %18 = icmp eq %"class.gl::Program"* %17, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %18, label %90, label %82

19:                                               ; preds = %6
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = add i64 %20, %9
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %26, 7
  %32 = ptrtoint i8* %28 to i64
  %33 = lshr i64 %32, 12
  %34 = xor i64 %31, %33
  %35 = trunc i128 %25 to i8
  %36 = and i8 %35, 127
  %37 = insertelement <16 x i8> undef, i8 %36, i32 0
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> zeroinitializer
  %39 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %40

40:                                               ; preds = %70, %19
  %41 = phi i64 [ %34, %19 ], [ %72, %70 ]
  %42 = phi i64 [ 0, %19 ], [ %71, %70 ]
  %43 = and i64 %41, %30
  %44 = getelementptr inbounds i8, i8* %28, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %38, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  %52 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %39, align 8
  br label %53

53:                                               ; preds = %62, %50
  %54 = phi i32 [ %51, %50 ], [ %64, %62 ]
  %55 = tail call i32 @llvm.cttz.i32(i32 %54, i1 false) #21, !range !8
  %56 = zext i32 %55 to i64
  %57 = add i64 %43, %56
  %58 = and i64 %57, %30
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %1
  br i1 %61, label %73, label %62, !prof !9

62:                                               ; preds = %53
  %63 = add i32 %54, -1
  %64 = and i32 %63, %54
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %62, %40
  %67 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %90, !prof !10

70:                                               ; preds = %66
  %71 = add i64 %42, 16
  %72 = add i64 %71, %43
  br label %40

73:                                               ; preds = %53
  %74 = getelementptr inbounds i8, i8* %28, i64 %58
  %75 = icmp ne i8* %74, null
  tail call void @llvm.assume(i1 %75) #21
  %76 = load i8, i8* %74, align 1
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %73
  tail call void @llvm.trap() #21
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 1
  %81 = load %"class.gl::Program"*, %"class.gl::Program"** %80, align 8
  br label %82

82:                                               ; preds = %79, %13
  %83 = phi %"class.gl::Program"* [ %17, %13 ], [ %81, %79 ]
  %84 = icmp eq %"class.gl::Program"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %83, i64 0, i32 11, i32 0, i32 0, i32 0
  %87 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %86, align 8
  %88 = icmp eq %"struct.gl::Program::LinkingState"* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %83, %"class.gl::Context"* %0) #21
  br label %90

90:                                               ; preds = %66, %13, %82, %85, %89
  %91 = phi %"class.gl::Program"* [ null, %82 ], [ %83, %85 ], [ %83, %89 ], [ null, %13 ], [ null, %66 ]
  %92 = tail call i32 @_ZNK2gl7Program10saveBinaryEPNS_7ContextEPjPviPi(%"class.gl::Program"* %91, %"class.gl::Context"* %0, i32* %4, i8* %5, i32 %2, i32* %3) #21
  ret void
}

declare i32 @_ZNK2gl7Program10saveBinaryEPNS_7ContextEPjPviPi(%"class.gl::Program"*, %"class.gl::Context"*, i32*, i8*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13programBinaryENS_15ShaderProgramIDEjPKvi(%"class.gl::Context"*, i32, i32, i8*, i32) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  %91 = tail call i32 @_ZN2gl7Program10loadBinaryEPKNS_7ContextEjPKvi(%"class.gl::Program"* %90, %"class.gl::Context"* %0, i32 %2, i8* %3, i32 %4) #21
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %113, label %93

93:                                               ; preds = %89
  %94 = tail call i32 @_ZNK2gl7Program11getRefCountEv(%"class.gl::Program"* %90) #21
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %113, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %90, i64 0, i32 11, i32 0, i32 0, i32 0
  %98 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %97, align 8
  %99 = icmp eq %"struct.gl::Program::LinkingState"* %98, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %96
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* %90, %"class.gl::Context"* %0) #21
  br label %101

101:                                              ; preds = %100, %96
  %102 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %90, i64 0, i32 10
  %103 = load i8, i8* %102, align 8, !range !2
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %111, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %107 = tail call i32 @_ZN2gl5State25onProgramExecutableChangeEPKNS_7ContextEPNS_7ProgramE(%"class.gl::State"* %106, %"class.gl::Context"* %0, %"class.gl::Program"* %90) #21
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %90, i64 0, i32 1
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %110, i32 8) #21
  br label %111

111:                                              ; preds = %109, %101
  %112 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache25onProgramExecutableChangeEPNS_7ContextE(%"class.gl::StateCache"* %112, %"class.gl::Context"* %0) #21
  br label %113

113:                                              ; preds = %89, %93, %105, %111
  ret void
}

declare i32 @_ZN2gl7Program10loadBinaryEPKNS_7ContextEjPKvi(%"class.gl::Program"*, %"class.gl::Context"*, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10uniform1uiENS_15UniformLocationEj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca i32, align 4
  store i32 %2, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %9, align 8
  %11 = icmp eq %"struct.gl::Program::LinkingState"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %6, %"class.gl::Context"* %0) #21
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %14 = icmp eq %"class.gl::Program"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %3
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %17 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %16, align 8
  %18 = icmp eq %"class.gl::ProgramPipeline"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %17, i64 0, i32 5, i32 1
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %20, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %24, align 8
  %26 = icmp eq %"struct.gl::Program::LinkingState"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %21, %"class.gl::Context"* %0) #21
  br label %28

28:                                               ; preds = %8, %12, %15, %19, %23, %27
  %29 = phi %"class.gl::Program"* [ %13, %12 ], [ null, %15 ], [ null, %19 ], [ %21, %23 ], [ %21, %27 ], [ %6, %8 ]
  call void @_ZN2gl7Program14setUniform1uivENS_15UniformLocationEiPKj(%"class.gl::Program"* %29, i32 %1, i32 1, i32* nonnull %4) #21
  ret void
}

declare void @_ZN2gl7Program14setUniform1uivENS_15UniformLocationEiPKj(%"class.gl::Program"*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10uniform2uiENS_15UniformLocationEjj(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca [2 x i32], align 4
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %7 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %8 = icmp eq %"class.gl::Program"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %7, i64 0, i32 11, i32 0, i32 0, i32 0
  %11 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %10, align 8
  %12 = icmp eq %"struct.gl::Program::LinkingState"* %11, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %7, %"class.gl::Context"* %0) #21
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %15 = icmp eq %"class.gl::Program"* %14, null
  br i1 %15, label %16, label %29

16:                                               ; preds = %13, %4
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %18 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %17, align 8
  %19 = icmp eq %"class.gl::ProgramPipeline"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %18, i64 0, i32 5, i32 1
  %22 = load %"class.gl::Program"*, %"class.gl::Program"** %21, align 8
  %23 = icmp eq %"class.gl::Program"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %22, i64 0, i32 11, i32 0, i32 0, i32 0
  %26 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %25, align 8
  %27 = icmp eq %"struct.gl::Program::LinkingState"* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %22, %"class.gl::Context"* %0) #21
  br label %29

29:                                               ; preds = %9, %13, %16, %20, %24, %28
  %30 = phi %"class.gl::Program"* [ %14, %13 ], [ null, %16 ], [ null, %20 ], [ %22, %24 ], [ %22, %28 ], [ %7, %9 ]
  %31 = bitcast [2 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #21
  %32 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 0
  %33 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 1
  store i32 %2, i32* %32, align 4
  store i32 %3, i32* %33, align 4
  call void @_ZN2gl7Program14setUniform2uivENS_15UniformLocationEiPKj(%"class.gl::Program"* %30, i32 %1, i32 1, i32* nonnull %32) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #21
  ret void
}

declare void @_ZN2gl7Program14setUniform2uivENS_15UniformLocationEiPKj(%"class.gl::Program"*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10uniform3uiENS_15UniformLocationEjjj(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = alloca [3 x i32], align 4
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %8 = load %"class.gl::Program"*, %"class.gl::Program"** %7, align 8
  %9 = icmp eq %"class.gl::Program"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %8, i64 0, i32 11, i32 0, i32 0, i32 0
  %12 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %11, align 8
  %13 = icmp eq %"struct.gl::Program::LinkingState"* %12, null
  br i1 %13, label %30, label %14

14:                                               ; preds = %10
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %8, %"class.gl::Context"* %0) #21
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %7, align 8
  %16 = icmp eq %"class.gl::Program"* %15, null
  br i1 %16, label %17, label %30

17:                                               ; preds = %14, %5
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %19 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %18, align 8
  %20 = icmp eq %"class.gl::ProgramPipeline"* %19, null
  br i1 %20, label %30, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %19, i64 0, i32 5, i32 1
  %23 = load %"class.gl::Program"*, %"class.gl::Program"** %22, align 8
  %24 = icmp eq %"class.gl::Program"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %23, i64 0, i32 11, i32 0, i32 0, i32 0
  %27 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %26, align 8
  %28 = icmp eq %"struct.gl::Program::LinkingState"* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %23, %"class.gl::Context"* %0) #21
  br label %30

30:                                               ; preds = %10, %14, %17, %21, %25, %29
  %31 = phi %"class.gl::Program"* [ %15, %14 ], [ null, %17 ], [ null, %21 ], [ %23, %25 ], [ %23, %29 ], [ %8, %10 ]
  %32 = bitcast [3 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %32) #21
  %33 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 0
  %34 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 1
  %35 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 2
  store i32 %2, i32* %33, align 4
  store i32 %3, i32* %34, align 4
  store i32 %4, i32* %35, align 4
  call void @_ZN2gl7Program14setUniform3uivENS_15UniformLocationEiPKj(%"class.gl::Program"* %31, i32 %1, i32 1, i32* nonnull %33) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %32) #21
  ret void
}

declare void @_ZN2gl7Program14setUniform3uivENS_15UniformLocationEiPKj(%"class.gl::Program"*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10uniform4uiENS_15UniformLocationEjjjj(%"class.gl::Context"*, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca [4 x i32], align 16
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %9 = load %"class.gl::Program"*, %"class.gl::Program"** %8, align 8
  %10 = icmp eq %"class.gl::Program"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %9, i64 0, i32 11, i32 0, i32 0, i32 0
  %13 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %12, align 8
  %14 = icmp eq %"struct.gl::Program::LinkingState"* %13, null
  br i1 %14, label %31, label %15

15:                                               ; preds = %11
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %9, %"class.gl::Context"* %0) #21
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %8, align 8
  %17 = icmp eq %"class.gl::Program"* %16, null
  br i1 %17, label %18, label %31

18:                                               ; preds = %15, %6
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %20 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %19, align 8
  %21 = icmp eq %"class.gl::ProgramPipeline"* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %20, i64 0, i32 5, i32 1
  %24 = load %"class.gl::Program"*, %"class.gl::Program"** %23, align 8
  %25 = icmp eq %"class.gl::Program"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %24, i64 0, i32 11, i32 0, i32 0, i32 0
  %28 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %27, align 8
  %29 = icmp eq %"struct.gl::Program::LinkingState"* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %24, %"class.gl::Context"* %0) #21
  br label %31

31:                                               ; preds = %11, %15, %18, %22, %26, %30
  %32 = phi %"class.gl::Program"* [ %16, %15 ], [ null, %18 ], [ null, %22 ], [ %24, %26 ], [ %24, %30 ], [ %9, %11 ]
  %33 = bitcast [4 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #21
  %34 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 0
  %35 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 1
  %36 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 2
  %37 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 3
  store i32 %2, i32* %34, align 16
  store i32 %3, i32* %35, align 4
  store i32 %4, i32* %36, align 8
  store i32 %5, i32* %37, align 4
  call void @_ZN2gl7Program14setUniform4uivENS_15UniformLocationEiPKj(%"class.gl::Program"* %32, i32 %1, i32 1, i32* nonnull %34) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #21
  ret void
}

declare void @_ZN2gl7Program14setUniform4uivENS_15UniformLocationEiPKj(%"class.gl::Program"*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11uniform1uivENS_15UniformLocationEiPKj(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %9, align 8
  %11 = icmp eq %"struct.gl::Program::LinkingState"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %6, %"class.gl::Context"* %0) #21
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %14 = icmp eq %"class.gl::Program"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %4
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %17 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %16, align 8
  %18 = icmp eq %"class.gl::ProgramPipeline"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %17, i64 0, i32 5, i32 1
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %20, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %24, align 8
  %26 = icmp eq %"struct.gl::Program::LinkingState"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %21, %"class.gl::Context"* %0) #21
  br label %28

28:                                               ; preds = %8, %12, %15, %19, %23, %27
  %29 = phi %"class.gl::Program"* [ %13, %12 ], [ null, %15 ], [ null, %19 ], [ %21, %23 ], [ %21, %27 ], [ %6, %8 ]
  tail call void @_ZN2gl7Program14setUniform1uivENS_15UniformLocationEiPKj(%"class.gl::Program"* %29, i32 %1, i32 %2, i32* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11uniform2uivENS_15UniformLocationEiPKj(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %9, align 8
  %11 = icmp eq %"struct.gl::Program::LinkingState"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %6, %"class.gl::Context"* %0) #21
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %14 = icmp eq %"class.gl::Program"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %4
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %17 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %16, align 8
  %18 = icmp eq %"class.gl::ProgramPipeline"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %17, i64 0, i32 5, i32 1
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %20, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %24, align 8
  %26 = icmp eq %"struct.gl::Program::LinkingState"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %21, %"class.gl::Context"* %0) #21
  br label %28

28:                                               ; preds = %8, %12, %15, %19, %23, %27
  %29 = phi %"class.gl::Program"* [ %13, %12 ], [ null, %15 ], [ null, %19 ], [ %21, %23 ], [ %21, %27 ], [ %6, %8 ]
  tail call void @_ZN2gl7Program14setUniform2uivENS_15UniformLocationEiPKj(%"class.gl::Program"* %29, i32 %1, i32 %2, i32* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11uniform3uivENS_15UniformLocationEiPKj(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %9, align 8
  %11 = icmp eq %"struct.gl::Program::LinkingState"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %6, %"class.gl::Context"* %0) #21
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %14 = icmp eq %"class.gl::Program"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %4
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %17 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %16, align 8
  %18 = icmp eq %"class.gl::ProgramPipeline"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %17, i64 0, i32 5, i32 1
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %20, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %24, align 8
  %26 = icmp eq %"struct.gl::Program::LinkingState"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %21, %"class.gl::Context"* %0) #21
  br label %28

28:                                               ; preds = %8, %12, %15, %19, %23, %27
  %29 = phi %"class.gl::Program"* [ %13, %12 ], [ null, %15 ], [ null, %19 ], [ %21, %23 ], [ %21, %27 ], [ %6, %8 ]
  tail call void @_ZN2gl7Program14setUniform3uivENS_15UniformLocationEiPKj(%"class.gl::Program"* %29, i32 %1, i32 %2, i32* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11uniform4uivENS_15UniformLocationEiPKj(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %9, align 8
  %11 = icmp eq %"struct.gl::Program::LinkingState"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %6, %"class.gl::Context"* %0) #21
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %14 = icmp eq %"class.gl::Program"* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12, %4
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %17 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %16, align 8
  %18 = icmp eq %"class.gl::ProgramPipeline"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %17, i64 0, i32 5, i32 1
  %21 = load %"class.gl::Program"*, %"class.gl::Program"** %20, align 8
  %22 = icmp eq %"class.gl::Program"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %24, align 8
  %26 = icmp eq %"struct.gl::Program::LinkingState"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %21, %"class.gl::Context"* %0) #21
  br label %28

28:                                               ; preds = %8, %12, %15, %19, %23, %27
  %29 = phi %"class.gl::Program"* [ %13, %12 ], [ null, %15 ], [ null, %19 ], [ %21, %23 ], [ %21, %27 ], [ %6, %8 ]
  tail call void @_ZN2gl7Program14setUniform4uivENS_15UniformLocationEiPKj(%"class.gl::Program"* %29, i32 %1, i32 %2, i32* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10genQueriesEiPNS_7QueryIDE(%"class.gl::Context"*, i32, %"struct.gl::QueryID"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 21
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20
  %8 = zext i32 %1 to i64
  br label %10

9:                                                ; preds = %10, %3
  ret void

10:                                               ; preds = %10, %5
  %11 = phi i64 [ 0, %5 ], [ %14, %10 ]
  %12 = tail call i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* %6) #21
  tail call void @_ZN2gl11ResourceMapINS_5QueryENS_7QueryIDEE6assignES2_PS1_(%"class.gl::ResourceMap.556"* %7, i32 %12, %"class.gl::Query"* null)
  %13 = getelementptr inbounds %"struct.gl::QueryID", %"struct.gl::QueryID"* %2, i64 %11, i32 0
  store i32 %12, i32* %13, align 4
  %14 = add nuw nsw i64 %11, 1
  %15 = icmp eq i64 %14, %8
  br i1 %15, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13deleteQueriesEiPKNS_7QueryIDE(%"class.gl::Context"*, i32, %"struct.gl::QueryID"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.gl::Query"*, align 8
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = bitcast %"class.gl::Query"** %4 to i8*
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 21
  %10 = zext i32 %1 to i64
  br label %12

11:                                               ; preds = %34, %3
  ret void

12:                                               ; preds = %34, %6
  %13 = phi i64 [ 0, %6 ], [ %35, %34 ]
  %14 = getelementptr inbounds %"struct.gl::QueryID", %"struct.gl::QueryID"* %2, i64 %13, i32 0
  %15 = load i32, i32* %14, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #21
  store %"class.gl::Query"* null, %"class.gl::Query"** %4, align 8
  %16 = call zeroext i1 @_ZN2gl11ResourceMapINS_5QueryENS_7QueryIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.556"* %8, i32 %15, %"class.gl::Query"** nonnull %4)
  br i1 %16, label %17, label %34

17:                                               ; preds = %12
  call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %9, i32 %15) #21
  %18 = load %"class.gl::Query"*, %"class.gl::Query"** %4, align 8
  %19 = icmp eq %"class.gl::Query"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.gl::Query", %"class.gl::Query"* %18, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.gl::Query", %"class.gl::Query"* %18, i64 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  store i64 %24, i64* %22, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %20
  %27 = bitcast %"class.gl::Query"* %18 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %28 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %27, align 8
  %29 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %28, align 8
  call void %29(%"class.angle::RefCountObject"* %21, %"class.gl::Context"* %0) #21
  %30 = bitcast %"class.gl::Query"* %18 to void (%"class.angle::RefCountObject"*)***
  %31 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %31, i64 2
  %33 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %32, align 8
  call void %33(%"class.angle::RefCountObject"* nonnull %21) #21
  br label %34

34:                                               ; preds = %26, %20, %17, %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #21
  %35 = add nuw nsw i64 %13, 1
  %36 = icmp eq i64 %35, %10
  br i1 %36, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl11ResourceMapINS_5QueryENS_7QueryIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.556"*, i32, %"class.gl::Query"**) local_unnamed_addr #5 comdat align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %0, i64 0, i32 1
  %10 = load %"class.gl::Query"**, %"class.gl::Query"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %10, i64 %4
  %12 = load %"class.gl::Query"*, %"class.gl::Query"** %11, align 8
  %13 = icmp eq %"class.gl::Query"* %12, inttoptr (i64 -1 to %"class.gl::Query"*)
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.gl::Query"* %12 to i64
  %16 = bitcast %"class.gl::Query"** %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.gl::Query"* inttoptr (i64 -1 to %"class.gl::Query"*), %"class.gl::Query"** %11, align 8
  br label %134

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %4
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %18, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %17
  %40 = phi i64 [ %33, %17 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %17 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %134, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %51, i64 %57, i32 0, i32 1
  %80 = bitcast %"class.gl::Query"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.gl::Query"** %2 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i8, i8* %73, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !9

85:                                               ; preds = %78
  tail call void @llvm.trap() #21
  unreachable

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = bitcast %"class.absl::container_internal::raw_hash_set.559"* %18 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -16
  %95 = load i64, i64* %28, align 8
  %96 = and i64 %94, %95
  %97 = bitcast i8* %73 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = icmp eq <16 x i8> %98, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = inttoptr i64 %91 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %96
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = icmp eq <16 x i8> %104, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %106 = bitcast <16 x i1> %105 to i16
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16 %100, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %120

110:                                              ; preds = %86
  %111 = zext i16 %100 to i32
  %112 = zext i16 %106 to i32
  %113 = tail call i32 @llvm.cttz.i32(i32 %111, i1 false) #21, !range !8
  %114 = shl nuw i32 %112, 16
  %115 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false) #21, !range !8
  %116 = add nuw nsw i32 %115, %113
  %117 = icmp ult i32 %116, 16
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i8 -128, i8 -2
  br label %120

120:                                              ; preds = %86, %110
  %121 = phi i64 [ 0, %86 ], [ %118, %110 ]
  %122 = phi i8 [ -2, %86 ], [ %119, %110 ]
  %123 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 %122, i8* %123, align 1
  %124 = load i8*, i8** %26, align 8
  %125 = add i64 %93, -15
  %126 = load i64, i64* %28, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %122, i8* %130, align 1
  %131 = getelementptr inbounds %"class.gl::ResourceMap.556", %"class.gl::ResourceMap.556"* %0, i64 0, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %121
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %65, %14, %120, %8
  %135 = phi i1 [ false, %8 ], [ true, %120 ], [ true, %14 ], [ false, %65 ]
  ret i1 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context16isQueryGeneratedENS_7QueryIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 1
  %9 = load %"class.gl::Query"**, %"class.gl::Query"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %9, i64 %3
  %11 = load %"class.gl::Query"*, %"class.gl::Query"** %10, align 8
  %12 = icmp ne %"class.gl::Query"* %11, inttoptr (i64 -1 to %"class.gl::Query"*)
  br label %76

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %15 = add i64 %14, %3
  %16 = zext i64 %15 to i128
  %17 = mul nuw i128 %16, 11376068507788127593
  %18 = lshr i128 %17, 64
  %19 = xor i128 %18, %17
  %20 = trunc i128 %19 to i64
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = lshr i64 %20, 7
  %26 = ptrtoint i8* %22 to i64
  %27 = lshr i64 %26, 12
  %28 = xor i64 %25, %27
  %29 = trunc i128 %19 to i8
  %30 = and i8 %29, 127
  %31 = insertelement <16 x i8> undef, i8 %30, i32 0
  %32 = shufflevector <16 x i8> %31, <16 x i8> undef, <16 x i32> zeroinitializer
  %33 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 1
  br label %34

34:                                               ; preds = %64, %13
  %35 = phi i64 [ %28, %13 ], [ %66, %64 ]
  %36 = phi i64 [ 0, %13 ], [ %65, %64 ]
  %37 = and i64 %35, %24
  %38 = getelementptr inbounds i8, i8* %22, i64 %37
  %39 = bitcast i8* %38 to <16 x i8>*
  %40 = load <16 x i8>, <16 x i8>* %39, align 1
  %41 = icmp eq <16 x i8> %32, %40
  %42 = bitcast <16 x i1> %41 to i16
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %60, label %44

44:                                               ; preds = %34
  %45 = zext i16 %42 to i32
  %46 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %33, align 8
  br label %47

47:                                               ; preds = %56, %44
  %48 = phi i32 [ %45, %44 ], [ %58, %56 ]
  %49 = tail call i32 @llvm.cttz.i32(i32 %48, i1 false) #21, !range !8
  %50 = zext i32 %49 to i64
  %51 = add i64 %37, %50
  %52 = and i64 %51, %24
  %53 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %46, i64 %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %67, label %56, !prof !9

56:                                               ; preds = %47
  %57 = add i32 %48, -1
  %58 = and i32 %57, %48
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %47

60:                                               ; preds = %56, %34
  %61 = icmp eq <16 x i8> %40, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %62 = bitcast <16 x i1> %61 to i16
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %64, label %73, !prof !10

64:                                               ; preds = %60
  %65 = add i64 %36, 16
  %66 = add i64 %65, %37
  br label %34

67:                                               ; preds = %47
  %68 = getelementptr inbounds i8, i8* %22, i64 %52
  %69 = icmp ne i8* %68, null
  tail call void @llvm.assume(i1 %69) #21
  %70 = load i8, i8* %68, align 1
  %71 = icmp sgt i8 %70, -1
  br i1 %71, label %73, label %72, !prof !9

72:                                               ; preds = %67
  tail call void @llvm.trap() #21
  unreachable

73:                                               ; preds = %60, %67
  %74 = phi i8* [ %68, %67 ], [ null, %60 ]
  %75 = icmp ne i8* %74, null
  br label %76

76:                                               ; preds = %7, %73
  %77 = phi i1 [ %12, %7 ], [ %75, %73 ]
  ret i1 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context7isQueryENS_7QueryIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 1
  %9 = load %"class.gl::Query"**, %"class.gl::Query"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::Query"*, %"class.gl::Query"** %9, i64 %3
  %11 = load %"class.gl::Query"*, %"class.gl::Query"** %10, align 8
  %12 = icmp eq %"class.gl::Query"* %11, inttoptr (i64 -1 to %"class.gl::Query"*)
  %13 = select i1 %12, %"class.gl::Query"* null, %"class.gl::Query"* %11
  br label %77

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 20, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #21, !range !8
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %68, label %57, !prof !9

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !10

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #21
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !9

73:                                               ; preds = %68
  tail call void @llvm.trap() #21
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::Query"*, %"class.gl::Query"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::Query"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  %79 = icmp ne %"class.gl::Query"* %78, null
  %80 = zext i1 %79 to i8
  ret i8 %80
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18uniformMatrix2x3fvENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %7 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %8 = icmp eq %"class.gl::Program"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %7, i64 0, i32 11, i32 0, i32 0, i32 0
  %11 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %10, align 8
  %12 = icmp eq %"struct.gl::Program::LinkingState"* %11, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %7, %"class.gl::Context"* %0) #21
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %15 = icmp eq %"class.gl::Program"* %14, null
  br i1 %15, label %16, label %29

16:                                               ; preds = %13, %5
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %18 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %17, align 8
  %19 = icmp eq %"class.gl::ProgramPipeline"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %18, i64 0, i32 5, i32 1
  %22 = load %"class.gl::Program"*, %"class.gl::Program"** %21, align 8
  %23 = icmp eq %"class.gl::Program"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %22, i64 0, i32 11, i32 0, i32 0, i32 0
  %26 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %25, align 8
  %27 = icmp eq %"struct.gl::Program::LinkingState"* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %22, %"class.gl::Context"* %0) #21
  br label %29

29:                                               ; preds = %9, %13, %16, %20, %24, %28
  %30 = phi %"class.gl::Program"* [ %14, %13 ], [ null, %16 ], [ null, %20 ], [ %22, %24 ], [ %22, %28 ], [ %7, %9 ]
  tail call void @_ZN2gl7Program21setUniformMatrix2x3fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %30, i32 %1, i32 %2, i8 zeroext %3, float* %4) #21
  ret void
}

declare void @_ZN2gl7Program21setUniformMatrix2x3fvENS_15UniformLocationEihPKf(%"class.gl::Program"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18uniformMatrix3x2fvENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %7 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %8 = icmp eq %"class.gl::Program"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %7, i64 0, i32 11, i32 0, i32 0, i32 0
  %11 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %10, align 8
  %12 = icmp eq %"struct.gl::Program::LinkingState"* %11, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %7, %"class.gl::Context"* %0) #21
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %15 = icmp eq %"class.gl::Program"* %14, null
  br i1 %15, label %16, label %29

16:                                               ; preds = %13, %5
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %18 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %17, align 8
  %19 = icmp eq %"class.gl::ProgramPipeline"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %18, i64 0, i32 5, i32 1
  %22 = load %"class.gl::Program"*, %"class.gl::Program"** %21, align 8
  %23 = icmp eq %"class.gl::Program"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %22, i64 0, i32 11, i32 0, i32 0, i32 0
  %26 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %25, align 8
  %27 = icmp eq %"struct.gl::Program::LinkingState"* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %22, %"class.gl::Context"* %0) #21
  br label %29

29:                                               ; preds = %9, %13, %16, %20, %24, %28
  %30 = phi %"class.gl::Program"* [ %14, %13 ], [ null, %16 ], [ null, %20 ], [ %22, %24 ], [ %22, %28 ], [ %7, %9 ]
  tail call void @_ZN2gl7Program21setUniformMatrix3x2fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %30, i32 %1, i32 %2, i8 zeroext %3, float* %4) #21
  ret void
}

declare void @_ZN2gl7Program21setUniformMatrix3x2fvENS_15UniformLocationEihPKf(%"class.gl::Program"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18uniformMatrix2x4fvENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %7 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %8 = icmp eq %"class.gl::Program"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %7, i64 0, i32 11, i32 0, i32 0, i32 0
  %11 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %10, align 8
  %12 = icmp eq %"struct.gl::Program::LinkingState"* %11, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %7, %"class.gl::Context"* %0) #21
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %15 = icmp eq %"class.gl::Program"* %14, null
  br i1 %15, label %16, label %29

16:                                               ; preds = %13, %5
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %18 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %17, align 8
  %19 = icmp eq %"class.gl::ProgramPipeline"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %18, i64 0, i32 5, i32 1
  %22 = load %"class.gl::Program"*, %"class.gl::Program"** %21, align 8
  %23 = icmp eq %"class.gl::Program"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %22, i64 0, i32 11, i32 0, i32 0, i32 0
  %26 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %25, align 8
  %27 = icmp eq %"struct.gl::Program::LinkingState"* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %22, %"class.gl::Context"* %0) #21
  br label %29

29:                                               ; preds = %9, %13, %16, %20, %24, %28
  %30 = phi %"class.gl::Program"* [ %14, %13 ], [ null, %16 ], [ null, %20 ], [ %22, %24 ], [ %22, %28 ], [ %7, %9 ]
  tail call void @_ZN2gl7Program21setUniformMatrix2x4fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %30, i32 %1, i32 %2, i8 zeroext %3, float* %4) #21
  ret void
}

declare void @_ZN2gl7Program21setUniformMatrix2x4fvENS_15UniformLocationEihPKf(%"class.gl::Program"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18uniformMatrix4x2fvENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %7 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %8 = icmp eq %"class.gl::Program"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %7, i64 0, i32 11, i32 0, i32 0, i32 0
  %11 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %10, align 8
  %12 = icmp eq %"struct.gl::Program::LinkingState"* %11, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %7, %"class.gl::Context"* %0) #21
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %15 = icmp eq %"class.gl::Program"* %14, null
  br i1 %15, label %16, label %29

16:                                               ; preds = %13, %5
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %18 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %17, align 8
  %19 = icmp eq %"class.gl::ProgramPipeline"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %18, i64 0, i32 5, i32 1
  %22 = load %"class.gl::Program"*, %"class.gl::Program"** %21, align 8
  %23 = icmp eq %"class.gl::Program"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %22, i64 0, i32 11, i32 0, i32 0, i32 0
  %26 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %25, align 8
  %27 = icmp eq %"struct.gl::Program::LinkingState"* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %22, %"class.gl::Context"* %0) #21
  br label %29

29:                                               ; preds = %9, %13, %16, %20, %24, %28
  %30 = phi %"class.gl::Program"* [ %14, %13 ], [ null, %16 ], [ null, %20 ], [ %22, %24 ], [ %22, %28 ], [ %7, %9 ]
  tail call void @_ZN2gl7Program21setUniformMatrix4x2fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %30, i32 %1, i32 %2, i8 zeroext %3, float* %4) #21
  ret void
}

declare void @_ZN2gl7Program21setUniformMatrix4x2fvENS_15UniformLocationEihPKf(%"class.gl::Program"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18uniformMatrix3x4fvENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %7 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %8 = icmp eq %"class.gl::Program"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %7, i64 0, i32 11, i32 0, i32 0, i32 0
  %11 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %10, align 8
  %12 = icmp eq %"struct.gl::Program::LinkingState"* %11, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %7, %"class.gl::Context"* %0) #21
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %15 = icmp eq %"class.gl::Program"* %14, null
  br i1 %15, label %16, label %29

16:                                               ; preds = %13, %5
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %18 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %17, align 8
  %19 = icmp eq %"class.gl::ProgramPipeline"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %18, i64 0, i32 5, i32 1
  %22 = load %"class.gl::Program"*, %"class.gl::Program"** %21, align 8
  %23 = icmp eq %"class.gl::Program"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %22, i64 0, i32 11, i32 0, i32 0, i32 0
  %26 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %25, align 8
  %27 = icmp eq %"struct.gl::Program::LinkingState"* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %22, %"class.gl::Context"* %0) #21
  br label %29

29:                                               ; preds = %9, %13, %16, %20, %24, %28
  %30 = phi %"class.gl::Program"* [ %14, %13 ], [ null, %16 ], [ null, %20 ], [ %22, %24 ], [ %22, %28 ], [ %7, %9 ]
  tail call void @_ZN2gl7Program21setUniformMatrix3x4fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %30, i32 %1, i32 %2, i8 zeroext %3, float* %4) #21
  ret void
}

declare void @_ZN2gl7Program21setUniformMatrix3x4fvENS_15UniformLocationEihPKf(%"class.gl::Program"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18uniformMatrix4x3fvENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 63
  %7 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %8 = icmp eq %"class.gl::Program"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %7, i64 0, i32 11, i32 0, i32 0, i32 0
  %11 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %10, align 8
  %12 = icmp eq %"struct.gl::Program::LinkingState"* %11, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %7, %"class.gl::Context"* %0) #21
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %15 = icmp eq %"class.gl::Program"* %14, null
  br i1 %15, label %16, label %29

16:                                               ; preds = %13, %5
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 64, i32 0, i32 1
  %18 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %17, align 8
  %19 = icmp eq %"class.gl::ProgramPipeline"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %18, i64 0, i32 5, i32 1
  %22 = load %"class.gl::Program"*, %"class.gl::Program"** %21, align 8
  %23 = icmp eq %"class.gl::Program"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %22, i64 0, i32 11, i32 0, i32 0, i32 0
  %26 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %25, align 8
  %27 = icmp eq %"struct.gl::Program::LinkingState"* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %22, %"class.gl::Context"* %0) #21
  br label %29

29:                                               ; preds = %9, %13, %16, %20, %24, %28
  %30 = phi %"class.gl::Program"* [ %14, %13 ], [ null, %16 ], [ null, %20 ], [ %22, %24 ], [ %22, %28 ], [ %7, %9 ]
  tail call void @_ZN2gl7Program21setUniformMatrix4x3fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %30, i32 %1, i32 %2, i8 zeroext %3, float* %4) #21
  ret void
}

declare void @_ZN2gl7Program21setUniformMatrix4x3fvENS_15UniformLocationEihPKf(%"class.gl::Program"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18deleteVertexArraysEiPKNS_13VertexArrayIDE(%"class.gl::Context"*, i32, %"struct.gl::VertexArrayID"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.gl::VertexArray"*, align 8
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %3
  %7 = bitcast %"class.gl::VertexArray"** %4 to i8*
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 66
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 23
  %13 = zext i32 %1 to i64
  br label %15

14:                                               ; preds = %36, %3
  ret void

15:                                               ; preds = %36, %6
  %16 = phi i64 [ 0, %6 ], [ %37, %36 ]
  %17 = getelementptr inbounds %"struct.gl::VertexArrayID", %"struct.gl::VertexArrayID"* %2, i64 %16, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %36, label %20

20:                                               ; preds = %15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #21
  store %"class.gl::VertexArray"* null, %"class.gl::VertexArray"** %4, align 8
  %21 = call zeroext i1 @_ZN2gl11ResourceMapINS_11VertexArrayENS_13VertexArrayIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.566"* %8, i32 %18, %"class.gl::VertexArray"** nonnull %4)
  br i1 %21, label %22, label %35

22:                                               ; preds = %20
  %23 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %4, align 8
  %24 = icmp eq %"class.gl::VertexArray"* %23, null
  br i1 %24, label %34, label %25

25:                                               ; preds = %22
  %26 = call zeroext i1 @_ZN2gl5State24removeVertexArrayBindingEPKNS_7ContextENS_13VertexArrayIDE(%"class.gl::State"* %9, %"class.gl::Context"* %0, i32 %18) #21
  br i1 %26, label %27, label %32

27:                                               ; preds = %25
  %28 = call %"class.gl::VertexArray"* @_ZN2gl7Context26checkVertexArrayAllocationENS_13VertexArrayIDE(%"class.gl::Context"* %0, i32 0) #21
  call void @_ZN2gl5State21setVertexArrayBindingEPKNS_7ContextEPNS_11VertexArrayE(%"class.gl::State"* %9, %"class.gl::Context"* %0, %"class.gl::VertexArray"* %28) #21
  %29 = icmp eq %"class.gl::VertexArray"* %28, null
  %30 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %28, i64 0, i32 2
  %31 = select i1 %29, %"class.angle::Subject"* null, %"class.angle::Subject"* %30
  call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %10, %"class.angle::Subject"* %31) #21
  call void @_ZN2gl10StateCache26onVertexArrayBindingChangeEPNS_7ContextE(%"class.gl::StateCache"* %11, %"class.gl::Context"* %0) #21
  br label %32

32:                                               ; preds = %25, %27
  %33 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %4, align 8
  call void @_ZN2gl11VertexArray9onDestroyEPKNS_7ContextE(%"class.gl::VertexArray"* %33, %"class.gl::Context"* %0) #21
  br label %34

34:                                               ; preds = %22, %32
  call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %12, i32 %18) #21
  br label %35

35:                                               ; preds = %34, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #21
  br label %36

36:                                               ; preds = %15, %35
  %37 = add nuw nsw i64 %16, 1
  %38 = icmp eq i64 %37, %13
  br i1 %38, label %14, label %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl11ResourceMapINS_11VertexArrayENS_13VertexArrayIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.566"*, i32, %"class.gl::VertexArray"**) local_unnamed_addr #5 comdat align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %0, i64 0, i32 1
  %10 = load %"class.gl::VertexArray"**, %"class.gl::VertexArray"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %10, i64 %4
  %12 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %11, align 8
  %13 = icmp eq %"class.gl::VertexArray"* %12, inttoptr (i64 -1 to %"class.gl::VertexArray"*)
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.gl::VertexArray"* %12 to i64
  %16 = bitcast %"class.gl::VertexArray"** %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.gl::VertexArray"* inttoptr (i64 -1 to %"class.gl::VertexArray"*), %"class.gl::VertexArray"** %11, align 8
  br label %134

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %4
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %18, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %17
  %40 = phi i64 [ %33, %17 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %17 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %134, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %51, i64 %57, i32 0, i32 1
  %80 = bitcast %"class.gl::VertexArray"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.gl::VertexArray"** %2 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i8, i8* %73, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !9

85:                                               ; preds = %78
  tail call void @llvm.trap() #21
  unreachable

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = bitcast %"class.absl::container_internal::raw_hash_set.569"* %18 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -16
  %95 = load i64, i64* %28, align 8
  %96 = and i64 %94, %95
  %97 = bitcast i8* %73 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = icmp eq <16 x i8> %98, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = inttoptr i64 %91 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %96
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = icmp eq <16 x i8> %104, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %106 = bitcast <16 x i1> %105 to i16
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16 %100, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %120

110:                                              ; preds = %86
  %111 = zext i16 %100 to i32
  %112 = zext i16 %106 to i32
  %113 = tail call i32 @llvm.cttz.i32(i32 %111, i1 false) #21, !range !8
  %114 = shl nuw i32 %112, 16
  %115 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false) #21, !range !8
  %116 = add nuw nsw i32 %115, %113
  %117 = icmp ult i32 %116, 16
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i8 -128, i8 -2
  br label %120

120:                                              ; preds = %86, %110
  %121 = phi i64 [ 0, %86 ], [ %118, %110 ]
  %122 = phi i8 [ -2, %86 ], [ %119, %110 ]
  %123 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 %122, i8* %123, align 1
  %124 = load i8*, i8** %26, align 8
  %125 = add i64 %93, -15
  %126 = load i64, i64* %28, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %122, i8* %130, align 1
  %131 = getelementptr inbounds %"class.gl::ResourceMap.566", %"class.gl::ResourceMap.566"* %0, i64 0, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %121
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %65, %14, %120, %8
  %135 = phi i1 [ false, %8 ], [ true, %120 ], [ true, %14 ], [ false, %65 ]
  ret i1 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15genVertexArraysEiPNS_13VertexArrayIDE(%"class.gl::Context"*, i32, %"struct.gl::VertexArrayID"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 23
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22
  %8 = zext i32 %1 to i64
  br label %10

9:                                                ; preds = %10, %3
  ret void

10:                                               ; preds = %10, %5
  %11 = phi i64 [ 0, %5 ], [ %14, %10 ]
  %12 = tail call i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* %6) #21
  tail call void @_ZN2gl11ResourceMapINS_11VertexArrayENS_13VertexArrayIDEE6assignES2_PS1_(%"class.gl::ResourceMap.566"* %7, i32 %12, %"class.gl::VertexArray"* null)
  %13 = getelementptr inbounds %"struct.gl::VertexArrayID", %"struct.gl::VertexArrayID"* %2, i64 %11, i32 0
  store i32 %12, i32* %13, align 4
  %14 = add nuw nsw i64 %11, 1
  %15 = icmp eq i64 %14, %8
  br i1 %15, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context13isVertexArrayENS_13VertexArrayIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %83, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 1
  %11 = load %"class.gl::VertexArray"**, %"class.gl::VertexArray"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %11, i64 %5
  %13 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %12, align 8
  %14 = icmp eq %"class.gl::VertexArray"* %13, inttoptr (i64 -1 to %"class.gl::VertexArray"*)
  %15 = select i1 %14, %"class.gl::VertexArray"* null, %"class.gl::VertexArray"* %13
  br label %79

16:                                               ; preds = %4
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, %5
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 22, i32 2, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %67, %16
  %38 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %39 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %40 = and i64 %38, %27
  %41 = getelementptr inbounds i8, i8* %25, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %35, %43
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37
  %48 = zext i16 %45 to i32
  %49 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %36, align 8
  br label %50

50:                                               ; preds = %59, %47
  %51 = phi i32 [ %48, %47 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #21, !range !8
  %53 = zext i32 %52 to i64
  %54 = add i64 %40, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %49, i64 %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %70, label %59, !prof !9

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %37
  %64 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %79, !prof !10

67:                                               ; preds = %63
  %68 = add i64 %39, 16
  %69 = add i64 %68, %40
  br label %37

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #21
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %76, label %75, !prof !9

75:                                               ; preds = %70
  tail call void @llvm.trap() #21
  unreachable

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %49, i64 %55, i32 0, i32 1
  %78 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %77, align 8
  br label %79

79:                                               ; preds = %63, %9, %76
  %80 = phi %"class.gl::VertexArray"* [ %15, %9 ], [ %78, %76 ], [ null, %63 ]
  %81 = icmp ne %"class.gl::VertexArray"* %80, null
  %82 = zext i1 %81 to i8
  br label %83

83:                                               ; preds = %2, %79
  %84 = phi i8 [ %82, %79 ], [ 0, %2 ]
  ret i8 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20endTransformFeedbackEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 86, i32 0, i32 1
  %3 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %2, align 8
  %4 = tail call i32 @_ZN2gl17TransformFeedback3endEPKNS_7ContextE(%"class.gl::TransformFeedback"* %3, %"class.gl::Context"* %0) #21
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  %8 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %2, align 8
  %9 = icmp eq %"class.gl::TransformFeedback"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %8, i64 0, i32 2, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = tail call zeroext i1 @_ZNK2gl17TransformFeedback8isPausedEv(%"class.gl::TransformFeedback"* nonnull %8) #21
  %16 = xor i1 %15, true
  %17 = zext i1 %16 to i8
  br label %18

18:                                               ; preds = %6, %10, %14
  %19 = phi i8 [ 0, %10 ], [ 0, %6 ], [ %17, %14 ]
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 9
  store i8 %19, i8* %20, align 8
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  %22 = bitcast i64* %21 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %22, align 8
  tail call void @_ZN2gl10StateCache20updateValidDrawModesEPNS_7ContextE(%"class.gl::StateCache"* %7, %"class.gl::Context"* %0) #21
  br label %23

23:                                               ; preds = %1, %18
  ret void
}

declare i32 @_ZN2gl17TransformFeedback3endEPKNS_7ContextE(%"class.gl::TransformFeedback"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context25transformFeedbackVaryingsENS_15ShaderProgramIDEiPKPKcj(%"class.gl::Context"*, i32, i32, i8**, i32) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZN2gl7Program28setTransformFeedbackVaryingsEiPKPKcj(%"class.gl::Program"* %90, i32 %2, i8** %3, i32 %4) #21
  ret void
}

declare void @_ZN2gl7Program28setTransformFeedbackVaryingsEiPKPKcj(%"class.gl::Program"*, i32, i8**, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context27getTransformFeedbackVaryingENS_15ShaderProgramIDEjiPiS2_PjPc(%"class.gl::Context"*, i32, i32, i32, i32*, i32*, i32*, i8*) local_unnamed_addr #5 align 2 {
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %10 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %9, align 8
  %11 = zext i32 %1 to i64
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %10, i64 0, i32 2, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %13, %11
  br i1 %14, label %15, label %21

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %10, i64 0, i32 2, i32 1
  %17 = load %"class.gl::Program"**, %"class.gl::Program"*** %16, align 8
  %18 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %17, i64 %11
  %19 = load %"class.gl::Program"*, %"class.gl::Program"** %18, align 8
  %20 = icmp eq %"class.gl::Program"* %19, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %20, label %92, label %84

21:                                               ; preds = %8
  %22 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %23 = add i64 %22, %11
  %24 = zext i64 %23 to i128
  %25 = mul nuw i128 %24, 11376068507788127593
  %26 = lshr i128 %25, 64
  %27 = xor i128 %26, %25
  %28 = trunc i128 %27 to i64
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %10, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %10, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = lshr i64 %28, 7
  %34 = ptrtoint i8* %30 to i64
  %35 = lshr i64 %34, 12
  %36 = xor i64 %33, %35
  %37 = trunc i128 %27 to i8
  %38 = and i8 %37, 127
  %39 = insertelement <16 x i8> undef, i8 %38, i32 0
  %40 = shufflevector <16 x i8> %39, <16 x i8> undef, <16 x i32> zeroinitializer
  %41 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %10, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %42

42:                                               ; preds = %72, %21
  %43 = phi i64 [ %36, %21 ], [ %74, %72 ]
  %44 = phi i64 [ 0, %21 ], [ %73, %72 ]
  %45 = and i64 %43, %32
  %46 = getelementptr inbounds i8, i8* %30, i64 %45
  %47 = bitcast i8* %46 to <16 x i8>*
  %48 = load <16 x i8>, <16 x i8>* %47, align 1
  %49 = icmp eq <16 x i8> %40, %48
  %50 = bitcast <16 x i1> %49 to i16
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %42
  %53 = zext i16 %50 to i32
  %54 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %41, align 8
  br label %55

55:                                               ; preds = %64, %52
  %56 = phi i32 [ %53, %52 ], [ %66, %64 ]
  %57 = tail call i32 @llvm.cttz.i32(i32 %56, i1 false) #21, !range !8
  %58 = zext i32 %57 to i64
  %59 = add i64 %45, %58
  %60 = and i64 %59, %32
  %61 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %54, i64 %60, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %1
  br i1 %63, label %75, label %64, !prof !9

64:                                               ; preds = %55
  %65 = add i32 %56, -1
  %66 = and i32 %65, %56
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %55

68:                                               ; preds = %64, %42
  %69 = icmp eq <16 x i8> %48, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %92, !prof !10

72:                                               ; preds = %68
  %73 = add i64 %44, 16
  %74 = add i64 %73, %45
  br label %42

75:                                               ; preds = %55
  %76 = getelementptr inbounds i8, i8* %30, i64 %60
  %77 = icmp ne i8* %76, null
  tail call void @llvm.assume(i1 %77) #21
  %78 = load i8, i8* %76, align 1
  %79 = icmp sgt i8 %78, -1
  br i1 %79, label %81, label %80, !prof !9

80:                                               ; preds = %75
  tail call void @llvm.trap() #21
  unreachable

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %54, i64 %60, i32 0, i32 1
  %83 = load %"class.gl::Program"*, %"class.gl::Program"** %82, align 8
  br label %84

84:                                               ; preds = %81, %15
  %85 = phi %"class.gl::Program"* [ %19, %15 ], [ %83, %81 ]
  %86 = icmp eq %"class.gl::Program"* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %85, i64 0, i32 11, i32 0, i32 0, i32 0
  %89 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %88, align 8
  %90 = icmp eq %"struct.gl::Program::LinkingState"* %89, null
  br i1 %90, label %92, label %91

91:                                               ; preds = %87
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %85, %"class.gl::Context"* %0) #21
  br label %92

92:                                               ; preds = %68, %15, %84, %87, %91
  %93 = phi %"class.gl::Program"* [ null, %84 ], [ %85, %87 ], [ %85, %91 ], [ null, %15 ], [ null, %68 ]
  tail call void @_ZNK2gl7Program27getTransformFeedbackVaryingEjiPiS1_PjPc(%"class.gl::Program"* %93, i32 %2, i32 %3, i32* %4, i32* %5, i32* %6, i8* %7) #21
  ret void
}

declare void @_ZNK2gl7Program27getTransformFeedbackVaryingEjiPiS1_PjPc(%"class.gl::Program"*, i32, i32, i32*, i32*, i32*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context24deleteTransformFeedbacksEiPKNS_19TransformFeedbackIDE(%"class.gl::Context"*, i32, %"struct.gl::TransformFeedbackID"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.gl::TransformFeedback"*, align 8
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %3
  %7 = bitcast %"class.gl::TransformFeedback"** %4 to i8*
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %10 = bitcast %"class.gl::TransformFeedback"** %4 to %"class.angle::RefCountObject"**
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 25
  %12 = zext i32 %1 to i64
  br label %14

13:                                               ; preds = %46, %3
  ret void

14:                                               ; preds = %46, %6
  %15 = phi i64 [ 0, %6 ], [ %47, %46 ]
  %16 = getelementptr inbounds %"struct.gl::TransformFeedbackID", %"struct.gl::TransformFeedbackID"* %2, i64 %15, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %46, label %19

19:                                               ; preds = %14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #21
  store %"class.gl::TransformFeedback"* null, %"class.gl::TransformFeedback"** %4, align 8
  %20 = call zeroext i1 @_ZN2gl11ResourceMapINS_17TransformFeedbackENS_19TransformFeedbackIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.576"* %8, i32 %17, %"class.gl::TransformFeedback"** nonnull %4)
  br i1 %20, label %21, label %45

21:                                               ; preds = %19
  %22 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %4, align 8
  %23 = icmp eq %"class.gl::TransformFeedback"* %22, null
  br i1 %23, label %44, label %24

24:                                               ; preds = %21
  %25 = call zeroext i1 @_ZN2gl5State30removeTransformFeedbackBindingEPKNS_7ContextENS_19TransformFeedbackIDE(%"class.gl::State"* %9, %"class.gl::Context"* %0, i32 %17) #21
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = call %"class.gl::TransformFeedback"* @_ZN2gl7Context32checkTransformFeedbackAllocationENS_19TransformFeedbackIDE(%"class.gl::Context"* %0, i32 0) #21
  call void @_ZN2gl5State27setTransformFeedbackBindingEPKNS_7ContextEPNS_17TransformFeedbackE(%"class.gl::State"* %9, %"class.gl::Context"* %0, %"class.gl::TransformFeedback"* %27) #21
  br label %28

28:                                               ; preds = %24, %26
  %29 = load %"class.angle::RefCountObject"*, %"class.angle::RefCountObject"** %10, align 8
  %30 = getelementptr inbounds %"class.angle::RefCountObject", %"class.angle::RefCountObject"* %29, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, -1
  store i64 %32, i64* %30, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %44

34:                                               ; preds = %28
  %35 = bitcast %"class.angle::RefCountObject"* %29 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %36 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %35, align 8
  %37 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %36, align 8
  call void %37(%"class.angle::RefCountObject"* %29, %"class.gl::Context"* %0) #21
  %38 = icmp eq %"class.angle::RefCountObject"* %29, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.angle::RefCountObject"* %29 to void (%"class.angle::RefCountObject"*)***
  %41 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %41, i64 2
  %43 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %42, align 8
  call void %43(%"class.angle::RefCountObject"* nonnull %29) #21
  br label %44

44:                                               ; preds = %39, %34, %28, %21
  call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %11, i32 %17) #21
  br label %45

45:                                               ; preds = %44, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #21
  br label %46

46:                                               ; preds = %14, %45
  %47 = add nuw nsw i64 %15, 1
  %48 = icmp eq i64 %47, %12
  br i1 %48, label %13, label %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl11ResourceMapINS_17TransformFeedbackENS_19TransformFeedbackIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.576"*, i32, %"class.gl::TransformFeedback"**) local_unnamed_addr #5 comdat align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %0, i64 0, i32 1
  %10 = load %"class.gl::TransformFeedback"**, %"class.gl::TransformFeedback"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %10, i64 %4
  %12 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %11, align 8
  %13 = icmp eq %"class.gl::TransformFeedback"* %12, inttoptr (i64 -1 to %"class.gl::TransformFeedback"*)
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.gl::TransformFeedback"* %12 to i64
  %16 = bitcast %"class.gl::TransformFeedback"** %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.gl::TransformFeedback"* inttoptr (i64 -1 to %"class.gl::TransformFeedback"*), %"class.gl::TransformFeedback"** %11, align 8
  br label %134

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %4
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %18, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %17
  %40 = phi i64 [ %33, %17 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %17 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %134, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %51, i64 %57, i32 0, i32 1
  %80 = bitcast %"class.gl::TransformFeedback"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.gl::TransformFeedback"** %2 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i8, i8* %73, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !9

85:                                               ; preds = %78
  tail call void @llvm.trap() #21
  unreachable

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = bitcast %"class.absl::container_internal::raw_hash_set.579"* %18 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -16
  %95 = load i64, i64* %28, align 8
  %96 = and i64 %94, %95
  %97 = bitcast i8* %73 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = icmp eq <16 x i8> %98, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = inttoptr i64 %91 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %96
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = icmp eq <16 x i8> %104, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %106 = bitcast <16 x i1> %105 to i16
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16 %100, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %120

110:                                              ; preds = %86
  %111 = zext i16 %100 to i32
  %112 = zext i16 %106 to i32
  %113 = tail call i32 @llvm.cttz.i32(i32 %111, i1 false) #21, !range !8
  %114 = shl nuw i32 %112, 16
  %115 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false) #21, !range !8
  %116 = add nuw nsw i32 %115, %113
  %117 = icmp ult i32 %116, 16
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i8 -128, i8 -2
  br label %120

120:                                              ; preds = %86, %110
  %121 = phi i64 [ 0, %86 ], [ %118, %110 ]
  %122 = phi i8 [ -2, %86 ], [ %119, %110 ]
  %123 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 %122, i8* %123, align 1
  %124 = load i8*, i8** %26, align 8
  %125 = add i64 %93, -15
  %126 = load i64, i64* %28, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %122, i8* %130, align 1
  %131 = getelementptr inbounds %"class.gl::ResourceMap.576", %"class.gl::ResourceMap.576"* %0, i64 0, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %121
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %65, %14, %120, %8
  %135 = phi i1 [ false, %8 ], [ true, %120 ], [ true, %14 ], [ false, %65 ]
  ret i1 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21genTransformFeedbacksEiPNS_19TransformFeedbackIDE(%"class.gl::Context"*, i32, %"struct.gl::TransformFeedbackID"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 25
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24
  %8 = zext i32 %1 to i64
  br label %10

9:                                                ; preds = %10, %3
  ret void

10:                                               ; preds = %10, %5
  %11 = phi i64 [ 0, %5 ], [ %14, %10 ]
  %12 = tail call i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* %6) #21
  tail call void @_ZN2gl11ResourceMapINS_17TransformFeedbackENS_19TransformFeedbackIDEE6assignES2_PS1_(%"class.gl::ResourceMap.576"* %7, i32 %12, %"class.gl::TransformFeedback"* null)
  %13 = getelementptr inbounds %"struct.gl::TransformFeedbackID", %"struct.gl::TransformFeedbackID"* %2, i64 %11, i32 0
  store i32 %12, i32* %13, align 4
  %14 = add nuw nsw i64 %11, 1
  %15 = icmp eq i64 %14, %8
  br i1 %15, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context19isTransformFeedbackENS_19TransformFeedbackIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %83, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 1
  %11 = load %"class.gl::TransformFeedback"**, %"class.gl::TransformFeedback"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %11, i64 %5
  %13 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %12, align 8
  %14 = icmp eq %"class.gl::TransformFeedback"* %13, inttoptr (i64 -1 to %"class.gl::TransformFeedback"*)
  %15 = select i1 %14, %"class.gl::TransformFeedback"* null, %"class.gl::TransformFeedback"* %13
  br label %79

16:                                               ; preds = %4
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, %5
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %67, %16
  %38 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %39 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %40 = and i64 %38, %27
  %41 = getelementptr inbounds i8, i8* %25, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %35, %43
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37
  %48 = zext i16 %45 to i32
  %49 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %36, align 8
  br label %50

50:                                               ; preds = %59, %47
  %51 = phi i32 [ %48, %47 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #21, !range !8
  %53 = zext i32 %52 to i64
  %54 = add i64 %40, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %49, i64 %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %70, label %59, !prof !9

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %37
  %64 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %79, !prof !10

67:                                               ; preds = %63
  %68 = add i64 %39, 16
  %69 = add i64 %68, %40
  br label %37

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #21
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %76, label %75, !prof !9

75:                                               ; preds = %70
  tail call void @llvm.trap() #21
  unreachable

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %49, i64 %55, i32 0, i32 1
  %78 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %77, align 8
  br label %79

79:                                               ; preds = %63, %9, %76
  %80 = phi %"class.gl::TransformFeedback"* [ %15, %9 ], [ %78, %76 ], [ null, %63 ]
  %81 = icmp ne %"class.gl::TransformFeedback"* %80, null
  %82 = zext i1 %81 to i8
  br label %83

83:                                               ; preds = %2, %79
  %84 = phi i8 [ %82, %79 ], [ 0, %2 ]
  ret i8 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context22pauseTransformFeedbackEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 86, i32 0, i32 1
  %3 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %2, align 8
  %4 = tail call i32 @_ZN2gl17TransformFeedback5pauseEPKNS_7ContextE(%"class.gl::TransformFeedback"* %3, %"class.gl::Context"* %0) #21
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  %8 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %2, align 8
  %9 = icmp eq %"class.gl::TransformFeedback"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %8, i64 0, i32 2, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = tail call zeroext i1 @_ZNK2gl17TransformFeedback8isPausedEv(%"class.gl::TransformFeedback"* nonnull %8) #21
  %16 = xor i1 %15, true
  %17 = zext i1 %16 to i8
  br label %18

18:                                               ; preds = %6, %10, %14
  %19 = phi i8 [ 0, %10 ], [ 0, %6 ], [ %17, %14 ]
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 9
  store i8 %19, i8* %20, align 8
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  %22 = bitcast i64* %21 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %22, align 8
  tail call void @_ZN2gl10StateCache20updateValidDrawModesEPNS_7ContextE(%"class.gl::StateCache"* %7, %"class.gl::Context"* %0) #21
  br label %23

23:                                               ; preds = %1, %18
  ret void
}

declare i32 @_ZN2gl17TransformFeedback5pauseEPKNS_7ContextE(%"class.gl::TransformFeedback"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23resumeTransformFeedbackEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 86, i32 0, i32 1
  %3 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %2, align 8
  %4 = tail call i32 @_ZN2gl17TransformFeedback6resumeEPKNS_7ContextE(%"class.gl::TransformFeedback"* %3, %"class.gl::Context"* %0) #21
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  %8 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %2, align 8
  %9 = icmp eq %"class.gl::TransformFeedback"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %8, i64 0, i32 2, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = tail call zeroext i1 @_ZNK2gl17TransformFeedback8isPausedEv(%"class.gl::TransformFeedback"* nonnull %8) #21
  %16 = xor i1 %15, true
  %17 = zext i1 %16 to i8
  br label %18

18:                                               ; preds = %6, %10, %14
  %19 = phi i8 [ 0, %10 ], [ 0, %6 ], [ %17, %14 ]
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 9
  store i8 %19, i8* %20, align 8
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  %22 = bitcast i64* %21 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %22, align 8
  tail call void @_ZN2gl10StateCache20updateValidDrawModesEPNS_7ContextE(%"class.gl::StateCache"* %7, %"class.gl::Context"* %0) #21
  br label %23

23:                                               ; preds = %1, %18
  ret void
}

declare i32 @_ZN2gl17TransformFeedback6resumeEPKNS_7ContextE(%"class.gl::TransformFeedback"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13getUniformuivENS_15ShaderProgramIDENS_15UniformLocationEPj(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %16, label %88, label %80

17:                                               ; preds = %4
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %88, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %77, %11
  %81 = phi %"class.gl::Program"* [ %15, %11 ], [ %79, %77 ]
  %82 = icmp eq %"class.gl::Program"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %81, i64 0, i32 11, i32 0, i32 0, i32 0
  %85 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %84, align 8
  %86 = icmp eq %"struct.gl::Program::LinkingState"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %81, %"class.gl::Context"* %0) #21
  br label %88

88:                                               ; preds = %64, %11, %80, %83, %87
  %89 = phi %"class.gl::Program"* [ null, %80 ], [ %81, %83 ], [ %81, %87 ], [ null, %11 ], [ null, %64 ]
  tail call void @_ZNK2gl7Program13getUniformuivEPKNS_7ContextENS_15UniformLocationEPj(%"class.gl::Program"* %89, %"class.gl::Context"* %0, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZNK2gl7Program13getUniformuivEPKNS_7ContextENS_15UniformLocationEPj(%"class.gl::Program"*, %"class.gl::Context"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19getUniformuivRobustENS_15ShaderProgramIDENS_15UniformLocationEiPiPj(%"class.gl::Context"*, i32, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context13getUniformuivENS_15ShaderProgramIDENS_15UniformLocationEPj(%"class.gl::Context"* %0, i32 %1, i32 %2, i32* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context19getFragDataLocationENS_15ShaderProgramIDEPKc(%"class.gl::Context"*, i32, i8* nocapture readonly) local_unnamed_addr #5 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %16, label %88, label %80

17:                                               ; preds = %3
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %88, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %77, %11
  %81 = phi %"class.gl::Program"* [ %15, %11 ], [ %79, %77 ]
  %82 = icmp eq %"class.gl::Program"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %81, i64 0, i32 11, i32 0, i32 0, i32 0
  %85 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %84, align 8
  %86 = icmp eq %"struct.gl::Program::LinkingState"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %81, %"class.gl::Context"* %0) #21
  br label %88

88:                                               ; preds = %64, %11, %80, %83, %87
  %89 = phi %"class.gl::Program"* [ null, %80 ], [ %81, %83 ], [ %81, %87 ], [ null, %11 ], [ null, %64 ]
  %90 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #21
  %91 = tail call i64 @strlen(i8* %2) #21
  %92 = icmp ugt i64 %91, -17
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  %94 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %94) #28
  unreachable

95:                                               ; preds = %88
  %96 = icmp ult i64 %91, 23
  br i1 %96, label %106, label %97

97:                                               ; preds = %95
  %98 = add nuw i64 %91, 16
  %99 = and i64 %98, -16
  %100 = tail call i8* @_Znwm(i64 %99) #27
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %100, i8** %101, align 8
  %102 = or i64 %99, -9223372036854775808
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %91, i64* %104, align 8
  %105 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %111

106:                                              ; preds = %95
  %107 = trunc i64 %91 to i8
  %108 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  store i8 %107, i8* %109, align 1
  %110 = icmp eq i64 %91, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %106, %97
  %112 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %108, %106 ], [ %105, %97 ]
  %113 = phi i8* [ %90, %106 ], [ %100, %97 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %113, i8* align 1 %2, i64 %91, i1 false) #21
  br label %114

114:                                              ; preds = %106, %111
  %115 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %108, %106 ], [ %112, %111 ]
  %116 = phi i8* [ %90, %106 ], [ %113, %111 ]
  %117 = getelementptr inbounds i8, i8* %116, i64 %91
  store i8 0, i8* %117, align 1
  %118 = call i32 @_ZNK2gl7Program19getFragDataLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %89, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #21
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %124) #27
  br label %125

125:                                              ; preds = %114, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #21
  ret i32 %118
}

declare i32 @_ZNK2gl7Program19getFragDataLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17getUniformIndicesENS_15ShaderProgramIDEiPKPKcPj(%"class.gl::Context"*, i32, i32, i8** nocapture readonly, i32* nocapture) local_unnamed_addr #5 align 2 {
  %6 = bitcast i32* %4 to i8*
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %9 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %8, align 8
  %10 = zext i32 %1 to i64
  %11 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %9, i64 0, i32 2, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %12, %10
  br i1 %13, label %14, label %20

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %9, i64 0, i32 2, i32 1
  %16 = load %"class.gl::Program"**, %"class.gl::Program"*** %15, align 8
  %17 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %16, i64 %10
  %18 = load %"class.gl::Program"*, %"class.gl::Program"** %17, align 8
  %19 = icmp eq %"class.gl::Program"* %18, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %19, label %91, label %83

20:                                               ; preds = %5
  %21 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %22 = add i64 %21, %10
  %23 = zext i64 %22 to i128
  %24 = mul nuw i128 %23, 11376068507788127593
  %25 = lshr i128 %24, 64
  %26 = xor i128 %25, %24
  %27 = trunc i128 %26 to i64
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %9, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %9, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = lshr i64 %27, 7
  %33 = ptrtoint i8* %29 to i64
  %34 = lshr i64 %33, 12
  %35 = xor i64 %32, %34
  %36 = trunc i128 %26 to i8
  %37 = and i8 %36, 127
  %38 = insertelement <16 x i8> undef, i8 %37, i32 0
  %39 = shufflevector <16 x i8> %38, <16 x i8> undef, <16 x i32> zeroinitializer
  %40 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %9, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %41

41:                                               ; preds = %71, %20
  %42 = phi i64 [ %35, %20 ], [ %73, %71 ]
  %43 = phi i64 [ 0, %20 ], [ %72, %71 ]
  %44 = and i64 %42, %31
  %45 = getelementptr inbounds i8, i8* %29, i64 %44
  %46 = bitcast i8* %45 to <16 x i8>*
  %47 = load <16 x i8>, <16 x i8>* %46, align 1
  %48 = icmp eq <16 x i8> %39, %47
  %49 = bitcast <16 x i1> %48 to i16
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %67, label %51

51:                                               ; preds = %41
  %52 = zext i16 %49 to i32
  %53 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %40, align 8
  br label %54

54:                                               ; preds = %63, %51
  %55 = phi i32 [ %52, %51 ], [ %65, %63 ]
  %56 = tail call i32 @llvm.cttz.i32(i32 %55, i1 false) #21, !range !8
  %57 = zext i32 %56 to i64
  %58 = add i64 %44, %57
  %59 = and i64 %58, %31
  %60 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %53, i64 %59, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %1
  br i1 %62, label %74, label %63, !prof !9

63:                                               ; preds = %54
  %64 = add i32 %55, -1
  %65 = and i32 %64, %55
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %54

67:                                               ; preds = %63, %41
  %68 = icmp eq <16 x i8> %47, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %69 = bitcast <16 x i1> %68 to i16
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %71, label %91, !prof !10

71:                                               ; preds = %67
  %72 = add i64 %43, 16
  %73 = add i64 %72, %44
  br label %41

74:                                               ; preds = %54
  %75 = getelementptr inbounds i8, i8* %29, i64 %59
  %76 = icmp ne i8* %75, null
  tail call void @llvm.assume(i1 %76) #21
  %77 = load i8, i8* %75, align 1
  %78 = icmp sgt i8 %77, -1
  br i1 %78, label %80, label %79, !prof !9

79:                                               ; preds = %74
  tail call void @llvm.trap() #21
  unreachable

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %53, i64 %59, i32 0, i32 1
  %82 = load %"class.gl::Program"*, %"class.gl::Program"** %81, align 8
  br label %83

83:                                               ; preds = %80, %14
  %84 = phi %"class.gl::Program"* [ %18, %14 ], [ %82, %80 ]
  %85 = icmp eq %"class.gl::Program"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %84, i64 0, i32 11, i32 0, i32 0, i32 0
  %88 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %87, align 8
  %89 = icmp eq %"struct.gl::Program::LinkingState"* %88, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %86
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %84, %"class.gl::Context"* %0) #21
  br label %91

91:                                               ; preds = %67, %14, %83, %86, %90
  %92 = phi %"class.gl::Program"* [ null, %83 ], [ %84, %86 ], [ %84, %90 ], [ null, %14 ], [ null, %67 ]
  %93 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %92, i64 0, i32 10
  %94 = load i8, i8* %93, align 8, !range !2
  %95 = icmp eq i8 %94, 0
  %96 = icmp sgt i32 %2, 0
  br i1 %95, label %106, label %97

97:                                               ; preds = %91
  br i1 %96, label %98, label %142

98:                                               ; preds = %97
  %99 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = zext i32 %2 to i64
  br label %110

106:                                              ; preds = %91
  br i1 %96, label %107, label %142

107:                                              ; preds = %106
  %108 = zext i32 %2 to i64
  %109 = shl nuw nsw i64 %108, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 -1, i64 %109, i1 false)
  br label %142

110:                                              ; preds = %139, %98
  %111 = phi i64 [ 0, %98 ], [ %140, %139 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #21
  %112 = getelementptr inbounds i8*, i8** %3, i64 %111
  %113 = load i8*, i8** %112, align 8
  %114 = call i64 @strlen(i8* %113) #21
  %115 = icmp ugt i64 %114, -17
  br i1 %115, label %116, label %118

116:                                              ; preds = %110
  %117 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %117) #28
  unreachable

118:                                              ; preds = %110
  %119 = icmp ult i64 %114, 23
  br i1 %119, label %125, label %120

120:                                              ; preds = %118
  %121 = add nuw i64 %114, 16
  %122 = and i64 %121, -16
  %123 = call i8* @_Znwm(i64 %122) #27
  store i8* %123, i8** %100, align 8
  %124 = or i64 %122, -9223372036854775808
  store i64 %124, i64* %101, align 8
  store i64 %114, i64* %102, align 8
  br label %128

125:                                              ; preds = %118
  %126 = trunc i64 %114 to i8
  store i8 %126, i8* %104, align 1
  %127 = icmp eq i64 %114, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %125, %120
  %129 = phi i8* [ %123, %120 ], [ %99, %125 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %129, i8* align 1 %113, i64 %114, i1 false) #21
  br label %130

130:                                              ; preds = %125, %128
  %131 = phi i8* [ %99, %125 ], [ %129, %128 ]
  %132 = getelementptr inbounds i8, i8* %131, i64 %114
  store i8 0, i8* %132, align 1
  %133 = call i32 @_ZNK2gl7Program15getUniformIndexERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %92, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #21
  %134 = getelementptr inbounds i32, i32* %4, i64 %111
  store i32 %133, i32* %134, align 4
  %135 = load i8, i8* %104, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %130
  %138 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %138) #27
  br label %139

139:                                              ; preds = %130, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #21
  %140 = add nuw nsw i64 %111, 1
  %141 = icmp eq i64 %140, %105
  br i1 %141, label %142, label %110

142:                                              ; preds = %139, %107, %97, %106
  ret void
}

declare i32 @_ZNK2gl7Program15getUniformIndexERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19getActiveUniformsivENS_15ShaderProgramIDEiPKjjPi(%"class.gl::Context"*, i32, i32, i32* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %8 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %9
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 1
  %15 = load %"class.gl::Program"**, %"class.gl::Program"*** %14, align 8
  %16 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %15, i64 %9
  %17 = load %"class.gl::Program"*, %"class.gl::Program"** %16, align 8
  %18 = icmp eq %"class.gl::Program"* %17, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %18, label %90, label %82

19:                                               ; preds = %6
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = add i64 %20, %9
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %26, 7
  %32 = ptrtoint i8* %28 to i64
  %33 = lshr i64 %32, 12
  %34 = xor i64 %31, %33
  %35 = trunc i128 %25 to i8
  %36 = and i8 %35, 127
  %37 = insertelement <16 x i8> undef, i8 %36, i32 0
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> zeroinitializer
  %39 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %40

40:                                               ; preds = %70, %19
  %41 = phi i64 [ %34, %19 ], [ %72, %70 ]
  %42 = phi i64 [ 0, %19 ], [ %71, %70 ]
  %43 = and i64 %41, %30
  %44 = getelementptr inbounds i8, i8* %28, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %38, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  %52 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %39, align 8
  br label %53

53:                                               ; preds = %62, %50
  %54 = phi i32 [ %51, %50 ], [ %64, %62 ]
  %55 = tail call i32 @llvm.cttz.i32(i32 %54, i1 false) #21, !range !8
  %56 = zext i32 %55 to i64
  %57 = add i64 %43, %56
  %58 = and i64 %57, %30
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %1
  br i1 %61, label %73, label %62, !prof !9

62:                                               ; preds = %53
  %63 = add i32 %54, -1
  %64 = and i32 %63, %54
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %62, %40
  %67 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %90, !prof !10

70:                                               ; preds = %66
  %71 = add i64 %42, 16
  %72 = add i64 %71, %43
  br label %40

73:                                               ; preds = %53
  %74 = getelementptr inbounds i8, i8* %28, i64 %58
  %75 = icmp ne i8* %74, null
  tail call void @llvm.assume(i1 %75) #21
  %76 = load i8, i8* %74, align 1
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %73
  tail call void @llvm.trap() #21
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 1
  %81 = load %"class.gl::Program"*, %"class.gl::Program"** %80, align 8
  br label %82

82:                                               ; preds = %79, %13
  %83 = phi %"class.gl::Program"* [ %17, %13 ], [ %81, %79 ]
  %84 = icmp eq %"class.gl::Program"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %83, i64 0, i32 11, i32 0, i32 0, i32 0
  %87 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %86, align 8
  %88 = icmp eq %"struct.gl::Program::LinkingState"* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %83, %"class.gl::Context"* %0) #21
  br label %90

90:                                               ; preds = %66, %13, %82, %85, %89
  %91 = phi %"class.gl::Program"* [ null, %82 ], [ %83, %85 ], [ %83, %89 ], [ null, %13 ], [ null, %66 ]
  %92 = icmp sgt i32 %2, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  %94 = zext i32 %2 to i64
  br label %96

95:                                               ; preds = %96, %90
  ret void

96:                                               ; preds = %96, %93
  %97 = phi i64 [ 0, %93 ], [ %102, %96 ]
  %98 = getelementptr inbounds i32, i32* %3, i64 %97
  %99 = load i32, i32* %98, align 4
  %100 = tail call i32 @_ZN2gl26GetUniformResourcePropertyEPKNS_7ProgramEjj(%"class.gl::Program"* %91, i32 %99, i32 %4) #21
  %101 = getelementptr inbounds i32, i32* %5, i64 %97
  store i32 %100, i32* %101, align 4
  %102 = add nuw nsw i64 %97, 1
  %103 = icmp eq i64 %102, %94
  br i1 %103, label %95, label %96
}

declare i32 @_ZN2gl26GetUniformResourcePropertyEPKNS_7ProgramEjj(%"class.gl::Program"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context20getUniformBlockIndexENS_15ShaderProgramIDEPKc(%"class.gl::Context"*, i32, i8* nocapture readonly) local_unnamed_addr #5 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %16, label %88, label %80

17:                                               ; preds = %3
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %88, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %77, %11
  %81 = phi %"class.gl::Program"* [ %15, %11 ], [ %79, %77 ]
  %82 = icmp eq %"class.gl::Program"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %81, i64 0, i32 11, i32 0, i32 0, i32 0
  %85 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %84, align 8
  %86 = icmp eq %"struct.gl::Program::LinkingState"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %81, %"class.gl::Context"* %0) #21
  br label %88

88:                                               ; preds = %64, %11, %80, %83, %87
  %89 = phi %"class.gl::Program"* [ null, %80 ], [ %81, %83 ], [ %81, %87 ], [ null, %11 ], [ null, %64 ]
  %90 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #21
  %91 = tail call i64 @strlen(i8* %2) #21
  %92 = icmp ugt i64 %91, -17
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  %94 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %94) #28
  unreachable

95:                                               ; preds = %88
  %96 = icmp ult i64 %91, 23
  br i1 %96, label %106, label %97

97:                                               ; preds = %95
  %98 = add nuw i64 %91, 16
  %99 = and i64 %98, -16
  %100 = tail call i8* @_Znwm(i64 %99) #27
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %100, i8** %101, align 8
  %102 = or i64 %99, -9223372036854775808
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %91, i64* %104, align 8
  %105 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %111

106:                                              ; preds = %95
  %107 = trunc i64 %91 to i8
  %108 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  store i8 %107, i8* %109, align 1
  %110 = icmp eq i64 %91, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %106, %97
  %112 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %108, %106 ], [ %105, %97 ]
  %113 = phi i8* [ %90, %106 ], [ %100, %97 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %113, i8* align 1 %2, i64 %91, i1 false) #21
  br label %114

114:                                              ; preds = %106, %111
  %115 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %108, %106 ], [ %112, %111 ]
  %116 = phi i8* [ %90, %106 ], [ %113, %111 ]
  %117 = getelementptr inbounds i8, i8* %116, i64 %91
  store i8 0, i8* %117, align 1
  %118 = call i32 @_ZNK2gl7Program20getUniformBlockIndexERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %89, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #21
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %124) #27
  br label %125

125:                                              ; preds = %114, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #21
  ret i32 %118
}

declare i32 @_ZNK2gl7Program20getUniformBlockIndexERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23getActiveUniformBlockivENS_15ShaderProgramIDENS_17UniformBlockIndexEjPi(%"class.gl::Context"*, i32, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZN2gl25QueryActiveUniformBlockivEPKNS_7ProgramENS_17UniformBlockIndexEjPi(%"class.gl::Program"* %90, i32 %2, i32 %3, i32* %4) #21
  ret void
}

declare void @_ZN2gl25QueryActiveUniformBlockivEPKNS_7ProgramENS_17UniformBlockIndexEjPi(%"class.gl::Program"*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context29getActiveUniformBlockivRobustENS_15ShaderProgramIDENS_17UniformBlockIndexEjiPiS3_(%"class.gl::Context"*, i32, i32, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context23getActiveUniformBlockivENS_15ShaderProgramIDENS_17UniformBlockIndexEjPi(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 %3, i32* %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context25getActiveUniformBlockNameENS_15ShaderProgramIDENS_17UniformBlockIndexEiPiPc(%"class.gl::Context"*, i32, i32, i32, i32*, i8*) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %8 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %9
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 1
  %15 = load %"class.gl::Program"**, %"class.gl::Program"*** %14, align 8
  %16 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %15, i64 %9
  %17 = load %"class.gl::Program"*, %"class.gl::Program"** %16, align 8
  %18 = icmp eq %"class.gl::Program"* %17, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %18, label %90, label %82

19:                                               ; preds = %6
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = add i64 %20, %9
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %26, 7
  %32 = ptrtoint i8* %28 to i64
  %33 = lshr i64 %32, 12
  %34 = xor i64 %31, %33
  %35 = trunc i128 %25 to i8
  %36 = and i8 %35, 127
  %37 = insertelement <16 x i8> undef, i8 %36, i32 0
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> zeroinitializer
  %39 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %40

40:                                               ; preds = %70, %19
  %41 = phi i64 [ %34, %19 ], [ %72, %70 ]
  %42 = phi i64 [ 0, %19 ], [ %71, %70 ]
  %43 = and i64 %41, %30
  %44 = getelementptr inbounds i8, i8* %28, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %38, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  %52 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %39, align 8
  br label %53

53:                                               ; preds = %62, %50
  %54 = phi i32 [ %51, %50 ], [ %64, %62 ]
  %55 = tail call i32 @llvm.cttz.i32(i32 %54, i1 false) #21, !range !8
  %56 = zext i32 %55 to i64
  %57 = add i64 %43, %56
  %58 = and i64 %57, %30
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %1
  br i1 %61, label %73, label %62, !prof !9

62:                                               ; preds = %53
  %63 = add i32 %54, -1
  %64 = and i32 %63, %54
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %62, %40
  %67 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %90, !prof !10

70:                                               ; preds = %66
  %71 = add i64 %42, 16
  %72 = add i64 %71, %43
  br label %40

73:                                               ; preds = %53
  %74 = getelementptr inbounds i8, i8* %28, i64 %58
  %75 = icmp ne i8* %74, null
  tail call void @llvm.assume(i1 %75) #21
  %76 = load i8, i8* %74, align 1
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %73
  tail call void @llvm.trap() #21
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 1
  %81 = load %"class.gl::Program"*, %"class.gl::Program"** %80, align 8
  br label %82

82:                                               ; preds = %79, %13
  %83 = phi %"class.gl::Program"* [ %17, %13 ], [ %81, %79 ]
  %84 = icmp eq %"class.gl::Program"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %83, i64 0, i32 11, i32 0, i32 0, i32 0
  %87 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %86, align 8
  %88 = icmp eq %"struct.gl::Program::LinkingState"* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %83, %"class.gl::Context"* %0) #21
  br label %90

90:                                               ; preds = %66, %13, %82, %85, %89
  %91 = phi %"class.gl::Program"* [ null, %82 ], [ %83, %85 ], [ %83, %89 ], [ null, %13 ], [ null, %66 ]
  tail call void @_ZNK2gl7Program25getActiveUniformBlockNameENS_17UniformBlockIndexEiPiPc(%"class.gl::Program"* %91, i32 %2, i32 %3, i32* %4, i8* %5) #21
  ret void
}

declare void @_ZNK2gl7Program25getActiveUniformBlockNameENS_17UniformBlockIndexEiPiPc(%"class.gl::Program"*, i32, i32, i32*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19uniformBlockBindingENS_15ShaderProgramIDENS_17UniformBlockIndexEj(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %6 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %16, label %88, label %80

17:                                               ; preds = %4
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %6, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %88, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %80

80:                                               ; preds = %77, %11
  %81 = phi %"class.gl::Program"* [ %15, %11 ], [ %79, %77 ]
  %82 = icmp eq %"class.gl::Program"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %81, i64 0, i32 11, i32 0, i32 0, i32 0
  %85 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %84, align 8
  %86 = icmp eq %"struct.gl::Program::LinkingState"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %81, %"class.gl::Context"* %0) #21
  br label %88

88:                                               ; preds = %64, %11, %80, %83, %87
  %89 = phi %"class.gl::Program"* [ null, %80 ], [ %81, %83 ], [ %81, %87 ], [ null, %11 ], [ null, %64 ]
  tail call void @_ZN2gl7Program16bindUniformBlockENS_17UniformBlockIndexEj(%"class.gl::Program"* %89, i32 %2, i32 %3) #21
  %90 = tail call i32 @_ZNK2gl7Program11getRefCountEv(%"class.gl::Program"* %89) #21
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State14setObjectDirtyEj(%"class.gl::State"* %93, i32 33506) #21
  %94 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %94, align 8
  br label %95

95:                                               ; preds = %88, %92
  ret void
}

declare void @_ZN2gl7Program16bindUniformBlockENS_17UniformBlockIndexEj(%"class.gl::Program"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct.__GLsync* @_ZN2gl7Context9fenceSyncEjj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 15
  %5 = load %"class.gl::SyncManager"*, %"class.gl::SyncManager"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %7 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %7, i64 0, i32 0
  %9 = tail call i32 @_ZN2gl11SyncManager10createSyncEPN2rx13GLImplFactoryE(%"class.gl::SyncManager"* %5, %"class.rx::GLImplFactory"* %8) #21
  %10 = zext i32 %9 to i64
  %11 = inttoptr i64 %10 to %struct.__GLsync*
  %12 = load %"class.gl::SyncManager"*, %"class.gl::SyncManager"** %4, align 8
  %13 = tail call %"class.gl::Sync"* @_ZNK2gl11SyncManager7getSyncEj(%"class.gl::SyncManager"* %12, i32 %9) #21
  %14 = tail call i32 @_ZN2gl4Sync3setEPKNS_7ContextEjj(%"class.gl::Sync"* %13, %"class.gl::Context"* %0, i32 %1, i32 %2) #21
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %19

16:                                               ; preds = %3
  %17 = bitcast %"class.gl::SyncManager"** %4 to %"class.gl::TypedResourceManager.303"**
  %18 = load %"class.gl::TypedResourceManager.303"*, %"class.gl::TypedResourceManager.303"** %17, align 8
  tail call void @_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjE12deleteObjectEPKNS_7ContextEj(%"class.gl::TypedResourceManager.303"* %18, %"class.gl::Context"* %0, i32 %9) #21
  br label %19

19:                                               ; preds = %3, %16
  %20 = phi %struct.__GLsync* [ null, %16 ], [ %11, %3 ]
  ret %struct.__GLsync* %20
}

declare i32 @_ZN2gl11SyncManager10createSyncEPN2rx13GLImplFactoryE(%"class.gl::SyncManager"*, %"class.rx::GLImplFactory"*) local_unnamed_addr #3

declare i32 @_ZN2gl4Sync3setEPKNS_7ContextEjj(%"class.gl::Sync"*, %"class.gl::Context"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context6isSyncEP8__GLsync(%"class.gl::Context"* nocapture readonly, %struct.__GLsync*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 15
  %4 = load %"class.gl::SyncManager"*, %"class.gl::SyncManager"** %3, align 8
  %5 = ptrtoint %struct.__GLsync* %1 to i64
  %6 = trunc i64 %5 to i32
  %7 = tail call %"class.gl::Sync"* @_ZNK2gl11SyncManager7getSyncEj(%"class.gl::SyncManager"* %4, i32 %6) #21
  %8 = icmp ne %"class.gl::Sync"* %7, null
  %9 = zext i1 %8 to i8
  ret i8 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context14clientWaitSyncEP8__GLsyncjm(%"class.gl::Context"*, %struct.__GLsync*, i32, i64) local_unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 15
  %7 = load %"class.gl::SyncManager"*, %"class.gl::SyncManager"** %6, align 8
  %8 = ptrtoint %struct.__GLsync* %1 to i64
  %9 = trunc i64 %8 to i32
  %10 = tail call %"class.gl::Sync"* @_ZNK2gl11SyncManager7getSyncEj(%"class.gl::SyncManager"* %7, i32 %9) #21
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #21
  store i32 37149, i32* %5, align 4
  %12 = call i32 @_ZN2gl4Sync10clientWaitEPKNS_7ContextEjmPj(%"class.gl::Sync"* %10, %"class.gl::Context"* %0, i32 %2, i64 %3, i32* nonnull %5) #21
  %13 = icmp eq i32 %12, 1
  %14 = load i32, i32* %5, align 4
  %15 = select i1 %13, i32 37149, i32 %14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #21
  ret i32 %15
}

declare i32 @_ZN2gl4Sync10clientWaitEPKNS_7ContextEjmPj(%"class.gl::Sync"*, %"class.gl::Context"*, i32, i64, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8waitSyncEP8__GLsyncjm(%"class.gl::Context"*, %struct.__GLsync*, i32, i64) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 15
  %6 = load %"class.gl::SyncManager"*, %"class.gl::SyncManager"** %5, align 8
  %7 = ptrtoint %struct.__GLsync* %1 to i64
  %8 = trunc i64 %7 to i32
  %9 = tail call %"class.gl::Sync"* @_ZNK2gl11SyncManager7getSyncEj(%"class.gl::SyncManager"* %6, i32 %8) #21
  %10 = tail call i32 @_ZN2gl4Sync10serverWaitEPKNS_7ContextEjm(%"class.gl::Sync"* %9, %"class.gl::Context"* %0, i32 %2, i64 %3) #21
  ret void
}

declare i32 @_ZN2gl4Sync10serverWaitEPKNS_7ContextEjm(%"class.gl::Sync"*, %"class.gl::Context"*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13getInteger64vEjPl(%"class.gl::Context"*, i32, i64*) local_unnamed_addr #1 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #21
  store i32 0, i32* %4, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #21
  store i32 0, i32* %5, align 4
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %9 = call zeroext i1 @_ZN2gl21GetQueryParameterInfoERKNS_5StateEjPjS3_(%"class.gl::State"* dereferenceable(12296) %8, i32 %1, i32* nonnull %4, i32* nonnull %5) #21
  %10 = load i32, i32* %4, align 4
  %11 = icmp eq i32 %10, 27326
  br i1 %11, label %12, label %39

12:                                               ; preds = %3
  switch i32 %1, label %41 [
    i32 36203, label %13
    i32 35376, label %16
    i32 35377, label %19
    i32 35379, label %22
    i32 37137, label %25
    i32 36392, label %28
    i32 37086, label %36
  ]

13:                                               ; preds = %12
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 4
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %2, align 8
  br label %41

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 71
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %2, align 8
  br label %41

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 56, i32 0, i32 0, i64 0
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %2, align 8
  br label %41

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 56, i32 0, i32 0, i64 4
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %2, align 8
  br label %41

25:                                               ; preds = %12
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 27
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %2, align 8
  br label %41

28:                                               ; preds = %12
  %29 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %30 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %29, align 8
  %31 = bitcast %"class.rx::ContextImpl"* %30 to i64 (%"class.rx::ContextImpl"*)***
  %32 = load i64 (%"class.rx::ContextImpl"*)**, i64 (%"class.rx::ContextImpl"*)*** %31, align 8
  %33 = getelementptr inbounds i64 (%"class.rx::ContextImpl"*)*, i64 (%"class.rx::ContextImpl"*)** %32, i64 53
  %34 = load i64 (%"class.rx::ContextImpl"*)*, i64 (%"class.rx::ContextImpl"*)** %33, align 8
  %35 = call i64 %34(%"class.rx::ContextImpl"* %30) #21
  store i64 %35, i64* %2, align 8
  br label %41

36:                                               ; preds = %12
  %37 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 5, i32 86
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %2, align 8
  br label %41

39:                                               ; preds = %3
  %40 = load i32, i32* %5, align 4
  call void @_ZN2gl15CastStateValuesIlEEvPKNS_7ContextEjjjPT_(%"class.gl::Context"* %0, i32 %10, i32 %1, i32 %40, i64* %2) #21
  br label %41

41:                                               ; preds = %36, %28, %25, %22, %19, %16, %13, %12, %39
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #21
  ret void
}

declare void @_ZN2gl15CastStateValuesIlEEvPKNS_7ContextEjjjPT_(%"class.gl::Context"*, i32, i32, i32, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19getInteger64vRobustEjiPiPl(%"class.gl::Context"*, i32, i32, i32* nocapture readnone, i64*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context13getInteger64vEjPl(%"class.gl::Context"* %0, i32 %1, i64* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context22getBufferParameteri64vENS_13BufferBindingEjPl(%"class.gl::Context"* nocapture readonly, i8 zeroext, i32, i64*) local_unnamed_addr #1 align 2 {
  %5 = icmp eq i8 %1, 6
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %8 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %8, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  br label %13

10:                                               ; preds = %4
  %11 = zext i8 %1 to i64
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 %11, i32 0, i32 1
  br label %13

13:                                               ; preds = %6, %10
  %14 = phi %"class.gl::Buffer"** [ %9, %6 ], [ %12, %10 ]
  %15 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %14, align 8
  tail call void @_ZN2gl24QueryBufferParameteri64vEPKNS_6BufferEjPl(%"class.gl::Buffer"* %15, i32 %2, i64* %3) #21
  ret void
}

declare void @_ZN2gl24QueryBufferParameteri64vEPKNS_6BufferEjPl(%"class.gl::Buffer"*, i32, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context28getBufferParameteri64vRobustENS_13BufferBindingEjiPiPl(%"class.gl::Context"* nocapture readonly, i8 zeroext, i32, i32, i32* nocapture readnone, i64*) local_unnamed_addr #1 align 2 {
  %7 = icmp eq i8 %1, 6
  br i1 %7, label %8, label %12

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %10 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %10, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  br label %15

12:                                               ; preds = %6
  %13 = zext i8 %1 to i64
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 %13, i32 0, i32 1
  br label %15

15:                                               ; preds = %8, %12
  %16 = phi %"class.gl::Buffer"** [ %11, %8 ], [ %14, %12 ]
  %17 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %16, align 8
  tail call void @_ZN2gl24QueryBufferParameteri64vEPKNS_6BufferEjPl(%"class.gl::Buffer"* %17, i32 %2, i64* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11genSamplersEiPNS_9SamplerIDE(%"class.gl::Context"* nocapture readonly, i32, %"struct.gl::SamplerID"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %7 = zext i32 %1 to i64
  br label %9

8:                                                ; preds = %9, %3
  ret void

9:                                                ; preds = %9, %5
  %10 = phi i64 [ 0, %5 ], [ %14, %9 ]
  %11 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %6, align 8
  %12 = tail call i32 @_ZN2gl14SamplerManager13createSamplerEv(%"class.gl::SamplerManager"* %11) #21
  %13 = getelementptr inbounds %"struct.gl::SamplerID", %"struct.gl::SamplerID"* %2, i64 %10, i32 0
  store i32 %12, i32* %13, align 4
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, %7
  br i1 %15, label %8, label %9
}

declare i32 @_ZN2gl14SamplerManager13createSamplerEv(%"class.gl::SamplerManager"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14deleteSamplersEiPKNS_9SamplerIDE(%"class.gl::Context"*, i32, %"struct.gl::SamplerID"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 14
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %8 = bitcast %"class.gl::SamplerManager"** %6 to %"class.gl::TypedResourceManager.290"**
  %9 = zext i32 %1 to i64
  br label %11

10:                                               ; preds = %19, %3
  ret void

11:                                               ; preds = %19, %5
  %12 = phi i64 [ 0, %5 ], [ %21, %19 ]
  %13 = getelementptr inbounds %"struct.gl::SamplerID", %"struct.gl::SamplerID"* %2, i64 %12, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = load %"class.gl::SamplerManager"*, %"class.gl::SamplerManager"** %6, align 8
  %16 = tail call %"class.gl::Sampler"* @_ZNK2gl14SamplerManager10getSamplerENS_9SamplerIDE(%"class.gl::SamplerManager"* %15, i32 %14) #21
  %17 = icmp eq %"class.gl::Sampler"* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %11
  tail call void @_ZN2gl5State13detachSamplerEPKNS_7ContextENS_9SamplerIDE(%"class.gl::State"* %7, %"class.gl::Context"* %0, i32 %14) #21
  br label %19

19:                                               ; preds = %11, %18
  %20 = load %"class.gl::TypedResourceManager.290"*, %"class.gl::TypedResourceManager.290"** %8, align 8
  tail call void @_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.290"* %20, %"class.gl::Context"* %0, i32 %14) #21
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, %9
  br i1 %22, label %10, label %11
}

declare void @_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.290"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16minSampleShadingEf(%"class.gl::Context"*, float) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State19setMinSampleShadingEf(%"class.gl::State"* %3, float %1) #21
  ret void
}

declare void @_ZN2gl5State19setMinSampleShadingEf(%"class.gl::State"*, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19getInternalformativEjjjiPi(%"class.gl::Context"*, i32, i32, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 6
  %8 = tail call dereferenceable(32) %"struct.gl::TextureCaps"* @_ZNK2gl14TextureCapsMap3getEj(%"class.gl::TextureCapsMap"* %7, i32 %2) #21
  tail call void @_ZN2gl21QueryInternalFormativERKNS_11TextureCapsEjiPi(%"struct.gl::TextureCaps"* dereferenceable(32) %8, i32 %3, i32 %4, i32* %5) #21
  ret void
}

declare void @_ZN2gl21QueryInternalFormativERKNS_11TextureCapsEjiPi(%"struct.gl::TextureCaps"* dereferenceable(32), i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context25getInternalformativRobustEjjjiPiS1_(%"class.gl::Context"*, i32, i32, i32, i32, i32* nocapture readnone, i32*) local_unnamed_addr #1 align 2 {
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 6
  %9 = tail call dereferenceable(32) %"struct.gl::TextureCaps"* @_ZNK2gl14TextureCapsMap3getEj(%"class.gl::TextureCapsMap"* %8, i32 %2) #21
  tail call void @_ZN2gl21QueryInternalFormativERKNS_11TextureCapsEjiPi(%"struct.gl::TextureCaps"* dereferenceable(32) %9, i32 %3, i32 %4, i32* %6) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16programUniform1iENS_15ShaderProgramIDENS_15UniformLocationEi(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  store i32 %3, i32* %5, align 4
  call void @_ZN2gl7Context17programUniform1ivENS_15ShaderProgramIDENS_15UniformLocationEiPKi(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 1, i32* nonnull %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17programUniform1ivENS_15ShaderProgramIDENS_15UniformLocationEiPKi(%"class.gl::Context"*, i32, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %90, %"class.gl::Context"* %0, i32 %2, i32 %3, i32* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16programUniform2iENS_15ShaderProgramIDENS_15UniformLocationEii(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = alloca [2 x i32], align 4
  %7 = bitcast [2 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #21
  %8 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %9 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 1
  store i32 %3, i32* %8, align 4
  store i32 %4, i32* %9, align 4
  call void @_ZN2gl7Context17programUniform2ivENS_15ShaderProgramIDENS_15UniformLocationEiPKi(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 1, i32* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17programUniform2ivENS_15ShaderProgramIDENS_15UniformLocationEiPKi(%"class.gl::Context"*, i32, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZN2gl7Program13setUniform2ivENS_15UniformLocationEiPKi(%"class.gl::Program"* %90, i32 %2, i32 %3, i32* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16programUniform3iENS_15ShaderProgramIDENS_15UniformLocationEiii(%"class.gl::Context"*, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca [3 x i32], align 4
  %8 = bitcast [3 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #21
  %9 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 0
  %10 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 1
  %11 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 2
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  store i32 %5, i32* %11, align 4
  call void @_ZN2gl7Context17programUniform3ivENS_15ShaderProgramIDENS_15UniformLocationEiPKi(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 1, i32* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17programUniform3ivENS_15ShaderProgramIDENS_15UniformLocationEiPKi(%"class.gl::Context"*, i32, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZN2gl7Program13setUniform3ivENS_15UniformLocationEiPKi(%"class.gl::Program"* %90, i32 %2, i32 %3, i32* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16programUniform4iENS_15ShaderProgramIDENS_15UniformLocationEiiii(%"class.gl::Context"*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %8 = alloca [4 x i32], align 16
  %9 = bitcast [4 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #21
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 0
  %11 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 1
  %12 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 2
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 3
  store i32 %3, i32* %10, align 16
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 8
  store i32 %6, i32* %13, align 4
  call void @_ZN2gl7Context17programUniform4ivENS_15ShaderProgramIDENS_15UniformLocationEiPKi(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 1, i32* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17programUniform4ivENS_15ShaderProgramIDENS_15UniformLocationEiPKi(%"class.gl::Context"*, i32, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZN2gl7Program13setUniform4ivENS_15UniformLocationEiPKi(%"class.gl::Program"* %90, i32 %2, i32 %3, i32* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17programUniform1uiENS_15ShaderProgramIDENS_15UniformLocationEj(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  store i32 %3, i32* %5, align 4
  call void @_ZN2gl7Context18programUniform1uivENS_15ShaderProgramIDENS_15UniformLocationEiPKj(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 1, i32* nonnull %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18programUniform1uivENS_15ShaderProgramIDENS_15UniformLocationEiPKj(%"class.gl::Context"*, i32, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZN2gl7Program14setUniform1uivENS_15UniformLocationEiPKj(%"class.gl::Program"* %90, i32 %2, i32 %3, i32* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17programUniform2uiENS_15ShaderProgramIDENS_15UniformLocationEjj(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = alloca [2 x i32], align 4
  %7 = bitcast [2 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #21
  %8 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %9 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 1
  store i32 %3, i32* %8, align 4
  store i32 %4, i32* %9, align 4
  call void @_ZN2gl7Context18programUniform2uivENS_15ShaderProgramIDENS_15UniformLocationEiPKj(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 1, i32* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18programUniform2uivENS_15ShaderProgramIDENS_15UniformLocationEiPKj(%"class.gl::Context"*, i32, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZN2gl7Program14setUniform2uivENS_15UniformLocationEiPKj(%"class.gl::Program"* %90, i32 %2, i32 %3, i32* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17programUniform3uiENS_15ShaderProgramIDENS_15UniformLocationEjjj(%"class.gl::Context"*, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca [3 x i32], align 4
  %8 = bitcast [3 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #21
  %9 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 0
  %10 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 1
  %11 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 2
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  store i32 %5, i32* %11, align 4
  call void @_ZN2gl7Context18programUniform3uivENS_15ShaderProgramIDENS_15UniformLocationEiPKj(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 1, i32* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18programUniform3uivENS_15ShaderProgramIDENS_15UniformLocationEiPKj(%"class.gl::Context"*, i32, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZN2gl7Program14setUniform3uivENS_15UniformLocationEiPKj(%"class.gl::Program"* %90, i32 %2, i32 %3, i32* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17programUniform4uiENS_15ShaderProgramIDENS_15UniformLocationEjjjj(%"class.gl::Context"*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %8 = alloca [4 x i32], align 16
  %9 = bitcast [4 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #21
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 0
  %11 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 1
  %12 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 2
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 3
  store i32 %3, i32* %10, align 16
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 8
  store i32 %6, i32* %13, align 4
  call void @_ZN2gl7Context18programUniform4uivENS_15ShaderProgramIDENS_15UniformLocationEiPKj(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 1, i32* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18programUniform4uivENS_15ShaderProgramIDENS_15UniformLocationEiPKj(%"class.gl::Context"*, i32, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZN2gl7Program14setUniform4uivENS_15UniformLocationEiPKj(%"class.gl::Program"* %90, i32 %2, i32 %3, i32* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16programUniform1fENS_15ShaderProgramIDENS_15UniformLocationEf(%"class.gl::Context"*, i32, i32, float) local_unnamed_addr #1 align 2 {
  %5 = alloca float, align 4
  store float %3, float* %5, align 4
  call void @_ZN2gl7Context17programUniform1fvENS_15ShaderProgramIDENS_15UniformLocationEiPKf(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 1, float* nonnull %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17programUniform1fvENS_15ShaderProgramIDENS_15UniformLocationEiPKf(%"class.gl::Context"*, i32, i32, i32, float*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %90, i32 %2, i32 %3, float* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16programUniform2fENS_15ShaderProgramIDENS_15UniformLocationEff(%"class.gl::Context"*, i32, i32, float, float) local_unnamed_addr #1 align 2 {
  %6 = alloca [2 x float], align 4
  %7 = bitcast [2 x float]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #21
  %8 = getelementptr inbounds [2 x float], [2 x float]* %6, i64 0, i64 0
  %9 = getelementptr inbounds [2 x float], [2 x float]* %6, i64 0, i64 1
  store float %3, float* %8, align 4
  store float %4, float* %9, align 4
  call void @_ZN2gl7Context17programUniform2fvENS_15ShaderProgramIDENS_15UniformLocationEiPKf(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 1, float* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17programUniform2fvENS_15ShaderProgramIDENS_15UniformLocationEiPKf(%"class.gl::Context"*, i32, i32, i32, float*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZN2gl7Program13setUniform2fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %90, i32 %2, i32 %3, float* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16programUniform3fENS_15ShaderProgramIDENS_15UniformLocationEfff(%"class.gl::Context"*, i32, i32, float, float, float) local_unnamed_addr #1 align 2 {
  %7 = alloca [3 x float], align 4
  %8 = bitcast [3 x float]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #21
  %9 = getelementptr inbounds [3 x float], [3 x float]* %7, i64 0, i64 0
  %10 = getelementptr inbounds [3 x float], [3 x float]* %7, i64 0, i64 1
  %11 = getelementptr inbounds [3 x float], [3 x float]* %7, i64 0, i64 2
  store float %3, float* %9, align 4
  store float %4, float* %10, align 4
  store float %5, float* %11, align 4
  call void @_ZN2gl7Context17programUniform3fvENS_15ShaderProgramIDENS_15UniformLocationEiPKf(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 1, float* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17programUniform3fvENS_15ShaderProgramIDENS_15UniformLocationEiPKf(%"class.gl::Context"*, i32, i32, i32, float*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZN2gl7Program13setUniform3fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %90, i32 %2, i32 %3, float* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16programUniform4fENS_15ShaderProgramIDENS_15UniformLocationEffff(%"class.gl::Context"*, i32, i32, float, float, float, float) local_unnamed_addr #1 align 2 {
  %8 = alloca [4 x float], align 16
  %9 = bitcast [4 x float]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #21
  %10 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i64 0
  %11 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i64 1
  %12 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i64 2
  %13 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i64 3
  store float %3, float* %10, align 16
  store float %4, float* %11, align 4
  store float %5, float* %12, align 8
  store float %6, float* %13, align 4
  call void @_ZN2gl7Context17programUniform4fvENS_15ShaderProgramIDENS_15UniformLocationEiPKf(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 1, float* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17programUniform4fvENS_15ShaderProgramIDENS_15UniformLocationEiPKf(%"class.gl::Context"*, i32, i32, i32, float*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %90, i32 %2, i32 %3, float* %4) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23programUniformMatrix2fvENS_15ShaderProgramIDENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i32, i8 zeroext, float*) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %8 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %9
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 1
  %15 = load %"class.gl::Program"**, %"class.gl::Program"*** %14, align 8
  %16 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %15, i64 %9
  %17 = load %"class.gl::Program"*, %"class.gl::Program"** %16, align 8
  %18 = icmp eq %"class.gl::Program"* %17, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %18, label %90, label %82

19:                                               ; preds = %6
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = add i64 %20, %9
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %26, 7
  %32 = ptrtoint i8* %28 to i64
  %33 = lshr i64 %32, 12
  %34 = xor i64 %31, %33
  %35 = trunc i128 %25 to i8
  %36 = and i8 %35, 127
  %37 = insertelement <16 x i8> undef, i8 %36, i32 0
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> zeroinitializer
  %39 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %40

40:                                               ; preds = %70, %19
  %41 = phi i64 [ %34, %19 ], [ %72, %70 ]
  %42 = phi i64 [ 0, %19 ], [ %71, %70 ]
  %43 = and i64 %41, %30
  %44 = getelementptr inbounds i8, i8* %28, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %38, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  %52 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %39, align 8
  br label %53

53:                                               ; preds = %62, %50
  %54 = phi i32 [ %51, %50 ], [ %64, %62 ]
  %55 = tail call i32 @llvm.cttz.i32(i32 %54, i1 false) #21, !range !8
  %56 = zext i32 %55 to i64
  %57 = add i64 %43, %56
  %58 = and i64 %57, %30
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %1
  br i1 %61, label %73, label %62, !prof !9

62:                                               ; preds = %53
  %63 = add i32 %54, -1
  %64 = and i32 %63, %54
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %62, %40
  %67 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %90, !prof !10

70:                                               ; preds = %66
  %71 = add i64 %42, 16
  %72 = add i64 %71, %43
  br label %40

73:                                               ; preds = %53
  %74 = getelementptr inbounds i8, i8* %28, i64 %58
  %75 = icmp ne i8* %74, null
  tail call void @llvm.assume(i1 %75) #21
  %76 = load i8, i8* %74, align 1
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %73
  tail call void @llvm.trap() #21
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 1
  %81 = load %"class.gl::Program"*, %"class.gl::Program"** %80, align 8
  br label %82

82:                                               ; preds = %79, %13
  %83 = phi %"class.gl::Program"* [ %17, %13 ], [ %81, %79 ]
  %84 = icmp eq %"class.gl::Program"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %83, i64 0, i32 11, i32 0, i32 0, i32 0
  %87 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %86, align 8
  %88 = icmp eq %"struct.gl::Program::LinkingState"* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %83, %"class.gl::Context"* %0) #21
  br label %90

90:                                               ; preds = %66, %13, %82, %85, %89
  %91 = phi %"class.gl::Program"* [ null, %82 ], [ %83, %85 ], [ %83, %89 ], [ null, %13 ], [ null, %66 ]
  tail call void @_ZN2gl7Program19setUniformMatrix2fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %91, i32 %2, i32 %3, i8 zeroext %4, float* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23programUniformMatrix3fvENS_15ShaderProgramIDENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i32, i8 zeroext, float*) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %8 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %9
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 1
  %15 = load %"class.gl::Program"**, %"class.gl::Program"*** %14, align 8
  %16 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %15, i64 %9
  %17 = load %"class.gl::Program"*, %"class.gl::Program"** %16, align 8
  %18 = icmp eq %"class.gl::Program"* %17, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %18, label %90, label %82

19:                                               ; preds = %6
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = add i64 %20, %9
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %26, 7
  %32 = ptrtoint i8* %28 to i64
  %33 = lshr i64 %32, 12
  %34 = xor i64 %31, %33
  %35 = trunc i128 %25 to i8
  %36 = and i8 %35, 127
  %37 = insertelement <16 x i8> undef, i8 %36, i32 0
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> zeroinitializer
  %39 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %40

40:                                               ; preds = %70, %19
  %41 = phi i64 [ %34, %19 ], [ %72, %70 ]
  %42 = phi i64 [ 0, %19 ], [ %71, %70 ]
  %43 = and i64 %41, %30
  %44 = getelementptr inbounds i8, i8* %28, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %38, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  %52 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %39, align 8
  br label %53

53:                                               ; preds = %62, %50
  %54 = phi i32 [ %51, %50 ], [ %64, %62 ]
  %55 = tail call i32 @llvm.cttz.i32(i32 %54, i1 false) #21, !range !8
  %56 = zext i32 %55 to i64
  %57 = add i64 %43, %56
  %58 = and i64 %57, %30
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %1
  br i1 %61, label %73, label %62, !prof !9

62:                                               ; preds = %53
  %63 = add i32 %54, -1
  %64 = and i32 %63, %54
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %62, %40
  %67 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %90, !prof !10

70:                                               ; preds = %66
  %71 = add i64 %42, 16
  %72 = add i64 %71, %43
  br label %40

73:                                               ; preds = %53
  %74 = getelementptr inbounds i8, i8* %28, i64 %58
  %75 = icmp ne i8* %74, null
  tail call void @llvm.assume(i1 %75) #21
  %76 = load i8, i8* %74, align 1
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %73
  tail call void @llvm.trap() #21
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 1
  %81 = load %"class.gl::Program"*, %"class.gl::Program"** %80, align 8
  br label %82

82:                                               ; preds = %79, %13
  %83 = phi %"class.gl::Program"* [ %17, %13 ], [ %81, %79 ]
  %84 = icmp eq %"class.gl::Program"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %83, i64 0, i32 11, i32 0, i32 0, i32 0
  %87 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %86, align 8
  %88 = icmp eq %"struct.gl::Program::LinkingState"* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %83, %"class.gl::Context"* %0) #21
  br label %90

90:                                               ; preds = %66, %13, %82, %85, %89
  %91 = phi %"class.gl::Program"* [ null, %82 ], [ %83, %85 ], [ %83, %89 ], [ null, %13 ], [ null, %66 ]
  tail call void @_ZN2gl7Program19setUniformMatrix3fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %91, i32 %2, i32 %3, i8 zeroext %4, float* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23programUniformMatrix4fvENS_15ShaderProgramIDENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i32, i8 zeroext, float*) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %8 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %9
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 1
  %15 = load %"class.gl::Program"**, %"class.gl::Program"*** %14, align 8
  %16 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %15, i64 %9
  %17 = load %"class.gl::Program"*, %"class.gl::Program"** %16, align 8
  %18 = icmp eq %"class.gl::Program"* %17, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %18, label %90, label %82

19:                                               ; preds = %6
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = add i64 %20, %9
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %26, 7
  %32 = ptrtoint i8* %28 to i64
  %33 = lshr i64 %32, 12
  %34 = xor i64 %31, %33
  %35 = trunc i128 %25 to i8
  %36 = and i8 %35, 127
  %37 = insertelement <16 x i8> undef, i8 %36, i32 0
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> zeroinitializer
  %39 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %40

40:                                               ; preds = %70, %19
  %41 = phi i64 [ %34, %19 ], [ %72, %70 ]
  %42 = phi i64 [ 0, %19 ], [ %71, %70 ]
  %43 = and i64 %41, %30
  %44 = getelementptr inbounds i8, i8* %28, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %38, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  %52 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %39, align 8
  br label %53

53:                                               ; preds = %62, %50
  %54 = phi i32 [ %51, %50 ], [ %64, %62 ]
  %55 = tail call i32 @llvm.cttz.i32(i32 %54, i1 false) #21, !range !8
  %56 = zext i32 %55 to i64
  %57 = add i64 %43, %56
  %58 = and i64 %57, %30
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %1
  br i1 %61, label %73, label %62, !prof !9

62:                                               ; preds = %53
  %63 = add i32 %54, -1
  %64 = and i32 %63, %54
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %62, %40
  %67 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %90, !prof !10

70:                                               ; preds = %66
  %71 = add i64 %42, 16
  %72 = add i64 %71, %43
  br label %40

73:                                               ; preds = %53
  %74 = getelementptr inbounds i8, i8* %28, i64 %58
  %75 = icmp ne i8* %74, null
  tail call void @llvm.assume(i1 %75) #21
  %76 = load i8, i8* %74, align 1
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %73
  tail call void @llvm.trap() #21
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 1
  %81 = load %"class.gl::Program"*, %"class.gl::Program"** %80, align 8
  br label %82

82:                                               ; preds = %79, %13
  %83 = phi %"class.gl::Program"* [ %17, %13 ], [ %81, %79 ]
  %84 = icmp eq %"class.gl::Program"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %83, i64 0, i32 11, i32 0, i32 0, i32 0
  %87 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %86, align 8
  %88 = icmp eq %"struct.gl::Program::LinkingState"* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %83, %"class.gl::Context"* %0) #21
  br label %90

90:                                               ; preds = %66, %13, %82, %85, %89
  %91 = phi %"class.gl::Program"* [ null, %82 ], [ %83, %85 ], [ %83, %89 ], [ null, %13 ], [ null, %66 ]
  tail call void @_ZN2gl7Program19setUniformMatrix4fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %91, i32 %2, i32 %3, i8 zeroext %4, float* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context25programUniformMatrix2x3fvENS_15ShaderProgramIDENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i32, i8 zeroext, float*) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %8 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %9
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 1
  %15 = load %"class.gl::Program"**, %"class.gl::Program"*** %14, align 8
  %16 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %15, i64 %9
  %17 = load %"class.gl::Program"*, %"class.gl::Program"** %16, align 8
  %18 = icmp eq %"class.gl::Program"* %17, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %18, label %90, label %82

19:                                               ; preds = %6
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = add i64 %20, %9
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %26, 7
  %32 = ptrtoint i8* %28 to i64
  %33 = lshr i64 %32, 12
  %34 = xor i64 %31, %33
  %35 = trunc i128 %25 to i8
  %36 = and i8 %35, 127
  %37 = insertelement <16 x i8> undef, i8 %36, i32 0
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> zeroinitializer
  %39 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %40

40:                                               ; preds = %70, %19
  %41 = phi i64 [ %34, %19 ], [ %72, %70 ]
  %42 = phi i64 [ 0, %19 ], [ %71, %70 ]
  %43 = and i64 %41, %30
  %44 = getelementptr inbounds i8, i8* %28, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %38, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  %52 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %39, align 8
  br label %53

53:                                               ; preds = %62, %50
  %54 = phi i32 [ %51, %50 ], [ %64, %62 ]
  %55 = tail call i32 @llvm.cttz.i32(i32 %54, i1 false) #21, !range !8
  %56 = zext i32 %55 to i64
  %57 = add i64 %43, %56
  %58 = and i64 %57, %30
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %1
  br i1 %61, label %73, label %62, !prof !9

62:                                               ; preds = %53
  %63 = add i32 %54, -1
  %64 = and i32 %63, %54
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %62, %40
  %67 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %90, !prof !10

70:                                               ; preds = %66
  %71 = add i64 %42, 16
  %72 = add i64 %71, %43
  br label %40

73:                                               ; preds = %53
  %74 = getelementptr inbounds i8, i8* %28, i64 %58
  %75 = icmp ne i8* %74, null
  tail call void @llvm.assume(i1 %75) #21
  %76 = load i8, i8* %74, align 1
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %73
  tail call void @llvm.trap() #21
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 1
  %81 = load %"class.gl::Program"*, %"class.gl::Program"** %80, align 8
  br label %82

82:                                               ; preds = %79, %13
  %83 = phi %"class.gl::Program"* [ %17, %13 ], [ %81, %79 ]
  %84 = icmp eq %"class.gl::Program"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %83, i64 0, i32 11, i32 0, i32 0, i32 0
  %87 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %86, align 8
  %88 = icmp eq %"struct.gl::Program::LinkingState"* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %83, %"class.gl::Context"* %0) #21
  br label %90

90:                                               ; preds = %66, %13, %82, %85, %89
  %91 = phi %"class.gl::Program"* [ null, %82 ], [ %83, %85 ], [ %83, %89 ], [ null, %13 ], [ null, %66 ]
  tail call void @_ZN2gl7Program21setUniformMatrix2x3fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %91, i32 %2, i32 %3, i8 zeroext %4, float* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context25programUniformMatrix3x2fvENS_15ShaderProgramIDENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i32, i8 zeroext, float*) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %8 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %9
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 1
  %15 = load %"class.gl::Program"**, %"class.gl::Program"*** %14, align 8
  %16 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %15, i64 %9
  %17 = load %"class.gl::Program"*, %"class.gl::Program"** %16, align 8
  %18 = icmp eq %"class.gl::Program"* %17, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %18, label %90, label %82

19:                                               ; preds = %6
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = add i64 %20, %9
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %26, 7
  %32 = ptrtoint i8* %28 to i64
  %33 = lshr i64 %32, 12
  %34 = xor i64 %31, %33
  %35 = trunc i128 %25 to i8
  %36 = and i8 %35, 127
  %37 = insertelement <16 x i8> undef, i8 %36, i32 0
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> zeroinitializer
  %39 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %40

40:                                               ; preds = %70, %19
  %41 = phi i64 [ %34, %19 ], [ %72, %70 ]
  %42 = phi i64 [ 0, %19 ], [ %71, %70 ]
  %43 = and i64 %41, %30
  %44 = getelementptr inbounds i8, i8* %28, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %38, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  %52 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %39, align 8
  br label %53

53:                                               ; preds = %62, %50
  %54 = phi i32 [ %51, %50 ], [ %64, %62 ]
  %55 = tail call i32 @llvm.cttz.i32(i32 %54, i1 false) #21, !range !8
  %56 = zext i32 %55 to i64
  %57 = add i64 %43, %56
  %58 = and i64 %57, %30
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %1
  br i1 %61, label %73, label %62, !prof !9

62:                                               ; preds = %53
  %63 = add i32 %54, -1
  %64 = and i32 %63, %54
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %62, %40
  %67 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %90, !prof !10

70:                                               ; preds = %66
  %71 = add i64 %42, 16
  %72 = add i64 %71, %43
  br label %40

73:                                               ; preds = %53
  %74 = getelementptr inbounds i8, i8* %28, i64 %58
  %75 = icmp ne i8* %74, null
  tail call void @llvm.assume(i1 %75) #21
  %76 = load i8, i8* %74, align 1
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %73
  tail call void @llvm.trap() #21
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 1
  %81 = load %"class.gl::Program"*, %"class.gl::Program"** %80, align 8
  br label %82

82:                                               ; preds = %79, %13
  %83 = phi %"class.gl::Program"* [ %17, %13 ], [ %81, %79 ]
  %84 = icmp eq %"class.gl::Program"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %83, i64 0, i32 11, i32 0, i32 0, i32 0
  %87 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %86, align 8
  %88 = icmp eq %"struct.gl::Program::LinkingState"* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %83, %"class.gl::Context"* %0) #21
  br label %90

90:                                               ; preds = %66, %13, %82, %85, %89
  %91 = phi %"class.gl::Program"* [ null, %82 ], [ %83, %85 ], [ %83, %89 ], [ null, %13 ], [ null, %66 ]
  tail call void @_ZN2gl7Program21setUniformMatrix3x2fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %91, i32 %2, i32 %3, i8 zeroext %4, float* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context25programUniformMatrix2x4fvENS_15ShaderProgramIDENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i32, i8 zeroext, float*) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %8 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %9
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 1
  %15 = load %"class.gl::Program"**, %"class.gl::Program"*** %14, align 8
  %16 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %15, i64 %9
  %17 = load %"class.gl::Program"*, %"class.gl::Program"** %16, align 8
  %18 = icmp eq %"class.gl::Program"* %17, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %18, label %90, label %82

19:                                               ; preds = %6
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = add i64 %20, %9
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %26, 7
  %32 = ptrtoint i8* %28 to i64
  %33 = lshr i64 %32, 12
  %34 = xor i64 %31, %33
  %35 = trunc i128 %25 to i8
  %36 = and i8 %35, 127
  %37 = insertelement <16 x i8> undef, i8 %36, i32 0
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> zeroinitializer
  %39 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %40

40:                                               ; preds = %70, %19
  %41 = phi i64 [ %34, %19 ], [ %72, %70 ]
  %42 = phi i64 [ 0, %19 ], [ %71, %70 ]
  %43 = and i64 %41, %30
  %44 = getelementptr inbounds i8, i8* %28, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %38, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  %52 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %39, align 8
  br label %53

53:                                               ; preds = %62, %50
  %54 = phi i32 [ %51, %50 ], [ %64, %62 ]
  %55 = tail call i32 @llvm.cttz.i32(i32 %54, i1 false) #21, !range !8
  %56 = zext i32 %55 to i64
  %57 = add i64 %43, %56
  %58 = and i64 %57, %30
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %1
  br i1 %61, label %73, label %62, !prof !9

62:                                               ; preds = %53
  %63 = add i32 %54, -1
  %64 = and i32 %63, %54
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %62, %40
  %67 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %90, !prof !10

70:                                               ; preds = %66
  %71 = add i64 %42, 16
  %72 = add i64 %71, %43
  br label %40

73:                                               ; preds = %53
  %74 = getelementptr inbounds i8, i8* %28, i64 %58
  %75 = icmp ne i8* %74, null
  tail call void @llvm.assume(i1 %75) #21
  %76 = load i8, i8* %74, align 1
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %73
  tail call void @llvm.trap() #21
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 1
  %81 = load %"class.gl::Program"*, %"class.gl::Program"** %80, align 8
  br label %82

82:                                               ; preds = %79, %13
  %83 = phi %"class.gl::Program"* [ %17, %13 ], [ %81, %79 ]
  %84 = icmp eq %"class.gl::Program"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %83, i64 0, i32 11, i32 0, i32 0, i32 0
  %87 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %86, align 8
  %88 = icmp eq %"struct.gl::Program::LinkingState"* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %83, %"class.gl::Context"* %0) #21
  br label %90

90:                                               ; preds = %66, %13, %82, %85, %89
  %91 = phi %"class.gl::Program"* [ null, %82 ], [ %83, %85 ], [ %83, %89 ], [ null, %13 ], [ null, %66 ]
  tail call void @_ZN2gl7Program21setUniformMatrix2x4fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %91, i32 %2, i32 %3, i8 zeroext %4, float* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context25programUniformMatrix4x2fvENS_15ShaderProgramIDENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i32, i8 zeroext, float*) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %8 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %9
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 1
  %15 = load %"class.gl::Program"**, %"class.gl::Program"*** %14, align 8
  %16 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %15, i64 %9
  %17 = load %"class.gl::Program"*, %"class.gl::Program"** %16, align 8
  %18 = icmp eq %"class.gl::Program"* %17, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %18, label %90, label %82

19:                                               ; preds = %6
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = add i64 %20, %9
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %26, 7
  %32 = ptrtoint i8* %28 to i64
  %33 = lshr i64 %32, 12
  %34 = xor i64 %31, %33
  %35 = trunc i128 %25 to i8
  %36 = and i8 %35, 127
  %37 = insertelement <16 x i8> undef, i8 %36, i32 0
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> zeroinitializer
  %39 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %40

40:                                               ; preds = %70, %19
  %41 = phi i64 [ %34, %19 ], [ %72, %70 ]
  %42 = phi i64 [ 0, %19 ], [ %71, %70 ]
  %43 = and i64 %41, %30
  %44 = getelementptr inbounds i8, i8* %28, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %38, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  %52 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %39, align 8
  br label %53

53:                                               ; preds = %62, %50
  %54 = phi i32 [ %51, %50 ], [ %64, %62 ]
  %55 = tail call i32 @llvm.cttz.i32(i32 %54, i1 false) #21, !range !8
  %56 = zext i32 %55 to i64
  %57 = add i64 %43, %56
  %58 = and i64 %57, %30
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %1
  br i1 %61, label %73, label %62, !prof !9

62:                                               ; preds = %53
  %63 = add i32 %54, -1
  %64 = and i32 %63, %54
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %62, %40
  %67 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %90, !prof !10

70:                                               ; preds = %66
  %71 = add i64 %42, 16
  %72 = add i64 %71, %43
  br label %40

73:                                               ; preds = %53
  %74 = getelementptr inbounds i8, i8* %28, i64 %58
  %75 = icmp ne i8* %74, null
  tail call void @llvm.assume(i1 %75) #21
  %76 = load i8, i8* %74, align 1
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %73
  tail call void @llvm.trap() #21
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 1
  %81 = load %"class.gl::Program"*, %"class.gl::Program"** %80, align 8
  br label %82

82:                                               ; preds = %79, %13
  %83 = phi %"class.gl::Program"* [ %17, %13 ], [ %81, %79 ]
  %84 = icmp eq %"class.gl::Program"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %83, i64 0, i32 11, i32 0, i32 0, i32 0
  %87 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %86, align 8
  %88 = icmp eq %"struct.gl::Program::LinkingState"* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %83, %"class.gl::Context"* %0) #21
  br label %90

90:                                               ; preds = %66, %13, %82, %85, %89
  %91 = phi %"class.gl::Program"* [ null, %82 ], [ %83, %85 ], [ %83, %89 ], [ null, %13 ], [ null, %66 ]
  tail call void @_ZN2gl7Program21setUniformMatrix4x2fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %91, i32 %2, i32 %3, i8 zeroext %4, float* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context25programUniformMatrix3x4fvENS_15ShaderProgramIDENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i32, i8 zeroext, float*) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %8 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %9
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 1
  %15 = load %"class.gl::Program"**, %"class.gl::Program"*** %14, align 8
  %16 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %15, i64 %9
  %17 = load %"class.gl::Program"*, %"class.gl::Program"** %16, align 8
  %18 = icmp eq %"class.gl::Program"* %17, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %18, label %90, label %82

19:                                               ; preds = %6
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = add i64 %20, %9
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %26, 7
  %32 = ptrtoint i8* %28 to i64
  %33 = lshr i64 %32, 12
  %34 = xor i64 %31, %33
  %35 = trunc i128 %25 to i8
  %36 = and i8 %35, 127
  %37 = insertelement <16 x i8> undef, i8 %36, i32 0
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> zeroinitializer
  %39 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %40

40:                                               ; preds = %70, %19
  %41 = phi i64 [ %34, %19 ], [ %72, %70 ]
  %42 = phi i64 [ 0, %19 ], [ %71, %70 ]
  %43 = and i64 %41, %30
  %44 = getelementptr inbounds i8, i8* %28, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %38, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  %52 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %39, align 8
  br label %53

53:                                               ; preds = %62, %50
  %54 = phi i32 [ %51, %50 ], [ %64, %62 ]
  %55 = tail call i32 @llvm.cttz.i32(i32 %54, i1 false) #21, !range !8
  %56 = zext i32 %55 to i64
  %57 = add i64 %43, %56
  %58 = and i64 %57, %30
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %1
  br i1 %61, label %73, label %62, !prof !9

62:                                               ; preds = %53
  %63 = add i32 %54, -1
  %64 = and i32 %63, %54
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %62, %40
  %67 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %90, !prof !10

70:                                               ; preds = %66
  %71 = add i64 %42, 16
  %72 = add i64 %71, %43
  br label %40

73:                                               ; preds = %53
  %74 = getelementptr inbounds i8, i8* %28, i64 %58
  %75 = icmp ne i8* %74, null
  tail call void @llvm.assume(i1 %75) #21
  %76 = load i8, i8* %74, align 1
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %73
  tail call void @llvm.trap() #21
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 1
  %81 = load %"class.gl::Program"*, %"class.gl::Program"** %80, align 8
  br label %82

82:                                               ; preds = %79, %13
  %83 = phi %"class.gl::Program"* [ %17, %13 ], [ %81, %79 ]
  %84 = icmp eq %"class.gl::Program"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %83, i64 0, i32 11, i32 0, i32 0, i32 0
  %87 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %86, align 8
  %88 = icmp eq %"struct.gl::Program::LinkingState"* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %83, %"class.gl::Context"* %0) #21
  br label %90

90:                                               ; preds = %66, %13, %82, %85, %89
  %91 = phi %"class.gl::Program"* [ null, %82 ], [ %83, %85 ], [ %83, %89 ], [ null, %13 ], [ null, %66 ]
  tail call void @_ZN2gl7Program21setUniformMatrix3x4fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %91, i32 %2, i32 %3, i8 zeroext %4, float* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context25programUniformMatrix4x3fvENS_15ShaderProgramIDENS_15UniformLocationEihPKf(%"class.gl::Context"*, i32, i32, i32, i8 zeroext, float*) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %8 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %9
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 1
  %15 = load %"class.gl::Program"**, %"class.gl::Program"*** %14, align 8
  %16 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %15, i64 %9
  %17 = load %"class.gl::Program"*, %"class.gl::Program"** %16, align 8
  %18 = icmp eq %"class.gl::Program"* %17, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %18, label %90, label %82

19:                                               ; preds = %6
  %20 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %21 = add i64 %20, %9
  %22 = zext i64 %21 to i128
  %23 = mul nuw i128 %22, 11376068507788127593
  %24 = lshr i128 %23, 64
  %25 = xor i128 %24, %23
  %26 = trunc i128 %25 to i64
  %27 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %26, 7
  %32 = ptrtoint i8* %28 to i64
  %33 = lshr i64 %32, 12
  %34 = xor i64 %31, %33
  %35 = trunc i128 %25 to i8
  %36 = and i8 %35, 127
  %37 = insertelement <16 x i8> undef, i8 %36, i32 0
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> zeroinitializer
  %39 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %8, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %40

40:                                               ; preds = %70, %19
  %41 = phi i64 [ %34, %19 ], [ %72, %70 ]
  %42 = phi i64 [ 0, %19 ], [ %71, %70 ]
  %43 = and i64 %41, %30
  %44 = getelementptr inbounds i8, i8* %28, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %38, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  %52 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %39, align 8
  br label %53

53:                                               ; preds = %62, %50
  %54 = phi i32 [ %51, %50 ], [ %64, %62 ]
  %55 = tail call i32 @llvm.cttz.i32(i32 %54, i1 false) #21, !range !8
  %56 = zext i32 %55 to i64
  %57 = add i64 %43, %56
  %58 = and i64 %57, %30
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %1
  br i1 %61, label %73, label %62, !prof !9

62:                                               ; preds = %53
  %63 = add i32 %54, -1
  %64 = and i32 %63, %54
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %62, %40
  %67 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %90, !prof !10

70:                                               ; preds = %66
  %71 = add i64 %42, 16
  %72 = add i64 %71, %43
  br label %40

73:                                               ; preds = %53
  %74 = getelementptr inbounds i8, i8* %28, i64 %58
  %75 = icmp ne i8* %74, null
  tail call void @llvm.assume(i1 %75) #21
  %76 = load i8, i8* %74, align 1
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %73
  tail call void @llvm.trap() #21
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %52, i64 %58, i32 0, i32 1
  %81 = load %"class.gl::Program"*, %"class.gl::Program"** %80, align 8
  br label %82

82:                                               ; preds = %79, %13
  %83 = phi %"class.gl::Program"* [ %17, %13 ], [ %81, %79 ]
  %84 = icmp eq %"class.gl::Program"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %83, i64 0, i32 11, i32 0, i32 0, i32 0
  %87 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %86, align 8
  %88 = icmp eq %"struct.gl::Program::LinkingState"* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %83, %"class.gl::Context"* %0) #21
  br label %90

90:                                               ; preds = %66, %13, %82, %85, %89
  %91 = phi %"class.gl::Program"* [ null, %82 ], [ %83, %85 ], [ %83, %89 ], [ null, %13 ], [ null, %66 ]
  tail call void @_ZN2gl7Program21setUniformMatrix4x3fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %91, i32 %2, i32 %3, i8 zeroext %4, float* %5) #21
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context26isCurrentTransformFeedbackEPKNS_17TransformFeedbackE(%"class.gl::Context"* nocapture readonly, %"class.gl::TransformFeedback"* readnone) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 86, i32 0, i32 1
  %4 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %3, align 8
  %5 = icmp eq %"class.gl::TransformFeedback"* %4, %1
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19genProgramPipelinesEiPNS_17ProgramPipelineIDE(%"class.gl::Context"* nocapture readonly, i32, %"struct.gl::ProgramPipelineID"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 17
  %7 = zext i32 %1 to i64
  br label %9

8:                                                ; preds = %9, %3
  ret void

9:                                                ; preds = %9, %5
  %10 = phi i64 [ 0, %5 ], [ %14, %9 ]
  %11 = load %"class.gl::ProgramPipelineManager"*, %"class.gl::ProgramPipelineManager"** %6, align 8
  %12 = tail call i32 @_ZN2gl22ProgramPipelineManager21createProgramPipelineEv(%"class.gl::ProgramPipelineManager"* %11) #21
  %13 = getelementptr inbounds %"struct.gl::ProgramPipelineID", %"struct.gl::ProgramPipelineID"* %2, i64 %10, i32 0
  store i32 %12, i32* %13, align 4
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, %7
  br i1 %15, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context22deleteProgramPipelinesEiPKNS_17ProgramPipelineIDE(%"class.gl::Context"*, i32, %"struct.gl::ProgramPipelineID"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 17
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %8 = bitcast %"class.gl::ProgramPipelineManager"** %6 to %"class.gl::TypedResourceManager.325"**
  %9 = zext i32 %1 to i64
  br label %11

10:                                               ; preds = %23, %3
  ret void

11:                                               ; preds = %23, %5
  %12 = phi i64 [ 0, %5 ], [ %24, %23 ]
  %13 = getelementptr inbounds %"struct.gl::ProgramPipelineID", %"struct.gl::ProgramPipelineID"* %2, i64 %12, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %11
  %17 = load %"class.gl::ProgramPipelineManager"*, %"class.gl::ProgramPipelineManager"** %6, align 8
  %18 = tail call %"class.gl::ProgramPipeline"* @_ZNK2gl22ProgramPipelineManager18getProgramPipelineENS_17ProgramPipelineIDE(%"class.gl::ProgramPipelineManager"* %17, i32 %14) #21
  %19 = icmp eq %"class.gl::ProgramPipeline"* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZN2gl5State21detachProgramPipelineEPKNS_7ContextENS_17ProgramPipelineIDE(%"class.gl::State"* %7, %"class.gl::Context"* %0, i32 %14) #21
  br label %21

21:                                               ; preds = %16, %20
  %22 = load %"class.gl::TypedResourceManager.325"*, %"class.gl::TypedResourceManager.325"** %8, align 8
  tail call void @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.325"* %22, %"class.gl::Context"* %0, i32 %14) #21
  br label %23

23:                                               ; preds = %11, %21
  %24 = add nuw nsw i64 %12, 1
  %25 = icmp eq i64 %24, %9
  br i1 %25, label %10, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context17isProgramPipelineENS_17ProgramPipelineIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 17
  %6 = load %"class.gl::ProgramPipelineManager"*, %"class.gl::ProgramPipelineManager"** %5, align 8
  %7 = tail call %"class.gl::ProgramPipeline"* @_ZNK2gl22ProgramPipelineManager18getProgramPipelineENS_17ProgramPipelineIDE(%"class.gl::ProgramPipelineManager"* %6, i32 %1) #21
  %8 = icmp ne %"class.gl::ProgramPipeline"* %7, null
  %9 = zext i1 %8 to i8
  br label %10

10:                                               ; preds = %4, %2
  %11 = phi i8 [ 0, %2 ], [ %9, %4 ]
  ret i8 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13finishFenceNVENS_9FenceNVIDE(%"class.gl::Context"*, i32) local_unnamed_addr #5 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 1
  %9 = load %"class.gl::FenceNV"**, %"class.gl::FenceNV"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %9, i64 %3
  %11 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %10, align 8
  %12 = icmp eq %"class.gl::FenceNV"* %11, inttoptr (i64 -1 to %"class.gl::FenceNV"*)
  %13 = select i1 %12, %"class.gl::FenceNV"* null, %"class.gl::FenceNV"* %11
  br label %77

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #21, !range !8
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %68, label %57, !prof !9

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !10

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #21
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !9

73:                                               ; preds = %68
  tail call void @llvm.trap() #21
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::FenceNV"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  %79 = tail call i32 @_ZN2gl7FenceNV6finishEPKNS_7ContextE(%"class.gl::FenceNV"* %78, %"class.gl::Context"* %0) #21
  ret void
}

declare i32 @_ZN2gl7FenceNV6finishEPKNS_7ContextE(%"class.gl::FenceNV"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12getFenceivNVENS_9FenceNVIDEjPi(%"class.gl::Context"*, i32, i32, i32* nocapture) local_unnamed_addr #5 align 2 {
  %5 = alloca i8, align 1
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %10, label %17

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 1
  %12 = load %"class.gl::FenceNV"**, %"class.gl::FenceNV"*** %11, align 8
  %13 = getelementptr inbounds %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %12, i64 %6
  %14 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %13, align 8
  %15 = icmp eq %"class.gl::FenceNV"* %14, inttoptr (i64 -1 to %"class.gl::FenceNV"*)
  %16 = select i1 %15, %"class.gl::FenceNV"* null, %"class.gl::FenceNV"* %14
  br label %80

17:                                               ; preds = %4
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %6
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %80, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %78, align 8
  br label %80

80:                                               ; preds = %64, %10, %77
  %81 = phi %"class.gl::FenceNV"* [ %16, %10 ], [ %79, %77 ], [ null, %64 ]
  switch i32 %2, label %98 [
    i32 34035, label %82
    i32 34036, label %95
  ]

82:                                               ; preds = %80
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #21
  store i8 1, i8* %5, align 1
  %83 = getelementptr inbounds %"class.gl::FenceNV", %"class.gl::FenceNV"* %81, i64 0, i32 3
  %84 = load i8, i8* %83, align 1
  %85 = icmp eq i8 %84, 1
  br i1 %85, label %92, label %86

86:                                               ; preds = %82
  %87 = call i32 @_ZN2gl7FenceNV4testEPKNS_7ContextEPh(%"class.gl::FenceNV"* %81, %"class.gl::Context"* %0, i8* nonnull %5) #21
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %94, label %89

89:                                               ; preds = %86
  %90 = load i8, i8* %5, align 1
  %91 = zext i8 %90 to i32
  br label %92

92:                                               ; preds = %89, %82
  %93 = phi i32 [ %91, %89 ], [ 1, %82 ]
  store i32 %93, i32* %3, align 4
  br label %94

94:                                               ; preds = %86, %92
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #21
  ret void

95:                                               ; preds = %80
  %96 = getelementptr inbounds %"class.gl::FenceNV", %"class.gl::FenceNV"* %81, i64 0, i32 4
  %97 = load i32, i32* %96, align 4
  store i32 %97, i32* %3, align 4
  br label %98

98:                                               ; preds = %95, %80
  ret void
}

declare i32 @_ZN2gl7FenceNV4testEPKNS_7ContextEPh(%"class.gl::FenceNV"*, %"class.gl::Context"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context25getTranslatedShaderSourceENS_15ShaderProgramIDEiPiPc(%"class.gl::Context"* nocapture readonly, i32, i32, i32*, i8*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %7, i32 %1) #21
  tail call void @_ZN2gl6Shader32getTranslatedSourceWithDebugInfoEiPiPc(%"class.gl::Shader"* %8, i32 %2, i32* %3, i8* %4) #21
  ret void
}

declare void @_ZN2gl6Shader32getTranslatedSourceWithDebugInfoEiPiPc(%"class.gl::Shader"*, i32, i32*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13getnUniformfvENS_15ShaderProgramIDENS_15UniformLocationEiPf(%"class.gl::Context"*, i32, i32, i32, float*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZNK2gl7Program12getUniformfvEPKNS_7ContextENS_15UniformLocationEPf(%"class.gl::Program"* %90, %"class.gl::Context"* %0, i32 %2, float* %4) #21
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context19getnUniformfvRobustENS_15ShaderProgramIDENS_15UniformLocationEiPiPf(%"class.gl::Context"* nocapture, i32, i32, i32, i32* nocapture, float* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13getnUniformivENS_15ShaderProgramIDENS_15UniformLocationEiPi(%"class.gl::Context"*, i32, i32, i32, i32*) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 11
  %7 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 1
  %14 = load %"class.gl::Program"**, %"class.gl::Program"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %14, i64 %8
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %17, label %89, label %81

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %89, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = load %"class.gl::Program"*, %"class.gl::Program"** %79, align 8
  br label %81

81:                                               ; preds = %78, %12
  %82 = phi %"class.gl::Program"* [ %16, %12 ], [ %80, %78 ]
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 11, i32 0, i32 0, i32 0
  %86 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %85, align 8
  %87 = icmp eq %"struct.gl::Program::LinkingState"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %0) #21
  br label %89

89:                                               ; preds = %65, %12, %81, %84, %88
  %90 = phi %"class.gl::Program"* [ null, %81 ], [ %82, %84 ], [ %82, %88 ], [ null, %12 ], [ null, %65 ]
  tail call void @_ZNK2gl7Program12getUniformivEPKNS_7ContextENS_15UniformLocationEPi(%"class.gl::Program"* %90, %"class.gl::Context"* %0, i32 %2, i32* %4) #21
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context19getnUniformivRobustENS_15ShaderProgramIDENS_15UniformLocationEiPiS3_(%"class.gl::Context"* nocapture, i32, i32, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context20getnUniformuivRobustENS_15ShaderProgramIDENS_15UniformLocationEiPiPj(%"class.gl::Context"* nocapture, i32, i32, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context9isFenceNVENS_9FenceNVIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 1
  %9 = load %"class.gl::FenceNV"**, %"class.gl::FenceNV"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %9, i64 %3
  %11 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %10, align 8
  %12 = icmp eq %"class.gl::FenceNV"* %11, inttoptr (i64 -1 to %"class.gl::FenceNV"*)
  br i1 %12, label %82, label %76

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %15 = add i64 %14, %3
  %16 = zext i64 %15 to i128
  %17 = mul nuw i128 %16, 11376068507788127593
  %18 = lshr i128 %17, 64
  %19 = xor i128 %18, %17
  %20 = trunc i128 %19 to i64
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = lshr i64 %20, 7
  %26 = ptrtoint i8* %22 to i64
  %27 = lshr i64 %26, 12
  %28 = xor i64 %25, %27
  %29 = trunc i128 %19 to i8
  %30 = and i8 %29, 127
  %31 = insertelement <16 x i8> undef, i8 %30, i32 0
  %32 = shufflevector <16 x i8> %31, <16 x i8> undef, <16 x i32> zeroinitializer
  %33 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 1
  br label %34

34:                                               ; preds = %64, %13
  %35 = phi i64 [ %28, %13 ], [ %66, %64 ]
  %36 = phi i64 [ 0, %13 ], [ %65, %64 ]
  %37 = and i64 %35, %24
  %38 = getelementptr inbounds i8, i8* %22, i64 %37
  %39 = bitcast i8* %38 to <16 x i8>*
  %40 = load <16 x i8>, <16 x i8>* %39, align 1
  %41 = icmp eq <16 x i8> %32, %40
  %42 = bitcast <16 x i1> %41 to i16
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %60, label %44

44:                                               ; preds = %34
  %45 = zext i16 %42 to i32
  %46 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %33, align 8
  br label %47

47:                                               ; preds = %56, %44
  %48 = phi i32 [ %45, %44 ], [ %58, %56 ]
  %49 = tail call i32 @llvm.cttz.i32(i32 %48, i1 false) #21, !range !8
  %50 = zext i32 %49 to i64
  %51 = add i64 %37, %50
  %52 = and i64 %51, %24
  %53 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %46, i64 %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %67, label %56, !prof !9

56:                                               ; preds = %47
  %57 = add i32 %48, -1
  %58 = and i32 %57, %48
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %47

60:                                               ; preds = %56, %34
  %61 = icmp eq <16 x i8> %40, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %62 = bitcast <16 x i1> %61 to i16
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %64, label %82, !prof !10

64:                                               ; preds = %60
  %65 = add i64 %36, 16
  %66 = add i64 %65, %37
  br label %34

67:                                               ; preds = %47
  %68 = getelementptr inbounds i8, i8* %22, i64 %52
  %69 = icmp ne i8* %68, null
  tail call void @llvm.assume(i1 %69) #21
  %70 = load i8, i8* %68, align 1
  %71 = icmp sgt i8 %70, -1
  br i1 %71, label %73, label %72, !prof !9

72:                                               ; preds = %67
  tail call void @llvm.trap() #21
  unreachable

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %46, i64 %52, i32 0, i32 1
  %75 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %74, align 8
  br label %76

76:                                               ; preds = %7, %73
  %77 = phi %"class.gl::FenceNV"* [ %11, %7 ], [ %75, %73 ]
  %78 = icmp eq %"class.gl::FenceNV"* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.gl::FenceNV", %"class.gl::FenceNV"* %77, i64 0, i32 2
  %81 = load i8, i8* %80, align 8, !range !2
  br label %82

82:                                               ; preds = %60, %7, %76, %79
  %83 = phi i8 [ %81, %79 ], [ 0, %76 ], [ 0, %7 ], [ 0, %60 ]
  ret i8 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11readnPixelsEiiiijjiPv(%"class.gl::Context"*, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context10readPixelsEiiiijjPv(%"class.gl::Context"* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i8* %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10setFenceNVENS_9FenceNVIDEj(%"class.gl::Context"*, i32, i32) local_unnamed_addr #5 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 1
  %10 = load %"class.gl::FenceNV"**, %"class.gl::FenceNV"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %10, i64 %4
  %12 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %11, align 8
  %13 = icmp eq %"class.gl::FenceNV"* %12, inttoptr (i64 -1 to %"class.gl::FenceNV"*)
  %14 = select i1 %13, %"class.gl::FenceNV"* null, %"class.gl::FenceNV"* %12
  br label %78

15:                                               ; preds = %3
  %16 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %17 = add i64 %16, %4
  %18 = zext i64 %17 to i128
  %19 = mul nuw i128 %18, 11376068507788127593
  %20 = lshr i128 %19, 64
  %21 = xor i128 %20, %19
  %22 = trunc i128 %21 to i64
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %22, 7
  %28 = ptrtoint i8* %24 to i64
  %29 = lshr i64 %28, 12
  %30 = xor i64 %27, %29
  %31 = trunc i128 %21 to i8
  %32 = and i8 %31, 127
  %33 = insertelement <16 x i8> undef, i8 %32, i32 0
  %34 = shufflevector <16 x i8> %33, <16 x i8> undef, <16 x i32> zeroinitializer
  %35 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 1
  br label %36

36:                                               ; preds = %66, %15
  %37 = phi i64 [ %30, %15 ], [ %68, %66 ]
  %38 = phi i64 [ 0, %15 ], [ %67, %66 ]
  %39 = and i64 %37, %26
  %40 = getelementptr inbounds i8, i8* %24, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %34, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %35, align 8
  br label %49

49:                                               ; preds = %58, %46
  %50 = phi i32 [ %47, %46 ], [ %60, %58 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #21, !range !8
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %26
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %48, i64 %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %69, label %58, !prof !9

58:                                               ; preds = %49
  %59 = add i32 %50, -1
  %60 = and i32 %59, %50
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %49

62:                                               ; preds = %58, %36
  %63 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %78, !prof !10

66:                                               ; preds = %62
  %67 = add i64 %38, 16
  %68 = add i64 %67, %39
  br label %36

69:                                               ; preds = %49
  %70 = getelementptr inbounds i8, i8* %24, i64 %54
  %71 = icmp ne i8* %70, null
  tail call void @llvm.assume(i1 %71) #21
  %72 = load i8, i8* %70, align 1
  %73 = icmp sgt i8 %72, -1
  br i1 %73, label %75, label %74, !prof !9

74:                                               ; preds = %69
  tail call void @llvm.trap() #21
  unreachable

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %48, i64 %54, i32 0, i32 1
  %77 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %76, align 8
  br label %78

78:                                               ; preds = %62, %8, %75
  %79 = phi %"class.gl::FenceNV"* [ %14, %8 ], [ %77, %75 ], [ null, %62 ]
  %80 = tail call i32 @_ZN2gl7FenceNV3setEPKNS_7ContextEj(%"class.gl::FenceNV"* %79, %"class.gl::Context"* %0, i32 %2) #21
  ret void
}

declare i32 @_ZN2gl7FenceNV3setEPKNS_7ContextEj(%"class.gl::FenceNV"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2gl7Context11testFenceNVENS_9FenceNVIDE(%"class.gl::Context"*, i32) local_unnamed_addr #5 align 2 {
  %3 = alloca i8, align 1
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 1
  %10 = load %"class.gl::FenceNV"**, %"class.gl::FenceNV"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %10, i64 %4
  %12 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %11, align 8
  %13 = icmp eq %"class.gl::FenceNV"* %12, inttoptr (i64 -1 to %"class.gl::FenceNV"*)
  %14 = select i1 %13, %"class.gl::FenceNV"* null, %"class.gl::FenceNV"* %12
  br label %78

15:                                               ; preds = %2
  %16 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %17 = add i64 %16, %4
  %18 = zext i64 %17 to i128
  %19 = mul nuw i128 %18, 11376068507788127593
  %20 = lshr i128 %19, 64
  %21 = xor i128 %20, %19
  %22 = trunc i128 %21 to i64
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %22, 7
  %28 = ptrtoint i8* %24 to i64
  %29 = lshr i64 %28, 12
  %30 = xor i64 %27, %29
  %31 = trunc i128 %21 to i8
  %32 = and i8 %31, 127
  %33 = insertelement <16 x i8> undef, i8 %32, i32 0
  %34 = shufflevector <16 x i8> %33, <16 x i8> undef, <16 x i32> zeroinitializer
  %35 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 18, i32 2, i32 0, i32 0, i32 1
  br label %36

36:                                               ; preds = %66, %15
  %37 = phi i64 [ %30, %15 ], [ %68, %66 ]
  %38 = phi i64 [ 0, %15 ], [ %67, %66 ]
  %39 = and i64 %37, %26
  %40 = getelementptr inbounds i8, i8* %24, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %34, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %35, align 8
  br label %49

49:                                               ; preds = %58, %46
  %50 = phi i32 [ %47, %46 ], [ %60, %58 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #21, !range !8
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %26
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %48, i64 %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %69, label %58, !prof !9

58:                                               ; preds = %49
  %59 = add i32 %50, -1
  %60 = and i32 %59, %50
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %49

62:                                               ; preds = %58, %36
  %63 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %78, !prof !10

66:                                               ; preds = %62
  %67 = add i64 %38, 16
  %68 = add i64 %67, %39
  br label %36

69:                                               ; preds = %49
  %70 = getelementptr inbounds i8, i8* %24, i64 %54
  %71 = icmp ne i8* %70, null
  tail call void @llvm.assume(i1 %71) #21
  %72 = load i8, i8* %70, align 1
  %73 = icmp sgt i8 %72, -1
  br i1 %73, label %75, label %74, !prof !9

74:                                               ; preds = %69
  tail call void @llvm.trap() #21
  unreachable

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %48, i64 %54, i32 0, i32 1
  %77 = load %"class.gl::FenceNV"*, %"class.gl::FenceNV"** %76, align 8
  br label %78

78:                                               ; preds = %62, %8, %75
  %79 = phi %"class.gl::FenceNV"* [ %14, %8 ], [ %77, %75 ], [ null, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #21
  store i8 1, i8* %3, align 1
  %80 = call i32 @_ZN2gl7FenceNV4testEPKNS_7ContextEPh(%"class.gl::FenceNV"* %79, %"class.gl::Context"* %0, i8* nonnull %3) #21
  %81 = icmp eq i32 %80, 1
  %82 = load i8, i8* %3, align 1
  %83 = select i1 %81, i8 1, i8 %82
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #21
  ret i8 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19deleteMemoryObjectsEiPKNS_14MemoryObjectIDE(%"class.gl::Context"*, i32, %"struct.gl::MemoryObjectID"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 18
  %7 = zext i32 %1 to i64
  br label %9

8:                                                ; preds = %9, %3
  ret void

9:                                                ; preds = %9, %5
  %10 = phi i64 [ 0, %5 ], [ %14, %9 ]
  %11 = getelementptr inbounds %"struct.gl::MemoryObjectID", %"struct.gl::MemoryObjectID"* %2, i64 %10, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = load %"class.gl::MemoryObjectManager"*, %"class.gl::MemoryObjectManager"** %6, align 8
  tail call void @_ZN2gl19MemoryObjectManager18deleteMemoryObjectEPKNS_7ContextENS_14MemoryObjectIDE(%"class.gl::MemoryObjectManager"* %13, %"class.gl::Context"* %0, i32 %12) #21
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, %7
  br i1 %15, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context14isMemoryObjectENS_14MemoryObjectIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 18
  %6 = load %"class.gl::MemoryObjectManager"*, %"class.gl::MemoryObjectManager"** %5, align 8
  %7 = tail call %"class.gl::MemoryObject"* @_ZNK2gl19MemoryObjectManager15getMemoryObjectENS_14MemoryObjectIDE(%"class.gl::MemoryObjectManager"* %6, i32 %1) #21
  %8 = icmp ne %"class.gl::MemoryObject"* %7, null
  %9 = zext i1 %8 to i8
  br label %10

10:                                               ; preds = %2, %4
  %11 = phi i8 [ %9, %4 ], [ 0, %2 ]
  ret i8 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19createMemoryObjectsEiPNS_14MemoryObjectIDE(%"class.gl::Context"* nocapture readonly, i32, %"struct.gl::MemoryObjectID"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 18
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = zext i32 %1 to i64
  br label %10

9:                                                ; preds = %10, %3
  ret void

10:                                               ; preds = %10, %5
  %11 = phi i64 [ 0, %5 ], [ %17, %10 ]
  %12 = load %"class.gl::MemoryObjectManager"*, %"class.gl::MemoryObjectManager"** %6, align 8
  %13 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %7, align 8
  %14 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %13, i64 0, i32 0
  %15 = tail call i32 @_ZN2gl19MemoryObjectManager18createMemoryObjectEPN2rx13GLImplFactoryE(%"class.gl::MemoryObjectManager"* %12, %"class.rx::GLImplFactory"* %14) #21
  %16 = getelementptr inbounds %"struct.gl::MemoryObjectID", %"struct.gl::MemoryObjectID"* %2, i64 %11, i32 0
  store i32 %15, i32* %16, align 4
  %17 = add nuw nsw i64 %11, 1
  %18 = icmp eq i64 %17, %8
  br i1 %18, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23memoryObjectParameterivENS_14MemoryObjectIDEjPKi(%"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 18
  %6 = load %"class.gl::MemoryObjectManager"*, %"class.gl::MemoryObjectManager"** %5, align 8
  %7 = tail call %"class.gl::MemoryObject"* @_ZNK2gl19MemoryObjectManager15getMemoryObjectENS_14MemoryObjectIDE(%"class.gl::MemoryObjectManager"* %6, i32 %1) #21
  %8 = tail call i32 @_ZN2gl26SetMemoryObjectParameterivEPKNS_7ContextEPNS_12MemoryObjectEjPKi(%"class.gl::Context"* %0, %"class.gl::MemoryObject"* %7, i32 %2, i32* %3) #21
  ret void
}

declare i32 @_ZN2gl26SetMemoryObjectParameterivEPKNS_7ContextEPNS_12MemoryObjectEjPKi(%"class.gl::Context"*, %"class.gl::MemoryObject"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context26getMemoryObjectParameterivENS_14MemoryObjectIDEjPi(%"class.gl::Context"* nocapture readonly, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 18
  %6 = load %"class.gl::MemoryObjectManager"*, %"class.gl::MemoryObjectManager"** %5, align 8
  %7 = tail call %"class.gl::MemoryObject"* @_ZNK2gl19MemoryObjectManager15getMemoryObjectENS_14MemoryObjectIDE(%"class.gl::MemoryObjectManager"* %6, i32 %1) #21
  tail call void @_ZN2gl28QueryMemoryObjectParameterivEPKNS_12MemoryObjectEjPi(%"class.gl::MemoryObject"* %7, i32 %2, i32* %3) #21
  ret void
}

declare void @_ZN2gl28QueryMemoryObjectParameterivEPKNS_12MemoryObjectEjPi(%"class.gl::MemoryObject"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15texStorageMem2DENS_11TextureTypeEijiiNS_14MemoryObjectIDEm(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i64) local_unnamed_addr #1 align 2 {
  %9 = alloca %"struct.gl::Extents", align 4
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 18
  %11 = load %"class.gl::MemoryObjectManager"*, %"class.gl::MemoryObjectManager"** %10, align 8
  %12 = tail call %"class.gl::MemoryObject"* @_ZNK2gl19MemoryObjectManager15getMemoryObjectENS_14MemoryObjectIDE(%"class.gl::MemoryObjectManager"* %11, i32 %6) #21
  %13 = bitcast %"struct.gl::Extents"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %13) #21
  %14 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %9, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %9, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %9, i64 0, i32 2
  store i32 %4, i32* %14, align 4
  store i32 %5, i32* %15, align 4
  store i32 1, i32* %16, align 4
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %18 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %17, i8 zeroext %1) #21
  %19 = call i32 @_ZN2gl7Texture24setStorageExternalMemoryEPNS_7ContextENS_11TextureTypeEijRKNS_7ExtentsEPNS_12MemoryObjectEmjj(%"class.gl::Texture"* %18, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, %"struct.gl::Extents"* nonnull dereferenceable(12) %9, %"class.gl::MemoryObject"* %12, i64 %7, i32 0, i32 -1) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %13) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20texStorageMemFlags2DENS_11TextureTypeEijiiNS_14MemoryObjectIDEmjj(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32, i32, i64, i32, i32) local_unnamed_addr #1 align 2 {
  %11 = alloca %"struct.gl::Extents", align 4
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 18
  %13 = load %"class.gl::MemoryObjectManager"*, %"class.gl::MemoryObjectManager"** %12, align 8
  %14 = tail call %"class.gl::MemoryObject"* @_ZNK2gl19MemoryObjectManager15getMemoryObjectENS_14MemoryObjectIDE(%"class.gl::MemoryObjectManager"* %13, i32 %6) #21
  %15 = bitcast %"struct.gl::Extents"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %15) #21
  %16 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %11, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %11, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %11, i64 0, i32 2
  store i32 %4, i32* %16, align 4
  store i32 %5, i32* %17, align 4
  store i32 1, i32* %18, align 4
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %20 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %19, i8 zeroext %1) #21
  %21 = call i32 @_ZN2gl7Texture24setStorageExternalMemoryEPNS_7ContextENS_11TextureTypeEijRKNS_7ExtentsEPNS_12MemoryObjectEmjj(%"class.gl::Texture"* %20, %"class.gl::Context"* %0, i8 zeroext %1, i32 %2, i32 %3, %"struct.gl::Extents"* nonnull dereferenceable(12) %11, %"class.gl::MemoryObject"* %14, i64 %7, i32 %8, i32 %9) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %15) #21
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context26texStorageMem2DMultisampleENS_11TextureTypeEijiihNS_14MemoryObjectIDEm(%"class.gl::Context"* nocapture, i8 zeroext, i32, i32, i32, i32, i8 zeroext, i32, i64) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context15texStorageMem3DENS_11TextureTypeEijiiiNS_14MemoryObjectIDEm(%"class.gl::Context"* nocapture, i8 zeroext, i32, i32, i32, i32, i32, i32, i64) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context26texStorageMem3DMultisampleENS_11TextureTypeEijiiihNS_14MemoryObjectIDEm(%"class.gl::Context"* nocapture, i8 zeroext, i32, i32, i32, i32, i32, i8 zeroext, i32, i64) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context16bufferStorageMemENS_11TextureTypeElNS_14MemoryObjectIDEm(%"class.gl::Context"* nocapture, i8 zeroext, i64, i32, i64) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14importMemoryFdENS_14MemoryObjectIDEmNS_10HandleTypeEi(%"class.gl::Context"*, i32, i64, i8 zeroext, i32) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 18
  %7 = load %"class.gl::MemoryObjectManager"*, %"class.gl::MemoryObjectManager"** %6, align 8
  %8 = tail call %"class.gl::MemoryObject"* @_ZNK2gl19MemoryObjectManager15getMemoryObjectENS_14MemoryObjectIDE(%"class.gl::MemoryObjectManager"* %7, i32 %1) #21
  %9 = tail call i32 @_ZN2gl12MemoryObject8importFdEPNS_7ContextEmNS_10HandleTypeEi(%"class.gl::MemoryObject"* %8, %"class.gl::Context"* %0, i64 %2, i8 zeroext %3, i32 %4) #21
  ret void
}

declare i32 @_ZN2gl12MemoryObject8importFdEPNS_7ContextEmNS_10HandleTypeEi(%"class.gl::MemoryObject"*, %"class.gl::Context"*, i64, i8 zeroext, i32) local_unnamed_addr #3

declare i32 @_ZN2gl7Texture24setStorageExternalMemoryEPNS_7ContextENS_11TextureTypeEijRKNS_7ExtentsEPNS_12MemoryObjectEmjj(%"class.gl::Texture"*, %"class.gl::Context"*, i8 zeroext, i32, i32, %"struct.gl::Extents"* dereferenceable(12), %"class.gl::MemoryObject"*, i64, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context31texStorageMemFlags2DMultisampleENS_11TextureTypeEijiihNS_14MemoryObjectIDEmjj(%"class.gl::Context"* nocapture, i8 zeroext, i32, i32, i32, i32, i8 zeroext, i32, i64, i32, i32) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context20texStorageMemFlags3DENS_11TextureTypeEijiiiNS_14MemoryObjectIDEmjj(%"class.gl::Context"* nocapture, i8 zeroext, i32, i32, i32, i32, i32, i32, i64, i32, i32) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context31texStorageMemFlags3DMultisampleENS_11TextureTypeEijiiihNS_14MemoryObjectIDEmjj(%"class.gl::Context"* nocapture, i8 zeroext, i32, i32, i32, i32, i32, i8 zeroext, i32, i64, i32, i32) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context24importMemoryZirconHandleENS_14MemoryObjectIDEmNS_10HandleTypeEj(%"class.gl::Context"*, i32, i64, i8 zeroext, i32) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 18
  %7 = load %"class.gl::MemoryObjectManager"*, %"class.gl::MemoryObjectManager"** %6, align 8
  %8 = tail call %"class.gl::MemoryObject"* @_ZNK2gl19MemoryObjectManager15getMemoryObjectENS_14MemoryObjectIDE(%"class.gl::MemoryObjectManager"* %7, i32 %1) #21
  %9 = tail call i32 @_ZN2gl12MemoryObject18importZirconHandleEPNS_7ContextEmNS_10HandleTypeEj(%"class.gl::MemoryObject"* %8, %"class.gl::Context"* %0, i64 %2, i8 zeroext %3, i32 %4) #21
  ret void
}

declare i32 @_ZN2gl12MemoryObject18importZirconHandleEPNS_7ContextEmNS_10HandleTypeEj(%"class.gl::MemoryObject"*, %"class.gl::Context"*, i64, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13genSemaphoresEiPNS_11SemaphoreIDE(%"class.gl::Context"* nocapture readonly, i32, %"struct.gl::SemaphoreID"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 19
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = zext i32 %1 to i64
  br label %10

9:                                                ; preds = %10, %3
  ret void

10:                                               ; preds = %10, %5
  %11 = phi i64 [ 0, %5 ], [ %17, %10 ]
  %12 = load %"class.gl::SemaphoreManager"*, %"class.gl::SemaphoreManager"** %6, align 8
  %13 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %7, align 8
  %14 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %13, i64 0, i32 0
  %15 = tail call i32 @_ZN2gl16SemaphoreManager15createSemaphoreEPN2rx13GLImplFactoryE(%"class.gl::SemaphoreManager"* %12, %"class.rx::GLImplFactory"* %14) #21
  %16 = getelementptr inbounds %"struct.gl::SemaphoreID", %"struct.gl::SemaphoreID"* %2, i64 %11, i32 0
  store i32 %15, i32* %16, align 4
  %17 = add nuw nsw i64 %11, 1
  %18 = icmp eq i64 %17, %8
  br i1 %18, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16deleteSemaphoresEiPKNS_11SemaphoreIDE(%"class.gl::Context"*, i32, %"struct.gl::SemaphoreID"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 19
  %7 = zext i32 %1 to i64
  br label %9

8:                                                ; preds = %9, %3
  ret void

9:                                                ; preds = %9, %5
  %10 = phi i64 [ 0, %5 ], [ %14, %9 ]
  %11 = getelementptr inbounds %"struct.gl::SemaphoreID", %"struct.gl::SemaphoreID"* %2, i64 %10, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = load %"class.gl::SemaphoreManager"*, %"class.gl::SemaphoreManager"** %6, align 8
  tail call void @_ZN2gl16SemaphoreManager15deleteSemaphoreEPKNS_7ContextENS_11SemaphoreIDE(%"class.gl::SemaphoreManager"* %13, %"class.gl::Context"* %0, i32 %12) #21
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, %7
  br i1 %15, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl7Context11isSemaphoreENS_11SemaphoreIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 19
  %6 = load %"class.gl::SemaphoreManager"*, %"class.gl::SemaphoreManager"** %5, align 8
  %7 = tail call %"class.gl::Semaphore"* @_ZNK2gl16SemaphoreManager12getSemaphoreENS_11SemaphoreIDE(%"class.gl::SemaphoreManager"* %6, i32 %1) #21
  %8 = icmp ne %"class.gl::Semaphore"* %7, null
  %9 = zext i1 %8 to i8
  br label %10

10:                                               ; preds = %2, %4
  %11 = phi i8 [ %9, %4 ], [ 0, %2 ]
  ret i8 %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context23semaphoreParameterui64vENS_11SemaphoreIDEjPKm(%"class.gl::Context"* nocapture, i32, i32, i64* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context26getSemaphoreParameterui64vENS_11SemaphoreIDEjPm(%"class.gl::Context"* nocapture, i32, i32, i64* nocapture) local_unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13waitSemaphoreENS_11SemaphoreIDEjPKNS_8BufferIDEjPKNS_9TextureIDEPKj(%"class.gl::Context"*, i32, i32, %"struct.gl::BufferID"* nocapture readonly, i32, %"struct.gl::TextureID"* nocapture readonly, i32* nocapture readonly) local_unnamed_addr #5 align 2 {
  %8 = alloca %"class.angle::FastVector.948", align 8
  %9 = alloca %"class.angle::FastVector.950", align 8
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 19
  %11 = load %"class.gl::SemaphoreManager"*, %"class.gl::SemaphoreManager"** %10, align 8
  %12 = tail call %"class.gl::Semaphore"* @_ZNK2gl16SemaphoreManager12getSemaphoreENS_11SemaphoreIDE(%"class.gl::SemaphoreManager"* %11, i32 %1) #21
  %13 = bitcast %"class.angle::FastVector.948"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %13) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 128, i1 false)
  %14 = zext i32 %2 to i64
  %15 = getelementptr inbounds %"class.angle::FastVector.948", %"class.angle::FastVector.948"* %8, i64 0, i32 1
  %16 = getelementptr inbounds %"class.angle::FastVector.948", %"class.angle::FastVector.948"* %8, i64 0, i32 0, i32 0, i64 0
  store %"class.gl::Buffer"** %16, %"class.gl::Buffer"*** %15, align 8
  %17 = getelementptr inbounds %"class.angle::FastVector.948", %"class.angle::FastVector.948"* %8, i64 0, i32 2
  %18 = getelementptr inbounds %"class.angle::FastVector.948", %"class.angle::FastVector.948"* %8, i64 0, i32 3
  %19 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 0, i64 16>, <2 x i64>* %19, align 8
  %20 = icmp ugt i32 %2, 16
  br i1 %20, label %21, label %32

21:                                               ; preds = %7, %21
  %22 = phi i64 [ %24, %21 ], [ 16, %7 ]
  %23 = icmp ult i64 %22, %14
  %24 = shl i64 %22, 1
  br i1 %23, label %21, label %25

25:                                               ; preds = %21
  %26 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %22, i64 8) #21
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = extractvalue { i64, i1 } %26, 0
  %29 = select i1 %27, i64 -1, i64 %28
  %30 = call i8* @_Znam(i64 %29) #27
  %31 = bitcast %"class.gl::Buffer"*** %15 to i8**
  store i8* %30, i8** %31, align 8
  store i64 %22, i64* %18, align 8
  br label %32

32:                                               ; preds = %7, %25
  store i64 %14, i64* %17, align 8
  %33 = icmp eq i32 %2, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 10
  br label %61

36:                                               ; preds = %61, %32
  %37 = bitcast %"class.angle::FastVector.950"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %37) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 256, i1 false)
  %38 = zext i32 %4 to i64
  %39 = getelementptr inbounds %"class.angle::FastVector.950", %"class.angle::FastVector.950"* %9, i64 0, i32 1
  %40 = getelementptr inbounds %"class.angle::FastVector.950", %"class.angle::FastVector.950"* %9, i64 0, i32 0, i32 0, i64 0
  store %"struct.gl::TextureAndLayout"* %40, %"struct.gl::TextureAndLayout"** %39, align 8
  %41 = getelementptr inbounds %"class.angle::FastVector.950", %"class.angle::FastVector.950"* %9, i64 0, i32 2
  %42 = getelementptr inbounds %"class.angle::FastVector.950", %"class.angle::FastVector.950"* %9, i64 0, i32 3
  %43 = bitcast i64* %41 to <2 x i64>*
  store <2 x i64> <i64 0, i64 16>, <2 x i64>* %43, align 8
  %44 = icmp ugt i32 %4, 16
  br i1 %44, label %45, label %56

45:                                               ; preds = %36, %45
  %46 = phi i64 [ %48, %45 ], [ 16, %36 ]
  %47 = icmp ult i64 %46, %38
  %48 = shl i64 %46, 1
  br i1 %47, label %45, label %49

49:                                               ; preds = %45
  %50 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 16) #21
  %51 = extractvalue { i64, i1 } %50, 1
  %52 = extractvalue { i64, i1 } %50, 0
  %53 = select i1 %51, i64 -1, i64 %52
  %54 = call i8* @_Znam(i64 %53) #27
  %55 = bitcast %"struct.gl::TextureAndLayout"** %39 to i8**
  store i8* %54, i8** %55, align 8
  store i64 %46, i64* %42, align 8
  br label %56

56:                                               ; preds = %36, %49
  store i64 %38, i64* %41, align 8
  %57 = icmp eq i32 %4, 0
  br i1 %57, label %71, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %60 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %87

61:                                               ; preds = %61, %34
  %62 = phi i64 [ 0, %34 ], [ %69, %61 ]
  %63 = getelementptr inbounds %"struct.gl::BufferID", %"struct.gl::BufferID"* %3, i64 %62, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = load %"class.gl::BufferManager"*, %"class.gl::BufferManager"** %35, align 8
  %66 = call %"class.gl::Buffer"* @_ZNK2gl13BufferManager9getBufferENS_8BufferIDE(%"class.gl::BufferManager"* %65, i32 %64) #21
  %67 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %15, align 8
  %68 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %67, i64 %62
  store %"class.gl::Buffer"* %66, %"class.gl::Buffer"** %68, align 8
  %69 = add nuw nsw i64 %62, 1
  %70 = icmp eq i64 %69, %14
  br i1 %70, label %36, label %61

71:                                               ; preds = %165, %56
  %72 = call i32 @_ZN2gl9Semaphore4waitEPNS_7ContextERKN5angle10FastVectorIPNS_6BufferELm16ENSt3__15arrayIS6_Lm16EEEEERKNS4_INS_16TextureAndLayoutELm16ENS8_ISD_Lm16EEEEE(%"class.gl::Semaphore"* %12, %"class.gl::Context"* %0, %"class.angle::FastVector.948"* nonnull dereferenceable(152) %8, %"class.angle::FastVector.950"* nonnull dereferenceable(280) %9) #21
  store i64 0, i64* %41, align 8
  %73 = load %"struct.gl::TextureAndLayout"*, %"struct.gl::TextureAndLayout"** %39, align 8
  %74 = icmp eq %"struct.gl::TextureAndLayout"* %73, %40
  %75 = icmp eq %"struct.gl::TextureAndLayout"* %73, null
  %76 = or i1 %74, %75
  br i1 %76, label %79, label %77

77:                                               ; preds = %71
  %78 = bitcast %"struct.gl::TextureAndLayout"* %73 to i8*
  call void @_ZdaPv(i8* %78) #27
  br label %79

79:                                               ; preds = %71, %77
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %37) #21
  store i64 0, i64* %17, align 8
  %80 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %15, align 8
  %81 = icmp eq %"class.gl::Buffer"** %80, %16
  %82 = icmp eq %"class.gl::Buffer"** %80, null
  %83 = or i1 %81, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %79
  %85 = bitcast %"class.gl::Buffer"** %80 to i8*
  call void @_ZdaPv(i8* %85) #27
  br label %86

86:                                               ; preds = %79, %84
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %13) #21
  ret void

87:                                               ; preds = %165, %58
  %88 = phi i64 [ 0, %58 ], [ %173, %165 ]
  %89 = getelementptr inbounds %"struct.gl::TextureID", %"struct.gl::TextureID"* %5, i64 %88, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %59, align 8
  %92 = zext i32 %90 to i64
  %93 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %91, i64 0, i32 0, i32 1, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = icmp ugt i64 %94, %92
  br i1 %95, label %96, label %103

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %91, i64 0, i32 0, i32 1, i32 1
  %98 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %97, align 8
  %99 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %98, i64 %92
  %100 = load %"class.gl::Texture"*, %"class.gl::Texture"** %99, align 8
  %101 = icmp eq %"class.gl::Texture"* %100, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %102 = select i1 %101, %"class.gl::Texture"* null, %"class.gl::Texture"* %100
  br label %165

103:                                              ; preds = %87
  %104 = add i64 %60, %92
  %105 = zext i64 %104 to i128
  %106 = mul nuw i128 %105, 11376068507788127593
  %107 = lshr i128 %106, 64
  %108 = xor i128 %107, %106
  %109 = trunc i128 %108 to i64
  %110 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %91, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %91, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %113 = load i64, i64* %112, align 8
  %114 = lshr i64 %109, 7
  %115 = ptrtoint i8* %111 to i64
  %116 = lshr i64 %115, 12
  %117 = xor i64 %114, %116
  %118 = trunc i128 %108 to i8
  %119 = and i8 %118, 127
  %120 = insertelement <16 x i8> undef, i8 %119, i32 0
  %121 = shufflevector <16 x i8> %120, <16 x i8> undef, <16 x i32> zeroinitializer
  %122 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %91, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %123

123:                                              ; preds = %153, %103
  %124 = phi i64 [ %117, %103 ], [ %155, %153 ]
  %125 = phi i64 [ 0, %103 ], [ %154, %153 ]
  %126 = and i64 %124, %113
  %127 = getelementptr inbounds i8, i8* %111, i64 %126
  %128 = bitcast i8* %127 to <16 x i8>*
  %129 = load <16 x i8>, <16 x i8>* %128, align 1
  %130 = icmp eq <16 x i8> %121, %129
  %131 = bitcast <16 x i1> %130 to i16
  %132 = icmp eq i16 %131, 0
  br i1 %132, label %149, label %133

133:                                              ; preds = %123
  %134 = zext i16 %131 to i32
  %135 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %122, align 8
  br label %136

136:                                              ; preds = %145, %133
  %137 = phi i32 [ %134, %133 ], [ %147, %145 ]
  %138 = call i32 @llvm.cttz.i32(i32 %137, i1 false) #21, !range !8
  %139 = zext i32 %138 to i64
  %140 = add i64 %126, %139
  %141 = and i64 %140, %113
  %142 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %135, i64 %141, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, %90
  br i1 %144, label %156, label %145, !prof !9

145:                                              ; preds = %136
  %146 = add i32 %137, -1
  %147 = and i32 %146, %137
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %136

149:                                              ; preds = %145, %123
  %150 = icmp eq <16 x i8> %129, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %151 = bitcast <16 x i1> %150 to i16
  %152 = icmp eq i16 %151, 0
  br i1 %152, label %153, label %165, !prof !10

153:                                              ; preds = %149
  %154 = add i64 %125, 16
  %155 = add i64 %154, %126
  br label %123

156:                                              ; preds = %136
  %157 = getelementptr inbounds i8, i8* %111, i64 %141
  %158 = icmp ne i8* %157, null
  call void @llvm.assume(i1 %158) #21
  %159 = load i8, i8* %157, align 1
  %160 = icmp sgt i8 %159, -1
  br i1 %160, label %162, label %161, !prof !9

161:                                              ; preds = %156
  call void @llvm.trap() #21
  unreachable

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %135, i64 %141, i32 0, i32 1
  %164 = load %"class.gl::Texture"*, %"class.gl::Texture"** %163, align 8
  br label %165

165:                                              ; preds = %149, %96, %162
  %166 = phi %"class.gl::Texture"* [ %102, %96 ], [ %164, %162 ], [ null, %149 ]
  %167 = load %"struct.gl::TextureAndLayout"*, %"struct.gl::TextureAndLayout"** %39, align 8
  %168 = getelementptr inbounds %"struct.gl::TextureAndLayout", %"struct.gl::TextureAndLayout"* %167, i64 %88, i32 0
  store %"class.gl::Texture"* %166, %"class.gl::Texture"** %168, align 8
  %169 = getelementptr inbounds i32, i32* %6, i64 %88
  %170 = load i32, i32* %169, align 4
  %171 = load %"struct.gl::TextureAndLayout"*, %"struct.gl::TextureAndLayout"** %39, align 8
  %172 = getelementptr inbounds %"struct.gl::TextureAndLayout", %"struct.gl::TextureAndLayout"* %171, i64 %88, i32 1
  store i32 %170, i32* %172, align 8
  %173 = add nuw nsw i64 %88, 1
  %174 = icmp eq i64 %173, %38
  br i1 %174, label %71, label %87
}

declare i32 @_ZN2gl9Semaphore4waitEPNS_7ContextERKN5angle10FastVectorIPNS_6BufferELm16ENSt3__15arrayIS6_Lm16EEEEERKNS4_INS_16TextureAndLayoutELm16ENS8_ISD_Lm16EEEEE(%"class.gl::Semaphore"*, %"class.gl::Context"*, %"class.angle::FastVector.948"* dereferenceable(152), %"class.angle::FastVector.950"* dereferenceable(280)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15signalSemaphoreENS_11SemaphoreIDEjPKNS_8BufferIDEjPKNS_9TextureIDEPKj(%"class.gl::Context"*, i32, i32, %"struct.gl::BufferID"* nocapture readonly, i32, %"struct.gl::TextureID"* nocapture readonly, i32* nocapture readonly) local_unnamed_addr #5 align 2 {
  %8 = alloca %"class.angle::FastVector.948", align 8
  %9 = alloca %"class.angle::FastVector.950", align 8
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 19
  %11 = load %"class.gl::SemaphoreManager"*, %"class.gl::SemaphoreManager"** %10, align 8
  %12 = tail call %"class.gl::Semaphore"* @_ZNK2gl16SemaphoreManager12getSemaphoreENS_11SemaphoreIDE(%"class.gl::SemaphoreManager"* %11, i32 %1) #21
  %13 = bitcast %"class.angle::FastVector.948"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %13) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 128, i1 false)
  %14 = zext i32 %2 to i64
  %15 = getelementptr inbounds %"class.angle::FastVector.948", %"class.angle::FastVector.948"* %8, i64 0, i32 1
  %16 = getelementptr inbounds %"class.angle::FastVector.948", %"class.angle::FastVector.948"* %8, i64 0, i32 0, i32 0, i64 0
  store %"class.gl::Buffer"** %16, %"class.gl::Buffer"*** %15, align 8
  %17 = getelementptr inbounds %"class.angle::FastVector.948", %"class.angle::FastVector.948"* %8, i64 0, i32 2
  %18 = getelementptr inbounds %"class.angle::FastVector.948", %"class.angle::FastVector.948"* %8, i64 0, i32 3
  %19 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 0, i64 16>, <2 x i64>* %19, align 8
  %20 = icmp ugt i32 %2, 16
  br i1 %20, label %21, label %32

21:                                               ; preds = %7, %21
  %22 = phi i64 [ %24, %21 ], [ 16, %7 ]
  %23 = icmp ult i64 %22, %14
  %24 = shl i64 %22, 1
  br i1 %23, label %21, label %25

25:                                               ; preds = %21
  %26 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %22, i64 8) #21
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = extractvalue { i64, i1 } %26, 0
  %29 = select i1 %27, i64 -1, i64 %28
  %30 = call i8* @_Znam(i64 %29) #27
  %31 = bitcast %"class.gl::Buffer"*** %15 to i8**
  store i8* %30, i8** %31, align 8
  store i64 %22, i64* %18, align 8
  br label %32

32:                                               ; preds = %7, %25
  store i64 %14, i64* %17, align 8
  %33 = icmp eq i32 %2, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 10
  br label %61

36:                                               ; preds = %61, %32
  %37 = bitcast %"class.angle::FastVector.950"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %37) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 256, i1 false)
  %38 = zext i32 %4 to i64
  %39 = getelementptr inbounds %"class.angle::FastVector.950", %"class.angle::FastVector.950"* %9, i64 0, i32 1
  %40 = getelementptr inbounds %"class.angle::FastVector.950", %"class.angle::FastVector.950"* %9, i64 0, i32 0, i32 0, i64 0
  store %"struct.gl::TextureAndLayout"* %40, %"struct.gl::TextureAndLayout"** %39, align 8
  %41 = getelementptr inbounds %"class.angle::FastVector.950", %"class.angle::FastVector.950"* %9, i64 0, i32 2
  %42 = getelementptr inbounds %"class.angle::FastVector.950", %"class.angle::FastVector.950"* %9, i64 0, i32 3
  %43 = bitcast i64* %41 to <2 x i64>*
  store <2 x i64> <i64 0, i64 16>, <2 x i64>* %43, align 8
  %44 = icmp ugt i32 %4, 16
  br i1 %44, label %45, label %56

45:                                               ; preds = %36, %45
  %46 = phi i64 [ %48, %45 ], [ 16, %36 ]
  %47 = icmp ult i64 %46, %38
  %48 = shl i64 %46, 1
  br i1 %47, label %45, label %49

49:                                               ; preds = %45
  %50 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 16) #21
  %51 = extractvalue { i64, i1 } %50, 1
  %52 = extractvalue { i64, i1 } %50, 0
  %53 = select i1 %51, i64 -1, i64 %52
  %54 = call i8* @_Znam(i64 %53) #27
  %55 = bitcast %"struct.gl::TextureAndLayout"** %39 to i8**
  store i8* %54, i8** %55, align 8
  store i64 %46, i64* %42, align 8
  br label %56

56:                                               ; preds = %36, %49
  store i64 %38, i64* %41, align 8
  %57 = icmp eq i32 %4, 0
  br i1 %57, label %71, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 12
  %60 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %87

61:                                               ; preds = %61, %34
  %62 = phi i64 [ 0, %34 ], [ %69, %61 ]
  %63 = getelementptr inbounds %"struct.gl::BufferID", %"struct.gl::BufferID"* %3, i64 %62, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = load %"class.gl::BufferManager"*, %"class.gl::BufferManager"** %35, align 8
  %66 = call %"class.gl::Buffer"* @_ZNK2gl13BufferManager9getBufferENS_8BufferIDE(%"class.gl::BufferManager"* %65, i32 %64) #21
  %67 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %15, align 8
  %68 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %67, i64 %62
  store %"class.gl::Buffer"* %66, %"class.gl::Buffer"** %68, align 8
  %69 = add nuw nsw i64 %62, 1
  %70 = icmp eq i64 %69, %14
  br i1 %70, label %36, label %61

71:                                               ; preds = %165, %56
  %72 = call i32 @_ZN2gl9Semaphore6signalEPNS_7ContextERKN5angle10FastVectorIPNS_6BufferELm16ENSt3__15arrayIS6_Lm16EEEEERKNS4_INS_16TextureAndLayoutELm16ENS8_ISD_Lm16EEEEE(%"class.gl::Semaphore"* %12, %"class.gl::Context"* %0, %"class.angle::FastVector.948"* nonnull dereferenceable(152) %8, %"class.angle::FastVector.950"* nonnull dereferenceable(280) %9) #21
  store i64 0, i64* %41, align 8
  %73 = load %"struct.gl::TextureAndLayout"*, %"struct.gl::TextureAndLayout"** %39, align 8
  %74 = icmp eq %"struct.gl::TextureAndLayout"* %73, %40
  %75 = icmp eq %"struct.gl::TextureAndLayout"* %73, null
  %76 = or i1 %74, %75
  br i1 %76, label %79, label %77

77:                                               ; preds = %71
  %78 = bitcast %"struct.gl::TextureAndLayout"* %73 to i8*
  call void @_ZdaPv(i8* %78) #27
  br label %79

79:                                               ; preds = %71, %77
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %37) #21
  store i64 0, i64* %17, align 8
  %80 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %15, align 8
  %81 = icmp eq %"class.gl::Buffer"** %80, %16
  %82 = icmp eq %"class.gl::Buffer"** %80, null
  %83 = or i1 %81, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %79
  %85 = bitcast %"class.gl::Buffer"** %80 to i8*
  call void @_ZdaPv(i8* %85) #27
  br label %86

86:                                               ; preds = %79, %84
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %13) #21
  ret void

87:                                               ; preds = %165, %58
  %88 = phi i64 [ 0, %58 ], [ %173, %165 ]
  %89 = getelementptr inbounds %"struct.gl::TextureID", %"struct.gl::TextureID"* %5, i64 %88, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = load %"class.gl::TextureManager"*, %"class.gl::TextureManager"** %59, align 8
  %92 = zext i32 %90 to i64
  %93 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %91, i64 0, i32 0, i32 1, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = icmp ugt i64 %94, %92
  br i1 %95, label %96, label %103

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %91, i64 0, i32 0, i32 1, i32 1
  %98 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %97, align 8
  %99 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %98, i64 %92
  %100 = load %"class.gl::Texture"*, %"class.gl::Texture"** %99, align 8
  %101 = icmp eq %"class.gl::Texture"* %100, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %102 = select i1 %101, %"class.gl::Texture"* null, %"class.gl::Texture"* %100
  br label %165

103:                                              ; preds = %87
  %104 = add i64 %60, %92
  %105 = zext i64 %104 to i128
  %106 = mul nuw i128 %105, 11376068507788127593
  %107 = lshr i128 %106, 64
  %108 = xor i128 %107, %106
  %109 = trunc i128 %108 to i64
  %110 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %91, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %91, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %113 = load i64, i64* %112, align 8
  %114 = lshr i64 %109, 7
  %115 = ptrtoint i8* %111 to i64
  %116 = lshr i64 %115, 12
  %117 = xor i64 %114, %116
  %118 = trunc i128 %108 to i8
  %119 = and i8 %118, 127
  %120 = insertelement <16 x i8> undef, i8 %119, i32 0
  %121 = shufflevector <16 x i8> %120, <16 x i8> undef, <16 x i32> zeroinitializer
  %122 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %91, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %123

123:                                              ; preds = %153, %103
  %124 = phi i64 [ %117, %103 ], [ %155, %153 ]
  %125 = phi i64 [ 0, %103 ], [ %154, %153 ]
  %126 = and i64 %124, %113
  %127 = getelementptr inbounds i8, i8* %111, i64 %126
  %128 = bitcast i8* %127 to <16 x i8>*
  %129 = load <16 x i8>, <16 x i8>* %128, align 1
  %130 = icmp eq <16 x i8> %121, %129
  %131 = bitcast <16 x i1> %130 to i16
  %132 = icmp eq i16 %131, 0
  br i1 %132, label %149, label %133

133:                                              ; preds = %123
  %134 = zext i16 %131 to i32
  %135 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %122, align 8
  br label %136

136:                                              ; preds = %145, %133
  %137 = phi i32 [ %134, %133 ], [ %147, %145 ]
  %138 = call i32 @llvm.cttz.i32(i32 %137, i1 false) #21, !range !8
  %139 = zext i32 %138 to i64
  %140 = add i64 %126, %139
  %141 = and i64 %140, %113
  %142 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %135, i64 %141, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, %90
  br i1 %144, label %156, label %145, !prof !9

145:                                              ; preds = %136
  %146 = add i32 %137, -1
  %147 = and i32 %146, %137
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %136

149:                                              ; preds = %145, %123
  %150 = icmp eq <16 x i8> %129, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %151 = bitcast <16 x i1> %150 to i16
  %152 = icmp eq i16 %151, 0
  br i1 %152, label %153, label %165, !prof !10

153:                                              ; preds = %149
  %154 = add i64 %125, 16
  %155 = add i64 %154, %126
  br label %123

156:                                              ; preds = %136
  %157 = getelementptr inbounds i8, i8* %111, i64 %141
  %158 = icmp ne i8* %157, null
  call void @llvm.assume(i1 %158) #21
  %159 = load i8, i8* %157, align 1
  %160 = icmp sgt i8 %159, -1
  br i1 %160, label %162, label %161, !prof !9

161:                                              ; preds = %156
  call void @llvm.trap() #21
  unreachable

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %135, i64 %141, i32 0, i32 1
  %164 = load %"class.gl::Texture"*, %"class.gl::Texture"** %163, align 8
  br label %165

165:                                              ; preds = %149, %96, %162
  %166 = phi %"class.gl::Texture"* [ %102, %96 ], [ %164, %162 ], [ null, %149 ]
  %167 = load %"struct.gl::TextureAndLayout"*, %"struct.gl::TextureAndLayout"** %39, align 8
  %168 = getelementptr inbounds %"struct.gl::TextureAndLayout", %"struct.gl::TextureAndLayout"* %167, i64 %88, i32 0
  store %"class.gl::Texture"* %166, %"class.gl::Texture"** %168, align 8
  %169 = getelementptr inbounds i32, i32* %6, i64 %88
  %170 = load i32, i32* %169, align 4
  %171 = load %"struct.gl::TextureAndLayout"*, %"struct.gl::TextureAndLayout"** %39, align 8
  %172 = getelementptr inbounds %"struct.gl::TextureAndLayout", %"struct.gl::TextureAndLayout"* %171, i64 %88, i32 1
  store i32 %170, i32* %172, align 8
  %173 = add nuw nsw i64 %88, 1
  %174 = icmp eq i64 %173, %38
  br i1 %174, label %71, label %87
}

declare i32 @_ZN2gl9Semaphore6signalEPNS_7ContextERKN5angle10FastVectorIPNS_6BufferELm16ENSt3__15arrayIS6_Lm16EEEEERKNS4_INS_16TextureAndLayoutELm16ENS8_ISD_Lm16EEEEE(%"class.gl::Semaphore"*, %"class.gl::Context"*, %"class.angle::FastVector.948"* dereferenceable(152), %"class.angle::FastVector.950"* dereferenceable(280)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17importSemaphoreFdENS_11SemaphoreIDENS_10HandleTypeEi(%"class.gl::Context"*, i32, i8 zeroext, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 19
  %6 = load %"class.gl::SemaphoreManager"*, %"class.gl::SemaphoreManager"** %5, align 8
  %7 = tail call %"class.gl::Semaphore"* @_ZNK2gl16SemaphoreManager12getSemaphoreENS_11SemaphoreIDE(%"class.gl::SemaphoreManager"* %6, i32 %1) #21
  %8 = tail call i32 @_ZN2gl9Semaphore8importFdEPNS_7ContextENS_10HandleTypeEi(%"class.gl::Semaphore"* %7, %"class.gl::Context"* %0, i8 zeroext %2, i32 %3) #21
  ret void
}

declare i32 @_ZN2gl9Semaphore8importFdEPNS_7ContextENS_10HandleTypeEi(%"class.gl::Semaphore"*, %"class.gl::Context"*, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context27importSemaphoreZirconHandleENS_11SemaphoreIDENS_10HandleTypeEj(%"class.gl::Context"*, i32, i8 zeroext, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 19
  %6 = load %"class.gl::SemaphoreManager"*, %"class.gl::SemaphoreManager"** %5, align 8
  %7 = tail call %"class.gl::Semaphore"* @_ZNK2gl16SemaphoreManager12getSemaphoreENS_11SemaphoreIDE(%"class.gl::SemaphoreManager"* %6, i32 %1) #21
  %8 = tail call i32 @_ZN2gl9Semaphore18importZirconHandleEPNS_7ContextENS_10HandleTypeEj(%"class.gl::Semaphore"* %7, %"class.gl::Context"* %0, i8 zeroext %2, i32 %3) #21
  ret void
}

declare i32 @_ZN2gl9Semaphore18importZirconHandleEPNS_7ContextENS_10HandleTypeEj(%"class.gl::Semaphore"*, %"class.gl::Context"*, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23eGLImageTargetTexture2DENS_11TextureTypeEPv(%"class.gl::Context"*, i8 zeroext, i8*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %5 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %4, i8 zeroext %1) #21
  %6 = bitcast i8* %2 to %"class.egl::Image"*
  %7 = tail call i32 @_ZN2gl7Texture17setEGLImageTargetEPNS_7ContextENS_11TextureTypeEPN3egl5ImageE(%"class.gl::Texture"* %5, %"class.gl::Context"* %0, i8 zeroext %1, %"class.egl::Image"* %6) #21
  ret void
}

declare i32 @_ZN2gl7Texture17setEGLImageTargetEPNS_7ContextENS_11TextureTypeEPN3egl5ImageE(%"class.gl::Texture"*, %"class.gl::Context"*, i8 zeroext, %"class.egl::Image"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context33eGLImageTargetRenderbufferStorageEjPv(%"class.gl::Context"*, i32, i8*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 62, i32 0, i32 1
  %5 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %4, align 8
  %6 = bitcast i8* %2 to %"class.egl::Image"*
  %7 = tail call i32 @_ZN2gl12Renderbuffer24setStorageEGLImageTargetEPKNS_7ContextEPN3egl5ImageE(%"class.gl::Renderbuffer"* %5, %"class.gl::Context"* %0, %"class.egl::Image"* %6) #21
  ret void
}

declare i32 @_ZN2gl12Renderbuffer24setStorageEGLImageTargetEPKNS_7ContextEPN3egl5ImageE(%"class.gl::Renderbuffer"*, %"class.gl::Context"*, %"class.egl::Image"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context23framebufferFetchBarrierEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %2, align 8
  %4 = bitcast %"class.rx::ContextImpl"* %3 to void (%"class.rx::ContextImpl"*)***
  %5 = load void (%"class.rx::ContextImpl"*)**, void (%"class.rx::ContextImpl"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.rx::ContextImpl"*)*, void (%"class.rx::ContextImpl"*)** %5, i64 50
  %7 = load void (%"class.rx::ContextImpl"*)*, void (%"class.rx::ContextImpl"*)** %6, align 8
  tail call void %7(%"class.rx::ContextImpl"* %3) #21
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context12texStorage1DEjiji(%"class.gl::Context"* nocapture, i32, i32, i32, i32) local_unnamed_addr #12 align 2 {
  ret void
}

declare zeroext i1 @_ZN2gl21GetQueryParameterInfoERKNS_5StateEjPjS3_(%"class.gl::State"* dereferenceable(12296), i32, i32*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context23isRenderbufferGeneratedENS_14RenderbufferIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 13
  %4 = bitcast %"class.gl::RenderbufferManager"** %3 to %"class.gl::TypedResourceManager.279"**
  %5 = load %"class.gl::TypedResourceManager.279"*, %"class.gl::TypedResourceManager.279"** %4, align 8
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %81, label %7

7:                                                ; preds = %2
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %5, i64 0, i32 1, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %5, i64 0, i32 1, i32 1
  %14 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %14, i64 %8
  %16 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %15, align 8
  %17 = icmp ne %"class.gl::Renderbuffer"* %16, inttoptr (i64 -1 to %"class.gl::Renderbuffer"*)
  br label %81

18:                                               ; preds = %7
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %78, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %65, %72
  %79 = phi i8* [ %73, %72 ], [ null, %65 ]
  %80 = icmp ne i8* %79, null
  br label %81

81:                                               ; preds = %2, %12, %78
  %82 = phi i1 [ true, %2 ], [ %17, %12 ], [ %80, %78 ]
  ret i1 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context22isFramebufferGeneratedENS_13FramebufferIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 16
  %4 = bitcast %"class.gl::FramebufferManager"** %3 to %"class.gl::TypedResourceManager.314"**
  %5 = load %"class.gl::TypedResourceManager.314"*, %"class.gl::TypedResourceManager.314"** %4, align 8
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %81, label %7

7:                                                ; preds = %2
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %5, i64 0, i32 1, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %5, i64 0, i32 1, i32 1
  %14 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %14, i64 %8
  %16 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %15, align 8
  %17 = icmp ne %"class.gl::Framebuffer"* %16, inttoptr (i64 -1 to %"class.gl::Framebuffer"*)
  br label %81

18:                                               ; preds = %7
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %78, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %65, %72
  %79 = phi i8* [ %73, %72 ], [ null, %65 ]
  %80 = icmp ne i8* %79, null
  br label %81

81:                                               ; preds = %2, %12, %78
  %82 = phi i1 [ true, %2 ], [ %17, %12 ], [ %80, %78 ]
  ret i1 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context26isProgramPipelineGeneratedENS_17ProgramPipelineIDE(%"class.gl::Context"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 17
  %4 = bitcast %"class.gl::ProgramPipelineManager"** %3 to %"class.gl::TypedResourceManager.325"**
  %5 = load %"class.gl::TypedResourceManager.325"*, %"class.gl::TypedResourceManager.325"** %4, align 8
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %81, label %7

7:                                                ; preds = %2
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %5, i64 0, i32 1, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %5, i64 0, i32 1, i32 1
  %14 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %14, i64 %8
  %16 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %15, align 8
  %17 = icmp ne %"class.gl::ProgramPipeline"* %16, inttoptr (i64 -1 to %"class.gl::ProgramPipeline"*)
  br label %81

18:                                               ; preds = %7
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %78, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %65, %72
  %79 = phi i8* [ %73, %72 ], [ null, %65 ]
  %80 = icmp ne i8* %79, null
  br label %81

81:                                               ; preds = %2, %12, %78
  %82 = phi i1 [ true, %2 ], [ %17, %12 ], [ %80, %78 ]
  ret i1 %82
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context29usingDisplayTextureShareGroupEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 2, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context31usingDisplaySemaphoreShareGroupEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context24maxShaderCompilerThreadsEj(%"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 100
  %5 = load i32, i32* %4, align 4
  tail call void @_ZN2gl5State27setMaxShaderCompilerThreadsEj(%"class.gl::State"* %3, i32 %1) #21
  %6 = icmp ne i32 %5, 0
  %7 = icmp ne i32 %1, 0
  %8 = and i1 %7, %6
  %9 = or i32 %5, %1
  %10 = icmp eq i32 %9, 0
  %11 = or i1 %8, %10
  br i1 %11, label %34, label %12

12:                                               ; preds = %2
  %13 = tail call { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* } @_ZN5angle16WorkerThreadPool6CreateEb(i1 zeroext %7) #21
  %14 = extractvalue { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* } %13, 0
  %15 = ptrtoint %"class.angle::WorkerThreadPool"* %14 to i64
  %16 = extractvalue { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* } %13, 1
  %17 = ptrtoint %"class.std::__1::__shared_weak_count"* %16 to i64
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 74
  %19 = bitcast %"class.std::__1::shared_ptr.608"* %18 to i64*
  store i64 %15, i64* %19, align 8
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 74, i32 1
  %21 = bitcast %"class.std::__1::__shared_weak_count"** %20 to i64*
  %22 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %20, align 8
  store i64 %17, i64* %21, align 8
  %23 = icmp eq %"class.std::__1::__shared_weak_count"* %22, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %22, i64 0, i32 0, i32 1
  %26 = atomicrmw add i64* %25, i64 -1 acq_rel
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %22, i64 0, i32 0
  %30 = bitcast %"class.std::__1::__shared_weak_count"* %22 to void (%"class.std::__1::__shared_count"*)***
  %31 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %31, i64 2
  %33 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %32, align 8
  tail call void %33(%"class.std::__1::__shared_count"* %29) #21
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %22) #21
  br label %34

34:                                               ; preds = %12, %24, %28, %2
  %35 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 74, i32 0
  %36 = load %"class.angle::WorkerThreadPool"*, %"class.angle::WorkerThreadPool"** %35, align 8
  %37 = zext i32 %1 to i64
  %38 = bitcast %"class.angle::WorkerThreadPool"* %36 to void (%"class.angle::WorkerThreadPool"*, i64)***
  %39 = load void (%"class.angle::WorkerThreadPool"*, i64)**, void (%"class.angle::WorkerThreadPool"*, i64)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.angle::WorkerThreadPool"*, i64)*, void (%"class.angle::WorkerThreadPool"*, i64)** %39, i64 2
  %41 = load void (%"class.angle::WorkerThreadPool"*, i64)*, void (%"class.angle::WorkerThreadPool"*, i64)** %40, align 8
  tail call void %41(%"class.angle::WorkerThreadPool"* %36, i64 %37) #21
  %42 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %43 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %42, align 8
  %44 = bitcast %"class.rx::ContextImpl"* %43 to void (%"class.rx::ContextImpl"*, i32)***
  %45 = load void (%"class.rx::ContextImpl"*, i32)**, void (%"class.rx::ContextImpl"*, i32)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.rx::ContextImpl"*, i32)*, void (%"class.rx::ContextImpl"*, i32)** %45, i64 48
  %47 = load void (%"class.rx::ContextImpl"*, i32)*, void (%"class.rx::ContextImpl"*, i32)** %46, align 8
  tail call void %47(%"class.rx::ContextImpl"* %43, i32 %1) #21
  ret void
}

declare void @_ZN2gl5State27setMaxShaderCompilerThreadsEj(%"class.gl::State"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context7isGLES1Ev(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #20 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp ult i32 %3, 2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20onSubjectStateChangeEmN5angle14SubjectMessageE(%"class.gl::Context"*, i64, i32) unnamed_addr #1 align 2 {
  switch i64 %1, label %78 [
    i64 360, label %4
    i64 361, label %59
    i64 362, label %68
  ]

4:                                                ; preds = %3
  switch i32 %2, label %103 [
    i32 1, label %5
    i32 4, label %56
    i32 5, label %56
    i32 0, label %56
  ]

5:                                                ; preds = %4
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State14setObjectDirtyEj(%"class.gl::State"* %6, i32 32884) #21
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 47
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 69
  %12 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 5
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 6
  %15 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %15, align 8
  %16 = icmp eq %"class.gl::VertexArray"* %12, null
  br i1 %16, label %54, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %54, label %21

21:                                               ; preds = %17
  %22 = tail call i64 @llvm.cttz.i64(i64 %19, i1 true) #21, !range !73
  %23 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %12, i64 0, i32 5, i32 1, i32 0, i32 0
  %24 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %12, i64 0, i32 5, i32 3, i32 0, i32 0
  br label %25

25:                                               ; preds = %46, %21
  %26 = phi i64 [ 9223372036854775807, %21 ], [ %47, %46 ]
  %27 = phi i64 [ 9223372036854775807, %21 ], [ %48, %46 ]
  %28 = phi i64 [ %22, %21 ], [ %53, %46 ]
  %29 = phi i64 [ %19, %21 ], [ %51, %46 ]
  %30 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %23, align 8
  %31 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %30, i64 %28, i32 5
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %24, align 8
  %35 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %30, i64 %28, i32 6
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %34, i64 %33, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %25
  %41 = icmp slt i64 %36, %27
  %42 = select i1 %41, i64 %36, i64 %27
  store i64 %42, i64* %14, align 8
  br label %46

43:                                               ; preds = %25
  %44 = icmp slt i64 %36, %26
  %45 = select i1 %44, i64 %36, i64 %26
  store i64 %45, i64* %13, align 8
  br label %46

46:                                               ; preds = %43, %40
  %47 = phi i64 [ %45, %43 ], [ %26, %40 ]
  %48 = phi i64 [ %27, %43 ], [ %42, %40 ]
  %49 = shl i64 1, %28
  %50 = xor i64 %49, -1
  %51 = and i64 %29, %50
  %52 = icmp eq i64 %51, 0
  %53 = tail call i64 @llvm.cttz.i64(i64 %51, i1 true) #21, !range !73
  br i1 %52, label %54, label %25

54:                                               ; preds = %46, %5, %10, %17
  %55 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %55, align 8
  br label %103

56:                                               ; preds = %4, %4, %4
  %57 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  %58 = bitcast i64* %57 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %58, align 8
  br label %103

59:                                               ; preds = %3
  switch i32 %2, label %103 [
    i32 2, label %60
    i32 6, label %64
  ]

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = or i64 %62, 520
  store i64 %63, i64* %61, align 8
  br label %103

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = or i64 %66, 2
  store i64 %67, i64* %65, align 8
  br label %103

68:                                               ; preds = %3
  switch i32 %2, label %103 [
    i32 2, label %69
    i32 6, label %74
  ]

69:                                               ; preds = %68
  %70 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = or i64 %71, 1040
  store i64 %72, i64* %70, align 8
  %73 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %73, align 8
  br label %103

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = or i64 %76, 1
  store i64 %77, i64* %75, align 8
  br label %103

78:                                               ; preds = %3
  %79 = icmp ult i64 %1, 96
  br i1 %79, label %80, label %85

80:                                               ; preds = %78
  %81 = icmp ugt i32 %2, 1
  br i1 %81, label %82, label %103

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl5State26onActiveTextureStateChangeEPKNS_7ContextEm(%"class.gl::State"* %83, %"class.gl::Context"* %0, i64 %1) #21
  %84 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %84, align 8
  br label %103

85:                                               ; preds = %78
  %86 = icmp ult i64 %1, 192
  br i1 %86, label %87, label %95

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %89 = add nsw i64 %1, -96
  tail call void @_ZN2gl5State18onImageStateChangeEPKNS_7ContextEm(%"class.gl::State"* %88, %"class.gl::Context"* %0, i64 %89) #21
  %90 = icmp eq i32 %2, 1
  br i1 %90, label %91, label %103

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = or i64 %93, 1125899906842624
  store i64 %94, i64* %92, align 8
  br label %103

95:                                               ; preds = %85
  %96 = icmp ult i64 %1, 264
  %97 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  br i1 %96, label %98, label %101

98:                                               ; preds = %95
  %99 = add nsw i64 %1, -192
  tail call void @_ZN2gl5State26onUniformBufferStateChangeEm(%"class.gl::State"* %97, i64 %99) #21
  %100 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52, i32 7
  store i64 1, i64* %100, align 8
  br label %103

101:                                              ; preds = %95
  %102 = add i64 %1, -264
  tail call void @_ZN2gl5State15setSamplerDirtyEm(%"class.gl::State"* %97, i64 %102) #21
  tail call void @_ZN2gl5State26onActiveTextureStateChangeEPKNS_7ContextEm(%"class.gl::State"* %97, %"class.gl::Context"* %0, i64 %102) #21
  br label %103

103:                                              ; preds = %82, %80, %98, %101, %87, %91, %69, %74, %68, %60, %64, %59, %54, %56, %4
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache33onVertexArrayBufferContentsChangeEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #18 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 47
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %50, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %8 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 6
  %11 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %11, align 8
  %12 = icmp eq %"class.gl::VertexArray"* %8, null
  br i1 %12, label %50, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %50, label %17

17:                                               ; preds = %13
  %18 = tail call i64 @llvm.cttz.i64(i64 %15, i1 true) #21, !range !73
  %19 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %8, i64 0, i32 5, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %8, i64 0, i32 5, i32 3, i32 0, i32 0
  br label %21

21:                                               ; preds = %42, %17
  %22 = phi i64 [ 9223372036854775807, %17 ], [ %43, %42 ]
  %23 = phi i64 [ 9223372036854775807, %17 ], [ %44, %42 ]
  %24 = phi i64 [ %18, %17 ], [ %49, %42 ]
  %25 = phi i64 [ %15, %17 ], [ %47, %42 ]
  %26 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %19, align 8
  %27 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %26, i64 %24, i32 5
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %20, align 8
  %31 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %26, i64 %24, i32 6
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %30, i64 %29, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %21
  %37 = icmp slt i64 %32, %23
  %38 = select i1 %37, i64 %32, i64 %23
  store i64 %38, i64* %10, align 8
  br label %42

39:                                               ; preds = %21
  %40 = icmp slt i64 %32, %22
  %41 = select i1 %40, i64 %32, i64 %22
  store i64 %41, i64* %9, align 8
  br label %42

42:                                               ; preds = %39, %36
  %43 = phi i64 [ %41, %39 ], [ %22, %36 ]
  %44 = phi i64 [ %23, %39 ], [ %38, %36 ]
  %45 = shl i64 1, %24
  %46 = xor i64 %45, -1
  %47 = and i64 %25, %46
  %48 = icmp eq i64 %47, 0
  %49 = tail call i64 @llvm.cttz.i64(i64 %47, i1 true) #21, !range !73
  br i1 %48, label %50, label %21

50:                                               ; preds = %42, %2, %6, %13
  %51 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  store i64 1, i64* %51, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl10StateCache30onVertexArrayBufferStateChangeEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readnone) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  %4 = bitcast i64* %3 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %4, align 8
  ret void
}

declare void @_ZN2gl5State26onActiveTextureStateChangeEPKNS_7ContextEm(%"class.gl::State"*, %"class.gl::Context"*, i64) local_unnamed_addr #3

declare void @_ZN2gl5State18onImageStateChangeEPKNS_7ContextEm(%"class.gl::State"*, %"class.gl::Context"*, i64) local_unnamed_addr #3

declare void @_ZN2gl5State26onUniformBufferStateChangeEm(%"class.gl::State"*, i64) local_unnamed_addr #3

declare void @_ZN2gl5State15setSamplerDirtyEm(%"class.gl::State"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2gl7Context20onSubjectStateChangeEmN5angle14SubjectMessageE(%"class.gl::Context"*, i64, i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 -1, i32 78, i32 0, i32 0
  %5 = bitcast i8* %4 to %"class.gl::Context"*
  tail call void @_ZN2gl7Context20onSubjectStateChangeEmN5angle14SubjectMessageE(%"class.gl::Context"* %5, i64 %1, i32 %2)
  ret void
}

declare i32 @_ZN2gl5State25onProgramExecutableChangeEPKNS_7ContextEPNS_7ProgramE(%"class.gl::State"*, %"class.gl::Context"*, %"class.gl::Program"*) local_unnamed_addr #3

declare void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"*, i32) local_unnamed_addr #3

declare void @_ZN3egl7Surface11makeCurrentEPKN2gl7ContextE(%"class.egl::Error"* sret, %"class.egl::Surface"*, %"class.gl::Context"*) local_unnamed_addr #3

declare %"class.gl::Framebuffer"* @_ZN3egl7Surface24createDefaultFramebufferEPKN2gl7ContextEPS0_(%"class.egl::Surface"*, %"class.gl::Context"*, %"class.egl::Surface"*) local_unnamed_addr #3

declare void @_ZN2gl11FramebufferC1EPKNS_7ContextEPN2rx13GLImplFactoryEPN3egl7SurfaceE(%"class.gl::Framebuffer"*, %"class.gl::Context"*, %"class.rx::GLImplFactory"*, %"class.egl::Surface"*) unnamed_addr #3

declare void @_ZN2gl18FramebufferManager21setDefaultFramebufferEPNS_11FramebufferE(%"class.gl::FramebufferManager"*, %"class.gl::Framebuffer"*) local_unnamed_addr #3

declare void @_ZN2gl11Framebuffer9onDestroyEPKNS_7ContextE(%"class.gl::Framebuffer"*, %"class.gl::Context"*) local_unnamed_addr #3

declare void @_ZN3egl7Surface13unMakeCurrentEPKN2gl7ContextE(%"class.egl::Error"* sret, %"class.egl::Surface"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl7Context9onPreSwapEv(%"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 75, i32 0, i32 0, i32 0
  %3 = load %"class.angle::FrameCapture"*, %"class.angle::FrameCapture"** %2, align 8
  tail call void @_ZN5angle12FrameCapture10onEndFrameEPKN2gl7ContextE(%"class.angle::FrameCapture"* %3, %"class.gl::Context"* %0) #21
  ret void
}

declare void @_ZN5angle12FrameCapture10onEndFrameEPKN2gl7ContextE(%"class.angle::FrameCapture"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11getTexImageENS_13TextureTargetEijjPv(%"class.gl::Context"*, i8 zeroext, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %7 = tail call zeroext i8 @_ZN2gl19TextureTargetToTypeENS_13TextureTargetE(i8 zeroext %1) #21
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %9 = tail call %"class.gl::Texture"* @_ZNK2gl5State16getTargetTextureENS_11TextureTypeE(%"class.gl::State"* %8, i8 zeroext %7) #21
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 7, i32 0, i32 1
  %11 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 88
  %13 = tail call i32 @_ZN2gl7Texture11getTexImageEPKNS_7ContextERKNS_14PixelPackStateEPNS_6BufferENS_13TextureTargetEijjPv(%"class.gl::Texture"* %9, %"class.gl::Context"* %0, %"struct.gl::PixelPackState"* dereferenceable(28) %12, %"class.gl::Buffer"* %11, i8 zeroext %1, i32 %2, i32 %3, i32 %4, i8* %5) #21
  ret void
}

declare i32 @_ZN2gl7Texture11getTexImageEPKNS_7ContextERKNS_14PixelPackStateEPNS_6BufferENS_13TextureTargetEijjPv(%"class.gl::Texture"*, %"class.gl::Context"*, %"struct.gl::PixelPackState"* dereferenceable(28), %"class.gl::Buffer"*, i8 zeroext, i32, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context20getRenderbufferImageEjjjPv(%"class.gl::Context"*, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 62, i32 0, i32 1
  %7 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 79, i32 0, i32 0, i64 7, i32 0, i32 1
  %9 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 88
  %11 = tail call i32 @_ZNK2gl12Renderbuffer20getRenderbufferImageEPKNS_7ContextERKNS_14PixelPackStateEPNS_6BufferEjjPv(%"class.gl::Renderbuffer"* %7, %"class.gl::Context"* %0, %"struct.gl::PixelPackState"* dereferenceable(28) %10, %"class.gl::Buffer"* %9, i32 %2, i32 %3, i8* %4) #21
  ret void
}

declare i32 @_ZNK2gl12Renderbuffer20getRenderbufferImageEPKNS_7ContextERKNS_14PixelPackStateEPNS_6BufferEjjPv(%"class.gl::Renderbuffer"*, %"class.gl::Context"*, %"struct.gl::PixelPackState"* dereferenceable(28), %"class.gl::Buffer"*, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19releaseHighPowerGPUEv(%"class.egl::Error"* noalias sret, %"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %3, align 8
  %5 = bitcast %"class.rx::ContextImpl"* %4 to void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)***
  %6 = load void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)**, void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)*, void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)** %6, i64 65
  %8 = load void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)*, void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)** %7, align 8
  tail call void %8(%"class.egl::Error"* sret %0, %"class.rx::ContextImpl"* %4, %"class.gl::Context"* %1) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context21reacquireHighPowerGPUEv(%"class.egl::Error"* noalias sret, %"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %3, align 8
  %5 = bitcast %"class.rx::ContextImpl"* %4 to void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)***
  %6 = load void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)**, void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)*, void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)** %6, i64 66
  %8 = load void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)*, void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)** %7, align 8
  tail call void %8(%"class.egl::Error"* sret %0, %"class.rx::ContextImpl"* %4, %"class.gl::Context"* %1) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11onGPUSwitchEv(%"class.gl::Context"* nocapture) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl7Context18initRendererStringEv(%"class.gl::Context"* %0)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(40) %"class.std::__1::mutex"* @_ZNK2gl7Context20getProgramCacheMutexEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 45
  %3 = load %"class.egl::Display"*, %"class.egl::Display"** %2, align 8
  %4 = getelementptr inbounds %"class.egl::Display", %"class.egl::Display"* %3, i64 0, i32 34
  ret %"class.std::__1::mutex"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl7Context29supportsGeometryOrTesselationEv(%"class.gl::Context"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 3
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 3, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %17, label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 142
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 7, i32 188
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp ne i8 %15, 0
  br label %17

17:                                               ; preds = %9, %13, %5
  %18 = phi i1 [ true, %9 ], [ true, %5 ], [ %16, %13 ]
  ret i1 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl7Context13dirtyAllStateEv(%"class.gl::Context"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 104, i32 0
  store i64 -1, i64* %2, align 8
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 107, i32 0
  %4 = bitcast i64* %3 to <2 x i64>*
  store <2 x i64> <i64 4095, i64 65535>, <2 x i64>* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl8ErrorSetC2EPNS_7ContextE(%"class.gl::ErrorSet"*, %"class.gl::Context"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 0
  store %"class.gl::Context"* %1, %"class.gl::Context"** %3, align 8
  %4 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_node_base"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #21
  store %"class.std::__1::__tree_end_node"* %5, %"class.std::__1::__tree_end_node"** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl8ErrorSetD2Ev(%"class.gl::ErrorSet"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.gl::ErrorSet", %"class.gl::ErrorSet"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.1143"**
  %5 = load %"class.std::__1::__tree_node.1143"*, %"class.std::__1::__tree_node.1143"** %4, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.36"* %2, %"class.std::__1::__tree_node.1143"* %5) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCacheC2Ev(%"class.gl::StateCache"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  %4 = bitcast %"class.gl::StateCache"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 25, i1 false)
  %5 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  %6 = bitcast i64* %3 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %6, align 8
  %7 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 9
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 11, i32 0
  %9 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 18
  store i8 0, i8* %9, align 8
  %10 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl10StateCacheD2Ev(%"class.gl::StateCache"* nocapture) unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache20updateValidDrawModesEPNS_7ContextE(%"class.gl::StateCache"*, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 65
  %4 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %5 = icmp ne %"class.gl::ProgramExecutable"* %4, null
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %4, i64 0, i32 2, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = and i8 %8, 6
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 10
  %14 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 14
  call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 7, i1 false)
  %15 = bitcast i8* %13 to i32*
  store i32 0, i32* %15, align 1
  store i8 1, i8* %14, align 1
  br label %81

16:                                               ; preds = %6, %2
  %17 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 9
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %45, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 86, i32 0, i32 1
  %22 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %21, align 8
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 142
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %45

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 188
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %45

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 0
  %32 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 1
  %33 = load i32, i32* %31, align 4
  %34 = icmp ult i32 %33, 3
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = icmp eq i32 %33, 3
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = load i32, i32* %32, align 4
  %39 = icmp ult i32 %38, 2
  br i1 %39, label %40, label %45

40:                                               ; preds = %30, %37
  %41 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 0, i64 16, i1 false)
  %42 = tail call zeroext i8 @_ZNK2gl17TransformFeedback16getPrimitiveModeEv(%"class.gl::TransformFeedback"* %22) #21
  %43 = zext i8 %42 to i64
  %44 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 %43
  store i8 1, i8* %44, align 1
  br label %81

45:                                               ; preds = %35, %26, %20, %37, %16
  br i1 %5, label %46, label %51

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %4, i64 0, i32 2, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = and i8 %48, 8
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %46, %45
  %52 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 0
  %53 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 10
  %54 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 14
  call void @llvm.memset.p0i8.i64(i8* align 1 %52, i8 1, i64 7, i1 false)
  %55 = bitcast i8* %53 to i32*
  store i32 16843009, i32* %55, align 1
  store i8 0, i8* %54, align 1
  br label %81

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %4, i64 0, i32 60
  %58 = load i8, i8* %57, align 8
  %59 = icmp eq i8 %58, 0
  %60 = icmp eq i8 %58, 1
  %61 = icmp eq i8 %58, 4
  %62 = icmp eq i8 %58, 10
  %63 = icmp eq i8 %58, 12
  %64 = zext i1 %59 to i8
  %65 = zext i1 %60 to i8
  %66 = zext i1 %61 to i8
  %67 = zext i1 %62 to i8
  %68 = zext i1 %63 to i8
  %69 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 0
  store i8 %64, i8* %69, align 1
  %70 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 1
  store i8 %65, i8* %70, align 1
  %71 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 2
  store i8 %65, i8* %71, align 1
  %72 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 3
  store i8 %65, i8* %72, align 1
  %73 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 4
  store i8 %66, i8* %73, align 1
  %74 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 5
  store i8 %66, i8* %74, align 1
  %75 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 6
  store i8 %66, i8* %75, align 1
  %76 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 10
  store i8 %67, i8* %76, align 1
  %77 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 11
  store i8 %67, i8* %77, align 1
  %78 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 12
  store i8 %68, i8* %78, align 1
  %79 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 13
  store i8 %68, i8* %79, align 1
  %80 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 14
  store i8 0, i8* %80, align 1
  br label %81

81:                                               ; preds = %40, %56, %51, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache27updateValidBindTextureTypesEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.angle::PackedEnumMap.601", align 1
  %4 = alloca [11 x %"struct.std::__1::pair.954"], align 1
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 2
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 1
  %10 = icmp ult i32 %6, 3
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = icmp eq i32 %6, 3
  br i1 %12, label %13, label %16

13:                                               ; preds = %11
  %14 = load i32, i32* %9, align 4
  %15 = icmp ne i32 %14, 0
  br label %16

16:                                               ; preds = %11, %2, %13
  %17 = phi i1 [ %15, %13 ], [ false, %2 ], [ true, %11 ]
  %18 = getelementptr inbounds %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.601"* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %18) #21
  %19 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %19) #21
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 0, i32 1
  store i8 1, i8* %20, align 1
  %21 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 1, i32 0
  store i8 1, i8* %21, align 1
  %22 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 1, i32 1
  store i8 %8, i8* %22, align 1
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 159
  %24 = load i8, i8* %23, align 2
  %25 = select i1 %17, i8 1, i8 %24
  %26 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 2, i32 0
  store i8 2, i8* %26, align 1
  %27 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 2, i32 1
  store i8 %25, i8* %27, align 1
  %28 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 152
  %29 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 3, i32 0
  store i8 3, i8* %29, align 1
  %30 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 3, i32 1
  %31 = load i8, i8* %28, align 1, !range !2
  store i8 %31, i8* %30, align 1
  %32 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 53
  %33 = load i8, i8* %32, align 1
  %34 = select i1 %7, i8 1, i8 %33
  %35 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 4, i32 0
  store i8 4, i8* %35, align 1
  %36 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 4, i32 1
  store i8 %34, i8* %36, align 1
  %37 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 91
  %38 = load i8, i8* %37, align 4, !range !2
  %39 = icmp eq i8 %38, 0
  %40 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 102
  %41 = load i8, i8* %40, align 1
  %42 = select i1 %39, i8 %41, i8 1
  %43 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 5, i32 0
  store i8 5, i8* %43, align 1
  %44 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 5, i32 1
  store i8 %42, i8* %44, align 1
  %45 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 141
  %46 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 6, i32 0
  store i8 6, i8* %46, align 1
  %47 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 6, i32 1
  %48 = load i8, i8* %45, align 1, !range !2
  store i8 %48, i8* %47, align 1
  %49 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 7, i32 0
  store i8 7, i8* %49, align 1
  %50 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 7, i32 1
  store i8 1, i8* %50, align 1
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 176
  %52 = load i8, i8* %51, align 1, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %16
  %55 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 177
  %56 = load i8, i8* %55, align 4, !range !2
  br label %57

57:                                               ; preds = %16, %54
  %58 = phi i8 [ 1, %16 ], [ %56, %54 ]
  %59 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 8, i32 0
  store i8 8, i8* %59, align 1
  %60 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 8, i32 1
  store i8 %58, i8* %60, align 1
  %61 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 173
  %62 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 9, i32 0
  store i8 9, i8* %62, align 1
  %63 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 9, i32 1
  %64 = load i8, i8* %61, align 1, !range !2
  store i8 %64, i8* %63, align 1
  %65 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 190
  %66 = load i8, i8* %65, align 1, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %57
  %69 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 191
  %70 = load i8, i8* %69, align 2, !range !2
  br label %71

71:                                               ; preds = %57, %68
  %72 = phi i8 [ 1, %57 ], [ %70, %68 ]
  %73 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 10, i32 0
  store i8 10, i8* %73, align 1
  %74 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 10, i32 1
  store i8 %72, i8* %74, align 1
  %75 = getelementptr inbounds %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.601"* %3, i64 0, i32 0, i32 0, i64 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %75, i8 0, i64 7, i1 false) #21
  store i8 1, i8* %18, align 1
  %76 = getelementptr inbounds %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.601"* %3, i64 0, i32 0, i32 0, i64 1
  store i8 %8, i8* %76, align 1
  %77 = getelementptr inbounds %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.601"* %3, i64 0, i32 0, i32 0, i64 2
  store i8 %25, i8* %77, align 1
  %78 = getelementptr inbounds %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.601"* %3, i64 0, i32 0, i32 0, i64 3
  store i8 %31, i8* %78, align 1
  %79 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 4, i32 1
  %80 = load i8, i8* %79, align 1, !range !2
  %81 = getelementptr inbounds %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.601"* %3, i64 0, i32 0, i32 0, i64 4
  store i8 %80, i8* %81, align 1
  %82 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 5, i32 1
  %83 = load i8, i8* %82, align 1, !range !2
  %84 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 5, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i64
  %87 = getelementptr inbounds %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.601"* %3, i64 0, i32 0, i32 0, i64 %86
  store i8 %83, i8* %87, align 1
  %88 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 6, i32 1
  %89 = load i8, i8* %88, align 1, !range !2
  %90 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 6, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i64
  %93 = getelementptr inbounds %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.601"* %3, i64 0, i32 0, i32 0, i64 %92
  store i8 %89, i8* %93, align 1
  %94 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 7, i32 1
  %95 = load i8, i8* %94, align 1, !range !2
  %96 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 7, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.601"* %3, i64 0, i32 0, i32 0, i64 %98
  store i8 %95, i8* %99, align 1
  %100 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 8, i32 1
  %101 = load i8, i8* %100, align 1, !range !2
  %102 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 8, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.601"* %3, i64 0, i32 0, i32 0, i64 %104
  store i8 %101, i8* %105, align 1
  %106 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 9, i32 1
  %107 = load i8, i8* %106, align 1, !range !2
  %108 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 9, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i64
  %111 = getelementptr inbounds %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.601"* %3, i64 0, i32 0, i32 0, i64 %110
  store i8 %107, i8* %111, align 1
  %112 = getelementptr inbounds [11 x %"struct.std::__1::pair.954"], [11 x %"struct.std::__1::pair.954"]* %4, i64 0, i64 10, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i64
  %115 = getelementptr inbounds %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.601"* %3, i64 0, i32 0, i32 0, i64 %114
  store i8 %72, i8* %115, align 1
  %116 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 14, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* nonnull align 1 %18, i64 12, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %19) #21
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %18) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache28updateValidDrawElementsTypesEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to %"class.angle::PackedEnumMap.603"*
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 2
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 0
  %10 = load i8, i8* %9, align 4, !range !2
  br label %11

11:                                               ; preds = %8, %2
  %12 = phi i8 [ 1, %2 ], [ %10, %8 ]
  %13 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #21
  store i32 257, i32* %3, align 4
  %14 = getelementptr inbounds %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.603"* %4, i64 0, i32 0, i32 0, i64 2
  store i8 %12, i8* %14, align 2
  %15 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 15, i32 0, i32 0, i64 0
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %3, align 4
  store i32 %17, i32* %16, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #21
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl10StateCache26updateBasicDrawStatesErrorEv(%"class.gl::StateCache"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  store i64 1, i64* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl10StateCache28updateBasicDrawElementsErrorEv(%"class.gl::StateCache"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 8
  store i64 1, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache33updateVertexAttribTypesValidationEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.angle::PackedEnumMap.605", align 16
  %4 = alloca [7 x %"struct.std::__1::pair.959"], align 16
  %5 = alloca %"class.angle::PackedEnumMap.605", align 4
  %6 = alloca [14 x %"struct.std::__1::pair.959"], align 16
  %7 = alloca %"class.angle::PackedEnumMap.605", align 16
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 106
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = zext i8 %9 to i32
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 108
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = select i1 %13, i32 0, i32 3
  %15 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 3
  br i1 %17, label %18, label %46

18:                                               ; preds = %2
  %19 = bitcast %"class.angle::PackedEnumMap.605"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 76, i8* nonnull %19) #21
  %20 = bitcast [7 x %"struct.std::__1::pair.959"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %20) #21
  %21 = bitcast [7 x %"struct.std::__1::pair.959"]* %4 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 2, i32 1>, <4 x i32>* %21, align 16
  %22 = getelementptr inbounds [7 x %"struct.std::__1::pair.959"], [7 x %"struct.std::__1::pair.959"]* %4, i64 0, i64 2, i32 0
  %23 = bitcast i32* %22 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 3, i32 1>, <4 x i32>* %23, align 16
  %24 = getelementptr inbounds [7 x %"struct.std::__1::pair.959"], [7 x %"struct.std::__1::pair.959"]* %4, i64 0, i64 4, i32 0
  %25 = bitcast i32* %24 to <4 x i32>*
  store <4 x i32> <i32 6, i32 1, i32 12, i32 1>, <4 x i32>* %25, align 16
  %26 = getelementptr inbounds [7 x %"struct.std::__1::pair.959"], [7 x %"struct.std::__1::pair.959"]* %4, i64 0, i64 6, i32 0
  store i32 14, i32* %26, align 16
  %27 = getelementptr inbounds [7 x %"struct.std::__1::pair.959"], [7 x %"struct.std::__1::pair.959"]* %4, i64 0, i64 6, i32 1
  store i32 %10, i32* %27, align 4
  %28 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %3, i64 0, i32 0, i32 0, i64 4
  %29 = bitcast i32* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %29, i8 0, i64 60, i1 false) #21
  %30 = bitcast %"class.angle::PackedEnumMap.605"* %3 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %30, align 16
  %31 = getelementptr inbounds [7 x %"struct.std::__1::pair.959"], [7 x %"struct.std::__1::pair.959"]* %4, i64 0, i64 4, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %3, i64 0, i32 0, i32 0, i64 6
  store i32 %32, i32* %33, align 8
  %34 = getelementptr inbounds [7 x %"struct.std::__1::pair.959"], [7 x %"struct.std::__1::pair.959"]* %4, i64 0, i64 5, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds [7 x %"struct.std::__1::pair.959"], [7 x %"struct.std::__1::pair.959"]* %4, i64 0, i64 5, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %3, i64 0, i32 0, i32 0, i64 %38
  store i32 %35, i32* %39, align 4
  %40 = getelementptr inbounds [7 x %"struct.std::__1::pair.959"], [7 x %"struct.std::__1::pair.959"]* %4, i64 0, i64 6, i32 0
  %41 = load i32, i32* %40, align 16
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %3, i64 0, i32 0, i32 0, i64 %42
  store i32 %10, i32* %43, align 4
  %44 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 16
  %45 = bitcast %"class.angle::PackedEnumMap.605"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 16 %19, i64 76, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %20) #21
  br label %139

46:                                               ; preds = %2
  %47 = bitcast %"class.angle::PackedEnumMap.605"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 76, i8* nonnull %47) #21
  %48 = bitcast [14 x %"struct.std::__1::pair.959"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %48) #21
  %49 = bitcast [14 x %"struct.std::__1::pair.959"]* %6 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 2, i32 1>, <4 x i32>* %49, align 16
  %50 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 2, i32 0
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 4, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 16
  %52 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 4, i32 0
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 3, i32 1, i32 5, i32 1>, <4 x i32>* %53, align 16
  %54 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 6, i32 0
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 6, i32 1, i32 11, i32 1>, <4 x i32>* %55, align 16
  %56 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 8, i32 0
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 12, i32 1, i32 15, i32 2>, <4 x i32>* %57, align 16
  %58 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 10, i32 0
  store i32 14, i32* %58, align 16
  %59 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 10, i32 1
  store i32 %10, i32* %59, align 4
  %60 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 11, i32 0
  store i32 13, i32* %60, align 8
  %61 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 11, i32 1
  store i32 2, i32* %61, align 4
  %62 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 12, i32 0
  store i32 17, i32* %62, align 16
  %63 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 12, i32 1
  store i32 %14, i32* %63, align 4
  %64 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 13, i32 0
  store i32 16, i32* %64, align 8
  %65 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 13, i32 1
  store i32 %14, i32* %65, align 4
  %66 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %5, i64 0, i32 0, i32 0, i64 5
  %67 = bitcast i32* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %67, i8 0, i64 56, i1 false) #21
  %68 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %5, i64 0, i32 0, i32 0, i64 0
  store i32 1, i32* %68, align 4
  %69 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %5, i64 0, i32 0, i32 0, i64 2
  store i32 1, i32* %69, align 4
  %70 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %5, i64 0, i32 0, i32 0, i64 4
  store i32 1, i32* %70, align 4
  %71 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %5, i64 0, i32 0, i32 0, i64 1
  store i32 1, i32* %71, align 4
  %72 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 4, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %5, i64 0, i32 0, i32 0, i64 3
  store i32 %73, i32* %74, align 4
  %75 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 5, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 5, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %5, i64 0, i32 0, i32 0, i64 %79
  store i32 %76, i32* %80, align 4
  %81 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 6, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 6, i32 0
  %84 = load i32, i32* %83, align 16
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %5, i64 0, i32 0, i32 0, i64 %85
  store i32 %82, i32* %86, align 4
  %87 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 7, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 7, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %5, i64 0, i32 0, i32 0, i64 %91
  store i32 %88, i32* %92, align 4
  %93 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 8, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 8, i32 0
  %96 = load i32, i32* %95, align 16
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %5, i64 0, i32 0, i32 0, i64 %97
  store i32 %94, i32* %98, align 4
  %99 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 9, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 9, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %5, i64 0, i32 0, i32 0, i64 %103
  store i32 %100, i32* %104, align 4
  %105 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 10, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 10, i32 0
  %108 = load i32, i32* %107, align 16
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %5, i64 0, i32 0, i32 0, i64 %109
  store i32 %106, i32* %110, align 4
  %111 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 11, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 11, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %5, i64 0, i32 0, i32 0, i64 %115
  store i32 %112, i32* %116, align 4
  %117 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 12, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 12, i32 0
  %120 = load i32, i32* %119, align 16
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %5, i64 0, i32 0, i32 0, i64 %121
  store i32 %118, i32* %122, align 4
  %123 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 13, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds [14 x %"struct.std::__1::pair.959"], [14 x %"struct.std::__1::pair.959"]* %6, i64 0, i64 13, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %5, i64 0, i32 0, i32 0, i64 %127
  store i32 %124, i32* %128, align 4
  %129 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 16
  %130 = bitcast %"class.angle::PackedEnumMap.605"* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* nonnull align 4 %47, i64 76, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %48) #21
  call void @llvm.lifetime.end.p0i8(i64 76, i8* nonnull %47) #21
  %131 = bitcast %"class.angle::PackedEnumMap.605"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 76, i8* nonnull %131) #21
  %132 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %7, i64 0, i32 0, i32 0, i64 6
  %133 = bitcast i32* %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 52, i1 false) #21
  %134 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %7, i64 0, i32 0, i32 0, i64 4
  store i32 1, i32* %134, align 16
  %135 = bitcast %"class.angle::PackedEnumMap.605"* %7 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %135, align 16
  %136 = getelementptr inbounds %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605"* %7, i64 0, i32 0, i32 0, i64 5
  store i32 1, i32* %136, align 4
  %137 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 17
  %138 = bitcast %"class.angle::PackedEnumMap.605"* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %138, i8* nonnull align 16 %131, i64 76, i1 false)
  br label %139

139:                                              ; preds = %46, %18
  %140 = phi i8* [ %131, %46 ], [ %19, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 76, i8* nonnull %140) #21
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache13updateCanDrawEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #19 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 65
  %8 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %7, align 8
  %9 = icmp eq %"class.gl::ProgramExecutable"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %8, i64 0, i32 18
  %12 = load i8, i8* %11, align 8, !range !2
  br label %13

13:                                               ; preds = %6, %10, %2
  %14 = phi i8 [ 1, %2 ], [ 0, %6 ], [ %12, %10 ]
  %15 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 18
  store i8 %14, i8* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache23updateActiveAttribsMaskEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.angle::BitSetT.166", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 65
  %9 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %8, align 8
  %10 = icmp eq %"class.gl::ProgramExecutable"* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = bitcast %"class.gl::StateCache"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false)
  br label %49

13:                                               ; preds = %2
  %14 = bitcast %"class.angle::BitSetT.166"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #21
  %15 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %3, i64 0, i32 0
  store i64 -6148914691236517206, i64* %15, align 8
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 103
  call void @_ZNK2gl10GLES1State23getActiveAttributesMaskEv(%"class.angle::BitSetT.166"* nonnull sret %3, %"class.gl::GLES1State"* %16) #21
  %17 = load i64, i64* %15, align 8, !noalias !544
  br label %23

18:                                               ; preds = %7
  %19 = bitcast %"class.angle::BitSetT.166"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #21
  %20 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 5, i32 0
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %20, align 8
  br label %23

23:                                               ; preds = %18, %13
  %24 = phi i64 [ %22, %18 ], [ %17, %13 ]
  %25 = phi i8* [ %19, %18 ], [ %14, %13 ]
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %27 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %26, align 8
  %28 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %27, i64 0, i32 5, i32 6, i32 0
  %29 = load i64, i64* %28, align 8, !noalias !547
  %30 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %27, i64 0, i32 5, i32 4, i32 0
  %31 = load i64, i64* %30, align 8, !noalias !544
  %32 = and i64 %31, %24
  %33 = and i64 %32, %29
  %34 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 1, i32 0
  store i64 %33, i64* %34, align 8
  %35 = and i64 %29, 65535
  %36 = xor i64 %35, 65535
  %37 = and i64 %32, %36
  %38 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  %39 = load i64, i64* %30, align 8, !noalias !550
  %40 = and i64 %39, 65535
  %41 = xor i64 %40, 65535
  %42 = and i64 %41, %24
  %43 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 2, i32 0
  store i64 %42, i64* %43, align 8
  %44 = load i64, i64* %30, align 8, !noalias !553
  %45 = and i64 %44, %29
  %46 = icmp ne i64 %45, 0
  %47 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 3
  %48 = zext i1 %46 to i8
  store i8 %48, i8* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #21
  br label %49

49:                                               ; preds = %23, %11
  ret void
}

declare void @_ZNK2gl10GLES1State23getActiveAttributesMaskEv(%"class.angle::BitSetT.166"* sret, %"class.gl::GLES1State"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache29updateVertexElementLimitsImplEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %4 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 6
  %7 = bitcast i64* %5 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %7, align 8
  %8 = icmp eq %"class.gl::VertexArray"* %4, null
  br i1 %8, label %46, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %46, label %13

13:                                               ; preds = %9
  %14 = tail call i64 @llvm.cttz.i64(i64 %11, i1 true) #21, !range !73
  %15 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %4, i64 0, i32 5, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %4, i64 0, i32 5, i32 3, i32 0, i32 0
  br label %17

17:                                               ; preds = %13, %38
  %18 = phi i64 [ 9223372036854775807, %13 ], [ %39, %38 ]
  %19 = phi i64 [ 9223372036854775807, %13 ], [ %40, %38 ]
  %20 = phi i64 [ %14, %13 ], [ %45, %38 ]
  %21 = phi i64 [ %11, %13 ], [ %43, %38 ]
  %22 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %15, align 8
  %23 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %22, i64 %20, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %16, align 8
  %27 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %22, i64 %20, i32 6
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %26, i64 %25, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %17
  %33 = icmp slt i64 %28, %19
  %34 = select i1 %33, i64 %28, i64 %19
  store i64 %34, i64* %6, align 8
  br label %38

35:                                               ; preds = %17
  %36 = icmp slt i64 %28, %18
  %37 = select i1 %36, i64 %28, i64 %18
  store i64 %37, i64* %5, align 8
  br label %38

38:                                               ; preds = %35, %32
  %39 = phi i64 [ %37, %35 ], [ %18, %32 ]
  %40 = phi i64 [ %19, %35 ], [ %34, %32 ]
  %41 = shl i64 1, %20
  %42 = xor i64 %41, -1
  %43 = and i64 %21, %42
  %44 = icmp eq i64 %43, 0
  %45 = tail call i64 @llvm.cttz.i64(i64 %43, i1 true) #21, !range !73
  br i1 %44, label %46, label %17

46:                                               ; preds = %38, %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2gl10StateCache27getBasicDrawStatesErrorImplEPKNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %3 = tail call i8* @_ZN2gl18ValidateDrawStatesEPKNS_7ContextE(%"class.gl::Context"* %1) #21
  %4 = ptrtoint i8* %3 to i64
  %5 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 7
  store i64 %4, i64* %5, align 8
  ret i64 %4
}

declare i8* @_ZN2gl18ValidateDrawStatesEPKNS_7ContextE(%"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2gl10StateCache29getBasicDrawElementsErrorImplEPKNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %3 = tail call i8* @_ZN2gl26ValidateDrawElementsStatesEPKNS_7ContextE(%"class.gl::Context"* %1) #21
  %4 = ptrtoint i8* %3 to i64
  %5 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 8
  store i64 %4, i64* %5, align 8
  ret i64 %4
}

declare i8* @_ZN2gl26ValidateDrawElementsStatesEPKNS_7ContextE(%"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache38updateActiveShaderStorageBufferIndicesEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 11, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 65
  %5 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %4, align 8
  %6 = icmp eq %"class.gl::ProgramExecutable"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %5, i64 0, i32 55
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %5, i64 0, i32 37
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %5, i64 0, i32 38
  %13 = select i1 %10, %"class.std::__1::vector.194"* %12, %"class.std::__1::vector.194"* %11
  %14 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %13, i64 0, i32 0, i32 0
  %15 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %13, i64 0, i32 0, i32 1
  %17 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %16, align 8
  %18 = icmp eq %"struct.gl::InterfaceBlock"* %15, %17
  br i1 %18, label %29, label %19

19:                                               ; preds = %7, %19
  %20 = phi i64 [ %26, %19 ], [ 0, %7 ]
  %21 = phi %"struct.gl::InterfaceBlock"* [ %27, %19 ], [ %15, %7 ]
  %22 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %21, i64 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = shl i64 1, %24
  %26 = or i64 %25, %20
  store i64 %26, i64* %3, align 8
  %27 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %21, i64 1
  %28 = icmp eq %"struct.gl::InterfaceBlock"* %27, %17
  br i1 %28, label %29, label %19

29:                                               ; preds = %19, %7, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache28updateActiveImageUnitIndicesEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 12
  %4 = bitcast %"class.angle::BitSetArray"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #21
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 65
  %6 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %5, align 8
  %7 = icmp eq %"class.gl::ProgramExecutable"* %6, null
  br i1 %7, label %71, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %6, i64 0, i32 55
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %6, i64 0, i32 41
  %13 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %6, i64 0, i32 42
  %14 = select i1 %11, %"class.std::__1::vector.216"* %13, %"class.std::__1::vector.216"* %12
  %15 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %14, i64 0, i32 0, i32 0
  %16 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %14, i64 0, i32 0, i32 1
  %18 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %17, align 8
  %19 = icmp eq %"struct.gl::ImageBinding"* %16, %18
  br i1 %19, label %71, label %20

20:                                               ; preds = %8, %47
  %21 = phi %"struct.gl::ImageBinding"* [ %48, %47 ], [ %16, %8 ]
  %22 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %21, i64 0, i32 1, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %21, i64 0, i32 1, i32 0, i32 1
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %23, %25
  br i1 %26, label %47, label %27

27:                                               ; preds = %20
  %28 = ptrtoint i32* %23 to i64
  %29 = getelementptr i32, i32* %25, i64 -1
  %30 = ptrtoint i32* %29 to i64
  %31 = sub i64 %30, %28
  %32 = and i64 %31, 4
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %44

34:                                               ; preds = %27
  %35 = load i32, i32* %23, align 4
  %36 = zext i32 %35 to i64
  %37 = lshr i64 %36, 6
  %38 = and i64 %36, 63
  %39 = shl i64 1, %38
  %40 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 12, i32 0, i32 0, i64 %37, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = or i64 %39, %41
  store i64 %42, i64* %40, align 8
  %43 = getelementptr inbounds i32, i32* %23, i64 1
  br label %44

44:                                               ; preds = %34, %27
  %45 = phi i32* [ %43, %34 ], [ %23, %27 ]
  %46 = icmp ult i64 %31, 4
  br i1 %46, label %47, label %50

47:                                               ; preds = %44, %50, %20
  %48 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %21, i64 1
  %49 = icmp eq %"struct.gl::ImageBinding"* %48, %18
  br i1 %49, label %71, label %20

50:                                               ; preds = %44, %50
  %51 = phi i32* [ %69, %50 ], [ %45, %44 ]
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = lshr i64 %53, 6
  %55 = and i64 %53, 63
  %56 = shl i64 1, %55
  %57 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 12, i32 0, i32 0, i64 %54, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = or i64 %56, %58
  store i64 %59, i64* %57, align 8
  %60 = getelementptr inbounds i32, i32* %51, i64 1
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i64
  %63 = lshr i64 %62, 6
  %64 = and i64 %62, 63
  %65 = shl i64 1, %64
  %66 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 12, i32 0, i32 0, i64 %63, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = or i64 %65, %67
  store i64 %68, i64* %66, align 8
  %69 = getelementptr inbounds i32, i32* %51, i64 2
  %70 = icmp eq i32* %69, %25
  br i1 %70, label %47, label %50

71:                                               ; preds = %47, %8, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache24onGLES1ClientStateChangeEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.angle::BitSetT.166", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 65
  %9 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %8, align 8
  %10 = icmp eq %"class.gl::ProgramExecutable"* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = bitcast %"class.gl::StateCache"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #21
  br label %49

13:                                               ; preds = %2
  %14 = bitcast %"class.angle::BitSetT.166"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #21
  %15 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %3, i64 0, i32 0
  store i64 -6148914691236517206, i64* %15, align 8
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 103
  call void @_ZNK2gl10GLES1State23getActiveAttributesMaskEv(%"class.angle::BitSetT.166"* nonnull sret %3, %"class.gl::GLES1State"* %16) #21
  %17 = load i64, i64* %15, align 8, !noalias !556
  br label %23

18:                                               ; preds = %7
  %19 = bitcast %"class.angle::BitSetT.166"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #21
  %20 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 5, i32 0
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %20, align 8
  br label %23

23:                                               ; preds = %18, %13
  %24 = phi i64 [ %22, %18 ], [ %17, %13 ]
  %25 = phi i8* [ %19, %18 ], [ %14, %13 ]
  %26 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %27 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %26, align 8
  %28 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %27, i64 0, i32 5, i32 6, i32 0
  %29 = load i64, i64* %28, align 8, !noalias !559
  %30 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %27, i64 0, i32 5, i32 4, i32 0
  %31 = load i64, i64* %30, align 8, !noalias !556
  %32 = and i64 %31, %24
  %33 = and i64 %32, %29
  %34 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 1, i32 0
  store i64 %33, i64* %34, align 8
  %35 = and i64 %29, 65535
  %36 = xor i64 %35, 65535
  %37 = and i64 %32, %36
  %38 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  %39 = load i64, i64* %30, align 8, !noalias !562
  %40 = and i64 %39, 65535
  %41 = xor i64 %40, 65535
  %42 = and i64 %41, %24
  %43 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 2, i32 0
  store i64 %42, i64* %43, align 8
  %44 = load i64, i64* %30, align 8, !noalias !565
  %45 = and i64 %44, %29
  %46 = icmp ne i64 %45, 0
  %47 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 3
  %48 = zext i1 %46 to i8
  store i8 %48, i8* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #21
  br label %49

49:                                               ; preds = %11, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10StateCache37updateTransformFeedbackActiveUnpausedEPNS_7ContextE(%"class.gl::StateCache"* nocapture, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 86, i32 0, i32 1
  %4 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %3, align 8
  %5 = icmp eq %"class.gl::TransformFeedback"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %4, i64 0, i32 2, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = tail call zeroext i1 @_ZNK2gl17TransformFeedback8isPausedEv(%"class.gl::TransformFeedback"* nonnull %4) #21
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i8
  br label %14

14:                                               ; preds = %6, %2, %10
  %15 = phi i8 [ 0, %6 ], [ 0, %2 ], [ %13, %10 ]
  %16 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 9
  store i8 %15, i8* %16, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl10StateCache17setValidDrawModesEbbbbbb(%"class.gl::StateCache"* nocapture, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #8 align 2 {
  %8 = zext i1 %1 to i8
  %9 = zext i1 %2 to i8
  %10 = zext i1 %3 to i8
  %11 = zext i1 %4 to i8
  %12 = zext i1 %5 to i8
  %13 = zext i1 %6 to i8
  %14 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 0
  store i8 %8, i8* %14, align 1
  %15 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 1
  store i8 %9, i8* %15, align 1
  %16 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 2
  store i8 %9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 3
  store i8 %9, i8* %17, align 1
  %18 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 4
  store i8 %10, i8* %18, align 1
  %19 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 5
  store i8 %10, i8* %19, align 1
  %20 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 6
  store i8 %10, i8* %20, align 1
  %21 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 10
  store i8 %11, i8* %21, align 1
  %22 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 11
  store i8 %11, i8* %22, align 1
  %23 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 12
  store i8 %12, i8* %23, align 1
  %24 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 13
  store i8 %12, i8* %24, align 1
  %25 = getelementptr inbounds %"class.gl::StateCache", %"class.gl::StateCache"* %0, i64 0, i32 13, i32 0, i32 0, i64 14
  store i8 %13, i8* %25, align 1
  ret void
}

declare zeroext i8 @_ZNK2gl17TransformFeedback16getPrimitiveModeEv(%"class.gl::TransformFeedback"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2gl17TransformFeedback8isPausedEv(%"class.gl::TransformFeedback"*) local_unnamed_addr #3

declare void @_ZN3egl10ShareGroup6addRefEv(%"class.egl::ShareGroup"*) local_unnamed_addr #3

declare void @_ZN3egl10ShareGroupC1EPN2rx14EGLImplFactoryE(%"class.egl::ShareGroup"*, %"class.rx::EGLImplFactory"*) unnamed_addr #3

declare i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"*, i64, i64) local_unnamed_addr #3

declare i32 @_ZNK3egl12AttributeMap8getAsIntEli(%"class.egl::AttributeMap"*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEED2Ev(%"class.angle::BindingPointer.411"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.angle::BindingPointer.411", %"class.angle::BindingPointer.411"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl14BindingPointerINS_7TextureEED0Ev(%"class.gl::BindingPointer.410"*) unnamed_addr #16 comdat align 2 {
  %2 = bitcast %"class.gl::BindingPointer.410"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEED0Ev(%"class.angle::BindingPointer.411"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.angle::BindingPointer.411"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14BindingPointerIN2gl8CompilerENS1_7ContextENS_6ResultEED0Ev(%"class.angle::BindingPointer.91"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.angle::BindingPointer.91"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #27
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.assume(i1) #21

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #22

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.gl::Texture"* @_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE25checkObjectAllocationImplIJNS_11TextureTypeEEEEPS1_PN2rx13GLImplFactoryES3_DpT_(%"class.gl::TypedResourceManager.250"*, %"class.rx::GLImplFactory"*, i32, i8 zeroext) local_unnamed_addr #5 comdat align 2 {
  %5 = tail call %"class.gl::Texture"* @_ZN2gl14TextureManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.rx::GLImplFactory"* %1, i32 %2, i8 zeroext %3) #21
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1
  %7 = zext i32 %2 to i64
  %8 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %6, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 1
  %13 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %13, i64 %7
  %15 = load %"class.gl::Texture"*, %"class.gl::Texture"** %14, align 8
  %16 = icmp eq %"class.gl::Texture"* %15, inttoptr (i64 -1 to %"class.gl::Texture"*)
  br i1 %16, label %77, label %79

17:                                               ; preds = %4
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #21, !range !8
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %2
  br i1 %59, label %71, label %60, !prof !9

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %77, !prof !10

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #21
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %79, label %76, !prof !9

76:                                               ; preds = %71
  tail call void @llvm.trap() #21
  unreachable

77:                                               ; preds = %64, %11
  %78 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator7reserveEj(%"class.gl::HandleAllocator"* %78, i32 %2) #21
  br label %79

79:                                               ; preds = %11, %71, %77
  tail call void @_ZN2gl11ResourceMapINS_7TextureENS_9TextureIDEE6assignES2_PS1_(%"class.gl::ResourceMap.251"* %6, i32 %2, %"class.gl::Texture"* %5)
  ret %"class.gl::Texture"* %5
}

declare %"class.gl::Texture"* @_ZN2gl14TextureManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.rx::GLImplFactory"*, i32, i8 zeroext) local_unnamed_addr #3

declare void @_ZN2gl15HandleAllocator7reserveEj(%"class.gl::HandleAllocator"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_7TextureENS_9TextureIDEE6assignES2_PS1_(%"class.gl::ResourceMap.251"*, i32, %"class.gl::Texture"*) local_unnamed_addr #5 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 1
  %16 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #27
  %22 = bitcast i8* %21 to %"class.gl::Texture"**
  %23 = bitcast %"class.gl::Texture"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %22, i64 %8
  %25 = bitcast %"class.gl::Texture"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::Texture"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::Texture"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #27
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 1
  %34 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.271", %"class.absl::container_internal::raw_hash_map.271"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !568
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.271", %"class.absl::container_internal::raw_hash_map.271"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !568
  %49 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !568
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !568
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %59, align 8, !noalias !568
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #21, !range !8
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !568
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !9

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !10

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.272"* %38, i64 %46) #21, !noalias !568
  %95 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %59, align 8, !noalias !568
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !568
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %97, align 8, !noalias !568
  %98 = load i8*, i8** %47, align 8, !noalias !568
  %99 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %59, align 8, !noalias !568
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.273"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #21, !noalias !568
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !9

108:                                              ; preds = %100
  tail call void @llvm.trap() #21
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::Texture"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::Texture"* %2, %"class.gl::Texture"** %112, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #22

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.272"*, i64) local_unnamed_addr #23 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #21, !range !8
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !9

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.272"* %0, i64 1) #21
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.272"* %0) #21
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.272"* %0, i64 %58) #21
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #21, !range !8
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.272"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #27
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.273"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #21
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #21, !range !8
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.273"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.273"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #21
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #27
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.272"*) local_unnamed_addr #23 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #21
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #21, !range !8
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !9

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.273"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.273"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #21
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.273"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.273"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.273"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #21
  %118 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.273"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #24

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.gl::Framebuffer"* @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE25checkObjectAllocationImplIJNS_4CapsEPN3egl10ShareGroupEEEEPS1_PN2rx13GLImplFactoryES3_DpT_(%"class.gl::TypedResourceManager.314"*, %"class.rx::GLImplFactory"*, i32, %"struct.gl::Caps"*, %"class.egl::ShareGroup"*) local_unnamed_addr #5 comdat align 2 {
  %6 = tail call %"class.gl::Framebuffer"* @_ZN2gl18FramebufferManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_13FramebufferIDERKNS_4CapsEPN3egl10ShareGroupE(%"class.rx::GLImplFactory"* %1, i32 %2, %"struct.gl::Caps"* dereferenceable(872) %3, %"class.egl::ShareGroup"* %4) #21
  %7 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1
  %8 = zext i32 %2 to i64
  %9 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %7, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 1
  %14 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %14, i64 %8
  %16 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %15, align 8
  %17 = icmp eq %"class.gl::Framebuffer"* %16, inttoptr (i64 -1 to %"class.gl::Framebuffer"*)
  br i1 %17, label %78, label %80

18:                                               ; preds = %5
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %8
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %18
  %40 = phi i64 [ %33, %18 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %18 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #21, !range !8
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %2
  br i1 %60, label %72, label %61, !prof !9

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %78, !prof !10

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #21
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %80, label %77, !prof !9

77:                                               ; preds = %72
  tail call void @llvm.trap() #21
  unreachable

78:                                               ; preds = %65, %12
  %79 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator7reserveEj(%"class.gl::HandleAllocator"* %79, i32 %2) #21
  br label %80

80:                                               ; preds = %12, %72, %78
  tail call void @_ZN2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE6assignES2_PS1_(%"class.gl::ResourceMap.315"* %7, i32 %2, %"class.gl::Framebuffer"* %6)
  ret %"class.gl::Framebuffer"* %6
}

declare void @_ZN2gl4CapsC1ERKS0_(%"struct.gl::Caps"*, %"struct.gl::Caps"* dereferenceable(872)) unnamed_addr #3

declare %"class.gl::Framebuffer"* @_ZN2gl18FramebufferManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_13FramebufferIDERKNS_4CapsEPN3egl10ShareGroupE(%"class.rx::GLImplFactory"*, i32, %"struct.gl::Caps"* dereferenceable(872), %"class.egl::ShareGroup"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE6assignES2_PS1_(%"class.gl::ResourceMap.315"*, i32, %"class.gl::Framebuffer"*) local_unnamed_addr #5 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 1
  %16 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #27
  %22 = bitcast i8* %21 to %"class.gl::Framebuffer"**
  %23 = bitcast %"class.gl::Framebuffer"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %22, i64 %8
  %25 = bitcast %"class.gl::Framebuffer"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::Framebuffer"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::Framebuffer"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #27
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 1
  %34 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.317", %"class.absl::container_internal::raw_hash_map.317"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !571
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.317", %"class.absl::container_internal::raw_hash_map.317"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !571
  %49 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !571
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !571
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %59, align 8, !noalias !571
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #21, !range !8
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !571
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !9

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !10

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.318"* %38, i64 %46) #21, !noalias !571
  %95 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %59, align 8, !noalias !571
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !571
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::Framebuffer"* null, %"class.gl::Framebuffer"** %97, align 8, !noalias !571
  %98 = load i8*, i8** %47, align 8, !noalias !571
  %99 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %59, align 8, !noalias !571
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.319"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #21, !noalias !571
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !9

108:                                              ; preds = %100
  tail call void @llvm.trap() #21
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::Framebuffer"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::Framebuffer"* %2, %"class.gl::Framebuffer"** %112, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.318"*, i64) local_unnamed_addr #23 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #21, !range !8
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !9

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.318"* %0, i64 1) #21
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.318"* %0) #21
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.318"* %0, i64 %58) #21
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #21, !range !8
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.318"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #27
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.319"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #21
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #21, !range !8
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.319"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.319"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #21
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #27
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.318"*) local_unnamed_addr #23 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #21
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #21, !range !8
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !9

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.319"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.319"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #21
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.319"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.319"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.319"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #21
  %118 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.319"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.gl::Buffer"* @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE25checkObjectAllocationImplIJEEEPS1_PN2rx13GLImplFactoryES3_DpT_(%"class.gl::TypedResourceManager"*, %"class.rx::GLImplFactory"*, i32) local_unnamed_addr #5 comdat align 2 {
  %4 = tail call %"class.gl::Buffer"* @_ZN2gl13BufferManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_8BufferIDE(%"class.rx::GLImplFactory"* %1, i32 %2) #21
  %5 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %5, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %10, label %16

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 1
  %12 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %12, i64 %6
  %14 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %13, align 8
  %15 = icmp eq %"class.gl::Buffer"* %14, inttoptr (i64 -1 to %"class.gl::Buffer"*)
  br i1 %15, label %76, label %78

16:                                               ; preds = %3
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, %6
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %67, %16
  %38 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %39 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %40 = and i64 %38, %27
  %41 = getelementptr inbounds i8, i8* %25, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %35, %43
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37
  %48 = zext i16 %45 to i32
  %49 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %36, align 8
  br label %50

50:                                               ; preds = %59, %47
  %51 = phi i32 [ %48, %47 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #21, !range !8
  %53 = zext i32 %52 to i64
  %54 = add i64 %40, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %49, i64 %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %2
  br i1 %58, label %70, label %59, !prof !9

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %37
  %64 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %76, !prof !10

67:                                               ; preds = %63
  %68 = add i64 %39, 16
  %69 = add i64 %68, %40
  br label %37

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #21
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %78, label %75, !prof !9

75:                                               ; preds = %70
  tail call void @llvm.trap() #21
  unreachable

76:                                               ; preds = %63, %10
  %77 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator7reserveEj(%"class.gl::HandleAllocator"* %77, i32 %2) #21
  br label %78

78:                                               ; preds = %10, %70, %76
  tail call void @_ZN2gl11ResourceMapINS_6BufferENS_8BufferIDEE6assignES2_PS1_(%"class.gl::ResourceMap"* %5, i32 %2, %"class.gl::Buffer"* %4)
  ret %"class.gl::Buffer"* %4
}

declare %"class.gl::Buffer"* @_ZN2gl13BufferManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_8BufferIDE(%"class.rx::GLImplFactory"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_6BufferENS_8BufferIDEE6assignES2_PS1_(%"class.gl::ResourceMap"*, i32, %"class.gl::Buffer"*) local_unnamed_addr #5 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 1
  %16 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #27
  %22 = bitcast i8* %21 to %"class.gl::Buffer"**
  %23 = bitcast %"class.gl::Buffer"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %22, i64 %8
  %25 = bitcast %"class.gl::Buffer"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::Buffer"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::Buffer"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #27
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 1
  %34 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !574
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !574
  %49 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !574
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !574
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %59, align 8, !noalias !574
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #21, !range !8
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !574
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !9

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !10

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"* %38, i64 %46) #21, !noalias !574
  %95 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %59, align 8, !noalias !574
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !574
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %97, align 8, !noalias !574
  %98 = load i8*, i8** %47, align 8, !noalias !574
  %99 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %59, align 8, !noalias !574
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #21, !noalias !574
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !9

108:                                              ; preds = %100
  tail call void @llvm.trap() #21
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::Buffer"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::Buffer"* %2, %"class.gl::Buffer"** %112, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #23 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #21, !range !8
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !9

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 1) #21
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"* %0) #21
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %58) #21
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #21, !range !8
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #27
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #21
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #21, !range !8
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #21
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #27
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #23 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #21
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #21, !range !8
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !9

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #21
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #21
  %118 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.gl::Sampler"* @_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE25checkObjectAllocationImplIJEEEPS1_PN2rx13GLImplFactoryES3_DpT_(%"class.gl::TypedResourceManager.290"*, %"class.rx::GLImplFactory"*, i32) local_unnamed_addr #5 comdat align 2 {
  %4 = tail call %"class.gl::Sampler"* @_ZN2gl14SamplerManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.rx::GLImplFactory"* %1, i32 %2) #21
  %5 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %5, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %10, label %16

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 1
  %12 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %12, i64 %6
  %14 = load %"class.gl::Sampler"*, %"class.gl::Sampler"** %13, align 8
  %15 = icmp eq %"class.gl::Sampler"* %14, inttoptr (i64 -1 to %"class.gl::Sampler"*)
  br i1 %15, label %76, label %78

16:                                               ; preds = %3
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, %6
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %67, %16
  %38 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %39 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %40 = and i64 %38, %27
  %41 = getelementptr inbounds i8, i8* %25, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %35, %43
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37
  %48 = zext i16 %45 to i32
  %49 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %36, align 8
  br label %50

50:                                               ; preds = %59, %47
  %51 = phi i32 [ %48, %47 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #21, !range !8
  %53 = zext i32 %52 to i64
  %54 = add i64 %40, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %49, i64 %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %2
  br i1 %58, label %70, label %59, !prof !9

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %37
  %64 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %76, !prof !10

67:                                               ; preds = %63
  %68 = add i64 %39, 16
  %69 = add i64 %68, %40
  br label %37

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #21
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %78, label %75, !prof !9

75:                                               ; preds = %70
  tail call void @llvm.trap() #21
  unreachable

76:                                               ; preds = %63, %10
  %77 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator7reserveEj(%"class.gl::HandleAllocator"* %77, i32 %2) #21
  br label %78

78:                                               ; preds = %10, %70, %76
  tail call void @_ZN2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE6assignES2_PS1_(%"class.gl::ResourceMap.291"* %5, i32 %2, %"class.gl::Sampler"* %4)
  ret %"class.gl::Sampler"* %4
}

declare %"class.gl::Sampler"* @_ZN2gl14SamplerManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.rx::GLImplFactory"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE6assignES2_PS1_(%"class.gl::ResourceMap.291"*, i32, %"class.gl::Sampler"*) local_unnamed_addr #5 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 1
  %16 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #27
  %22 = bitcast i8* %21 to %"class.gl::Sampler"**
  %23 = bitcast %"class.gl::Sampler"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %22, i64 %8
  %25 = bitcast %"class.gl::Sampler"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::Sampler"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::Sampler"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #27
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 1
  %34 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.295", %"class.absl::container_internal::raw_hash_map.295"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !577
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.295", %"class.absl::container_internal::raw_hash_map.295"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !577
  %49 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !577
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !577
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %59, align 8, !noalias !577
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #21, !range !8
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !577
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !9

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !10

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.296"* %38, i64 %46) #21, !noalias !577
  %95 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %59, align 8, !noalias !577
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !577
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::Sampler"* null, %"class.gl::Sampler"** %97, align 8, !noalias !577
  %98 = load i8*, i8** %47, align 8, !noalias !577
  %99 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %59, align 8, !noalias !577
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.297"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #21, !noalias !577
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !9

108:                                              ; preds = %100
  tail call void @llvm.trap() #21
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::Sampler"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::Sampler"* %2, %"class.gl::Sampler"** %112, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.296"*, i64) local_unnamed_addr #23 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #21, !range !8
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !9

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.296"* %0, i64 1) #21
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.296"* %0) #21
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.296"* %0, i64 %58) #21
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #21, !range !8
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.296"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #27
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.297"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #21
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #21, !range !8
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.297"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.297"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #21
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #27
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.296"*) local_unnamed_addr #23 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #21
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #21, !range !8
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !9

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.297"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.297"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #21
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.297"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.297"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.297"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #21
  %118 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.297"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.gl::ProgramPipeline"* @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE25checkObjectAllocationImplIJEEEPS1_PN2rx13GLImplFactoryES3_DpT_(%"class.gl::TypedResourceManager.325"*, %"class.rx::GLImplFactory"*, i32) local_unnamed_addr #5 comdat align 2 {
  %4 = tail call %"class.gl::ProgramPipeline"* @_ZN2gl22ProgramPipelineManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_17ProgramPipelineIDE(%"class.rx::GLImplFactory"* %1, i32 %2) #21
  %5 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %5, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %10, label %16

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 1
  %12 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %11, align 8
  %13 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %12, i64 %6
  %14 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %13, align 8
  %15 = icmp eq %"class.gl::ProgramPipeline"* %14, inttoptr (i64 -1 to %"class.gl::ProgramPipeline"*)
  br i1 %15, label %76, label %78

16:                                               ; preds = %3
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, %6
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %67, %16
  %38 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %39 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %40 = and i64 %38, %27
  %41 = getelementptr inbounds i8, i8* %25, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %35, %43
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37
  %48 = zext i16 %45 to i32
  %49 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %36, align 8
  br label %50

50:                                               ; preds = %59, %47
  %51 = phi i32 [ %48, %47 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #21, !range !8
  %53 = zext i32 %52 to i64
  %54 = add i64 %40, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %49, i64 %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %2
  br i1 %58, label %70, label %59, !prof !9

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %37
  %64 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %76, !prof !10

67:                                               ; preds = %63
  %68 = add i64 %39, 16
  %69 = add i64 %68, %40
  br label %37

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #21
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %78, label %75, !prof !9

75:                                               ; preds = %70
  tail call void @llvm.trap() #21
  unreachable

76:                                               ; preds = %63, %10
  %77 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator7reserveEj(%"class.gl::HandleAllocator"* %77, i32 %2) #21
  br label %78

78:                                               ; preds = %10, %70, %76
  tail call void @_ZN2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE6assignES2_PS1_(%"class.gl::ResourceMap.326"* %5, i32 %2, %"class.gl::ProgramPipeline"* %4)
  ret %"class.gl::ProgramPipeline"* %4
}

declare %"class.gl::ProgramPipeline"* @_ZN2gl22ProgramPipelineManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_17ProgramPipelineIDE(%"class.rx::GLImplFactory"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE6assignES2_PS1_(%"class.gl::ResourceMap.326"*, i32, %"class.gl::ProgramPipeline"*) local_unnamed_addr #5 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 1
  %16 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #27
  %22 = bitcast i8* %21 to %"class.gl::ProgramPipeline"**
  %23 = bitcast %"class.gl::ProgramPipeline"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %22, i64 %8
  %25 = bitcast %"class.gl::ProgramPipeline"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::ProgramPipeline"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::ProgramPipeline"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #27
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 1
  %34 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.345", %"class.absl::container_internal::raw_hash_map.345"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !580
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.345", %"class.absl::container_internal::raw_hash_map.345"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !580
  %49 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !580
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !580
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %59, align 8, !noalias !580
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #21, !range !8
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !580
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !9

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !10

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.346"* %38, i64 %46) #21, !noalias !580
  %95 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %59, align 8, !noalias !580
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !580
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::ProgramPipeline"* null, %"class.gl::ProgramPipeline"** %97, align 8, !noalias !580
  %98 = load i8*, i8** %47, align 8, !noalias !580
  %99 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %59, align 8, !noalias !580
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.347"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #21, !noalias !580
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !9

108:                                              ; preds = %100
  tail call void @llvm.trap() #21
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::ProgramPipeline"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::ProgramPipeline"* %2, %"class.gl::ProgramPipeline"** %112, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.346"*, i64) local_unnamed_addr #23 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #21, !range !8
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !9

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.346"* %0, i64 1) #21
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.346"* %0) #21
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.346"* %0, i64 %58) #21
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #21, !range !8
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.346"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #27
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.347"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #21
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #21, !range !8
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.347"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.347"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #21
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #27
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.346"*) local_unnamed_addr #23 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #21
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #21, !range !8
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !9

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.347"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.347"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #21
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.347"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.347"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.347"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #21
  %118 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.347"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

declare i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"*, i8 zeroext, %"class.gl::Context"*, %"class.gl::State"*) local_unnamed_addr #3

declare void @_ZN2gl17TransformFeedback15onVerticesDrawnEPKNS_7ContextEii(%"class.gl::TransformFeedback"*, %"class.gl::Context"*, i32, i32) local_unnamed_addr #3

declare dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State29getIndexedShaderStorageBufferEm(%"class.gl::State"*, i64) local_unnamed_addr #3

declare void @_ZN2gl6Buffer13onDataChangedEv(%"class.gl::Buffer"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #22

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #25

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #25

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.1057"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.1057", %"class.std::__1::__tree.1057"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #21
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #21
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #17

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1057"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #21
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.1057"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %7 = bitcast %"class.std::__1::__tree_node_base"** %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %10, label %49

10:                                               ; preds = %3
  %11 = call i8* @_Znwm(i64 56) #27, !noalias !583
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1, !noalias !583
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %18, i64 24, i1 false) #21, !noalias !583
  br label %25

19:                                               ; preds = %10
  %20 = bitcast i8* %12 to %"class.std::__1::basic_string"*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !noalias !583
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !583
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %22, i64 %24) #21, !noalias !583
  br label %25

25:                                               ; preds = %17, %19
  %26 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %11 to %"class.std::__1::__tree_node"*
  %29 = bitcast i8* %11 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds i8, i8* %11, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #21
  %31 = bitcast i8* %30 to i64*
  store i64 %27, i64* %31, align 8
  %32 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8**
  store i8* %11, i8** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree.1057", %"class.std::__1::__tree.1057"* %0, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %25
  %39 = ptrtoint %"class.std::__1::__tree_node_base"* %36 to i64
  %40 = bitcast %"class.std::__1::__tree.1057"* %0 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  br label %42

42:                                               ; preds = %38, %25
  %43 = phi %"class.std::__1::__tree_node_base"* [ %29, %25 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree.1057", %"class.std::__1::__tree.1057"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %45, %"class.std::__1::__tree_node_base"* %43) #21
  %46 = getelementptr inbounds %"class.std::__1::__tree.1057", %"class.std::__1::__tree.1057"* %0, i64 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %42, %3
  %50 = phi i8 [ 1, %42 ], [ 0, %3 ]
  %51 = phi %"class.std::__1::__tree_node"* [ %28, %42 ], [ %8, %3 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #21
  %53 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %52, 0
  %54 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %53, i8 %50, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.1057"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.1057", %"class.std::__1::__tree.1057"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.1057", %"class.std::__1::__tree.1057"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #21
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #21
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #1 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #6

declare i32 @_ZN2gl5State18syncActiveTexturesEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State16syncTexturesInitEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State14syncImagesInitEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State19syncReadAttachmentsEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State19syncDrawAttachmentsEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State15syncVertexArrayEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State12syncTexturesEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State10syncImagesEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State12syncSamplersEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State19syncReadFramebufferEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State19syncDrawFramebufferEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State11syncProgramEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare { i64, i32 } @_ZNK2gl11Framebuffer10getExtentsEv(%"class.gl::Framebuffer"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"*) local_unnamed_addr #3

declare zeroext i8 @_ZNK2gl13BlendStateExt19getColorMaskIndexedEm(%"class.gl::BlendStateExt"*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZNK2gl17FramebufferStatus10isCompleteEv(%"struct.gl::FramebufferStatus"*) local_unnamed_addr #3

declare void @_ZN2gl11VertexArray22setVertexAttribPointerEPKNS_7ContextEmPNS_6BufferEiNS_16VertexAttribTypeEbiPKv(%"class.gl::VertexArray"*, %"class.gl::Context"*, i64, %"class.gl::Buffer"*, i32, i32, i1 zeroext, i32, i8*) local_unnamed_addr #3

declare void @_ZN2gl11VertexArray22setVertexAttribBindingEPKNS_7ContextEmj(%"class.gl::VertexArray"*, %"class.gl::Context"*, i64, i32) local_unnamed_addr #3

declare void @_ZN2gl11VertexArray23setVertexAttribIPointerEPKNS_7ContextEmPNS_6BufferEiNS_16VertexAttribTypeEiPKv(%"class.gl::VertexArray"*, %"class.gl::Context"*, i64, %"class.gl::Buffer"*, i32, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.gl::Renderbuffer"* @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE25checkObjectAllocationImplIJEEEPS1_PN2rx13GLImplFactoryES3_DpT_(%"class.gl::TypedResourceManager.279"*, %"class.rx::GLImplFactory"*, i32) local_unnamed_addr #5 comdat align 2 {
  %4 = tail call %"class.gl::Renderbuffer"* @_ZN2gl19RenderbufferManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_14RenderbufferIDE(%"class.rx::GLImplFactory"* %1, i32 %2) #21
  %5 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %5, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %10, label %16

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 1
  %12 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %12, i64 %6
  %14 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %13, align 8
  %15 = icmp eq %"class.gl::Renderbuffer"* %14, inttoptr (i64 -1 to %"class.gl::Renderbuffer"*)
  br i1 %15, label %76, label %78

16:                                               ; preds = %3
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, %6
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %67, %16
  %38 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %39 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %40 = and i64 %38, %27
  %41 = getelementptr inbounds i8, i8* %25, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %35, %43
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37
  %48 = zext i16 %45 to i32
  %49 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %36, align 8
  br label %50

50:                                               ; preds = %59, %47
  %51 = phi i32 [ %48, %47 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #21, !range !8
  %53 = zext i32 %52 to i64
  %54 = add i64 %40, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %49, i64 %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %2
  br i1 %58, label %70, label %59, !prof !9

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %37
  %64 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %76, !prof !10

67:                                               ; preds = %63
  %68 = add i64 %39, 16
  %69 = add i64 %68, %40
  br label %37

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #21
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %78, label %75, !prof !9

75:                                               ; preds = %70
  tail call void @llvm.trap() #21
  unreachable

76:                                               ; preds = %63, %10
  %77 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator7reserveEj(%"class.gl::HandleAllocator"* %77, i32 %2) #21
  br label %78

78:                                               ; preds = %10, %70, %76
  tail call void @_ZN2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE6assignES2_PS1_(%"class.gl::ResourceMap.280"* %5, i32 %2, %"class.gl::Renderbuffer"* %4)
  ret %"class.gl::Renderbuffer"* %4
}

declare %"class.gl::Renderbuffer"* @_ZN2gl19RenderbufferManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_14RenderbufferIDE(%"class.rx::GLImplFactory"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE6assignES2_PS1_(%"class.gl::ResourceMap.280"*, i32, %"class.gl::Renderbuffer"*) local_unnamed_addr #5 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 1
  %16 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #27
  %22 = bitcast i8* %21 to %"class.gl::Renderbuffer"**
  %23 = bitcast %"class.gl::Renderbuffer"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %22, i64 %8
  %25 = bitcast %"class.gl::Renderbuffer"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::Renderbuffer"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::Renderbuffer"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #27
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 1
  %34 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.282", %"class.absl::container_internal::raw_hash_map.282"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !586
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.282", %"class.absl::container_internal::raw_hash_map.282"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !586
  %49 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !586
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !586
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %59, align 8, !noalias !586
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #21, !range !8
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !586
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !9

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !10

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.283"* %38, i64 %46) #21, !noalias !586
  %95 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %59, align 8, !noalias !586
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !586
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::Renderbuffer"* null, %"class.gl::Renderbuffer"** %97, align 8, !noalias !586
  %98 = load i8*, i8** %47, align 8, !noalias !586
  %99 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %59, align 8, !noalias !586
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.284"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #21, !noalias !586
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !9

108:                                              ; preds = %100
  tail call void @llvm.trap() #21
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::Renderbuffer"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::Renderbuffer"* %2, %"class.gl::Renderbuffer"** %112, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.283"*, i64) local_unnamed_addr #23 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #21, !range !8
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !9

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.283"* %0, i64 1) #21
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.283"* %0) #21
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.283"* %0, i64 %58) #21
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #21, !range !8
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.283"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #27
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.284"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #21
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #21, !range !8
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.284"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.284"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #21
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #27
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.283"*) local_unnamed_addr #23 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #21
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #21, !range !8
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !9

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.284"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.284"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #21
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.284"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.284"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.284"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #21
  %118 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.284"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

declare i32 @_ZN2gl15ProgramPipeline4linkEPKNS_7ContextE(%"class.gl::ProgramPipeline"*, %"class.gl::Context"*) local_unnamed_addr #3

declare dereferenceable(16) %"struct.gl::FramebufferStatus"* @_ZNK2gl11Framebuffer15checkStatusImplEPKNS_7ContextE(%"class.gl::Framebuffer"*, %"class.gl::Context"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2gl16FramebufferState9isDefaultEv(%"class.gl::FramebufferState"*) local_unnamed_addr #3

declare i32 @_ZNK2gl7Program11getRefCountEv(%"class.gl::Program"*) local_unnamed_addr #3

declare void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #26

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #21
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #21
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #21
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #21
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #21
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #21
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #21
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #21
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #21
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #21
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #27
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #21
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #21
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #27
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #21
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #21
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #3

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl14BindingPointerINS_8CompilerEED0Ev(%"class.gl::BindingPointer"*) unnamed_addr #16 comdat align 2 {
  %2 = bitcast %"class.gl::BindingPointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #27
  ret void
}

declare void @_ZN5angle13ScratchBufferC1Ev(%"class.angle::ScratchBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5angle12FrameCaptureD1Ev(%"class.angle::FrameCapture"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl7ContextERmEEEvDpOT_(%"class.std::__1::vector.337"*, %"class.gl::Context"** dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #16 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.337", %"class.std::__1::vector.337"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.angle::ObserverBinding"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.337"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 576460752303423487
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.337"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #28
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.337", %"class.std::__1::vector.337"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.angle::ObserverBinding"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 5
  %21 = icmp ult i64 %20, 288230376151711743
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 4
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 576460752303423487
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #28
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 576460752303423487, %15 ]
  %32 = shl i64 %31, 5
  %33 = tail call i8* @_Znwm(i64 %32) #27
  %34 = bitcast i8* %33 to %"class.angle::ObserverBinding"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"class.angle::ObserverBinding"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %37, i64 %10
  %39 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %37, i64 %36
  %40 = ptrtoint %"class.angle::ObserverBinding"* %39 to i64
  %41 = load %"class.gl::Context"*, %"class.gl::Context"** %1, align 8
  %42 = icmp eq %"class.gl::Context"* %41, null
  %43 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %41, i64 0, i32 1
  %44 = select i1 %42, %"class.angle::ObserverInterface"* null, %"class.angle::ObserverInterface"* %43
  %45 = load i64, i64* %2, align 8
  tail call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %38, %"class.angle::ObserverInterface"* %44, i64 %45) #21
  %46 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %38, i64 1
  %47 = ptrtoint %"class.angle::ObserverBinding"* %46 to i64
  %48 = getelementptr inbounds %"class.std::__1::vector.337", %"class.std::__1::vector.337"* %0, i64 0, i32 0, i32 0
  %49 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %48, align 8
  %50 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %4, align 8
  %51 = icmp eq %"class.angle::ObserverBinding"* %50, %49
  br i1 %51, label %52, label %54

52:                                               ; preds = %35
  %53 = ptrtoint %"class.angle::ObserverBinding"* %49 to i64
  br label %63

54:                                               ; preds = %35, %54
  %55 = phi %"class.angle::ObserverBinding"* [ %57, %54 ], [ %38, %35 ]
  %56 = phi %"class.angle::ObserverBinding"* [ %58, %54 ], [ %50, %35 ]
  %57 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %55, i64 -1
  %58 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %56, i64 -1
  tail call void @_ZN5angle15ObserverBindingC1ERKS0_(%"class.angle::ObserverBinding"* %57, %"class.angle::ObserverBinding"* dereferenceable(32) %58) #21
  %59 = icmp eq %"class.angle::ObserverBinding"* %58, %49
  br i1 %59, label %60, label %54

60:                                               ; preds = %54
  %61 = load i64, i64* %7, align 8
  %62 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %4, align 8
  br label %63

63:                                               ; preds = %52, %60
  %64 = phi %"class.angle::ObserverBinding"* [ %49, %52 ], [ %62, %60 ]
  %65 = phi %"class.angle::ObserverBinding"* [ %38, %52 ], [ %57, %60 ]
  %66 = phi i64 [ %53, %52 ], [ %61, %60 ]
  %67 = ptrtoint %"class.angle::ObserverBinding"* %65 to i64
  store i64 %67, i64* %7, align 8
  store i64 %47, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %68 = inttoptr i64 %66 to %"class.angle::ObserverBinding"*
  %69 = icmp eq %"class.angle::ObserverBinding"* %64, %68
  br i1 %69, label %74, label %70

70:                                               ; preds = %63, %70
  %71 = phi %"class.angle::ObserverBinding"* [ %72, %70 ], [ %64, %63 ]
  %72 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %71, i64 -1
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %72) #21
  %73 = icmp eq %"class.angle::ObserverBinding"* %72, %68
  br i1 %73, label %74, label %70

74:                                               ; preds = %70, %63
  %75 = icmp eq i64 %66, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %74
  %77 = inttoptr i64 %66 to i8*
  tail call void @_ZdlPv(i8* %77) #27
  br label %78

78:                                               ; preds = %74, %76
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #26

declare void @_ZN5angle15ObserverBindingC1ERKS0_(%"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2gl13GLES1RendererD1Ev(%"class.gl::GLES1Renderer"*) unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7FenceNVEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.549"*, i64) local_unnamed_addr #23 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #21, !range !8
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !9

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7FenceNVEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.549"* %0, i64 1) #21
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7FenceNVEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.549"* %0) #21
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7FenceNVEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.549"* %0, i64 %58) #21
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #21, !range !8
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7FenceNVEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.549"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #27
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.550"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #21
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #21, !range !8
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.550"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.550"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #21
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #27
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7FenceNVEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.549"*) local_unnamed_addr #23 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #21
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.549", %"class.absl::container_internal::raw_hash_set.549"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #21, !range !8
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !9

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.550"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.550"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #21
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.550"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.550"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.550"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #21
  %118 = load %"union.absl::container_internal::map_slot_type.550"*, %"union.absl::container_internal::map_slot_type.550"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.550", %"union.absl::container_internal::map_slot_type.550"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.550"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #22

declare i32 @_ZN2gl5Query9getResultEPKNS_7ContextEPi(%"class.gl::Query"*, %"class.gl::Context"*, i32*) local_unnamed_addr #3

declare i32 @_ZN2gl5Query17isResultAvailableEPKNS_7ContextEPb(%"class.gl::Query"*, %"class.gl::Context"*, i8*) local_unnamed_addr #3

declare i32 @_ZN2gl18CastFromStateValueIijEET_jT0_(i32, i32) local_unnamed_addr #3

declare i32 @_ZN2gl5Query9getResultEPKNS_7ContextEPj(%"class.gl::Query"*, %"class.gl::Context"*, i32*) local_unnamed_addr #3

declare i32 @_ZN2gl18CastFromStateValueIjjEET_jT0_(i32, i32) local_unnamed_addr #3

declare i32 @_ZN2gl5Query9getResultEPKNS_7ContextEPl(%"class.gl::Query"*, %"class.gl::Context"*, i64*) local_unnamed_addr #3

declare i64 @_ZN2gl18CastFromStateValueIljEET_jT0_(i32, i32) local_unnamed_addr #3

declare i32 @_ZN2gl5Query9getResultEPKNS_7ContextEPm(%"class.gl::Query"*, %"class.gl::Context"*, i64*) local_unnamed_addr #3

declare i64 @_ZN2gl18CastFromStateValueImjEET_jT0_(i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl5QueryEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.559"*, i64) local_unnamed_addr #23 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #21, !range !8
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !9

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl5QueryEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.559"* %0, i64 1) #21
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl5QueryEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.559"* %0) #21
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl5QueryEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.559"* %0, i64 %58) #21
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #21, !range !8
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl5QueryEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.559"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #27
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.560"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #21
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #21, !range !8
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.560"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.560"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #21
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #27
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl5QueryEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.559"*) local_unnamed_addr #23 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #21
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #21, !range !8
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !9

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.560"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.560"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #21
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.560"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.560"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.560"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #21
  %118 = load %"union.absl::container_internal::map_slot_type.560"*, %"union.absl::container_internal::map_slot_type.560"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.560", %"union.absl::container_internal::map_slot_type.560"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.560"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11VertexArrayEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.569"*, i64) local_unnamed_addr #23 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #21, !range !8
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !9

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11VertexArrayEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.569"* %0, i64 1) #21
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11VertexArrayEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.569"* %0) #21
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11VertexArrayEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.569"* %0, i64 %58) #21
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #21, !range !8
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11VertexArrayEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.569"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #27
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.570"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #21
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #21, !range !8
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.570"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.570"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #21
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #27
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11VertexArrayEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.569"*) local_unnamed_addr #23 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #21
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.569", %"class.absl::container_internal::raw_hash_set.569"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #21, !range !8
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !9

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.570"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.570"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #21
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.570"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.570"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.570"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #21
  %118 = load %"union.absl::container_internal::map_slot_type.570"*, %"union.absl::container_internal::map_slot_type.570"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.570", %"union.absl::container_internal::map_slot_type.570"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.570"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl17TransformFeedbackEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.579"*, i64) local_unnamed_addr #23 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #21, !range !8
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !9

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl17TransformFeedbackEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.579"* %0, i64 1) #21
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl17TransformFeedbackEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.579"* %0) #21
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl17TransformFeedbackEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.579"* %0, i64 %58) #21
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #21, !range !8
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl17TransformFeedbackEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.579"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #27
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.580"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #21
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #21, !range !8
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.580"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.580"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #21
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #27
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl17TransformFeedbackEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.579"*) local_unnamed_addr #23 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #21
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.579", %"class.absl::container_internal::raw_hash_set.579"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #21, !range !8
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !9

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.580"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.580"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #21
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.580"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.580"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.580"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #21
  %118 = load %"union.absl::container_internal::map_slot_type.580"*, %"union.absl::container_internal::map_slot_type.580"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.580", %"union.absl::container_internal::map_slot_type.580"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.580"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #26

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN2gl13ExtensionInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree.937"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.937", %"class.std::__1::__tree.937"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.1142"**
  %5 = load %"class.std::__1::__tree_node.1142"*, %"class.std::__1::__tree_node.1142"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.1142"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node.1142"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.1142", %"class.std::__1::__tree_node.1142"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.1142", %"class.std::__1::__tree_node.1142"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #21
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.1142", %"class.std::__1::__tree_node.1142"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node.1142"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node.1142", %"class.std::__1::__tree_node.1142"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node.1142"* %22 to %"class.std::__1::__tree_node.1142"**
  %53 = select i1 %48, %"class.std::__1::__tree_node.1142"** %50, %"class.std::__1::__tree_node.1142"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node.1142"*, %"class.std::__1::__tree_node.1142"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node.1142"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #21
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN2gl13ExtensionInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree.937"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.937", %"class.std::__1::__tree.937"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.1142"**
  %6 = load %"class.std::__1::__tree_node.1142"*, %"class.std::__1::__tree_node.1142"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.1142"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.937", %"class.std::__1::__tree.937"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node.1142"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.1142", %"class.std::__1::__tree_node.1142"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.1142", %"class.std::__1::__tree_node.1142"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #21
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.1142", %"class.std::__1::__tree_node.1142"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.1142", %"class.std::__1::__tree_node.1142"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #21
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node.1142", %"class.std::__1::__tree_node.1142"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node.1142", %"class.std::__1::__tree_node.1142"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.1142", %"class.std::__1::__tree_node.1142"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node.1142"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.36"*, %"class.std::__1::__tree_node.1143"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1143"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1143"* %1 to %"class.std::__1::__tree_node.1143"**
  %6 = load %"class.std::__1::__tree_node.1143"*, %"class.std::__1::__tree_node.1143"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.36"* %0, %"class.std::__1::__tree_node.1143"* %6) #21
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1143", %"class.std::__1::__tree_node.1143"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1143"**
  %9 = load %"class.std::__1::__tree_node.1143"*, %"class.std::__1::__tree_node.1143"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.36"* %0, %"class.std::__1::__tree_node.1143"* %9) #21
  %10 = bitcast %"class.std::__1::__tree_node.1143"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #27
  ret void

11:                                               ; preds = %2
  ret void
}

declare dereferenceable(24) %"class.angle::ScratchBuffer"* @_ZN5angle13ScratchBufferaSEOS0_(%"class.angle::ScratchBuffer"*, %"class.angle::ScratchBuffer"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2gl4priv6FmtHexILi8EjEERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES7_T0_(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #1 comdat {
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), i64 2) #21
  %5 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr i8, i8* %6, i64 -24
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 %9
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 24
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 144
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %41

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #21
  %24 = bitcast i8* %11 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %3, %"class.std::__1::ios_base"* %24) #21
  %25 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #21
  %26 = bitcast %"class.std::__1::locale::facet"* %25 to %"class.std::__1::ctype"*
  %27 = bitcast %"class.std::__1::locale::facet"* %25 to i8 (%"class.std::__1::ctype"*, i8)***
  %28 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %27, align 8
  %29 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %28, i64 7
  %30 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %29, align 8
  %31 = call signext i8 %30(%"class.std::__1::ctype"* %26, i8 signext 32) #21
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #21
  %32 = sext i8 %31 to i32
  store i32 %32, i32* %19, align 8
  %33 = load i8*, i8** %5, align 8
  %34 = getelementptr i8, i8* %33, i64 -24
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds i8, i8* %10, i64 %36
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 8
  br label %41

41:                                               ; preds = %2, %22
  %42 = phi i32* [ %13, %2 ], [ %39, %22 ]
  %43 = phi i32 [ %14, %2 ], [ %40, %22 ]
  %44 = phi i32 [ %20, %2 ], [ %32, %22 ]
  %45 = and i32 %43, -75
  %46 = or i32 %45, 8
  store i32 %46, i32* %42, align 8
  %47 = load i8*, i8** %5, align 8
  %48 = getelementptr i8, i8* %47, i64 -24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %10, i64 %50
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 8
  %55 = or i32 %54, 16384
  store i32 %55, i32* %53, align 8
  %56 = load i8*, i8** %5, align 8
  %57 = getelementptr i8, i8* %56, i64 -24
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds i8, i8* %10, i64 %59
  %61 = getelementptr inbounds i8, i8* %60, i64 24
  %62 = bitcast i8* %61 to i64*
  store i64 8, i64* %62, align 8
  %63 = load i8*, i8** %5, align 8
  %64 = getelementptr i8, i8* %63, i64 -24
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds i8, i8* %10, i64 %66
  %68 = getelementptr inbounds i8, i8* %67, i64 144
  %69 = bitcast i8* %68 to i32*
  store i32 48, i32* %69, align 8
  %70 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %0, i32 %1) #21
  %71 = load i8*, i8** %5, align 8
  %72 = getelementptr i8, i8* %71, i64 -24
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds i8, i8* %10, i64 %74
  %76 = getelementptr inbounds i8, i8* %75, i64 8
  %77 = bitcast i8* %76 to i32*
  store i32 %14, i32* %77, align 8
  %78 = load i8*, i8** %5, align 8
  %79 = getelementptr i8, i8* %78, i64 -24
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds i8, i8* %10, i64 %81
  %83 = getelementptr inbounds i8, i8* %82, i64 24
  %84 = bitcast i8* %83 to i64*
  store i64 %17, i64* %84, align 8
  %85 = load i8*, i8** %5, align 8
  %86 = getelementptr i8, i8* %85, i64 -24
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds i8, i8* %10, i64 %88
  %90 = getelementptr inbounds i8, i8* %89, i64 144
  %91 = bitcast i8* %90 to i32*
  %92 = shl i32 %44, 24
  %93 = ashr exact i32 %92, 24
  store i32 %93, i32* %91, align 8
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #1 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

attributes #0 = { cold noreturn nounwind }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #21 = { nounwind }
attributes #22 = { nounwind readnone speculatable }
attributes #23 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #24 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #25 = { nofree nounwind }
attributes #26 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #27 = { builtin nounwind }
attributes #28 = { noreturn nounwind }
attributes #29 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!5 = distinct !{!5, !"_ZN3egl5Error7NoErrorEv"}
!6 = distinct !{!6, !7, !"_ZN3egl7NoErrorEv: argument 0"}
!7 = distinct !{!7, !"_ZN3egl7NoErrorEv"}
!8 = !{i32 0, i32 33}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{!"branch_weights", i32 1, i32 2000}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK2gl11ResourceMapINS_7FenceNVENS_9FenceNVIDEE5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK2gl11ResourceMapINS_7FenceNVENS_9FenceNVIDEE5beginEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK2gl11ResourceMapINS_5QueryENS_7QueryIDEE5beginEv: argument 0"}
!16 = distinct !{!16, !"_ZNK2gl11ResourceMapINS_5QueryENS_7QueryIDEE5beginEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK2gl11ResourceMapINS_11VertexArrayENS_13VertexArrayIDEE5beginEv: argument 0"}
!19 = distinct !{!19, !"_ZNK2gl11ResourceMapINS_11VertexArrayENS_13VertexArrayIDEE5beginEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK2gl11ResourceMapINS_17TransformFeedbackENS_19TransformFeedbackIDEE5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZNK2gl11ResourceMapINS_17TransformFeedbackENS_19TransformFeedbackIDEE5beginEv"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!25 = distinct !{!25, !"_ZN3egl5Error7NoErrorEv"}
!26 = distinct !{!26, !27, !"_ZN3egl7NoErrorEv: argument 0"}
!27 = distinct !{!27, !"_ZN3egl7NoErrorEv"}
!28 = !{!29, !31}
!29 = distinct !{!29, !30, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!30 = distinct !{!30, !"_ZN3egl5Error7NoErrorEv"}
!31 = distinct !{!31, !32, !"_ZN3egl7NoErrorEv: argument 0"}
!32 = distinct !{!32, !"_ZN3egl7NoErrorEv"}
!33 = !{!34, !36}
!34 = distinct !{!34, !35, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!35 = distinct !{!35, !"_ZN3egl5Error7NoErrorEv"}
!36 = distinct !{!36, !37, !"_ZN3egl7NoErrorEv: argument 0"}
!37 = distinct !{!37, !"_ZN3egl7NoErrorEv"}
!38 = !{!"branch_weights", i32 1, i32 1048575}
!39 = !{!40, !42}
!40 = distinct !{!40, !41, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!41 = distinct !{!41, !"_ZN3egl5Error7NoErrorEv"}
!42 = distinct !{!42, !43, !"_ZN3egl7NoErrorEv: argument 0"}
!43 = distinct !{!43, !"_ZN3egl7NoErrorEv"}
!44 = !{!45, !47}
!45 = distinct !{!45, !46, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!46 = distinct !{!46, !"_ZN3egl5Error7NoErrorEv"}
!47 = distinct !{!47, !48, !"_ZN3egl7NoErrorEv: argument 0"}
!48 = distinct !{!48, !"_ZN3egl7NoErrorEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl7FenceNVEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!51 = distinct !{!51, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl7FenceNVEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNK2gl6Shader16getInfoLogStringEv: argument 0"}
!54 = distinct !{!54, !"_ZNK2gl6Shader16getInfoLogStringEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZN2gl12_GLOBAL__N_125GetObjectLabelFromPointerEiPKc: argument 0"}
!57 = distinct !{!57, !"_ZN2gl12_GLOBAL__N_125GetObjectLabelFromPointerEiPKc"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZN2gl12_GLOBAL__N_125GetObjectLabelFromPointerEiPKc: argument 0"}
!60 = distinct !{!60, !"_ZN2gl12_GLOBAL__N_125GetObjectLabelFromPointerEiPKc"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!63 = distinct !{!63, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNK2gl11VertexArray20getClientAttribsMaskEv: argument 0"}
!66 = distinct !{!66, !"_ZNK2gl11VertexArray20getClientAttribsMaskEv"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNK5angle7BitSetTILm16EmmEcoEv: argument 0"}
!69 = distinct !{!69, !"_ZNK5angle7BitSetTILm16EmmEcoEv"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!72 = distinct !{!72, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!73 = !{i64 0, i64 65}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!76 = distinct !{!76, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNK2gl11VertexArray20getClientAttribsMaskEv: argument 0"}
!79 = distinct !{!79, !"_ZNK2gl11VertexArray20getClientAttribsMaskEv"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNK5angle7BitSetTILm16EmmEcoEv: argument 0"}
!82 = distinct !{!82, !"_ZNK5angle7BitSetTILm16EmmEcoEv"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!85 = distinct !{!85, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!88 = distinct !{!88, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZNK2gl11VertexArray20getClientAttribsMaskEv: argument 0"}
!91 = distinct !{!91, !"_ZNK2gl11VertexArray20getClientAttribsMaskEv"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZNK5angle7BitSetTILm16EmmEcoEv: argument 0"}
!94 = distinct !{!94, !"_ZNK5angle7BitSetTILm16EmmEcoEv"}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!97 = distinct !{!97, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl5QueryEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!100 = distinct !{!100, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl5QueryEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!101 = !{!102}
!102 = distinct !{!102, !103}
!103 = distinct !{!103, !"LVerDomain"}
!104 = !{!105}
!105 = distinct !{!105, !103}
!106 = distinct !{!106, !107}
!107 = !{!"llvm.loop.isvectorized", i32 1}
!108 = distinct !{!108, !109}
!109 = !{!"llvm.loop.unroll.disable"}
!110 = distinct !{!110, !109}
!111 = distinct !{!111, !107}
!112 = !{!113}
!113 = distinct !{!113, !114}
!114 = distinct !{!114, !"LVerDomain"}
!115 = !{!116}
!116 = distinct !{!116, !114}
!117 = distinct !{!117, !107}
!118 = distinct !{!118, !109}
!119 = distinct !{!119, !109}
!120 = distinct !{!120, !107}
!121 = !{!122}
!122 = distinct !{!122, !123}
!123 = distinct !{!123, !"LVerDomain"}
!124 = !{!125}
!125 = distinct !{!125, !123}
!126 = distinct !{!126, !107}
!127 = distinct !{!127, !109}
!128 = distinct !{!128, !109}
!129 = distinct !{!129, !107}
!130 = !{!131}
!131 = distinct !{!131, !132, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!132 = distinct !{!132, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!133 = !{!134}
!134 = distinct !{!134, !135, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv: argument 0"}
!135 = distinct !{!135, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv"}
!136 = !{!137}
!137 = distinct !{!137, !138, !"_ZNK5angle11BitSetArrayILm96EE5beginEv: argument 0"}
!138 = distinct !{!138, !"_ZNK5angle11BitSetArrayILm96EE5beginEv"}
!139 = !{!140}
!140 = distinct !{!140, !141, !"_ZNK5angle7BitSetTILm64EmmE5beginEv: argument 0"}
!141 = distinct !{!141, !"_ZNK5angle7BitSetTILm64EmmE5beginEv"}
!142 = !{!143}
!143 = distinct !{!143, !144, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!144 = distinct !{!144, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!145 = !{!146}
!146 = distinct !{!146, !147, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv: argument 0"}
!147 = distinct !{!147, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv"}
!148 = !{!149}
!149 = distinct !{!149, !150, !"_ZNK5angle11BitSetArrayILm96EE5beginEv: argument 0"}
!150 = distinct !{!150, !"_ZNK5angle11BitSetArrayILm96EE5beginEv"}
!151 = !{!152}
!152 = distinct !{!152, !153, !"_ZNK5angle7BitSetTILm64EmmE5beginEv: argument 0"}
!153 = distinct !{!153, !"_ZNK5angle7BitSetTILm64EmmE5beginEv"}
!154 = !{!155}
!155 = distinct !{!155, !156, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!156 = distinct !{!156, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!157 = !{!158}
!158 = distinct !{!158, !159, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv: argument 0"}
!159 = distinct !{!159, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv"}
!160 = !{!161}
!161 = distinct !{!161, !162, !"_ZNK5angle11BitSetArrayILm96EE5beginEv: argument 0"}
!162 = distinct !{!162, !"_ZNK5angle11BitSetArrayILm96EE5beginEv"}
!163 = !{!164}
!164 = distinct !{!164, !165, !"_ZNK5angle7BitSetTILm64EmmE5beginEv: argument 0"}
!165 = distinct !{!165, !"_ZNK5angle7BitSetTILm64EmmE5beginEv"}
!166 = !{!167}
!167 = distinct !{!167, !168, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!168 = distinct !{!168, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!169 = !{!170}
!170 = distinct !{!170, !171, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv: argument 0"}
!171 = distinct !{!171, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv"}
!172 = !{!173}
!173 = distinct !{!173, !174, !"_ZNK5angle11BitSetArrayILm96EE5beginEv: argument 0"}
!174 = distinct !{!174, !"_ZNK5angle11BitSetArrayILm96EE5beginEv"}
!175 = !{!176}
!176 = distinct !{!176, !177, !"_ZNK5angle7BitSetTILm64EmmE5beginEv: argument 0"}
!177 = distinct !{!177, !"_ZNK5angle7BitSetTILm64EmmE5beginEv"}
!178 = !{!179}
!179 = distinct !{!179, !180, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!180 = distinct !{!180, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!181 = !{!182}
!182 = distinct !{!182, !183, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv: argument 0"}
!183 = distinct !{!183, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv"}
!184 = !{!185}
!185 = distinct !{!185, !186, !"_ZNK5angle11BitSetArrayILm96EE5beginEv: argument 0"}
!186 = distinct !{!186, !"_ZNK5angle11BitSetArrayILm96EE5beginEv"}
!187 = !{!188}
!188 = distinct !{!188, !189, !"_ZNK5angle7BitSetTILm64EmmE5beginEv: argument 0"}
!189 = distinct !{!189, !"_ZNK5angle7BitSetTILm64EmmE5beginEv"}
!190 = !{!191}
!191 = distinct !{!191, !192, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!192 = distinct !{!192, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!193 = !{!194}
!194 = distinct !{!194, !195, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv: argument 0"}
!195 = distinct !{!195, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv"}
!196 = !{!197}
!197 = distinct !{!197, !198, !"_ZNK5angle11BitSetArrayILm96EE5beginEv: argument 0"}
!198 = distinct !{!198, !"_ZNK5angle11BitSetArrayILm96EE5beginEv"}
!199 = !{!200}
!200 = distinct !{!200, !201, !"_ZNK5angle7BitSetTILm64EmmE5beginEv: argument 0"}
!201 = distinct !{!201, !"_ZNK5angle7BitSetTILm64EmmE5beginEv"}
!202 = !{!203}
!203 = distinct !{!203, !204, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!204 = distinct !{!204, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!205 = !{!206}
!206 = distinct !{!206, !207, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv: argument 0"}
!207 = distinct !{!207, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv"}
!208 = !{!209}
!209 = distinct !{!209, !210, !"_ZNK5angle11BitSetArrayILm96EE5beginEv: argument 0"}
!210 = distinct !{!210, !"_ZNK5angle11BitSetArrayILm96EE5beginEv"}
!211 = !{!212}
!212 = distinct !{!212, !213, !"_ZNK5angle7BitSetTILm64EmmE5beginEv: argument 0"}
!213 = distinct !{!213, !"_ZNK5angle7BitSetTILm64EmmE5beginEv"}
!214 = !{!215}
!215 = distinct !{!215, !216, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!216 = distinct !{!216, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!217 = !{!218}
!218 = distinct !{!218, !219, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv: argument 0"}
!219 = distinct !{!219, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv"}
!220 = !{!221}
!221 = distinct !{!221, !222, !"_ZNK5angle11BitSetArrayILm96EE5beginEv: argument 0"}
!222 = distinct !{!222, !"_ZNK5angle11BitSetArrayILm96EE5beginEv"}
!223 = !{!224}
!224 = distinct !{!224, !225, !"_ZNK5angle7BitSetTILm64EmmE5beginEv: argument 0"}
!225 = distinct !{!225, !"_ZNK5angle7BitSetTILm64EmmE5beginEv"}
!226 = !{!227}
!227 = distinct !{!227, !228, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!228 = distinct !{!228, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!229 = !{!230}
!230 = distinct !{!230, !231, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!231 = distinct !{!231, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!232 = !{!233}
!233 = distinct !{!233, !234, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl11VertexArrayEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!234 = distinct !{!234, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl11VertexArrayEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!235 = !{!236}
!236 = distinct !{!236, !237, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl17TransformFeedbackEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!237 = distinct !{!237, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl17TransformFeedbackEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!238 = !{!239}
!239 = distinct !{!239, !240, !"_ZNK2gl11ResourceMapINS_11VertexArrayENS_13VertexArrayIDEE5beginEv: argument 0"}
!240 = distinct !{!240, !"_ZNK2gl11ResourceMapINS_11VertexArrayENS_13VertexArrayIDEE5beginEv"}
!241 = !{!242}
!242 = distinct !{!242, !243, !"_ZNK2gl11ResourceMapINS_17TransformFeedbackENS_19TransformFeedbackIDEE5beginEv: argument 0"}
!243 = distinct !{!243, !"_ZNK2gl11ResourceMapINS_17TransformFeedbackENS_19TransformFeedbackIDEE5beginEv"}
!244 = !{!245}
!245 = distinct !{!245, !246, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!246 = distinct !{!246, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!247 = !{!248}
!248 = distinct !{!248, !249, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!249 = distinct !{!249, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!250 = !{!251}
!251 = distinct !{!251, !252, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!252 = distinct !{!252, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!253 = !{!254}
!254 = distinct !{!254, !255, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!255 = distinct !{!255, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!256 = !{!257}
!257 = distinct !{!257, !258, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!258 = distinct !{!258, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!259 = !{!260}
!260 = distinct !{!260, !261, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!261 = distinct !{!261, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!262 = !{!263}
!263 = distinct !{!263, !264, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!264 = distinct !{!264, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!265 = !{!266}
!266 = distinct !{!266, !267, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!267 = distinct !{!267, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!268 = !{!269}
!269 = distinct !{!269, !270, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!270 = distinct !{!270, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!271 = !{!272}
!272 = distinct !{!272, !273, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!273 = distinct !{!273, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!274 = !{!275}
!275 = distinct !{!275, !276, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!276 = distinct !{!276, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!277 = !{!278}
!278 = distinct !{!278, !279, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!279 = distinct !{!279, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!280 = !{!281}
!281 = distinct !{!281, !282, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!282 = distinct !{!282, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!283 = !{!284}
!284 = distinct !{!284, !285, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!285 = distinct !{!285, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!286 = !{!287}
!287 = distinct !{!287, !288, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!288 = distinct !{!288, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!289 = !{!290}
!290 = distinct !{!290, !291, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!291 = distinct !{!291, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!292 = !{!293}
!293 = distinct !{!293, !294, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!294 = distinct !{!294, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!295 = !{!296}
!296 = distinct !{!296, !297, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!297 = distinct !{!297, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!298 = !{!299}
!299 = distinct !{!299, !300, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!300 = distinct !{!300, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!301 = !{!302}
!302 = distinct !{!302, !303, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!303 = distinct !{!303, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!304 = !{!305}
!305 = distinct !{!305, !306, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!306 = distinct !{!306, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!307 = !{!308}
!308 = distinct !{!308, !309, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!309 = distinct !{!309, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!310 = !{!311}
!311 = distinct !{!311, !312, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!312 = distinct !{!312, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!313 = !{!314}
!314 = distinct !{!314, !315, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!315 = distinct !{!315, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!316 = !{!317}
!317 = distinct !{!317, !318, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!318 = distinct !{!318, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!319 = !{!320}
!320 = distinct !{!320, !321, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!321 = distinct !{!321, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!322 = !{!323}
!323 = distinct !{!323, !324, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!324 = distinct !{!324, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!325 = !{!326}
!326 = distinct !{!326, !327, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!327 = distinct !{!327, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!328 = !{!329}
!329 = distinct !{!329, !330, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!330 = distinct !{!330, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!331 = !{!332}
!332 = distinct !{!332, !333, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!333 = distinct !{!333, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!334 = !{!335}
!335 = distinct !{!335, !336, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!336 = distinct !{!336, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!337 = !{!338}
!338 = distinct !{!338, !339, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!339 = distinct !{!339, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!340 = !{!341}
!341 = distinct !{!341, !342, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!342 = distinct !{!342, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!343 = !{!344}
!344 = distinct !{!344, !345, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!345 = distinct !{!345, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!346 = !{!347}
!347 = distinct !{!347, !348, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!348 = distinct !{!348, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!349 = !{!350}
!350 = distinct !{!350, !351, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!351 = distinct !{!351, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!352 = !{!353}
!353 = distinct !{!353, !354, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!354 = distinct !{!354, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!355 = !{!356}
!356 = distinct !{!356, !357, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!357 = distinct !{!357, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!358 = !{!359}
!359 = distinct !{!359, !360, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!360 = distinct !{!360, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!361 = !{!362}
!362 = distinct !{!362, !363, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!363 = distinct !{!363, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!364 = !{!365}
!365 = distinct !{!365, !366, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!366 = distinct !{!366, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!367 = !{!368}
!368 = distinct !{!368, !369, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!369 = distinct !{!369, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!370 = !{!371}
!371 = distinct !{!371, !372, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!372 = distinct !{!372, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!373 = !{!374}
!374 = distinct !{!374, !375, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!375 = distinct !{!375, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!376 = !{!377}
!377 = distinct !{!377, !378, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!378 = distinct !{!378, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!379 = !{!380}
!380 = distinct !{!380, !381, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!381 = distinct !{!381, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!382 = !{!383}
!383 = distinct !{!383, !384, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!384 = distinct !{!384, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!385 = !{!386}
!386 = distinct !{!386, !387, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!387 = distinct !{!387, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!388 = !{!389}
!389 = distinct !{!389, !390, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!390 = distinct !{!390, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!391 = !{!392}
!392 = distinct !{!392, !393, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!393 = distinct !{!393, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!394 = !{!395}
!395 = distinct !{!395, !396, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!396 = distinct !{!396, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!397 = !{!398}
!398 = distinct !{!398, !399, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!399 = distinct !{!399, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!400 = !{!401}
!401 = distinct !{!401, !402, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!402 = distinct !{!402, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!403 = !{!404}
!404 = distinct !{!404, !405, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!405 = distinct !{!405, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!406 = !{!407}
!407 = distinct !{!407, !408, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!408 = distinct !{!408, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!409 = !{!410}
!410 = distinct !{!410, !411, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!411 = distinct !{!411, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!412 = !{!413}
!413 = distinct !{!413, !414, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!414 = distinct !{!414, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!415 = !{!416}
!416 = distinct !{!416, !417, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!417 = distinct !{!417, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!418 = !{!419}
!419 = distinct !{!419, !420, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!420 = distinct !{!420, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!421 = !{!422}
!422 = distinct !{!422, !423, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!423 = distinct !{!423, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!424 = !{!425}
!425 = distinct !{!425, !426, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!426 = distinct !{!426, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!427 = !{!428}
!428 = distinct !{!428, !429, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!429 = distinct !{!429, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!430 = !{!431}
!431 = distinct !{!431, !432, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!432 = distinct !{!432, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!433 = !{!434}
!434 = distinct !{!434, !435, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!435 = distinct !{!435, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!436 = !{!437}
!437 = distinct !{!437, !438, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!438 = distinct !{!438, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!439 = !{!440}
!440 = distinct !{!440, !441, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!441 = distinct !{!441, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!442 = !{!443}
!443 = distinct !{!443, !444, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!444 = distinct !{!444, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!445 = !{!446}
!446 = distinct !{!446, !447, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!447 = distinct !{!447, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!448 = !{!449}
!449 = distinct !{!449, !450, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!450 = distinct !{!450, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!451 = !{!452}
!452 = distinct !{!452, !453, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!453 = distinct !{!453, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!454 = !{!455}
!455 = distinct !{!455, !456, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!456 = distinct !{!456, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!457 = !{!458}
!458 = distinct !{!458, !459, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!459 = distinct !{!459, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!460 = !{!461}
!461 = distinct !{!461, !462, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!462 = distinct !{!462, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!463 = !{!464}
!464 = distinct !{!464, !465, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!465 = distinct !{!465, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!466 = !{!467}
!467 = distinct !{!467, !468, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!468 = distinct !{!468, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!469 = !{!470}
!470 = distinct !{!470, !471, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!471 = distinct !{!471, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!472 = !{!473}
!473 = distinct !{!473, !474, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!474 = distinct !{!474, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!475 = !{!476}
!476 = distinct !{!476, !477, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!477 = distinct !{!477, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!478 = !{!479}
!479 = distinct !{!479, !480, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!480 = distinct !{!480, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!481 = !{!482}
!482 = distinct !{!482, !483, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!483 = distinct !{!483, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!484 = !{!485}
!485 = distinct !{!485, !486, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!486 = distinct !{!486, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!487 = !{!488}
!488 = distinct !{!488, !489, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!489 = distinct !{!489, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!490 = !{!491}
!491 = distinct !{!491, !492, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!492 = distinct !{!492, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!493 = !{!494}
!494 = distinct !{!494, !495, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv: argument 0"}
!495 = distinct !{!495, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv"}
!496 = !{!497}
!497 = distinct !{!497, !498, !"_ZNK5angle11BitSetArrayILm96EE5beginEv: argument 0"}
!498 = distinct !{!498, !"_ZNK5angle11BitSetArrayILm96EE5beginEv"}
!499 = !{!500}
!500 = distinct !{!500, !501, !"_ZNK5angle7BitSetTILm64EmmE5beginEv: argument 0"}
!501 = distinct !{!501, !"_ZNK5angle7BitSetTILm64EmmE5beginEv"}
!502 = !{!503}
!503 = distinct !{!503, !504, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!504 = distinct !{!504, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!505 = !{!506}
!506 = distinct !{!506, !507, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!507 = distinct !{!507, !"_ZanILm64EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!508 = !{!509}
!509 = distinct !{!509, !510, !"_ZNK5angle7BitSetTILm64EmmEcoEv: argument 0"}
!510 = distinct !{!510, !"_ZNK5angle7BitSetTILm64EmmEcoEv"}
!511 = !{!512}
!512 = distinct !{!512, !513, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv: argument 0"}
!513 = distinct !{!513, !"_ZNK2gl10StateCache35getActiveShaderStorageBufferIndicesEv"}
!514 = !{!515}
!515 = distinct !{!515, !516, !"_ZNK5angle11BitSetArrayILm96EE5beginEv: argument 0"}
!516 = distinct !{!516, !"_ZNK5angle11BitSetArrayILm96EE5beginEv"}
!517 = !{!518}
!518 = distinct !{!518, !519, !"_ZNK5angle7BitSetTILm64EmmE5beginEv: argument 0"}
!519 = distinct !{!519, !"_ZNK5angle7BitSetTILm64EmmE5beginEv"}
!520 = !{!521}
!521 = distinct !{!521, !522, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!522 = distinct !{!522, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!523 = !{!524}
!524 = distinct !{!524, !525, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!525 = distinct !{!525, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!526 = !{!527}
!527 = distinct !{!527, !528, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!528 = distinct !{!528, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!529 = !{!530}
!530 = distinct !{!530, !531, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!531 = distinct !{!531, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!532 = !{!533}
!533 = distinct !{!533, !534, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!534 = distinct !{!534, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!535 = !{!536}
!536 = distinct !{!536, !537, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!537 = distinct !{!537, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!538 = !{!539}
!539 = distinct !{!539, !540, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!540 = distinct !{!540, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!541 = !{!542}
!542 = distinct !{!542, !543, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!543 = distinct !{!543, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!544 = !{!545}
!545 = distinct !{!545, !546, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!546 = distinct !{!546, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!547 = !{!548}
!548 = distinct !{!548, !549, !"_ZNK2gl11VertexArray20getClientAttribsMaskEv: argument 0"}
!549 = distinct !{!549, !"_ZNK2gl11VertexArray20getClientAttribsMaskEv"}
!550 = !{!551}
!551 = distinct !{!551, !552, !"_ZNK5angle7BitSetTILm16EmmEcoEv: argument 0"}
!552 = distinct !{!552, !"_ZNK5angle7BitSetTILm16EmmEcoEv"}
!553 = !{!554}
!554 = distinct !{!554, !555, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!555 = distinct !{!555, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!556 = !{!557}
!557 = distinct !{!557, !558, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!558 = distinct !{!558, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!559 = !{!560}
!560 = distinct !{!560, !561, !"_ZNK2gl11VertexArray20getClientAttribsMaskEv: argument 0"}
!561 = distinct !{!561, !"_ZNK2gl11VertexArray20getClientAttribsMaskEv"}
!562 = !{!563}
!563 = distinct !{!563, !564, !"_ZNK5angle7BitSetTILm16EmmEcoEv: argument 0"}
!564 = distinct !{!564, !"_ZNK5angle7BitSetTILm16EmmEcoEv"}
!565 = !{!566}
!566 = distinct !{!566, !567, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!567 = distinct !{!567, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!568 = !{!569}
!569 = distinct !{!569, !570, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!570 = distinct !{!570, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!571 = !{!572}
!572 = distinct !{!572, !573, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!573 = distinct !{!573, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!574 = !{!575}
!575 = distinct !{!575, !576, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!576 = distinct !{!576, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!577 = !{!578}
!578 = distinct !{!578, !579, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!579 = distinct !{!579, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!580 = !{!581}
!581 = distinct !{!581, !582, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!582 = distinct !{!582, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!583 = !{!584}
!584 = distinct !{!584, !585, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_: argument 0"}
!585 = distinct !{!585, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_"}
!586 = !{!587}
!587 = distinct !{!587, !588, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!588 = distinct !{!588, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
