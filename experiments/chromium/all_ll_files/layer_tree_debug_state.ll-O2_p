; ModuleID = '../../cc/debug/layer_tree_debug_state.cc'
source_filename = "../../cc/debug/layer_tree_debug_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }

@_ZN2cc19LayerTreeDebugStateC1Ev = hidden unnamed_addr alias void (%"class.cc::LayerTreeDebugState"*), void (%"class.cc::LayerTreeDebugState"*)* @_ZN2cc19LayerTreeDebugStateC2Ev
@_ZN2cc19LayerTreeDebugStateC1ERKS0_ = hidden unnamed_addr alias void (%"class.cc::LayerTreeDebugState"*, %"class.cc::LayerTreeDebugState"*), void (%"class.cc::LayerTreeDebugState"*, %"class.cc::LayerTreeDebugState"*)* @_ZN2cc19LayerTreeDebugStateC2ERKS0_
@_ZN2cc19LayerTreeDebugStateD1Ev = hidden unnamed_addr alias void (%"class.cc::LayerTreeDebugState"*), void (%"class.cc::LayerTreeDebugState"*)* @_ZN2cc19LayerTreeDebugStateD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc19LayerTreeDebugStateC2Ev(%"class.cc::LayerTreeDebugState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 15
  %5 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 19, i1 false)
  %6 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 10, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19LayerTreeDebugStateC2ERKS0_(%"class.cc::LayerTreeDebugState"* nocapture, %"class.cc::LayerTreeDebugState"* nocapture readonly dereferenceable(40)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 38, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc19LayerTreeDebugStateD2Ev(%"class.cc::LayerTreeDebugState"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc19LayerTreeDebugState23SetRecordRenderingStatsEb(%"class.cc::LayerTreeDebugState"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 21
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc19LayerTreeDebugState20RecordRenderingStatsEv(%"class.cc::LayerTreeDebugState"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 21
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc19LayerTreeDebugState20ShouldCreateHudLayerEv(%"class.cc::LayerTreeDebugState"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %57

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %57

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 6
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %57

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 7
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %57

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 8
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %57

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 9
  %23 = load i8, i8* %22, align 2, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %57

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 10
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %57

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 11
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %57

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 12
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %57

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 13
  %39 = load i8, i8* %38, align 2, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %57

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 0
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %57

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 19
  %51 = load i8, i8* %50, align 1, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 20
  %55 = load i8, i8* %54, align 4, !range !2
  %56 = icmp ne i8 %55, 0
  br label %57

57:                                               ; preds = %41, %1, %5, %9, %13, %17, %21, %25, %29, %33, %37, %53, %49, %45
  %58 = phi i1 [ true, %41 ], [ true, %49 ], [ true, %45 ], [ %56, %53 ], [ true, %37 ], [ true, %33 ], [ true, %29 ], [ true, %25 ], [ true, %21 ], [ true, %17 ], [ true, %13 ], [ true, %9 ], [ true, %5 ], [ true, %1 ]
  ret i1 %58
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc19LayerTreeDebugState14ShowDebugRectsEv(%"class.cc::LayerTreeDebugState"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %45

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %45

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 6
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %45

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 7
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %45

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 8
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %45

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 9
  %23 = load i8, i8* %22, align 2, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %45

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 10
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %45

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 11
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 12
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %45

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 13
  %39 = load i8, i8* %38, align 2, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp ne i8 %43, 0
  br label %45

45:                                               ; preds = %37, %33, %29, %25, %21, %17, %13, %9, %5, %1, %41
  %46 = phi i1 [ true, %37 ], [ true, %33 ], [ true, %29 ], [ true, %25 ], [ true, %21 ], [ true, %17 ], [ true, %13 ], [ true, %9 ], [ true, %5 ], [ true, %1 ], [ %44, %41 ]
  ret i1 %46
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc19LayerTreeDebugState17ShouldDrawHudInfoEv(%"class.cc::LayerTreeDebugState"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 19
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 20
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp ne i8 %11, 0
  br label %13

13:                                               ; preds = %5, %1, %9
  %14 = phi i1 [ true, %5 ], [ true, %1 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc19LayerTreeDebugState15ShowMemoryStatsEv(%"class.cc::LayerTreeDebugState"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc19LayerTreeDebugState21TurnOffHudInfoDisplayEv(%"class.cc::LayerTreeDebugState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 19
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 20
  store i8 0, i8* %4, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2cc19LayerTreeDebugState5EqualERKS0_S2_(%"class.cc::LayerTreeDebugState"* nocapture readonly dereferenceable(40), %"class.cc::LayerTreeDebugState"* nocapture readonly dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %4, %6
  br i1 %7, label %8, label %118

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load i64, i64* %9, align 8
  %12 = load i64, i64* %10, align 8
  %13 = xor i64 %12, %11
  %14 = and i64 %13, 7
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %118

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 3
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 3
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %18, %20
  br i1 %21, label %22, label %118

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 4
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp eq i8 %24, %26
  br i1 %27, label %28, label %118

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 5
  %30 = load i8, i8* %29, align 2, !range !2
  %31 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 5
  %32 = load i8, i8* %31, align 2, !range !2
  %33 = icmp eq i8 %30, %32
  br i1 %33, label %34, label %118

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 6
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 6
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %36, %38
  br i1 %39, label %40, label %118

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 7
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 4, !range !2
  %45 = icmp eq i8 %42, %44
  br i1 %45, label %46, label %118

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 8
  %48 = load i8, i8* %47, align 1, !range !2
  %49 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 8
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp eq i8 %48, %50
  br i1 %51, label %52, label %118

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 9
  %54 = load i8, i8* %53, align 2, !range !2
  %55 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 9
  %56 = load i8, i8* %55, align 2, !range !2
  %57 = icmp eq i8 %54, %56
  br i1 %57, label %58, label %118

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 10
  %60 = load i8, i8* %59, align 1, !range !2
  %61 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 10
  %62 = load i8, i8* %61, align 1, !range !2
  %63 = icmp eq i8 %60, %62
  br i1 %63, label %64, label %118

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 11
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 11
  %68 = load i8, i8* %67, align 8, !range !2
  %69 = icmp eq i8 %66, %68
  br i1 %69, label %70, label %118

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 12
  %72 = load i8, i8* %71, align 1, !range !2
  %73 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 12
  %74 = load i8, i8* %73, align 1, !range !2
  %75 = icmp eq i8 %72, %74
  br i1 %75, label %76, label %118

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 13
  %78 = load i8, i8* %77, align 2, !range !2
  %79 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 13
  %80 = load i8, i8* %79, align 2, !range !2
  %81 = icmp eq i8 %78, %80
  br i1 %81, label %82, label %118

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 15
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 15
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %84, %86
  br i1 %87, label %88, label %118

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 16
  %90 = load i8, i8* %89, align 8, !range !2
  %91 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 16
  %92 = load i8, i8* %91, align 8, !range !2
  %93 = icmp eq i8 %90, %92
  br i1 %93, label %94, label %118

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 17
  %96 = load i8, i8* %95, align 1, !range !2
  %97 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 17
  %98 = load i8, i8* %97, align 1, !range !2
  %99 = icmp eq i8 %96, %98
  br i1 %99, label %100, label %118

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 18
  %102 = load i8, i8* %101, align 2, !range !2
  %103 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 18
  %104 = load i8, i8* %103, align 2, !range !2
  %105 = icmp eq i8 %102, %104
  br i1 %105, label %106, label %118

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 19
  %108 = load i8, i8* %107, align 1, !range !2
  %109 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 19
  %110 = load i8, i8* %109, align 1, !range !2
  %111 = icmp eq i8 %108, %110
  br i1 %111, label %112, label %118

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %0, i64 0, i32 21
  %114 = load i8, i8* %113, align 1, !range !2
  %115 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %1, i64 0, i32 21
  %116 = load i8, i8* %115, align 1, !range !2
  %117 = icmp eq i8 %114, %116
  br label %118

118:                                              ; preds = %112, %106, %100, %94, %88, %82, %76, %70, %64, %58, %52, %46, %40, %34, %28, %22, %16, %8, %2
  %119 = phi i1 [ false, %106 ], [ false, %100 ], [ false, %94 ], [ false, %88 ], [ false, %82 ], [ false, %76 ], [ false, %70 ], [ false, %64 ], [ false, %58 ], [ false, %52 ], [ false, %46 ], [ false, %40 ], [ false, %34 ], [ false, %28 ], [ false, %22 ], [ false, %16 ], [ false, %8 ], [ false, %2 ], [ %117, %112 ]
  ret i1 %119
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
