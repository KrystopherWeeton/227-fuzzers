; ModuleID = '../../third_party/opus/src/silk/encode_indices.c'
source_filename = "../../third_party/opus/src/silk/encode_indices.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.silk_encoder_state = type { [2 x i32], i32, i32, %struct.silk_LP_state, %struct.silk_VAD_state, %struct.silk_nsq_state, [16 x i16], i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, %struct.silk_NLSF_CB_struct*, [4 x i32], i32, i32, [3 x i8], i8, [3 x i32], %struct.SideInfoIndices, [320 x i8], i32, [322 x i16], i32, i32, i32, i32, i32, i32, i32, i32, i16, %struct._silk_resampler_state_struct, i32, i32, i32, i32, i32, i32, [3 x %struct.SideInfoIndices], [3 x [320 x i8]] }
%struct.silk_LP_state = type { [2 x i32], i32, i32, i32 }
%struct.silk_VAD_state = type { [2 x i32], [2 x i32], [2 x i32], [4 x i32], [4 x i32], i16, [4 x i32], [4 x i32], [4 x i32], i32 }
%struct.silk_nsq_state = type { [640 x i16], [640 x i32], [96 x i32], [24 x i32], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.silk_NLSF_CB_struct = type { i16, i16, i16, i16, i8*, i16*, i8*, i8*, i8*, i8*, i8*, i16* }
%struct.SideInfoIndices = type { [4 x i8], [4 x i8], [17 x i8], i16, i8, i8, i8, i8, i8, i8, i8 }
%struct._silk_resampler_state_struct = type { [6 x i32], %union.anon, [48 x i16], i32, i32, i32, i32, i32, i32, i32, i32, i16* }
%union.anon = type { [36 x i32] }
%struct.ec_ctx = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [52 x i8] c"assertion failed: typeOffset >= 0 && typeOffset < 6\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"../../third_party/opus/src/silk/encode_indices.c\00", align 1
@.str.2 = private unnamed_addr constant [54 x i8] c"assertion failed: encode_LBRR == 0 || typeOffset >= 2\00", align 1
@silk_type_offset_VAD_iCDF = external constant [4 x i8], align 1
@silk_type_offset_no_VAD_iCDF = external constant [2 x i8], align 1
@silk_delta_gain_iCDF = external constant [41 x i8], align 16
@silk_gain_iCDF = external constant [3 x [8 x i8]], align 16
@silk_uniform8_iCDF = external constant [8 x i8], align 1
@.str.3 = private unnamed_addr constant [70 x i8] c"assertion failed: psEncC->psNLSF_CB->order == psEncC->predictLPCOrder\00", align 1
@silk_NLSF_EXT_iCDF = external constant [7 x i8], align 1
@silk_NLSF_interpolation_factor_iCDF = external constant [5 x i8], align 1
@silk_pitch_delta_iCDF = external constant [21 x i8], align 16
@silk_pitch_lag_iCDF = external constant [32 x i8], align 16
@silk_LTP_per_index_iCDF = external constant [3 x i8], align 1
@silk_LTP_gain_iCDF_ptrs = external local_unnamed_addr constant [3 x i8*], align 16
@silk_LTPscale_iCDF = external constant [3 x i8], align 1
@silk_uniform4_iCDF = external constant [4 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @silk_encode_indices(%struct.silk_encoder_state* nocapture, %struct.ec_ctx*, i32, i32, i32) local_unnamed_addr #0 {
  %6 = alloca [16 x i16], align 16
  %7 = alloca [16 x i8], align 16
  %8 = bitcast [16 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #4
  %9 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i64 0, i64 0
  %11 = bitcast [16 x i16]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #4
  %12 = icmp ne i32 %3, 0
  %13 = sext i32 %2 to i64
  %14 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 75, i64 %13
  %15 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 55
  %16 = select i1 %12, %struct.SideInfoIndices* %14, %struct.SideInfoIndices* %15
  %17 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %16, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 16, i1 false)
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = shl nsw i32 %19, 1
  %21 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %16, i64 0, i32 6
  %22 = load i8, i8* %21, align 2
  %23 = sext i8 %22 to i32
  %24 = add nsw i32 %20, %23
  %25 = icmp ult i32 %24, 6
  br i1 %25, label %27, label %26

26:                                               ; preds = %5
  tail call void @celt_fatal(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 59) #5
  unreachable

27:                                               ; preds = %5
  %28 = icmp eq i32 %3, 0
  %29 = icmp sgt i32 %24, 1
  %30 = or i1 %28, %29
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @celt_fatal(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 60) #5
  unreachable

32:                                               ; preds = %27
  %33 = or i1 %12, %29
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = add nsw i32 %24, -2
  tail call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @silk_type_offset_VAD_iCDF, i64 0, i64 0), i32 8) #4
  br label %37

36:                                               ; preds = %32
  tail call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_type_offset_no_VAD_iCDF, i64 0, i64 0), i32 8) #4
  br label %37

37:                                               ; preds = %36, %34
  %38 = icmp eq i32 %4, 2
  %39 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %16, i64 0, i32 0, i64 0
  %40 = load i8, i8* %39, align 2
  %41 = sext i8 %40 to i32
  br i1 %38, label %42, label %43

42:                                               ; preds = %37
  tail call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %41, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @silk_delta_gain_iCDF, i64 0, i64 0), i32 8) #4
  br label %51

43:                                               ; preds = %37
  %44 = ashr i32 %41, 3
  %45 = load i8, i8* %17, align 1
  %46 = sext i8 %45 to i64
  %47 = getelementptr inbounds [3 x [8 x i8]], [3 x [8 x i8]]* @silk_gain_iCDF, i64 0, i64 %46, i64 0
  tail call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %44, i8* %47, i32 8) #4
  %48 = load i8, i8* %39, align 2
  %49 = and i8 %48, 7
  %50 = zext i8 %49 to i32
  tail call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %50, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @silk_uniform8_iCDF, i64 0, i64 0), i32 8) #4
  br label %51

51:                                               ; preds = %43, %42
  %52 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 20
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %53, 1
  br i1 %54, label %55, label %64

55:                                               ; preds = %51, %55
  %56 = phi i64 [ %60, %55 ], [ 1, %51 ]
  %57 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %16, i64 0, i32 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  tail call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %59, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @silk_delta_gain_iCDF, i64 0, i64 0), i32 8) #4
  %60 = add nuw nsw i64 %56, 1
  %61 = load i32, i32* %52, align 4
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %60, %62
  br i1 %63, label %55, label %64

64:                                               ; preds = %55, %51
  %65 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %16, i64 0, i32 2, i64 0
  %66 = load i8, i8* %65, align 2
  %67 = sext i8 %66 to i32
  %68 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 48
  %69 = load %struct.silk_NLSF_CB_struct*, %struct.silk_NLSF_CB_struct** %68, align 8
  %70 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %69, i64 0, i32 6
  %71 = load i8*, i8** %70, align 8
  %72 = load i8, i8* %17, align 1
  %73 = ashr i8 %72, 1
  %74 = sext i8 %73 to i64
  %75 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %69, i64 0, i32 0
  %76 = load i16, i16* %75, align 8
  %77 = sext i16 %76 to i64
  %78 = mul nsw i64 %74, %77
  %79 = getelementptr inbounds i8, i8* %71, i64 %78
  tail call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %67, i8* %79, i32 8) #4
  %80 = load %struct.silk_NLSF_CB_struct*, %struct.silk_NLSF_CB_struct** %68, align 8
  %81 = load i8, i8* %65, align 2
  %82 = sext i8 %81 to i32
  call void @silk_NLSF_unpack(i16* nonnull %9, i8* nonnull %10, %struct.silk_NLSF_CB_struct* %80, i32 %82) #4
  %83 = load %struct.silk_NLSF_CB_struct*, %struct.silk_NLSF_CB_struct** %68, align 8
  %84 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %83, i64 0, i32 1
  %85 = load i16, i16* %84, align 2
  %86 = sext i16 %85 to i32
  %87 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 35
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, %86
  br i1 %89, label %90, label %92

90:                                               ; preds = %64
  %91 = icmp sgt i16 %85, 0
  br i1 %91, label %93, label %137

92:                                               ; preds = %64
  call void @celt_fatal(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 93) #5
  unreachable

93:                                               ; preds = %90, %131
  %94 = phi i64 [ %96, %131 ], [ 0, %90 ]
  %95 = phi %struct.silk_NLSF_CB_struct* [ %132, %131 ], [ %83, %90 ]
  %96 = add nuw nsw i64 %94, 1
  %97 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %16, i64 0, i32 2, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = sext i8 %98 to i32
  %100 = icmp sgt i8 %98, 3
  br i1 %100, label %101, label %111

101:                                              ; preds = %93
  %102 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %95, i64 0, i32 9
  %103 = load i8*, i8** %102, align 8
  %104 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 %94
  %105 = load i16, i16* %104, align 2
  %106 = sext i16 %105 to i64
  %107 = getelementptr inbounds i8, i8* %103, i64 %106
  call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 8, i8* %107, i32 8) #4
  %108 = load i8, i8* %97, align 1
  %109 = sext i8 %108 to i32
  %110 = add nsw i32 %109, -4
  call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %110, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @silk_NLSF_EXT_iCDF, i64 0, i64 0), i32 8) #4
  br label %131

111:                                              ; preds = %93
  %112 = icmp slt i8 %98, -3
  br i1 %112, label %113, label %123

113:                                              ; preds = %111
  %114 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %95, i64 0, i32 9
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 %94
  %117 = load i16, i16* %116, align 2
  %118 = sext i16 %117 to i64
  %119 = getelementptr inbounds i8, i8* %115, i64 %118
  call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 0, i8* %119, i32 8) #4
  %120 = load i8, i8* %97, align 1
  %121 = sext i8 %120 to i32
  %122 = sub nsw i32 -4, %121
  call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %122, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @silk_NLSF_EXT_iCDF, i64 0, i64 0), i32 8) #4
  br label %131

123:                                              ; preds = %111
  %124 = add nsw i32 %99, 4
  %125 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %95, i64 0, i32 9
  %126 = load i8*, i8** %125, align 8
  %127 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 %94
  %128 = load i16, i16* %127, align 2
  %129 = sext i16 %128 to i64
  %130 = getelementptr inbounds i8, i8* %126, i64 %129
  call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %124, i8* %130, i32 8) #4
  br label %131

131:                                              ; preds = %101, %123, %113
  %132 = load %struct.silk_NLSF_CB_struct*, %struct.silk_NLSF_CB_struct** %68, align 8
  %133 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %132, i64 0, i32 1
  %134 = load i16, i16* %133, align 2
  %135 = sext i16 %134 to i64
  %136 = icmp slt i64 %96, %135
  br i1 %136, label %93, label %137

137:                                              ; preds = %131, %90
  %138 = load i32, i32* %52, align 4
  %139 = icmp eq i32 %138, 4
  br i1 %139, label %140, label %144

140:                                              ; preds = %137
  %141 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %16, i64 0, i32 7
  %142 = load i8, i8* %141, align 1
  %143 = sext i8 %142 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %143, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @silk_NLSF_interpolation_factor_iCDF, i64 0, i64 0), i32 8) #4
  br label %144

144:                                              ; preds = %140, %137
  %145 = load i8, i8* %17, align 1
  %146 = icmp eq i8 %145, 2
  br i1 %146, label %147, label %213

147:                                              ; preds = %144
  br i1 %38, label %148, label %164

148:                                              ; preds = %147
  %149 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 66
  %150 = load i32, i32* %149, align 8
  %151 = icmp eq i32 %150, 2
  br i1 %151, label %152, label %164

152:                                              ; preds = %148
  %153 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %16, i64 0, i32 3
  %154 = load i16, i16* %153, align 2
  %155 = sext i16 %154 to i32
  %156 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 67
  %157 = load i16, i16* %156, align 4
  %158 = sext i16 %157 to i32
  %159 = sub nsw i32 %155, %158
  %160 = add nsw i32 %159, 8
  %161 = icmp ugt i32 %160, 19
  %162 = add nsw i32 %159, 9
  %163 = select i1 %161, i32 0, i32 %162
  call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %163, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @silk_pitch_delta_iCDF, i64 0, i64 0), i32 8) #4
  br i1 %161, label %164, label %180

164:                                              ; preds = %152, %148, %147
  %165 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %16, i64 0, i32 3
  %166 = load i16, i16* %165, align 2
  %167 = sext i16 %166 to i32
  %168 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 19
  %169 = load i32, i32* %168, align 8
  %170 = ashr i32 %169, 1
  %171 = sdiv i32 %167, %170
  %172 = shl i32 %171, 16
  %173 = ashr exact i32 %172, 16
  %174 = shl i32 %170, 16
  %175 = ashr exact i32 %174, 16
  %176 = mul nsw i32 %173, %175
  %177 = sub nsw i32 %167, %176
  call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %171, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @silk_pitch_lag_iCDF, i64 0, i64 0), i32 8) #4
  %178 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 46
  %179 = load i8*, i8** %178, align 8
  call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %177, i8* %179, i32 8) #4
  br label %180

180:                                              ; preds = %152, %164
  %181 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %16, i64 0, i32 3
  %182 = load i16, i16* %181, align 2
  %183 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 67
  store i16 %182, i16* %183, align 4
  %184 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %16, i64 0, i32 4
  %185 = load i8, i8* %184, align 2
  %186 = sext i8 %185 to i32
  %187 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 47
  %188 = load i8*, i8** %187, align 8
  call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %186, i8* %188, i32 8) #4
  %189 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %16, i64 0, i32 8
  %190 = load i8, i8* %189, align 2
  %191 = sext i8 %190 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %191, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @silk_LTP_per_index_iCDF, i64 0, i64 0), i32 8) #4
  %192 = load i32, i32* %52, align 4
  %193 = icmp sgt i32 %192, 0
  br i1 %193, label %194, label %207

194:                                              ; preds = %180, %194
  %195 = phi i64 [ %203, %194 ], [ 0, %180 ]
  %196 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %16, i64 0, i32 1, i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = sext i8 %197 to i32
  %199 = load i8, i8* %189, align 2
  %200 = sext i8 %199 to i64
  %201 = getelementptr inbounds [3 x i8*], [3 x i8*]* @silk_LTP_gain_iCDF_ptrs, i64 0, i64 %200
  %202 = load i8*, i8** %201, align 8
  call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %198, i8* %202, i32 8) #4
  %203 = add nuw nsw i64 %195, 1
  %204 = load i32, i32* %52, align 4
  %205 = sext i32 %204 to i64
  %206 = icmp slt i64 %203, %205
  br i1 %206, label %194, label %207

207:                                              ; preds = %194, %180
  %208 = icmp eq i32 %4, 0
  br i1 %208, label %209, label %213

209:                                              ; preds = %207
  %210 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %16, i64 0, i32 9
  %211 = load i8, i8* %210, align 1
  %212 = sext i8 %211 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %212, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @silk_LTPscale_iCDF, i64 0, i64 0), i32 8) #4
  br label %213

213:                                              ; preds = %207, %209, %144
  %214 = load i8, i8* %17, align 1
  %215 = sext i8 %214 to i32
  %216 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 66
  store i32 %215, i32* %216, align 8
  %217 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %16, i64 0, i32 10
  %218 = load i8, i8* %217, align 2
  %219 = sext i8 %218 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %1, i32 %219, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @silk_uniform4_iCDF, i64 0, i64 0), i32 8) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn
declare void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #2

declare void @ec_enc_icdf(%struct.ec_ctx*, i32, i8*, i32) local_unnamed_addr #3

declare void @silk_NLSF_unpack(i16*, i8*, %struct.silk_NLSF_CB_struct*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
