; ModuleID = '../../third_party/ots/src/src/gasp.cc'
source_filename = "../../third_party/ots/src/src/gasp.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.ots::OpenTypeGASP" = type { %"class.ots::Table.base", i16, %"class.std::__1::vector" }
%"class.ots::Table.base" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8 }>
%"struct.ots::Font" = type { %"struct.ots::FontFile"*, i32, i16, i16, i16, i16, %"class.std::__1::map.15" }
%"struct.ots::FontFile" = type { %"class.ots::OTSContext"*, %"class.std::__1::map", %"class.std::__1::map.4" }
%"class.ots::OTSContext" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type { i16, i16 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"class.ots::Table" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.ots::OTSStream" = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZN3ots12OpenTypeGASPD2Ev = comdat any

$_ZN3ots12OpenTypeGASPD0Ev = comdat any

@.str = private unnamed_addr constant [28 x i8] c"Failed to read table header\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"Unsupported version: %u\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"numRanges is zero\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"Failed to read GASPRANGE %d\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"Ranges are not sorted\00", align 1
@.str.5 = private unnamed_addr constant [70 x i8] c"The last record should be 0xFFFF as a sentinel value for rangeMaxPPEM\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"Undefined bits are used: %x\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"Changed the version number to 1\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"Failed to write table header\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"Failed to write GASPRANGE %d\00", align 1
@_ZTVN3ots12OpenTypeGASPE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ots::OpenTypeGASP"*)* @_ZN3ots12OpenTypeGASPD2Ev to i8*), i8* bitcast (void (%"class.ots::OpenTypeGASP"*)* @_ZN3ots12OpenTypeGASPD0Ev to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeGASP"*, i8*, i64)* @_ZN3ots12OpenTypeGASP5ParseEPKhm to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeGASP"*, %"class.ots::OTSStream"*)* @_ZN3ots12OpenTypeGASP9SerializeEPNS_9OTSStreamE to i8*), i8* bitcast (i1 (%"class.ots::Table"*)* @_ZN3ots5Table15ShouldSerializeEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeGASP5ParseEPKhm(%"class.ots::OpenTypeGASP"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ots::OpenTypeGASP", %"class.ots::OpenTypeGASP"* %0, i64 0, i32 1
  %5 = icmp ult i64 %2, 2
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = bitcast i8* %1 to i16*
  %8 = load i16, i16* %7, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #9
  store i16 %9, i16* %4, align 2
  %10 = icmp ult i64 %2, 4
  br i1 %10, label %11, label %14

11:                                               ; preds = %6, %3
  %12 = bitcast %"class.ots::OpenTypeGASP"* %0 to %"class.ots::Table"*
  %13 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #9
  br label %190

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 2
  %16 = bitcast i8* %15 to i16*
  %17 = load i16, i16* %16, align 1
  %18 = tail call i16 @llvm.bswap.i16(i16 %17) #9
  %19 = icmp ugt i16 %9, 1
  br i1 %19, label %20, label %24

20:                                               ; preds = %14
  %21 = zext i16 %9 to i32
  %22 = bitcast %"class.ots::OpenTypeGASP"* %0 to %"class.ots::Table"*
  %23 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %22, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 %21) #9
  br label %190

24:                                               ; preds = %14
  %25 = icmp eq i16 %17, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %24
  %27 = bitcast %"class.ots::OpenTypeGASP"* %0 to %"class.ots::Table"*
  %28 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0)) #9
  br label %190

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.ots::OpenTypeGASP", %"class.ots::OpenTypeGASP"* %0, i64 0, i32 2
  %31 = zext i16 %18 to i64
  %32 = getelementptr inbounds %"class.ots::OpenTypeGASP", %"class.ots::OpenTypeGASP"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"struct.std::__1::pair"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector"* %30 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 2
  %39 = icmp ult i64 %38, %31
  br i1 %39, label %40, label %61

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.ots::OpenTypeGASP", %"class.ots::OpenTypeGASP"* %0, i64 0, i32 2, i32 0, i32 1
  %42 = bitcast %"struct.std::__1::pair"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %43, %36
  %45 = ashr exact i64 %44, 2
  %46 = shl nuw nsw i64 %31, 2
  %47 = tail call i8* @_Znwm(i64 %46) #10
  %48 = bitcast i8* %47 to %"struct.std::__1::pair"*
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 %45
  %50 = ptrtoint %"struct.std::__1::pair"* %49 to i64
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 %31
  %52 = ptrtoint %"struct.std::__1::pair"* %51 to i64
  %53 = ptrtoint i8* %47 to i64
  %54 = icmp sgt i64 %44, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %40
  %56 = inttoptr i64 %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %47, i8* align 2 %56, i64 %44, i1 false) #9
  br label %57

57:                                               ; preds = %55, %40
  store i64 %53, i64* %35, align 8
  store i64 %50, i64* %42, align 8
  store i64 %52, i64* %33, align 8
  %58 = icmp eq i64 %36, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = inttoptr i64 %36 to i8*
  tail call void @_ZdlPv(i8* %60) #10
  br label %61

61:                                               ; preds = %59, %57, %29
  %62 = zext i16 %18 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 0
  %64 = add nuw nsw i64 %62, 4294967295
  %65 = bitcast %"class.ots::OpenTypeGASP"* %0 to %"class.ots::Table"*
  %66 = getelementptr inbounds %"class.ots::OpenTypeGASP", %"class.ots::OpenTypeGASP"* %0, i64 0, i32 2, i32 0, i32 1
  %67 = bitcast %"struct.std::__1::pair"** %66 to i64*
  %68 = zext i16 %18 to i64
  %69 = and i64 %64, 4294967295
  br label %70

70:                                               ; preds = %61, %187
  %71 = phi i64 [ 0, %61 ], [ %188, %187 ]
  %72 = phi i64 [ 4, %61 ], [ %80, %187 ]
  %73 = or i64 %72, 2
  %74 = icmp ugt i64 %73, %2
  br i1 %74, label %82, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds i8, i8* %1, i64 %72
  %77 = bitcast i8* %76 to i16*
  %78 = load i16, i16* %77, align 1
  %79 = tail call i16 @llvm.bswap.i16(i16 %78) #9
  %80 = add nuw nsw i64 %72, 4
  %81 = icmp ugt i64 %80, %2
  br i1 %81, label %82, label %85

82:                                               ; preds = %75, %70
  %83 = trunc i64 %71 to i32
  %84 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %65, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i32 %83) #9
  br label %190

85:                                               ; preds = %75
  %86 = getelementptr inbounds i8, i8* %1, i64 %73
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 1
  %89 = tail call i16 @llvm.bswap.i16(i16 %88) #9
  %90 = icmp eq i64 %71, 0
  br i1 %90, label %100, label %91

91:                                               ; preds = %85
  %92 = add nuw i64 %71, 4294967295
  %93 = and i64 %92, 4294967295
  %94 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %63, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 %93, i32 0
  %96 = load i16, i16* %95, align 2
  %97 = icmp ult i16 %96, %79
  br i1 %97, label %100, label %98

98:                                               ; preds = %91
  %99 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %65, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %190

100:                                              ; preds = %91, %85
  %101 = icmp ne i64 %71, %69
  %102 = icmp eq i16 %78, -1
  %103 = or i1 %101, %102
  br i1 %103, label %106, label %104

104:                                              ; preds = %100
  %105 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %65, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.5, i64 0, i64 0)) #9
  br label %190

106:                                              ; preds = %100
  %107 = zext i16 %89 to i32
  %108 = and i32 %107, 65280
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %106
  %111 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %65, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i32 %107) #9
  %112 = and i16 %89, 15
  br label %113

113:                                              ; preds = %106, %110
  %114 = phi i16 [ %89, %106 ], [ %112, %110 ]
  %115 = load i16, i16* %4, align 2
  %116 = icmp eq i16 %115, 0
  %117 = icmp ugt i16 %114, 3
  %118 = and i1 %117, %116
  br i1 %118, label %119, label %121

119:                                              ; preds = %113
  %120 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %65, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #9
  store i16 1, i16* %4, align 2
  br label %121

121:                                              ; preds = %119, %113
  %122 = zext i16 %114 to i32
  %123 = shl nuw i32 %122, 16
  %124 = zext i16 %79 to i32
  %125 = or i32 %123, %124
  %126 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %66, align 8
  %127 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %32, align 8
  %128 = icmp ult %"struct.std::__1::pair"* %126, %127
  %129 = ptrtoint %"struct.std::__1::pair"* %127 to i64
  br i1 %128, label %130, label %134

130:                                              ; preds = %121
  %131 = bitcast %"struct.std::__1::pair"* %126 to i32*
  store i32 %125, i32* %131, align 2
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 1
  %133 = ptrtoint %"struct.std::__1::pair"* %132 to i64
  store i64 %133, i64* %67, align 8
  br label %187

134:                                              ; preds = %121
  %135 = ptrtoint %"struct.std::__1::pair"* %126 to i64
  %136 = load i64, i64* %35, align 8
  %137 = sub i64 %135, %136
  %138 = ashr exact i64 %137, 2
  %139 = add nsw i64 %138, 1
  %140 = icmp ugt i64 %139, 4611686018427387903
  br i1 %140, label %141, label %143

141:                                              ; preds = %134
  %142 = bitcast %"class.std::__1::vector"* %30 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %142) #11
  unreachable

143:                                              ; preds = %134
  %144 = sub i64 %129, %136
  %145 = ashr exact i64 %144, 2
  %146 = icmp ult i64 %145, 2305843009213693951
  br i1 %146, label %147, label %155

147:                                              ; preds = %143
  %148 = ashr exact i64 %144, 1
  %149 = icmp ult i64 %148, %139
  %150 = select i1 %149, i64 %139, i64 %148
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %147
  %153 = icmp ugt i64 %150, 4611686018427387903
  br i1 %153, label %154, label %155

154:                                              ; preds = %152
  tail call void @abort() #11
  unreachable

155:                                              ; preds = %152, %143
  %156 = phi i64 [ %150, %152 ], [ 4611686018427387903, %143 ]
  %157 = shl i64 %156, 2
  %158 = tail call i8* @_Znwm(i64 %157) #10
  %159 = bitcast i8* %158 to %"struct.std::__1::pair"*
  br label %160

160:                                              ; preds = %155, %147
  %161 = phi i64 [ %156, %155 ], [ 0, %147 ]
  %162 = phi %"struct.std::__1::pair"* [ %159, %155 ], [ null, %147 ]
  %163 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %162, i64 %138
  %164 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %162, i64 %161
  %165 = ptrtoint %"struct.std::__1::pair"* %164 to i64
  %166 = bitcast %"struct.std::__1::pair"* %163 to i32*
  store i32 %125, i32* %166, align 2
  %167 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %163, i64 1
  %168 = ptrtoint %"struct.std::__1::pair"* %167 to i64
  %169 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %63, align 8
  %170 = load i64, i64* %67, align 8
  %171 = ptrtoint %"struct.std::__1::pair"* %169 to i64
  %172 = sub i64 %170, %171
  %173 = ashr exact i64 %172, 2
  %174 = sub nsw i64 0, %173
  %175 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %163, i64 %174
  %176 = ptrtoint %"struct.std::__1::pair"* %175 to i64
  %177 = icmp sgt i64 %172, 0
  br i1 %177, label %178, label %182

178:                                              ; preds = %160
  %179 = bitcast %"struct.std::__1::pair"* %175 to i8*
  %180 = bitcast %"struct.std::__1::pair"* %169 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %179, i8* align 2 %180, i64 %172, i1 false) #9
  %181 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %63, align 8
  br label %182

182:                                              ; preds = %178, %160
  %183 = phi %"struct.std::__1::pair"* [ %169, %160 ], [ %181, %178 ]
  store i64 %176, i64* %35, align 8
  store i64 %168, i64* %67, align 8
  store i64 %165, i64* %33, align 8
  %184 = icmp eq %"struct.std::__1::pair"* %183, null
  br i1 %184, label %187, label %185

185:                                              ; preds = %182
  %186 = bitcast %"struct.std::__1::pair"* %183 to i8*
  tail call void @_ZdlPv(i8* %186) #10
  br label %187

187:                                              ; preds = %130, %182, %185
  %188 = add nuw nsw i64 %71, 1
  %189 = icmp ult i64 %188, %68
  br i1 %189, label %70, label %190

190:                                              ; preds = %187, %82, %104, %98, %26, %20, %11
  %191 = phi i1 [ %23, %20 ], [ %28, %26 ], [ %13, %11 ], [ %84, %82 ], [ %105, %104 ], [ %99, %98 ], [ true, %187 ]
  ret i1 %191
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeGASP9SerializeEPNS_9OTSStreamE(%"class.ots::OpenTypeGASP"*, %"class.ots::OTSStream"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = getelementptr inbounds %"class.ots::OpenTypeGASP", %"class.ots::OpenTypeGASP"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.ots::OpenTypeGASP", %"class.ots::OpenTypeGASP"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = bitcast %"struct.std::__1::pair"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 2
  %23 = trunc i64 %22 to i16
  %24 = icmp ult i64 %22, 65536
  br i1 %24, label %25, label %120

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.ots::OpenTypeGASP", %"class.ots::OpenTypeGASP"* %0, i64 0, i32 1
  %27 = load i16, i16* %26, align 2
  %28 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %28)
  %29 = tail call i16 @llvm.bswap.i16(i16 %27) #9
  store i16 %29, i16* %11, align 2
  %30 = bitcast %"class.ots::OTSStream"* %1 to i64 (%"class.ots::OTSStream"*)***
  %31 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %30, align 8
  %32 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %31, i64 4
  %33 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %32, align 8
  %34 = tail call i64 %33(%"class.ots::OTSStream"* %1) #9
  %35 = and i64 %34, 3
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  br label %52

40:                                               ; preds = %25
  %41 = sub nuw nsw i64 4, %35
  %42 = icmp ult i64 %41, 2
  %43 = select i1 %42, i64 %41, i64 2
  %44 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #9
  store i32 0, i32* %9, align 4
  %45 = getelementptr inbounds i8, i8* %44, i64 %35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* nonnull align 2 %28, i64 %43, i1 false) #9
  %46 = load i32, i32* %9, align 4
  %47 = tail call i32 @llvm.bswap.i32(i32 %46) #9
  %48 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = add i32 %49, %47
  store i32 %50, i32* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #9
  %51 = icmp eq i64 %35, 3
  br i1 %51, label %52, label %62

52:                                               ; preds = %40, %37
  %53 = phi i32 [ %50, %40 ], [ %39, %37 ]
  %54 = phi i64 [ %43, %40 ], [ 0, %37 ]
  %55 = phi i64 [ 1, %40 ], [ 2, %37 ]
  %56 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56)
  store i32 0, i32* %10, align 4
  %57 = getelementptr inbounds i8, i8* %28, i64 %54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %56, i8* align 1 %57, i64 %55, i1 false) #9
  %58 = load i32, i32* %10, align 4
  %59 = tail call i32 @llvm.bswap.i32(i32 %58) #9
  %60 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %61 = add i32 %59, %53
  store i32 %61, i32* %60, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56)
  br label %62

62:                                               ; preds = %40, %52
  %63 = bitcast %"class.ots::OTSStream"* %1 to i1 (%"class.ots::OTSStream"*, i8*, i64)***
  %64 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %63, align 8
  %65 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %64, i64 2
  %66 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %65, align 8
  %67 = call zeroext i1 %66(%"class.ots::OTSStream"* %1, i8* nonnull %28, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %28)
  br i1 %67, label %68, label %120

68:                                               ; preds = %62
  %69 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %69)
  %70 = call i16 @llvm.bswap.i16(i16 %23) #9
  store i16 %70, i16* %8, align 2
  %71 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %30, align 8
  %72 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %71, i64 4
  %73 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %72, align 8
  %74 = call i64 %73(%"class.ots::OTSStream"* %1) #9
  %75 = and i64 %74, 3
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %79 = load i32, i32* %78, align 8
  br label %92

80:                                               ; preds = %68
  %81 = sub nuw nsw i64 4, %75
  %82 = icmp ult i64 %81, 2
  %83 = select i1 %82, i64 %81, i64 2
  %84 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #9
  store i32 0, i32* %6, align 4
  %85 = getelementptr inbounds i8, i8* %84, i64 %75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %85, i8* nonnull align 2 %69, i64 %83, i1 false) #9
  %86 = load i32, i32* %6, align 4
  %87 = call i32 @llvm.bswap.i32(i32 %86) #9
  %88 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, %87
  store i32 %90, i32* %88, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #9
  %91 = icmp eq i64 %75, 3
  br i1 %91, label %92, label %102

92:                                               ; preds = %80, %77
  %93 = phi i32 [ %90, %80 ], [ %79, %77 ]
  %94 = phi i64 [ %83, %80 ], [ 0, %77 ]
  %95 = phi i64 [ 1, %80 ], [ 2, %77 ]
  %96 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  store i32 0, i32* %7, align 4
  %97 = getelementptr inbounds i8, i8* %69, i64 %94
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %96, i8* align 1 %97, i64 %95, i1 false) #9
  %98 = load i32, i32* %7, align 4
  %99 = call i32 @llvm.bswap.i32(i32 %98) #9
  %100 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %101 = add i32 %99, %93
  store i32 %101, i32* %100, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96)
  br label %102

102:                                              ; preds = %80, %92
  %103 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %63, align 8
  %104 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %103, i64 2
  %105 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %104, align 8
  %106 = call zeroext i1 %105(%"class.ots::OTSStream"* %1, i8* nonnull %69, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %69)
  br i1 %106, label %107, label %120

107:                                              ; preds = %102
  %108 = trunc i64 %22 to i32
  %109 = and i32 %108, 65535
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %205, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 0
  %113 = bitcast i16* %5 to i8*
  %114 = bitcast i32* %3 to i8*
  %115 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %116 = bitcast i32* %4 to i8*
  %117 = bitcast i16* %14 to i8*
  %118 = bitcast i32* %12 to i8*
  %119 = bitcast i32* %13 to i8*
  br label %126

120:                                              ; preds = %2, %102, %62
  %121 = bitcast %"class.ots::OpenTypeGASP"* %0 to %"class.ots::Table"*
  %122 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %121, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0)) #9
  ret i1 %122

123:                                              ; preds = %196
  %124 = zext i16 %201 to i32
  %125 = icmp ugt i32 %109, %124
  br i1 %125, label %126, label %205

126:                                              ; preds = %111, %123
  %127 = phi i32 [ 0, %111 ], [ %124, %123 ]
  %128 = phi i16 [ 0, %111 ], [ %201, %123 ]
  %129 = zext i16 %128 to i64
  %130 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %112, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %130, i64 %129, i32 0
  %132 = load i16, i16* %131, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %113)
  %133 = call i16 @llvm.bswap.i16(i16 %132) #9
  store i16 %133, i16* %5, align 2
  %134 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %30, align 8
  %135 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %134, i64 4
  %136 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %135, align 8
  %137 = call i64 %136(%"class.ots::OTSStream"* %1) #9
  %138 = and i64 %137, 3
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %126
  %141 = load i32, i32* %115, align 8
  br label %152

142:                                              ; preds = %126
  %143 = sub nuw nsw i64 4, %138
  %144 = icmp ult i64 %143, 2
  %145 = select i1 %144, i64 %143, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #9
  store i32 0, i32* %3, align 4
  %146 = getelementptr inbounds i8, i8* %114, i64 %138
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %146, i8* nonnull align 2 %113, i64 %145, i1 false) #9
  %147 = load i32, i32* %3, align 4
  %148 = call i32 @llvm.bswap.i32(i32 %147) #9
  %149 = load i32, i32* %115, align 8
  %150 = add i32 %149, %148
  store i32 %150, i32* %115, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #9
  %151 = icmp eq i64 %138, 3
  br i1 %151, label %152, label %160

152:                                              ; preds = %142, %140
  %153 = phi i32 [ %150, %142 ], [ %141, %140 ]
  %154 = phi i64 [ %145, %142 ], [ 0, %140 ]
  %155 = phi i64 [ 1, %142 ], [ 2, %140 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %116)
  store i32 0, i32* %4, align 4
  %156 = getelementptr inbounds i8, i8* %113, i64 %154
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %116, i8* align 1 %156, i64 %155, i1 false) #9
  %157 = load i32, i32* %4, align 4
  %158 = call i32 @llvm.bswap.i32(i32 %157) #9
  %159 = add i32 %158, %153
  store i32 %159, i32* %115, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %116)
  br label %160

160:                                              ; preds = %142, %152
  %161 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %63, align 8
  %162 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %161, i64 2
  %163 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %162, align 8
  %164 = call zeroext i1 %163(%"class.ots::OTSStream"* %1, i8* nonnull %113, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %113)
  br i1 %164, label %165, label %202

165:                                              ; preds = %160
  %166 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %112, align 8
  %167 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %166, i64 %129, i32 1
  %168 = load i16, i16* %167, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %117)
  %169 = call i16 @llvm.bswap.i16(i16 %168) #9
  store i16 %169, i16* %14, align 2
  %170 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %30, align 8
  %171 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %170, i64 4
  %172 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %171, align 8
  %173 = call i64 %172(%"class.ots::OTSStream"* %1) #9
  %174 = and i64 %173, 3
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %178

176:                                              ; preds = %165
  %177 = load i32, i32* %115, align 8
  br label %188

178:                                              ; preds = %165
  %179 = sub nuw nsw i64 4, %174
  %180 = icmp ult i64 %179, 2
  %181 = select i1 %180, i64 %179, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118) #9
  store i32 0, i32* %12, align 4
  %182 = getelementptr inbounds i8, i8* %118, i64 %174
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %182, i8* nonnull align 2 %117, i64 %181, i1 false) #9
  %183 = load i32, i32* %12, align 4
  %184 = call i32 @llvm.bswap.i32(i32 %183) #9
  %185 = load i32, i32* %115, align 8
  %186 = add i32 %185, %184
  store i32 %186, i32* %115, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #9
  %187 = icmp eq i64 %174, 3
  br i1 %187, label %188, label %196

188:                                              ; preds = %178, %176
  %189 = phi i32 [ %186, %178 ], [ %177, %176 ]
  %190 = phi i64 [ %181, %178 ], [ 0, %176 ]
  %191 = phi i64 [ 1, %178 ], [ 2, %176 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119)
  store i32 0, i32* %13, align 4
  %192 = getelementptr inbounds i8, i8* %117, i64 %190
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %119, i8* align 1 %192, i64 %191, i1 false) #9
  %193 = load i32, i32* %13, align 4
  %194 = call i32 @llvm.bswap.i32(i32 %193) #9
  %195 = add i32 %194, %189
  store i32 %195, i32* %115, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119)
  br label %196

196:                                              ; preds = %178, %188
  %197 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %63, align 8
  %198 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %197, i64 2
  %199 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %198, align 8
  %200 = call zeroext i1 %199(%"class.ots::OTSStream"* %1, i8* nonnull %117, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %117)
  %201 = add i16 %128, 1
  br i1 %200, label %123, label %202

202:                                              ; preds = %160, %196
  %203 = bitcast %"class.ots::OpenTypeGASP"* %0 to %"class.ots::Table"*
  %204 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %203, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 0), i32 %127) #9
  br label %205

205:                                              ; preds = %123, %107, %202
  %206 = phi i1 [ %204, %202 ], [ true, %107 ], [ true, %123 ]
  ret i1 %206
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeGASPD2Ev(%"class.ots::OpenTypeGASP"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::OpenTypeGASP", %"class.ots::OpenTypeGASP"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3ots12OpenTypeGASPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::OpenTypeGASP", %"class.ots::OpenTypeGASP"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %8 = getelementptr inbounds %"class.ots::OpenTypeGASP", %"class.ots::OpenTypeGASP"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.std::__1::pair"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeGASPD0Ev(%"class.ots::OpenTypeGASP"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::OpenTypeGASP", %"class.ots::OpenTypeGASP"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3ots12OpenTypeGASPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::OpenTypeGASP", %"class.ots::OpenTypeGASP"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %8 = getelementptr inbounds %"class.ots::OpenTypeGASP", %"class.ots::OpenTypeGASP"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.std::__1::pair"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.ots::OpenTypeGASP"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #10
  ret void
}

declare zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #8

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
