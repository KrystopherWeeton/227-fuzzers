; ModuleID = '../../third_party/blink/renderer/core/html/forms/html_select_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/html_select_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1786", i64 }
%"class.std::__1::vector.1786" = type { %"class.std::__1::__vector_base.1787" }
%"class.std::__1::__vector_base.1787" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1788" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1788" = type { %"struct.std::__1::__compressed_pair_elem.1789" }
%"struct.std::__1::__compressed_pair_elem.1789" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::HTMLSelectElement" = type <{ %"class.blink::HTMLFormControlElementWithState.base", [2 x i8], %"class.blink::TypeAheadDataSource", %"class.blink::HeapVector.1811", %"class.blink::TypeAhead", i32, [4 x i8], %"class.blink::Member.1836", %"class.blink::Member.1836", i8, i8, i8, i8, [4 x i8], %"class.blink::Member.1840", i32, [4 x i8] }>
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.1336", %"class.blink::Member.1338", %"class.blink::Member.1340", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.1542", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector.1545", %"class.blink::HeapVector.1551", i32, i8, i8, i8, i8 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::HeapHashMap.1544"* }
%"class.blink::HeapHashMap.1544" = type opaque
%"class.blink::HeapVector.1545" = type { %"class.WTF::Vector.1548" }
%"class.WTF::Vector.1548" = type { %"class.WTF::VectorBuffer.1549" }
%"class.WTF::VectorBuffer.1549" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::Member.1334"*, i32, i32 }
%"class.blink::Member.1334" = type { %"class.blink::MemberBase.1335" }
%"class.blink::MemberBase.1335" = type { %"class.blink::ListedElement"* }
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.1336", %"class.blink::Member.1338", %"class.blink::Member.1340", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::HeapVector.1551" = type { %"class.WTF::Vector.1554" }
%"class.WTF::Vector.1554" = type { %"class.WTF::VectorBuffer.1555" }
%"class.WTF::VectorBuffer.1555" = type { %"class.WTF::VectorBufferBase.1556" }
%"class.WTF::VectorBufferBase.1556" = type { %"class.blink::Member.1557"*, i32, i32 }
%"class.blink::Member.1557" = type opaque
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.blink::TypeAheadDataSource" = type { i32 (...)** }
%"class.blink::HeapVector.1811" = type { %"class.WTF::Vector.1814" }
%"class.WTF::Vector.1814" = type { %"class.WTF::VectorBuffer.1815" }
%"class.WTF::VectorBuffer.1815" = type { %"class.WTF::VectorBufferBase.1816" }
%"class.WTF::VectorBufferBase.1816" = type { %"class.blink::Member.1817"*, i32, i32 }
%"class.blink::Member.1817" = type { %"class.blink::MemberBase.1818" }
%"class.blink::MemberBase.1818" = type { %"class.blink::HTMLElement"* }
%"class.blink::TypeAhead" = type { %"class.blink::TypeAheadDataSource"*, %"class.absl::optional.1820", i16, [6 x i8], %"class.WTF::StringBuilder" }
%"class.absl::optional.1820" = type { %"class.absl::optional_internal::optional_data.1821" }
%"class.absl::optional_internal::optional_data.1821" = type { %"class.absl::optional_internal::optional_data_base.1822" }
%"class.absl::optional_internal::optional_data_base.1822" = type { %"class.absl::optional_internal::optional_data_dtor_base.1823" }
%"class.absl::optional_internal::optional_data_dtor_base.1823" = type { i8, %union.anon.1824 }
%union.anon.1824 = type { %"class.base::TimeTicks" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1825, i32, i8, i8, [2 x i8] }>
%union.anon.1825 = type { %"class.WTF::Vector.1826" }
%"class.WTF::Vector.1826" = type { %"class.WTF::VectorBuffer.1827" }
%"class.WTF::VectorBuffer.1827" = type { %"class.WTF::VectorBufferBase.1828", [16 x i8] }
%"class.WTF::VectorBufferBase.1828" = type { i8*, i32, i32 }
%"class.blink::Member.1836" = type { %"class.blink::MemberBase.1837" }
%"class.blink::MemberBase.1837" = type { %"class.blink::HTMLOptionElement"* }
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.1838", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Member.1838" = type { %"class.blink::MemberBase.1839" }
%"class.blink::MemberBase.1839" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.blink::Member.1840" = type { %"class.blink::MemberBase.1841" }
%"class.blink::MemberBase.1841" = type { %"class.blink::SelectType"* }
%"class.blink::SelectType" = type <{ i32 (...)**, %"class.blink::Member.1844", i8, [7 x i8] }>
%"class.blink::Member.1844" = type { %"class.blink::MemberBase.1845" }
%"class.blink::MemberBase.1845" = type { %"class.blink::HTMLSelectElement"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1351", i8, [7 x i8], %"class.blink::HeapHashMap.1353", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1360", %"class.blink::Member.1365", %"class.blink::Member.1369", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1371", %"class.blink::HeapVector.1373", %"class.std::__1::unique_ptr.1381", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1387", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1400", %"class.WTF::Vector.1402", i8, i8, %"class.std::__1::unique_ptr.1407", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1413", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1421", i8, i32, %"class.blink::Member.1423", %"class.blink::Member.1425", %"class.blink::Member.1427", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1429", %"class.WTF::HashMap.1431", %"class.blink::Member.1436", %"class.blink::Member.1438", %"class.blink::Member.1440", %"class.blink::Member.1442", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1444", i8, i32, %"class.blink::Member.1451", %"class.blink::Member.1453", i32, %"class.blink::Member.1455", %"class.blink::Member.1457", %"class.blink::Member.1459", %"class.std::__1::unique_ptr.1461", i64, %"class.std::__1::unique_ptr.1467", i32, i32, %"class.blink::Member.1478", %"class.blink::Member.1480", %"class.blink::Member.1482", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1484", %"class.WTF::Vector.1486", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1491", %"class.blink::Member.1498", %"class.std::__1::unique_ptr.1500", %"class.blink::Member.1506", i8, i8, %"class.WTF::String", %"class.blink::Member.1508", i8, [7 x i8], %"class.blink::HeapHashMap.1510", %"class.blink::HeapObserverSet", %"class.blink::Member.1524", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1526", i32, i8, i8, %"class.blink::WeakMember.1528", %"class.blink::Member.1529" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1570", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1637", i32, i8, [3 x i8], %"class.blink::HeapVector.1639", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1647", %"class.blink::Member.1649", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1658", %"class.blink::Member.1781", %"class.blink::Member.1783", i8, [7 x i8] }>
%"class.blink::Supplementable.1570" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1571" }
%"class.blink::HeapHashMap.1571" = type { %"class.WTF::HashMap.1574" }
%"class.WTF::HashMap.1574" = type { %"class.WTF::HashTable.1575" }
%"class.WTF::HashTable.1575" = type <{ %"struct.WTF::KeyValuePair.1577"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1577" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1586" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1578" }
%"class.blink::HeapObserverSet.1578" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1579" }
%"class.blink::HeapHashSet.1579" = type { %"class.WTF::HashSet.1582" }
%"class.WTF::HashSet.1582" = type { %"class.WTF::HashTable.1583" }
%"class.WTF::HashTable.1583" = type <{ %"class.blink::WeakMember.1585"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1585" = type opaque
%"class.blink::Supplementable.1586" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1587" }
%"class.blink::HeapHashMap.1587" = type { %"class.WTF::HashMap.1590" }
%"class.WTF::HashMap.1590" = type { %"class.WTF::HashTable.1591" }
%"class.WTF::HashTable.1591" = type <{ %"struct.WTF::KeyValuePair.1593"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1593" = type { i8*, %"class.blink::Member.3035" }
%"class.blink::Member.3035" = type { %"class.blink::MemberBase.3036" }
%"class.blink::MemberBase.3036" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3037" }
%"class.blink::Member.3037" = type { %"class.blink::MemberBase.3038" }
%"class.blink::MemberBase.3038" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1594, %"class.std::__1::unique_ptr.1603", %"class.std::__1::unique_ptr.1603", %"class.std::__1::unique_ptr.1627", %"class.std::__1::unique_ptr.1627", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1633", i32, i32 }
%class.scoped_refptr.1594 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1595", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1597", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1602 }
%"class.WTF::RefCounted.1595" = type { %"class.base::RefCounted.1596" }
%"class.base::RefCounted.1596" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1597" = type { %"class.absl::optional_internal::optional_data.1598" }
%"class.absl::optional_internal::optional_data.1598" = type { %"class.absl::optional_internal::optional_data_base.1599" }
%"class.absl::optional_internal::optional_data_base.1599" = type { %"class.absl::optional_internal::optional_data_dtor_base.1600" }
%"class.absl::optional_internal::optional_data_dtor_base.1600" = type { i8, %union.anon.1601 }
%union.anon.1601 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1602 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1614", %"class.std::__1::map.1623"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1597" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1606", %"class.std::__1::__compressed_pair.1611" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1606" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"struct.std::__1::__compressed_pair_elem.1607" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1614" = type { %"class.std::__1::__tree.1615" }
%"class.std::__1::__tree.1615" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1616", %"class.std::__1::__compressed_pair.1620" }
%"class.std::__1::__compressed_pair.1616" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"class.std::__1::__compressed_pair.1620" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1623" = type opaque
%"class.std::__1::unique_ptr.1627" = type { %"class.std::__1::__compressed_pair.1628" }
%"class.std::__1::__compressed_pair.1628" = type { %"struct.std::__1::__compressed_pair_elem.1629" }
%"struct.std::__1::__compressed_pair_elem.1629" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1633" = type { %"class.WTF::HashTable.1634" }
%"class.WTF::HashTable.1634" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1637" = type { %"class.blink::MemberBase.1638" }
%"class.blink::MemberBase.1638" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1639" = type { %"class.WTF::Vector.1642" }
%"class.WTF::Vector.1642" = type { %"class.WTF::VectorBuffer.1643" }
%"class.WTF::VectorBuffer.1643" = type { %"class.WTF::VectorBufferBase.1644" }
%"class.WTF::VectorBufferBase.1644" = type { %"class.blink::Member.1645"*, i32, i32 }
%"class.blink::Member.1645" = type opaque
%"class.blink::Member.1647" = type { %"class.blink::MemberBase.1648" }
%"class.blink::MemberBase.1648" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1649" = type { %"class.blink::MemberBase.1650" }
%"class.blink::MemberBase.1650" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1651", i32, i32 }
%"class.blink::HeapHashMap.1651" = type { %"class.WTF::HashMap.1654" }
%"class.WTF::HashMap.1654" = type { %"class.WTF::HashTable.1655" }
%"class.WTF::HashTable.1655" = type <{ %"struct.WTF::KeyValuePair.1657"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1657" = type opaque
%"class.std::__1::unique_ptr.1658" = type { %"class.std::__1::__compressed_pair.1659" }
%"class.std::__1::__compressed_pair.1659" = type { %"struct.std::__1::__compressed_pair_elem.1660" }
%"struct.std::__1::__compressed_pair_elem.1660" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1661" }
%"class.std::__1::unique_ptr.1661" = type { %"class.std::__1::__compressed_pair.1662" }
%"class.std::__1::__compressed_pair.1662" = type { %"struct.std::__1::__compressed_pair_elem.1663" }
%"struct.std::__1::__compressed_pair_elem.1663" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1664" }
%"class.WTF::Vector.1664" = type { %"class.WTF::VectorBuffer.1665" }
%"class.WTF::VectorBuffer.1665" = type { %"class.WTF::VectorBufferBase.1666" }
%"class.WTF::VectorBufferBase.1666" = type { %"class.mojo::StructPtr.1667"*, i32, i32 }
%"class.mojo::StructPtr.1667" = type { %"class.std::__1::unique_ptr.1668" }
%"class.std::__1::unique_ptr.1668" = type { %"class.std::__1::__compressed_pair.1669" }
%"class.std::__1::__compressed_pair.1669" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"struct.std::__1::__compressed_pair_elem.1670" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1671", %"class.WTF::HashMap.1678", %"class.WTF::HashMap.1683", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1688", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1671" = type { %"class.std::__1::unique_ptr.1672" }
%"class.std::__1::unique_ptr.1672" = type { %"class.std::__1::__compressed_pair.1673" }
%"class.std::__1::__compressed_pair.1673" = type { %"struct.std::__1::__compressed_pair_elem.1674" }
%"struct.std::__1::__compressed_pair_elem.1674" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1678" = type { %"class.WTF::HashTable.1679" }
%"class.WTF::HashTable.1679" = type <{ %"struct.WTF::KeyValuePair.1682"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1682" = type opaque
%"class.WTF::HashMap.1683" = type { %"class.WTF::HashTable.1684" }
%"class.WTF::HashTable.1684" = type <{ %"struct.WTF::KeyValuePair.1687"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1687" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1688" = type { %"class.std::__1::unique_ptr.1689" }
%"class.std::__1::unique_ptr.1689" = type { %"class.std::__1::__compressed_pair.1690" }
%"class.std::__1::__compressed_pair.1690" = type { %"struct.std::__1::__compressed_pair_elem.1691" }
%"struct.std::__1::__compressed_pair_elem.1691" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1772" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1703", i32 }>
%"class.std::__1::unique_ptr.1703" = type { %"class.std::__1::__compressed_pair.1704" }
%"class.std::__1::__compressed_pair.1704" = type { %"struct.std::__1::__compressed_pair_elem.1705" }
%"struct.std::__1::__compressed_pair_elem.1705" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1706", %"class.absl::optional.1707", %"class.absl::optional.1712", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1725", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1747", %"class.std::__1::map.1758", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1767", i8, %class.scoped_refptr.1717, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1768" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1706" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1707" = type { %"class.absl::optional_internal::optional_data.1708" }
%"class.absl::optional_internal::optional_data.1708" = type { %"class.absl::optional_internal::optional_data_base.1709" }
%"class.absl::optional_internal::optional_data_base.1709" = type { %"class.absl::optional_internal::optional_data_dtor_base.1710" }
%"class.absl::optional_internal::optional_data_dtor_base.1710" = type { i8, %union.anon.1711 }
%union.anon.1711 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1712" = type { %"class.absl::optional_internal::optional_data.1713" }
%"class.absl::optional_internal::optional_data.1713" = type { %"class.absl::optional_internal::optional_data_base.1714" }
%"class.absl::optional_internal::optional_data_base.1714" = type { %"class.absl::optional_internal::optional_data_dtor_base.1715" }
%"class.absl::optional_internal::optional_data_dtor_base.1715" = type { i8, %union.anon.1716 }
%union.anon.1716 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1717, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1718" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1718" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1723 }
%class.scoped_refptr.1723 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1785", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1717, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1785" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1724 }
%class.scoped_refptr.1724 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1725" = type { %"class.std::__1::__compressed_pair.1726" }
%"class.std::__1::__compressed_pair.1726" = type { %"struct.std::__1::__compressed_pair_elem.1727" }
%"struct.std::__1::__compressed_pair_elem.1727" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1728", %class.scoped_refptr.1729 }
%"class.base::RepeatingCallback.1728" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1729 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1730", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1730" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1734", %"class.std::__1::unique_ptr.1740", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1746" }
%"class.std::__1::unique_ptr.1734" = type { %"class.std::__1::__compressed_pair.1735" }
%"class.std::__1::__compressed_pair.1735" = type { %"struct.std::__1::__compressed_pair_elem.1736" }
%"struct.std::__1::__compressed_pair_elem.1736" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1740" = type { %"class.std::__1::__compressed_pair.1741" }
%"class.std::__1::__compressed_pair.1741" = type { %"struct.std::__1::__compressed_pair_elem.1742" }
%"struct.std::__1::__compressed_pair_elem.1742" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1746" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1747" = type { %"class.std::__1::__tree.1748" }
%"class.std::__1::__tree.1748" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1749", %"class.std::__1::__compressed_pair.1753" }
%"class.std::__1::__compressed_pair.1749" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"class.std::__1::__compressed_pair.1753" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1758" = type { %"class.std::__1::__tree.1759" }
%"class.std::__1::__tree.1759" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1760", %"class.std::__1::__compressed_pair.1764" }
%"class.std::__1::__compressed_pair.1760" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"class.std::__1::__compressed_pair.1764" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1767" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1717 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1768" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1772" = type { %"class.std::__1::__compressed_pair.1773" }
%"class.std::__1::__compressed_pair.1773" = type { %"struct.std::__1::__compressed_pair_elem.1774" }
%"struct.std::__1::__compressed_pair_elem.1774" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1781" = type { %"class.blink::MemberBase.1782" }
%"class.blink::MemberBase.1782" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1783" = type { %"class.blink::MemberBase.1784" }
%"class.blink::MemberBase.1784" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1561", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1561" = type { %"class.WTF::Vector.1564" }
%"class.WTF::Vector.1564" = type { %"class.WTF::VectorBuffer.1565" }
%"class.WTF::VectorBuffer.1565" = type { %"class.WTF::VectorBufferBase.1566" }
%"class.WTF::VectorBufferBase.1566" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1793", [4 x i8] }>
%"class.WTF::RefCounted.1793" = type { %"class.base::RefCounted.1794" }
%"class.base::RefCounted.1794" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3039" }
%"class.WTF::Vector.3039" = type { %"class.WTF::VectorBuffer.3040" }
%"class.WTF::VectorBuffer.3040" = type { %"class.WTF::VectorBufferBase.3041" }
%"class.WTF::VectorBufferBase.3041" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3044", %"class.absl::optional.3044", %"class.absl::optional.3044" }
%"class.absl::optional.3044" = type { %"class.absl::optional_internal::optional_data.3045" }
%"class.absl::optional_internal::optional_data.3045" = type { %"class.absl::optional_internal::optional_data_base.3046" }
%"class.absl::optional_internal::optional_data_base.3046" = type { %"class.absl::optional_internal::optional_data_dtor_base.3047" }
%"class.absl::optional_internal::optional_data_dtor_base.3047" = type { i8, %union.anon.3048 }
%union.anon.3048 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3049 }
%class.scoped_refptr.3049 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3050", %"class.WTF::Vector.630", %"class.WTF::Vector.3052", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3050" = type { %"class.base::RefCounted.3051" }
%"class.base::RefCounted.3051" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3052" = type { %"class.WTF::VectorBuffer.3053" }
%"class.WTF::VectorBuffer.3053" = type { %"class.WTF::VectorBufferBase.3054" }
%"class.WTF::VectorBufferBase.3054" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3055 }
%union.anon.3055 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3059" }
%"class.WTF::VectorBuffer.3059" = type { %"class.WTF::VectorBufferBase.3060", [32 x i8] }
%"class.WTF::VectorBufferBase.3060" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3126 }
%class.scoped_refptr.3126 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.3136" }
%"class.blink::Member.3136" = type { %"class.blink::MemberBase.3137" }
%"class.blink::MemberBase.3137" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.3132" }
%"class.blink::MemberBase.3132" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.3133" }
%"class.blink::MemberBase.3133" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.3134" }
%"class.blink::MemberBase.3134" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.3135" }
%"class.blink::MemberBase.3135" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3127", %"class.WTF::Vector.3127" }
%"class.WTF::Vector.3127" = type { %"class.WTF::VectorBuffer.3128" }
%"class.WTF::VectorBuffer.3128" = type { %"class.WTF::VectorBufferBase.3129" }
%"class.WTF::VectorBufferBase.3129" = type { %class.scoped_refptr.3126*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type <{ %"class.blink::Member.326", %"class.blink::Member.1324", %"class.WTF::HashMap.1344", %"class.blink::Member.1349", i8, [7 x i8] }>
%"class.blink::Member.1324" = type { %"class.blink::MemberBase.1325" }
%"class.blink::MemberBase.1325" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type <{ %"class.blink::Member.326", %"class.blink::HeapVector.1328", i8, [7 x i8] }>
%"class.blink::HeapVector.1328" = type { %"class.WTF::Vector.1331" }
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333", [512 x i8] }
%"class.WTF::HashMap.1344" = type { %"class.WTF::HashTable.1345" }
%"class.WTF::HashTable.1345" = type <{ %"struct.WTF::KeyValuePair.1348"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1348" = type opaque
%"class.blink::Member.1349" = type { %"class.blink::MemberBase.1350" }
%"class.blink::MemberBase.1350" = type { %"class.blink::FormKeyGenerator"* }
%"class.blink::FormKeyGenerator" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1351" = type { %"class.blink::MemberBase.1352" }
%"class.blink::MemberBase.1352" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1353" = type { %"class.WTF::HashMap.1356" }
%"class.WTF::HashMap.1356" = type { %"class.WTF::HashTable.1357" }
%"class.WTF::HashTable.1357" = type <{ %"struct.WTF::KeyValuePair.1359"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1359" = type opaque
%"class.WTF::Vector.1360" = type { %"class.WTF::VectorBuffer.1361" }
%"class.WTF::VectorBuffer.1361" = type { %"class.WTF::VectorBufferBase.1362" }
%"class.WTF::VectorBufferBase.1362" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1365" = type { %"class.blink::MemberBase.1366" }
%"class.blink::MemberBase.1366" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1371" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1373" = type { %"class.WTF::Vector.1376" }
%"class.WTF::Vector.1376" = type { %"class.WTF::VectorBuffer.1377" }
%"class.WTF::VectorBuffer.1377" = type { %"class.WTF::VectorBufferBase.1378" }
%"class.WTF::VectorBufferBase.1378" = type { %"class.blink::Member.1379"*, i32, i32 }
%"class.blink::Member.1379" = type opaque
%"class.std::__1::unique_ptr.1381" = type { %"class.std::__1::__compressed_pair.1382" }
%"class.std::__1::__compressed_pair.1382" = type { %"struct.std::__1::__compressed_pair_elem.1383" }
%"struct.std::__1::__compressed_pair_elem.1383" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1387" = type { %"class.WTF::HashSet.1390" }
%"class.WTF::HashSet.1390" = type { %"class.WTF::HashTable.1391" }
%"class.WTF::HashTable.1391" = type <{ %"class.blink::WeakMember.1393"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1393" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1394", i32, [4 x i8] }>
%"class.WTF::Vector.1394" = type { %"class.WTF::VectorBuffer.1395" }
%"class.WTF::VectorBuffer.1395" = type { %"class.WTF::VectorBufferBase.1396" }
%"class.WTF::VectorBufferBase.1396" = type { %"struct.std::__1::pair.1397"*, i32, i32 }
%"struct.std::__1::pair.1397" = type opaque
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1402" = type { %"class.WTF::VectorBuffer.1403" }
%"class.WTF::VectorBuffer.1403" = type { %"class.WTF::VectorBufferBase.1404" }
%"class.WTF::VectorBufferBase.1404" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1407" = type { %"class.std::__1::__compressed_pair.1408" }
%"class.std::__1::__compressed_pair.1408" = type { %"struct.std::__1::__compressed_pair_elem.1409" }
%"struct.std::__1::__compressed_pair_elem.1409" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1413" = type { %"class.WTF::Vector.1416" }
%"class.WTF::Vector.1416" = type { %"class.WTF::VectorBuffer.1417" }
%"class.WTF::VectorBuffer.1417" = type { %"class.WTF::VectorBufferBase.1418" }
%"class.WTF::VectorBufferBase.1418" = type { %"class.blink::Member.1419"*, i32, i32 }
%"class.blink::Member.1419" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.1422" }
%"class.blink::MemberBase.1422" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1423" = type { %"class.blink::MemberBase.1424" }
%"class.blink::MemberBase.1424" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1431" = type { %"class.WTF::HashTable.1432" }
%"class.WTF::HashTable.1432" = type <{ %"struct.WTF::KeyValuePair.1435"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1435" = type opaque
%"class.blink::Member.1436" = type { %"class.blink::MemberBase.1437" }
%"class.blink::MemberBase.1437" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1438" = type { %"class.blink::MemberBase.1439" }
%"class.blink::MemberBase.1439" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1440" = type { %"class.blink::MemberBase.1441" }
%"class.blink::MemberBase.1441" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1442" = type { %"class.blink::MemberBase.1443" }
%"class.blink::MemberBase.1443" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1444" = type { %"class.WTF::HashSet.1447" }
%"class.WTF::HashSet.1447" = type { %"class.WTF::HashTable.1448" }
%"class.WTF::HashTable.1448" = type <{ %"class.blink::Member.1450"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1450" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1459" = type { %"class.blink::MemberBase.1460" }
%"class.blink::MemberBase.1460" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1461" = type { %"class.std::__1::__compressed_pair.1462" }
%"class.std::__1::__compressed_pair.1462" = type { %"struct.std::__1::__compressed_pair_elem.1463" }
%"struct.std::__1::__compressed_pair_elem.1463" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1467" = type { %"class.std::__1::__compressed_pair.1468" }
%"class.std::__1::__compressed_pair.1468" = type { %"struct.std::__1::__compressed_pair_elem.1469" }
%"struct.std::__1::__compressed_pair_elem.1469" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1470", %"class.WTF::HashMap.1470", %"class.WTF::HashMap.1470", %"class.WTF::HashMap.1470", %"class.WTF::HashMap.1470", %"class.WTF::HashMap.1470", %"class.WTF::HashMap.1470", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1470" = type { %"class.WTF::HashTable.1471" }
%"class.WTF::HashTable.1471" = type <{ %"struct.WTF::KeyValuePair.1474"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1474" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1478" = type { %"class.blink::MemberBase.1479" }
%"class.blink::MemberBase.1479" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1480" = type { %"class.blink::MemberBase.1481" }
%"class.blink::MemberBase.1481" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1482" = type { %"class.blink::MemberBase.1483" }
%"class.blink::MemberBase.1483" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1484" = type { %"class.blink::MemberBase.1485" }
%"class.blink::MemberBase.1485" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1486" = type { %"class.WTF::VectorBuffer.1487" }
%"class.WTF::VectorBuffer.1487" = type { %"class.WTF::VectorBufferBase.1488" }
%"class.WTF::VectorBufferBase.1488" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1491" = type { %"class.WTF::HashMap.1494" }
%"class.WTF::HashMap.1494" = type { %"class.WTF::HashTable.1495" }
%"class.WTF::HashTable.1495" = type <{ %"struct.WTF::KeyValuePair.1497"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1497" = type opaque
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1500" = type { %"class.std::__1::__compressed_pair.1501" }
%"class.std::__1::__compressed_pair.1501" = type { %"struct.std::__1::__compressed_pair_elem.1502" }
%"struct.std::__1::__compressed_pair_elem.1502" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1506" = type { %"class.blink::MemberBase.1507" }
%"class.blink::MemberBase.1507" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1508" = type { %"class.blink::MemberBase.1509" }
%"class.blink::MemberBase.1509" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1510" = type { %"class.WTF::HashMap.1513" }
%"class.WTF::HashMap.1513" = type { %"class.WTF::HashTable.1514" }
%"class.WTF::HashTable.1514" = type <{ %"struct.WTF::KeyValuePair.1516"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1516" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1517" }
%"class.blink::HeapHashSet.1517" = type { %"class.WTF::HashSet.1520" }
%"class.WTF::HashSet.1520" = type { %"class.WTF::HashTable.1521" }
%"class.WTF::HashTable.1521" = type <{ %"class.blink::WeakMember.1523"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1523" = type opaque
%"class.blink::Member.1524" = type { %"class.blink::MemberBase.1525" }
%"class.blink::MemberBase.1525" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1533", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1540", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1533" = type { %"class.WTF::HashSet.1536" }
%"class.WTF::HashSet.1536" = type { %"class.WTF::HashTable.1537" }
%"class.WTF::HashTable.1537" = type <{ %"class.blink::Member.1539"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1539" = type opaque
%"class.blink::HeapTaskRunnerTimer.1540" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1541", { i64, i64 } }
%"class.blink::WeakMember.1541" = type { %"class.blink::MemberBase.1527" }
%"class.blink::WeakMember.1528" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::HTMLFormControlElementWithState" = type { %"class.blink::HTMLFormControlElement.base", i8, [2 x i8] }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1318", %"class.blink::Member.1846", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.1846" = type { %"class.blink::MemberBase.1847" }
%"class.blink::MemberBase.1847" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.blink::OptionListIterator" = type { %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLOptionElement"* }
%"class.WTF::Vector.1854" = type { %"class.WTF::VectorBuffer.1855" }
%"class.WTF::VectorBuffer.1855" = type { %"class.WTF::VectorBufferBase.1856" }
%"class.WTF::VectorBufferBase.1856" = type { i32*, i32, i32 }
%"class.blink::HeapHashSet.1859" = type { %"class.WTF::HashSet.1862" }
%"class.WTF::HashSet.1862" = type { %"class.WTF::HashTable.1863" }
%"class.WTF::HashTable.1863" = type <{ %"class.blink::Member.1836"*, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutTheme" = type <{ i32 (...)**, %"class.WTF::RefCounted.1865", %"class.blink::Color", i8, [7 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.WTF::RefCounted.1865" = type { %"class.base::RefCounted.1866" }
%"class.base::RefCounted.1866" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::V8UnionHTMLOptGroupElementOrHTMLOptionElement" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.1869", %"class.blink::Member.1836" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.1869" = type { %"class.blink::MemberBase.1870" }
%"class.blink::MemberBase.1870" = type { %"class.blink::HTMLOptGroupElement"* }
%"class.blink::HTMLOptGroupElement" = type { %"class.blink::HTMLElement" }
%"class.blink::V8UnionHTMLElementOrLong" = type <{ %"class.blink::bindings::UnionBase", i32, [4 x i8], %"class.blink::Member.1817", i32, [4 x i8] }>
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1871" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1871" = type { %"class.v8::TracedReference.1872" }
%"class.v8::TracedReference.1872" = type { %"class.v8::BasicTracedReference.1873" }
%"class.v8::BasicTracedReference.1873" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::NodeListsNodeData" = type { %"class.blink::Member.3146", %"class.blink::HeapHashMap.3148", %"class.blink::HeapHashMap.3158" }
%"class.blink::Member.3146" = type { %"class.blink::MemberBase.3147" }
%"class.blink::MemberBase.3147" = type { %"class.blink::NodeList"* }
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.3148" = type { %"class.WTF::HashMap.3151" }
%"class.WTF::HashMap.3151" = type { %"class.WTF::HashTable.3152" }
%"class.WTF::HashTable.3152" = type <{ %"struct.WTF::KeyValuePair.3154"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3154" = type { %"struct.std::__1::pair.3155", %"class.blink::Member.3156" }
%"struct.std::__1::pair.3155" = type { i32, %"class.WTF::AtomicString" }
%"class.blink::Member.3156" = type { %"class.blink::MemberBase.3157" }
%"class.blink::MemberBase.3157" = type { %"class.blink::LiveNodeListBase"* }
%"class.blink::LiveNodeListBase" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", i16, [6 x i8] }>
%"class.blink::HeapHashMap.3158" = type { %"class.WTF::HashMap.3161" }
%"class.WTF::HashMap.3161" = type { %"class.WTF::HashTable.3162" }
%"class.WTF::HashTable.3162" = type <{ %"struct.WTF::KeyValuePair.3164"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3164" = type { %"class.blink::QualifiedName", %"class.blink::Member.3165" }
%"class.blink::Member.3165" = type { %"class.blink::MemberBase.3166" }
%"class.blink::MemberBase.3166" = type { %"class.blink::TagCollectionNS"* }
%"class.blink::TagCollectionNS" = type { %"class.blink::HTMLCollection", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::HTMLCollection" = type { %"class.blink::ScriptWrappable", %"class.blink::LiveNodeListBase.base", i8, %"class.blink::Member.1874", %"class.blink::CollectionItemsCache" }
%"class.blink::LiveNodeListBase.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", i16 }>
%"class.blink::Member.1874" = type { %"class.blink::MemberBase.1875" }
%"class.blink::MemberBase.1875" = type { %"class.blink::HTMLCollection::NamedItemCache"* }
%"class.blink::HTMLCollection::NamedItemCache" = type { %"class.blink::HeapHashMap.1878", %"class.blink::HeapHashMap.1878" }
%"class.blink::HeapHashMap.1878" = type { %"class.WTF::HashMap.1881" }
%"class.WTF::HashMap.1881" = type { %"class.WTF::HashTable.1882" }
%"class.WTF::HashTable.1882" = type <{ %"struct.WTF::KeyValuePair.1884"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1884" = type { %"class.WTF::StringImpl"*, %"class.blink::Member.1885" }
%"class.blink::Member.1885" = type { %"class.blink::MemberBase.1886" }
%"class.blink::MemberBase.1886" = type { %"class.blink::HeapVector.365"* }
%"class.blink::CollectionItemsCache" = type { %"class.blink::CollectionIndexCache", i8, %"class.blink::HeapVector.365" }
%"class.blink::CollectionIndexCache" = type { i32 (...)**, %"class.blink::Member.343", i32, i32 }
%"class.blink::HTMLOptionsCollection" = type { %"class.blink::HTMLCollection" }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2173", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2181", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2195", %"class.blink::FrameLoader", %"class.blink::Member.2216", %"class.blink::Member.343", %"class.blink::Member.2218", %"class.blink::Member.2220", %"class.blink::Member.2236", %"class.blink::Member.2238", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2240", %class.scoped_refptr.2464, %"class.blink::Member.2465", %"class.blink::Member.2467", %"class.blink::Member.2469", %"class.blink::Member.2471", %"class.blink::Member.2473", %"class.blink::Member.2477", %"class.blink::Member.2479", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2483", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2489", %"class.std::__1::unique_ptr.2490", %"class.absl::optional.2161", i32, [4 x i8], %"class.std::__1::unique_ptr.2496", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2504", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2509", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2514", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2517", %"class.blink::Member.2519", %"class.blink::Member.2521", %"class.blink::Member.2523", %"class.mojo::StructPtr.2526", %"class.blink::Member.2535", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2537", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2005", %"class.blink::Member.2007", %"class.blink::Member.2009", i8, i32, i8, i32, %"class.blink::Member.2142", %"class.blink::Member.2032", %"class.blink::FrameLifecycle", %"class.blink::Member.2003", %"class.blink::Member.2003", %"class.blink::Member.2003", %"class.blink::Member.2003", %"class.blink::Member.2003", %"class.blink::Member.2003", %"class.blink::Member.2144", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2154", i8, %"class.base::UnguessableToken", %"class.absl::optional.2156", %"class.absl::optional.2161", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2003", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2005" = type { %"class.blink::MemberBase.2006" }
%"class.blink::MemberBase.2006" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2844", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.2003", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2858", %"class.blink::Member.2862", %"class.blink::Member.2864", %"class.blink::Member.2868", %"class.blink::Member.2870", %"class.blink::Member.2872", %"class.blink::Member.2874", %"class.blink::Member.2876", %"class.blink::HeapObserverSet.2878", %"class.blink::Member.2886", %"class.blink::Member.2888", %"class.blink::Member.2890", %"class.blink::Member.2892", %"class.blink::Member.2894", %"class.blink::Member.2896", %"class.blink::Member.2898", %"class.blink::Member.2900", %"class.blink::Member.2902", %"class.blink::Member.2904", %"class.blink::Member.2906", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2931", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2938", %"class.blink::Member.2005", %"class.blink::Member.2005", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2946", %"class.std::__1::unique_ptr.2952", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2844" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2845" }
%"class.blink::HeapHashMap.2845" = type { %"class.WTF::HashMap.2848" }
%"class.WTF::HashMap.2848" = type { %"class.WTF::HashTable.2849" }
%"class.WTF::HashTable.2849" = type <{ %"struct.WTF::KeyValuePair.2851"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2851" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2852" }
%"class.std::__1::unique_ptr.2852" = type { %"class.std::__1::__compressed_pair.2853" }
%"class.std::__1::__compressed_pair.2853" = type { %"struct.std::__1::__compressed_pair_elem.2854" }
%"struct.std::__1::__compressed_pair_elem.2854" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2858" = type { %"class.blink::MemberBase.2859" }
%"class.blink::MemberBase.2859" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2005", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2862" = type { %"class.blink::MemberBase.2863" }
%"class.blink::MemberBase.2863" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2864" = type { %"class.blink::MemberBase.2865" }
%"class.blink::MemberBase.2865" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.1528", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.2868" = type { %"class.blink::MemberBase.2869" }
%"class.blink::MemberBase.2869" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2870" = type { %"class.blink::MemberBase.2871" }
%"class.blink::MemberBase.2871" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2872" = type { %"class.blink::MemberBase.2873" }
%"class.blink::MemberBase.2873" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2874" = type { %"class.blink::MemberBase.2875" }
%"class.blink::MemberBase.2875" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2876" = type { %"class.blink::MemberBase.2877" }
%"class.blink::MemberBase.2877" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2878" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2879" }
%"class.blink::HeapHashSet.2879" = type { %"class.WTF::HashSet.2882" }
%"class.WTF::HashSet.2882" = type { %"class.WTF::HashTable.2883" }
%"class.WTF::HashTable.2883" = type <{ %"class.blink::WeakMember.2885"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2885" = type opaque
%"class.blink::Member.2886" = type { %"class.blink::MemberBase.2887" }
%"class.blink::MemberBase.2887" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2888" = type { %"class.blink::MemberBase.2889" }
%"class.blink::MemberBase.2889" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2890" = type { %"class.blink::MemberBase.2891" }
%"class.blink::MemberBase.2891" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2892" = type { %"class.blink::MemberBase.2893" }
%"class.blink::MemberBase.2893" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2894" = type { %"class.blink::MemberBase.2895" }
%"class.blink::MemberBase.2895" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2896" = type { %"class.blink::MemberBase.2897" }
%"class.blink::MemberBase.2897" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2898" = type { %"class.blink::MemberBase.2899" }
%"class.blink::MemberBase.2899" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2900" = type { %"class.blink::MemberBase.2901" }
%"class.blink::MemberBase.2901" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2902" = type { %"class.blink::MemberBase.2903" }
%"class.blink::MemberBase.2903" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2904" = type { %"class.blink::MemberBase.2905" }
%"class.blink::MemberBase.2905" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2906" = type { %"class.blink::MemberBase.2907" }
%"class.blink::MemberBase.2907" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2908" }
%"class.WTF::Deque.2908" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2911" }
%"class.WTF::VectorBuffer.2911" = type { %"class.WTF::VectorBufferBase.2912" }
%"class.WTF::VectorBufferBase.2912" = type { %"class.std::__1::unique_ptr.2913"*, i32, i32 }
%"class.std::__1::unique_ptr.2913" = type { %"class.std::__1::__compressed_pair.2914" }
%"class.std::__1::__compressed_pair.2914" = type { %"struct.std::__1::__compressed_pair_elem.2915" }
%"struct.std::__1::__compressed_pair_elem.2915" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2919", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2919" = type { %"class.std::__1::__bitset.2920" }
%"class.std::__1::__bitset.2920" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2921" }
%"class.absl::optional.2921" = type { %"class.absl::optional_internal::optional_data.2922" }
%"class.absl::optional_internal::optional_data.2922" = type { %"class.absl::optional_internal::optional_data_base.2923" }
%"class.absl::optional_internal::optional_data_base.2923" = type { %"class.absl::optional_internal::optional_data_dtor_base.2924" }
%"class.absl::optional_internal::optional_data_dtor_base.2924" = type { i8, %union.anon.2925 }
%union.anon.2925 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2926", i64, %"class.absl::optional.1707", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2926" = type { %"class.absl::optional_internal::optional_data.2927" }
%"class.absl::optional_internal::optional_data.2927" = type { %"class.absl::optional_internal::optional_data_base.2928" }
%"class.absl::optional_internal::optional_data_base.2928" = type { %"class.absl::optional_internal::optional_data_dtor_base.2929" }
%"class.absl::optional_internal::optional_data_dtor_base.2929" = type { i8, %union.anon.2930 }
%union.anon.2930 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2931" = type { %"class.std::__1::unique_ptr.2932" }
%"class.std::__1::unique_ptr.2932" = type { %"class.std::__1::__compressed_pair.2933" }
%"class.std::__1::__compressed_pair.2933" = type { %"struct.std::__1::__compressed_pair_elem.2934" }
%"struct.std::__1::__compressed_pair_elem.2934" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2938" = type { %"class.WTF::HashSet.2941" }
%"class.WTF::HashSet.2941" = type { %"class.WTF::HashTable.2942" }
%"class.WTF::HashTable.2942" = type <{ %"class.blink::WeakMember.2944"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2944" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2945" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2945" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2946" = type { %"class.std::__1::__compressed_pair.2947" }
%"class.std::__1::__compressed_pair.2947" = type { %"struct.std::__1::__compressed_pair_elem.2948" }
%"struct.std::__1::__compressed_pair_elem.2948" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2952" = type { %"class.std::__1::__compressed_pair.2953" }
%"class.std::__1::__compressed_pair.2953" = type { %"struct.std::__1::__compressed_pair_elem.2954" }
%"struct.std::__1::__compressed_pair_elem.2954" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.2007" = type { %"class.blink::MemberBase.2008" }
%"class.blink::MemberBase.2008" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.2009" = type { %"class.blink::MemberBase.2010" }
%"class.blink::MemberBase.2010" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2003", %"class.blink::Member.2032", %"class.blink::Member.2034", %"class.blink::Member.2036", i8, %"class.WTF::Vector.2038" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2025" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2013" }
%"class.blink::HeapVector.2013" = type { %"class.WTF::Vector.2016" }
%"class.WTF::Vector.2016" = type { %"class.WTF::VectorBuffer.2017" }
%"class.WTF::VectorBuffer.2017" = type { %"class.WTF::VectorBufferBase.2018", [32 x i8] }
%"class.WTF::VectorBufferBase.2018" = type { %"struct.std::__1::pair.2019"*, i32, i32 }
%"struct.std::__1::pair.2019" = type { %"class.WTF::AtomicString", %"class.blink::Member.2020" }
%"class.blink::Member.2020" = type { %"class.blink::MemberBase.2021" }
%"class.blink::MemberBase.2021" = type { %"class.blink::HeapVector.2022"* }
%"class.blink::HeapVector.2022" = type opaque
%"class.std::__1::unique_ptr.2025" = type { %"class.std::__1::__compressed_pair.2026" }
%"class.std::__1::__compressed_pair.2026" = type { %"struct.std::__1::__compressed_pair_elem.2027" }
%"struct.std::__1::__compressed_pair_elem.2027" = type { %"class.WTF::Vector.2028"* }
%"class.WTF::Vector.2028" = type opaque
%"class.blink::Member.2034" = type { %"class.blink::MemberBase.2035" }
%"class.blink::MemberBase.2035" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2036" = type { %"class.blink::MemberBase.2037" }
%"class.blink::MemberBase.2037" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2038" = type { %"class.WTF::VectorBuffer.2039" }
%"class.WTF::VectorBuffer.2039" = type { %"class.WTF::VectorBufferBase.2040" }
%"class.WTF::VectorBufferBase.2040" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2134" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2041, %"class.std::__1::unique_ptr.1703", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1717, i32 }>
%class.scoped_refptr.2041 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1717, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2100", %"class.absl::optional.2105", %"class.absl::optional.2058", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2125", i8, [7 x i8], %class.scoped_refptr.1717, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1730" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1717, %"class.std::__1::unique_ptr.2042", %"class.absl::optional.2052", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2058", %"class.std::__1::unique_ptr.2063", i8, i64, %class.scoped_refptr.2097, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2098", %"class.base::WeakPtrFactory.2099" }
%"class.std::__1::unique_ptr.2042" = type { %"class.std::__1::__compressed_pair.2043" }
%"class.std::__1::__compressed_pair.2043" = type { %"struct.std::__1::__compressed_pair_elem.2044" }
%"struct.std::__1::__compressed_pair_elem.2044" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1717, i8, %"class.mojo::ScopedHandleBase.2045", %class.scoped_refptr.2046, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2047", i8*, %"class.base::WeakPtrFactory.2048" }
%"class.mojo::ScopedHandleBase.2045" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2046 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2047" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2048" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2052" = type { %"class.absl::optional_internal::optional_data.2053" }
%"class.absl::optional_internal::optional_data.2053" = type { %"class.absl::optional_internal::optional_data_base.2054" }
%"class.absl::optional_internal::optional_data_base.2054" = type { %"class.absl::optional_internal::optional_data_dtor_base.2055" }
%"class.absl::optional_internal::optional_data_dtor_base.2055" = type { i8, %union.anon.2056 }
%union.anon.2056 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2057", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2057" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2063" = type { %"class.std::__1::__compressed_pair.2064" }
%"class.std::__1::__compressed_pair.2064" = type { %"struct.std::__1::__compressed_pair_elem.2065" }
%"struct.std::__1::__compressed_pair_elem.2065" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2066", i8, i64, %class.scoped_refptr.2067, %class.scoped_refptr.2092 }
%"class.base::RepeatingCallback.2066" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2067 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2068", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2070", %"class.std::__1::map.2081", i8, [7 x i8] }>
%"class.base::RefCounted.2068" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2069 }
%class.scoped_refptr.2069 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2070" = type { %"class.std::__1::__tree.2071" }
%"class.std::__1::__tree.2071" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2072", %"class.std::__1::__compressed_pair.2076" }
%"class.std::__1::__compressed_pair.2072" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"class.std::__1::__compressed_pair.2076" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2081" = type { %"class.std::__1::__tree.2082" }
%"class.std::__1::__tree.2082" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2083", %"class.std::__1::__compressed_pair.2087" }
%"class.std::__1::__compressed_pair.2083" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"class.std::__1::__compressed_pair.2087" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2092 = type { %"class.base::RefCountedData.2093"* }
%"class.base::RefCountedData.2093" = type opaque
%class.scoped_refptr.2097 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2098" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2099" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2100" = type { %"class.absl::optional_internal::optional_data.2101" }
%"class.absl::optional_internal::optional_data.2101" = type { %"class.absl::optional_internal::optional_data_base.2102" }
%"class.absl::optional_internal::optional_data_base.2102" = type { %"class.absl::optional_internal::optional_data_dtor_base.2103" }
%"class.absl::optional_internal::optional_data_dtor_base.2103" = type { i8, %union.anon.2104 }
%union.anon.2104 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2105" = type { %"class.absl::optional_internal::optional_data.2106" }
%"class.absl::optional_internal::optional_data.2106" = type { %"class.absl::optional_internal::optional_data_base.2107" }
%"class.absl::optional_internal::optional_data_base.2107" = type { %"class.absl::optional_internal::optional_data_dtor_base.2108" }
%"class.absl::optional_internal::optional_data_dtor_base.2108" = type { i8, [7 x i8], %union.anon.2109 }
%union.anon.2109 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2058" = type { %"class.absl::optional_internal::optional_data.2059" }
%"class.absl::optional_internal::optional_data.2059" = type { %"class.absl::optional_internal::optional_data_base.2060" }
%"class.absl::optional_internal::optional_data_base.2060" = type { %"class.absl::optional_internal::optional_data_dtor_base.2061" }
%"class.absl::optional_internal::optional_data_dtor_base.2061" = type { i8, %union.anon.2062 }
%union.anon.2062 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2110 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2110 = type { %"class.std::__1::map.2113" }
%"class.std::__1::map.2113" = type { %"class.std::__1::__tree.2114" }
%"class.std::__1::__tree.2114" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2115", %"class.std::__1::__compressed_pair.2119" }
%"class.std::__1::__compressed_pair.2115" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"class.std::__1::__compressed_pair.2119" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2124"*, i64 }
%"class.std::__1::unique_ptr.2124" = type opaque
%"class.std::__1::map.2125" = type { %"class.std::__1::__tree.2126" }
%"class.std::__1::__tree.2126" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2127", %"class.std::__1::__compressed_pair.2131" }
%"class.std::__1::__compressed_pair.2127" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"class.std::__1::__compressed_pair.2131" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2134" = type { %"class.std::__1::__compressed_pair.2135" }
%"class.std::__1::__compressed_pair.2135" = type { %"struct.std::__1::__compressed_pair_elem.2136" }
%"struct.std::__1::__compressed_pair_elem.2136" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2142" = type { %"class.blink::MemberBase.2143" }
%"class.blink::MemberBase.2143" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2032" = type { %"class.blink::MemberBase.2033" }
%"class.blink::MemberBase.2033" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2003" = type { %"class.blink::MemberBase.2004" }
%"class.blink::MemberBase.2004" = type { %"class.blink::Frame"* }
%"class.blink::Member.2144" = type { %"class.blink::MemberBase.2000" }
%"class.blink::MemberBase.2000" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2003", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2145" }
%"class.base::internal::flat_tree.2145" = type { %"class.std::__1::vector.2146" }
%"class.std::__1::vector.2146" = type { %"class.std::__1::__vector_base.2147" }
%"class.std::__1::__vector_base.2147" = type { %"struct.std::__1::pair.2148"*, %"struct.std::__1::pair.2148"*, %"class.std::__1::__compressed_pair.2149" }
%"struct.std::__1::pair.2148" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2149" = type { %"struct.std::__1::__compressed_pair_elem.2150" }
%"struct.std::__1::__compressed_pair_elem.2150" = type { %"struct.std::__1::pair.2148"* }
%"class.blink::Member.2154" = type { %"class.blink::MemberBase.2155" }
%"class.blink::MemberBase.2155" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2156" = type { %"class.absl::optional_internal::optional_data.2157" }
%"class.absl::optional_internal::optional_data.2157" = type { %"class.absl::optional_internal::optional_data_base.2158" }
%"class.absl::optional_internal::optional_data_base.2158" = type { %"class.absl::optional_internal::optional_data_dtor_base.2159" }
%"class.absl::optional_internal::optional_data_dtor_base.2159" = type { i8, %union.anon.2160 }
%union.anon.2160 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2166" }
%"class.blink::HeapHashSet.2166" = type { %"class.WTF::HashSet.2169" }
%"class.WTF::HashSet.2169" = type { %"class.WTF::HashTable.2170" }
%"class.WTF::HashTable.2170" = type <{ %"class.blink::WeakMember.2172"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2172" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2173" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2174" }
%"class.blink::HeapHashMap.2174" = type { %"class.WTF::HashMap.2177" }
%"class.WTF::HashMap.2177" = type { %"class.WTF::HashTable.2178" }
%"class.WTF::HashTable.2178" = type <{ %"struct.WTF::KeyValuePair.2180"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2180" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2181" = type { %"class.std::__1::__compressed_pair.2182" }
%"class.std::__1::__compressed_pair.2182" = type { %"struct.std::__1::__compressed_pair_elem.2183" }
%"struct.std::__1::__compressed_pair_elem.2183" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2184", %"class.base::WeakPtrFactory.2189" }
%"class.WTF::HashMap.2184" = type { %"class.WTF::HashTable.2185" }
%"class.WTF::HashTable.2185" = type <{ %"struct.WTF::KeyValuePair.2188"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2188" = type opaque
%"class.base::WeakPtrFactory.2189" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2193" }
%"class.blink::Member.2193" = type { %"class.blink::MemberBase.2194" }
%"class.blink::MemberBase.2194" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3065" }
%"class.blink::WeakMember.3065" = type { %"class.blink::MemberBase.3066" }
%"class.blink::MemberBase.3066" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3067", i64, %"class.std::__1::map.3068", i8*, i64, %"class.base::WeakPtrFactory.3077" }
%"class.base::RepeatingCallback.3067" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3068" = type { %"class.std::__1::__tree.3069" }
%"class.std::__1::__tree.3069" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3070", %"class.std::__1::__compressed_pair.3074" }
%"class.std::__1::__compressed_pair.3070" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"class.std::__1::__compressed_pair.3074" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3077" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2195" = type { %"class.WTF::HashSet.2198" }
%"class.WTF::HashSet.2198" = type { %"class.WTF::HashTable.2199" }
%"class.WTF::HashTable.2199" = type <{ %"class.blink::WeakMember.2201"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2201" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.2144", %"class.blink::Member.2202", %"class.blink::Member.2204", %"class.std::__1::unique_ptr.2206", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2212" }
%"class.blink::Member.2202" = type { %"class.blink::MemberBase.2203" }
%"class.blink::MemberBase.2203" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2204" = type { %"class.blink::MemberBase.2205" }
%"class.blink::MemberBase.2205" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2206" = type { %"class.std::__1::__compressed_pair.2207" }
%"class.std::__1::__compressed_pair.2207" = type { %"struct.std::__1::__compressed_pair_elem.2208" }
%"struct.std::__1::__compressed_pair_elem.2208" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2212" = type { %"class.WTF::HashTable.2213" }
%"class.WTF::HashTable.2213" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2216" = type { %"class.blink::MemberBase.2217" }
%"class.blink::MemberBase.2217" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2616", %"class.blink::Member.2144", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2621", i8, i32, %"class.blink::Color", %"class.absl::optional.2623", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2628", %"class.blink::Member.2630", %"class.blink::Member.2630", %"class.std::__1::unique_ptr.2633", i32, [4 x i8], %"class.WTF::HashSet.2636", %"class.blink::Member.2643", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2645", %"class.blink::HeapHashSet.2652", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2660", i8, %"class.blink::Member.2666", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2678", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2692", i8, %"class.std::__1::unique_ptr.2698", %"class.std::__1::unique_ptr.2778", %"class.WTF::Vector.2784", i32, %class.scoped_refptr.2789, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2790", %"class.blink::Member.2792", %"class.blink::Member.2794", %"class.blink::HeapHashSet.2796", %"class.blink::HeapHashSet.2803", %"class.std::__1::unique_ptr.2810", %"class.std::__1::unique_ptr.2817", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2616" = type { %"class.WTF::HashTable.2617" }
%"class.WTF::HashTable.2617" = type <{ %class.scoped_refptr.2620*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2620 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2621" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2622", { i64, i64 } }
%"class.blink::WeakMember.2622" = type { %"class.blink::MemberBase.2217" }
%"class.absl::optional.2623" = type { %"class.absl::optional_internal::optional_data.2624" }
%"class.absl::optional_internal::optional_data.2624" = type { %"class.absl::optional_internal::optional_data_base.2625" }
%"class.absl::optional_internal::optional_data_base.2625" = type { %"class.absl::optional_internal::optional_data_dtor_base.2626" }
%"class.absl::optional_internal::optional_data_dtor_base.2626" = type { i8, %union.anon.2627 }
%union.anon.2627 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2628" = type { %"class.blink::MemberBase.2629" }
%"class.blink::MemberBase.2629" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2630" = type { %"class.blink::MemberBase.2631" }
%"class.blink::MemberBase.2631" = type { %"class.blink::HeapHashSet.2632"* }
%"class.blink::HeapHashSet.2632" = type opaque
%"class.std::__1::unique_ptr.2633" = type { %"class.std::__1::__compressed_pair.2634" }
%"class.std::__1::__compressed_pair.2634" = type { %"struct.std::__1::__compressed_pair_elem.2635" }
%"struct.std::__1::__compressed_pair_elem.2635" = type { %"class.WTF::HashSet.2636"* }
%"class.WTF::HashSet.2636" = type { %"class.WTF::HashTable.2637" }
%"class.WTF::HashTable.2637" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.2643" = type { %"class.blink::MemberBase.2644" }
%"class.blink::MemberBase.2644" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2645" = type { %"class.WTF::HashSet.2648" }
%"class.WTF::HashSet.2648" = type { %"class.WTF::HashTable.2649" }
%"class.WTF::HashTable.2649" = type <{ %"class.blink::Member.2651"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2651" = type opaque
%"class.blink::HeapHashSet.2652" = type { %"class.WTF::HashSet.2655" }
%"class.WTF::HashSet.2655" = type { %"class.WTF::HashTable.2656" }
%"class.WTF::HashTable.2656" = type <{ %"class.blink::Member.2658"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2658" = type { %"class.blink::MemberBase.2659" }
%"class.blink::MemberBase.2659" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2830", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2840", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2830" = type { %"class.blink::MemberBase.2831" }
%"class.blink::MemberBase.2831" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2832", %"class.blink::Member.2834", %"class.blink::Member.2836", %"class.blink::Member.2838", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2832" = type { %"class.blink::MemberBase.2833" }
%"class.blink::MemberBase.2833" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2834" = type { %"class.blink::MemberBase.2835" }
%"class.blink::MemberBase.2835" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2836" = type { %"class.blink::MemberBase.2837" }
%"class.blink::MemberBase.2837" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2838" = type { %"class.blink::MemberBase.2839" }
%"class.blink::MemberBase.2839" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2840" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2841", { i64, i64 } }
%"class.blink::WeakMember.2841" = type { %"class.blink::MemberBase.2659" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2660" = type { %"class.std::__1::__compressed_pair.2661" }
%"class.std::__1::__compressed_pair.2661" = type { %"struct.std::__1::__compressed_pair_elem.2662" }
%"struct.std::__1::__compressed_pair_elem.2662" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2666" = type { %"class.blink::MemberBase.2667" }
%"class.blink::MemberBase.2667" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2670", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2670" = type { %"class.WTF::HashTable.2671" }
%"class.WTF::HashTable.2671" = type <{ %"struct.WTF::KeyValuePair.2673"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2673" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2674", i32, i32 }
%"class.WTF::Vector.2674" = type { %"class.WTF::VectorBuffer.2675" }
%"class.WTF::VectorBuffer.2675" = type { %"class.WTF::VectorBufferBase.2676" }
%"class.WTF::VectorBufferBase.2676" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2678" = type { %"class.WTF::LinkedHashSet.2681" }
%"class.WTF::LinkedHashSet.2681" = type { %"class.WTF::HashMap.2682", %"class.WTF::VectorBackedLinkedList.2686" }
%"class.WTF::HashMap.2682" = type { %"class.WTF::HashTable.2683" }
%"class.WTF::HashTable.2683" = type <{ %"struct.WTF::KeyValuePair.2685"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2685" = type opaque
%"class.WTF::VectorBackedLinkedList.2686" = type { %"class.WTF::Vector.2687", i32, i32 }
%"class.WTF::Vector.2687" = type { %"class.WTF::VectorBuffer.2688" }
%"class.WTF::VectorBuffer.2688" = type { %"class.WTF::VectorBufferBase.2689" }
%"class.WTF::VectorBufferBase.2689" = type { %"class.WTF::VectorBackedLinkedListNode.2690"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2690" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2692" = type { %"class.std::__1::__compressed_pair.2693" }
%"class.std::__1::__compressed_pair.2693" = type { %"struct.std::__1::__compressed_pair_elem.2694" }
%"struct.std::__1::__compressed_pair_elem.2694" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2698" = type { %"class.std::__1::__compressed_pair.2699" }
%"class.std::__1::__compressed_pair.2699" = type { %"struct.std::__1::__compressed_pair_elem.2700" }
%"struct.std::__1::__compressed_pair_elem.2700" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2701, %class.scoped_refptr.2701, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2755", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2760", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2701 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2702", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2709" }
%"class.WTF::RefCounted.2702" = type { %"class.base::RefCounted.2703" }
%"class.base::RefCounted.2703" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2704", i32, [4 x i8] }>
%"class.WTF::Vector.2704" = type { %"class.WTF::VectorBuffer.2705" }
%"class.WTF::VectorBuffer.2705" = type { %"class.WTF::VectorBufferBase.2706" }
%"class.WTF::VectorBufferBase.2706" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2709" = type { %"class.WTF::VectorBuffer.2710" }
%"class.WTF::VectorBuffer.2710" = type { %"class.WTF::VectorBufferBase.2711" }
%"class.WTF::VectorBufferBase.2711" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2712", %"class.std::__1::unique_ptr.2728", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2712" = type { %"class.std::__1::__compressed_pair.2713" }
%"class.std::__1::__compressed_pair.2713" = type { %"struct.std::__1::__compressed_pair_elem.2714" }
%"struct.std::__1::__compressed_pair_elem.2714" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2715", %"class.WTF::Vector.2720", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2715" = type { %"class.WTF::VectorBuffer.2716" }
%"class.WTF::VectorBuffer.2716" = type { %"class.WTF::VectorBufferBase.2717" }
%"class.WTF::VectorBufferBase.2717" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2720" = type { %"class.WTF::VectorBuffer.2721" }
%"class.WTF::VectorBuffer.2721" = type { %"class.WTF::VectorBufferBase.2722" }
%"class.WTF::VectorBufferBase.2722" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2728" = type { %"class.std::__1::__compressed_pair.2729" }
%"class.std::__1::__compressed_pair.2729" = type { %"struct.std::__1::__compressed_pair_elem.2730" }
%"struct.std::__1::__compressed_pair_elem.2730" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2731", %"class.absl::optional.2731" }
%"class.absl::optional.2731" = type { %"class.absl::optional_internal::optional_data.2732" }
%"class.absl::optional_internal::optional_data.2732" = type { %"class.absl::optional_internal::optional_data_base.2733" }
%"class.absl::optional_internal::optional_data_base.2733" = type { %"class.absl::optional_internal::optional_data_dtor_base.2734" }
%"class.absl::optional_internal::optional_data_dtor_base.2734" = type { i8, [3 x i8], %union.anon.2735 }
%union.anon.2735 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2709"*, %"class.absl::optional.2741", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2741" = type { %"class.absl::optional_internal::optional_data.2742" }
%"class.absl::optional_internal::optional_data.2742" = type { %"class.absl::optional_internal::optional_data_base.2743" }
%"class.absl::optional_internal::optional_data_base.2743" = type { %"class.absl::optional_internal::optional_data_dtor_base.2744" }
%"class.absl::optional_internal::optional_data_dtor_base.2744" = type { i8, %union.anon.2745 }
%union.anon.2745 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2746", %"class.WTF::Vector.2750" }
%"class.WTF::Vector.2746" = type { %"class.WTF::VectorBuffer.2747" }
%"class.WTF::VectorBuffer.2747" = type { %"class.WTF::VectorBufferBase.1856", [128 x i8] }
%"class.WTF::Vector.2750" = type { %"class.WTF::VectorBuffer.2751" }
%"class.WTF::VectorBuffer.2751" = type { %"class.WTF::VectorBufferBase.2752", [128 x i8] }
%"class.WTF::VectorBufferBase.2752" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2755" = type { %"class.WTF::VectorBuffer.2756" }
%"class.WTF::VectorBuffer.2756" = type { %"class.WTF::VectorBufferBase.2757" }
%"class.WTF::VectorBufferBase.2757" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2760" = type { %"class.WTF::HashTable.2761" }
%"class.WTF::HashTable.2761" = type <{ %"struct.WTF::KeyValuePair.2764"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2764" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2765", %"class.WTF::Vector.2770" }
%"class.WTF::HashMap.2765" = type { %"class.WTF::HashTable.2766" }
%"class.WTF::HashTable.2766" = type <{ %"struct.WTF::KeyValuePair.2769"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2769" = type opaque
%"class.WTF::Vector.2770" = type { %"class.WTF::VectorBuffer.2771" }
%"class.WTF::VectorBuffer.2771" = type { %"class.WTF::VectorBufferBase.2772" }
%"class.WTF::VectorBufferBase.2772" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2778" = type { %"class.std::__1::__compressed_pair.2779" }
%"class.std::__1::__compressed_pair.2779" = type { %"struct.std::__1::__compressed_pair_elem.2780" }
%"struct.std::__1::__compressed_pair_elem.2780" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2784" = type { %"class.WTF::VectorBuffer.2785" }
%"class.WTF::VectorBuffer.2785" = type { %"class.WTF::VectorBufferBase.2786" }
%"class.WTF::VectorBufferBase.2786" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2789 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2790" = type { %"class.blink::MemberBase.2791" }
%"class.blink::MemberBase.2791" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2792" = type { %"class.blink::MemberBase.2793" }
%"class.blink::MemberBase.2793" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2794" = type { %"class.blink::MemberBase.2795" }
%"class.blink::MemberBase.2795" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2796" = type { %"class.WTF::HashSet.2799" }
%"class.WTF::HashSet.2799" = type { %"class.WTF::HashTable.2800" }
%"class.WTF::HashTable.2800" = type <{ %"class.blink::WeakMember.2802"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2802" = type opaque
%"class.blink::HeapHashSet.2803" = type { %"class.WTF::HashSet.2806" }
%"class.WTF::HashSet.2806" = type { %"class.WTF::HashTable.2807" }
%"class.WTF::HashTable.2807" = type <{ %"class.blink::WeakMember.2809"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2809" = type opaque
%"class.std::__1::unique_ptr.2810" = type { %"class.std::__1::__compressed_pair.2811" }
%"class.std::__1::__compressed_pair.2811" = type { %"struct.std::__1::__compressed_pair_elem.2812" }
%"struct.std::__1::__compressed_pair_elem.2812" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2813" }
%"class.base::time_internal::TimeBase.2813" = type { i64 }
%"class.std::__1::unique_ptr.2817" = type { %"class.std::__1::__compressed_pair.2818" }
%"class.std::__1::__compressed_pair.2818" = type { %"struct.std::__1::__compressed_pair_elem.2819" }
%"struct.std::__1::__compressed_pair_elem.2819" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2820", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2820" = type { %"class.absl::optional_internal::optional_data.2821" }
%"class.absl::optional_internal::optional_data.2821" = type { %"class.absl::optional_internal::optional_data_base.2822" }
%"class.absl::optional_internal::optional_data_base.2822" = type { %"class.absl::optional_internal::optional_data_dtor_base.2823" }
%"class.absl::optional_internal::optional_data_dtor_base.2823" = type { i8, %union.anon.2824 }
%union.anon.2824 = type { %"class.base::Time" }
%"class.blink::Member.2218" = type { %"class.blink::MemberBase.2219" }
%"class.blink::MemberBase.2219" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2220" = type { %"class.blink::MemberBase.2221" }
%"class.blink::MemberBase.2221" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.2144", %"class.blink::Member.2224", %"class.blink::Member.2226", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2228", %"class.blink::Member.2234" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.966" }
%"class.blink::Member.2224" = type { %"class.blink::MemberBase.2225" }
%"class.blink::MemberBase.2225" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2226" = type { %"class.blink::MemberBase.2227" }
%"class.blink::MemberBase.2227" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2228" = type { %"class.std::__1::__compressed_pair.2229" }
%"class.std::__1::__compressed_pair.2229" = type { %"struct.std::__1::__compressed_pair_elem.2230" }
%"struct.std::__1::__compressed_pair_elem.2230" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2234" = type { %"class.blink::MemberBase.2235" }
%"class.blink::MemberBase.2235" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2236" = type { %"class.blink::MemberBase.2237" }
%"class.blink::MemberBase.2237" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2238" = type { %"class.blink::MemberBase.2239" }
%"class.blink::MemberBase.2239" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2240" = type { %"class.blink::MemberBase.2241" }
%"class.blink::MemberBase.2241" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2244", %"class.blink::HeapListHashSet.2255", %"class.blink::HeapListHashSet.2266", %"class.blink::HeapListHashSet.2277", %"class.blink::HeapListHashSet.2288", %"class.blink::HeapListHashSet.2299", %"class.blink::HeapListHashSet.2310", %"class.blink::HeapListHashSet.2321", %"class.blink::HeapListHashSet.2332", %"class.blink::HeapListHashSet.2343", %"class.blink::HeapListHashSet.2354", %"class.blink::HeapListHashSet.2365", %"class.blink::HeapListHashSet.2376", %"class.blink::HeapListHashSet.2387", %"class.blink::HeapListHashSet.2398", %"class.blink::HeapListHashSet.2409", %"class.blink::HeapListHashSet.2420", %"class.blink::HeapListHashSet.2431", %"class.blink::HeapListHashSet.2442", %"class.blink::HeapListHashSet.2453" }
%"class.blink::HeapListHashSet.2244" = type { %"class.WTF::ListHashSet.base.2254", [7 x i8] }
%"class.WTF::ListHashSet.base.2254" = type <{ %"class.WTF::HashTable.2249", %"class.blink::Member.2251", %"class.blink::Member.2251", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2249" = type <{ %"class.blink::Member.2251"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2251" = type { %"class.blink::MemberBase.2252" }
%"class.blink::MemberBase.2252" = type { %"class.blink::HeapListHashSetNode.2253"* }
%"class.blink::HeapListHashSetNode.2253" = type { %"class.blink::Member.2467", %"class.blink::Member.2251", %"class.blink::Member.2251" }
%"class.blink::HeapListHashSet.2255" = type { %"class.WTF::ListHashSet.base.2265", [7 x i8] }
%"class.WTF::ListHashSet.base.2265" = type <{ %"class.WTF::HashTable.2260", %"class.blink::Member.2262", %"class.blink::Member.2262", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2260" = type <{ %"class.blink::Member.2262"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2262" = type { %"class.blink::MemberBase.2263" }
%"class.blink::MemberBase.2263" = type { %"class.blink::HeapListHashSetNode.2264"* }
%"class.blink::HeapListHashSetNode.2264" = type { %"class.blink::Member.2610", %"class.blink::Member.2262", %"class.blink::Member.2262" }
%"class.blink::Member.2610" = type { %"class.blink::MemberBase.2611" }
%"class.blink::MemberBase.2611" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2266" = type { %"class.WTF::ListHashSet.base.2276", [7 x i8] }
%"class.WTF::ListHashSet.base.2276" = type <{ %"class.WTF::HashTable.2271", %"class.blink::Member.2273", %"class.blink::Member.2273", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2271" = type <{ %"class.blink::Member.2273"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2273" = type { %"class.blink::MemberBase.2274" }
%"class.blink::MemberBase.2274" = type { %"class.blink::HeapListHashSetNode.2275"* }
%"class.blink::HeapListHashSetNode.2275" = type { %"class.blink::Member.2606", %"class.blink::Member.2273", %"class.blink::Member.2273" }
%"class.blink::Member.2606" = type { %"class.blink::MemberBase.2607" }
%"class.blink::MemberBase.2607" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2277" = type { %"class.WTF::ListHashSet.base.2287", [7 x i8] }
%"class.WTF::ListHashSet.base.2287" = type <{ %"class.WTF::HashTable.2282", %"class.blink::Member.2284", %"class.blink::Member.2284", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2282" = type <{ %"class.blink::Member.2284"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2284" = type { %"class.blink::MemberBase.2285" }
%"class.blink::MemberBase.2285" = type { %"class.blink::HeapListHashSetNode.2286"* }
%"class.blink::HeapListHashSetNode.2286" = type { %"class.blink::Member.2602", %"class.blink::Member.2284", %"class.blink::Member.2284" }
%"class.blink::Member.2602" = type { %"class.blink::MemberBase.2603" }
%"class.blink::MemberBase.2603" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2288" = type { %"class.WTF::ListHashSet.base.2298", [7 x i8] }
%"class.WTF::ListHashSet.base.2298" = type <{ %"class.WTF::HashTable.2293", %"class.blink::Member.2295", %"class.blink::Member.2295", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2293" = type <{ %"class.blink::Member.2295"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2295" = type { %"class.blink::MemberBase.2296" }
%"class.blink::MemberBase.2296" = type { %"class.blink::HeapListHashSetNode.2297"* }
%"class.blink::HeapListHashSetNode.2297" = type { %"class.blink::Member.2598", %"class.blink::Member.2295", %"class.blink::Member.2295" }
%"class.blink::Member.2598" = type { %"class.blink::MemberBase.2599" }
%"class.blink::MemberBase.2599" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2299" = type { %"class.WTF::ListHashSet.base.2309", [7 x i8] }
%"class.WTF::ListHashSet.base.2309" = type <{ %"class.WTF::HashTable.2304", %"class.blink::Member.2306", %"class.blink::Member.2306", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2304" = type <{ %"class.blink::Member.2306"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2306" = type { %"class.blink::MemberBase.2307" }
%"class.blink::MemberBase.2307" = type { %"class.blink::HeapListHashSetNode.2308"* }
%"class.blink::HeapListHashSetNode.2308" = type { %"class.blink::Member.2594", %"class.blink::Member.2306", %"class.blink::Member.2306" }
%"class.blink::Member.2594" = type { %"class.blink::MemberBase.2595" }
%"class.blink::MemberBase.2595" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2310" = type { %"class.WTF::ListHashSet.base.2320", [7 x i8] }
%"class.WTF::ListHashSet.base.2320" = type <{ %"class.WTF::HashTable.2315", %"class.blink::Member.2317", %"class.blink::Member.2317", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2315" = type <{ %"class.blink::Member.2317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2317" = type { %"class.blink::MemberBase.2318" }
%"class.blink::MemberBase.2318" = type { %"class.blink::HeapListHashSetNode.2319"* }
%"class.blink::HeapListHashSetNode.2319" = type { %"class.blink::Member.2590", %"class.blink::Member.2317", %"class.blink::Member.2317" }
%"class.blink::Member.2590" = type { %"class.blink::MemberBase.2591" }
%"class.blink::MemberBase.2591" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2321" = type { %"class.WTF::ListHashSet.base.2331", [7 x i8] }
%"class.WTF::ListHashSet.base.2331" = type <{ %"class.WTF::HashTable.2326", %"class.blink::Member.2328", %"class.blink::Member.2328", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2326" = type <{ %"class.blink::Member.2328"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2328" = type { %"class.blink::MemberBase.2329" }
%"class.blink::MemberBase.2329" = type { %"class.blink::HeapListHashSetNode.2330"* }
%"class.blink::HeapListHashSetNode.2330" = type { %"class.blink::Member.2586", %"class.blink::Member.2328", %"class.blink::Member.2328" }
%"class.blink::Member.2586" = type { %"class.blink::MemberBase.2587" }
%"class.blink::MemberBase.2587" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2332" = type { %"class.WTF::ListHashSet.base.2342", [7 x i8] }
%"class.WTF::ListHashSet.base.2342" = type <{ %"class.WTF::HashTable.2337", %"class.blink::Member.2339", %"class.blink::Member.2339", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2337" = type <{ %"class.blink::Member.2339"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2339" = type { %"class.blink::MemberBase.2340" }
%"class.blink::MemberBase.2340" = type { %"class.blink::HeapListHashSetNode.2341"* }
%"class.blink::HeapListHashSetNode.2341" = type { %"class.blink::Member.2582", %"class.blink::Member.2339", %"class.blink::Member.2339" }
%"class.blink::Member.2582" = type { %"class.blink::MemberBase.2583" }
%"class.blink::MemberBase.2583" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2343" = type { %"class.WTF::ListHashSet.base.2353", [7 x i8] }
%"class.WTF::ListHashSet.base.2353" = type <{ %"class.WTF::HashTable.2348", %"class.blink::Member.2350", %"class.blink::Member.2350", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2348" = type <{ %"class.blink::Member.2350"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2350" = type { %"class.blink::MemberBase.2351" }
%"class.blink::MemberBase.2351" = type { %"class.blink::HeapListHashSetNode.2352"* }
%"class.blink::HeapListHashSetNode.2352" = type { %"class.blink::Member.2578", %"class.blink::Member.2350", %"class.blink::Member.2350" }
%"class.blink::Member.2578" = type { %"class.blink::MemberBase.2579" }
%"class.blink::MemberBase.2579" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2354" = type { %"class.WTF::ListHashSet.base.2364", [7 x i8] }
%"class.WTF::ListHashSet.base.2364" = type <{ %"class.WTF::HashTable.2359", %"class.blink::Member.2361", %"class.blink::Member.2361", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2359" = type <{ %"class.blink::Member.2361"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2361" = type { %"class.blink::MemberBase.2362" }
%"class.blink::MemberBase.2362" = type { %"class.blink::HeapListHashSetNode.2363"* }
%"class.blink::HeapListHashSetNode.2363" = type { %"class.blink::Member.2471", %"class.blink::Member.2361", %"class.blink::Member.2361" }
%"class.blink::HeapListHashSet.2365" = type { %"class.WTF::ListHashSet.base.2375", [7 x i8] }
%"class.WTF::ListHashSet.base.2375" = type <{ %"class.WTF::HashTable.2370", %"class.blink::Member.2372", %"class.blink::Member.2372", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2370" = type <{ %"class.blink::Member.2372"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2372" = type { %"class.blink::MemberBase.2373" }
%"class.blink::MemberBase.2373" = type { %"class.blink::HeapListHashSetNode.2374"* }
%"class.blink::HeapListHashSetNode.2374" = type { %"class.blink::Member.2572", %"class.blink::Member.2372", %"class.blink::Member.2372" }
%"class.blink::Member.2572" = type { %"class.blink::MemberBase.2573" }
%"class.blink::MemberBase.2573" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2376" = type { %"class.WTF::ListHashSet.base.2386", [7 x i8] }
%"class.WTF::ListHashSet.base.2386" = type <{ %"class.WTF::HashTable.2381", %"class.blink::Member.2383", %"class.blink::Member.2383", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2381" = type <{ %"class.blink::Member.2383"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2383" = type { %"class.blink::MemberBase.2384" }
%"class.blink::MemberBase.2384" = type { %"class.blink::HeapListHashSetNode.2385"* }
%"class.blink::HeapListHashSetNode.2385" = type { %"class.blink::Member.2568", %"class.blink::Member.2383", %"class.blink::Member.2383" }
%"class.blink::Member.2568" = type { %"class.blink::MemberBase.2569" }
%"class.blink::MemberBase.2569" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2387" = type { %"class.WTF::ListHashSet.base.2397", [7 x i8] }
%"class.WTF::ListHashSet.base.2397" = type <{ %"class.WTF::HashTable.2392", %"class.blink::Member.2394", %"class.blink::Member.2394", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2392" = type <{ %"class.blink::Member.2394"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2394" = type { %"class.blink::MemberBase.2395" }
%"class.blink::MemberBase.2395" = type { %"class.blink::HeapListHashSetNode.2396"* }
%"class.blink::HeapListHashSetNode.2396" = type { %"class.blink::Member.2564", %"class.blink::Member.2394", %"class.blink::Member.2394" }
%"class.blink::Member.2564" = type { %"class.blink::MemberBase.2565" }
%"class.blink::MemberBase.2565" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2398" = type { %"class.WTF::ListHashSet.base.2408", [7 x i8] }
%"class.WTF::ListHashSet.base.2408" = type <{ %"class.WTF::HashTable.2403", %"class.blink::Member.2405", %"class.blink::Member.2405", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2403" = type <{ %"class.blink::Member.2405"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2405" = type { %"class.blink::MemberBase.2406" }
%"class.blink::MemberBase.2406" = type { %"class.blink::HeapListHashSetNode.2407"* }
%"class.blink::HeapListHashSetNode.2407" = type { %"class.blink::Member.2560", %"class.blink::Member.2405", %"class.blink::Member.2405" }
%"class.blink::Member.2560" = type { %"class.blink::MemberBase.2561" }
%"class.blink::MemberBase.2561" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2409" = type { %"class.WTF::ListHashSet.base.2419", [7 x i8] }
%"class.WTF::ListHashSet.base.2419" = type <{ %"class.WTF::HashTable.2414", %"class.blink::Member.2416", %"class.blink::Member.2416", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2414" = type <{ %"class.blink::Member.2416"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2416" = type { %"class.blink::MemberBase.2417" }
%"class.blink::MemberBase.2417" = type { %"class.blink::HeapListHashSetNode.2418"* }
%"class.blink::HeapListHashSetNode.2418" = type { %"class.blink::Member.2556", %"class.blink::Member.2416", %"class.blink::Member.2416" }
%"class.blink::Member.2556" = type { %"class.blink::MemberBase.2557" }
%"class.blink::MemberBase.2557" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2420" = type { %"class.WTF::ListHashSet.base.2430", [7 x i8] }
%"class.WTF::ListHashSet.base.2430" = type <{ %"class.WTF::HashTable.2425", %"class.blink::Member.2427", %"class.blink::Member.2427", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2425" = type <{ %"class.blink::Member.2427"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2427" = type { %"class.blink::MemberBase.2428" }
%"class.blink::MemberBase.2428" = type { %"class.blink::HeapListHashSetNode.2429"* }
%"class.blink::HeapListHashSetNode.2429" = type { %"class.blink::Member.2552", %"class.blink::Member.2427", %"class.blink::Member.2427" }
%"class.blink::Member.2552" = type { %"class.blink::MemberBase.2553" }
%"class.blink::MemberBase.2553" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2431" = type { %"class.WTF::ListHashSet.base.2441", [7 x i8] }
%"class.WTF::ListHashSet.base.2441" = type <{ %"class.WTF::HashTable.2436", %"class.blink::Member.2438", %"class.blink::Member.2438", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2436" = type <{ %"class.blink::Member.2438"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2438" = type { %"class.blink::MemberBase.2439" }
%"class.blink::MemberBase.2439" = type { %"class.blink::HeapListHashSetNode.2440"* }
%"class.blink::HeapListHashSetNode.2440" = type { %"class.blink::Member.2548", %"class.blink::Member.2438", %"class.blink::Member.2438" }
%"class.blink::Member.2548" = type { %"class.blink::MemberBase.2549" }
%"class.blink::MemberBase.2549" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2442" = type { %"class.WTF::ListHashSet.base.2452", [7 x i8] }
%"class.WTF::ListHashSet.base.2452" = type <{ %"class.WTF::HashTable.2447", %"class.blink::Member.2449", %"class.blink::Member.2449", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2447" = type <{ %"class.blink::Member.2449"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2449" = type { %"class.blink::MemberBase.2450" }
%"class.blink::MemberBase.2450" = type { %"class.blink::HeapListHashSetNode.2451"* }
%"class.blink::HeapListHashSetNode.2451" = type { %"class.blink::Member.2473", %"class.blink::Member.2449", %"class.blink::Member.2449" }
%"class.blink::HeapListHashSet.2453" = type { %"class.WTF::ListHashSet.base.2463", [7 x i8] }
%"class.WTF::ListHashSet.base.2463" = type <{ %"class.WTF::HashTable.2458", %"class.blink::Member.2460", %"class.blink::Member.2460", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2458" = type <{ %"class.blink::Member.2460"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2460" = type { %"class.blink::MemberBase.2461" }
%"class.blink::MemberBase.2461" = type { %"class.blink::HeapListHashSetNode.2462"* }
%"class.blink::HeapListHashSetNode.2462" = type { %"class.blink::Member.2465", %"class.blink::Member.2460", %"class.blink::Member.2460" }
%class.scoped_refptr.2464 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2465" = type { %"class.blink::MemberBase.2466" }
%"class.blink::MemberBase.2466" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2467" = type { %"class.blink::MemberBase.2468" }
%"class.blink::MemberBase.2468" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2469" = type { %"class.blink::MemberBase.2470" }
%"class.blink::MemberBase.2470" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2471" = type { %"class.blink::MemberBase.2472" }
%"class.blink::MemberBase.2472" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2473" = type { %"class.blink::MemberBase.2474" }
%"class.blink::MemberBase.2474" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2477" = type { %"class.blink::MemberBase.2478" }
%"class.blink::MemberBase.2478" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2479" = type { %"class.blink::MemberBase.2480" }
%"class.blink::MemberBase.2480" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2481" }
%"class.blink::Member.2481" = type { %"class.blink::MemberBase.2482" }
%"class.blink::MemberBase.2482" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3080" }
%"class.mojo::Remote.3080" = type { %"class.mojo::internal::InterfacePtrState.3081" }
%"class.mojo::internal::InterfacePtrState.3081" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3082" }
%"class.std::__1::unique_ptr.3082" = type { %"class.std::__1::__compressed_pair.3083" }
%"class.std::__1::__compressed_pair.3083" = type { %"struct.std::__1::__compressed_pair_elem.3084" }
%"struct.std::__1::__compressed_pair_elem.3084" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2483" = type { %"class.std::__1::__compressed_pair.2484" }
%"class.std::__1::__compressed_pair.2484" = type { %"struct.std::__1::__compressed_pair_elem.2485" }
%"struct.std::__1::__compressed_pair_elem.2485" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2489" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2490" = type { %"class.std::__1::__compressed_pair.2491" }
%"class.std::__1::__compressed_pair.2491" = type { %"struct.std::__1::__compressed_pair_elem.2492" }
%"struct.std::__1::__compressed_pair_elem.2492" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2161" = type { %"class.absl::optional_internal::optional_data.2162" }
%"class.absl::optional_internal::optional_data.2162" = type { %"class.absl::optional_internal::optional_data_base.2163" }
%"class.absl::optional_internal::optional_data_base.2163" = type { %"class.absl::optional_internal::optional_data_dtor_base.2164" }
%"class.absl::optional_internal::optional_data_dtor_base.2164" = type { i8, %union.anon.2165 }
%union.anon.2165 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2496" = type { %"class.std::__1::__compressed_pair.2497" }
%"class.std::__1::__compressed_pair.2497" = type { %"struct.std::__1::__compressed_pair_elem.2498" }
%"struct.std::__1::__compressed_pair_elem.2498" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2502" }
%"class.blink::Member.2502" = type { %"class.blink::MemberBase.2503" }
%"class.blink::MemberBase.2503" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3090" }
%"class.mojo::AssociatedRemote.3090" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3091" }
%"class.mojo::internal::AssociatedInterfacePtrState.3091" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3092" }
%"class.std::__1::unique_ptr.3092" = type { %"class.std::__1::__compressed_pair.3093" }
%"class.std::__1::__compressed_pair.3093" = type { %"struct.std::__1::__compressed_pair_elem.3094" }
%"struct.std::__1::__compressed_pair_elem.3094" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2504" = type { %"class.blink::Member.2505" }
%"class.blink::Member.2505" = type { %"class.blink::MemberBase.2506" }
%"class.blink::MemberBase.2506" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3100" }
%"class.mojo::AssociatedRemote.3100" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3101" }
%"class.mojo::internal::AssociatedInterfacePtrState.3101" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3102" }
%"class.std::__1::unique_ptr.3102" = type { %"class.std::__1::__compressed_pair.3103" }
%"class.std::__1::__compressed_pair.3103" = type { %"struct.std::__1::__compressed_pair_elem.3104" }
%"struct.std::__1::__compressed_pair_elem.3104" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2507" }
%"class.blink::Member.2507" = type { %"class.blink::MemberBase.2508" }
%"class.blink::MemberBase.2508" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3110", %"class.blink::Member.2144", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3110" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3111" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1703" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3111" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2509" = type { %"class.blink::Member.2510" }
%"class.blink::Member.2510" = type { %"class.blink::MemberBase.2511" }
%"class.blink::MemberBase.2511" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3114", %"class.blink::Member.2144", %"class.mojo::AssociatedReceiver.3115" }
%"class.blink::ThreadState::PrefinalizerRegistration.3114" = type { i8 }
%"class.mojo::AssociatedReceiver.3115" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3116" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3116" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2512" }
%"class.blink::Member.2512" = type { %"class.blink::MemberBase.2513" }
%"class.blink::MemberBase.2513" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3119", %"class.blink::Member.2144", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3119" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2041, %"class.std::__1::unique_ptr.1703", %"class.base::WeakPtrFactory.3120" }
%"class.base::WeakPtrFactory.3120" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2514" = type { %"class.blink::Member.2515" }
%"class.blink::Member.2515" = type { %"class.blink::MemberBase.2516" }
%"class.blink::MemberBase.2516" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3123", %"class.blink::Member.2144", %"class.mojo::AssociatedReceiver.3124" }
%"class.blink::ThreadState::PrefinalizerRegistration.3123" = type { i8 }
%"class.mojo::AssociatedReceiver.3124" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3125" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3125" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2517" = type { %"class.blink::MemberBase.2518" }
%"class.blink::MemberBase.2518" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2519" = type { %"class.blink::MemberBase.2520" }
%"class.blink::MemberBase.2520" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2521" = type { %"class.blink::MemberBase.2522" }
%"class.blink::MemberBase.2522" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2523" = type { %"class.blink::MemberBase.2524" }
%"class.blink::MemberBase.2524" = type { %"class.blink::HeapHashMap.2525"* }
%"class.blink::HeapHashMap.2525" = type opaque
%"class.mojo::StructPtr.2526" = type { %"class.std::__1::unique_ptr.2527" }
%"class.std::__1::unique_ptr.2527" = type { %"class.std::__1::__compressed_pair.2528" }
%"class.std::__1::__compressed_pair.2528" = type { %"struct.std::__1::__compressed_pair_elem.2529" }
%"struct.std::__1::__compressed_pair_elem.2529" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2530", %"class.mojo::InlinedStructPtr.2531" }
%"class.mojo::InlinedStructPtr.2530" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2531" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2535" = type { %"class.blink::MemberBase.2536" }
%"class.blink::MemberBase.2536" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2537" = type { %"class.absl::optional_internal::optional_data.2538" }
%"class.absl::optional_internal::optional_data.2538" = type { %"class.absl::optional_internal::optional_data_base.2539" }
%"class.absl::optional_internal::optional_data_base.2539" = type { %"class.absl::optional_internal::optional_data_dtor_base.2540" }
%"class.absl::optional_internal::optional_data_dtor_base.2540" = type { i8, %union.anon.2541 }
%union.anon.2541 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1887, %"class.WTF::Vector.1888", %"class.std::__1::unique_ptr.1893", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1914, %"class.blink::Persistent.1915" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1887 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1888" = type { %"class.WTF::VectorBuffer.1889" }
%"class.WTF::VectorBuffer.1889" = type { %"class.WTF::VectorBufferBase.1890", [8 x i8] }
%"class.WTF::VectorBufferBase.1890" = type { %class.scoped_refptr.1887*, i32, i32 }
%"class.std::__1::unique_ptr.1893" = type { %"class.std::__1::__compressed_pair.1894" }
%"class.std::__1::__compressed_pair.1894" = type { %"struct.std::__1::__compressed_pair_elem.1895" }
%"struct.std::__1::__compressed_pair_elem.1895" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1896", %"class.absl::optional.1901", %"class.absl::optional.1906" }
%"class.absl::optional.1896" = type { %"class.absl::optional_internal::optional_data.1897" }
%"class.absl::optional_internal::optional_data.1897" = type { %"class.absl::optional_internal::optional_data_base.1898" }
%"class.absl::optional_internal::optional_data_base.1898" = type { %"class.absl::optional_internal::optional_data_dtor_base.1899" }
%"class.absl::optional_internal::optional_data_dtor_base.1899" = type { i8, %union.anon.1900 }
%union.anon.1900 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1901" = type { %"class.absl::optional_internal::optional_data.1902" }
%"class.absl::optional_internal::optional_data.1902" = type { %"class.absl::optional_internal::optional_data_base.1903" }
%"class.absl::optional_internal::optional_data_base.1903" = type { %"class.absl::optional_internal::optional_data_dtor_base.1904" }
%"class.absl::optional_internal::optional_data_dtor_base.1904" = type { i8, [3 x i8], %union.anon.1905 }
%union.anon.1905 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1906" = type { %"class.absl::optional_internal::optional_data.1907" }
%"class.absl::optional_internal::optional_data.1907" = type { %"class.absl::optional_internal::optional_data_base.1908" }
%"class.absl::optional_internal::optional_data_base.1908" = type { %"class.absl::optional_internal::optional_data_dtor_base.1909" }
%"class.absl::optional_internal::optional_data_dtor_base.1909" = type { i8, %union.anon.1910 }
%union.anon.1910 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1914 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1795", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1795" = type { %"class.std::__1::__compressed_pair.1796" }
%"class.std::__1::__compressed_pair.1796" = type { %"struct.std::__1::__compressed_pair_elem.1797" }
%"struct.std::__1::__compressed_pair_elem.1797" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1798", %"class.absl::optional.1803" }
%"class.absl::optional.1798" = type { %"class.absl::optional_internal::optional_data.1799" }
%"class.absl::optional_internal::optional_data.1799" = type { %"class.absl::optional_internal::optional_data_base.1800" }
%"class.absl::optional_internal::optional_data_base.1800" = type { %"class.absl::optional_internal::optional_data_dtor_base.1801" }
%"class.absl::optional_internal::optional_data_dtor_base.1801" = type { i8, %union.anon.1802 }
%union.anon.1802 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1803" = type { %"class.absl::optional_internal::optional_data.1804" }
%"class.absl::optional_internal::optional_data.1804" = type { %"class.absl::optional_internal::optional_data_base.1805" }
%"class.absl::optional_internal::optional_data_base.1805" = type { %"class.absl::optional_internal::optional_data_dtor_base.1806" }
%"class.absl::optional_internal::optional_data_dtor_base.1806" = type { i8, %union.anon.1807 }
%union.anon.1807 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1915" = type { %"class.blink::PersistentBase.1916" }
%"class.blink::PersistentBase.1916" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1919", %"struct.blink::PhysicalRect", %"class.blink::Member.1929" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.std::__1::unique_ptr.1919" = type { %"class.std::__1::__compressed_pair.1920" }
%"class.std::__1::__compressed_pair.1920" = type { %"struct.std::__1::__compressed_pair_elem.1921" }
%"struct.std::__1::__compressed_pair_elem.1921" = type { %"class.WTF::HashSet.1922"* }
%"class.WTF::HashSet.1922" = type { %"class.WTF::HashTable.1923" }
%"class.WTF::HashTable.1923" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1929" = type { %"class.blink::MemberBase.1930" }
%"class.blink::MemberBase.1930" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1931", %"class.std::__1::unique_ptr.1941" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1931" = type { %"class.blink::PersistentBase.1932" }
%"class.blink::PersistentBase.1932" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1935", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1935" = type { %"class.std::__1::__compressed_pair.1936" }
%"class.std::__1::__compressed_pair.1936" = type { %"struct.std::__1::__compressed_pair_elem.1937" }
%"struct.std::__1::__compressed_pair_elem.1937" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1941" = type { %"class.std::__1::__compressed_pair.1942" }
%"class.std::__1::__compressed_pair.1942" = type { %"struct.std::__1::__compressed_pair_elem.1943" }
%"struct.std::__1::__compressed_pair_elem.1943" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1944", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1944" = type { %"class.WTF::HashTable.1947", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1947" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1950", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1950" = type { %"class.std::__1::__compressed_pair.1951" }
%"class.std::__1::__compressed_pair.1951" = type { %"struct.std::__1::__compressed_pair_elem.1952" }
%"struct.std::__1::__compressed_pair_elem.1952" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1953, %"class.std::__1::unique_ptr.1954", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1795", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1953 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1972", i16, %class.scoped_refptr.1953 }
%"class.WTF::ThreadSafeRefCounted.1972" = type { %"class.base::RefCountedThreadSafe.1973" }
%"class.base::RefCountedThreadSafe.1973" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1954" = type { %"class.std::__1::__compressed_pair.1955" }
%"class.std::__1::__compressed_pair.1955" = type { %"struct.std::__1::__compressed_pair_elem.1956" }
%"struct.std::__1::__compressed_pair_elem.1956" = type { %"class.WTF::Vector.1957"* }
%"class.WTF::Vector.1957" = type { %"class.WTF::VectorBuffer.1958" }
%"class.WTF::VectorBuffer.1958" = type { %"class.WTF::VectorBufferBase.1959" }
%"class.WTF::VectorBufferBase.1959" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1968, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1968 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3140", %"class.blink::Member.3142", %"class.blink::Member.3167", %"class.blink::Member.3186", %"class.blink::Member.3188" }
%"class.blink::Member.3140" = type { %"class.blink::MemberBase.3141" }
%"class.blink::MemberBase.3141" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3142" = type { %"class.blink::MemberBase.3143" }
%"class.blink::MemberBase.3143" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::Member.3167" = type { %"class.blink::MemberBase.3168" }
%"class.blink::MemberBase.3168" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3171", %"class.blink::HeapHashSet.3180" }
%"class.blink::HeapVector.3171" = type { %"class.WTF::Vector.3174" }
%"class.WTF::Vector.3174" = type { %"class.WTF::VectorBuffer.3175" }
%"class.WTF::VectorBuffer.3175" = type { %"class.WTF::VectorBufferBase.3176" }
%"class.WTF::VectorBufferBase.3176" = type { %"class.blink::Member.3177"*, i32, i32 }
%"class.blink::Member.3177" = type { %"class.blink::MemberBase.3178" }
%"class.blink::MemberBase.3178" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3180" = type { %"class.WTF::HashSet.3183" }
%"class.WTF::HashSet.3183" = type { %"class.WTF::HashTable.3184" }
%"class.WTF::HashTable.3184" = type <{ %"class.blink::Member.3177"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3186" = type { %"class.blink::MemberBase.3187" }
%"class.blink::MemberBase.3187" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3188" = type { %"class.blink::MemberBase.3189" }
%"class.blink::MemberBase.3189" = type { %"class.blink::HeapHashSet.3190"* }
%"class.blink::HeapHashSet.3190" = type opaque
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1979", %"class.blink::Member.1979", %"class.blink::Member.1981", %"class.blink::Member.1983", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1974" }
%"class.absl::optional.1974" = type { %"class.absl::optional_internal::optional_data.1975" }
%"class.absl::optional_internal::optional_data.1975" = type { %"class.absl::optional_internal::optional_data_base.1976" }
%"class.absl::optional_internal::optional_data_base.1976" = type { %"class.absl::optional_internal::optional_data_dtor_base.1977" }
%"class.absl::optional_internal::optional_data_dtor_base.1977" = type { i8, %union.anon.1978 }
%union.anon.1978 = type { i64 }
%"class.blink::Member.1979" = type { %"class.blink::MemberBase.1980" }
%"class.blink::MemberBase.1980" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1981" = type { %"class.blink::MemberBase.1982" }
%"class.blink::MemberBase.1982" = type { %"class.blink::Event"* }
%"class.blink::Member.1983" = type { %"class.blink::MemberBase.1984" }
%"class.blink::MemberBase.1984" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.1987", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.1999", %"class.WTF::Vector.1854" }
%"class.std::__1::unique_ptr.1987" = type { %"class.std::__1::__compressed_pair.1988" }
%"class.std::__1::__compressed_pair.1988" = type { %"struct.std::__1::__compressed_pair_elem.1989" }
%"struct.std::__1::__compressed_pair_elem.1989" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1990", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1990" = type { %"class.std::__1::__compressed_pair.1991" }
%"class.std::__1::__compressed_pair.1991" = type { %"struct.std::__1::__compressed_pair_elem.1992" }
%"struct.std::__1::__compressed_pair_elem.1992" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.1999" = type { %"class.blink::MemberBase.2000" }
%"class.blink::ScopedEventQueue" = type <{ %"class.blink::Persistent.3191", i32, [4 x i8] }>
%"class.blink::Persistent.3191" = type { %"class.blink::PersistentBase.3192" }
%"class.blink::PersistentBase.3192" = type { %"class.blink::HeapVector.3193"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector.3193" = type opaque
%"class.blink::HeapVector.2958" = type { %"class.WTF::Vector.2961" }
%"class.WTF::Vector.2961" = type { %"class.WTF::VectorBuffer.2962" }
%"class.WTF::VectorBuffer.2962" = type { %"class.WTF::VectorBufferBase.2963" }
%"class.WTF::VectorBufferBase.2963" = type { %"class.blink::Member.1836"*, i32, i32 }
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.2965", %"class.WTF::String"* }
%"class.blink::HeapVector.2965" = type { %"class.WTF::Vector.2968" }
%"class.WTF::Vector.2968" = type { %"class.WTF::VectorBuffer.2969" }
%"class.WTF::VectorBuffer.2969" = type { %"class.WTF::VectorBufferBase.2970" }
%"class.WTF::VectorBufferBase.2970" = type { %"class.blink::Member.318"*, i32, i32 }
%"class.blink::HTMLHRElement" = type { %"class.blink::HTMLElement" }
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::FormControlState" = type { i32, %"class.WTF::Vector.630" }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.blink::FormData" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.WTF::TextEncoding", %"class.blink::HeapVector.2972", i8, [7 x i8] }>
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::HeapVector.2972" = type { %"class.WTF::Vector.2975" }
%"class.WTF::Vector.2975" = type { %"class.WTF::VectorBuffer.2976" }
%"class.WTF::VectorBuffer.2976" = type { %"class.WTF::VectorBufferBase.2977" }
%"class.WTF::VectorBufferBase.2977" = type { %"class.blink::Member.2978"*, i32, i32 }
%"class.blink::Member.2978" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.3215" }
%"class.WTF::Vector.3215" = type { %"class.WTF::VectorBuffer.3216" }
%"class.WTF::VectorBuffer.3216" = type { %"class.WTF::VectorBufferBase.3217", [64 x i8] }
%"class.WTF::VectorBufferBase.3217" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::KeyboardEvent" = type { %"class.blink::UIEventWithKeyState.base", %"class.std::__1::unique_ptr.2982", %"class.WTF::String", %"class.WTF::String", i32, i8, i32, i32 }
%"class.blink::UIEventWithKeyState.base" = type <{ %"class.blink::UIEvent", i32 }>
%"class.blink::UIEvent" = type { %"class.blink::Event", %"class.blink::Member.2009", i32, %"class.blink::Member.2980" }
%"class.blink::Member.2980" = type { %"class.blink::MemberBase.2981" }
%"class.blink::MemberBase.2981" = type { %"class.blink::InputDeviceCapabilities"* }
%"class.std::__1::unique_ptr.2982" = type { %"class.std::__1::__compressed_pair.2983" }
%"class.std::__1::__compressed_pair.2983" = type { %"struct.std::__1::__compressed_pair_elem.2984" }
%"struct.std::__1::__compressed_pair_elem.2984" = type { %"class.blink::WebKeyboardEvent"* }
%"class.blink::WebKeyboardEvent" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.blink::HTMLSlotElement" = type { %"class.blink::HTMLElement", %"class.blink::HeapVector.2965", %"class.blink::HeapVector.2965", i8, %"class.blink::HeapLinkedHashSet.2988" }
%"class.blink::HeapLinkedHashSet.2988" = type { %"class.WTF::LinkedHashSet.2991" }
%"class.WTF::LinkedHashSet.2991" = type { %"class.WTF::HashMap.2992", %"class.WTF::VectorBackedLinkedList.2996" }
%"class.WTF::HashMap.2992" = type { %"class.WTF::HashTable.2993" }
%"class.WTF::HashTable.2993" = type <{ %"struct.WTF::KeyValuePair.2995"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2995" = type opaque
%"class.WTF::VectorBackedLinkedList.2996" = type { %"class.WTF::Vector.2997", i32, i32 }
%"class.WTF::Vector.2997" = type { %"class.WTF::VectorBuffer.2998" }
%"class.WTF::VectorBuffer.2998" = type { %"class.WTF::VectorBufferBase.2999" }
%"class.WTF::VectorBufferBase.2999" = type { %"class.WTF::VectorBackedLinkedListNode.3000"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.3000" = type opaque
%"class.blink::AXObject" = type opaque
%"class.blink::PopupMenu" = type { i32 (...)** }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.3011, %"class.blink::Member.3012", %"class.blink::SelfKeepAlive", %"class.util::TokenType.3016" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.3011 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.3012" = type { %"class.blink::MemberBase.3013" }
%"class.blink::MemberBase.3013" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.3014" }
%"class.blink::Persistent.3014" = type { %"class.blink::PersistentBase.3015" }
%"class.blink::PersistentBase.3015" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.269" }
%"class.util::TokenType.3016" = type { %"class.base::StrongAlias.3017" }
%"class.base::StrongAlias.3017" = type { %"class.base::UnguessableToken" }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.3018", i8, [7 x i8] }>
%"class.blink::Member.3018" = type { %"class.blink::MemberBase.3019" }
%"class.blink::MemberBase.3019" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.WTF::HashMap.3020" = type opaque
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.3021", %"class.blink::HeapVector.3026", i8, [7 x i8] }>
%"class.blink::Member.3021" = type { %"class.blink::MemberBase.3022" }
%"class.blink::MemberBase.3022" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.3024" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3023" }
%"class.blink::WeakMember.3023" = type { %"class.blink::MemberBase.916" }
%"class.blink::Member.3024" = type { %"class.blink::MemberBase.3025" }
%"class.blink::MemberBase.3025" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::HeapVector.3026" = type { %"class.WTF::Vector.3029" }
%"class.WTF::Vector.3029" = type { %"class.WTF::VectorBuffer.3030" }
%"class.WTF::VectorBuffer.3030" = type { %"class.WTF::VectorBufferBase.3031", [96 x i8] }
%"class.WTF::VectorBufferBase.3031" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.1215" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::StyleRecalcContext" = type { %"class.blink::ContainerQueryEvaluator"* }
%"class.blink::ContainerQueryEvaluator" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking.3255" = type { i8 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.3234", %"class.blink::FreeList", %"class.WTF::Vector.3239" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.WTF::Vector.3234" = type { %"class.WTF::VectorBuffer.3235" }
%"class.WTF::VectorBuffer.3235" = type { %"class.WTF::VectorBufferBase.3236" }
%"class.WTF::VectorBufferBase.3236" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.3239" = type { %"class.WTF::VectorBuffer.3240" }
%"class.WTF::VectorBuffer.3240" = type { %"class.WTF::VectorBufferBase.3241" }
%"class.WTF::VectorBufferBase.3241" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVectorBacking.3280" = type { i8 }

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink17HTMLSelectElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink31HTMLFormControlElementWithState23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZNK5blink17HTMLSelectElement17CanStartSelectionEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink22HTMLFormControlElement20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink17HTMLSelectElement21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink17HTMLSelectElement25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink17HTMLSelectElement23AreAuthorShadowsAllowedEv = comdat any

$_ZNK5blink22HTMLFormControlElement31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement15IsPluginElementEv = comdat any

$_ZNK5blink17HTMLSelectElement11IsLabelableEv = comdat any

$_ZNK5blink11HTMLElement7AltTextEv = comdat any

$_ZN5blink22HTMLFormControlElement22ToFormAssociatedOrNullEv = comdat any

$_ZNK5blink17HTMLSelectElement14IsEnumeratableEv = comdat any

$_ZNK5blink22HTMLFormControlElement28CanTriggerImplicitSubmissionEv = comdat any

$_ZN5blink22HTMLFormControlElement20IsSubmittableElementEv = comdat any

$_ZNK5blink22HTMLFormControlElement27CanBeSuccessfulSubmitButtonEv = comdat any

$_ZNK5blink22HTMLFormControlElement17IsActivatedSubmitEv = comdat any

$_ZN5blink22HTMLFormControlElement18SetActivatedSubmitEb = comdat any

$_ZNK5blink22HTMLFormControlElement21GetFormElementPiiTypeEv = comdat any

$_ZN5blink22HTMLFormControlElement21SetFormElementPiiTypeENS_18FormElementPiiTypeE = comdat any

$_ZThn104_NK5blink22HTMLFormControlElement20IsFormControlElementEv = comdat any

$_ZThn104_NK5blink17HTMLSelectElement14IsEnumeratableEv = comdat any

$_ZN5blink13ListedElement27DisabledStateMightBeChangedEv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_ = comdat any

$_ZN5blink17NodeListsNodeData8AddCacheINS_14HTMLCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES6_DnEENS_18HashTableAddResultISL_SB_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6ExpandEPSB_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE12ExpandBufferEjPSB_Rb = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE8RehashToEPSB_jSM_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS4_6MemberINS4_16LiveNodeListBaseEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISA_EEEELb1EE4MoveEOSB_RSB_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS1_12AtomicStringEEENS1_12KeyValuePairIS7_NS_6MemberINS_16LiveNodeListBaseEEEEENS1_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS3_12AtomicStringEEENS3_12KeyValuePairIS9_NS_6MemberINS_16LiveNodeListBaseEEEEENS3_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS9_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS8_NS5_6MemberINS5_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS5_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE16LookupForWritingERKS6_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink17NodeListsNodeData8AddCacheINS_21HTMLOptionsCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HTMLOptionElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17HTMLOptionElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink17NodeListsNodeData6CachedINS_14HTMLCollectionEEEPT_NS_14CollectionTypeE = comdat any

$_ZNK3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6LookupERKS6_ = comdat any

$_ZN5blink17NodeListsNodeData6CachedINS_21HTMLOptionsCollectionEEEPT_NS_14CollectionTypeE = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HTMLElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_11HTMLElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN5blink10TraceTraitINS_17HTMLOptionElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_10SelectTypeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names10kSelectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink17HTMLSelectElementE = hidden unnamed_addr constant { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] } { [200 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*)* @_ZN5blink17HTMLSelectElementD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*)* @_ZN5blink17HTMLSelectElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, %"class.blink::Visitor"*)* @_ZNK5blink17HTMLSelectElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink17HTMLSelectElement16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, i1)* @_ZN5blink17HTMLSelectElement16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink22HTMLFormControlElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink22HTMLFormControlElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, %"class.blink::Event"*)* @_ZN5blink17HTMLSelectElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::HTMLSelectElement"*)* @_ZN5blink17HTMLSelectElement13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*)* @_ZN5blink17HTMLSelectElement14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::Document"*)* @_ZN5blink22HTMLFormControlElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink17HTMLSelectElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.3020"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLSelectElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink17HTMLSelectElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink22HTMLFormControlElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink17HTMLSelectElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, %"class.blink::Element"*, i32)* @_ZN5blink17HTMLSelectElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::HTMLSelectElement"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink17HTMLSelectElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, i32)* @_ZN5blink17HTMLSelectElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink17HTMLSelectElement18DispatchFocusEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink17HTMLSelectElement17DispatchBlurEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*)* @_ZN5blink17HTMLSelectElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, i64)* @_ZN5blink17HTMLSelectElement14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, %"class.blink::StyleRecalcContext"*)* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, %"class.blink::ShadowRoot"*)* @_ZN5blink17HTMLSelectElement25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement22ToFormAssociatedOrNullEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement14IsEnumeratableEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement15FormControlTypeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement28CanTriggerImplicitSubmissionEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement20IsSubmittableElementEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement21ResultForDialogSubmitEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement27CanBeSuccessfulSubmitButtonEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement17IsActivatedSubmitEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, i1)* @_ZN5blink22HTMLFormControlElement18SetActivatedSubmitEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement21GetFormElementPiiTypeEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, i32)* @_ZN5blink22HTMLFormControlElement21SetFormElementPiiTypeENS_18FormElementPiiTypeE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*)* @_ZN5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement24RequiredAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement14WillChangeFormEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement13DidChangeFormEv to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*)* @_ZN5blink17HTMLSelectElement9ResetImplEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState18ShouldAutocompleteEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement17validationMessageEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement12ValueMissingEv to i8*), i8* bitcast (void (%"class.blink::FormControlState"*, %"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, %"class.blink::FormControlState"*)* @_ZN5blink17HTMLSelectElement23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, %"class.blink::FormData"*)* @_ZN5blink17HTMLSelectElement16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (i32 (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement21IndexOfSelectedOptionEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLSelectElement"*)* @_ZNK5blink17HTMLSelectElement11OptionCountEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLSelectElement"*, i32)* @_ZNK5blink17HTMLSelectElement13OptionAtIndexEi to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [34 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLSelectElement"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink17HTMLSelectElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*)* @_ZThn104_N5blink17HTMLSelectElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*)* @_ZThn104_N5blink17HTMLSelectElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_NK5blink22HTMLFormControlElement20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_NK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement18IsElementInternalsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLSelectElement"*)* @_ZThn104_NK5blink17HTMLSelectElement14IsEnumeratableEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement7GetNameEv to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, %"class.blink::FormData"*)* @_ZThn104_N5blink17HTMLSelectElement16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement11CustomErrorEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement11HasBadInputEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement15PatternMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement13RangeOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement14RangeUnderflowEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12StepMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement7TooLongEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement8TooShortEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLSelectElement"*)* @_ZThn104_NK5blink17HTMLSelectElement12ValueMissingEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLSelectElement"*)* @_ZThn104_NK5blink17HTMLSelectElement17validationMessageEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement20ValidationSubMessageEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*, %"class.WTF::String"*)* @_ZN5blink13ListedElement17setCustomValidityERKN3WTF6StringE to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement16ValidationAnchorEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_N5blink22HTMLFormControlElement24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement27DisabledStateMightBeChangedEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_NK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_NK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::FormControlState"*, %"class.blink::HTMLSelectElement"*)* @_ZThn104_NK5blink17HTMLSelectElement20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*, %"class.blink::FormControlState"*)* @_ZThn104_N5blink17HTMLSelectElement23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_N5blink22HTMLFormControlElement14WillChangeFormEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_N5blink22HTMLFormControlElement13DidChangeFormEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement18RecalcWillValidateEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -168 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*)* @_ZThn168_N5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE to i8*)], [7 x i8*] [i8* inttoptr (i64 -200 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLSelectElement"*)* @_ZThn200_N5blink17HTMLSelectElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLSelectElement"*)* @_ZThn200_N5blink17HTMLSelectElementD0Ev to i8*), i8* bitcast (i32 (%"class.blink::HTMLSelectElement"*)* @_ZThn200_NK5blink17HTMLSelectElement21IndexOfSelectedOptionEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLSelectElement"*)* @_ZThn200_NK5blink17HTMLSelectElement11OptionCountEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLSelectElement"*, i32)* @_ZThn200_NK5blink17HTMLSelectElement13OptionAtIndexEi to i8*)] }, align 8
@_ZN5blink10html_names10kOptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kOptgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kHrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZZNK5blink17HTMLSelectElement15FormControlTypeEvE17s_select_multiple = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink17HTMLSelectElement15FormControlTypeEvE17s_select_multiple = internal global i64 0, align 8
@_ZZNK5blink17HTMLSelectElement15FormControlTypeEvE12s_select_one = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink17HTMLSelectElement15FormControlTypeEvE12s_select_one = internal global i64 0, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink10html_names10kAlignAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kSizeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kMultipleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kAccesskeyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.1 = private unnamed_addr constant [97 x i8] c"Blocked to expand the option list and set an option at index=%u.  The maximum list length is %u.\00", align 1
@.str.2 = private unnamed_addr constant [79 x i8] c"Blocked to expand the option list to %u items.  The maximum list length is %u.\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.3 = private unnamed_addr constant [35 x i8] c"HTMLSelectElement::recalcListItems\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"HTMLSelectElement::selectOption\00", align 1
@_ZN5blink10html_names13kSelectedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kClickE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names7kChangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names9kKeypressE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink17HTMLSelectElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.10 = private unnamed_addr constant [16 x i8] c"select-multiple\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"select-one\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.15 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.17 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.18 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_17HTMLOptionElementEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [381 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::HTMLOptionElement>, blink::Member<blink::HTMLOptionElement>, WTF::IdentityExtractor, WTF::MemberHash<blink::HTMLOptionElement>, WTF::HashTraits<blink::Member<blink::HTMLOptionElement> >, WTF::HashTraits<blink::Member<blink::HTMLOptionElement> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS3_12AtomicStringEEENS3_12KeyValuePairIS9_NS_6MemberINS_16LiveNodeListBaseEEEEENS3_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS9_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINSt3__14pairINS1_14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS8_NS1_6MemberINS1_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [616 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<std::__1::pair<blink::CollectionType, WTF::AtomicString>, WTF::KeyValuePair<std::__1::pair<blink::CollectionType, WTF::AtomicString>, blink::Member<blink::LiveNodeListBase> >, WTF::KeyValuePairKeyExtractor, blink::NodeListsNodeData::NodeListAtomicCacheMapEntryHash, WTF::HashMapValueTraits<WTF::HashTraits<std::__1::pair<blink::CollectionType, WTF::AtomicString> >, WTF::HashTraits<blink::Member<blink::LiveNodeListBase> > >, WTF::HashTraits<std::__1::pair<blink::CollectionType, WTF::AtomicString> >, blink::HeapAllocator> >]\00", align 1
@_ZN3WTF11g_star_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::bindings::UnionBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink45V8UnionHTMLOptGroupElementOrHTMLOptionElementE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN5blink24V8UnionHTMLElementOrLongE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.20 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.21 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17HTMLOptionElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [175 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::HTMLOptionElement>, WTF::VectorTraits<blink::Member<blink::HTMLOptionElement> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11HTMLElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [163 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::HTMLElement>, WTF::VectorTraits<blink::Member<blink::HTMLElement> > >]\00", align 1
@_ZN5blink10html_names8kSlotTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

@_ZN5blink17HTMLSelectElementC1ERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::HTMLSelectElement"*, %"class.blink::Document"*), void (%"class.blink::HTMLSelectElement"*, %"class.blink::Document"*)* @_ZN5blink17HTMLSelectElementC2ERNS_8DocumentE
@_ZN5blink17HTMLSelectElementD1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLSelectElement"*), void (%"class.blink::HTMLSelectElement"*)* @_ZN5blink17HTMLSelectElementD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElementC2ERNS_8DocumentE(%"class.blink::HTMLSelectElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE to %"class.blink::QualifiedName"**), align 8
  tail call void @_ZN5blink31HTMLFormControlElementWithStateC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLFormControlElementWithState"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.blink::Document"* dereferenceable(2848) %1) #11
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::TypeAheadDataSource", %"class.blink::TypeAheadDataSource"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3
  %12 = bitcast %"class.blink::HeapVector.1811"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #11
  %13 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 4
  tail call void @_ZN5blink9TypeAheadC1EPNS_19TypeAheadDataSourceE(%"class.blink::TypeAhead"* %13, %"class.blink::TypeAheadDataSource"* %5) #11
  %14 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 5
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 7, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 9
  %17 = bitcast %"class.blink::HTMLOptionElement"** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false)
  store i8 1, i8* %16, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 10
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  store i8 0, i8* %19, align 2
  %20 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 12
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14
  %22 = getelementptr inbounds %"class.blink::Member.1840", %"class.blink::Member.1840"* %21, i64 0, i32 0, i32 0
  store %"class.blink::SelectType"* null, %"class.blink::SelectType"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 15
  store i32 -1, i32* %23, align 8
  %24 = tail call %"class.blink::SelectType"* @_ZN5blink10SelectType6CreateERNS_17HTMLSelectElementE(%"class.blink::HTMLSelectElement"* dereferenceable(352) %0) #11
  %25 = ptrtoint %"class.blink::SelectType"* %24 to i64
  %26 = bitcast %"class.blink::Member.1840"* %21 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %2
  %30 = bitcast %"class.blink::SelectType"* %24 to i8*
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #11
  br label %32

32:                                               ; preds = %2, %29
  %33 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = or i32 %34, 2048
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = tail call dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"* %36) #11
  ret void
}

declare void @_ZN5blink31HTMLFormControlElementWithStateC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLFormControlElementWithState"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare void @_ZN5blink9TypeAheadC1EPNS_19TypeAheadDataSourceE(%"class.blink::TypeAhead"*, %"class.blink::TypeAheadDataSource"*) unnamed_addr #1

declare %"class.blink::SelectType"* @_ZN5blink10SelectType6CreateERNS_17HTMLSelectElementE(%"class.blink::HTMLSelectElement"* dereferenceable(352)) local_unnamed_addr #1

declare dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElementD2Ev(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 4, i32 4
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %24

24:                                               ; preds = %1, %20, %23
  %25 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  tail call void @_ZN5blink31HTMLFormControlElementWithStateD2Ev(%"class.blink::HTMLFormControlElementWithState"* %25) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink31HTMLFormControlElementWithStateD2Ev(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink17HTMLSelectElementD1Ev(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 -1, i32 4, i32 2
  %3 = bitcast i16* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i16, i16* %2, i64 40
  %5 = bitcast i16* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i16, i16* %2, i64 52
  %7 = bitcast i16* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i16, i16* %2, i64 84
  %9 = bitcast i16* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i16, i16* %2, i64 100
  %11 = bitcast i16* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i16, i16* %2, i64 128
  %13 = bitcast i16* %12 to %"class.WTF::StringBuilder"*
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %13) #11
  %14 = bitcast i16* %12 to %"class.WTF::StringImpl"**
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #11
  br label %30

30:                                               ; preds = %1, %26, %29
  %31 = bitcast i16* %2 to %"class.blink::HTMLFormControlElementWithState"*
  tail call void @_ZN5blink31HTMLFormControlElementWithStateD2Ev(%"class.blink::HTMLFormControlElementWithState"* %31) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn200_N5blink17HTMLSelectElementD1Ev(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 -1, i32 0, i32 0, i32 1, i32 7
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 80
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 104
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 168
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 200
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 256
  %13 = bitcast i8* %12 to %"class.WTF::StringBuilder"*
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %13) #11
  %14 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #11
  br label %30

30:                                               ; preds = %1, %26, %29
  %31 = bitcast i8* %2 to %"class.blink::HTMLFormControlElementWithState"*
  tail call void @_ZN5blink31HTMLFormControlElementWithStateD2Ev(%"class.blink::HTMLFormControlElementWithState"* %31) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElementD0Ev(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 4, i32 4
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %24

24:                                               ; preds = %1, %20, %23
  %25 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  tail call void @_ZN5blink31HTMLFormControlElementWithStateD2Ev(%"class.blink::HTMLFormControlElementWithState"* %25) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink17HTMLSelectElementD0Ev(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 -1, i32 4, i32 2
  %3 = bitcast i16* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i16, i16* %2, i64 40
  %5 = bitcast i16* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i16, i16* %2, i64 52
  %7 = bitcast i16* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i16, i16* %2, i64 84
  %9 = bitcast i16* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i16, i16* %2, i64 100
  %11 = bitcast i16* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i16, i16* %2, i64 128
  %13 = bitcast i16* %12 to %"class.WTF::StringBuilder"*
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %13) #11
  %14 = bitcast i16* %12 to %"class.WTF::StringImpl"**
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #11
  br label %30

30:                                               ; preds = %1, %26, %29
  %31 = bitcast i16* %2 to %"class.blink::HTMLFormControlElementWithState"*
  tail call void @_ZN5blink31HTMLFormControlElementWithStateD2Ev(%"class.blink::HTMLFormControlElementWithState"* %31) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn200_N5blink17HTMLSelectElementD0Ev(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 -1, i32 0, i32 0, i32 1, i32 7
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 80
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 104
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 168
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 200
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }, { [200 x i8*], [3 x i8*], [34 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink17HTMLSelectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 256
  %13 = bitcast i8* %12 to %"class.WTF::StringBuilder"*
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %13) #11
  %14 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #11
  br label %30

30:                                               ; preds = %1, %26, %29
  %31 = bitcast i8* %2 to %"class.blink::HTMLFormControlElementWithState"*
  tail call void @_ZN5blink31HTMLFormControlElementWithStateD2Ev(%"class.blink::HTMLFormControlElementWithState"* %31) #11
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink17HTMLSelectElement21CanAssignToSelectSlotERKNS_4NodeE(%"class.blink::Node"* readonly dereferenceable(64)) local_unnamed_addr #3 align 2 {
  %2 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %3 = icmp eq %"class.blink::Node"* %0, null
  br i1 %3, label %44, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 48
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %44

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %13 = bitcast %"class.blink::Member.318"* %12 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %16, %18
  br i1 %19, label %44, label %20

20:                                               ; preds = %9
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %25 = bitcast %"class.blink::Member.318"* %24 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %28, %30
  br i1 %31, label %44, label %32

32:                                               ; preds = %20
  %33 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kHrTagE, align 8
  %34 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %37 = bitcast %"class.blink::Member.318"* %36 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %40, %42
  br label %44

44:                                               ; preds = %4, %1, %32, %20, %9
  %45 = phi i1 [ true, %20 ], [ true, %9 ], [ %43, %32 ], [ false, %1 ], [ false, %4 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink17HTMLSelectElement15FormControlTypeEv(%"class.blink::HTMLSelectElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink17HTMLSelectElement15FormControlTypeEvE17s_select_multiple to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink17HTMLSelectElement15FormControlTypeEvE17s_select_multiple) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink17HTMLSelectElement15FormControlTypeEvE17s_select_multiple to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i64 15) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink17HTMLSelectElement15FormControlTypeEvE17s_select_multiple) #11
  br label %8

8:                                                ; preds = %4, %7, %1
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink17HTMLSelectElement15FormControlTypeEvE12s_select_one to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !2

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink17HTMLSelectElement15FormControlTypeEvE12s_select_one) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink17HTMLSelectElement15FormControlTypeEvE12s_select_one to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i64 10) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink17HTMLSelectElement15FormControlTypeEvE12s_select_one) #11
  br label %15

15:                                               ; preds = %11, %14, %8
  %16 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 10
  %17 = load i8, i8* %16, align 1, !range !3
  %18 = icmp eq i8 %17, 0
  %19 = select i1 %18, %"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink17HTMLSelectElement15FormControlTypeEvE12s_select_one to %"class.WTF::AtomicString"*), %"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink17HTMLSelectElement15FormControlTypeEvE17s_select_multiple to %"class.WTF::AtomicString"*)
  ret %"class.WTF::AtomicString"* %19
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLSelectElement25HasPlaceholderLabelOptionEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %66

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 8
  %8 = icmp ugt i32 %7, 1
  br i1 %8, label %66, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %11 = load i8, i8* %10, align 2, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %14

14:                                               ; preds = %9, %13
  %15 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0
  %16 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %66, label %19

19:                                               ; preds = %14
  %20 = load i8, i8* %10, align 2, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %23

23:                                               ; preds = %19, %22
  %24 = tail call dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"* %15, i32 0) #11
  %25 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %25, align 8
  %27 = icmp eq %"class.blink::HTMLElement"* %26, null
  br i1 %27, label %66, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %26, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 48
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %66

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %26, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %36 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 1, i32 2
  %39 = bitcast %"class.blink::Member.318"* %38 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %42, %44
  br i1 %45, label %46, label %66

46:                                               ; preds = %33
  %47 = bitcast %"class.blink::HTMLElement"* %26 to %"class.blink::HTMLOptionElement"*
  %48 = tail call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %47) #11
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %66, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %50
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %50
  %63 = phi i32 [ %61, %60 ], [ %59, %50 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #11
  br label %66

66:                                               ; preds = %33, %1, %46, %23, %28, %65, %62, %14, %5
  %67 = phi i1 [ false, %5 ], [ false, %1 ], [ false, %14 ], [ %53, %62 ], [ %53, %65 ], [ false, %33 ], [ false, %28 ], [ false, %23 ], [ true, %46 ]
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::HeapVector.1811"* @_ZNK5blink17HTMLSelectElement12GetListItemsEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 2, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0)
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3
  ret %"class.blink::HeapVector.1811"* %7
}

declare %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17HTMLSelectElement17validationMessageEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement12willValidateEv(%"class.blink::HTMLFormControlElement"* %2) #11
  br i1 %3, label %4, label %18

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.blink::ListedElement.base"* %5 to %"class.blink::ListedElement"*
  %7 = tail call zeroext i1 @_ZNK5blink13ListedElement11CustomErrorEv(%"class.blink::ListedElement"* %6) #11
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement23CustomValidationMessageEv(%"class.blink::ListedElement"* %6) #11
  %10 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  br label %18

11:                                               ; preds = %4
  %12 = tail call zeroext i1 @_ZNK5blink17HTMLSelectElement12ValueMissingEv(%"class.blink::HTMLSelectElement"* %0)
  br i1 %12, label %13, label %18

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %14) #11
  %16 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %15, i32 25045) #11
  %17 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  br label %18

18:                                               ; preds = %11, %1, %13, %8
  %19 = phi i64 [ %10, %8 ], [ %17, %13 ], [ 0, %1 ], [ 0, %11 ]
  %20 = inttoptr i64 %19 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %20
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement12willValidateEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare zeroext i1 @_ZNK5blink13ListedElement11CustomErrorEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement23CustomValidationMessageEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLSelectElement12ValueMissingEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::OptionListIterator", align 8
  %3 = alloca %"class.blink::OptionListIterator", align 8
  %4 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %5 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"* %4) #11
  br i1 %5, label %6, label %41

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 1
  %9 = bitcast %"class.blink::OptionListIterator"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %2, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %2, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %11, align 8
  %12 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  %14 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false)
  br label %34

15:                                               ; preds = %6
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %2, %"class.blink::HTMLOptionElement"* null) #11
  %16 = bitcast %"class.blink::OptionListIterator"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  %19 = bitcast %"class.blink::OptionListIterator"* %3 to i64*
  store i64 %17, i64* %19, align 8
  store %"class.blink::HTMLOptionElement"* %18, %"class.blink::HTMLOptionElement"** %8, align 8
  %20 = icmp eq %"class.blink::HTMLOptionElement"* %18, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %15, %31
  %22 = phi i32 [ %27, %31 ], [ 0, %15 ]
  %23 = phi %"class.blink::HTMLOptionElement"* [ %32, %31 ], [ %18, %15 ]
  %24 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %23) #11
  %25 = xor i1 %24, true
  %26 = zext i1 %25 to i32
  %27 = add i32 %22, %26
  br i1 %24, label %35, label %28

28:                                               ; preds = %21
  %29 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %8, align 8
  %30 = icmp eq %"class.blink::HTMLOptionElement"* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %3, %"class.blink::HTMLOptionElement"* nonnull %29) #11
  %32 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %8, align 8
  %33 = icmp eq %"class.blink::HTMLOptionElement"* %32, null
  br i1 %33, label %34, label %21

34:                                               ; preds = %28, %31, %13, %15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  br label %41

35:                                               ; preds = %21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  %36 = icmp slt i32 %22, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %35
  %38 = icmp eq i32 %22, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = call zeroext i1 @_ZNK5blink17HTMLSelectElement25HasPlaceholderLabelOptionEv(%"class.blink::HTMLSelectElement"* nonnull %0)
  br label %41

41:                                               ; preds = %34, %35, %39, %37, %1
  %42 = phi i1 [ false, %1 ], [ true, %35 ], [ false, %37 ], [ %40, %39 ], [ true, %34 ]
  ret i1 %42
}

declare dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZThn104_NK5blink17HTMLSelectElement17validationMessageEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 -1, i32 4, i32 2
  %3 = bitcast i16* %2 to %"class.blink::HTMLSelectElement"*
  %4 = bitcast i16* %2 to %"class.blink::HTMLFormControlElement"*
  %5 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement12willValidateEv(%"class.blink::HTMLFormControlElement"* %4) #11
  br i1 %5, label %6, label %20

6:                                                ; preds = %1
  %7 = getelementptr inbounds i16, i16* %2, i64 52
  %8 = bitcast i16* %7 to %"class.blink::ListedElement"*
  %9 = tail call zeroext i1 @_ZNK5blink13ListedElement11CustomErrorEv(%"class.blink::ListedElement"* %8) #11
  br i1 %9, label %10, label %13

10:                                               ; preds = %6
  %11 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement23CustomValidationMessageEv(%"class.blink::ListedElement"* %8) #11
  %12 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  br label %20

13:                                               ; preds = %6
  %14 = tail call zeroext i1 @_ZNK5blink17HTMLSelectElement12ValueMissingEv(%"class.blink::HTMLSelectElement"* %3) #11
  br i1 %14, label %15, label %20

15:                                               ; preds = %13
  %16 = bitcast i16* %2 to %"class.blink::Element"*
  %17 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %16) #11
  %18 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %17, i32 25045) #11
  %19 = ptrtoint %"class.WTF::StringImpl"* %18 to i64
  br label %20

20:                                               ; preds = %1, %10, %13, %15
  %21 = phi i64 [ %12, %10 ], [ %19, %15 ], [ 0, %1 ], [ 0, %13 ]
  %22 = inttoptr i64 %21 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17HTMLSelectElement13selectedIndexEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::OptionListIterator", align 8
  %3 = alloca %"class.blink::OptionListIterator", align 8
  %4 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 1
  %6 = bitcast %"class.blink::OptionListIterator"* %2 to i8*
  %7 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6)
  %8 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %2, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %2, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %9, align 8
  %10 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6)
  store %"class.blink::HTMLSelectElement"* null, %"class.blink::HTMLSelectElement"** %12, align 8
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %5, align 8
  br label %32

13:                                               ; preds = %1
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %2, %"class.blink::HTMLOptionElement"* null) #11
  %14 = bitcast %"class.blink::OptionListIterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6)
  %17 = bitcast %"class.blink::OptionListIterator"* %3 to i64*
  store i64 %15, i64* %17, align 8
  store %"class.blink::HTMLOptionElement"* %16, %"class.blink::HTMLOptionElement"** %5, align 8
  %18 = icmp eq %"class.blink::HTMLOptionElement"* %16, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13, %29
  %20 = phi i32 [ %25, %29 ], [ 0, %13 ]
  %21 = phi %"class.blink::HTMLOptionElement"* [ %30, %29 ], [ %16, %13 ]
  %22 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %21) #11
  %23 = xor i1 %22, true
  %24 = zext i1 %23 to i32
  %25 = add i32 %20, %24
  br i1 %22, label %32, label %26

26:                                               ; preds = %19
  %27 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %5, align 8
  %28 = icmp eq %"class.blink::HTMLOptionElement"* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %3, %"class.blink::HTMLOptionElement"* nonnull %27) #11
  %30 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %5, align 8
  %31 = icmp eq %"class.blink::HTMLOptionElement"* %30, null
  br i1 %31, label %32, label %19

32:                                               ; preds = %29, %26, %19, %13, %11
  %33 = phi i32 [ -1, %11 ], [ -1, %13 ], [ -1, %29 ], [ -1, %26 ], [ %20, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink17HTMLSelectElement12ValueMissingEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 -1, i32 4, i32 2
  %3 = bitcast i16* %2 to %"class.blink::HTMLSelectElement"*
  %4 = tail call zeroext i1 @_ZNK5blink17HTMLSelectElement12ValueMissingEv(%"class.blink::HTMLSelectElement"* %3)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17HTMLSelectElement14DefaultToolTipEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::ListedElement.base"* %2 to %"class.blink::ListedElement"*
  %4 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %5 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %4, align 8
  %6 = icmp eq %"class.blink::HTMLFormElement"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call zeroext i1 @_ZNK5blink15HTMLFormElement10NoValidateEv(%"class.blink::HTMLFormElement"* nonnull %5) #11
  br i1 %8, label %24, label %9

9:                                                ; preds = %1, %7
  %10 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %11 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement12willValidateEv(%"class.blink::HTMLFormControlElement"* %10) #11
  br i1 %11, label %12, label %24

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @_ZNK5blink13ListedElement11CustomErrorEv(%"class.blink::ListedElement"* %3) #11
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement23CustomValidationMessageEv(%"class.blink::ListedElement"* %3) #11
  %16 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  br label %24

17:                                               ; preds = %12
  %18 = tail call zeroext i1 @_ZNK5blink17HTMLSelectElement12ValueMissingEv(%"class.blink::HTMLSelectElement"* %0) #11
  br i1 %18, label %19, label %24

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %20) #11
  %22 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %21, i32 25045) #11
  %23 = ptrtoint %"class.WTF::StringImpl"* %22 to i64
  br label %24

24:                                               ; preds = %19, %17, %14, %9, %7
  %25 = phi i64 [ 0, %7 ], [ %16, %14 ], [ %23, %19 ], [ 0, %9 ], [ 0, %17 ]
  %26 = inttoptr i64 %25 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %26
}

declare zeroext i1 @_ZNK5blink15HTMLFormElement10NoValidateEv(%"class.blink::HTMLFormElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement28SelectMultipleOptionsByPopupERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::HTMLSelectElement"*, %"class.WTF::Vector.1854"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::OptionListIterator", align 8
  %4 = alloca %"class.blink::HeapHashSet.1859", align 8
  %5 = alloca %"class.blink::OptionListIterator", align 8
  %6 = alloca %"class.blink::HTMLOptionElement"*, align 8
  %7 = bitcast %"class.blink::HeapHashSet.1859"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::HeapHashSet.1859", %"class.blink::HeapHashSet.1859"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::HeapHashSet.1859", %"class.blink::HeapHashSet.1859"* %4, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.blink::HeapHashSet.1859", %"class.blink::HeapHashSet.1859"* %4, i64 0, i32 0, i32 0, i32 2
  %11 = bitcast %"class.blink::HeapHashSet.1859"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 20, i1 false) #11
  %12 = bitcast %"class.blink::OptionListIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %5, i64 0, i32 1
  %14 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  %15 = bitcast %"class.blink::OptionListIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  %16 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %17, align 8
  %18 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  store %"class.blink::HTMLSelectElement"* null, %"class.blink::HTMLSelectElement"** %20, align 8
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %13, align 8
  br label %30

21:                                               ; preds = %2
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %3, %"class.blink::HTMLOptionElement"* null) #11
  %22 = bitcast %"class.blink::OptionListIterator"* %3 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  %25 = bitcast %"class.blink::OptionListIterator"* %5 to i64*
  store i64 %23, i64* %25, align 8
  store %"class.blink::HTMLOptionElement"* %24, %"class.blink::HTMLOptionElement"** %13, align 8
  %26 = icmp eq %"class.blink::HTMLOptionElement"* %24, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.blink::HTMLOptionElement"** %6 to i8*
  %29 = getelementptr inbounds %"class.blink::HeapHashSet.1859", %"class.blink::HeapHashSet.1859"* %4, i64 0, i32 0, i32 0
  br label %45

30:                                               ; preds = %51, %54, %19, %21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  %31 = getelementptr inbounds %"class.WTF::Vector.1854", %"class.WTF::Vector.1854"* %1, i64 0, i32 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::Vector.1854", %"class.WTF::Vector.1854"* %1, i64 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %32, i64 %35
  %37 = icmp eq i32 %34, 0
  br i1 %37, label %57, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %40 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %41 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0
  %42 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::HeapHashSet.1859", %"class.blink::HeapHashSet.1859"* %4, i64 0, i32 0, i32 0
  br label %72

45:                                               ; preds = %27, %54
  %46 = phi %"class.blink::HTMLOptionElement"* [ %24, %27 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  store %"class.blink::HTMLOptionElement"* %46, %"class.blink::HTMLOptionElement"** %6, align 8
  %47 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %46) #11
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = call { %"class.blink::Member.1836"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.1863"* nonnull %29, %"class.blink::HTMLOptionElement"** nonnull dereferenceable(8) %6, %"class.blink::HTMLOptionElement"** nonnull dereferenceable(8) %6) #11
  %50 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %6, align 8
  call void @_ZN5blink17HTMLOptionElement16SetSelectedStateEb(%"class.blink::HTMLOptionElement"* %50, i1 zeroext false) #11
  br label %51

51:                                               ; preds = %48, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  %52 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %13, align 8
  %53 = icmp eq %"class.blink::HTMLOptionElement"* %52, null
  br i1 %53, label %30, label %54

54:                                               ; preds = %51
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %5, %"class.blink::HTMLOptionElement"* nonnull %52) #11
  %55 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %13, align 8
  %56 = icmp eq %"class.blink::HTMLOptionElement"* %55, null
  br i1 %56, label %30, label %45

57:                                               ; preds = %181, %30
  %58 = phi i8 [ 0, %30 ], [ %182, %181 ]
  %59 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %60 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %59, align 8
  %61 = bitcast %"class.blink::SelectType"* %60 to void (%"class.blink::SelectType"*)***
  %62 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %62, i64 10
  %64 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %63, align 8
  call void %64(%"class.blink::SelectType"* %60) #11
  %65 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %66 = bitcast %"class.blink::ListedElement.base"* %65 to %"class.blink::ListedElement"*
  call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %66) #11
  %67 = and i8 %58, 1
  %68 = icmp eq i8 %67, 0
  %69 = load i32, i32* %10, align 4
  %70 = icmp eq i32 %69, 0
  %71 = and i1 %68, %70
  br i1 %71, label %187, label %185

72:                                               ; preds = %38, %181
  %73 = phi i8 [ 0, %38 ], [ %182, %181 ]
  %74 = phi i32* [ %32, %38 ], [ %183, %181 ]
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %75, 0
  br i1 %76, label %181, label %77

77:                                               ; preds = %72
  %78 = load i8, i8* %39, align 2, !range !3
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %81, label %80

80:                                               ; preds = %77
  call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %81

81:                                               ; preds = %80, %77
  %82 = load i32, i32* %40, align 4
  %83 = icmp ugt i32 %82, %75
  br i1 %83, label %84, label %181

84:                                               ; preds = %81
  %85 = call dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"* %41, i32 %75) #11
  %86 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %86, align 8
  %88 = icmp eq %"class.blink::HTMLElement"* %87, null
  br i1 %88, label %181, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %87, i64 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, 48
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %181

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %87, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %97 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %95, i64 1, i32 2
  %98 = bitcast %"class.blink::Member.318"* %97 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %99 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %99, i64 0, i32 3, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %96, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %101, %103
  %105 = bitcast %"class.blink::HTMLElement"* %87 to %"class.blink::HTMLOptionElement"*
  br i1 %104, label %106, label %181

106:                                              ; preds = %94
  call void @_ZN5blink17HTMLOptionElement16SetSelectedStateEb(%"class.blink::HTMLOptionElement"* nonnull %105, i1 zeroext true) #11
  call void @_ZN5blink17HTMLOptionElement8SetDirtyEb(%"class.blink::HTMLOptionElement"* nonnull %105, i1 zeroext true) #11
  %107 = ptrtoint %"class.blink::HTMLElement"* %87 to i64
  %108 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %8, align 8
  %109 = icmp eq %"class.blink::Member.1836"* %108, null
  %110 = load i32, i32* %9, align 8
  br i1 %109, label %172, label %111

111:                                              ; preds = %106
  %112 = add i32 %110, -1
  %113 = zext i32 %112 to i64
  %114 = shl i64 %107, 32
  %115 = xor i64 %114, -1
  %116 = add i64 %115, %107
  %117 = lshr i64 %116, 22
  %118 = xor i64 %117, %116
  %119 = shl i64 %118, 13
  %120 = xor i64 %119, -1
  %121 = add i64 %118, %120
  %122 = lshr i64 %121, 8
  %123 = xor i64 %122, %121
  %124 = mul i64 %123, 9
  %125 = lshr i64 %124, 15
  %126 = xor i64 %125, %124
  %127 = shl i64 %126, 27
  %128 = xor i64 %127, -1
  %129 = add i64 %126, %128
  %130 = lshr i64 %129, 31
  %131 = xor i64 %130, %129
  %132 = trunc i64 %131 to i32
  %133 = and i32 %112, %132
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %108, i64 %134
  %136 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %135, i64 0, i32 0, i32 0
  %137 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %136, align 8
  %138 = icmp eq %"class.blink::HTMLOptionElement"* %137, %105
  br i1 %138, label %167, label %139

139:                                              ; preds = %111
  %140 = xor i32 %132, -1
  %141 = lshr i32 %132, 23
  %142 = add i32 %141, %140
  %143 = shl i32 %142, 12
  %144 = xor i32 %143, %142
  %145 = lshr i32 %144, 7
  %146 = xor i32 %145, %144
  %147 = shl i32 %146, 2
  %148 = xor i32 %147, %146
  %149 = lshr i32 %148, 20
  %150 = xor i32 %149, %148
  %151 = or i32 %150, 1
  %152 = zext i32 %151 to i64
  br label %153

153:                                              ; preds = %158, %139
  %154 = phi %"class.blink::HTMLOptionElement"* [ %137, %139 ], [ %165, %158 ]
  %155 = phi i64 [ %134, %139 ], [ %162, %158 ]
  %156 = phi i64 [ 0, %139 ], [ %160, %158 ]
  %157 = icmp eq %"class.blink::HTMLOptionElement"* %154, null
  br i1 %157, label %172, label %158

158:                                              ; preds = %153
  %159 = icmp eq i64 %156, 0
  %160 = select i1 %159, i64 %152, i64 %156
  %161 = add i64 %160, %155
  %162 = and i64 %161, %113
  %163 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %108, i64 %162
  %164 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %163, i64 0, i32 0, i32 0
  %165 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %164, align 8
  %166 = icmp eq %"class.blink::HTMLOptionElement"* %165, %105
  br i1 %166, label %167, label %153

167:                                              ; preds = %158, %111
  %168 = phi %"class.blink::Member.1836"* [ %135, %111 ], [ %163, %158 ]
  %169 = icmp eq %"class.blink::Member.1836"* %168, null
  br i1 %169, label %172, label %170

170:                                              ; preds = %167
  %171 = zext i32 %110 to i64
  br label %175

172:                                              ; preds = %153, %167, %106
  %173 = zext i32 %110 to i64
  %174 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %108, i64 %173
  br label %175

175:                                              ; preds = %170, %172
  %176 = phi i64 [ %171, %170 ], [ %173, %172 ]
  %177 = phi %"class.blink::Member.1836"* [ %168, %170 ], [ %174, %172 ]
  %178 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %108, i64 %176
  %179 = icmp eq %"class.blink::Member.1836"* %177, %178
  br i1 %179, label %181, label %180

180:                                              ; preds = %175
  call void @_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.1863"* nonnull %44, %"class.blink::Member.1836"* %177) #11
  br label %181

181:                                              ; preds = %175, %94, %84, %89, %81, %72, %180
  %182 = phi i8 [ %73, %180 ], [ 1, %175 ], [ %73, %72 ], [ %73, %81 ], [ %73, %94 ], [ %73, %89 ], [ %73, %84 ]
  %183 = getelementptr inbounds i32, i32* %74, i64 1
  %184 = icmp eq i32* %183, %36
  br i1 %184, label %57, label %72

185:                                              ; preds = %57
  %186 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  call void @_ZN5blink31HTMLFormControlElementWithState18DispatchInputEventEv(%"class.blink::HTMLFormControlElementWithState"* %186) #11
  call void @_ZN5blink31HTMLFormControlElementWithState19DispatchChangeEventEv(%"class.blink::HTMLFormControlElementWithState"* %186) #11
  br label %187

187:                                              ; preds = %57, %185
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret void
}

declare zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

declare void @_ZN5blink17HTMLOptionElement16SetSelectedStateEb(%"class.blink::HTMLOptionElement"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLOptionElement"* @_ZNK5blink17HTMLSelectElement17OptionAtListIndexEi(%"class.blink::HTMLSelectElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %39, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %6 = load i8, i8* %5, align 2, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp ugt i32 %11, %1
  br i1 %12, label %13, label %39

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0
  %15 = tail call dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"* %14, i32 %1) #11
  %16 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %16, align 8
  %18 = icmp eq %"class.blink::HTMLElement"* %17, null
  br i1 %18, label %39, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %17, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 48
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %39

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %17, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 1, i32 2
  %30 = bitcast %"class.blink::Member.318"* %29 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  %37 = bitcast %"class.blink::HTMLElement"* %17 to %"class.blink::HTMLOptionElement"*
  %38 = select i1 %36, %"class.blink::HTMLOptionElement"* %37, %"class.blink::HTMLOptionElement"* null
  br label %39

39:                                               ; preds = %24, %19, %13, %9, %2
  %40 = phi %"class.blink::HTMLOptionElement"* [ null, %2 ], [ null, %9 ], [ %38, %24 ], [ null, %19 ], [ null, %13 ]
  ret %"class.blink::HTMLOptionElement"* %40
}

declare void @_ZN5blink17HTMLOptionElement8SetDirtyEb(%"class.blink::HTMLOptionElement"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

declare void @_ZN5blink31HTMLFormControlElementWithState18DispatchInputEventEv(%"class.blink::HTMLFormControlElementWithState"*) local_unnamed_addr #1

declare void @_ZN5blink31HTMLFormControlElementWithState19DispatchChangeEventEv(%"class.blink::HTMLFormControlElementWithState"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink17HTMLSelectElement11ListBoxSizeEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  %5 = select i1 %4, i32 4, i32 %3
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement18UpdateUsesMenuListEv(%"class.blink::HTMLSelectElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() #11
  %3 = bitcast %"class.blink::LayoutTheme"* %2 to i1 (%"class.blink::LayoutTheme"*)***
  %4 = load i1 (%"class.blink::LayoutTheme"*)**, i1 (%"class.blink::LayoutTheme"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::LayoutTheme"*)*, i1 (%"class.blink::LayoutTheme"*)** %4, i64 25
  %6 = load i1 (%"class.blink::LayoutTheme"*)*, i1 (%"class.blink::LayoutTheme"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::LayoutTheme"* %2) #11
  br i1 %7, label %17, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 10
  %10 = load i8, i8* %9, align 1, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = icmp ult i32 %14, 2
  %16 = zext i1 %15 to i8
  br label %17

17:                                               ; preds = %12, %8, %1
  %18 = phi i8 [ 1, %1 ], [ 0, %8 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 9
  store i8 %18, i8* %19, align 8
  ret void
}

declare dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17HTMLSelectElement27ActiveSelectionEndListIndexEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %2, align 8
  %4 = bitcast %"class.blink::SelectType"* %3 to %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)***
  %5 = load %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)**, %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)*, %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)** %5, i64 15
  %7 = load %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)*, %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)** %6, align 8
  %8 = tail call %"class.blink::HTMLOptionElement"* %7(%"class.blink::SelectType"* %3) #11
  %9 = icmp eq %"class.blink::HTMLOptionElement"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = tail call i32 @_ZNK5blink17HTMLOptionElement9ListIndexEv(%"class.blink::HTMLOptionElement"* nonnull %8) #11
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi i32 [ %11, %10 ], [ -1, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLOptionElement"* @_ZNK5blink17HTMLSelectElement18ActiveSelectionEndEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %2, align 8
  %4 = bitcast %"class.blink::SelectType"* %3 to %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)***
  %5 = load %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)**, %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)*, %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)** %5, i64 15
  %7 = load %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)*, %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)** %6, align 8
  %8 = tail call %"class.blink::HTMLOptionElement"* %7(%"class.blink::SelectType"* %3) #11
  ret %"class.blink::HTMLOptionElement"* %8
}

declare i32 @_ZNK5blink17HTMLOptionElement9ListIndexEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement3addEPKNS_45V8UnionHTMLOptGroupElementOrHTMLOptionElementEPKNS_24V8UnionHTMLElementOrLongERNS_14ExceptionStateE(%"class.blink::HTMLSelectElement"*, %"class.blink::V8UnionHTMLOptGroupElementOrHTMLOptionElement"* nocapture readonly, %"class.blink::V8UnionHTMLElementOrLong"* readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::V8UnionHTMLOptGroupElementOrHTMLOptionElement", %"class.blink::V8UnionHTMLOptGroupElementOrHTMLOptionElement"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %15 [
    i32 0, label %7
    i32 1, label %11
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::V8UnionHTMLOptGroupElementOrHTMLOptionElement", %"class.blink::V8UnionHTMLOptGroupElementOrHTMLOptionElement"* %1, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::HTMLOptGroupElement"*, %"class.blink::HTMLOptGroupElement"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLOptGroupElement", %"class.blink::HTMLOptGroupElement"* %9, i64 0, i32 0
  br label %15

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::V8UnionHTMLOptGroupElementOrHTMLOptionElement", %"class.blink::V8UnionHTMLOptGroupElementOrHTMLOptionElement"* %1, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %13, i64 0, i32 0
  br label %15

15:                                               ; preds = %4, %11, %7
  %16 = phi %"class.blink::HTMLElement"* [ null, %4 ], [ %14, %11 ], [ %10, %7 ]
  %17 = icmp eq %"class.blink::V8UnionHTMLElementOrLong"* %2, null
  br i1 %17, label %33, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::V8UnionHTMLElementOrLong", %"class.blink::V8UnionHTMLElementOrLong"* %2, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %33 [
    i32 0, label %21
    i32 1, label %24
  ]

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::V8UnionHTMLElementOrLong", %"class.blink::V8UnionHTMLElementOrLong"* %2, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %22, align 8
  br label %33

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink13ContainerNode15EnsureNodeListsEv(%"class.blink::ContainerNode"* %25) #11
  %27 = tail call %"class.blink::HTMLOptionsCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_21HTMLOptionsCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::NodeListsNodeData"* %26, %"class.blink::ContainerNode"* dereferenceable(80) %25, i32 13) #11
  %28 = getelementptr inbounds %"class.blink::V8UnionHTMLElementOrLong", %"class.blink::V8UnionHTMLElementOrLong"* %2, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLOptionsCollection", %"class.blink::HTMLOptionsCollection"* %27, i64 0, i32 0
  %31 = tail call %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"* %30, i32 %29) #11
  %32 = bitcast %"class.blink::Element"* %31 to %"class.blink::HTMLElement"*
  br label %33

33:                                               ; preds = %15, %21, %24, %18
  %34 = phi %"class.blink::HTMLElement"* [ null, %18 ], [ %32, %24 ], [ %23, %21 ], [ null, %15 ]
  %35 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %16, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %34, i64 0, i32 0, i32 0, i32 0
  %38 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode12InsertBeforeEPNS_4NodeES2_RNS_14ExceptionStateE(%"class.blink::ContainerNode"* %35, %"class.blink::Node"* %36, %"class.blink::Node"* %37, %"class.blink::ExceptionState"* dereferenceable(72) %3) #11
  %39 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %40 = bitcast %"class.blink::ListedElement.base"* %39 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %40) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLOptionsCollection"* @_ZN5blink17HTMLSelectElement7optionsEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink13ContainerNode15EnsureNodeListsEv(%"class.blink::ContainerNode"* %2) #11
  %4 = tail call %"class.blink::HTMLOptionsCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_21HTMLOptionsCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::NodeListsNodeData"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %2, i32 13) #11
  ret %"class.blink::HTMLOptionsCollection"* %4
}

declare %"class.blink::Node"* @_ZN5blink13ContainerNode12InsertBeforeEPNS_4NodeES2_RNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement6removeEi(%"class.blink::HTMLSelectElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink13ContainerNode15EnsureNodeListsEv(%"class.blink::ContainerNode"* %4) #11
  %6 = tail call %"class.blink::HTMLOptionsCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_21HTMLOptionsCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::NodeListsNodeData"* %5, %"class.blink::ContainerNode"* dereferenceable(80) %4, i32 13) #11
  %7 = getelementptr inbounds %"class.blink::HTMLOptionsCollection", %"class.blink::HTMLOptionsCollection"* %6, i64 0, i32 0
  %8 = tail call %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"* %7, i32 %1) #11
  %9 = icmp eq %"class.blink::Element"* %8, null
  br i1 %9, label %56, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 0, i32 0, i32 0
  %12 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %14, align 8
  %15 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %17 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %18 = bitcast %"class.WTF::StringImpl"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #11
  %19 = bitcast i8** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %20 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  call void @_ZN5blink4Node6removeERNS_14ExceptionStateE(%"class.blink::Node"* %11, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %20) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %21 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %10
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %20) #11
  br label %25

25:                                               ; preds = %10, %24
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %26 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 3
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = bitcast %"class.v8::Isolate"* %31 to %"class.v8::internal::Isolate"*
  %33 = load i64, i64* %27, align 8
  %34 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %32, i64 %33) #11
  %35 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %31) #11
  br i1 %35, label %39, label %36

36:                                               ; preds = %29
  %37 = bitcast i64* %34 to %"class.v8::Value"*
  %38 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %31, %"class.v8::Value"* %37) #11
  br label %39

39:                                               ; preds = %36, %29, %25
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #11
  br label %55

55:                                               ; preds = %39, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #11
  br label %56

56:                                               ; preds = %2, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLOptionElement"* @_ZN5blink17HTMLSelectElement4itemEj(%"class.blink::HTMLSelectElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink13ContainerNode15EnsureNodeListsEv(%"class.blink::ContainerNode"* %3) #11
  %5 = tail call %"class.blink::HTMLOptionsCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_21HTMLOptionsCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::NodeListsNodeData"* %4, %"class.blink::ContainerNode"* dereferenceable(80) %3, i32 13) #11
  %6 = getelementptr inbounds %"class.blink::HTMLOptionsCollection", %"class.blink::HTMLOptionsCollection"* %5, i64 0, i32 0
  %7 = tail call %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"* %6, i32 %1) #11
  %8 = bitcast %"class.blink::Element"* %7 to %"class.blink::HTMLOptionElement"*
  ret %"class.blink::HTMLOptionElement"* %8
}

declare void @_ZN5blink4Node6removeERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17HTMLSelectElement5valueEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::OptionListIterator", align 8
  %3 = alloca %"class.blink::OptionListIterator", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 1
  %7 = bitcast %"class.blink::OptionListIterator"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %2, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %2, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %9, align 8
  %10 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  %12 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false)
  br label %31

13:                                               ; preds = %1
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %2, %"class.blink::HTMLOptionElement"* null) #11
  %14 = bitcast %"class.blink::OptionListIterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  %17 = bitcast %"class.blink::OptionListIterator"* %3 to i64*
  store i64 %15, i64* %17, align 8
  store %"class.blink::HTMLOptionElement"* %16, %"class.blink::HTMLOptionElement"** %6, align 8
  %18 = icmp eq %"class.blink::HTMLOptionElement"* %16, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %13, %25
  %20 = phi %"class.blink::HTMLOptionElement"* [ %26, %25 ], [ %16, %13 ]
  %21 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %20) #11
  br i1 %21, label %28, label %22

22:                                               ; preds = %19
  %23 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %6, align 8
  %24 = icmp eq %"class.blink::HTMLOptionElement"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %3, %"class.blink::HTMLOptionElement"* nonnull %23) #11
  %26 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %6, align 8
  %27 = icmp eq %"class.blink::HTMLOptionElement"* %26, null
  br i1 %27, label %31, label %19

28:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  %29 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %20) #11
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  br label %34

31:                                               ; preds = %22, %25, %11, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #11
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  br label %34

34:                                               ; preds = %28, %31
  %35 = phi %"class.WTF::StringImpl"* [ %29, %28 ], [ %33, %31 ]
  ret %"class.WTF::StringImpl"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLOptionElement"* @_ZNK5blink17HTMLSelectElement14SelectedOptionEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::OptionListIterator", align 8
  %3 = alloca %"class.blink::OptionListIterator", align 8
  %4 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 1
  %6 = bitcast %"class.blink::OptionListIterator"* %2 to i8*
  %7 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6)
  %8 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %2, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %2, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %9, align 8
  %10 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6)
  store %"class.blink::HTMLSelectElement"* null, %"class.blink::HTMLSelectElement"** %12, align 8
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %5, align 8
  br label %28

13:                                               ; preds = %1
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %2, %"class.blink::HTMLOptionElement"* null) #11
  %14 = bitcast %"class.blink::OptionListIterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6)
  %17 = bitcast %"class.blink::OptionListIterator"* %3 to i64*
  store i64 %15, i64* %17, align 8
  store %"class.blink::HTMLOptionElement"* %16, %"class.blink::HTMLOptionElement"** %5, align 8
  %18 = icmp eq %"class.blink::HTMLOptionElement"* %16, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %13, %25
  %20 = phi %"class.blink::HTMLOptionElement"* [ %26, %25 ], [ %16, %13 ]
  %21 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %20) #11
  br i1 %21, label %28, label %22

22:                                               ; preds = %19
  %23 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %5, align 8
  %24 = icmp eq %"class.blink::HTMLOptionElement"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %3, %"class.blink::HTMLOptionElement"* nonnull %23) #11
  %26 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %5, align 8
  %27 = icmp eq %"class.blink::HTMLOptionElement"* %26, null
  br i1 %27, label %28, label %19

28:                                               ; preds = %25, %22, %19, %13, %11
  %29 = phi %"class.blink::HTMLOptionElement"* [ null, %11 ], [ null, %13 ], [ null, %25 ], [ null, %22 ], [ %20, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret %"class.blink::HTMLOptionElement"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement8setValueERKN3WTF6StringEb(%"class.blink::HTMLSelectElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::OptionListIterator", align 8
  %5 = alloca %"class.blink::OptionListIterator", align 8
  %6 = alloca %"class.blink::OptionListIterator", align 8
  %7 = alloca %"class.blink::OptionListIterator", align 8
  %8 = bitcast %"class.blink::OptionListIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %7, i64 0, i32 1
  %10 = bitcast %"class.blink::OptionListIterator"* %6 to i8*
  %11 = bitcast %"class.blink::OptionListIterator"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %12 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %6, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %6, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %13, align 8
  %14 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %7, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  store %"class.blink::HTMLSelectElement"* null, %"class.blink::HTMLSelectElement"** %16, align 8
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %9, align 8
  br label %51

17:                                               ; preds = %3
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %6, %"class.blink::HTMLOptionElement"* null) #11
  %18 = bitcast %"class.blink::OptionListIterator"* %6 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  %21 = bitcast %"class.blink::OptionListIterator"* %7 to i64*
  store i64 %19, i64* %21, align 8
  store %"class.blink::HTMLOptionElement"* %20, %"class.blink::HTMLOptionElement"** %9, align 8
  %22 = icmp eq %"class.blink::HTMLOptionElement"* %20, null
  br i1 %22, label %51, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %23, %48
  %26 = phi %"class.blink::HTMLOptionElement"* [ %20, %23 ], [ %49, %48 ]
  %27 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %26) #11
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %29 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"* %28) #11
  %30 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %44

44:                                               ; preds = %25, %40, %43
  br i1 %29, label %51, label %45

45:                                               ; preds = %44
  %46 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %9, align 8
  %47 = icmp eq %"class.blink::HTMLOptionElement"* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %7, %"class.blink::HTMLOptionElement"* nonnull %46) #11
  %49 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %9, align 8
  %50 = icmp eq %"class.blink::HTMLOptionElement"* %49, null
  br i1 %50, label %51, label %25

51:                                               ; preds = %45, %48, %44, %15, %17
  %52 = phi %"class.blink::HTMLOptionElement"* [ null, %17 ], [ null, %15 ], [ null, %45 ], [ null, %48 ], [ %26, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  %53 = bitcast %"class.blink::OptionListIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #11
  %54 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %5, i64 0, i32 1
  %55 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #11
  %56 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %56, align 8
  %57 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %57, align 8
  br i1 %14, label %58, label %60

58:                                               ; preds = %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #11
  %59 = bitcast %"class.blink::OptionListIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 16, i1 false)
  br label %75

60:                                               ; preds = %51
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %4, %"class.blink::HTMLOptionElement"* null) #11
  %61 = bitcast %"class.blink::OptionListIterator"* %4 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #11
  %64 = bitcast %"class.blink::OptionListIterator"* %5 to i64*
  store i64 %62, i64* %64, align 8
  store %"class.blink::HTMLOptionElement"* %63, %"class.blink::HTMLOptionElement"** %54, align 8
  %65 = icmp eq %"class.blink::HTMLOptionElement"* %63, null
  br i1 %65, label %75, label %66

66:                                               ; preds = %60, %72
  %67 = phi %"class.blink::HTMLOptionElement"* [ %73, %72 ], [ %63, %60 ]
  %68 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %67) #11
  br i1 %68, label %75, label %69

69:                                               ; preds = %66
  %70 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %54, align 8
  %71 = icmp eq %"class.blink::HTMLOptionElement"* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %69
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %5, %"class.blink::HTMLOptionElement"* nonnull %70) #11
  %73 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %54, align 8
  %74 = icmp eq %"class.blink::HTMLOptionElement"* %73, null
  br i1 %74, label %75, label %66

75:                                               ; preds = %69, %72, %66, %58, %60
  %76 = phi %"class.blink::HTMLOptionElement"* [ null, %60 ], [ null, %58 ], [ null, %69 ], [ null, %72 ], [ %67, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #11
  %77 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 8
  %78 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %77, i64 0, i32 0, i32 0
  %79 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %78, align 8
  %80 = icmp eq %"class.blink::HTMLOptionElement"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.blink::Member.1836"* %77 to i64*
  store atomic i64 0, i64* %82 monotonic, align 8
  %83 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #11
  br label %87

87:                                               ; preds = %85, %81
  %88 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %89 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %88, align 8
  %90 = bitcast %"class.blink::SelectType"* %89 to void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)***
  %91 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)**, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %91, i64 7
  %93 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %92, align 8
  call void %93(%"class.blink::SelectType"* %89, %"class.blink::HTMLOptionElement"* null) #11
  br label %94

94:                                               ; preds = %75, %87
  %95 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 12
  %96 = load i8, i8* %95, align 1, !range !3
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %94
  %99 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  call void @_ZN5blink22HTMLFormControlElement16SetAutofillStateENS_16WebAutofillStateE(%"class.blink::HTMLFormControlElement"* %99, i32 0) #11
  br label %100

100:                                              ; preds = %94, %98
  %101 = select i1 %2, i32 7, i32 5
  call void @_ZN5blink17HTMLSelectElement12SelectOptionEPNS_17HTMLOptionElementEj(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* %52, i32 %101)
  %102 = xor i1 %2, true
  %103 = icmp eq %"class.blink::HTMLOptionElement"* %76, %52
  %104 = or i1 %103, %102
  br i1 %104, label %112, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %107 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %106, align 8
  %108 = bitcast %"class.blink::SelectType"* %107 to void (%"class.blink::SelectType"*)***
  %109 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %109, i64 21
  %111 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %110, align 8
  call void %111(%"class.blink::SelectType"* %107) #11
  br label %112

112:                                              ; preds = %100, %105
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement18SetSuggestedOptionEPNS_17HTMLOptionElementE(%"class.blink::HTMLSelectElement"* nocapture, %"class.blink::HTMLOptionElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 8
  %4 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %4, align 8
  %6 = icmp eq %"class.blink::HTMLOptionElement"* %5, %1
  br i1 %6, label %22, label %7

7:                                                ; preds = %2
  %8 = ptrtoint %"class.blink::HTMLOptionElement"* %1 to i64
  %9 = bitcast %"class.blink::Member.1836"* %3 to i64*
  store atomic i64 %8, i64* %9 monotonic, align 8
  %10 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.blink::HTMLOptionElement"* %1 to i8*
  %14 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %13) #11
  br label %15

15:                                               ; preds = %7, %12
  %16 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %17 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %16, align 8
  %18 = bitcast %"class.blink::SelectType"* %17 to void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)***
  %19 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)**, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %19, i64 7
  %21 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %20, align 8
  tail call void %21(%"class.blink::SelectType"* %17, %"class.blink::HTMLOptionElement"* %1) #11
  br label %22

22:                                               ; preds = %2, %15
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement16SetAutofillStateENS_16WebAutofillStateE(%"class.blink::HTMLFormControlElement"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement12SelectOptionEPNS_17HTMLOptionElementEj(%"class.blink::HTMLSelectElement"*, %"class.blink::HTMLOptionElement"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::OptionListIterator", align 8
  %5 = alloca %"class.blink::OptionListIterator", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10, !prof !4

10:                                               ; preds = %3
  %11 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %12 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %14 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %14, i64* %13, align 8
  %15 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %11, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br label %16

16:                                               ; preds = %3, %10
  %17 = phi i64 [ -6148914691236517206, %3 ], [ %15, %10 ]
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), %10 ]
  %19 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %10 ]
  %20 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %21 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 7
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %52, label %24

24:                                               ; preds = %16
  %25 = bitcast %"class.blink::OptionListIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %5, i64 0, i32 1
  %27 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %29, align 8
  %30 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #11
  %32 = bitcast %"class.blink::OptionListIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false)
  br label %48

33:                                               ; preds = %24
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %4, %"class.blink::HTMLOptionElement"* null) #11
  %34 = bitcast %"class.blink::OptionListIterator"* %4 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #11
  %37 = bitcast %"class.blink::OptionListIterator"* %5 to i64*
  store i64 %35, i64* %37, align 8
  store %"class.blink::HTMLOptionElement"* %36, %"class.blink::HTMLOptionElement"** %26, align 8
  %38 = icmp eq %"class.blink::HTMLOptionElement"* %36, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %33, %45
  %40 = phi %"class.blink::HTMLOptionElement"* [ %46, %45 ], [ %36, %33 ]
  %41 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %40) #11
  br i1 %41, label %48, label %42

42:                                               ; preds = %39
  %43 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %26, align 8
  %44 = icmp eq %"class.blink::HTMLOptionElement"* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %42
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %5, %"class.blink::HTMLOptionElement"* nonnull %43) #11
  %46 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %26, align 8
  %47 = icmp eq %"class.blink::HTMLOptionElement"* %46, null
  br i1 %47, label %48, label %39

48:                                               ; preds = %42, %45, %39, %31, %33
  %49 = phi %"class.blink::HTMLOptionElement"* [ null, %33 ], [ null, %31 ], [ null, %42 ], [ null, %45 ], [ %40, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11
  %50 = icmp eq %"class.blink::HTMLOptionElement"* %49, %1
  br i1 %50, label %52, label %51

51:                                               ; preds = %48
  call void @_ZN5blink22HTMLFormControlElement16SetAutofillStateENS_16WebAutofillStateE(%"class.blink::HTMLFormControlElement"* %20, i32 0) #11
  br label %52

52:                                               ; preds = %16, %48, %51
  %53 = icmp eq %"class.blink::HTMLOptionElement"* %1, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %52
  %55 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %1) #11
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i8
  call void @_ZN5blink17HTMLOptionElement16SetSelectedStateEb(%"class.blink::HTMLOptionElement"* nonnull %1, i1 zeroext true) #11
  %58 = and i32 %2, 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %54
  call void @_ZN5blink17HTMLOptionElement8SetDirtyEb(%"class.blink::HTMLOptionElement"* nonnull %1, i1 zeroext true) #11
  br label %61

61:                                               ; preds = %54, %52, %60
  %62 = phi i8 [ %57, %60 ], [ %57, %54 ], [ 0, %52 ]
  %63 = and i32 %2, 1
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = call zeroext i1 @_ZN5blink17HTMLSelectElement30DeselectItemsWithoutValidationEPNS_17HTMLOptionElementE(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* %1)
  %67 = zext i1 %66 to i8
  %68 = or i8 %62, %67
  br label %69

69:                                               ; preds = %61, %65
  %70 = phi i8 [ %68, %65 ], [ %62, %61 ]
  %71 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %72 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %71, align 8
  %73 = and i8 %70, 1
  %74 = icmp ne i8 %73, 0
  %75 = bitcast %"class.blink::SelectType"* %72 to void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*, i32, i1)***
  %76 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*, i32, i1)**, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*, i32, i1)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*, i32, i1)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*, i32, i1)** %76, i64 2
  %78 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*, i32, i1)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*, i32, i1)** %77, align 8
  call void %78(%"class.blink::SelectType"* %72, %"class.blink::HTMLOptionElement"* %1, i32 %2, i1 zeroext %74) #11
  %79 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %80 = bitcast %"class.blink::ListedElement.base"* %79 to %"class.blink::ListedElement"*
  call void @_ZN5blink13ListedElement22NotifyFormStateChangedEv(%"class.blink::ListedElement"* %80) #11
  %81 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %82 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %82, i64 0, i32 2, i32 0, i32 0
  %84 = load %"class.blink::Document"*, %"class.blink::Document"** %83, align 8
  %85 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %84) #11
  %86 = call zeroext i1 @_ZN5blink10LocalFrame26HasTransientUserActivationEPS0_(%"class.blink::LocalFrame"* %85) #11
  br i1 %86, label %87, label %103

87:                                               ; preds = %69
  %88 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %81, align 8
  %89 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %88, i64 0, i32 2, i32 0, i32 0
  %90 = load %"class.blink::Document"*, %"class.blink::Document"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %90, i64 0, i32 5, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = add i32 %92, -2
  %94 = icmp ult i32 %93, 18
  br i1 %94, label %95, label %103

95:                                               ; preds = %87
  %96 = call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %90) #11
  %97 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %96, i64 0, i32 7, i32 0, i32 0
  %98 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %97, align 8
  %99 = bitcast %"class.blink::ChromeClient"* %98 to void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)***
  %100 = load void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)** %100, i64 90
  %102 = load void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)** %101, align 8
  call void %102(%"class.blink::ChromeClient"* %98, %"class.blink::HTMLFormControlElement"* dereferenceable(200) %20) #11
  br label %103

103:                                              ; preds = %95, %87, %69
  %104 = icmp eq i8* %19, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %103
  %106 = load i8, i8* %19, align 1
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %105
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %19, i8* %18, i64 %17) #11
  br label %109

109:                                              ; preds = %103, %105, %108
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17HTMLSelectElement14SuggestedValueEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLOptionElement"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %4) #11
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  br label %12

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #11
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi %"class.WTF::StringImpl"* [ %11, %9 ], [ %7, %6 ]
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement17SetSuggestedValueERKN3WTF6StringE(%"class.blink::HTMLSelectElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::OptionListIterator", align 8
  %4 = alloca %"class.blink::OptionListIterator", align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 8
  %10 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %10, align 8
  %12 = icmp eq %"class.blink::HTMLOptionElement"* %11, null
  br i1 %12, label %109, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::Member.1836"* %9 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #11
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %21 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %20, align 8
  %22 = bitcast %"class.blink::SelectType"* %21 to void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)***
  %23 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)**, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %23, i64 7
  %25 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %24, align 8
  tail call void %25(%"class.blink::SelectType"* %21, %"class.blink::HTMLOptionElement"* null) #11
  br label %109

26:                                               ; preds = %2
  %27 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 1
  %29 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  %30 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29)
  %31 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %32, align 8
  %33 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %33, label %34, label %37

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29)
  store %"class.blink::HTMLSelectElement"* null, %"class.blink::HTMLSelectElement"** %35, align 8
  %36 = bitcast %"class.blink::HTMLOptionElement"** %28 to i8**
  store i8* null, i8** %36, align 8
  br label %91

37:                                               ; preds = %26
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %3, %"class.blink::HTMLOptionElement"* null) #11
  %38 = bitcast %"class.blink::OptionListIterator"* %3 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29)
  %41 = bitcast %"class.blink::OptionListIterator"* %4 to i64*
  store i64 %39, i64* %41, align 8
  store %"class.blink::HTMLOptionElement"* %40, %"class.blink::HTMLOptionElement"** %28, align 8
  %42 = icmp eq %"class.blink::HTMLOptionElement"* %40, null
  br i1 %42, label %91, label %43

43:                                               ; preds = %37, %86
  %44 = phi %"class.blink::HTMLOptionElement"* [ %87, %86 ], [ %40, %37 ]
  %45 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %44) #11
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %47 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"* %46) #11
  %48 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #11
  br label %62

62:                                               ; preds = %43, %58, %61
  br i1 %47, label %63, label %83

63:                                               ; preds = %62
  %64 = bitcast %"class.blink::HTMLOptionElement"* %44 to i8*
  %65 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 8
  %66 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %66, align 8
  %68 = icmp eq %"class.blink::HTMLOptionElement"* %67, %44
  br i1 %68, label %89, label %69

69:                                               ; preds = %63
  %70 = ptrtoint %"class.blink::HTMLOptionElement"* %44 to i64
  %71 = bitcast %"class.blink::Member.1836"* %65 to i64*
  store atomic i64 %70, i64* %71 monotonic, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %69
  %75 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %64) #11
  br label %76

76:                                               ; preds = %74, %69
  %77 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %78 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %77, align 8
  %79 = bitcast %"class.blink::SelectType"* %78 to void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)***
  %80 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)**, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %80, i64 7
  %82 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %81, align 8
  call void %82(%"class.blink::SelectType"* %78, %"class.blink::HTMLOptionElement"* nonnull %44) #11
  br label %89

83:                                               ; preds = %62
  %84 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %28, align 8
  %85 = icmp eq %"class.blink::HTMLOptionElement"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %83
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %4, %"class.blink::HTMLOptionElement"* nonnull %84) #11
  %87 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %28, align 8
  %88 = icmp eq %"class.blink::HTMLOptionElement"* %87, null
  br i1 %88, label %91, label %43

89:                                               ; preds = %63, %76
  %90 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 12
  store i8 1, i8* %90, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #11
  br label %109

91:                                               ; preds = %83, %86, %34, %37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #11
  %92 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 8
  %93 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %92, i64 0, i32 0, i32 0
  %94 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %93, align 8
  %95 = icmp eq %"class.blink::HTMLOptionElement"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %91
  %97 = bitcast %"class.blink::Member.1836"* %92 to i64*
  store atomic i64 0, i64* %97 monotonic, align 8
  %98 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %96
  %101 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #11
  br label %102

102:                                              ; preds = %100, %96
  %103 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %104 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %103, align 8
  %105 = bitcast %"class.blink::SelectType"* %104 to void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)***
  %106 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)**, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %106, i64 7
  %108 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %107, align 8
  call void %108(%"class.blink::SelectType"* %104, %"class.blink::HTMLOptionElement"* null) #11
  br label %109

109:                                              ; preds = %102, %91, %89, %19, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLSelectElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLSelectElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAlignAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"* %10, %"class.blink::QualifiedName"* dereferenceable(8) %1) #11
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i1 [ %11, %9 ], [ false, %2 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLSelectElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kSizeAttrE, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %10 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %9
  br i1 %10, label %11, label %76

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* dereferenceable(8) %16, i32* dereferenceable(4) %12) #11
  br i1 %17, label %19, label %18

18:                                               ; preds = %11
  store i32 0, i32* %12, align 8
  br label %19

19:                                               ; preds = %18, %11
  %20 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = bitcast %"class.blink::ListedElement.base"* %20 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %21) #11
  %22 = load i32, i32* %12, align 8
  %23 = icmp eq i32 %22, %13
  br i1 %23, label %91, label %24

24:                                               ; preds = %19
  tail call void @_ZN5blink17HTMLSelectElement15ChangeRenderingEv(%"class.blink::HTMLSelectElement"* %0)
  %25 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %25) #11
  %27 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %26, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %24
  %31 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %32 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %31, i64 0, i32 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %56, %30
  %34 = phi %"class.blink::Node"* [ %28, %30 ], [ %57, %56 ]
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 48
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 5, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  br label %54

42:                                               ; preds = %33
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 1, i32 2
  %45 = bitcast %"class.blink::Member.318"* %44 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %48, %50
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 5, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8
  br i1 %51, label %56, label %54

54:                                               ; preds = %42, %39
  %55 = phi %"class.blink::Node"* [ %41, %39 ], [ %53, %42 ]
  tail call void @_ZN5blink4Node6removeEv(%"class.blink::Node"* nonnull %34) #11
  br label %56

56:                                               ; preds = %54, %42
  %57 = phi %"class.blink::Node"* [ %53, %42 ], [ %55, %54 ]
  %58 = icmp eq %"class.blink::Node"* %57, null
  br i1 %58, label %59, label %33

59:                                               ; preds = %56, %24
  %60 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %61 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %60, align 8
  %62 = bitcast %"class.blink::SelectType"* %61 to void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)***
  %63 = load void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)**, void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)*, void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)** %63, i64 23
  %65 = load void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)*, void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)** %64, align 8
  tail call void %65(%"class.blink::SelectType"* %61, %"class.blink::ShadowRoot"* dereferenceable(208) %26) #11
  tail call void @_ZN5blink17HTMLSelectElement23ResetToDefaultSelectionENS0_11ResetReasonE(%"class.blink::HTMLSelectElement"* %0, i32 1)
  %66 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %60, align 8
  %67 = bitcast %"class.blink::SelectType"* %66 to void (%"class.blink::SelectType"*)***
  %68 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %68, i64 10
  %70 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %69, align 8
  tail call void %70(%"class.blink::SelectType"* %66) #11
  %71 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %60, align 8
  %72 = bitcast %"class.blink::SelectType"* %71 to void (%"class.blink::SelectType"*)***
  %73 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %73, i64 19
  %75 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %74, align 8
  tail call void %75(%"class.blink::SelectType"* %71) #11
  br label %91

76:                                               ; preds = %2
  %77 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kMultipleAttrE, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %77, i64 0, i32 0, i32 0
  %79 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %80 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %79
  br i1 %80, label %81, label %84

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %83 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %82, align 8
  tail call void @_ZN5blink17HTMLSelectElement22ParseMultipleAttributeERKN3WTF12AtomicStringE(%"class.blink::HTMLSelectElement"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %83)
  br label %91

84:                                               ; preds = %76
  %85 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAccesskeyAttrE, align 8
  %86 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %86, align 8
  %88 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %84
  %90 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZN5blink22HTMLFormControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFormControlElement"* %90, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #11
  br label %91

91:                                               ; preds = %59, %19, %81, %84, %89
  ret void
}

declare zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement15ChangeRenderingEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.blink::Member.1840", %"class.blink::Member.1840"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %3, align 8
  %5 = bitcast %"class.blink::SelectType"* %4 to void (%"class.blink::SelectType"*)***
  %6 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %6, i64 5
  %8 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %7, align 8
  tail call void %8(%"class.blink::SelectType"* %4) #11
  %9 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 9
  %10 = load i8, i8* %9, align 8, !range !3
  %11 = icmp ne i8 %10, 0
  %12 = tail call dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() #11
  %13 = bitcast %"class.blink::LayoutTheme"* %12 to i1 (%"class.blink::LayoutTheme"*)***
  %14 = load i1 (%"class.blink::LayoutTheme"*)**, i1 (%"class.blink::LayoutTheme"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::LayoutTheme"*)*, i1 (%"class.blink::LayoutTheme"*)** %14, i64 25
  %16 = load i1 (%"class.blink::LayoutTheme"*)*, i1 (%"class.blink::LayoutTheme"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::LayoutTheme"* %12) #11
  br i1 %17, label %18, label %19

18:                                               ; preds = %1
  store i8 1, i8* %9, align 8
  br i1 %11, label %40, label %30

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 10
  %21 = load i8, i8* %20, align 1, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  store i8 0, i8* %9, align 8
  br i1 %11, label %30, label %40

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 5
  %26 = load i32, i32* %25, align 8
  %27 = icmp ult i32 %26, 2
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %9, align 8
  %29 = xor i1 %11, %27
  br i1 %29, label %30, label %40

30:                                               ; preds = %18, %23, %24
  %31 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %3, align 8
  tail call void @_ZN5blink10SelectType15WillBeDestroyedEv(%"class.blink::SelectType"* %31) #11
  %32 = tail call %"class.blink::SelectType"* @_ZN5blink10SelectType6CreateERNS_17HTMLSelectElementE(%"class.blink::HTMLSelectElement"* dereferenceable(352) %0) #11
  %33 = ptrtoint %"class.blink::SelectType"* %32 to i64
  %34 = bitcast %"class.blink::Member.1840"* %2 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.blink::SelectType"* %32 to i8*
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #11
  br label %40

40:                                               ; preds = %18, %23, %37, %30, %24
  %41 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %41) #11
  br i1 %42, label %43, label %50

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %45 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %47, i64 0, i32 59, i32 0, i32 0
  %49 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %48, align 8
  tail call void @_ZN5blink11StyleEngine28ChangeRenderingForHTMLSelectERNS_17HTMLSelectElementE(%"class.blink::StyleEngine"* %49, %"class.blink::HTMLSelectElement"* dereferenceable(352) %0) #11
  br label %50

50:                                               ; preds = %40, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement25UpdateUserAgentShadowTreeERNS_10ShadowRootE(%"class.blink::HTMLSelectElement"* nocapture readonly, %"class.blink::ShadowRoot"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %35, label %6

6:                                                ; preds = %2
  %7 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %7, i64 0, i32 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %6, %32
  %10 = phi %"class.blink::Node"* [ %4, %6 ], [ %33, %32 ]
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 48
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 5, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  br label %30

18:                                               ; preds = %9
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %21 = bitcast %"class.blink::Member.318"* %20 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 5, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  br i1 %27, label %32, label %30

30:                                               ; preds = %15, %18
  %31 = phi %"class.blink::Node"* [ %17, %15 ], [ %29, %18 ]
  tail call void @_ZN5blink4Node6removeEv(%"class.blink::Node"* nonnull %10) #11
  br label %32

32:                                               ; preds = %18, %30
  %33 = phi %"class.blink::Node"* [ %29, %18 ], [ %31, %30 ]
  %34 = icmp eq %"class.blink::Node"* %33, null
  br i1 %34, label %35, label %9

35:                                               ; preds = %32, %2
  %36 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %37 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %36, align 8
  %38 = bitcast %"class.blink::SelectType"* %37 to void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)***
  %39 = load void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)**, void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)*, void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)** %39, i64 23
  %41 = load void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)*, void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)** %40, align 8
  tail call void %41(%"class.blink::SelectType"* %37, %"class.blink::ShadowRoot"* dereferenceable(208) %1) #11
  ret void
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement23ResetToDefaultSelectionENS0_11ResetReasonE(%"class.blink::HTMLSelectElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::OptionListIterator", align 8
  %4 = alloca %"class.blink::OptionListIterator", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 10
  %6 = load i8, i8* %5, align 1, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %100

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 1
  %11 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  %12 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11)
  %13 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %14, align 8
  %15 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11)
  store %"class.blink::HTMLSelectElement"* null, %"class.blink::HTMLSelectElement"** %17, align 8
  %18 = bitcast %"class.blink::HTMLOptionElement"** %10 to i8**
  store i8* null, i8** %18, align 8
  br label %57

19:                                               ; preds = %8
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %3, %"class.blink::HTMLOptionElement"* null) #11
  %20 = bitcast %"class.blink::OptionListIterator"* %3 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11)
  %23 = bitcast %"class.blink::OptionListIterator"* %4 to i64*
  store i64 %21, i64* %23, align 8
  store %"class.blink::HTMLOptionElement"* %22, %"class.blink::HTMLOptionElement"** %10, align 8
  %24 = icmp eq %"class.blink::HTMLOptionElement"* %22, null
  br i1 %24, label %57, label %25

25:                                               ; preds = %19
  %26 = icmp ne i32 %1, 0
  br label %27

27:                                               ; preds = %25, %54
  %28 = phi %"class.blink::HTMLOptionElement"* [ null, %25 ], [ %51, %54 ]
  %29 = phi i8* [ null, %25 ], [ %50, %54 ]
  %30 = phi i8 [ 0, %25 ], [ %42, %54 ]
  %31 = phi %"class.blink::HTMLOptionElement"* [ null, %25 ], [ %41, %54 ]
  %32 = phi i8* [ null, %25 ], [ %40, %54 ]
  %33 = phi %"class.blink::HTMLOptionElement"* [ %22, %25 ], [ %55, %54 ]
  %34 = bitcast %"class.blink::HTMLOptionElement"* %33 to i8*
  %35 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %33) #11
  br i1 %35, label %36, label %39

36:                                               ; preds = %27
  %37 = icmp eq %"class.blink::HTMLOptionElement"* %31, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %36
  call void @_ZN5blink17HTMLOptionElement16SetSelectedStateEb(%"class.blink::HTMLOptionElement"* nonnull %31, i1 zeroext false) #11
  br label %39

39:                                               ; preds = %38, %36, %27
  %40 = phi i8* [ %32, %27 ], [ %34, %36 ], [ %34, %38 ]
  %41 = phi %"class.blink::HTMLOptionElement"* [ %31, %27 ], [ %33, %36 ], [ %33, %38 ]
  %42 = phi i8 [ %30, %27 ], [ %30, %36 ], [ 1, %38 ]
  %43 = icmp eq %"class.blink::HTMLOptionElement"* %28, null
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = call zeroext i1 @_ZNK5blink17HTMLOptionElement21IsDisabledFormControlEv(%"class.blink::HTMLOptionElement"* nonnull %33) #11
  %46 = or i1 %45, %26
  %47 = select i1 %45, i8* null, i8* %34
  %48 = select i1 %45, %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"* %33
  br i1 %46, label %49, label %58

49:                                               ; preds = %44, %39
  %50 = phi i8* [ %29, %39 ], [ %47, %44 ]
  %51 = phi %"class.blink::HTMLOptionElement"* [ %28, %39 ], [ %48, %44 ]
  %52 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %10, align 8
  %53 = icmp eq %"class.blink::HTMLOptionElement"* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %49
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %4, %"class.blink::HTMLOptionElement"* nonnull %52) #11
  %55 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %10, align 8
  %56 = icmp eq %"class.blink::HTMLOptionElement"* %55, null
  br i1 %56, label %60, label %27

57:                                               ; preds = %19, %16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  br label %64

58:                                               ; preds = %44
  %59 = bitcast %"class.blink::HTMLOptionElement"* %33 to i8*
  br label %60

60:                                               ; preds = %54, %49, %58
  %61 = phi i8* [ %59, %58 ], [ %50, %49 ], [ %50, %54 ]
  %62 = phi %"class.blink::HTMLOptionElement"* [ %33, %58 ], [ %51, %49 ], [ %51, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  %63 = icmp eq %"class.blink::HTMLOptionElement"* %41, null
  br i1 %63, label %64, label %79

64:                                               ; preds = %57, %60
  %65 = phi %"class.blink::HTMLOptionElement"* [ null, %57 ], [ %62, %60 ]
  %66 = phi i8* [ null, %57 ], [ %61, %60 ]
  %67 = phi i8 [ 0, %57 ], [ %42, %60 ]
  %68 = phi i8* [ null, %57 ], [ %40, %60 ]
  %69 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 5
  %70 = load i32, i32* %69, align 8
  %71 = icmp ult i32 %70, 2
  br i1 %71, label %72, label %79

72:                                               ; preds = %64
  %73 = icmp eq %"class.blink::HTMLOptionElement"* %65, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %72
  %75 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %65) #11
  br i1 %75, label %79, label %76

76:                                               ; preds = %74, %72
  %77 = icmp ne i32 %1, 0
  %78 = zext i1 %77 to i32
  call void @_ZN5blink17HTMLSelectElement12SelectOptionEPNS_17HTMLOptionElementEj(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* %65, i32 %78)
  br label %85

79:                                               ; preds = %60, %74, %64
  %80 = phi i8 [ %42, %60 ], [ %67, %74 ], [ %67, %64 ]
  %81 = phi %"class.blink::HTMLOptionElement"* [ %41, %60 ], [ null, %74 ], [ null, %64 ]
  %82 = phi i8* [ %40, %60 ], [ %68, %74 ], [ %68, %64 ]
  %83 = and i8 %80, 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %76, %79
  %86 = phi i8* [ %66, %76 ], [ %82, %79 ]
  %87 = phi %"class.blink::HTMLOptionElement"* [ %65, %76 ], [ %81, %79 ]
  %88 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %89 = bitcast %"class.blink::ListedElement.base"* %88 to %"class.blink::ListedElement"*
  call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %89) #11
  br label %90

90:                                               ; preds = %79, %85
  %91 = phi i8* [ %82, %79 ], [ %86, %85 ]
  %92 = phi %"class.blink::HTMLOptionElement"* [ %81, %79 ], [ %87, %85 ]
  %93 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 7
  %94 = ptrtoint %"class.blink::HTMLOptionElement"* %92 to i64
  %95 = bitcast %"class.blink::Member.1836"* %93 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %90
  %99 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %91) #11
  br label %100

100:                                              ; preds = %2, %98, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement22ParseMultipleAttributeERKN3WTF12AtomicStringE(%"class.blink::HTMLSelectElement"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::OptionListIterator", align 8
  %4 = alloca %"class.blink::OptionListIterator", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 10
  %6 = load i8, i8* %5, align 1, !range !3
  %7 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 1
  %9 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %11, align 8
  %12 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  %14 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false)
  br label %30

15:                                               ; preds = %2
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %3, %"class.blink::HTMLOptionElement"* null) #11
  %16 = bitcast %"class.blink::OptionListIterator"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  %19 = bitcast %"class.blink::OptionListIterator"* %4 to i64*
  store i64 %17, i64* %19, align 8
  store %"class.blink::HTMLOptionElement"* %18, %"class.blink::HTMLOptionElement"** %8, align 8
  %20 = icmp eq %"class.blink::HTMLOptionElement"* %18, null
  br i1 %20, label %30, label %21

21:                                               ; preds = %15, %27
  %22 = phi %"class.blink::HTMLOptionElement"* [ %28, %27 ], [ %18, %15 ]
  %23 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %22) #11
  br i1 %23, label %30, label %24

24:                                               ; preds = %21
  %25 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %8, align 8
  %26 = icmp eq %"class.blink::HTMLOptionElement"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %4, %"class.blink::HTMLOptionElement"* nonnull %25) #11
  %28 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %8, align 8
  %29 = icmp eq %"class.blink::HTMLOptionElement"* %28, null
  br i1 %29, label %30, label %21

30:                                               ; preds = %24, %27, %21, %13, %15
  %31 = phi %"class.blink::HTMLOptionElement"* [ null, %15 ], [ null, %13 ], [ null, %24 ], [ null, %27 ], [ %22, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp ne %"class.WTF::StringImpl"* %33, null
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %5, align 1
  %36 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.blink::ListedElement.base"* %36 to %"class.blink::ListedElement"*
  call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %37) #11
  call void @_ZN5blink17HTMLSelectElement15ChangeRenderingEv(%"class.blink::HTMLSelectElement"* %0)
  %38 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %38) #11
  %40 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %72, label %43

43:                                               ; preds = %30
  %44 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %45 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %44, i64 0, i32 0, i32 0, i32 0
  br label %46

46:                                               ; preds = %69, %43
  %47 = phi %"class.blink::Node"* [ %41, %43 ], [ %70, %69 ]
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 48
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 0, i32 5, i32 0, i32 0
  %54 = load %"class.blink::Node"*, %"class.blink::Node"** %53, align 8
  br label %67

55:                                               ; preds = %46
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 1, i32 2
  %58 = bitcast %"class.blink::Member.318"* %57 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %61, %63
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 0, i32 5, i32 0, i32 0
  %66 = load %"class.blink::Node"*, %"class.blink::Node"** %65, align 8
  br i1 %64, label %69, label %67

67:                                               ; preds = %55, %52
  %68 = phi %"class.blink::Node"* [ %54, %52 ], [ %66, %55 ]
  call void @_ZN5blink4Node6removeEv(%"class.blink::Node"* nonnull %47) #11
  br label %69

69:                                               ; preds = %67, %55
  %70 = phi %"class.blink::Node"* [ %66, %55 ], [ %68, %67 ]
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %72, label %46

72:                                               ; preds = %69, %30
  %73 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %74 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %73, align 8
  %75 = bitcast %"class.blink::SelectType"* %74 to void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)***
  %76 = load void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)**, void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)*, void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)** %76, i64 23
  %78 = load void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)*, void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)** %77, align 8
  call void %78(%"class.blink::SelectType"* %74, %"class.blink::ShadowRoot"* dereferenceable(208) %39) #11
  %79 = load i8, i8* %5, align 1, !range !3
  %80 = icmp eq i8 %6, %79
  br i1 %80, label %85, label %81

81:                                               ; preds = %72
  %82 = icmp eq %"class.blink::HTMLOptionElement"* %31, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %81
  call void @_ZN5blink17HTMLSelectElement12SelectOptionEPNS_17HTMLOptionElementEj(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* nonnull %31, i32 1)
  br label %85

84:                                               ; preds = %81
  call void @_ZN5blink17HTMLSelectElement23ResetToDefaultSelectionENS0_11ResetReasonE(%"class.blink::HTMLSelectElement"* %0, i32 1)
  br label %85

85:                                               ; preds = %72, %83, %84
  %86 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %73, align 8
  %87 = bitcast %"class.blink::SelectType"* %86 to void (%"class.blink::SelectType"*)***
  %88 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %88, i64 10
  %90 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %89, align 8
  call void %90(%"class.blink::SelectType"* %86) #11
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFormControlElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLSelectElement25MayTriggerVirtualKeyboardEv(%"class.blink::HTMLSelectElement"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLSelectElement25ShouldHaveFocusAppearanceEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %2, align 8
  %4 = bitcast %"class.blink::SelectType"* %3 to i1 (%"class.blink::SelectType"*)***
  %5 = load i1 (%"class.blink::SelectType"*)**, i1 (%"class.blink::SelectType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::SelectType"*)*, i1 (%"class.blink::SelectType"*)** %5, i64 28
  %7 = load i1 (%"class.blink::SelectType"*)*, i1 (%"class.blink::SelectType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::SelectType"* %3) #11
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %11 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement25ShouldHaveFocusAppearanceEv(%"class.blink::HTMLFormControlElement"* %10) #11
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i1 [ %11, %9 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLSelectElement14PopupIsVisibleEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %2, align 8
  %4 = bitcast %"class.blink::SelectType"* %3 to i1 (%"class.blink::SelectType"*)***
  %5 = load i1 (%"class.blink::SelectType"*)**, i1 (%"class.blink::SelectType"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::SelectType"*)*, i1 (%"class.blink::SelectType"*)** %5, i64 28
  %7 = load i1 (%"class.blink::SelectType"*)*, i1 (%"class.blink::SelectType"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::SelectType"* %3) #11
  ret i1 %8
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement25ShouldHaveFocusAppearanceEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLSelectElement12CanSelectAllEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZN5blink17HTMLSelectElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::HTMLSelectElement"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 9
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %6, label %11, label %8

8:                                                ; preds = %3
  %9 = tail call %"class.blink::LayoutBlock"* @_ZN5blink19LayoutObjectFactory17CreateFlexibleBoxERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64) %7, %"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %2) #11
  %10 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %9, i64 0, i32 0, i32 0, i32 0
  br label %14

11:                                               ; preds = %3
  %12 = tail call %"class.blink::LayoutBlockFlow"* @_ZN5blink19LayoutObjectFactory15CreateBlockFlowERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64) %7, %"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %2) #11
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %14

14:                                               ; preds = %11, %8
  %15 = phi %"class.blink::LayoutObject"* [ %10, %8 ], [ %13, %11 ]
  ret %"class.blink::LayoutObject"* %15
}

declare %"class.blink::LayoutBlock"* @_ZN5blink19LayoutObjectFactory17CreateFlexibleBoxERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64), %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #1

declare %"class.blink::LayoutBlockFlow"* @_ZN5blink19LayoutObjectFactory15CreateBlockFlowERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64), %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLCollection"* @_ZN5blink17HTMLSelectElement15selectedOptionsEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink13ContainerNode15EnsureNodeListsEv(%"class.blink::ContainerNode"* %2) #11
  %4 = tail call %"class.blink::HTMLCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_14HTMLCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::NodeListsNodeData"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %2, i32 14) #11
  ret %"class.blink::HTMLCollection"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement28OptionElementChildrenChangedERKNS_17HTMLOptionElementE(%"class.blink::HTMLSelectElement"*, %"class.blink::HTMLOptionElement"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.blink::ListedElement.base"* %3 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %4) #11
  %5 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* %1) #11
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %8 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %7, align 8
  %9 = bitcast %"class.blink::SelectType"* %8 to void (%"class.blink::SelectType"*)***
  %10 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %10, i64 10
  %12 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %11, align 8
  tail call void %12(%"class.blink::SelectType"* %8) #11
  br label %13

13:                                               ; preds = %6, %2
  %14 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %18, label %24, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.blink::NodeData"** %19 to %"class.blink::NodeRareData"**
  %22 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %22, i64 0, i32 1, i32 0, i32 0
  br label %26

24:                                               ; preds = %13
  %25 = bitcast %"class.blink::NodeData"** %19 to %"class.blink::NodeRenderingData"**
  br label %26

26:                                               ; preds = %20, %24
  %27 = phi %"class.blink::NodeRenderingData"** [ %23, %20 ], [ %25, %24 ]
  %28 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %28, i64 0, i32 1
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %29, align 8
  %31 = icmp eq %"class.blink::LayoutObject"* %30, null
  br i1 %31, label %67, label %32

32:                                               ; preds = %26
  br i1 %18, label %37, label %33

33:                                               ; preds = %32
  %34 = bitcast %"class.blink::NodeData"** %19 to %"class.blink::NodeRareData"**
  %35 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %35, i64 0, i32 1, i32 0, i32 0
  br label %39

37:                                               ; preds = %32
  %38 = bitcast %"class.blink::NodeData"** %19 to %"class.blink::NodeRenderingData"**
  br label %39

39:                                               ; preds = %33, %37
  %40 = phi %"class.blink::NodeRenderingData"** [ %36, %33 ], [ %38, %37 ]
  %41 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %41, i64 0, i32 1
  %43 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %43, i64 0, i32 6, i32 0, i32 0
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %46 = icmp eq %"class.blink::Node"* %45, null
  br i1 %46, label %47, label %54

47:                                               ; preds = %39, %47
  %48 = phi %"class.blink::LayoutObject"* [ %50, %47 ], [ %43, %39 ]
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %48, i64 0, i32 7
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 0, i32 6, i32 0, i32 0
  %52 = load %"class.blink::Node"*, %"class.blink::Node"** %51, align 8
  %53 = icmp eq %"class.blink::Node"* %52, null
  br i1 %53, label %47, label %54

54:                                               ; preds = %47, %39
  %55 = phi %"class.blink::Node"* [ %45, %39 ], [ %52, %47 ]
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %55, i64 0, i32 3, i32 0, i32 0
  %57 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %57, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.blink::Document"*, %"class.blink::Document"** %58, align 8
  %60 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %59) #11
  %61 = icmp eq %"class.blink::AXObjectCache"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %54
  %63 = bitcast %"class.blink::AXObjectCache"* %60 to void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)***
  %64 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %64, i64 11
  %66 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %65, align 8
  tail call void %66(%"class.blink::AXObjectCache"* nonnull %60, %"class.blink::Node"* %14) #11
  br label %67

67:                                               ; preds = %62, %54, %26
  ret void
}

declare %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLSelectElement"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element5focusEv(%"class.blink::Element"* %3) #11
  %4 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"* %4, %"class.blink::Event"* null, i32 %1) #11
  ret void
}

declare void @_ZN5blink7Element5focusEv(%"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"*, %"class.blink::Event"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink17HTMLSelectElement9namedItemERKN3WTF12AtomicStringE(%"class.blink::HTMLSelectElement"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink13ContainerNode15EnsureNodeListsEv(%"class.blink::ContainerNode"* %3) #11
  %5 = tail call %"class.blink::HTMLOptionsCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_21HTMLOptionsCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::NodeListsNodeData"* %4, %"class.blink::ContainerNode"* dereferenceable(80) %3, i32 13) #11
  %6 = getelementptr inbounds %"class.blink::HTMLOptionsCollection", %"class.blink::HTMLOptionsCollection"* %5, i64 0, i32 0
  %7 = tail call %"class.blink::Element"* @_ZNK5blink14HTMLCollection9namedItemERKN3WTF12AtomicStringE(%"class.blink::HTMLCollection"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %1) #11
  ret %"class.blink::Element"* %7
}

declare %"class.blink::Element"* @_ZNK5blink14HTMLCollection9namedItemERKN3WTF12AtomicStringE(%"class.blink::HTMLCollection"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement9SetOptionEjPNS_17HTMLOptionElementERNS_14ExceptionStateE(%"class.blink::HTMLSelectElement"*, i32, %"class.blink::HTMLOptionElement"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::OptionListIterator", align 8
  %6 = alloca %"class.blink::OptionListIterator", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = ptrtoint %"class.blink::HTMLOptionElement"* %2 to i64
  %9 = bitcast %"class.blink::OptionListIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %6, i64 0, i32 1
  %11 = bitcast %"class.blink::OptionListIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %5, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %5, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %13, align 8
  %14 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %16 = bitcast %"class.blink::OptionListIterator"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false)
  br label %29

17:                                               ; preds = %4
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %5, %"class.blink::HTMLOptionElement"* null) #11
  %18 = bitcast %"class.blink::OptionListIterator"* %5 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %21 = bitcast %"class.blink::OptionListIterator"* %6 to i64*
  store i64 %19, i64* %21, align 8
  store %"class.blink::HTMLOptionElement"* %20, %"class.blink::HTMLOptionElement"** %10, align 8
  %22 = icmp eq %"class.blink::HTMLOptionElement"* %20, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %17, %23
  %24 = phi i32 [ %26, %23 ], [ 0, %17 ]
  %25 = phi %"class.blink::HTMLOptionElement"* [ %27, %23 ], [ %20, %17 ]
  %26 = add i32 %24, 1
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %6, %"class.blink::HTMLOptionElement"* nonnull %25) #11
  %27 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %10, align 8
  %28 = icmp eq %"class.blink::HTMLOptionElement"* %27, null
  br i1 %28, label %29, label %23

29:                                               ; preds = %23, %15, %17
  %30 = phi i32 [ 0, %17 ], [ 0, %15 ], [ %26, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  %31 = sub i32 %1, %30
  %32 = icmp ugt i32 %1, 2147483646
  br i1 %32, label %44, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %35 = load i8, i8* %34, align 2, !range !3
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %38

38:                                               ; preds = %33, %37
  %39 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %31, 1
  %42 = add i32 %41, %40
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %44, label %75

44:                                               ; preds = %38, %29
  %45 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %46, i64 0, i32 2, i32 0, i32 0
  %48 = load %"class.blink::Document"*, %"class.blink::Document"** %47, align 8
  %49 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  %50 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.1, i64 0, i64 0), i32 %1, i32 2147483647) #11
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %51, align 8
  %52 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #11
  %53 = bitcast i8* %52 to %"class.blink::ConsoleMessage"*
  %54 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #11
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %53, i32 1, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.blink::SourceLocation"* %54) #11
  %55 = getelementptr inbounds i8, i8* %52, i64 -4
  %56 = bitcast i8* %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = or i16 %57, 1
  store atomic i16 %58, i16* %56 release, align 2
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %48, %"class.blink::ConsoleMessage"* %53, i1 zeroext false) #11
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %44
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #11
  br label %74

74:                                               ; preds = %44, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br label %136

75:                                               ; preds = %38
  %76 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 32) #11
  %77 = bitcast i8* %76 to %"class.blink::V8UnionHTMLOptGroupElementOrHTMLOptionElement"*
  %78 = bitcast i8* %76 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink45V8UnionHTMLOptGroupElementOrHTMLOptionElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8
  %79 = getelementptr inbounds i8, i8* %76, i64 8
  %80 = bitcast i8* %79 to i32*
  store i32 1, i32* %80, align 8
  %81 = getelementptr inbounds i8, i8* %76, i64 16
  %82 = bitcast i8* %81 to %"class.blink::HTMLOptGroupElement"**
  store %"class.blink::HTMLOptGroupElement"* null, %"class.blink::HTMLOptGroupElement"** %82, align 8
  %83 = getelementptr inbounds i8, i8* %76, i64 24
  %84 = bitcast i8* %83 to i64*
  store i64 %8, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %76, i64 -4
  %86 = bitcast i8* %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = or i16 %87, 1
  store atomic i16 %88, i16* %86 release, align 2
  %89 = icmp sgt i32 %31, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %75
  call void @_ZN5blink17HTMLSelectElement9setLengthEjRNS_14ExceptionStateE(%"class.blink::HTMLSelectElement"* %0, i32 %1, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %91 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %119, label %136

94:                                               ; preds = %75
  %95 = icmp slt i32 %31, 0
  br i1 %95, label %96, label %119

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink13ContainerNode15EnsureNodeListsEv(%"class.blink::ContainerNode"* %97) #11
  %99 = call %"class.blink::HTMLOptionsCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_21HTMLOptionsCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::NodeListsNodeData"* %98, %"class.blink::ContainerNode"* dereferenceable(80) %97, i32 13) #11
  %100 = add nuw nsw i32 %1, 1
  %101 = getelementptr inbounds %"class.blink::HTMLOptionsCollection", %"class.blink::HTMLOptionsCollection"* %99, i64 0, i32 0
  %102 = call %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"* %101, i32 %100) #11
  %103 = icmp eq %"class.blink::Element"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %96
  %105 = ptrtoint %"class.blink::Element"* %102 to i64
  %106 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 32) #11
  %107 = bitcast i8* %106 to %"class.blink::V8UnionHTMLElementOrLong"*
  %108 = bitcast i8* %106 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink24V8UnionHTMLElementOrLongE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %108, align 8
  %109 = getelementptr inbounds i8, i8* %106, i64 8
  %110 = bitcast i8* %109 to i32*
  store i32 0, i32* %110, align 8
  %111 = getelementptr inbounds i8, i8* %106, i64 16
  %112 = bitcast i8* %111 to i64*
  store i64 %105, i64* %112, align 8
  %113 = getelementptr inbounds i8, i8* %106, i64 -4
  %114 = bitcast i8* %113 to i16*
  %115 = load atomic i16, i16* %114 monotonic, align 2
  %116 = or i16 %115, 1
  store atomic i16 %116, i16* %114 release, align 2
  br label %117

117:                                              ; preds = %96, %104
  %118 = phi %"class.blink::V8UnionHTMLElementOrLong"* [ %107, %104 ], [ null, %96 ]
  call void @_ZN5blink17HTMLSelectElement6removeEi(%"class.blink::HTMLSelectElement"* %0, i32 %1)
  br label %119

119:                                              ; preds = %90, %94, %117
  %120 = phi %"class.blink::V8UnionHTMLElementOrLong"* [ null, %90 ], [ %118, %117 ], [ null, %94 ]
  %121 = call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #11
  call void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %121) #11
  call void @_ZN5blink17HTMLSelectElement3addEPKNS_45V8UnionHTMLOptGroupElementOrHTMLOptionElementEPKNS_24V8UnionHTMLElementOrLongERNS_14ExceptionStateE(%"class.blink::HTMLSelectElement"* %0, %"class.blink::V8UnionHTMLOptGroupElementOrHTMLOptionElement"* %77, %"class.blink::V8UnionHTMLElementOrLong"* %120, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %122 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %123 = load i32, i32* %122, align 8
  %124 = icmp eq i32 %123, 0
  %125 = icmp sgt i32 %31, -1
  %126 = and i1 %125, %124
  br i1 %126, label %127, label %134

127:                                              ; preds = %119
  %128 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* %2) #11
  br i1 %128, label %129, label %134

129:                                              ; preds = %127
  %130 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 10
  %131 = load i8, i8* %130, align 1, !range !3
  %132 = xor i8 %131, 1
  %133 = zext i8 %132 to i32
  call void @_ZN5blink17HTMLSelectElement12SelectOptionEPNS_17HTMLOptionElementEj(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* %2, i32 %133) #11
  br label %134

134:                                              ; preds = %119, %127, %129
  %135 = call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #11
  call void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %135) #11
  br label %136

136:                                              ; preds = %90, %134, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17HTMLSelectElement6lengthEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::OptionListIterator", align 8
  %3 = alloca %"class.blink::OptionListIterator", align 8
  %4 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 1
  %6 = bitcast %"class.blink::OptionListIterator"* %2 to i8*
  %7 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6)
  %8 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %2, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %2, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %9, align 8
  %10 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6)
  store %"class.blink::HTMLSelectElement"* null, %"class.blink::HTMLSelectElement"** %12, align 8
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %5, align 8
  br label %19

13:                                               ; preds = %1
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %2, %"class.blink::HTMLOptionElement"* null) #11
  %14 = bitcast %"class.blink::OptionListIterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6)
  %17 = bitcast %"class.blink::OptionListIterator"* %3 to i64*
  store i64 %15, i64* %17, align 8
  store %"class.blink::HTMLOptionElement"* %16, %"class.blink::HTMLOptionElement"** %5, align 8
  %18 = icmp eq %"class.blink::HTMLOptionElement"* %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %21, %11, %13
  %20 = phi i32 [ 0, %13 ], [ 0, %11 ], [ %24, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret i32 %20

21:                                               ; preds = %13, %21
  %22 = phi i32 [ %24, %21 ], [ 0, %13 ]
  %23 = phi %"class.blink::HTMLOptionElement"* [ %25, %21 ], [ %16, %13 ]
  %24 = add i32 %22, 1
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %3, %"class.blink::HTMLOptionElement"* nonnull %23) #11
  %25 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %5, align 8
  %26 = icmp eq %"class.blink::HTMLOptionElement"* %25, null
  br i1 %26, label %19, label %21
}

declare void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement9setLengthEjRNS_14ExceptionStateE(%"class.blink::HTMLSelectElement"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::OptionListIterator", align 8
  %5 = alloca %"class.blink::OptionListIterator", align 8
  %6 = alloca %"class.blink::OptionListIterator", align 8
  %7 = alloca %"class.blink::OptionListIterator", align 8
  %8 = alloca %"class.blink::OptionListIterator", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::HeapVector.2958", align 8
  %11 = alloca %"class.blink::OptionListIterator", align 8
  %12 = alloca %"class.blink::HTMLOptionElement"*, align 8
  %13 = icmp slt i32 %1, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %16 = load i8, i8* %15, align 2, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %19

19:                                               ; preds = %14, %18
  %20 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, %1
  %23 = bitcast %"class.blink::OptionListIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %8, i64 0, i32 1
  %25 = bitcast %"class.blink::OptionListIterator"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %7, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %7, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %27, align 8
  %28 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11
  %30 = bitcast %"class.blink::OptionListIterator"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 16, i1 false)
  br label %43

31:                                               ; preds = %19
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %7, %"class.blink::HTMLOptionElement"* null) #11
  %32 = bitcast %"class.blink::OptionListIterator"* %7 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11
  %35 = bitcast %"class.blink::OptionListIterator"* %8 to i64*
  store i64 %33, i64* %35, align 8
  store %"class.blink::HTMLOptionElement"* %34, %"class.blink::HTMLOptionElement"** %24, align 8
  %36 = icmp eq %"class.blink::HTMLOptionElement"* %34, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %31, %37
  %38 = phi i32 [ %40, %37 ], [ 0, %31 ]
  %39 = phi %"class.blink::HTMLOptionElement"* [ %41, %37 ], [ %34, %31 ]
  %40 = add i32 %38, 1
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %8, %"class.blink::HTMLOptionElement"* nonnull %39) #11
  %41 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %24, align 8
  %42 = icmp eq %"class.blink::HTMLOptionElement"* %41, null
  br i1 %42, label %43, label %37

43:                                               ; preds = %37, %29, %31
  %44 = phi i32 [ 0, %31 ], [ 0, %29 ], [ %40, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  %45 = sub i32 %22, %44
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %47, label %78

47:                                               ; preds = %43, %3
  %48 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %49 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %49, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::Document"*, %"class.blink::Document"** %50, align 8
  %52 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  %53 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.2, i64 0, i64 0), i32 %1, i32 2147483647) #11
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  %55 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #11
  %56 = bitcast i8* %55 to %"class.blink::ConsoleMessage"*
  %57 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #11
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %56, i32 1, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::SourceLocation"* %57) #11
  %58 = getelementptr inbounds i8, i8* %55, i64 -4
  %59 = bitcast i8* %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = or i16 %60, 1
  store atomic i16 %61, i16* %59 release, align 2
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %51, %"class.blink::ConsoleMessage"* %56, i1 zeroext false) #11
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %47
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #11
  br label %77

77:                                               ; preds = %47, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  br label %200

78:                                               ; preds = %43
  %79 = bitcast %"class.blink::OptionListIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #11
  %80 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %6, i64 0, i32 1
  %81 = bitcast %"class.blink::OptionListIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #11
  %82 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %5, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %82, align 8
  %83 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %5, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %83, align 8
  br i1 %28, label %84, label %86

84:                                               ; preds = %78
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #11
  %85 = bitcast %"class.blink::OptionListIterator"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 16, i1 false)
  br label %98

86:                                               ; preds = %78
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %5, %"class.blink::HTMLOptionElement"* null) #11
  %87 = bitcast %"class.blink::OptionListIterator"* %5 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #11
  %90 = bitcast %"class.blink::OptionListIterator"* %6 to i64*
  store i64 %88, i64* %90, align 8
  store %"class.blink::HTMLOptionElement"* %89, %"class.blink::HTMLOptionElement"** %80, align 8
  %91 = icmp eq %"class.blink::HTMLOptionElement"* %89, null
  br i1 %91, label %98, label %92

92:                                               ; preds = %86, %92
  %93 = phi i32 [ %95, %92 ], [ 0, %86 ]
  %94 = phi %"class.blink::HTMLOptionElement"* [ %96, %92 ], [ %89, %86 ]
  %95 = add i32 %93, 1
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %6, %"class.blink::HTMLOptionElement"* nonnull %94) #11
  %96 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %80, align 8
  %97 = icmp eq %"class.blink::HTMLOptionElement"* %96, null
  br i1 %97, label %98, label %92

98:                                               ; preds = %92, %84, %86
  %99 = phi i32 [ 0, %86 ], [ 0, %84 ], [ %95, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #11
  %100 = sub i32 %99, %1
  %101 = icmp slt i32 %100, 0
  br i1 %101, label %102, label %119

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %105 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  br label %106

106:                                              ; preds = %102, %116
  %107 = phi i32 [ %117, %116 ], [ %100, %102 ]
  %108 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %104, align 8
  %109 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %108, i64 0, i32 2, i32 0, i32 0
  %110 = load %"class.blink::Document"*, %"class.blink::Document"** %109, align 8
  %111 = call %"class.blink::HTMLOptionElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HTMLOptionElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %110) #11
  %112 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %111, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %103, %"class.blink::Node"* %112, %"class.blink::ExceptionState"* dereferenceable(72) %2) #11
  %114 = load i32, i32* %105, align 8
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %197

116:                                              ; preds = %106
  %117 = add nsw i32 %107, 1
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %197, label %106

119:                                              ; preds = %98
  %120 = bitcast %"class.blink::HeapVector.2958"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #11
  %121 = getelementptr inbounds %"class.blink::HeapVector.2958", %"class.blink::HeapVector.2958"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.blink::HeapVector.2958", %"class.blink::HeapVector.2958"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %123 = getelementptr inbounds %"class.blink::HeapVector.2958", %"class.blink::HeapVector.2958"* %10, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 0, i64 16, i1 false) #11
  %124 = bitcast %"class.blink::OptionListIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #11
  %125 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %11, i64 0, i32 1
  %126 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  %127 = bitcast %"class.blink::OptionListIterator"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126)
  %128 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %128, align 8
  %129 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %129, align 8
  br i1 %28, label %130, label %133

130:                                              ; preds = %119
  %131 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %11, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126)
  store %"class.blink::HTMLSelectElement"* null, %"class.blink::HTMLSelectElement"** %131, align 8
  %132 = bitcast %"class.blink::HTMLOptionElement"** %125 to i8**
  store i8* null, i8** %132, align 8
  br label %143

133:                                              ; preds = %119
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %4, %"class.blink::HTMLOptionElement"* null) #11
  %134 = bitcast %"class.blink::OptionListIterator"* %4 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126)
  %137 = bitcast %"class.blink::OptionListIterator"* %11 to i64*
  store i64 %135, i64* %137, align 8
  store %"class.blink::HTMLOptionElement"* %136, %"class.blink::HTMLOptionElement"** %125, align 8
  %138 = icmp eq %"class.blink::HTMLOptionElement"* %136, null
  br i1 %138, label %143, label %139

139:                                              ; preds = %133
  %140 = bitcast %"class.blink::HTMLOptionElement"** %12 to i8*
  %141 = zext i32 %1 to i64
  %142 = getelementptr inbounds %"class.blink::HeapVector.2958", %"class.blink::HeapVector.2958"* %10, i64 0, i32 0
  br label %149

143:                                              ; preds = %173, %176, %130, %133
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #11
  %144 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %121, align 8
  %145 = load i32, i32* %123, align 4
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %144, i64 %146
  %148 = icmp eq i32 %145, 0
  br i1 %148, label %179, label %180

149:                                              ; preds = %139, %176
  %150 = phi i64 [ 0, %139 ], [ %153, %176 ]
  %151 = phi %"class.blink::HTMLOptionElement"* [ %136, %139 ], [ %177, %176 ]
  %152 = bitcast %"class.blink::HTMLOptionElement"* %151 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #11
  store %"class.blink::HTMLOptionElement"* %151, %"class.blink::HTMLOptionElement"** %12, align 8
  %153 = add i64 %150, 1
  %154 = icmp ult i64 %150, %141
  %155 = ptrtoint %"class.blink::HTMLOptionElement"* %151 to i64
  br i1 %154, label %173, label %156

156:                                              ; preds = %149
  %157 = load i32, i32* %123, align 4
  %158 = load i32, i32* %122, align 8
  %159 = icmp eq i32 %157, %158
  br i1 %159, label %172, label %160, !prof !5

160:                                              ; preds = %156
  %161 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %121, align 8
  %162 = zext i32 %157 to i64
  %163 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %161, i64 %162
  %164 = bitcast %"class.blink::Member.1836"* %163 to i64*
  store atomic i64 %155, i64* %164 monotonic, align 8
  %165 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %160
  %168 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %152) #11
  br label %169

169:                                              ; preds = %167, %160
  %170 = load i32, i32* %123, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %123, align 4
  br label %173

172:                                              ; preds = %156
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKPS3_EEvOT_(%"class.WTF::Vector.2961"* nonnull %142, %"class.blink::HTMLOptionElement"** nonnull dereferenceable(8) %12) #11
  br label %173

173:                                              ; preds = %172, %169, %149
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #11
  %174 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %125, align 8
  %175 = icmp eq %"class.blink::HTMLOptionElement"* %174, null
  br i1 %175, label %143, label %176

176:                                              ; preds = %173
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %11, %"class.blink::HTMLOptionElement"* nonnull %174) #11
  %177 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %125, align 8
  %178 = icmp eq %"class.blink::HTMLOptionElement"* %177, null
  br i1 %178, label %143, label %149

179:                                              ; preds = %194, %143
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #11
  br label %197

180:                                              ; preds = %143, %194
  %181 = phi %"class.blink::Member.1836"* [ %195, %194 ], [ %144, %143 ]
  %182 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %181, i64 0, i32 0, i32 0
  %183 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %183, i64 0, i32 0, i32 0, i32 0, i32 0
  %185 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %184) #11
  %186 = icmp eq %"class.blink::ContainerNode"* %185, null
  br i1 %186, label %194, label %187

187:                                              ; preds = %180
  %188 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %182, align 8
  %189 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %188, i64 0, i32 0, i32 0, i32 0, i32 0
  %190 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %189) #11
  %191 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %182, align 8
  %192 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %191, i64 0, i32 0, i32 0, i32 0, i32 0
  %193 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %190, %"class.blink::Node"* %192, %"class.blink::ExceptionState"* dereferenceable(72) %2) #11
  br label %194

194:                                              ; preds = %180, %187
  %195 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %181, i64 1
  %196 = icmp eq %"class.blink::Member.1836"* %195, %147
  br i1 %196, label %179, label %180

197:                                              ; preds = %106, %116, %179
  %198 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %199 = bitcast %"class.blink::ListedElement.base"* %198 to %"class.blink::ListedElement"*
  call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %199) #11
  br label %200

200:                                              ; preds = %197, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement27OptionSelectionStateChangedEPNS_17HTMLOptionElementEb(%"class.blink::HTMLSelectElement"*, %"class.blink::HTMLOptionElement"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %2, label %4, label %9

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 10
  %6 = load i8, i8* %5, align 1, !range !3
  %7 = xor i8 %6, 1
  %8 = zext i8 %7 to i32
  tail call void @_ZN5blink17HTMLSelectElement12SelectOptionEPNS_17HTMLOptionElementEj(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* %1, i32 %8)
  br label %22

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 9
  %11 = load i8, i8* %10, align 8, !range !3
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 10
  %14 = load i8, i8* %13, align 1, !range !3
  br i1 %12, label %17, label %15

15:                                               ; preds = %9
  %16 = icmp eq i8 %14, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %9, %15
  %18 = phi i8 [ 1, %15 ], [ %14, %9 ]
  %19 = xor i8 %18, 1
  %20 = zext i8 %19 to i32
  tail call void @_ZN5blink17HTMLSelectElement12SelectOptionEPNS_17HTMLOptionElementEj(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* null, i32 %20)
  br label %22

21:                                               ; preds = %15
  tail call void @_ZN5blink17HTMLSelectElement23ResetToDefaultSelectionENS0_11ResetReasonE(%"class.blink::HTMLSelectElement"* %0, i32 1)
  br label %22

22:                                               ; preds = %17, %21, %4
  ret void
}

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLSelectElement21IsRequiredFormControlEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"* %2) #11
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement9SelectAllEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %2, align 8
  %4 = bitcast %"class.blink::SelectType"* %3 to void (%"class.blink::SelectType"*)***
  %5 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %5, i64 18
  %7 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %6, align 8
  tail call void %7(%"class.blink::SelectType"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.blink::HTMLElement"*, align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !4

7:                                                ; preds = %1
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %9 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i64 [ -6148914691236517206, %1 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %7 ]
  %17 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0
  %18 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.1814", %"class.WTF::Vector.1814"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.WTF::Vector.1814"* %17 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = zext i32 %19 to i64
  %24 = shl nuw nsw i64 %23, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %22, i64 %24) #11
  store i32 0, i32* %18, align 4
  %25 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  store i8 0, i8* %25, align 2
  %26 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %53, label %30

30:                                               ; preds = %13, %36
  %31 = phi %"class.blink::Node"* [ %38, %36 ], [ %28, %13 ]
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 12
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 5, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %53, label %30

40:                                               ; preds = %30
  %41 = bitcast %"class.blink::HTMLElement"** %3 to i8*
  %42 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.blink::HTMLElement"** %3 to %"class.blink::Node"**
  %45 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %47 = bitcast %"class.blink::HTMLElement"** %3 to i64*
  %48 = bitcast %"class.blink::HTMLElement"** %3 to %"class.blink::ContainerNode"**
  %49 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kHrTagE, align 8
  %52 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %51, i64 0, i32 0, i32 0, i32 0
  br label %60

53:                                               ; preds = %36, %291, %288, %13
  %54 = icmp eq i8* %16, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %53
  %56 = load i8, i8* %16, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #11
  br label %59

59:                                               ; preds = %53, %55, %58
  ret void

60:                                               ; preds = %40, %291
  %61 = phi %"class.blink::Node"* [ %31, %40 ], [ %289, %291 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = and i32 %63, 48
  %65 = icmp eq i32 %64, 0
  %66 = bitcast %"class.blink::Node"* %61 to %"class.blink::HTMLElement"*
  %67 = select i1 %65, %"class.blink::HTMLElement"* %66, %"class.blink::HTMLElement"* null
  store %"class.blink::HTMLElement"* %67, %"class.blink::HTMLElement"** %3, align 8
  %68 = icmp eq %"class.blink::HTMLElement"* %67, null
  %69 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = ptrtoint %"class.blink::HTMLElement"* %67 to i64
  br i1 %68, label %71, label %99

71:                                               ; preds = %60
  %72 = icmp eq %"class.blink::Node"* %61, %45
  br i1 %72, label %288, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 5, i32 0, i32 0
  %75 = load %"class.blink::Node"*, %"class.blink::Node"** %74, align 8
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %77, label %80

77:                                               ; preds = %73
  %78 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %61, %"class.blink::Node"* %45) #11
  %79 = icmp eq %"class.blink::Node"* %78, null
  br i1 %79, label %288, label %80

80:                                               ; preds = %77, %73
  %81 = phi %"class.blink::Node"* [ %75, %73 ], [ %78, %77 ]
  br label %82

82:                                               ; preds = %80, %96
  %83 = phi %"class.blink::Node"* [ %97, %96 ], [ %81, %80 ]
  %84 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %83, i64 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, 12
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %288, label %88

88:                                               ; preds = %82
  %89 = icmp eq %"class.blink::Node"* %83, %45
  br i1 %89, label %288, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %83, i64 0, i32 5, i32 0, i32 0
  %92 = load %"class.blink::Node"*, %"class.blink::Node"** %91, align 8
  %93 = icmp eq %"class.blink::Node"* %92, null
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  %95 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %83, %"class.blink::Node"* %45) #11
  br label %96

96:                                               ; preds = %94, %90
  %97 = phi %"class.blink::Node"* [ %95, %94 ], [ %92, %90 ]
  %98 = icmp eq %"class.blink::Node"* %97, null
  br i1 %98, label %288, label %82

99:                                               ; preds = %60
  %100 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %67, i64 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = and i32 %101, 48
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %185

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %67, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %107 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %105, i64 1, i32 2
  %108 = bitcast %"class.blink::Member.318"* %107 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %109 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %109, i64 0, i32 3, i32 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %106, i64 0, i32 3, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %111, %113
  br i1 %114, label %115, label %185

115:                                              ; preds = %104
  %116 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %69) #11
  %117 = icmp eq %"class.blink::ContainerNode"* %116, %26
  br i1 %117, label %147, label %118

118:                                              ; preds = %115
  %119 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %120 = icmp eq %"class.blink::Node"* %119, %45
  br i1 %120, label %288, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %119, i64 0, i32 5, i32 0, i32 0
  %123 = load %"class.blink::Node"*, %"class.blink::Node"** %122, align 8
  %124 = icmp eq %"class.blink::Node"* %123, null
  br i1 %124, label %125, label %128

125:                                              ; preds = %121
  %126 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %119, %"class.blink::Node"* %45) #11
  %127 = icmp eq %"class.blink::Node"* %126, null
  br i1 %127, label %288, label %128

128:                                              ; preds = %125, %121
  %129 = phi %"class.blink::Node"* [ %123, %121 ], [ %126, %125 ]
  br label %130

130:                                              ; preds = %128, %144
  %131 = phi %"class.blink::Node"* [ %145, %144 ], [ %129, %128 ]
  %132 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %131, i64 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = and i32 %133, 12
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %288, label %136

136:                                              ; preds = %130
  %137 = icmp eq %"class.blink::Node"* %131, %45
  br i1 %137, label %288, label %138

138:                                              ; preds = %136
  %139 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %131, i64 0, i32 5, i32 0, i32 0
  %140 = load %"class.blink::Node"*, %"class.blink::Node"** %139, align 8
  %141 = icmp eq %"class.blink::Node"* %140, null
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %131, %"class.blink::Node"* %45) #11
  br label %144

144:                                              ; preds = %142, %138
  %145 = phi %"class.blink::Node"* [ %143, %142 ], [ %140, %138 ]
  %146 = icmp eq %"class.blink::Node"* %145, null
  br i1 %146, label %288, label %130

147:                                              ; preds = %115
  %148 = load i32, i32* %18, align 4
  %149 = load i32, i32* %46, align 8
  %150 = icmp eq i32 %148, %149
  br i1 %150, label %165, label %151, !prof !5

151:                                              ; preds = %147
  %152 = load %"class.blink::Member.1817"*, %"class.blink::Member.1817"** %20, align 8
  %153 = zext i32 %148 to i64
  %154 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %152, i64 %153
  %155 = load i64, i64* %47, align 8
  %156 = bitcast %"class.blink::Member.1817"* %154 to i64*
  store atomic i64 %155, i64* %156 monotonic, align 8
  %157 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %162, label %159

159:                                              ; preds = %151
  %160 = inttoptr i64 %155 to i8*
  %161 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %160) #11
  br label %162

162:                                              ; preds = %159, %151
  %163 = load i32, i32* %18, align 4
  %164 = add i32 %163, 1
  store i32 %164, i32* %18, align 4
  br label %166

165:                                              ; preds = %147
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1814"* %17, %"class.blink::HTMLElement"** nonnull dereferenceable(8) %3) #11
  br label %166

166:                                              ; preds = %162, %165
  %167 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %48, align 8
  %168 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %167, i64 0, i32 1, i32 0, i32 0
  %169 = load %"class.blink::Node"*, %"class.blink::Node"** %168, align 8
  %170 = icmp eq %"class.blink::Node"* %169, null
  %171 = bitcast %"class.blink::ContainerNode"* %167 to %"class.blink::HTMLElement"*
  %172 = ptrtoint %"class.blink::ContainerNode"* %167 to i64
  br i1 %170, label %183, label %173

173:                                              ; preds = %166, %179
  %174 = phi %"class.blink::Node"* [ %181, %179 ], [ %169, %166 ]
  %175 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %174, i64 0, i32 1
  %176 = load i32, i32* %175, align 8
  %177 = and i32 %176, 12
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %288, label %179

179:                                              ; preds = %173
  %180 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %174, i64 0, i32 5, i32 0, i32 0
  %181 = load %"class.blink::Node"*, %"class.blink::Node"** %180, align 8
  %182 = icmp eq %"class.blink::Node"* %181, null
  br i1 %182, label %183, label %173

183:                                              ; preds = %179, %166
  %184 = icmp eq %"class.blink::ContainerNode"* %167, null
  br i1 %184, label %260, label %185

185:                                              ; preds = %99, %104, %183
  %186 = phi %"class.blink::HTMLElement"* [ %171, %183 ], [ %67, %104 ], [ %67, %99 ]
  %187 = phi %"class.blink::HTMLElement"* [ %171, %183 ], [ %66, %104 ], [ %66, %99 ]
  %188 = phi i64 [ %172, %183 ], [ %70, %104 ], [ %70, %99 ]
  %189 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %187, i64 0, i32 0, i32 0, i32 0, i32 1
  %190 = load i32, i32* %189, align 8
  %191 = and i32 %190, 48
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %222

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %186, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %196 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %194, i64 1, i32 2
  %197 = bitcast %"class.blink::Member.318"* %196 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %198 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %198, i64 0, i32 3, i32 0, i32 0, i32 0
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %195, i64 0, i32 3, i32 0, i32 0, i32 0
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %200, %202
  br i1 %203, label %204, label %222

204:                                              ; preds = %193
  %205 = load i32, i32* %18, align 4
  %206 = load i32, i32* %46, align 8
  %207 = icmp eq i32 %205, %206
  br i1 %207, label %221, label %208, !prof !5

208:                                              ; preds = %204
  %209 = load %"class.blink::Member.1817"*, %"class.blink::Member.1817"** %20, align 8
  %210 = zext i32 %205 to i64
  %211 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %209, i64 %210
  %212 = bitcast %"class.blink::Member.1817"* %211 to i64*
  store atomic i64 %188, i64* %212 monotonic, align 8
  %213 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %218, label %215

215:                                              ; preds = %208
  %216 = inttoptr i64 %188 to i8*
  %217 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %216) #11
  br label %218

218:                                              ; preds = %215, %208
  %219 = load i32, i32* %18, align 4
  %220 = add i32 %219, 1
  store i32 %220, i32* %18, align 4
  br label %222

221:                                              ; preds = %204
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1814"* %17, %"class.blink::HTMLElement"** nonnull dereferenceable(8) %3) #11
  br label %222

222:                                              ; preds = %185, %221, %218, %193
  %223 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %224 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %223, i64 0, i32 0, i32 0, i32 0
  %225 = icmp eq %"class.blink::HTMLElement"* %223, null
  %226 = ptrtoint %"class.blink::HTMLElement"* %223 to i64
  br i1 %225, label %260, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %223, i64 0, i32 0, i32 0, i32 0, i32 1
  %229 = load i32, i32* %228, align 8
  %230 = and i32 %229, 48
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %260

232:                                              ; preds = %227
  %233 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %52, align 8
  %234 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %224, i64 1, i32 2
  %235 = bitcast %"class.blink::Member.318"* %234 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %236 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %235, align 8
  %237 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %236, i64 0, i32 3, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %233, i64 0, i32 3, i32 0, i32 0, i32 0
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %239, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %238, %240
  br i1 %241, label %242, label %260

242:                                              ; preds = %232
  %243 = load i32, i32* %18, align 4
  %244 = load i32, i32* %46, align 8
  %245 = icmp eq i32 %243, %244
  br i1 %245, label %259, label %246, !prof !5

246:                                              ; preds = %242
  %247 = load %"class.blink::Member.1817"*, %"class.blink::Member.1817"** %20, align 8
  %248 = zext i32 %243 to i64
  %249 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %247, i64 %248
  %250 = bitcast %"class.blink::Member.1817"* %249 to i64*
  store atomic i64 %226, i64* %250 monotonic, align 8
  %251 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %256, label %253

253:                                              ; preds = %246
  %254 = bitcast %"class.blink::HTMLElement"* %223 to i8*
  %255 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %254) #11
  br label %256

256:                                              ; preds = %253, %246
  %257 = load i32, i32* %18, align 4
  %258 = add i32 %257, 1
  store i32 %258, i32* %18, align 4
  br label %260

259:                                              ; preds = %242
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1814"* %17, %"class.blink::HTMLElement"** nonnull dereferenceable(8) %3) #11
  br label %260

260:                                              ; preds = %183, %222, %227, %259, %256, %232
  %261 = icmp eq %"class.blink::Node"* %61, %45
  br i1 %261, label %288, label %262

262:                                              ; preds = %260
  %263 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 5, i32 0, i32 0
  %264 = load %"class.blink::Node"*, %"class.blink::Node"** %263, align 8
  %265 = icmp eq %"class.blink::Node"* %264, null
  br i1 %265, label %266, label %269

266:                                              ; preds = %262
  %267 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %61, %"class.blink::Node"* %45) #11
  %268 = icmp eq %"class.blink::Node"* %267, null
  br i1 %268, label %288, label %269

269:                                              ; preds = %266, %262
  %270 = phi %"class.blink::Node"* [ %264, %262 ], [ %267, %266 ]
  br label %271

271:                                              ; preds = %269, %285
  %272 = phi %"class.blink::Node"* [ %286, %285 ], [ %270, %269 ]
  %273 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %272, i64 0, i32 1
  %274 = load i32, i32* %273, align 8
  %275 = and i32 %274, 12
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %288, label %277

277:                                              ; preds = %271
  %278 = icmp eq %"class.blink::Node"* %272, %45
  br i1 %278, label %288, label %279

279:                                              ; preds = %277
  %280 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %272, i64 0, i32 5, i32 0, i32 0
  %281 = load %"class.blink::Node"*, %"class.blink::Node"** %280, align 8
  %282 = icmp eq %"class.blink::Node"* %281, null
  br i1 %282, label %283, label %285

283:                                              ; preds = %279
  %284 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %272, %"class.blink::Node"* %45) #11
  br label %285

285:                                              ; preds = %283, %279
  %286 = phi %"class.blink::Node"* [ %284, %283 ], [ %281, %279 ]
  %287 = icmp eq %"class.blink::Node"* %286, null
  br i1 %287, label %288, label %271

288:                                              ; preds = %144, %136, %130, %173, %285, %277, %271, %96, %88, %82, %266, %260, %125, %118, %77, %71
  %289 = phi %"class.blink::Node"* [ null, %77 ], [ null, %71 ], [ null, %125 ], [ null, %118 ], [ null, %266 ], [ null, %260 ], [ null, %96 ], [ %83, %82 ], [ null, %88 ], [ null, %285 ], [ %272, %271 ], [ null, %277 ], [ %174, %173 ], [ null, %144 ], [ %131, %130 ], [ null, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11
  %290 = icmp eq %"class.blink::Node"* %289, null
  br i1 %290, label %53, label %291

291:                                              ; preds = %288
  %292 = load i32, i32* %18, align 4
  %293 = icmp ult i32 %292, 2147483647
  br i1 %293, label %60, label %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement23InvalidateSelectedItemsEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::NodeListsNodeData"* @_ZN5blink4Node9NodeListsEv(%"class.blink::Node"* %2) #11
  %4 = icmp eq %"class.blink::NodeListsNodeData"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::HTMLCollection"* @_ZN5blink17NodeListsNodeData6CachedINS_14HTMLCollectionEEEPT_NS_14CollectionTypeE(%"class.blink::NodeListsNodeData"* nonnull %3, i32 14) #11
  %7 = icmp eq %"class.blink::HTMLCollection"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %5
  %9 = bitcast %"class.blink::HTMLCollection"* %6 to void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)***
  %10 = load void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)**, void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)*, void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)** %10, i64 9
  %12 = load void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)*, void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)** %11, align 8
  tail call void %12(%"class.blink::HTMLCollection"* nonnull %6, %"class.blink::Document"* null) #11
  br label %13

13:                                               ; preds = %1, %5, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement18SetRecalcListItemsEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  store i8 1, i8* %2, align 2
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %4 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %3, align 8
  %5 = bitcast %"class.blink::SelectType"* %4 to void (%"class.blink::SelectType"*)***
  %6 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %6, i64 13
  %8 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %7, align 8
  tail call void %8(%"class.blink::SelectType"* %4) #11
  %9 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %33

14:                                               ; preds = %1
  %15 = tail call %"class.blink::NodeListsNodeData"* @_ZN5blink4Node9NodeListsEv(%"class.blink::Node"* %9) #11
  %16 = icmp eq %"class.blink::NodeListsNodeData"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = tail call %"class.blink::HTMLOptionsCollection"* @_ZN5blink17NodeListsNodeData6CachedINS_21HTMLOptionsCollectionEEEPT_NS_14CollectionTypeE(%"class.blink::NodeListsNodeData"* nonnull %15, i32 13) #11
  %19 = icmp eq %"class.blink::HTMLOptionsCollection"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::HTMLOptionsCollection", %"class.blink::HTMLOptionsCollection"* %18, i64 0, i32 0
  tail call void @_ZNK5blink14HTMLCollection15InvalidateCacheEPNS_8DocumentE(%"class.blink::HTMLCollection"* %21, %"class.blink::Document"* null) #11
  br label %22

22:                                               ; preds = %14, %17, %20
  %23 = tail call %"class.blink::NodeListsNodeData"* @_ZN5blink4Node9NodeListsEv(%"class.blink::Node"* %9) #11
  %24 = icmp eq %"class.blink::NodeListsNodeData"* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %22
  %26 = tail call %"class.blink::HTMLCollection"* @_ZN5blink17NodeListsNodeData6CachedINS_14HTMLCollectionEEEPT_NS_14CollectionTypeE(%"class.blink::NodeListsNodeData"* nonnull %23, i32 14) #11
  %27 = icmp eq %"class.blink::HTMLCollection"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.blink::HTMLCollection"* %26 to void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)***
  %30 = load void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)**, void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)*, void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)** %30, i64 9
  %32 = load void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)*, void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)** %31, align 8
  tail call void %32(%"class.blink::HTMLCollection"* nonnull %26, %"class.blink::Document"* null) #11
  br label %33

33:                                               ; preds = %1, %28, %25, %22
  %34 = load i32, i32* %10, align 8
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %36, label %42, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.blink::NodeData"** %37 to %"class.blink::NodeRareData"**
  %40 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %40, i64 0, i32 1, i32 0, i32 0
  br label %44

42:                                               ; preds = %33
  %43 = bitcast %"class.blink::NodeData"** %37 to %"class.blink::NodeRenderingData"**
  br label %44

44:                                               ; preds = %38, %42
  %45 = phi %"class.blink::NodeRenderingData"** [ %41, %38 ], [ %43, %42 ]
  %46 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %46, i64 0, i32 1
  %48 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %47, align 8
  %49 = icmp eq %"class.blink::LayoutObject"* %48, null
  br i1 %49, label %85, label %50

50:                                               ; preds = %44
  br i1 %36, label %55, label %51

51:                                               ; preds = %50
  %52 = bitcast %"class.blink::NodeData"** %37 to %"class.blink::NodeRareData"**
  %53 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %53, i64 0, i32 1, i32 0, i32 0
  br label %57

55:                                               ; preds = %50
  %56 = bitcast %"class.blink::NodeData"** %37 to %"class.blink::NodeRenderingData"**
  br label %57

57:                                               ; preds = %51, %55
  %58 = phi %"class.blink::NodeRenderingData"** [ %54, %51 ], [ %56, %55 ]
  %59 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %59, i64 0, i32 1
  %61 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 6, i32 0, i32 0
  %63 = load %"class.blink::Node"*, %"class.blink::Node"** %62, align 8
  %64 = icmp eq %"class.blink::Node"* %63, null
  br i1 %64, label %65, label %72

65:                                               ; preds = %57, %65
  %66 = phi %"class.blink::LayoutObject"* [ %68, %65 ], [ %61, %57 ]
  %67 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %66, i64 0, i32 7
  %68 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %68, i64 0, i32 6, i32 0, i32 0
  %70 = load %"class.blink::Node"*, %"class.blink::Node"** %69, align 8
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %65, label %72

72:                                               ; preds = %65, %57
  %73 = phi %"class.blink::Node"* [ %63, %57 ], [ %70, %65 ]
  %74 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %73, i64 0, i32 3, i32 0, i32 0
  %75 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %75, i64 0, i32 2, i32 0, i32 0
  %77 = load %"class.blink::Document"*, %"class.blink::Document"** %76, align 8
  %78 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %77) #11
  %79 = icmp eq %"class.blink::AXObjectCache"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %72
  %81 = bitcast %"class.blink::AXObjectCache"* %78 to void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)***
  %82 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %82, i64 11
  %84 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %83, align 8
  tail call void %84(%"class.blink::AXObjectCache"* nonnull %78, %"class.blink::Node"* %9) #11
  br label %85

85:                                               ; preds = %80, %72, %44
  ret void
}

declare void @_ZNK5blink14HTMLCollection15InvalidateCacheEPNS_8DocumentE(%"class.blink::HTMLCollection"*, %"class.blink::Document"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink17HTMLOptionElement21IsDisabledFormControlEv(%"class.blink::HTMLOptionElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement16setSelectedIndexEi(%"class.blink::HTMLSelectElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink13ContainerNode15EnsureNodeListsEv(%"class.blink::ContainerNode"* %3) #11
  %5 = tail call %"class.blink::HTMLOptionsCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_21HTMLOptionsCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::NodeListsNodeData"* %4, %"class.blink::ContainerNode"* dereferenceable(80) %3, i32 13) #11
  %6 = getelementptr inbounds %"class.blink::HTMLOptionsCollection", %"class.blink::HTMLOptionsCollection"* %5, i64 0, i32 0
  %7 = tail call %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"* %6, i32 %1) #11
  %8 = bitcast %"class.blink::Element"* %7 to %"class.blink::HTMLOptionElement"*
  tail call void @_ZN5blink17HTMLSelectElement12SelectOptionEPNS_17HTMLOptionElementEj(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* %8, i32 5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17HTMLSelectElement17SelectedListIndexEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 2, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Member.1817"*, %"class.blink::Member.1817"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %46, label %14

14:                                               ; preds = %6
  %15 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %15, i64 0, i32 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %14, %42
  %18 = phi %"class.blink::Member.1817"* [ %8, %14 ], [ %44, %42 ]
  %19 = phi i32 [ 0, %14 ], [ %43, %42 ]
  %20 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %18, i64 0, i32 0, i32 0
  %21 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %20, align 8
  %22 = icmp eq %"class.blink::HTMLElement"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %21, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 48
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %42

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %21, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 1, i32 2
  %32 = bitcast %"class.blink::Member.318"* %31 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %28
  %40 = bitcast %"class.blink::HTMLElement"* %21 to %"class.blink::HTMLOptionElement"*
  %41 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %40) #11
  br i1 %41, label %46, label %42

42:                                               ; preds = %28, %17, %23, %39
  %43 = add nuw nsw i32 %19, 1
  %44 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %18, i64 1
  %45 = icmp eq %"class.blink::Member.1817"* %44, %12
  br i1 %45, label %46, label %17

46:                                               ; preds = %39, %42, %6
  %47 = phi i32 [ -1, %6 ], [ -1, %42 ], [ %19, %39 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLSelectElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"* %3, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56) %1) #11
  %4 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 8
  switch i8 %5, label %332 [
    i8 0, label %6
    i8 2, label %114
    i8 4, label %219
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %1, i64 0, i32 2
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %332, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 48
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %332

15:                                               ; preds = %10
  %16 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %20 = bitcast %"class.blink::Member.318"* %19 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, %25
  %27 = bitcast %"class.blink::Node"* %8 to %"class.blink::HTMLOptionElement"*
  br i1 %26, label %28, label %30

28:                                               ; preds = %15
  %29 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %27) #11
  tail call void @_ZN5blink17HTMLSelectElement14OptionInsertedERNS_17HTMLOptionElementEb(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* nonnull dereferenceable(120) %27, i1 zeroext %29)
  br label %332

30:                                               ; preds = %15
  %31 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE, align 8
  %32 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %35 = bitcast %"class.blink::Member.318"* %34 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp ne %"class.WTF::StringImpl"* %38, %40
  %42 = and i32 %12, 2
  %43 = icmp eq i32 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %332, label %45

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1
  %47 = bitcast %"class.blink::Node"* %46 to %"class.blink::Node"**
  %48 = load %"class.blink::Node"*, %"class.blink::Node"** %47, align 8
  %49 = bitcast %"class.blink::Node"* %48 to %"class.blink::HTMLOptionElement"*
  %50 = icmp eq %"class.blink::Node"* %48, null
  br i1 %50, label %76, label %51

51:                                               ; preds = %45
  %52 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %53 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %52, i64 0, i32 0, i32 0, i32 0
  br label %54

54:                                               ; preds = %71, %51
  %55 = phi %"class.blink::Node"* [ %48, %51 ], [ %73, %71 ]
  %56 = phi %"class.blink::HTMLOptionElement"* [ %49, %51 ], [ %74, %71 ]
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %55, i64 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 48
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %71

61:                                               ; preds = %54
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %55, i64 1, i32 2
  %64 = bitcast %"class.blink::Member.318"* %63 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %67, %69
  br i1 %70, label %76, label %71

71:                                               ; preds = %61, %54
  %72 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %55, i64 0, i32 5, i32 0, i32 0
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %72, align 8
  %74 = bitcast %"class.blink::Node"* %73 to %"class.blink::HTMLOptionElement"*
  %75 = icmp eq %"class.blink::Node"* %73, null
  br i1 %75, label %332, label %54

76:                                               ; preds = %61, %45
  %77 = phi %"class.blink::HTMLOptionElement"* [ %49, %45 ], [ %56, %61 ]
  %78 = icmp eq %"class.blink::HTMLOptionElement"* %77, null
  br i1 %78, label %332, label %79

79:                                               ; preds = %76
  %80 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %81 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %77) #11
  tail call void @_ZN5blink17HTMLSelectElement14OptionInsertedERNS_17HTMLOptionElementEb(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* nonnull dereferenceable(120) %77, i1 zeroext %82)
  %83 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %84 = load %"class.blink::Node"*, %"class.blink::Node"** %83, align 8
  %85 = icmp eq %"class.blink::Node"* %84, null
  br i1 %85, label %332, label %86

86:                                               ; preds = %79, %106
  %87 = phi %"class.blink::Node"* [ %107, %106 ], [ %84, %79 ]
  %88 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %87, i64 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = and i32 %89, 48
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %102

92:                                               ; preds = %86
  %93 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8
  %94 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %87, i64 1, i32 2
  %95 = bitcast %"class.blink::Member.318"* %94 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %96 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %96, i64 0, i32 3, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %93, i64 0, i32 3, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %98, %100
  br i1 %101, label %108, label %102

102:                                              ; preds = %92, %86
  %103 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %87, i64 0, i32 5, i32 0, i32 0
  %104 = load %"class.blink::Node"*, %"class.blink::Node"** %103, align 8
  %105 = icmp eq %"class.blink::Node"* %104, null
  br i1 %105, label %332, label %106

106:                                              ; preds = %102, %108
  %107 = phi %"class.blink::Node"* [ %104, %102 ], [ %112, %108 ]
  br label %86

108:                                              ; preds = %92
  %109 = bitcast %"class.blink::Node"* %87 to %"class.blink::HTMLOptionElement"*
  %110 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %109) #11
  tail call void @_ZN5blink17HTMLSelectElement14OptionInsertedERNS_17HTMLOptionElementEb(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* nonnull dereferenceable(120) %109, i1 zeroext %110)
  %111 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %87, i64 0, i32 5, i32 0, i32 0
  %112 = load %"class.blink::Node"*, %"class.blink::Node"** %111, align 8
  %113 = icmp eq %"class.blink::Node"* %112, null
  br i1 %113, label %332, label %106

114:                                              ; preds = %2
  %115 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %1, i64 0, i32 2
  %116 = load %"class.blink::Node"*, %"class.blink::Node"** %115, align 8
  %117 = icmp eq %"class.blink::Node"* %116, null
  br i1 %117, label %332, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %116, i64 0, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = and i32 %120, 48
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %332

123:                                              ; preds = %118
  %124 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %125 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %124, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %116, i64 1, i32 2
  %128 = bitcast %"class.blink::Member.318"* %127 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %129 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %129, i64 0, i32 3, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %126, i64 0, i32 3, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %131, %133
  br i1 %134, label %135, label %137

135:                                              ; preds = %123
  %136 = bitcast %"class.blink::Node"* %116 to %"class.blink::HTMLOptionElement"*
  tail call void @_ZN5blink17HTMLSelectElement13OptionRemovedERNS_17HTMLOptionElementE(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* nonnull dereferenceable(120) %136)
  br label %332

137:                                              ; preds = %123
  %138 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE, align 8
  %139 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %138, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %116, i64 1, i32 2
  %142 = bitcast %"class.blink::Member.318"* %141 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %143 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %143, i64 0, i32 3, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %140, i64 0, i32 3, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp ne %"class.WTF::StringImpl"* %145, %147
  %149 = and i32 %120, 2
  %150 = icmp eq i32 %149, 0
  %151 = or i1 %148, %150
  br i1 %151, label %332, label %152

152:                                              ; preds = %137
  %153 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %116, i64 1
  %154 = bitcast %"class.blink::Node"* %153 to %"class.blink::Node"**
  %155 = load %"class.blink::Node"*, %"class.blink::Node"** %154, align 8
  %156 = bitcast %"class.blink::Node"* %155 to %"class.blink::HTMLOptionElement"*
  %157 = icmp eq %"class.blink::Node"* %155, null
  br i1 %157, label %183, label %158

158:                                              ; preds = %152
  %159 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %160 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %159, i64 0, i32 0, i32 0, i32 0
  br label %161

161:                                              ; preds = %178, %158
  %162 = phi %"class.blink::Node"* [ %155, %158 ], [ %180, %178 ]
  %163 = phi %"class.blink::HTMLOptionElement"* [ %156, %158 ], [ %181, %178 ]
  %164 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %162, i64 0, i32 1
  %165 = load i32, i32* %164, align 8
  %166 = and i32 %165, 48
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %178

168:                                              ; preds = %161
  %169 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %160, align 8
  %170 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %162, i64 1, i32 2
  %171 = bitcast %"class.blink::Member.318"* %170 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %172 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %171, align 8
  %173 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %172, i64 0, i32 3, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %175 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %169, i64 0, i32 3, i32 0, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %174, %176
  br i1 %177, label %183, label %178

178:                                              ; preds = %168, %161
  %179 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %162, i64 0, i32 5, i32 0, i32 0
  %180 = load %"class.blink::Node"*, %"class.blink::Node"** %179, align 8
  %181 = bitcast %"class.blink::Node"* %180 to %"class.blink::HTMLOptionElement"*
  %182 = icmp eq %"class.blink::Node"* %180, null
  br i1 %182, label %332, label %161

183:                                              ; preds = %168, %152
  %184 = phi %"class.blink::HTMLOptionElement"* [ %156, %152 ], [ %163, %168 ]
  %185 = icmp eq %"class.blink::HTMLOptionElement"* %184, null
  br i1 %185, label %332, label %186

186:                                              ; preds = %183
  %187 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %188 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %187, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink17HTMLSelectElement13OptionRemovedERNS_17HTMLOptionElementE(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* nonnull dereferenceable(120) %184)
  %189 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %184, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %190 = load %"class.blink::Node"*, %"class.blink::Node"** %189, align 8
  %191 = icmp eq %"class.blink::Node"* %190, null
  br i1 %191, label %332, label %192

192:                                              ; preds = %186, %212
  %193 = phi %"class.blink::Node"* [ %213, %212 ], [ %190, %186 ]
  %194 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %193, i64 0, i32 1
  %195 = load i32, i32* %194, align 8
  %196 = and i32 %195, 48
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %208

198:                                              ; preds = %192
  %199 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %188, align 8
  %200 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %193, i64 1, i32 2
  %201 = bitcast %"class.blink::Member.318"* %200 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %202 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %201, align 8
  %203 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %202, i64 0, i32 3, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %199, i64 0, i32 3, i32 0, i32 0, i32 0
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %204, %206
  br i1 %207, label %214, label %208

208:                                              ; preds = %198, %192
  %209 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %193, i64 0, i32 5, i32 0, i32 0
  %210 = load %"class.blink::Node"*, %"class.blink::Node"** %209, align 8
  %211 = icmp eq %"class.blink::Node"* %210, null
  br i1 %211, label %332, label %212

212:                                              ; preds = %208, %214
  %213 = phi %"class.blink::Node"* [ %210, %208 ], [ %217, %214 ]
  br label %192

214:                                              ; preds = %198
  %215 = bitcast %"class.blink::Node"* %193 to %"class.blink::HTMLOptionElement"*
  tail call void @_ZN5blink17HTMLSelectElement13OptionRemovedERNS_17HTMLOptionElementE(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* nonnull dereferenceable(120) %215)
  %216 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %193, i64 0, i32 5, i32 0, i32 0
  %217 = load %"class.blink::Node"*, %"class.blink::Node"** %216, align 8
  %218 = icmp eq %"class.blink::Node"* %217, null
  br i1 %218, label %332, label %212

219:                                              ; preds = %2
  %220 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %221 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %220, align 8
  %222 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %223 = load i32, i32* %222, align 4
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %221, i64 %224
  %226 = icmp eq i32 %223, 0
  br i1 %226, label %332, label %227

227:                                              ; preds = %219
  %228 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %229 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %228, i64 0, i32 0, i32 0, i32 0
  %230 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE, align 8
  %231 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %230, i64 0, i32 0, i32 0, i32 0
  br label %232

232:                                              ; preds = %227, %329
  %233 = phi %"class.blink::Member.318"* [ %221, %227 ], [ %330, %329 ]
  %234 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %233, i64 0, i32 0, i32 0
  %235 = load %"class.blink::Node"*, %"class.blink::Node"** %234, align 8
  %236 = icmp eq %"class.blink::Node"* %235, null
  br i1 %236, label %329, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %235, i64 0, i32 1
  %239 = load i32, i32* %238, align 8
  %240 = and i32 %239, 48
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %329

242:                                              ; preds = %237
  %243 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %229, align 8
  %244 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %235, i64 1, i32 2
  %245 = bitcast %"class.blink::Member.318"* %244 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %246 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %245, align 8
  %247 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %246, i64 0, i32 3, i32 0, i32 0, i32 0
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %249 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %243, i64 0, i32 3, i32 0, i32 0, i32 0
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %249, align 8
  %251 = icmp eq %"class.WTF::StringImpl"* %248, %250
  br i1 %251, label %252, label %254

252:                                              ; preds = %242
  %253 = bitcast %"class.blink::Node"* %235 to %"class.blink::HTMLOptionElement"*
  tail call void @_ZN5blink17HTMLSelectElement13OptionRemovedERNS_17HTMLOptionElementE(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* nonnull dereferenceable(120) %253)
  br label %329

254:                                              ; preds = %242
  %255 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %231, align 8
  %256 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %235, i64 1, i32 2
  %257 = bitcast %"class.blink::Member.318"* %256 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %258 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %257, align 8
  %259 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %258, i64 0, i32 3, i32 0, i32 0, i32 0
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  %261 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %255, i64 0, i32 3, i32 0, i32 0, i32 0
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  %263 = icmp ne %"class.WTF::StringImpl"* %260, %262
  %264 = and i32 %239, 2
  %265 = icmp eq i32 %264, 0
  %266 = or i1 %263, %265
  br i1 %266, label %329, label %267

267:                                              ; preds = %254
  %268 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %235, i64 1
  %269 = bitcast %"class.blink::Node"* %268 to %"class.blink::Node"**
  %270 = load %"class.blink::Node"*, %"class.blink::Node"** %269, align 8
  %271 = bitcast %"class.blink::Node"* %270 to %"class.blink::HTMLOptionElement"*
  %272 = icmp eq %"class.blink::Node"* %270, null
  br i1 %272, label %295, label %273

273:                                              ; preds = %267, %290
  %274 = phi %"class.blink::Node"* [ %292, %290 ], [ %270, %267 ]
  %275 = phi %"class.blink::HTMLOptionElement"* [ %293, %290 ], [ %271, %267 ]
  %276 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %274, i64 0, i32 1
  %277 = load i32, i32* %276, align 8
  %278 = and i32 %277, 48
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %290

280:                                              ; preds = %273
  %281 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %229, align 8
  %282 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %274, i64 1, i32 2
  %283 = bitcast %"class.blink::Member.318"* %282 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %284 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %283, align 8
  %285 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %284, i64 0, i32 3, i32 0, i32 0, i32 0
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %285, align 8
  %287 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %281, i64 0, i32 3, i32 0, i32 0, i32 0
  %288 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %287, align 8
  %289 = icmp eq %"class.WTF::StringImpl"* %286, %288
  br i1 %289, label %295, label %290

290:                                              ; preds = %280, %273
  %291 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %274, i64 0, i32 5, i32 0, i32 0
  %292 = load %"class.blink::Node"*, %"class.blink::Node"** %291, align 8
  %293 = bitcast %"class.blink::Node"* %292 to %"class.blink::HTMLOptionElement"*
  %294 = icmp eq %"class.blink::Node"* %292, null
  br i1 %294, label %329, label %273

295:                                              ; preds = %280, %267
  %296 = phi %"class.blink::HTMLOptionElement"* [ %271, %267 ], [ %275, %280 ]
  %297 = icmp eq %"class.blink::HTMLOptionElement"* %296, null
  br i1 %297, label %329, label %298

298:                                              ; preds = %295
  tail call void @_ZN5blink17HTMLSelectElement13OptionRemovedERNS_17HTMLOptionElementE(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* nonnull dereferenceable(120) %296)
  %299 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %296, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %300 = load %"class.blink::Node"*, %"class.blink::Node"** %299, align 8
  %301 = icmp eq %"class.blink::Node"* %300, null
  br i1 %301, label %329, label %302

302:                                              ; preds = %298, %322
  %303 = phi %"class.blink::Node"* [ %323, %322 ], [ %300, %298 ]
  %304 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %303, i64 0, i32 1
  %305 = load i32, i32* %304, align 8
  %306 = and i32 %305, 48
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %318

308:                                              ; preds = %302
  %309 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %229, align 8
  %310 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %303, i64 1, i32 2
  %311 = bitcast %"class.blink::Member.318"* %310 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %312 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %311, align 8
  %313 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %312, i64 0, i32 3, i32 0, i32 0, i32 0
  %314 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %313, align 8
  %315 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %309, i64 0, i32 3, i32 0, i32 0, i32 0
  %316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %315, align 8
  %317 = icmp eq %"class.WTF::StringImpl"* %314, %316
  br i1 %317, label %324, label %318

318:                                              ; preds = %308, %302
  %319 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %303, i64 0, i32 5, i32 0, i32 0
  %320 = load %"class.blink::Node"*, %"class.blink::Node"** %319, align 8
  %321 = icmp eq %"class.blink::Node"* %320, null
  br i1 %321, label %329, label %322

322:                                              ; preds = %318, %324
  %323 = phi %"class.blink::Node"* [ %320, %318 ], [ %327, %324 ]
  br label %302

324:                                              ; preds = %308
  %325 = bitcast %"class.blink::Node"* %303 to %"class.blink::HTMLOptionElement"*
  tail call void @_ZN5blink17HTMLSelectElement13OptionRemovedERNS_17HTMLOptionElementE(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* nonnull dereferenceable(120) %325)
  %326 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %303, i64 0, i32 5, i32 0, i32 0
  %327 = load %"class.blink::Node"*, %"class.blink::Node"** %326, align 8
  %328 = icmp eq %"class.blink::Node"* %327, null
  br i1 %328, label %329, label %322

329:                                              ; preds = %290, %324, %318, %298, %254, %237, %295, %232, %252
  %330 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %233, i64 1
  %331 = icmp eq %"class.blink::Member.318"* %330, %225
  br i1 %331, label %332, label %232

332:                                              ; preds = %329, %178, %214, %208, %71, %108, %102, %186, %79, %137, %30, %118, %10, %219, %183, %76, %114, %6, %2, %135, %28
  ret void
}

declare void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement14OptionInsertedERNS_17HTMLOptionElementEb(%"class.blink::HTMLSelectElement"*, %"class.blink::HTMLOptionElement"* dereferenceable(120), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %1, i64 0, i32 5
  store i8 1, i8* %4, align 1
  tail call void @_ZN5blink17HTMLSelectElement18SetRecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0)
  br i1 %2, label %5, label %10

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 10
  %7 = load i8, i8* %6, align 1, !range !3
  %8 = xor i8 %7, 1
  %9 = zext i8 %8 to i32
  tail call void @_ZN5blink17HTMLSelectElement12SelectOptionEPNS_17HTMLOptionElementEj(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* %1, i32 %9)
  br label %15

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 7, i32 0, i32 0
  %12 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %11, align 8
  %13 = icmp eq %"class.blink::HTMLOptionElement"* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN5blink17HTMLSelectElement23ResetToDefaultSelectionENS0_11ResetReasonE(%"class.blink::HTMLSelectElement"* %0, i32 1)
  br label %15

15:                                               ; preds = %10, %14, %5
  %16 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.blink::ListedElement.base"* %16 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %17) #11
  %18 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %19 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %18, align 8
  %20 = bitcast %"class.blink::SelectType"* %19 to void (%"class.blink::SelectType"*)***
  %21 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %21, i64 22
  %23 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %22, align 8
  tail call void %23(%"class.blink::SelectType"* %19) #11
  %24 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::Document"*, %"class.blink::Document"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %27, i64 0, i32 5, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = add i32 %29, -2
  %31 = icmp ult i32 %30, 18
  br i1 %31, label %32, label %43

32:                                               ; preds = %15
  %33 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %27) #11
  %34 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %33, i64 0, i32 0
  %35 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %34) #11
  %36 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %35, i64 0, i32 7, i32 0, i32 0
  %37 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %36, align 8
  %38 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %39 = bitcast %"class.blink::ChromeClient"* %37 to void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)***
  %40 = load void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)** %40, i64 91
  %42 = load void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)** %41, align 8
  tail call void %42(%"class.blink::ChromeClient"* %37, %"class.blink::HTMLFormControlElement"* dereferenceable(200) %38) #11
  br label %43

43:                                               ; preds = %15, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement13OptionRemovedERNS_17HTMLOptionElementE(%"class.blink::HTMLSelectElement"*, %"class.blink::HTMLOptionElement"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %1, i64 0, i32 5
  store i8 0, i8* %3, align 1
  tail call void @_ZN5blink17HTMLSelectElement18SetRecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0)
  %4 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* %1) #11
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 7, i32 0, i32 0
  %7 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %6, align 8
  %8 = icmp eq %"class.blink::HTMLOptionElement"* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %5, %2
  %10 = phi i32 [ 0, %2 ], [ 1, %5 ]
  tail call void @_ZN5blink17HTMLSelectElement23ResetToDefaultSelectionENS0_11ResetReasonE(%"class.blink::HTMLSelectElement"* %0, i32 %10)
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 7, i32 0
  %13 = getelementptr inbounds %"class.blink::MemberBase.1837", %"class.blink::MemberBase.1837"* %12, i64 0, i32 0
  %14 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %13, align 8
  %15 = icmp eq %"class.blink::HTMLOptionElement"* %14, %1
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::MemberBase.1837"* %12 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  br label %18

18:                                               ; preds = %16, %11
  %19 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %20 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %19, align 8
  %21 = bitcast %"class.blink::SelectType"* %20 to void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)***
  %22 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)**, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %22, i64 3
  %24 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %23, align 8
  tail call void %24(%"class.blink::SelectType"* %20, %"class.blink::HTMLOptionElement"* dereferenceable(120) %1) #11
  %25 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 8, i32 0, i32 0
  %26 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %25, align 8
  %27 = icmp ne %"class.blink::HTMLOptionElement"* %26, %1
  %28 = icmp eq %"class.blink::HTMLOptionElement"* %1, null
  %29 = or i1 %27, %28
  br i1 %29, label %43, label %30

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 8
  %32 = bitcast %"class.blink::Member.1836"* %31 to i64*
  store atomic i64 0, i64* %32 monotonic, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #11
  br label %37

37:                                               ; preds = %35, %30
  %38 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %19, align 8
  %39 = bitcast %"class.blink::SelectType"* %38 to void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)***
  %40 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)**, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %40, i64 7
  %42 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %41, align 8
  tail call void %42(%"class.blink::SelectType"* %38, %"class.blink::HTMLOptionElement"* null) #11
  br label %43

43:                                               ; preds = %18, %37
  %44 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* %1) #11
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZN5blink22HTMLFormControlElement16SetAutofillStateENS_16WebAutofillStateE(%"class.blink::HTMLFormControlElement"* %46, i32 0) #11
  br label %47

47:                                               ; preds = %45, %43
  %48 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %49 = bitcast %"class.blink::ListedElement.base"* %48 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %49) #11
  %50 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %19, align 8
  %51 = bitcast %"class.blink::SelectType"* %50 to void (%"class.blink::SelectType"*)***
  %52 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %52, i64 22
  %54 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %53, align 8
  tail call void %54(%"class.blink::SelectType"* %50) #11
  %55 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %56 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %56, i64 0, i32 2, i32 0, i32 0
  %58 = load %"class.blink::Document"*, %"class.blink::Document"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %58, i64 0, i32 5, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %60, -2
  %62 = icmp ult i32 %61, 18
  br i1 %62, label %63, label %74

63:                                               ; preds = %47
  %64 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %58) #11
  %65 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %64, i64 0, i32 0
  %66 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %65) #11
  %67 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %66, i64 0, i32 7, i32 0, i32 0
  %68 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %67, align 8
  %69 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %70 = bitcast %"class.blink::ChromeClient"* %68 to void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)***
  %71 = load void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)** %71, i64 91
  %73 = load void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)** %72, align 8
  tail call void %73(%"class.blink::ChromeClient"* %68, %"class.blink::HTMLFormControlElement"* dereferenceable(200) %69) #11
  br label %74

74:                                               ; preds = %47, %63
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLSelectElement42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::HTMLSelectElement"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement25OptGroupInsertedOrRemovedERNS_19HTMLOptGroupElementE(%"class.blink::HTMLSelectElement"*, %"class.blink::HTMLOptGroupElement"* nocapture readnone dereferenceable(104)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17HTMLSelectElement18SetRecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0)
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.blink::ListedElement.base"* %3 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %4) #11
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %6 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %5, align 8
  %7 = bitcast %"class.blink::SelectType"* %6 to void (%"class.blink::SelectType"*)***
  %8 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %8, i64 22
  %10 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %9, align 8
  tail call void %10(%"class.blink::SelectType"* %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement19HrInsertedOrRemovedERNS_13HTMLHRElementE(%"class.blink::HTMLSelectElement"*, %"class.blink::HTMLHRElement"* nocapture readnone dereferenceable(104)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17HTMLSelectElement18SetRecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0)
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %4 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %3, align 8
  %5 = bitcast %"class.blink::SelectType"* %4 to void (%"class.blink::SelectType"*)***
  %6 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %6, i64 22
  %8 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %7, align 8
  tail call void %8(%"class.blink::SelectType"* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17HTMLSelectElement30DeselectItemsWithoutValidationEPNS_17HTMLOptionElementE(%"class.blink::HTMLSelectElement"*, %"class.blink::HTMLOptionElement"* readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::OptionListIterator", align 8
  %4 = alloca %"class.blink::OptionListIterator", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 10
  %6 = load i8, i8* %5, align 1, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %19

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 9
  %10 = load i8, i8* %9, align 8, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 7, i32 0, i32 0
  %14 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %13, align 8
  %15 = icmp eq %"class.blink::HTMLOptionElement"* %14, null
  %16 = icmp eq %"class.blink::HTMLOptionElement"* %14, %1
  %17 = or i1 %15, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %12
  tail call void @_ZN5blink17HTMLOptionElement16SetSelectedStateEb(%"class.blink::HTMLOptionElement"* nonnull %14, i1 zeroext false) #11
  br label %64

19:                                               ; preds = %8, %2, %12
  %20 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 1
  %22 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  %23 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22)
  %24 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %24, align 8
  %25 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %25, align 8
  %26 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22)
  store %"class.blink::HTMLSelectElement"* null, %"class.blink::HTMLSelectElement"** %28, align 8
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %21, align 8
  br label %35

29:                                               ; preds = %19
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %3, %"class.blink::HTMLOptionElement"* null) #11
  %30 = bitcast %"class.blink::OptionListIterator"* %3 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22)
  %33 = bitcast %"class.blink::OptionListIterator"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store %"class.blink::HTMLOptionElement"* %32, %"class.blink::HTMLOptionElement"** %21, align 8
  %34 = icmp eq %"class.blink::HTMLOptionElement"* %32, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %60, %27, %29
  %36 = phi i8 [ 0, %29 ], [ 0, %27 ], [ %61, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #11
  %37 = and i8 %36, 1
  %38 = icmp ne i8 %37, 0
  br label %64

39:                                               ; preds = %29, %60
  %40 = phi %"class.blink::HTMLOptionElement"* [ %62, %60 ], [ %32, %29 ]
  %41 = phi i8 [ %61, %60 ], [ 0, %29 ]
  %42 = icmp eq %"class.blink::HTMLOptionElement"* %40, %1
  br i1 %42, label %51, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %40, i64 0, i32 5
  %45 = load i8, i8* %44, align 1, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %56, label %47

47:                                               ; preds = %43
  %48 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %40) #11
  %49 = select i1 %48, i8 1, i8 %41
  call void @_ZN5blink17HTMLOptionElement16SetSelectedStateEb(%"class.blink::HTMLOptionElement"* nonnull %40, i1 zeroext false) #11
  %50 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %21, align 8
  br label %51

51:                                               ; preds = %39, %47
  %52 = phi %"class.blink::HTMLOptionElement"* [ %50, %47 ], [ %40, %39 ]
  %53 = phi %"class.blink::HTMLOptionElement"* [ %50, %47 ], [ %1, %39 ]
  %54 = phi i8 [ %49, %47 ], [ %41, %39 ]
  %55 = icmp eq %"class.blink::HTMLOptionElement"* %53, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %43, %51
  %57 = phi i8 [ %54, %51 ], [ %41, %43 ]
  %58 = phi %"class.blink::HTMLOptionElement"* [ %53, %51 ], [ %40, %43 ]
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %4, %"class.blink::HTMLOptionElement"* nonnull %58) #11
  %59 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %21, align 8
  br label %60

60:                                               ; preds = %51, %56
  %61 = phi i8 [ %54, %51 ], [ %57, %56 ]
  %62 = phi %"class.blink::HTMLOptionElement"* [ %52, %51 ], [ %59, %56 ]
  %63 = icmp eq %"class.blink::HTMLOptionElement"* %62, null
  br i1 %63, label %35, label %39

64:                                               ; preds = %35, %18
  %65 = phi i1 [ %38, %35 ], [ true, %18 ]
  ret i1 %65
}

declare void @_ZN5blink13ListedElement22NotifyFormStateChangedEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink10LocalFrame26HasTransientUserActivationEPS0_(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement18DispatchFocusEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::HTMLSelectElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 9
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %10 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %9, align 8
  %11 = bitcast %"class.blink::SelectType"* %10 to void (%"class.blink::SelectType"*)***
  %12 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %12, i64 8
  %14 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %13, align 8
  tail call void %14(%"class.blink::SelectType"* %10) #11
  br label %15

15:                                               ; preds = %4, %8
  %16 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"* %16, %"class.blink::Element"* %1, i32 %2, %"class.blink::InputDeviceCapabilities"* %3) #11
  ret void
}

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement17DispatchBlurEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::HTMLSelectElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 4
  tail call void @_ZN5blink9TypeAhead12ResetSessionEv(%"class.blink::TypeAhead"* %5) #11
  %6 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %7 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %6, align 8
  %8 = bitcast %"class.blink::SelectType"* %7 to void (%"class.blink::SelectType"*)***
  %9 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %9, i64 4
  %11 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %10, align 8
  tail call void %11(%"class.blink::SelectType"* %7) #11
  %12 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"* %12, %"class.blink::Element"* %1, i32 %2, %"class.blink::InputDeviceCapabilities"* %3) #11
  ret void
}

declare void @_ZN5blink9TypeAhead12ResetSessionEv(%"class.blink::TypeAhead"*) local_unnamed_addr #1

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17HTMLSelectElement20SaveFormControlStateEv(%"class.blink::FormControlState"* noalias sret, %"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %1, i64 0, i32 11
  %7 = load i8, i8* %6, align 2, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %1) #11
  br label %10

10:                                               ; preds = %2, %9
  %11 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %1, i64 0, i32 3, i32 0
  %12 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = bitcast %"class.blink::FormControlState"* %0 to i64*
  store i64 -6148914691236517206, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %17 = bitcast %"class.WTF::Vector.630"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #11
  %18 = icmp eq i32 %13, 0
  br i1 %18, label %198, label %19

19:                                               ; preds = %10
  %20 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.WTF::String"* %4 to i8*
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %16, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::String"* %5 to i8*
  %28 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  %29 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 11
  %30 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  %31 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 3
  %32 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 12
  %33 = ptrtoint i8* %29 to i64
  %34 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 10
  %35 = bitcast i8** %30 to i64*
  %36 = ptrtoint i8* %32 to i64
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %1, i64 0, i32 10
  %39 = ptrtoint i8* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 9
  br label %41

41:                                               ; preds = %195, %19
  %42 = phi i32 [ 0, %19 ], [ %196, %195 ]
  %43 = call dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"* %11, i32 %42) #11
  %44 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %44, align 8
  %46 = icmp eq %"class.blink::HTMLElement"* %45, null
  br i1 %46, label %195, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %45, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 48
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %195

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %45, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 1, i32 2
  %56 = bitcast %"class.blink::Member.318"* %55 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %59, %61
  %63 = bitcast %"class.blink::HTMLElement"* %45 to %"class.blink::HTMLOptionElement"*
  br i1 %62, label %64, label %195

64:                                               ; preds = %52
  %65 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %63) #11
  br i1 %65, label %66, label %195

66:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %67 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %63) #11
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %23, align 8
  store i32 1, i32* %15, align 8
  %68 = load i32, i32* %24, align 4
  %69 = load i32, i32* %25, align 8
  %70 = icmp eq i32 %68, %69
  br i1 %70, label %96, label %71, !prof !5

71:                                               ; preds = %66
  %72 = load %"class.WTF::String"*, %"class.WTF::String"** %26, align 8
  %73 = zext i32 %68 to i64
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %72, i64 %73, i32 0, i32 0
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %74, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %75, label %93, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %93

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i33
  %85 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #11
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !5

90:                                               ; preds = %81
  call void @llvm.trap() #11
  unreachable

91:                                               ; preds = %81
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %82, align 4
  br label %93

93:                                               ; preds = %91, %76, %71
  %94 = load i32, i32* %24, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %24, align 4
  br label %97

96:                                               ; preds = %66
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.630"* %16, %"class.WTF::String"* nonnull dereferenceable(8) %4) #11
  br label %97

97:                                               ; preds = %93, %96
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %97, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 32, i1 false) #11
  store i8* %29, i8** %30, align 8
  %114 = urem i32 %42, 10
  %115 = udiv i32 %42, 10
  %116 = trunc i32 %114 to i8
  %117 = or i8 %116, 48
  store i8 %117, i8* %29, align 1
  %118 = icmp ugt i32 %42, 9
  br i1 %118, label %119, label %141

119:                                              ; preds = %113
  store i8* %34, i8** %30, align 8
  %120 = urem i32 %115, 10
  %121 = trunc i32 %120 to i8
  %122 = or i8 %121, 48
  store i8 %122, i8* %34, align 2
  %123 = icmp ugt i32 %42, 99
  br i1 %123, label %124, label %141

124:                                              ; preds = %119
  %125 = udiv i32 %42, 100
  store i8* %40, i8** %30, align 8
  %126 = urem i32 %125, 10
  %127 = trunc i32 %126 to i8
  %128 = or i8 %127, 48
  store i8 %128, i8* %40, align 1
  %129 = icmp ugt i32 %42, 999
  br i1 %129, label %130, label %139

130:                                              ; preds = %124, %130
  %131 = phi i32 [ %133, %130 ], [ %125, %124 ]
  %132 = load i8*, i8** %30, align 8
  %133 = udiv i32 %131, 10
  %134 = getelementptr inbounds i8, i8* %132, i64 -1
  store i8* %134, i8** %30, align 8
  %135 = urem i32 %133, 10
  %136 = trunc i32 %135 to i8
  %137 = or i8 %136, 48
  store i8 %137, i8* %134, align 1
  %138 = icmp ugt i32 %131, 99
  br i1 %138, label %130, label %139

139:                                              ; preds = %130, %124
  %140 = load i64, i64* %35, align 8
  br label %141

141:                                              ; preds = %119, %139, %113
  %142 = phi i64 [ %33, %113 ], [ %140, %139 ], [ %39, %119 ]
  %143 = sub i64 %36, %142
  %144 = trunc i64 %143 to i32
  store i32 %144, i32* %31, align 8
  %145 = inttoptr i64 %142 to i8*
  %146 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %145, i32 %144) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #11
  store %"class.WTF::StringImpl"* %146, %"class.WTF::StringImpl"** %37, align 8
  store i32 1, i32* %15, align 8
  %147 = load i32, i32* %24, align 4
  %148 = load i32, i32* %25, align 8
  %149 = icmp eq i32 %147, %148
  br i1 %149, label %175, label %150, !prof !5

150:                                              ; preds = %141
  %151 = load %"class.WTF::String"*, %"class.WTF::String"** %26, align 8
  %152 = zext i32 %147 to i64
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %151, i64 %152, i32 0, i32 0
  store %"class.WTF::StringImpl"* %146, %"class.WTF::StringImpl"** %153, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %154, label %172, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %172

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i33
  %164 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %163, i33 1) #11
  %165 = extractvalue { i33, i1 } %164, 1
  %166 = extractvalue { i33, i1 } %164, 0
  %167 = icmp slt i33 %166, 0
  %168 = or i1 %165, %167
  br i1 %168, label %169, label %170, !prof !5

169:                                              ; preds = %160
  call void @llvm.trap() #11
  unreachable

170:                                              ; preds = %160
  %171 = trunc i33 %166 to i32
  store i32 %171, i32* %161, align 4
  br label %172

172:                                              ; preds = %170, %155, %150
  %173 = load i32, i32* %24, align 4
  %174 = add i32 %173, 1
  store i32 %174, i32* %24, align 4
  br label %176

175:                                              ; preds = %141
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.630"* %16, %"class.WTF::String"* nonnull dereferenceable(8) %5) #11
  br label %176

176:                                              ; preds = %172, %175
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %176
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #11
  br label %192

192:                                              ; preds = %176, %188, %191
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %193 = load i8, i8* %38, align 1, !range !3
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %198, label %195

195:                                              ; preds = %192, %52, %41, %47, %64
  %196 = add nuw i32 %42, 1
  %197 = icmp eq i32 %196, %13
  br i1 %197, label %198, label %41

198:                                              ; preds = %192, %195, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink17HTMLSelectElement20SaveFormControlStateEv(%"class.blink::FormControlState"* noalias sret, %"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %1, i64 -1, i32 4, i32 2
  %4 = bitcast i16* %3 to %"class.blink::HTMLSelectElement"*
  tail call void @_ZNK5blink17HTMLSelectElement20SaveFormControlStateEv(%"class.blink::FormControlState"* sret %0, %"class.blink::HTMLSelectElement"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17HTMLSelectElement21SearchOptionsForValueERKN3WTF6StringEjj(%"class.blink::HTMLSelectElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %6 = load i8, i8* %5, align 2, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0
  %11 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp ugt i32 %12, %3
  %14 = select i1 %13, i32 %3, i32 %12
  %15 = icmp ugt i32 %14, %2
  br i1 %15, label %16, label %65

16:                                               ; preds = %9
  %17 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %20

20:                                               ; preds = %16, %62
  %21 = phi i32 [ %2, %16 ], [ %63, %62 ]
  %22 = tail call dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"* %10, i32 %21) #11
  %23 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %23, align 8
  %25 = icmp eq %"class.blink::HTMLElement"* %24, null
  br i1 %25, label %62, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %24, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 48
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %62

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %24, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 1, i32 2
  %35 = bitcast %"class.blink::Member.318"* %34 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br i1 %41, label %42, label %62

42:                                               ; preds = %31
  %43 = bitcast %"class.blink::HTMLElement"* %24 to %"class.blink::HTMLOptionElement"*
  %44 = tail call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %43) #11
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %46 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"* %45) #11
  %47 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #11
  br label %61

61:                                               ; preds = %42, %57, %60
  br i1 %46, label %65, label %62

62:                                               ; preds = %31, %20, %26, %61
  %63 = add nuw i32 %21, 1
  %64 = icmp ult i32 %63, %14
  br i1 %64, label %20, label %65

65:                                               ; preds = %61, %62, %9
  %66 = phi i32 [ -1, %9 ], [ -1, %62 ], [ %21, %61 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::HTMLSelectElement"*, %"class.blink::FormControlState"* dereferenceable(24)) unnamed_addr #0 align 2 {
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0)
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %4 = load i8, i8* %3, align 2, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0
  %9 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %177, label %12

12:                                               ; preds = %7
  tail call void @_ZN5blink17HTMLSelectElement12SelectOptionEPNS_17HTMLOptionElementEj(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* null, i32 1)
  %13 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 10
  %14 = load i8, i8* %13, align 1, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %168, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %1, i64 0, i32 1
  %22 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %22, i64 0, i32 0, i32 0, i32 0
  br label %99

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %1, i64 0, i32 1
  %26 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* %25, i32 1) #11
  %27 = tail call i32 @_ZNK3WTF6String6ToUIntEPb(%"class.WTF::String"* %26, i8* null) #11
  %28 = icmp ult i32 %27, %10
  br i1 %28, label %29, label %83

29:                                               ; preds = %24
  %30 = tail call dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"* %8, i32 %27) #11
  %31 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %31, align 8
  %33 = icmp eq %"class.blink::HTMLElement"* %32, null
  br i1 %33, label %83, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %32, i64 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 48
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %83

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %32, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %42 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 1, i32 2
  %45 = bitcast %"class.blink::Member.318"* %44 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %48, %50
  %52 = bitcast %"class.blink::HTMLElement"* %32 to %"class.blink::HTMLOptionElement"*
  br i1 %51, label %53, label %83

53:                                               ; preds = %39
  %54 = tail call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %52) #11
  %55 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* %25, i32 0) #11
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"* %57) #11
  %59 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #11
  br i1 %58, label %74, label %83

73:                                               ; preds = %69, %53
  br i1 %58, label %74, label %83

74:                                               ; preds = %72, %73
  tail call void @_ZN5blink17HTMLOptionElement16SetSelectedStateEb(%"class.blink::HTMLOptionElement"* nonnull %52, i1 zeroext true) #11
  tail call void @_ZN5blink17HTMLOptionElement8SetDirtyEb(%"class.blink::HTMLOptionElement"* nonnull %52, i1 zeroext true) #11
  %75 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 7
  %76 = ptrtoint %"class.blink::HTMLElement"* %32 to i64
  %77 = bitcast %"class.blink::Member.1836"* %75 to i64*
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %168, label %80

80:                                               ; preds = %74
  %81 = bitcast %"class.blink::HTMLElement"* %32 to i8*
  %82 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %81) #11
  br label %168

83:                                               ; preds = %39, %24, %34, %29, %72, %73
  %84 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* %25, i32 0) #11
  %85 = tail call i32 @_ZNK5blink17HTMLSelectElement21SearchOptionsForValueERKN3WTF6StringEjj(%"class.blink::HTMLSelectElement"* %0, %"class.WTF::String"* dereferenceable(8) %84, i32 0, i32 %10)
  %86 = icmp eq i32 %85, -1
  br i1 %86, label %168, label %87

87:                                               ; preds = %83
  %88 = tail call dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"* %8, i32 %85) #11
  %89 = bitcast %"class.blink::Member.1817"* %88 to %"class.blink::HTMLOptionElement"**
  %90 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %89, align 8
  tail call void @_ZN5blink17HTMLOptionElement16SetSelectedStateEb(%"class.blink::HTMLOptionElement"* %90, i1 zeroext true) #11
  tail call void @_ZN5blink17HTMLOptionElement8SetDirtyEb(%"class.blink::HTMLOptionElement"* %90, i1 zeroext true) #11
  %91 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 7
  %92 = ptrtoint %"class.blink::HTMLOptionElement"* %90 to i64
  %93 = bitcast %"class.blink::Member.1836"* %91 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %168, label %96

96:                                               ; preds = %87
  %97 = bitcast %"class.blink::HTMLOptionElement"* %90 to i8*
  %98 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %97) #11
  br label %168

99:                                               ; preds = %20, %163
  %100 = phi i32 [ 0, %20 ], [ %165, %163 ]
  %101 = phi i32 [ 0, %20 ], [ %164, %163 ]
  %102 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* %21, i32 %100) #11
  %103 = or i32 %100, 1
  %104 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* %21, i32 %103) #11
  %105 = tail call i32 @_ZNK3WTF6String6ToUIntEPb(%"class.WTF::String"* %104, i8* null) #11
  %106 = icmp ult i32 %105, %10
  br i1 %106, label %107, label %151

107:                                              ; preds = %99
  %108 = tail call dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"* %8, i32 %105) #11
  %109 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %108, i64 0, i32 0, i32 0
  %110 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %109, align 8
  %111 = icmp eq %"class.blink::HTMLElement"* %110, null
  br i1 %111, label %151, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %110, i64 0, i32 0, i32 0, i32 0, i32 1
  %114 = load i32, i32* %113, align 8
  %115 = and i32 %114, 48
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %151

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %110, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %120 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %118, i64 1, i32 2
  %121 = bitcast %"class.blink::Member.318"* %120 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %122 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %122, i64 0, i32 3, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %119, i64 0, i32 3, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %124, %126
  %128 = bitcast %"class.blink::HTMLElement"* %110 to %"class.blink::HTMLOptionElement"*
  br i1 %127, label %129, label %151

129:                                              ; preds = %117
  %130 = tail call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %128) #11
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %102, i64 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %130, %"class.WTF::StringImpl"* %132) #11
  %134 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #11
  br i1 %133, label %149, label %151

148:                                              ; preds = %144, %129
  br i1 %133, label %149, label %151

149:                                              ; preds = %147, %148
  tail call void @_ZN5blink17HTMLOptionElement16SetSelectedStateEb(%"class.blink::HTMLOptionElement"* nonnull %128, i1 zeroext true) #11
  tail call void @_ZN5blink17HTMLOptionElement8SetDirtyEb(%"class.blink::HTMLOptionElement"* nonnull %128, i1 zeroext true) #11
  %150 = add nuw i32 %105, 1
  br label %163

151:                                              ; preds = %117, %99, %112, %107, %147, %148
  %152 = tail call i32 @_ZNK5blink17HTMLSelectElement21SearchOptionsForValueERKN3WTF6StringEjj(%"class.blink::HTMLSelectElement"* %0, %"class.WTF::String"* dereferenceable(8) %102, i32 %101, i32 %10)
  %153 = icmp eq i32 %152, -1
  br i1 %153, label %154, label %157

154:                                              ; preds = %151
  %155 = tail call i32 @_ZNK5blink17HTMLSelectElement21SearchOptionsForValueERKN3WTF6StringEjj(%"class.blink::HTMLSelectElement"* %0, %"class.WTF::String"* dereferenceable(8) %102, i32 0, i32 %101)
  %156 = icmp eq i32 %155, -1
  br i1 %156, label %163, label %157

157:                                              ; preds = %151, %154
  %158 = phi i32 [ %155, %154 ], [ %152, %151 ]
  %159 = tail call dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"* %8, i32 %158) #11
  %160 = bitcast %"class.blink::Member.1817"* %159 to %"class.blink::HTMLOptionElement"**
  %161 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %160, align 8
  tail call void @_ZN5blink17HTMLOptionElement16SetSelectedStateEb(%"class.blink::HTMLOptionElement"* %161, i1 zeroext true) #11
  tail call void @_ZN5blink17HTMLOptionElement8SetDirtyEb(%"class.blink::HTMLOptionElement"* %161, i1 zeroext true) #11
  %162 = add nuw i32 %158, 1
  br label %163

163:                                              ; preds = %157, %154, %149
  %164 = phi i32 [ %150, %149 ], [ %162, %157 ], [ %101, %154 ]
  %165 = add i32 %100, 2
  %166 = load i32, i32* %17, align 4
  %167 = icmp ult i32 %165, %166
  br i1 %167, label %99, label %168

168:                                              ; preds = %163, %16, %96, %87, %80, %74, %83
  %169 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %170 = bitcast %"class.blink::ListedElement.base"* %169 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %170) #11
  %171 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %172 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %171, align 8
  %173 = bitcast %"class.blink::SelectType"* %172 to void (%"class.blink::SelectType"*)***
  %174 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %174, i64 10
  %176 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %175, align 8
  tail call void %176(%"class.blink::SelectType"* %172) #11
  br label %177

177:                                              ; preds = %7, %168
  ret void
}

declare i32 @_ZNK3WTF6String6ToUIntEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink17HTMLSelectElement23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::HTMLSelectElement"*, %"class.blink::FormControlState"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 -1, i32 4, i32 2
  %4 = bitcast i16* %3 to %"class.blink::HTMLSelectElement"*
  tail call void @_ZN5blink17HTMLSelectElement23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::HTMLSelectElement"* %4, %"class.blink::FormControlState"* dereferenceable(24) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement16AppendToFormDataERNS_8FormDataE(%"class.blink::HTMLSelectElement"*, %"class.blink::FormData"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::OptionListIterator", align 8
  %4 = alloca %"class.blink::OptionListIterator", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.blink::ListedElement.base"* %6 to %"class.blink::ListedElement"*
  %8 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ListedElement7GetNameEv(%"class.blink::ListedElement"* %7) #11
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %66, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %66, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 1
  %19 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  %20 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19)
  %21 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %22, align 8
  %23 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19)
  store %"class.blink::HTMLSelectElement"* null, %"class.blink::HTMLSelectElement"** %25, align 8
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %18, align 8
  br label %36

26:                                               ; preds = %16
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %3, %"class.blink::HTMLOptionElement"* null) #11
  %27 = bitcast %"class.blink::OptionListIterator"* %3 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19)
  %30 = bitcast %"class.blink::OptionListIterator"* %4 to i64*
  store i64 %28, i64* %30, align 8
  store %"class.blink::HTMLOptionElement"* %29, %"class.blink::HTMLOptionElement"** %18, align 8
  %31 = icmp eq %"class.blink::HTMLOptionElement"* %29, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0
  %34 = bitcast %"class.WTF::String"* %5 to i8*
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  br label %37

36:                                               ; preds = %60, %63, %24, %26
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  br label %66

37:                                               ; preds = %32, %63
  %38 = phi %"class.blink::HTMLOptionElement"* [ %29, %32 ], [ %64, %63 ]
  %39 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %38) #11
  br i1 %39, label %40, label %60

40:                                               ; preds = %37
  %41 = call zeroext i1 @_ZNK5blink17HTMLOptionElement21IsDisabledFormControlEv(%"class.blink::HTMLOptionElement"* nonnull %38) #11
  br i1 %41, label %60, label %42

42:                                               ; preds = %40
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %43 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement5valueEv(%"class.blink::HTMLOptionElement"* nonnull %38) #11
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %35, align 8
  call void @_ZN5blink8FormData17AppendFromElementERKN3WTF6StringES4_(%"class.blink::FormData"* %1, %"class.WTF::String"* dereferenceable(8) %33, %"class.WTF::String"* nonnull dereferenceable(8) %5) #11
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #11
  br label %59

59:                                               ; preds = %42, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br label %60

60:                                               ; preds = %59, %40, %37
  %61 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %18, align 8
  %62 = icmp eq %"class.blink::HTMLOptionElement"* %61, null
  br i1 %62, label %36, label %63

63:                                               ; preds = %60
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %4, %"class.blink::HTMLOptionElement"* nonnull %61) #11
  %64 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %18, align 8
  %65 = icmp eq %"class.blink::HTMLOptionElement"* %64, null
  br i1 %65, label %36, label %37

66:                                               ; preds = %2, %12, %36
  ret void
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ListedElement7GetNameEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare void @_ZN5blink8FormData17AppendFromElementERKN3WTF6StringES4_(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink17HTMLSelectElement16AppendToFormDataERNS_8FormDataE(%"class.blink::HTMLSelectElement"*, %"class.blink::FormData"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 -1, i32 4, i32 2
  %4 = bitcast i16* %3 to %"class.blink::HTMLSelectElement"*
  tail call void @_ZN5blink17HTMLSelectElement16AppendToFormDataERNS_8FormDataE(%"class.blink::HTMLSelectElement"* %4, %"class.blink::FormData"* dereferenceable(56) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement9ResetImplEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::OptionListIterator", align 8
  %3 = alloca %"class.blink::OptionListIterator", align 8
  %4 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 1
  %6 = bitcast %"class.blink::OptionListIterator"* %2 to i8*
  %7 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6)
  %8 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %2, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %2, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %9, align 8
  %10 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6)
  store %"class.blink::HTMLSelectElement"* null, %"class.blink::HTMLSelectElement"** %12, align 8
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %5, align 8
  br label %22

13:                                               ; preds = %1
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %2, %"class.blink::HTMLOptionElement"* null) #11
  %14 = bitcast %"class.blink::OptionListIterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6)
  %17 = bitcast %"class.blink::OptionListIterator"* %3 to i64*
  store i64 %15, i64* %17, align 8
  store %"class.blink::HTMLOptionElement"* %16, %"class.blink::HTMLOptionElement"** %5, align 8
  %18 = icmp eq %"class.blink::HTMLOptionElement"* %16, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kSelectedAttrE, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  br label %31

22:                                               ; preds = %86, %90, %11, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  call void @_ZN5blink17HTMLSelectElement23ResetToDefaultSelectionENS0_11ResetReasonE(%"class.blink::HTMLSelectElement"* %0, i32 1)
  %23 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %24 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %23, align 8
  %25 = bitcast %"class.blink::SelectType"* %24 to void (%"class.blink::SelectType"*)***
  %26 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %26, i64 10
  %28 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %27, align 8
  call void %28(%"class.blink::SelectType"* %24) #11
  %29 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = bitcast %"class.blink::ListedElement.base"* %29 to %"class.blink::ListedElement"*
  call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %30) #11
  ret void

31:                                               ; preds = %19, %90
  %32 = phi %"class.blink::HTMLOptionElement"* [ %16, %19 ], [ %91, %90 ]
  %33 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %32, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %33, align 8
  %35 = icmp eq %"class.blink::ElementData"* %34, null
  br i1 %35, label %86, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %34, i64 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.blink::ElementData"* %34 to %"class.blink::UniqueElementData"*
  %43 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %34, i64 1, i32 1
  %44 = bitcast %"class.blink::Member.354"* %43 to %"class.blink::Attribute"**
  %45 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %42, i64 0, i32 2, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %34, i64 1
  %50 = bitcast %"class.blink::ElementData"* %49 to %"class.blink::Attribute"*
  %51 = lshr i32 %38, 1
  %52 = and i32 %51, 268435455
  br label %53

53:                                               ; preds = %48, %41
  %54 = phi %"class.blink::Attribute"* [ %50, %48 ], [ %45, %41 ]
  %55 = phi i32 [ %52, %48 ], [ %47, %41 ]
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %54, i64 %56
  %58 = icmp eq i32 %55, 0
  br i1 %58, label %83, label %59

59:                                               ; preds = %53
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %63

63:                                               ; preds = %79, %59
  %64 = phi %"class.blink::Attribute"* [ %54, %59 ], [ %80, %79 ]
  %65 = phi i32 [ 0, %59 ], [ %81, %79 ]
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %64, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %66, align 8
  %68 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %67, %60
  br i1 %68, label %83, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %71, %72
  br i1 %73, label %74, label %79

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 4, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %76, %77
  br i1 %78, label %83, label %79

79:                                               ; preds = %74, %69
  %80 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %64, i64 1
  %81 = add i32 %65, 1
  %82 = icmp eq %"class.blink::Attribute"* %80, %57
  br i1 %82, label %83, label %63

83:                                               ; preds = %79, %74, %63, %53
  %84 = phi i32 [ -1, %53 ], [ %65, %63 ], [ %65, %74 ], [ -1, %79 ]
  %85 = icmp ne i32 %84, -1
  br label %86

86:                                               ; preds = %31, %83
  %87 = phi i1 [ false, %31 ], [ %85, %83 ]
  call void @_ZN5blink17HTMLOptionElement16SetSelectedStateEb(%"class.blink::HTMLOptionElement"* nonnull %32, i1 zeroext %87) #11
  call void @_ZN5blink17HTMLOptionElement8SetDirtyEb(%"class.blink::HTMLOptionElement"* nonnull %32, i1 zeroext false) #11
  %88 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %5, align 8
  %89 = icmp eq %"class.blink::HTMLOptionElement"* %88, null
  br i1 %89, label %22, label %90

90:                                               ; preds = %86
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %3, %"class.blink::HTMLOptionElement"* nonnull %88) #11
  %91 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %5, align 8
  %92 = icmp eq %"class.blink::HTMLOptionElement"* %91, null
  br i1 %92, label %22, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17HTMLSelectElement18ListIndexForOptionERKNS_17HTMLOptionElementE(%"class.blink::HTMLSelectElement"*, %"class.blink::HTMLOptionElement"* readnone dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %4 = load i8, i8* %3, align 2, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0
  %9 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %1, i64 0, i32 0
  br label %14

14:                                               ; preds = %20, %12
  %15 = phi i32 [ 0, %12 ], [ %21, %20 ]
  %16 = tail call dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"* %8, i32 %15) #11
  %17 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %17, align 8
  %19 = icmp eq %"class.blink::HTMLElement"* %18, %13
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = add nuw i32 %15, 1
  %22 = icmp eq i32 %21, %10
  br i1 %22, label %23, label %14

23:                                               ; preds = %14, %20, %7
  %24 = phi i32 [ -1, %7 ], [ -1, %20 ], [ %15, %14 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AutoscrollController"* @_ZNK5blink17HTMLSelectElement23GetAutoscrollControllerEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %5) #11
  %7 = icmp eq %"class.blink::Page"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %6, i64 0, i32 6, i32 0, i32 0
  %10 = load %"class.blink::AutoscrollController"*, %"class.blink::AutoscrollController"** %9, align 8
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi %"class.blink::AutoscrollController"* [ %10, %8 ], [ null, %1 ]
  ret %"class.blink::AutoscrollController"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBox"* @_ZN5blink17HTMLSelectElement13AutoscrollBoxEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %6) #11
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::LayoutBox"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::LayoutBox"* %9
}

declare %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement14StopAutoscrollEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement21IsDisabledFormControlEv(%"class.blink::HTMLFormControlElement"* %2) #11
  br i1 %3, label %11, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %6 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %5, align 8
  %7 = bitcast %"class.blink::SelectType"* %6 to void (%"class.blink::SelectType"*)***
  %8 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %8, i64 20
  %10 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %9, align 8
  tail call void %10(%"class.blink::SelectType"* %6) #11
  br label %11

11:                                               ; preds = %4, %1
  ret void
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement21IsDisabledFormControlEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLSelectElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %6, label %12, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRareData"**
  %10 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %10, i64 0, i32 1, i32 0, i32 0
  br label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRenderingData"**
  br label %14

14:                                               ; preds = %8, %12
  %15 = phi %"class.blink::NodeRenderingData"** [ %11, %8 ], [ %13, %12 ]
  %16 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %16, i64 0, i32 1
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = icmp eq %"class.blink::LayoutObject"* %18, null
  br i1 %19, label %81, label %20

20:                                               ; preds = %14
  %21 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE, align 8
  %22 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, %25
  br i1 %26, label %32, label %27

27:                                               ; preds = %20
  %28 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kChangeE, align 8
  %29 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %23, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %27, %20
  %33 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 1
  store i8 1, i8* %33, align 1
  br label %34

34:                                               ; preds = %32, %27
  %35 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %36 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement21IsDisabledFormControlEv(%"class.blink::HTMLFormControlElement"* %35) #11
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"* %38, %"class.blink::Event"* dereferenceable(104) %1) #11
  br label %81

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %41 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %40, align 8
  %42 = bitcast %"class.blink::SelectType"* %41 to i1 (%"class.blink::SelectType"*, %"class.blink::Event"*)***
  %43 = load i1 (%"class.blink::SelectType"*, %"class.blink::Event"*)**, i1 (%"class.blink::SelectType"*, %"class.blink::Event"*)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::SelectType"*, %"class.blink::Event"*)*, i1 (%"class.blink::SelectType"*, %"class.blink::Event"*)** %43, i64 1
  %45 = load i1 (%"class.blink::SelectType"*, %"class.blink::Event"*)*, i1 (%"class.blink::SelectType"*, %"class.blink::Event"*)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::SelectType"* %41, %"class.blink::Event"* dereferenceable(104) %1) #11
  br i1 %46, label %47, label %51

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %49 = load i16, i16* %48, align 8
  %50 = or i16 %49, 64
  store i16 %50, i16* %48, align 8
  br label %81

51:                                               ; preds = %39
  %52 = bitcast %"class.blink::Event"* %1 to i1 (%"class.blink::Event"*)***
  %53 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %52, align 8
  %54 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %53, i64 14
  %55 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.blink::Event"* %1) #11
  %57 = bitcast %"class.blink::Event"* %1 to %"class.blink::KeyboardEvent"*
  %58 = select i1 %56, %"class.blink::KeyboardEvent"* %57, %"class.blink::KeyboardEvent"* null
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kKeypressE, align 8
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %60, %62
  %64 = icmp ne %"class.blink::KeyboardEvent"* %58, null
  %65 = and i1 %64, %63
  br i1 %65, label %66, label %79

66:                                               ; preds = %51
  %67 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %58, i64 0, i32 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, 14
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %79

71:                                               ; preds = %66
  %72 = tail call i32 @_ZNK5blink13KeyboardEvent8charCodeEv(%"class.blink::KeyboardEvent"* nonnull %58) #11
  %73 = tail call signext i8 @u_isprint_69(i32 %72) #11
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %71
  tail call void @_ZN5blink17HTMLSelectElement13TypeAheadFindERKNS_13KeyboardEventE(%"class.blink::HTMLSelectElement"* %0, %"class.blink::KeyboardEvent"* nonnull dereferenceable(176) %58)
  %76 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %77 = load i16, i16* %76, align 8
  %78 = or i16 %77, 64
  store i16 %78, i16* %76, align 8
  br label %81

79:                                               ; preds = %71, %66, %51
  %80 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"* %80, %"class.blink::Event"* dereferenceable(104) %1) #11
  br label %81

81:                                               ; preds = %75, %79, %14, %37, %47
  ret void
}

declare void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare i32 @_ZNK5blink13KeyboardEvent8charCodeEv(%"class.blink::KeyboardEvent"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement13TypeAheadFindERKNS_13KeyboardEventE(%"class.blink::HTMLSelectElement"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 4
  %4 = tail call i32 @_ZN5blink9TypeAhead11HandleEventERKNS_13KeyboardEventEj(%"class.blink::TypeAhead"* %3, %"class.blink::KeyboardEvent"* dereferenceable(176) %1, i32 3) #11
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %8 = load i8, i8* %7, align 2, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp ugt i32 %13, %4
  br i1 %14, label %15, label %41

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0
  %17 = tail call dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"* %16, i32 %4) #11
  %18 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %18, align 8
  %20 = icmp eq %"class.blink::HTMLElement"* %19, null
  br i1 %20, label %41, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %19, i64 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 48
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %41

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %19, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %27, i64 1, i32 2
  %32 = bitcast %"class.blink::Member.318"* %31 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  %39 = bitcast %"class.blink::HTMLElement"* %19 to %"class.blink::HTMLOptionElement"*
  %40 = select i1 %38, %"class.blink::HTMLOptionElement"* %39, %"class.blink::HTMLOptionElement"* null
  br label %41

41:                                               ; preds = %11, %15, %21, %26
  %42 = phi %"class.blink::HTMLOptionElement"* [ null, %11 ], [ %40, %26 ], [ null, %21 ], [ null, %15 ]
  tail call void @_ZN5blink17HTMLSelectElement12SelectOptionEPNS_17HTMLOptionElementEj(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* %42, i32 7)
  %43 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %44 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %43, align 8
  %45 = bitcast %"class.blink::SelectType"* %44 to void (%"class.blink::SelectType"*)***
  %46 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %46, i64 21
  %48 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %47, align 8
  tail call void %48(%"class.blink::SelectType"* %44) #11
  br label %49

49:                                               ; preds = %2, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLOptionElement"* @_ZNK5blink17HTMLSelectElement18LastSelectedOptionEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 2, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %53, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0
  %12 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %12, i64 0, i32 0, i32 0, i32 0
  br label %14

14:                                               ; preds = %10, %49
  %15 = phi i32 [ %8, %10 ], [ %16, %49 ]
  %16 = add i32 %15, -1
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %14
  %19 = load i8, i8* %2, align 2, !range !3
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %22

22:                                               ; preds = %21, %18
  %23 = load i32, i32* %7, align 4
  %24 = icmp ugt i32 %23, %16
  br i1 %24, label %25, label %49

25:                                               ; preds = %22
  %26 = tail call dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"* %11, i32 %16) #11
  %27 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %27, align 8
  %29 = icmp eq %"class.blink::HTMLElement"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %28, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 48
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %49

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %28, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %36, i64 1, i32 2
  %39 = bitcast %"class.blink::Member.318"* %38 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %42, %44
  br i1 %45, label %46, label %49

46:                                               ; preds = %35
  %47 = bitcast %"class.blink::HTMLElement"* %28 to %"class.blink::HTMLOptionElement"*
  %48 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %47) #11
  br i1 %48, label %51, label %49

49:                                               ; preds = %35, %25, %30, %22, %14, %46
  %50 = icmp eq i32 %16, 0
  br i1 %50, label %53, label %14

51:                                               ; preds = %46
  %52 = bitcast %"class.blink::HTMLElement"* %28 to %"class.blink::HTMLOptionElement"*
  br label %53

53:                                               ; preds = %49, %51, %6
  %54 = phi %"class.blink::HTMLOptionElement"* [ null, %6 ], [ %52, %51 ], [ null, %49 ]
  ret %"class.blink::HTMLOptionElement"* %54
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17HTMLSelectElement21IndexOfSelectedOptionEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 2, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Member.1817"*, %"class.blink::Member.1817"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %46, label %14

14:                                               ; preds = %6
  %15 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %15, i64 0, i32 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %42, %14
  %18 = phi %"class.blink::Member.1817"* [ %8, %14 ], [ %44, %42 ]
  %19 = phi i32 [ 0, %14 ], [ %43, %42 ]
  %20 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %18, i64 0, i32 0, i32 0
  %21 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %20, align 8
  %22 = icmp eq %"class.blink::HTMLElement"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %21, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 48
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %42

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %21, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 1, i32 2
  %32 = bitcast %"class.blink::Member.318"* %31 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %28
  %40 = bitcast %"class.blink::HTMLElement"* %21 to %"class.blink::HTMLOptionElement"*
  %41 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %40) #11
  br i1 %41, label %46, label %42

42:                                               ; preds = %39, %28, %23, %17
  %43 = add nuw nsw i32 %19, 1
  %44 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %18, i64 1
  %45 = icmp eq %"class.blink::Member.1817"* %44, %12
  br i1 %45, label %46, label %17

46:                                               ; preds = %39, %42, %6
  %47 = phi i32 [ -1, %6 ], [ %19, %39 ], [ -1, %42 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn200_NK5blink17HTMLSelectElement21IndexOfSelectedOptionEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 -1, i32 0, i32 0, i32 1, i32 7
  %3 = getelementptr inbounds i8, i8* %2, i64 330
  %4 = load i8, i8* %3, align 2, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i8* %2 to %"class.blink::HTMLSelectElement"*
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %7) #11
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds i8, i8* %2, i64 208
  %10 = bitcast i8* %9 to %"class.blink::Member.1817"**
  %11 = load %"class.blink::Member.1817"*, %"class.blink::Member.1817"** %10, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 220
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %11, i64 %15
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %50, label %18

18:                                               ; preds = %8
  %19 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %19, i64 0, i32 0, i32 0, i32 0
  br label %21

21:                                               ; preds = %46, %18
  %22 = phi %"class.blink::Member.1817"* [ %11, %18 ], [ %48, %46 ]
  %23 = phi i32 [ 0, %18 ], [ %47, %46 ]
  %24 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %22, i64 0, i32 0, i32 0
  %25 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %24, align 8
  %26 = icmp eq %"class.blink::HTMLElement"* %25, null
  br i1 %26, label %46, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %25, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 48
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %46

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %25, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 1, i32 2
  %36 = bitcast %"class.blink::Member.318"* %35 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %39, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %32
  %44 = bitcast %"class.blink::HTMLElement"* %25 to %"class.blink::HTMLOptionElement"*
  %45 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %44) #11
  br i1 %45, label %50, label %46

46:                                               ; preds = %43, %32, %27, %21
  %47 = add nuw nsw i32 %23, 1
  %48 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %22, i64 1
  %49 = icmp eq %"class.blink::Member.1817"* %48, %16
  br i1 %49, label %50, label %21

50:                                               ; preds = %43, %46, %8
  %51 = phi i32 [ -1, %8 ], [ -1, %46 ], [ %23, %43 ]
  ret i32 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17HTMLSelectElement11OptionCountEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 2, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn200_NK5blink17HTMLSelectElement11OptionCountEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 -1, i32 0, i32 0, i32 1, i32 7
  %3 = getelementptr inbounds i8, i8* %2, i64 330
  %4 = load i8, i8* %3, align 2, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i8* %2 to %"class.blink::HTMLSelectElement"*
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds i8, i8* %2, i64 220
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17HTMLSelectElement13OptionAtIndexEi(%"class.blink::HTMLSelectElement"*, i32) unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %42, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %6 = load i8, i8* %5, align 2, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %9

9:                                                ; preds = %8, %4
  %10 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp ugt i32 %11, %1
  br i1 %12, label %13, label %42

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0
  %15 = tail call dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"* %14, i32 %1) #11
  %16 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %16, align 8
  %18 = icmp eq %"class.blink::HTMLElement"* %17, null
  br i1 %18, label %42, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %17, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 48
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %42

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %17, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 1, i32 2
  %30 = bitcast %"class.blink::Member.318"* %29 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  %37 = bitcast %"class.blink::HTMLElement"* %17 to %"class.blink::HTMLOptionElement"*
  br i1 %36, label %38, label %42

38:                                               ; preds = %24
  %39 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement21IsDisabledFormControlEv(%"class.blink::HTMLOptionElement"* nonnull %37) #11
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = tail call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement12DisplayLabelEv(%"class.blink::HTMLOptionElement"* nonnull %37) #11
  br label %42

42:                                               ; preds = %24, %13, %19, %9, %2, %38, %40
  %43 = phi %"class.WTF::StringImpl"* [ %41, %40 ], [ null, %38 ], [ null, %2 ], [ null, %9 ], [ null, %24 ], [ null, %19 ], [ null, %13 ]
  ret %"class.WTF::StringImpl"* %43
}

declare %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement12DisplayLabelEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZThn200_NK5blink17HTMLSelectElement13OptionAtIndexEi(%"class.blink::HTMLSelectElement"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 -1, i32 0, i32 0, i32 1, i32 7
  %4 = bitcast i8* %3 to %"class.blink::HTMLSelectElement"*
  %5 = icmp slt i32 %1, 0
  br i1 %5, label %46, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %3, i64 330
  %8 = load i8, i8* %7, align 2, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %4) #11
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds i8, i8* %3, i64 220
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = icmp ugt i32 %14, %1
  br i1 %15, label %16, label %46

16:                                               ; preds = %11
  %17 = getelementptr inbounds i8, i8* %3, i64 208
  %18 = bitcast i8* %17 to %"class.WTF::Vector.1814"*
  %19 = tail call dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"* %18, i32 %1) #11
  %20 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %20, align 8
  %22 = icmp eq %"class.blink::HTMLElement"* %21, null
  br i1 %22, label %46, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %21, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 48
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %46

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %21, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 1, i32 2
  %34 = bitcast %"class.blink::Member.318"* %33 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, %39
  %41 = bitcast %"class.blink::HTMLElement"* %21 to %"class.blink::HTMLOptionElement"*
  br i1 %40, label %42, label %46

42:                                               ; preds = %28
  %43 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement21IsDisabledFormControlEv(%"class.blink::HTMLOptionElement"* nonnull %41) #11
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = tail call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement12DisplayLabelEv(%"class.blink::HTMLOptionElement"* nonnull %41) #11
  br label %46

46:                                               ; preds = %2, %11, %16, %23, %28, %42, %44
  %47 = phi %"class.WTF::StringImpl"* [ %45, %44 ], [ null, %42 ], [ null, %2 ], [ null, %11 ], [ null, %28 ], [ null, %23 ], [ null, %16 ]
  ret %"class.WTF::StringImpl"* %47
}

declare i32 @_ZN5blink9TypeAhead11HandleEventERKNS_13KeyboardEventEj(%"class.blink::TypeAhead"*, %"class.blink::KeyboardEvent"* dereferenceable(176), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement23SelectOptionByAccessKeyEPNS_17HTMLOptionElementE(%"class.blink::HTMLSelectElement"*, %"class.blink::HTMLOptionElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = trunc i32 %5 to i8
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = tail call zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"* %3) #11
  br i1 %9, label %12, label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element5focusEv(%"class.blink::Element"* %11) #11
  tail call void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"* %3, %"class.blink::Event"* null, i32 1) #11
  br label %12

12:                                               ; preds = %10, %8
  %13 = icmp eq %"class.blink::HTMLOptionElement"* %1, null
  br i1 %13, label %44, label %14

14:                                               ; preds = %12
  %15 = tail call %"class.blink::HTMLSelectElement"* @_ZNK5blink17HTMLOptionElement18OwnerSelectElementEv(%"class.blink::HTMLOptionElement"* nonnull %1) #11
  %16 = icmp eq %"class.blink::HTMLSelectElement"* %15, %0
  br i1 %16, label %17, label %44

17:                                               ; preds = %14
  %18 = tail call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #11
  tail call void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %18) #11
  %19 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 10
  %20 = load i8, i8* %19, align 1, !range !3
  %21 = xor i8 %20, 3
  %22 = zext i8 %21 to i32
  %23 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %1) #11
  br i1 %23, label %24, label %30

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 9
  %26 = load i8, i8* %25, align 8, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZN5blink17HTMLSelectElement12SelectOptionEPNS_17HTMLOptionElementEj(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* null, i32 %22)
  br label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink17HTMLOptionElement16SetSelectedStateEb(%"class.blink::HTMLOptionElement"* nonnull %1, i1 zeroext false) #11
  br label %31

30:                                               ; preds = %17
  tail call void @_ZN5blink17HTMLSelectElement12SelectOptionEPNS_17HTMLOptionElementEj(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* nonnull %1, i32 %22)
  br label %31

31:                                               ; preds = %28, %29, %30
  tail call void @_ZN5blink17HTMLOptionElement8SetDirtyEb(%"class.blink::HTMLOptionElement"* nonnull %1, i1 zeroext true) #11
  %32 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %33 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %32, align 8
  %34 = bitcast %"class.blink::SelectType"* %33 to void (%"class.blink::SelectType"*)***
  %35 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %35, i64 21
  %37 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %36, align 8
  tail call void %37(%"class.blink::SelectType"* %33) #11
  %38 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %32, align 8
  %39 = bitcast %"class.blink::SelectType"* %38 to void (%"class.blink::SelectType"*)***
  %40 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %40, i64 16
  %42 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %41, align 8
  tail call void %42(%"class.blink::SelectType"* %38) #11
  %43 = tail call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #11
  tail call void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %43) #11
  br label %44

44:                                               ; preds = %14, %12, %31
  ret void
}

declare %"class.blink::HTMLSelectElement"* @_ZNK5blink17HTMLOptionElement18OwnerSelectElementEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement21FinishParsingChildrenEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::OptionListIterator", align 8
  %3 = alloca %"class.blink::OptionListIterator", align 8
  %4 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  tail call void @_ZN5blink31HTMLFormControlElementWithState21FinishParsingChildrenEv(%"class.blink::HTMLFormControlElementWithState"* %4) #11
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 9
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %51

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %10 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %9, align 8
  %11 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 1
  %13 = bitcast %"class.blink::OptionListIterator"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %2, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %2, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %15, align 8
  %16 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  %18 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false)
  br label %34

19:                                               ; preds = %8
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %2, %"class.blink::HTMLOptionElement"* null) #11
  %20 = bitcast %"class.blink::OptionListIterator"* %2 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  %23 = bitcast %"class.blink::OptionListIterator"* %3 to i64*
  store i64 %21, i64* %23, align 8
  store %"class.blink::HTMLOptionElement"* %22, %"class.blink::HTMLOptionElement"** %12, align 8
  %24 = icmp eq %"class.blink::HTMLOptionElement"* %22, null
  br i1 %24, label %34, label %25

25:                                               ; preds = %19, %31
  %26 = phi %"class.blink::HTMLOptionElement"* [ %32, %31 ], [ %22, %19 ]
  %27 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %26) #11
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %12, align 8
  %30 = icmp eq %"class.blink::HTMLOptionElement"* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %3, %"class.blink::HTMLOptionElement"* nonnull %29) #11
  %32 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %12, align 8
  %33 = icmp eq %"class.blink::HTMLOptionElement"* %32, null
  br i1 %33, label %34, label %25

34:                                               ; preds = %28, %31, %25, %17, %19
  %35 = phi %"class.blink::HTMLOptionElement"* [ null, %19 ], [ null, %17 ], [ null, %28 ], [ null, %31 ], [ %26, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %36 = bitcast %"class.blink::SelectType"* %10 to void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)***
  %37 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)**, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %37, i64 17
  %39 = load void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)*, void (%"class.blink::SelectType"*, %"class.blink::HTMLOptionElement"*)** %38, align 8
  call void %39(%"class.blink::SelectType"* %10, %"class.blink::HTMLOptionElement"* %35) #11
  %40 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  %44 = call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %43) #11
  %45 = icmp eq %"class.blink::AXObjectCache"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %34
  %47 = bitcast %"class.blink::AXObjectCache"* %44 to void (%"class.blink::AXObjectCache"*, %"class.blink::HTMLSelectElement"*)***
  %48 = load void (%"class.blink::AXObjectCache"*, %"class.blink::HTMLSelectElement"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::HTMLSelectElement"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::HTMLSelectElement"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::HTMLSelectElement"*)** %48, i64 17
  %50 = load void (%"class.blink::AXObjectCache"*, %"class.blink::HTMLSelectElement"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::HTMLSelectElement"*)** %49, align 8
  call void %50(%"class.blink::AXObjectCache"* nonnull %44, %"class.blink::HTMLSelectElement"* %0) #11
  br label %51

51:                                               ; preds = %1, %46, %34
  ret void
}

declare void @_ZN5blink31HTMLFormControlElementWithState21FinishParsingChildrenEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17HTMLSelectElement22AnonymousIndexedSetterEjPNS_17HTMLOptionElementERNS_14ExceptionStateE(%"class.blink::HTMLSelectElement"*, i32, %"class.blink::HTMLOptionElement"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = icmp eq %"class.blink::HTMLOptionElement"* %2, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @_ZN5blink17HTMLSelectElement6removeEi(%"class.blink::HTMLSelectElement"* %0, i32 %1)
  br label %8

7:                                                ; preds = %4
  tail call void @_ZN5blink17HTMLSelectElement9SetOptionEjPNS_17HTMLOptionElementERNS_14ExceptionStateE(%"class.blink::HTMLSelectElement"* %0, i32 %1, %"class.blink::HTMLOptionElement"* nonnull %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %8

8:                                                ; preds = %7, %6
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLSelectElement20IsInteractiveContentEv(%"class.blink::HTMLSelectElement"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17HTMLSelectElement5TraceEPNS_7VisitorE(%"class.blink::HTMLSelectElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::HeapVector.1811"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector.1811"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #11
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 7
  %20 = bitcast %"class.blink::Member.1836"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = inttoptr i64 %21 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HTMLOptionElementEE5TraceEPNS_7VisitorEPKv) #11
  br label %29

29:                                               ; preds = %18, %23
  %30 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 8
  %31 = bitcast %"class.blink::Member.1836"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HTMLOptionElementEE5TraceEPNS_7VisitorEPKv) #11
  br label %40

40:                                               ; preds = %29, %34
  %41 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14
  %42 = bitcast %"class.blink::Member.1840"* %41 to i64*
  %43 = load atomic i64, i64* %42 monotonic, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  %46 = inttoptr i64 %43 to i8*
  %47 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, i64 5
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %49, align 8
  tail call void %50(%"class.blink::Visitor"* %1, i8* nonnull %46, i8* nonnull %46, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10SelectTypeEE5TraceEPNS_7VisitorEPKv) #11
  br label %51

51:                                               ; preds = %40, %45
  %52 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZNK5blink22HTMLFormControlElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormControlElement"* %52, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink22HTMLFormControlElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormControlElement"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink17HTMLSelectElement5TraceEPNS_7VisitorE(%"class.blink::HTMLSelectElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 -1, i32 4, i32 2
  %4 = bitcast i16* %3 to %"class.blink::HTMLSelectElement"*
  tail call void @_ZNK5blink17HTMLSelectElement5TraceEPNS_7VisitorE(%"class.blink::HTMLSelectElement"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::HTMLSelectElement"* nocapture readonly, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call %"class.blink::HTMLSlotElement"* @_ZN5blink15HTMLSlotElement31CreateUserAgentCustomAssignSlotERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %7) #11
  %9 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %3, %"class.blink::Node"* %9) #11
  %11 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %43, label %14

14:                                               ; preds = %2
  %15 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %15, i64 0, i32 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %40, %14
  %18 = phi %"class.blink::Node"* [ %12, %14 ], [ %41, %40 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 48
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 5, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  br label %38

26:                                               ; preds = %17
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 1, i32 2
  %29 = bitcast %"class.blink::Member.318"* %28 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %32, %34
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 5, i32 0, i32 0
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  br i1 %35, label %40, label %38

38:                                               ; preds = %26, %23
  %39 = phi %"class.blink::Node"* [ %25, %23 ], [ %37, %26 ]
  tail call void @_ZN5blink4Node6removeEv(%"class.blink::Node"* nonnull %18) #11
  br label %40

40:                                               ; preds = %38, %26
  %41 = phi %"class.blink::Node"* [ %37, %26 ], [ %39, %38 ]
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %43, label %17

43:                                               ; preds = %40, %2
  %44 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %45 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %44, align 8
  %46 = bitcast %"class.blink::SelectType"* %45 to void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)***
  %47 = load void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)**, void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)*, void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)** %47, i64 23
  %49 = load void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)*, void (%"class.blink::SelectType"*, %"class.blink::ShadowRoot"*)** %48, align 8
  tail call void %49(%"class.blink::SelectType"* %45, %"class.blink::ShadowRoot"* dereferenceable(208) %1) #11
  %50 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %44, align 8
  %51 = bitcast %"class.blink::SelectType"* %50 to void (%"class.blink::SelectType"*)***
  %52 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %52, i64 10
  %54 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %53, align 8
  tail call void %54(%"class.blink::SelectType"* %50) #11
  ret void
}

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::HTMLSlotElement"* @_ZN5blink15HTMLSlotElement31CreateUserAgentCustomAssignSlotERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #1

declare void @_ZN5blink4Node6removeEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(104) %"class.blink::Element"* @_ZNK5blink17HTMLSelectElement12InnerElementEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %2, align 8
  %4 = bitcast %"class.blink::SelectType"* %3 to %"class.blink::Element"* (%"class.blink::SelectType"*)***
  %5 = load %"class.blink::Element"* (%"class.blink::SelectType"*)**, %"class.blink::Element"* (%"class.blink::SelectType"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::SelectType"*)*, %"class.blink::Element"* (%"class.blink::SelectType"*)** %5, i64 24
  %7 = load %"class.blink::Element"* (%"class.blink::SelectType"*)*, %"class.blink::Element"* (%"class.blink::SelectType"*)** %6, align 8
  %8 = tail call dereferenceable(104) %"class.blink::Element"* %7(%"class.blink::SelectType"* %3) #11
  ret %"class.blink::Element"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink17HTMLSelectElement17PopupRootAXObjectEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %2, align 8
  %4 = bitcast %"class.blink::SelectType"* %3 to %"class.blink::AXObject"* (%"class.blink::SelectType"*)***
  %5 = load %"class.blink::AXObject"* (%"class.blink::SelectType"*)**, %"class.blink::AXObject"* (%"class.blink::SelectType"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::AXObject"* (%"class.blink::SelectType"*)*, %"class.blink::AXObject"* (%"class.blink::SelectType"*)** %5, i64 30
  %7 = load %"class.blink::AXObject"* (%"class.blink::SelectType"*)*, %"class.blink::AXObject"* (%"class.blink::SelectType"*)** %6, align 8
  %8 = tail call %"class.blink::AXObject"* %7(%"class.blink::SelectType"* %3) #11
  ret %"class.blink::AXObject"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLOptionElement"* @_ZN5blink17HTMLSelectElement30SpatialNavigationFocusedOptionEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %2, align 8
  %4 = bitcast %"class.blink::SelectType"* %3 to %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)***
  %5 = load %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)**, %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)*, %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)** %5, i64 14
  %7 = load %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)*, %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)** %6, align 8
  %8 = tail call %"class.blink::HTMLOptionElement"* %7(%"class.blink::SelectType"* %3) #11
  ret %"class.blink::HTMLOptionElement"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17HTMLSelectElement8ItemTextERKNS_7ElementE(%"class.blink::HTMLSelectElement"* nocapture readonly, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %5 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE, align 8
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %7 = icmp eq %"class.blink::Element"* %1, null
  br i1 %7, label %46, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %46

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %5, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %17 = bitcast %"class.blink::Member.318"* %16 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, %22
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLOptGroupElement"*
  %26 = tail call %"class.WTF::StringImpl"* @_ZNK5blink19HTMLOptGroupElement14GroupLabelTextEv(%"class.blink::HTMLOptGroupElement"* nonnull %25) #11
  %27 = ptrtoint %"class.WTF::StringImpl"* %26 to i64
  %28 = bitcast %"class.WTF::String"* %3 to i64*
  store i64 %27, i64* %28, align 8
  br label %46

29:                                               ; preds = %13
  %30 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %34 = bitcast %"class.blink::Member.318"* %33 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, %39
  br i1 %40, label %41, label %46

41:                                               ; preds = %29
  %42 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLOptionElement"*
  %43 = tail call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement31TextIndentedToRespectGroupLabelEv(%"class.blink::HTMLOptionElement"* nonnull %42) #11
  %44 = ptrtoint %"class.WTF::StringImpl"* %43 to i64
  %45 = bitcast %"class.WTF::String"* %3 to i64*
  store i64 %44, i64* %45, align 8
  br label %46

46:                                               ; preds = %41, %8, %24, %2, %29
  %47 = phi %"class.WTF::StringImpl"* [ null, %2 ], [ null, %29 ], [ %43, %41 ], [ %26, %24 ], [ null, %8 ]
  %48 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %51, label %57, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.blink::NodeData"** %52 to %"class.blink::NodeRareData"**
  %55 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %55, i64 0, i32 1, i32 0, i32 0
  br label %59

57:                                               ; preds = %46
  %58 = bitcast %"class.blink::NodeData"** %52 to %"class.blink::NodeRenderingData"**
  br label %59

59:                                               ; preds = %53, %57
  %60 = phi %"class.blink::NodeRenderingData"** [ %56, %53 ], [ %58, %57 ]
  %61 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %61, i64 0, i32 1
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  %64 = icmp eq %"class.blink::LayoutObject"* %63, null
  br i1 %64, label %95, label %65

65:                                               ; preds = %59
  br i1 %51, label %70, label %66

66:                                               ; preds = %65
  %67 = bitcast %"class.blink::NodeData"** %52 to %"class.blink::NodeRareData"**
  %68 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %68, i64 0, i32 1, i32 0, i32 0
  br label %72

70:                                               ; preds = %65
  %71 = bitcast %"class.blink::NodeData"** %52 to %"class.blink::NodeRenderingData"**
  br label %72

72:                                               ; preds = %66, %70
  %73 = phi %"class.blink::NodeRenderingData"** [ %69, %66 ], [ %71, %70 ]
  %74 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %74, i64 0, i32 1
  %76 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %76, i64 0, i32 5, i32 0
  %78 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %77, align 8
  %79 = icmp eq %"class.blink::ComputedStyle"* %78, null
  br i1 %79, label %95, label %80

80:                                               ; preds = %72
  br i1 %51, label %85, label %81

81:                                               ; preds = %80
  %82 = bitcast %"class.blink::NodeData"** %52 to %"class.blink::NodeRareData"**
  %83 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %83, i64 0, i32 1, i32 0, i32 0
  br label %87

85:                                               ; preds = %80
  %86 = bitcast %"class.blink::NodeData"** %52 to %"class.blink::NodeRenderingData"**
  br label %87

87:                                               ; preds = %81, %85
  %88 = phi %"class.blink::NodeRenderingData"** [ %84, %81 ], [ %86, %85 ]
  %89 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %89, i64 0, i32 1
  %91 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %91, i64 0, i32 5, i32 0
  %93 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %92, align 8
  call void @_ZNK5blink13ComputedStyle18ApplyTextTransformEPN3WTF6StringEDs(%"class.blink::ComputedStyle"* %93, %"class.WTF::String"* nonnull %3, i16 zeroext 32) #11
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  br label %95

95:                                               ; preds = %87, %59, %72
  %96 = phi %"class.WTF::StringImpl"* [ %94, %87 ], [ %47, %59 ], [ %47, %72 ]
  ret %"class.WTF::StringImpl"* %96
}

declare %"class.WTF::StringImpl"* @_ZNK5blink19HTMLOptGroupElement14GroupLabelTextEv(%"class.blink::HTMLOptGroupElement"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement31TextIndentedToRespectGroupLabelEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

declare void @_ZNK5blink13ComputedStyle18ApplyTextTransformEPN3WTF6StringEDs(%"class.blink::ComputedStyle"*, %"class.WTF::String"*, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLSelectElement17ItemIsDisplayNoneERNS_7ElementE(%"class.blink::HTMLSelectElement"* nocapture readnone, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %5 = icmp eq %"class.blink::Element"* %1, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = load i32, i32* inttoptr (i64 16 to i32*), align 16
  br label %27

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 2
  %17 = bitcast %"class.blink::Member.318"* %16 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, %22
  br i1 %23, label %24, label %27

24:                                               ; preds = %13
  %25 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLOptionElement"*
  %26 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement13IsDisplayNoneEv(%"class.blink::HTMLOptionElement"* nonnull %25) #11
  br label %99

27:                                               ; preds = %6, %13, %8
  %28 = phi i32 [ %7, %6 ], [ %10, %13 ], [ %10, %8 ]
  %29 = and i32 %28, 12
  %30 = icmp eq i32 %29, 0
  %31 = and i32 %28, 1
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %30, label %34, label %47

34:                                               ; preds = %27
  br i1 %32, label %42, label %35

35:                                               ; preds = %34
  %36 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRareData"**
  %37 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %37, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %39, i64 0, i32 2, i32 0
  %41 = bitcast %"class.blink::NodeRareData"* %37 to %"class.blink::NodeRenderingData"*
  br label %60

42:                                               ; preds = %34
  %43 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRenderingData"**
  %44 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %44, i64 0, i32 2, i32 0
  %46 = bitcast %"class.blink::NodeRenderingData"* %44 to %"class.blink::NodeRareData"*
  br label %60

47:                                               ; preds = %27
  %48 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRareData"**
  %49 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %49, i64 0, i32 1, i32 0, i32 0
  %51 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRenderingData"**
  %52 = select i1 %32, %"class.blink::NodeRenderingData"** %51, %"class.blink::NodeRenderingData"** %50
  %53 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %53, i64 0, i32 1
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %56 = icmp eq %"class.blink::LayoutObject"* %55, null
  br i1 %56, label %87, label %57

57:                                               ; preds = %47
  %58 = bitcast %"class.blink::NodeRareData"* %49 to %"class.blink::NodeRenderingData"*
  %59 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 5, i32 0
  br label %60

60:                                               ; preds = %57, %42, %35
  %61 = phi %"class.blink::NodeRenderingData"* [ %58, %57 ], [ %41, %35 ], [ %44, %42 ]
  %62 = phi %"class.blink::NodeRareData"* [ %49, %57 ], [ %37, %35 ], [ %46, %42 ]
  %63 = phi %"class.blink::ComputedStyle"** [ %59, %57 ], [ %40, %35 ], [ %45, %42 ]
  %64 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %63, align 8
  %65 = icmp eq %"class.blink::ComputedStyle"* %64, null
  br i1 %65, label %87, label %66

66:                                               ; preds = %60
  br i1 %30, label %67, label %76

67:                                               ; preds = %66
  br i1 %32, label %73, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %62, i64 0, i32 1, i32 0, i32 0
  %70 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %70, i64 0, i32 2, i32 0
  %72 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %71, align 8
  br label %90

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %61, i64 0, i32 2, i32 0
  %75 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %74, align 8
  br label %90

76:                                               ; preds = %66
  %77 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %62, i64 0, i32 1, i32 0, i32 0
  %78 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRenderingData"**
  %79 = select i1 %32, %"class.blink::NodeRenderingData"** %78, %"class.blink::NodeRenderingData"** %77
  %80 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %80, i64 0, i32 1
  %82 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %81, align 8
  %83 = icmp eq %"class.blink::LayoutObject"* %82, null
  br i1 %83, label %99, label %84

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %82, i64 0, i32 5, i32 0
  %86 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %85, align 8
  br label %90

87:                                               ; preds = %60, %47
  %88 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %89 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %1, i8 zeroext 0, %"class.WTF::AtomicString"* dereferenceable(8) %88) #11
  br label %90

90:                                               ; preds = %68, %73, %84, %87
  %91 = phi %"class.blink::ComputedStyle"* [ %89, %87 ], [ %86, %84 ], [ %72, %68 ], [ %75, %73 ]
  %92 = icmp eq %"class.blink::ComputedStyle"* %91, null
  br i1 %92, label %99, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %91, i64 0, i32 0, i32 9
  %95 = bitcast [20 x i8]* %94 to i160*
  %96 = load i160, i160* %95, align 8
  %97 = and i160 %96, 133143986176
  %98 = icmp eq i160 %97, 94489280512
  br label %99

99:                                               ; preds = %76, %24, %93, %90
  %100 = phi i1 [ %26, %24 ], [ true, %90 ], [ %98, %93 ], [ true, %76 ]
  ret i1 %100
}

declare zeroext i1 @_ZNK5blink17HTMLOptionElement13IsDisplayNoneEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ComputedStyle"* @_ZNK5blink17HTMLSelectElement17ItemComputedStyleERNS_7ElementE(%"class.blink::HTMLSelectElement"* nocapture readnone, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 12
  %6 = icmp eq i32 %5, 0
  %7 = and i32 %4, 1
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %6, label %10, label %23

10:                                               ; preds = %2
  br i1 %8, label %18, label %11

11:                                               ; preds = %10
  %12 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRareData"**
  %13 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %13, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %15, i64 0, i32 2, i32 0
  %17 = bitcast %"class.blink::NodeRareData"* %13 to %"class.blink::NodeRenderingData"*
  br label %36

18:                                               ; preds = %10
  %19 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRenderingData"**
  %20 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %20, i64 0, i32 2, i32 0
  %22 = bitcast %"class.blink::NodeRenderingData"* %20 to %"class.blink::NodeRareData"*
  br label %36

23:                                               ; preds = %2
  %24 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRareData"**
  %25 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %25, i64 0, i32 1, i32 0, i32 0
  %27 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRenderingData"**
  %28 = select i1 %8, %"class.blink::NodeRenderingData"** %27, %"class.blink::NodeRenderingData"** %26
  %29 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %29, i64 0, i32 1
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = icmp eq %"class.blink::LayoutObject"* %31, null
  br i1 %32, label %63, label %33

33:                                               ; preds = %23
  %34 = bitcast %"class.blink::NodeRareData"* %25 to %"class.blink::NodeRenderingData"*
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 5, i32 0
  br label %36

36:                                               ; preds = %11, %18, %33
  %37 = phi %"class.blink::NodeRenderingData"* [ %34, %33 ], [ %17, %11 ], [ %20, %18 ]
  %38 = phi %"class.blink::NodeRareData"* [ %25, %33 ], [ %13, %11 ], [ %22, %18 ]
  %39 = phi %"class.blink::ComputedStyle"** [ %35, %33 ], [ %16, %11 ], [ %21, %18 ]
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %41 = icmp eq %"class.blink::ComputedStyle"* %40, null
  br i1 %41, label %63, label %42

42:                                               ; preds = %36
  br i1 %6, label %43, label %52

43:                                               ; preds = %42
  br i1 %8, label %49, label %44

44:                                               ; preds = %43
  %45 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %38, i64 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %46, i64 0, i32 2, i32 0
  %48 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %47, align 8
  br label %66

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %37, i64 0, i32 2, i32 0
  %51 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %50, align 8
  br label %66

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %38, i64 0, i32 1, i32 0, i32 0
  %54 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRenderingData"**
  %55 = select i1 %8, %"class.blink::NodeRenderingData"** %54, %"class.blink::NodeRenderingData"** %53
  %56 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %56, i64 0, i32 1
  %58 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %57, align 8
  %59 = icmp eq %"class.blink::LayoutObject"* %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 0, i32 5, i32 0
  %62 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %61, align 8
  br label %66

63:                                               ; preds = %23, %36
  %64 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %65 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %1, i8 zeroext 0, %"class.WTF::AtomicString"* dereferenceable(8) %64) #11
  br label %66

66:                                               ; preds = %60, %52, %49, %44, %63
  %67 = phi %"class.blink::ComputedStyle"* [ %65, %63 ], [ %62, %60 ], [ null, %52 ], [ %48, %44 ], [ %51, %49 ]
  ret %"class.blink::ComputedStyle"* %67
}

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17HTMLSelectElement17ClientPaddingLeftEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %2) #11
  %4 = icmp eq %"class.blink::LayoutBox"* %3, null
  br i1 %4, label %65, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %7 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %6, align 8
  %8 = bitcast %"class.blink::SelectType"* %7 to %"class.blink::Element"* (%"class.blink::SelectType"*)***
  %9 = load %"class.blink::Element"* (%"class.blink::SelectType"*)**, %"class.blink::Element"* (%"class.blink::SelectType"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::SelectType"*)*, %"class.blink::Element"* (%"class.blink::SelectType"*)** %9, i64 24
  %11 = load %"class.blink::Element"* (%"class.blink::SelectType"*)*, %"class.blink::Element"* (%"class.blink::SelectType"*)** %10, align 8
  %12 = tail call dereferenceable(104) %"class.blink::Element"* %11(%"class.blink::SelectType"* %7) #11
  %13 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %12, i64 0, i32 0, i32 0
  %14 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %13) #11
  %15 = icmp eq %"class.blink::LayoutBox"* %14, null
  br i1 %15, label %65, label %16

16:                                               ; preds = %5
  %17 = tail call dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() #11
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %3, i64 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8
  %23 = and i160 %22, 41538374868278621028243970633760768
  %24 = icmp eq i160 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %16
  %26 = bitcast %"class.blink::LayoutTheme"* %17 to i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)***
  %27 = load i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)**, i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)*** %26, align 8
  %28 = getelementptr inbounds i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)*, i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)** %27, i64 19
  %29 = load i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)*, i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)** %28, align 8
  %30 = tail call i32 %29(%"class.blink::LayoutTheme"* %17, %"class.blink::ComputedStyle"* dereferenceable(104) %19) #11
  br label %42

31:                                               ; preds = %16
  %32 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %35) #11
  %37 = bitcast %"class.blink::LayoutTheme"* %17 to i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)***
  %38 = load i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)**, i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)*, i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)** %38, i64 20
  %40 = load i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)*, i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)** %39, align 8
  %41 = tail call i32 %40(%"class.blink::LayoutTheme"* %17, %"class.blink::LocalFrame"* %36, %"class.blink::ComputedStyle"* dereferenceable(104) %19) #11
  br label %42

42:                                               ; preds = %31, %25
  %43 = phi i32 [ %30, %25 ], [ %41, %31 ]
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %3, i64 0, i32 0
  %45 = bitcast %"class.blink::LayoutBox"* %3 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %45, align 8
  %47 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %46, i64 120
  %48 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %47, align 8
  %49 = tail call i32 %48(%"class.blink::LayoutBoxModelObject"* %44) #11
  %50 = icmp sgt i32 %43, 33554431
  br i1 %50, label %58, label %51

51:                                               ; preds = %42
  %52 = icmp slt i32 %43, -33554432
  br i1 %52, label %56, label %53

53:                                               ; preds = %51
  %54 = shl i32 %43, 6
  %55 = icmp slt i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51, %53
  %57 = phi i32 [ %54, %53 ], [ -2147483648, %51 ]
  br label %58

58:                                               ; preds = %42, %53, %56
  %59 = phi i32 [ %57, %56 ], [ %54, %53 ], [ 2147483647, %42 ]
  %60 = phi i32 [ -2147483648, %56 ], [ 2147483647, %53 ], [ 2147483647, %42 ]
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 %59) #11
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !5
  br label %65

65:                                               ; preds = %1, %5, %58
  %66 = phi i32 [ %64, %58 ], [ 0, %5 ], [ 0, %1 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17HTMLSelectElement18ClientPaddingRightEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %2) #11
  %4 = icmp eq %"class.blink::LayoutBox"* %3, null
  br i1 %4, label %65, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %7 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %6, align 8
  %8 = bitcast %"class.blink::SelectType"* %7 to %"class.blink::Element"* (%"class.blink::SelectType"*)***
  %9 = load %"class.blink::Element"* (%"class.blink::SelectType"*)**, %"class.blink::Element"* (%"class.blink::SelectType"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::SelectType"*)*, %"class.blink::Element"* (%"class.blink::SelectType"*)** %9, i64 24
  %11 = load %"class.blink::Element"* (%"class.blink::SelectType"*)*, %"class.blink::Element"* (%"class.blink::SelectType"*)** %10, align 8
  %12 = tail call dereferenceable(104) %"class.blink::Element"* %11(%"class.blink::SelectType"* %7) #11
  %13 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %12, i64 0, i32 0, i32 0
  %14 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %13) #11
  %15 = icmp eq %"class.blink::LayoutBox"* %14, null
  br i1 %15, label %65, label %16

16:                                               ; preds = %5
  %17 = tail call dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() #11
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %3, i64 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8
  %23 = and i160 %22, 41538374868278621028243970633760768
  %24 = icmp eq i160 %23, 0
  br i1 %24, label %25, label %36

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Document"*, %"class.blink::Document"** %28, align 8
  %30 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %29) #11
  %31 = bitcast %"class.blink::LayoutTheme"* %17 to i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)***
  %32 = load i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)**, i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)*** %31, align 8
  %33 = getelementptr inbounds i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)*, i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)** %32, i64 20
  %34 = load i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)*, i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)** %33, align 8
  %35 = tail call i32 %34(%"class.blink::LayoutTheme"* %17, %"class.blink::LocalFrame"* %30, %"class.blink::ComputedStyle"* dereferenceable(104) %19) #11
  br label %42

36:                                               ; preds = %16
  %37 = bitcast %"class.blink::LayoutTheme"* %17 to i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)***
  %38 = load i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)**, i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)*, i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)** %38, i64 19
  %40 = load i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)*, i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)** %39, align 8
  %41 = tail call i32 %40(%"class.blink::LayoutTheme"* %17, %"class.blink::ComputedStyle"* dereferenceable(104) %19) #11
  br label %42

42:                                               ; preds = %36, %25
  %43 = phi i32 [ %35, %25 ], [ %41, %36 ]
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %3, i64 0, i32 0
  %45 = bitcast %"class.blink::LayoutBox"* %3 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %45, align 8
  %47 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %46, i64 121
  %48 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %47, align 8
  %49 = tail call i32 %48(%"class.blink::LayoutBoxModelObject"* %44) #11
  %50 = icmp sgt i32 %43, 33554431
  br i1 %50, label %58, label %51

51:                                               ; preds = %42
  %52 = icmp slt i32 %43, -33554432
  br i1 %52, label %56, label %53

53:                                               ; preds = %51
  %54 = shl i32 %43, 6
  %55 = icmp slt i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51, %53
  %57 = phi i32 [ %54, %53 ], [ -2147483648, %51 ]
  br label %58

58:                                               ; preds = %42, %53, %56
  %59 = phi i32 [ %57, %56 ], [ %54, %53 ], [ 2147483647, %42 ]
  %60 = phi i32 [ -2147483648, %56 ], [ 2147483647, %53 ], [ 2147483647, %42 ]
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 %59) #11
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !5
  br label %65

65:                                               ; preds = %1, %5, %58
  %66 = phi i32 [ %64, %58 ], [ 0, %5 ], [ 0, %1 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement12PopupDidHideEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %2, align 8
  %4 = bitcast %"class.blink::SelectType"* %3 to void (%"class.blink::SelectType"*)***
  %5 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %5, i64 27
  %7 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %6, align 8
  tail call void %7(%"class.blink::SelectType"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement24SetIndexToSelectOnCancelEi(%"class.blink::HTMLSelectElement"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 15
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %5 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %4, align 8
  %6 = bitcast %"class.blink::SelectType"* %5 to void (%"class.blink::SelectType"*)***
  %7 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %7, i64 10
  %9 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %8, align 8
  tail call void %9(%"class.blink::SelectType"* %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLOptionElement"* @_ZNK5blink17HTMLSelectElement15OptionToBeShownEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %2, align 8
  %4 = bitcast %"class.blink::SelectType"* %3 to %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)***
  %5 = load %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)**, %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)*, %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)** %5, i64 11
  %7 = load %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)*, %"class.blink::HTMLOptionElement"* (%"class.blink::SelectType"*)** %6, align 8
  %8 = tail call %"class.blink::HTMLOptionElement"* %7(%"class.blink::SelectType"* %3) #11
  ret %"class.blink::HTMLOptionElement"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement19SelectOptionByPopupEi(%"class.blink::HTMLSelectElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::OptionListIterator", align 8
  %4 = alloca %"class.blink::OptionListIterator", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %8) #11
  %10 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %9) #11
  %11 = icmp eq %"class.blink::Document"* %8, %10
  br i1 %11, label %12, label %85

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 15
  store i32 -1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %15 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %14, align 8
  %16 = bitcast %"class.blink::SelectType"* %15 to void (%"class.blink::SelectType"*)***
  %17 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %17, i64 10
  %19 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %18, align 8
  tail call void %19(%"class.blink::SelectType"* %15) #11
  %20 = icmp slt i32 %1, 0
  br i1 %20, label %56, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 11
  %23 = load i8, i8* %22, align 2, !range !3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @_ZNK5blink17HTMLSelectElement15RecalcListItemsEv(%"class.blink::HTMLSelectElement"* %0) #11
  br label %26

26:                                               ; preds = %25, %21
  %27 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp ugt i32 %28, %1
  br i1 %29, label %30, label %56

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 3, i32 0
  %32 = tail call dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"* %31, i32 %1) #11
  %33 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %33, align 8
  %35 = icmp eq %"class.blink::HTMLElement"* %34, null
  br i1 %35, label %56, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %34, i64 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 48
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %56

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %34, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %44 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 1, i32 2
  %47 = bitcast %"class.blink::Member.318"* %46 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %50, %52
  %54 = bitcast %"class.blink::HTMLElement"* %34 to %"class.blink::HTMLOptionElement"*
  %55 = select i1 %53, %"class.blink::HTMLOptionElement"* %54, %"class.blink::HTMLOptionElement"* null
  br label %56

56:                                               ; preds = %12, %26, %30, %36, %41
  %57 = phi %"class.blink::HTMLOptionElement"* [ null, %12 ], [ null, %26 ], [ %55, %41 ], [ null, %36 ], [ null, %30 ]
  %58 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #11
  %59 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 1
  %60 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #11
  %61 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 0
  store %"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLSelectElement"** %61, align 8
  %62 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %62, align 8
  %63 = icmp eq %"class.blink::HTMLSelectElement"* %0, null
  br i1 %63, label %64, label %66

64:                                               ; preds = %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #11
  %65 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 16, i1 false)
  br label %81

66:                                               ; preds = %56
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %3, %"class.blink::HTMLOptionElement"* null) #11
  %67 = bitcast %"class.blink::OptionListIterator"* %3 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #11
  %70 = bitcast %"class.blink::OptionListIterator"* %4 to i64*
  store i64 %68, i64* %70, align 8
  store %"class.blink::HTMLOptionElement"* %69, %"class.blink::HTMLOptionElement"** %59, align 8
  %71 = icmp eq %"class.blink::HTMLOptionElement"* %69, null
  br i1 %71, label %81, label %72

72:                                               ; preds = %66, %78
  %73 = phi %"class.blink::HTMLOptionElement"* [ %79, %78 ], [ %69, %66 ]
  %74 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %73) #11
  br i1 %74, label %81, label %75

75:                                               ; preds = %72
  %76 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %59, align 8
  %77 = icmp eq %"class.blink::HTMLOptionElement"* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %4, %"class.blink::HTMLOptionElement"* nonnull %76) #11
  %79 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %59, align 8
  %80 = icmp eq %"class.blink::HTMLOptionElement"* %79, null
  br i1 %80, label %81, label %72

81:                                               ; preds = %75, %78, %72, %64, %66
  %82 = phi %"class.blink::HTMLOptionElement"* [ null, %66 ], [ null, %64 ], [ null, %75 ], [ null, %78 ], [ %73, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #11
  %83 = icmp eq %"class.blink::HTMLOptionElement"* %57, %82
  br i1 %83, label %85, label %84

84:                                               ; preds = %81
  call void @_ZN5blink17HTMLSelectElement12SelectOptionEPNS_17HTMLOptionElementEj(%"class.blink::HTMLSelectElement"* %0, %"class.blink::HTMLOptionElement"* %57, i32 7)
  br label %85

85:                                               ; preds = %84, %81, %2
  ret void
}

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement14PopupDidCancelEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 15
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, -1
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZN5blink17HTMLSelectElement19SelectOptionByPopupEi(%"class.blink::HTMLSelectElement"* %0, i32 %3)
  br label %6

6:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement27ProvisionalSelectionChangedEj(%"class.blink::HTMLSelectElement"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 15
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %5 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %4, align 8
  %6 = bitcast %"class.blink::SelectType"* %5 to void (%"class.blink::SelectType"*)***
  %7 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %7, i64 10
  %9 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %8, align 8
  tail call void %9(%"class.blink::SelectType"* %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement9ShowPopupEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %2, align 8
  %4 = bitcast %"class.blink::SelectType"* %3 to void (%"class.blink::SelectType"*)***
  %5 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %5, i64 25
  %7 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %6, align 8
  tail call void %7(%"class.blink::SelectType"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement9HidePopupEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %2, align 8
  %4 = bitcast %"class.blink::SelectType"* %3 to void (%"class.blink::SelectType"*)***
  %5 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %5, i64 26
  %7 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %6, align 8
  tail call void %7(%"class.blink::SelectType"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PopupMenu"* @_ZNK5blink17HTMLSelectElement15PopupForTestingEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %2, align 8
  %4 = bitcast %"class.blink::SelectType"* %3 to %"class.blink::PopupMenu"* (%"class.blink::SelectType"*)***
  %5 = load %"class.blink::PopupMenu"* (%"class.blink::SelectType"*)**, %"class.blink::PopupMenu"* (%"class.blink::SelectType"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::PopupMenu"* (%"class.blink::SelectType"*)*, %"class.blink::PopupMenu"* (%"class.blink::SelectType"*)** %5, i64 29
  %7 = load %"class.blink::PopupMenu"* (%"class.blink::SelectType"*)*, %"class.blink::PopupMenu"* (%"class.blink::SelectType"*)** %6, align 8
  %8 = tail call %"class.blink::PopupMenu"* %7(%"class.blink::SelectType"* %3) #11
  ret %"class.blink::PopupMenu"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::HTMLSelectElement"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"* %3, i64 %1) #11
  %4 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %5 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %4, align 8
  %6 = bitcast %"class.blink::SelectType"* %5 to void (%"class.blink::SelectType"*, i64)***
  %7 = load void (%"class.blink::SelectType"*, i64)**, void (%"class.blink::SelectType"*, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::SelectType"*, i64)*, void (%"class.blink::SelectType"*, i64)** %7, i64 6
  %9 = load void (%"class.blink::SelectType"*, i64)*, void (%"class.blink::SelectType"*, i64)** %8, align 8
  tail call void %9(%"class.blink::SelectType"* %5, i64 %1) #11
  ret void
}

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::HTMLSelectElement"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"* %3, %"struct.blink::Node::AttachContext"* dereferenceable(32) %1) #11
  %4 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %5 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %4, align 8
  %6 = bitcast %"class.blink::SelectType"* %5 to void (%"class.blink::SelectType"*)***
  %7 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %7, i64 9
  %9 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %8, align 8
  tail call void %9(%"class.blink::SelectType"* %5) #11
  %10 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 12
  %13 = icmp eq i32 %12, 0
  %14 = and i32 %11, 1
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %13, label %17, label %28

17:                                               ; preds = %2
  br i1 %15, label %24, label %18

18:                                               ; preds = %17
  %19 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRareData"**
  %20 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %20, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %22, i64 0, i32 2, i32 0
  br label %43

24:                                               ; preds = %17
  %25 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRenderingData"**
  %26 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %26, i64 0, i32 2, i32 0
  br label %43

28:                                               ; preds = %2
  br i1 %15, label %33, label %29

29:                                               ; preds = %28
  %30 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRareData"**
  %31 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %31, i64 0, i32 1, i32 0, i32 0
  br label %35

33:                                               ; preds = %28
  %34 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRenderingData"**
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi %"class.blink::NodeRenderingData"** [ %32, %29 ], [ %34, %33 ]
  %37 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %37, i64 0, i32 1
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %40 = icmp eq %"class.blink::LayoutObject"* %39, null
  br i1 %40, label %68, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %39, i64 0, i32 5, i32 0
  br label %43

43:                                               ; preds = %18, %24, %41
  %44 = phi %"class.blink::ComputedStyle"** [ %42, %41 ], [ %23, %18 ], [ %27, %24 ]
  %45 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %44, align 8
  %46 = icmp eq %"class.blink::ComputedStyle"* %45, null
  br i1 %46, label %68, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %45, i64 0, i32 0, i32 9
  %49 = bitcast [20 x i8]* %48 to i160*
  %50 = load i160, i160* %49, align 8
  %51 = and i160 %50, 3802951800684688204490109616128
  %52 = icmp eq i160 %51, 0
  br i1 %52, label %68, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 10
  %55 = load i8, i8* %54, align 1, !range !3
  %56 = icmp eq i8 %55, 0
  %57 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %58 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %58, i64 0, i32 2, i32 0, i32 0
  %60 = load %"class.blink::Document"*, %"class.blink::Document"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %60, i64 0, i32 2
  %62 = bitcast %"class.blink::UseCounter"* %61 to void (%"class.blink::UseCounter"*, i32)***
  %63 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %63, i64 3
  %65 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %64, align 8
  br i1 %56, label %67, label %66

66:                                               ; preds = %53
  tail call void %65(%"class.blink::UseCounter"* %61, i32 2857) #11
  br label %68

67:                                               ; preds = %53
  tail call void %65(%"class.blink::UseCounter"* %61, i32 2856) #11
  br label %68

68:                                               ; preds = %35, %47, %43, %67, %66
  ret void
}

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement16DetachLayoutTreeEb(%"class.blink::HTMLSelectElement"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"* %3, i1 zeroext %1) #11
  %4 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %5 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %4, align 8
  %6 = bitcast %"class.blink::SelectType"* %5 to void (%"class.blink::SelectType"*)***
  %7 = load void (%"class.blink::SelectType"*)**, void (%"class.blink::SelectType"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %7, i64 5
  %9 = load void (%"class.blink::SelectType"*)*, void (%"class.blink::SelectType"*)** %8, align 8
  tail call void %9(%"class.blink::SelectType"* %5) #11
  ret void
}

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement31ResetTypeAheadSessionForTestingEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 4
  tail call void @_ZN5blink9TypeAhead12ResetSessionEv(%"class.blink::TypeAhead"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLSelectElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE(%"class.blink::HTMLSelectElement"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLFormControlElementWithState"*
  %5 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %4, i64 0, i32 1
  %6 = load i8, i8* %5, align 1, !range !3
  %7 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 0, i32 1
  store i8 %6, i8* %7, align 1
  %8 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZN5blink22HTMLFormControlElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE(%"class.blink::HTMLFormControlElement"* %8, %"class.blink::Element"* dereferenceable(104) %1, i32 %2) #11
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE(%"class.blink::HTMLFormControlElement"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #1

declare void @_ZN5blink10SelectType15WillBeDestroyedEv(%"class.blink::SelectType"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink11StyleEngine28ChangeRenderingForHTMLSelectERNS_17HTMLSelectElementE(%"class.blink::StyleEngine"*, %"class.blink::HTMLSelectElement"* dereferenceable(352)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ComputedStyle"* @_ZNK5blink17HTMLSelectElement11OptionStyleEv(%"class.blink::HTMLSelectElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::SelectType"*, %"class.blink::SelectType"** %2, align 8
  %4 = bitcast %"class.blink::SelectType"* %3 to %"class.blink::ComputedStyle"* (%"class.blink::SelectType"*)***
  %5 = load %"class.blink::ComputedStyle"* (%"class.blink::SelectType"*)**, %"class.blink::ComputedStyle"* (%"class.blink::SelectType"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle"* (%"class.blink::SelectType"*)*, %"class.blink::ComputedStyle"* (%"class.blink::SelectType"*)** %5, i64 12
  %7 = load %"class.blink::ComputedStyle"* (%"class.blink::SelectType"*)*, %"class.blink::ComputedStyle"* (%"class.blink::SelectType"*)** %6, align 8
  %8 = tail call %"class.blink::ComputedStyle"* %7(%"class.blink::SelectType"* %3) #11
  ret %"class.blink::ComputedStyle"* %8
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #11
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink17HTMLSelectElement18GetWrapperTypeInfoEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17HTMLSelectElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState23CanContainRangeEndPointEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLSelectElement17CanStartSelectionEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZN5blink22HTMLFormControlElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLFormControlElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #11
  ret %"class.blink::ComputedStyle"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::HashMap.3020"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

declare void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFormControlElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement13SupportsFocusEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement19IsKeyboardFocusableEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsFormControlElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLSelectElement21IsOptionalFormControlEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::HTMLSelectElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"* %2) #11
  %4 = xor i1 %3, true
  ret i1 %4
}

declare zeroext i1 @_ZN5blink22HTMLFormControlElement14IsValidElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLSelectElement25HasNonInBodyInsertionModeEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE(%"class.blink::Element"*, %"class.blink::StyleRecalcContext"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLSelectElement23AreAuthorShadowsAllowedEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement31AlwaysCreateUserAgentShadowRootEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare i32 @_ZNK5blink31HTMLFormControlElementWithState15DefaultTabIndexEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink22HTMLFormControlElement14autocapitalizeEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement9draggableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.blink::HTMLFormElement"* @_ZNK5blink22HTMLFormControlElement9formOwnerEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement15IsPluginElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLSelectElement11IsLabelableEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement7AltTextEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink22HTMLFormControlElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFormControlElement", %"class.blink::HTMLFormControlElement"* %0, i64 0, i32 3
  ret %"class.blink::FormAssociated"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLSelectElement14IsEnumeratableEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement28CanTriggerImplicitSubmissionEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink22HTMLFormControlElement20IsSubmittableElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.WTF::StringImpl"* @_ZN5blink22HTMLFormControlElement21ResultForDialogSubmitEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement27CanBeSuccessfulSubmitButtonEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement17IsActivatedSubmitEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22HTMLFormControlElement18SetActivatedSubmitEb(%"class.blink::HTMLFormControlElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink22HTMLFormControlElement21GetFormElementPiiTypeEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22HTMLFormControlElement21SetFormElementPiiTypeENS_18FormElementPiiTypeE(%"class.blink::HTMLFormControlElement"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE(%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement24RequiredAttributeChangedEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement24DisabledAttributeChangedEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement14WillChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement13DidChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState18ShouldAutocompleteEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink22HTMLFormControlElement20IsFormControlElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2

declare zeroext i1 @_ZNK5blink13ListedElement18IsElementInternalsEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink17HTMLSelectElement14IsEnumeratableEv(%"class.blink::HTMLSelectElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink13ListedElement11HasBadInputEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement15PatternMismatchEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement13RangeOverflowEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement14RangeUnderflowEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement12StepMismatchEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement7TooLongEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement8TooShortEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement12TypeMismatchEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement20ValidationSubMessageEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare void @_ZN5blink13ListedElement17setCustomValidityERKN3WTF6StringE(%"class.blink::ListedElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink13ListedElement16ValidationAnchorEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink22HTMLFormControlElement24DisabledAttributeChangedEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ListedElement27DisabledStateMightBeChangedEv(%"class.blink::ListedElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink22HTMLFormControlElement14WillChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink22HTMLFormControlElement13DidChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 align 2

declare zeroext i1 @_ZNK5blink13ListedElement18RecalcWillValidateEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn168_N5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE(%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*) unnamed_addr #0 align 2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"*, %"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"*, i32) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() local_unnamed_addr #1

declare void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"*) local_unnamed_addr #1

declare void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.630"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.630"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.630"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #11
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !5

122:                                              ; preds = %113
  tail call void @llvm.trap() #11
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare signext i8 @u_isprint_69(i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #10

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.1817"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1814"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1814", %"class.WTF::Vector.1814"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1814", %"class.WTF::Vector.1814"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.1817"*, %"class.blink::Member.1817"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %24, i64 %25
  ret %"class.blink::Member.1817"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.1836"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.1863"*, %"class.blink::HTMLOptionElement"** dereferenceable(8), %"class.blink::HTMLOptionElement"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %4, align 8
  %6 = icmp eq %"class.blink::Member.1836"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.1836"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.1863"* %0, %"class.blink::Member.1836"* null)
  %9 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.1836"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::HTMLOptionElement"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %40, align 8
  %42 = icmp eq %"class.blink::HTMLOptionElement"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::HTMLOptionElement"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::HTMLOptionElement"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.1836"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.1836"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::HTMLOptionElement"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::HTMLOptionElement"* %59, inttoptr (i64 -1 to %"class.blink::HTMLOptionElement"*)
  %67 = select i1 %66, %"class.blink::Member.1836"* %60, %"class.blink::Member.1836"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %73, align 8
  %75 = icmp eq %"class.blink::HTMLOptionElement"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.1836"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.1836"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.1836"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %2, align 8
  %89 = ptrtoint %"class.blink::HTMLOptionElement"* %88 to i64
  %90 = bitcast %"class.blink::Member.1836"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::HTMLOptionElement"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #11
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.1836"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #11
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.1836"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.1863"* %0, %"class.blink::Member.1836"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.1836"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.1836"*, i8 } undef, %"class.blink::Member.1836"* %117, 0
  %119 = insertvalue { %"class.blink::Member.1836"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.1836"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.1836"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.1863"*, %"class.blink::Member.1836"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.1836"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.1863"* %0, i32 %35, %"class.blink::Member.1836"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.1836"*
  %44 = call %"class.blink::Member.1836"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.1863"* %0, %"class.blink::Member.1836"* %43, i32 %40, %"class.blink::Member.1836"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.1836"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.1836"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.1836"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.1863"*, i32, %"class.blink::Member.1836"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !5

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %31, align 8
  %33 = icmp eq %"class.blink::Member.1836"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.1836"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.1836"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.1836"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.1836"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.1836"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.1836"* %61, %"class.blink::Member.1836"* %55
  %63 = bitcast %"class.blink::Member.1836"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.1836"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.1836"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.1863"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #11
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.1836"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.1836"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.1863"* %0, %"class.blink::Member.1836"* %42, i32 %1, %"class.blink::Member.1836"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.1836"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.1836"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.1836"* %87, %"class.blink::Member.1836"* %82
  %89 = bitcast %"class.blink::Member.1836"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.1836"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.1836"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.1836"* %99, %"class.blink::Member.1836"* %88
  %101 = bitcast %"class.blink::Member.1836"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.1836"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.1836"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.1836"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.1836"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.1863"*, %"class.blink::Member.1836"*, i32, %"class.blink::Member.1836"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.1836"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.1836"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.1836"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #11
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.1863"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.1836"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #11
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.1836"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.1836"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #11
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.1836"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.1836"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.1836"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.1836"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.1836"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %70, align 8
  %72 = icmp eq %"class.blink::HTMLOptionElement"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::HTMLOptionElement"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.1836"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.1836"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.1836"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.1836"* %93, null
  %95 = ptrtoint %"class.blink::Member.1836"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::HTMLOptionElement"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::HTMLOptionElement"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::HTMLOptionElement"* %99, inttoptr (i64 -1 to %"class.blink::HTMLOptionElement"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.1836"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %113, align 8
  %115 = icmp eq %"class.blink::HTMLOptionElement"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.1836"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.1836"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.1836"* %118, %"class.blink::Member.1836"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.1836"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.1836"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.15, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 5, i32 %28, i8* getelementptr inbounds ([381 x i8], [381 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_17HTMLOptionElementEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0)) #11
  %30 = bitcast i8* %29 to %"class.blink::HeapHashTableBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %30
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !5

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1836"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !5

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.1836"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HTMLOptionElementEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HTMLOptionElementEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.1863"*, %"class.blink::Member.1836"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member.1836"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  %7 = and i32 %6, 2147483647
  %8 = and i32 %5, -2147483648
  %9 = or i32 %7, %8
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 4
  %13 = mul i32 %12, 6
  %14 = getelementptr inbounds %"class.WTF::HashTable.1863", %"class.WTF::HashTable.1863"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  %17 = icmp ugt i32 %15, 8
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %48

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #11
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !5

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #11
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !3
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 16
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %48, label %37

37:                                               ; preds = %26, %33
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = load i32, i32* %14, align 8
  %43 = lshr i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17HTMLOptionElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #11
  %46 = bitcast %"class.blink::HeapHashTableBacking"* %45 to %"class.blink::Member.1836"*
  %47 = tail call %"class.blink::Member.1836"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17HTMLOptionElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.1863"* %0, %"class.blink::Member.1836"* %46, i32 %43, %"class.blink::Member.1836"* null) #11
  br label %48

48:                                               ; preds = %33, %2, %41, %37
  ret void
}

declare dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink13ContainerNode15EnsureNodeListsEv(%"class.blink::ContainerNode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_14HTMLCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::NodeListsNodeData"*, %"class.blink::ContainerNode"* dereferenceable(80), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.3155", align 8
  %5 = alloca i8*, align 8
  %6 = bitcast %"struct.std::__1::pair.3155"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %8 = getelementptr inbounds %"struct.std::__1::pair.3155", %"struct.std::__1::pair.3155"* %4, i64 0, i32 0
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair.3155", %"struct.std::__1::pair.3155"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #11
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !5

27:                                               ; preds = %18
  tail call void @llvm.trap() #11
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %3, %13, %28
  %31 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  store i8* null, i8** %5, align 8
  %32 = getelementptr inbounds %"class.blink::NodeListsNodeData", %"class.blink::NodeListsNodeData"* %0, i64 0, i32 1, i32 0, i32 0
  %33 = call { %"struct.WTF::KeyValuePair.3154"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES6_DnEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.3152"* %32, %"struct.std::__1::pair.3155"* nonnull dereferenceable(16) %4, i8** nonnull dereferenceable(8) %5) #11
  %34 = extractvalue { %"struct.WTF::KeyValuePair.3154"*, i8 } %33, 0
  %35 = extractvalue { %"struct.WTF::KeyValuePair.3154"*, i8 } %33, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %51

51:                                               ; preds = %30, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  %52 = and i8 %35, 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %34, i64 0, i32 1, i32 0, i32 0
  %56 = load %"class.blink::LiveNodeListBase"*, %"class.blink::LiveNodeListBase"** %55, align 8
  %57 = icmp eq %"class.blink::LiveNodeListBase"* %56, null
  %58 = getelementptr inbounds %"class.blink::LiveNodeListBase", %"class.blink::LiveNodeListBase"* %56, i64 -1, i32 1
  %59 = bitcast %"class.blink::Member.314"* %58 to %"class.blink::HTMLCollection"*
  %60 = select i1 %57, %"class.blink::HTMLCollection"* null, %"class.blink::HTMLCollection"* %59
  br label %79

61:                                               ; preds = %51
  %62 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 96) #11
  %63 = bitcast i8* %62 to %"class.blink::HTMLCollection"*
  call void @_ZN5blink14HTMLCollectionC1ERNS_13ContainerNodeENS_14CollectionTypeENS0_21ItemAfterOverrideTypeE(%"class.blink::HTMLCollection"* %63, %"class.blink::ContainerNode"* dereferenceable(80) %1, i32 %2, i32 1) #11
  %64 = getelementptr inbounds i8, i8* %62, i64 -4
  %65 = bitcast i8* %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = or i16 %66, 1
  store atomic i16 %67, i16* %65 release, align 2
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %34, i64 0, i32 1
  %69 = icmp eq i8* %62, null
  %70 = getelementptr inbounds i8, i8* %62, i64 16
  %71 = ptrtoint i8* %70 to i64
  %72 = select i1 %69, i64 0, i64 %71
  %73 = bitcast %"class.blink::Member.3156"* %68 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %61
  %77 = inttoptr i64 %72 to i8*
  %78 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #11
  br label %79

79:                                               ; preds = %76, %61, %54
  %80 = phi %"class.blink::HTMLCollection"* [ %60, %54 ], [ %63, %61 ], [ %63, %76 ]
  ret %"class.blink::HTMLCollection"* %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3154"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES6_DnEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.3152"*, %"struct.std::__1::pair.3155"* dereferenceable(16), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3154"*, %"struct.WTF::KeyValuePair.3154"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3154"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3154"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.3152"* %0, %"struct.WTF::KeyValuePair.3154"* null)
  %9 = load %"struct.WTF::KeyValuePair.3154"*, %"struct.WTF::KeyValuePair.3154"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3154"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair.3155", %"struct.std::__1::pair.3155"* %1, i64 0, i32 1
  %17 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %19, %21
  %23 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %24 = select i1 %22, %"class.WTF::AtomicString"* %23, %"class.WTF::AtomicString"* %16
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = lshr i32 %28, 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.3155", %"struct.std::__1::pair.3155"* %1, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %29, %31
  %33 = and i32 %32, %14
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %11, i64 %34
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %35, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, -128
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %11, i64 %34, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  %42 = and i1 %38, %41
  br i1 %42, label %118, label %43

43:                                               ; preds = %10
  %44 = xor i32 %32, -1
  %45 = lshr i32 %32, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %69
  %58 = phi %"class.WTF::StringImpl"* [ %40, %43 ], [ %80, %69 ]
  %59 = phi i32 [ %37, %43 ], [ %77, %69 ]
  %60 = phi %"struct.WTF::KeyValuePair.3154"* [ %35, %43 ], [ %75, %69 ]
  %61 = phi %"struct.WTF::KeyValuePair.3154"* [ null, %43 ], [ %70, %69 ]
  %62 = phi i64 [ %34, %43 ], [ %74, %69 ]
  %63 = phi i64 [ 0, %43 ], [ %72, %69 ]
  %64 = icmp eq i32 %59, -127
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = icmp eq i32 %59, %31
  %67 = icmp eq %"class.WTF::StringImpl"* %58, %19
  %68 = and i1 %66, %67
  br i1 %68, label %156, label %69

69:                                               ; preds = %57, %65
  %70 = phi %"struct.WTF::KeyValuePair.3154"* [ %60, %57 ], [ %61, %65 ]
  %71 = icmp eq i64 %63, 0
  %72 = select i1 %71, i64 %56, i64 %63
  %73 = add i64 %72, %62
  %74 = and i64 %73, %15
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %11, i64 %74
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %75, i64 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, -128
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %11, i64 %74, i32 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  %82 = and i1 %78, %81
  br i1 %82, label %83, label %57

83:                                               ; preds = %69
  %84 = icmp eq %"struct.WTF::KeyValuePair.3154"* %70, null
  br i1 %84, label %118, label %85

85:                                               ; preds = %83
  %86 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %86, label %104, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4, !noalias !6
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %104

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %94 = load i32, i32* %93, align 4, !noalias !6
  %95 = zext i32 %94 to i33
  %96 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #11
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !5

101:                                              ; preds = %92
  tail call void @llvm.trap() #11, !noalias !6
  unreachable

102:                                              ; preds = %92
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %93, align 4, !noalias !6
  br label %104

104:                                              ; preds = %85, %87, %102
  %105 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %70, i64 0, i32 0, i32 0
  store i32 -128, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %70, i64 0, i32 0, i32 1
  %108 = bitcast %"class.WTF::AtomicString"* %107 to i64*
  store i64 %105, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %70, i64 0, i32 1
  %110 = bitcast %"class.blink::Member.3156"* %109 to i64*
  store i64 0, i64* %110, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.3154"* nonnull %70) #11
  %111 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, 2147483647
  %114 = and i32 %113, 2147483647
  %115 = and i32 %112, -2147483648
  %116 = or i32 %114, %115
  store i32 %116, i32* %111, align 8
  %117 = load i32, i32* %30, align 4
  br label %118

118:                                              ; preds = %10, %83, %104
  %119 = phi i32 [ %117, %104 ], [ %31, %83 ], [ %31, %10 ]
  %120 = phi %"struct.WTF::KeyValuePair.3154"* [ %70, %104 ], [ %75, %83 ], [ %35, %10 ]
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %120, i64 0, i32 0, i32 0
  store i32 %119, i32* %121, align 8
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %120, i64 0, i32 0, i32 1
  %123 = bitcast %"class.WTF::AtomicString"* %16 to i64*
  %124 = load i64, i64* %123, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %125 = bitcast %"class.WTF::AtomicString"* %122 to i64*
  %126 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %122, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  store i64 %124, i64* %125, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %118
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #11
  br label %142

142:                                              ; preds = %118, %138, %141
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %120, i64 0, i32 1
  %144 = bitcast %"class.blink::Member.3156"* %143 to i64*
  store atomic i64 0, i64* %144 monotonic, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.3154"* %120) #11
  %145 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 2
  %146 = load i32, i32* %145, align 4
  %147 = add i32 %146, 1
  store i32 %147, i32* %145, align 4
  %148 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 3
  %149 = load i32, i32* %148, align 8
  %150 = add i32 %149, %147
  %151 = shl i32 %150, 1
  %152 = load i32, i32* %12, align 8
  %153 = icmp ult i32 %151, %152
  br i1 %153, label %156, label %154

154:                                              ; preds = %142
  %155 = tail call %"struct.WTF::KeyValuePair.3154"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.3152"* %0, %"struct.WTF::KeyValuePair.3154"* %120)
  br label %156

156:                                              ; preds = %65, %142, %154
  %157 = phi i8 [ 1, %142 ], [ 1, %154 ], [ 0, %65 ]
  %158 = phi %"struct.WTF::KeyValuePair.3154"* [ %120, %142 ], [ %155, %154 ], [ %60, %65 ]
  %159 = insertvalue { %"struct.WTF::KeyValuePair.3154"*, i8 } undef, %"struct.WTF::KeyValuePair.3154"* %158, 0
  %160 = insertvalue { %"struct.WTF::KeyValuePair.3154"*, i8 } %159, i8 %157, 1
  ret { %"struct.WTF::KeyValuePair.3154"*, i8 } %160
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3154"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.3152"*, %"struct.WTF::KeyValuePair.3154"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %44, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.3154"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE12ExpandBufferEjPSB_Rb(%"class.WTF::HashTable.3152"* %0, i32 %35, %"struct.WTF::KeyValuePair.3154"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %44, label %90

39:                                               ; preds = %31
  %40 = zext i32 %14 to i64
  %41 = call %"class.blink::HeapHashTableBacking.3255"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64 %40) #11
  %42 = bitcast %"class.blink::HeapHashTableBacking.3255"* %41 to %"struct.WTF::KeyValuePair.3154"*
  %43 = icmp eq i32 %14, 0
  br i1 %43, label %86, label %49

44:                                               ; preds = %34, %10
  %45 = phi i32 [ %8, %10 ], [ %35, %34 ]
  %46 = zext i32 %45 to i64
  %47 = call %"class.blink::HeapHashTableBacking.3255"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #11
  %48 = bitcast %"class.blink::HeapHashTableBacking.3255"* %47 to %"struct.WTF::KeyValuePair.3154"*
  br label %49

49:                                               ; preds = %44, %39
  %50 = phi i32 [ %14, %39 ], [ %45, %44 ]
  %51 = phi %"struct.WTF::KeyValuePair.3154"* [ %42, %39 ], [ %48, %44 ]
  %52 = phi i64 [ %40, %39 ], [ %46, %44 ]
  %53 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8, !noalias !9
  %54 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %53, i64 0, i32 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %77, %49
  %56 = phi i64 [ 0, %49 ], [ %84, %77 ]
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %51, i64 %56
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8, !noalias !9
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4, !noalias !9
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %67 = load i32, i32* %66, align 4, !noalias !9
  %68 = zext i32 %67 to i33
  %69 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #11
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !5

74:                                               ; preds = %65
  call void @llvm.trap() #11, !noalias !9
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4, !noalias !9
  br label %77

77:                                               ; preds = %75, %60, %55
  %78 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %57, i64 0, i32 0, i32 0
  store i32 -128, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %51, i64 %56, i32 0, i32 1
  %81 = bitcast %"class.WTF::AtomicString"* %80 to i64*
  store i64 %78, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %51, i64 %56, i32 1
  %83 = bitcast %"class.blink::Member.3156"* %82 to i64*
  store i64 0, i64* %83, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.3154"* %57) #11
  %84 = add nuw nsw i64 %56, 1
  %85 = icmp eq i64 %84, %52
  br i1 %85, label %86, label %55

86:                                               ; preds = %77, %39
  %87 = phi i32 [ 0, %39 ], [ %50, %77 ]
  %88 = phi %"struct.WTF::KeyValuePair.3154"* [ %42, %39 ], [ %51, %77 ]
  %89 = call %"struct.WTF::KeyValuePair.3154"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.3152"* %0, %"struct.WTF::KeyValuePair.3154"* %88, i32 %87, %"struct.WTF::KeyValuePair.3154"* %1) #11
  br label %90

90:                                               ; preds = %34, %86
  %91 = phi %"struct.WTF::KeyValuePair.3154"* [ %89, %86 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.3154"* %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3154"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE12ExpandBufferEjPSB_Rb(%"class.WTF::HashTable.3152"*, i32, %"struct.WTF::KeyValuePair.3154"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !5

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.3154"*, %"struct.WTF::KeyValuePair.3154"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.3154"* %32, null
  br i1 %33, label %196, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = mul nuw nsw i64 %35, 24
  %37 = bitcast %"struct.WTF::KeyValuePair.3154"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %196

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.3154"*, %"struct.WTF::KeyValuePair.3154"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.3255"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking.3255"* %44 to %"struct.WTF::KeyValuePair.3154"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %85, label %47

47:                                               ; preds = %39
  %48 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8, !noalias !12
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  br label %50

50:                                               ; preds = %72, %47
  %51 = phi i64 [ 0, %47 ], [ %79, %72 ]
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %45, i64 %51
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8, !noalias !12
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %72, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4, !noalias !12
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %62 = load i32, i32* %61, align 4, !noalias !12
  %63 = zext i32 %62 to i33
  %64 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #11
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !5

69:                                               ; preds = %60
  call void @llvm.trap() #11, !noalias !12
  unreachable

70:                                               ; preds = %60
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %61, align 4, !noalias !12
  br label %72

72:                                               ; preds = %70, %55, %50
  %73 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %52, i64 0, i32 0, i32 0
  store i32 -128, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %45, i64 %51, i32 0, i32 1
  %76 = bitcast %"class.WTF::AtomicString"* %75 to i64*
  store i64 %73, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %45, i64 %51, i32 1
  %78 = bitcast %"class.blink::Member.3156"* %77 to i64*
  store i64 0, i64* %78, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.3154"* %52) #11
  %79 = add nuw nsw i64 %51, 1
  %80 = icmp eq i64 %79, %43
  br i1 %80, label %81, label %50

81:                                               ; preds = %72
  br i1 %46, label %85, label %82

82:                                               ; preds = %81
  %83 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %84 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %83, i64 0, i32 0, i32 0, i32 0
  br label %98

85:                                               ; preds = %160, %39, %81
  %86 = phi %"struct.WTF::KeyValuePair.3154"* [ null, %81 ], [ null, %39 ], [ %105, %160 ]
  %87 = bitcast %"class.WTF::HashTable.3152"* %0 to %"class.blink::HeapHashTableBacking.3255"**
  store %"class.blink::HeapHashTableBacking.3255"* %44, %"class.blink::HeapHashTableBacking.3255"** %87, align 8
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::HeapHashTableBacking.3255", %"class.blink::HeapHashTableBacking.3255"* %44, i64 0, i32 0
  %92 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %91) #11
  br label %93

93:                                               ; preds = %85, %90
  %94 = icmp eq i32 %1, 0
  br i1 %94, label %163, label %95

95:                                               ; preds = %93
  %96 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8, !noalias !15
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %96, i64 0, i32 0, i32 0, i32 0
  br label %165

98:                                               ; preds = %160, %82
  %99 = phi i64 [ 0, %82 ], [ %161, %160 ]
  %100 = phi %"struct.WTF::KeyValuePair.3154"* [ null, %82 ], [ %105, %160 ]
  %101 = load %"struct.WTF::KeyValuePair.3154"*, %"struct.WTF::KeyValuePair.3154"** %31, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %101, i64 %99
  %103 = icmp eq %"struct.WTF::KeyValuePair.3154"* %102, %2
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %45, i64 %99
  %105 = select i1 %103, %"struct.WTF::KeyValuePair.3154"* %104, %"struct.WTF::KeyValuePair.3154"* %100
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %102, i64 0, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, -128
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %101, i64 %99, i32 0, i32 1, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  %112 = and i1 %108, %111
  %113 = icmp eq i32 %107, -127
  %114 = or i1 %113, %112
  br i1 %114, label %115, label %142

115:                                              ; preds = %98
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8, !noalias !18
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %135, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4, !noalias !18
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %135

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %125 = load i32, i32* %124, align 4, !noalias !18
  %126 = zext i32 %125 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #11
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !5

132:                                              ; preds = %123
  call void @llvm.trap() #11, !noalias !18
  unreachable

133:                                              ; preds = %123
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %124, align 4, !noalias !18
  br label %135

135:                                              ; preds = %115, %118, %133
  %136 = ptrtoint %"class.WTF::StringImpl"* %116 to i64
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %104, i64 0, i32 0, i32 0
  store i32 -128, i32* %137, align 8
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %45, i64 %99, i32 0, i32 1
  %139 = bitcast %"class.WTF::AtomicString"* %138 to i64*
  store i64 %136, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %45, i64 %99, i32 1
  %141 = bitcast %"class.blink::Member.3156"* %140 to i64*
  store i64 0, i64* %141, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.3154"* %104) #11
  br label %160

142:                                              ; preds = %98
  call void @_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS4_6MemberINS4_16LiveNodeListBaseEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISA_EEEELb1EE4MoveEOSB_RSB_(%"struct.WTF::KeyValuePair.3154"* dereferenceable(24) %102, %"struct.WTF::KeyValuePair.3154"* dereferenceable(24) %104)
  %143 = load %"struct.WTF::KeyValuePair.3154"*, %"struct.WTF::KeyValuePair.3154"** %31, align 8
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %143, i64 %99, i32 0, i32 1, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #11
  br label %160

160:                                              ; preds = %159, %156, %142, %135
  %161 = add nuw nsw i64 %99, 1
  %162 = icmp eq i64 %161, %43
  br i1 %162, label %85, label %98

163:                                              ; preds = %187, %93
  %164 = call %"struct.WTF::KeyValuePair.3154"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.3152"* %0, %"struct.WTF::KeyValuePair.3154"* %42, i32 %1, %"struct.WTF::KeyValuePair.3154"* %86)
  br label %196

165:                                              ; preds = %187, %95
  %166 = phi i64 [ 0, %95 ], [ %194, %187 ]
  %167 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %42, i64 %166
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8, !noalias !15
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %187, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4, !noalias !15
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %187

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %177 = load i32, i32* %176, align 4, !noalias !15
  %178 = zext i32 %177 to i33
  %179 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %178, i33 1) #11
  %180 = extractvalue { i33, i1 } %179, 1
  %181 = extractvalue { i33, i1 } %179, 0
  %182 = icmp slt i33 %181, 0
  %183 = or i1 %180, %182
  br i1 %183, label %184, label %185, !prof !5

184:                                              ; preds = %175
  call void @llvm.trap() #11, !noalias !15
  unreachable

185:                                              ; preds = %175
  %186 = trunc i33 %181 to i32
  store i32 %186, i32* %176, align 4, !noalias !15
  br label %187

187:                                              ; preds = %165, %170, %185
  %188 = ptrtoint %"class.WTF::StringImpl"* %168 to i64
  %189 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %167, i64 0, i32 0, i32 0
  store i32 -128, i32* %189, align 8
  %190 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %42, i64 %166, i32 0, i32 1
  %191 = bitcast %"class.WTF::AtomicString"* %190 to i64*
  store i64 %188, i64* %191, align 8
  %192 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %42, i64 %166, i32 1
  %193 = bitcast %"class.blink::Member.3156"* %192 to i64*
  store i64 0, i64* %193, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.3154"* %167) #11
  %194 = add nuw nsw i64 %166, 1
  %195 = icmp eq i64 %194, %35
  br i1 %195, label %163, label %165

196:                                              ; preds = %34, %30, %163
  %197 = phi %"struct.WTF::KeyValuePair.3154"* [ %164, %163 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.3154"* %197
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3154"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.3152"*, %"struct.WTF::KeyValuePair.3154"*, i32, %"struct.WTF::KeyValuePair.3154"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3152", align 8
  %6 = bitcast %"class.WTF::HashTable.3152"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3152"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3154"* %1, %"struct.WTF::KeyValuePair.3154"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.3154"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.3154"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.3154"*, %"struct.WTF::KeyValuePair.3154"** %19, align 8
  br label %95

21:                                               ; preds = %120
  %22 = bitcast %"class.WTF::HashTable.3152"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %121, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.3154"* [ null, %15 ], [ %123, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.3152"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #11
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.3152"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.3152"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #11
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.3154"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %91, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %89, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %86, %54
  %57 = phi i64 [ 0, %54 ], [ %87, %86 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %50, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, -128
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %50, i64 %57, i32 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  %64 = and i1 %60, %63
  %65 = icmp eq i32 %59, -127
  %66 = or i1 %65, %64
  br i1 %66, label %86, label %67

67:                                               ; preds = %56
  br i1 %63, label %81, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #11
  br label %81

81:                                               ; preds = %80, %77, %67
  store i32 -127, i32* %58, align 4
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %50, i64 %57, i32 0, i32 1
  %83 = bitcast %"class.WTF::AtomicString"* %82 to i64*
  store i64 0, i64* %83, align 1
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %50, i64 %57, i32 1
  %85 = bitcast %"class.blink::Member.3156"* %84 to i64*
  store atomic i64 0, i64* %85 monotonic, align 8
  br label %86

86:                                               ; preds = %81, %56
  %87 = add nuw nsw i64 %57, 1
  %88 = icmp eq i64 %87, %55
  br i1 %88, label %89, label %56

89:                                               ; preds = %86, %52
  %90 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %90) #11
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %91

91:                                               ; preds = %49, %89
  %92 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 3
  %93 = load i32, i32* %92, align 8
  %94 = and i32 %93, -2147483648
  store i32 %94, i32* %92, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.3154"* %29

95:                                               ; preds = %18, %120
  %96 = phi i32 [ %13, %18 ], [ %121, %120 ]
  %97 = phi %"struct.WTF::KeyValuePair.3154"* [ %20, %18 ], [ %122, %120 ]
  %98 = phi %"struct.WTF::KeyValuePair.3154"* [ null, %18 ], [ %123, %120 ]
  %99 = phi i32 [ 0, %18 ], [ %124, %120 ]
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %97, i64 %100
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %101, i64 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, -128
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %97, i64 %100, i32 0, i32 1, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  %108 = and i1 %104, %107
  %109 = icmp eq i32 %103, -127
  %110 = or i1 %109, %108
  br i1 %110, label %120, label %111

111:                                              ; preds = %95
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %101, i64 0, i32 0
  %113 = call { %"struct.WTF::KeyValuePair.3154"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE16LookupForWritingERKS6_(%"class.WTF::HashTable.3152"* nonnull %5, %"struct.std::__1::pair.3155"* dereferenceable(16) %112) #11
  %114 = extractvalue { %"struct.WTF::KeyValuePair.3154"*, i8 } %113, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS4_6MemberINS4_16LiveNodeListBaseEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISA_EEEELb1EE4MoveEOSB_RSB_(%"struct.WTF::KeyValuePair.3154"* dereferenceable(24) %101, %"struct.WTF::KeyValuePair.3154"* dereferenceable(24) %114) #11
  %115 = load %"struct.WTF::KeyValuePair.3154"*, %"struct.WTF::KeyValuePair.3154"** %19, align 8
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %115, i64 %100
  %117 = icmp eq %"struct.WTF::KeyValuePair.3154"* %116, %3
  %118 = select i1 %117, %"struct.WTF::KeyValuePair.3154"* %114, %"struct.WTF::KeyValuePair.3154"* %98
  %119 = load i32, i32* %12, align 8
  br label %120

120:                                              ; preds = %95, %111
  %121 = phi i32 [ %96, %95 ], [ %119, %111 ]
  %122 = phi %"struct.WTF::KeyValuePair.3154"* [ %97, %95 ], [ %115, %111 ]
  %123 = phi %"struct.WTF::KeyValuePair.3154"* [ %98, %95 ], [ %118, %111 ]
  %124 = add i32 %99, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %21, label %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS4_6MemberINS4_16LiveNodeListBaseEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISA_EEEELb1EE4MoveEOSB_RSB_(%"struct.WTF::KeyValuePair.3154"* dereferenceable(24), %"struct.WTF::KeyValuePair.3154"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %4 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %3, i64 0, i32 1
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #11
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9, !prof !5

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %4, i8* %8) #11
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i8* [ %8, %7 ], [ %5, %2 ]
  %11 = bitcast i8* %10 to %"class.blink::ThreadState"**
  %12 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %12, i64 0, i32 14
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #11
  br label %32

32:                                               ; preds = %9, %28, %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %1, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %0, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %1, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %0, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.WTF::AtomicString"* %37 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.WTF::AtomicString"* %36 to i64*
  store i64 %40, i64* %41, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %1, i64 0, i32 1
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %0, i64 0, i32 1
  %44 = bitcast %"class.blink::Member.3156"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::Member.3156"* %42 to i64*
  store i64 %45, i64* %46, align 8
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #11
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !5

51:                                               ; preds = %32
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #11
  br label %53

53:                                               ; preds = %32, %51
  %54 = phi i8* [ %52, %51 ], [ %49, %32 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 14
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, -1
  store i64 %59, i64* %57, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.3255"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.15, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS1_12AtomicStringEEENS1_12KeyValuePairIS7_NS_6MemberINS_16LiveNodeListBaseEEEEENS1_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.3255"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.3255"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS1_12AtomicStringEEENS1_12KeyValuePairIS7_NS_6MemberINS_16LiveNodeListBaseEEEEENS1_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([616 x i8], [616 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINSt3__14pairINS1_14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS8_NS1_6MemberINS1_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #11
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS8_NS5_6MemberINS5_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS5_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #11
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS3_12AtomicStringEEENS3_12KeyValuePairIS9_NS_6MemberINS_16LiveNodeListBaseEEEEENS3_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS9_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !5

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.3154"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %51

24:                                               ; preds = %18, %47
  %25 = phi i64 [ %49, %47 ], [ 0, %18 ]
  %26 = phi i32 [ %48, %47 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %22, i64 %25, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %22, i64 %25, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  %32 = icmp eq i32 %28, -127
  %33 = or i1 %32, %31
  br i1 %33, label %47, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #11
  br label %47

47:                                               ; preds = %46, %43, %24
  %48 = add i32 %26, 1
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %21, %49
  br i1 %50, label %24, label %51

51:                                               ; preds = %47, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS8_NS5_6MemberINS5_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS5_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.3154"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !5

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = udiv i64 %22, 24
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp ugt i64 %22, 23
  br i1 %29, label %30, label %32

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %198, %20
  ret void

33:                                               ; preds = %30, %198
  %34 = phi i64 [ 0, %30 ], [ %199, %198 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %3, i64 %34
  br i1 %28, label %36, label %118

36:                                               ; preds = %33
  %37 = bitcast %"struct.WTF::KeyValuePair.3154"* %35 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %3, i64 %34, i32 0, i32 1
  %41 = bitcast %"class.WTF::AtomicString"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i32 %39, -128
  %44 = icmp eq i64 %42, 0
  %45 = and i1 %44, %43
  %46 = icmp eq i32 %39, -127
  %47 = or i1 %46, %45
  br i1 %47, label %198, label %48

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %3, i64 %34, i32 1
  %50 = bitcast %"class.blink::Member.3156"* %49 to i64*
  %51 = load atomic i64, i64* %50 monotonic, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %198, label %53

53:                                               ; preds = %48
  %54 = inttoptr i64 %51 to i8*
  %55 = and i64 %51, -131072
  %56 = inttoptr i64 %55 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 4138
  %58 = load i8, i8* %57, align 2
  %59 = icmp eq i8 %58, 1
  br i1 %59, label %60, label %62

60:                                               ; preds = %53
  %61 = getelementptr inbounds i8, i8* %56, i64 4160
  br label %100

62:                                               ; preds = %53
  %63 = getelementptr inbounds i8, i8* %56, i64 4096
  %64 = bitcast i8* %63 to %"class.blink::NormalPage"*
  %65 = getelementptr inbounds i8, i8* %56, i64 4400
  %66 = bitcast i8* %65 to i8**
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %51, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %64, i64 0, i32 2, i32 0, i32 1, i64 %71
  %73 = load atomic i8, i8* %72 acquire, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 2, %75
  %77 = trunc i32 %76 to i8
  %78 = add i8 %77, -1
  %79 = and i8 %78, %73
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %62, %81
  %82 = phi i64 [ %83, %81 ], [ %71, %62 ]
  %83 = add i64 %82, -1
  %84 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %64, i64 0, i32 2, i32 0, i32 1, i64 %83
  %85 = load atomic i8, i8* %84 acquire, align 1
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %81, label %87

87:                                               ; preds = %81, %62
  %88 = phi i64 [ %71, %62 ], [ %83, %81 ]
  %89 = phi i8 [ %79, %62 ], [ %85, %81 ]
  %90 = zext i8 %89 to i32
  %91 = tail call i32 @llvm.ctlz.i32(i32 %90, i1 true) #11, !range !21
  %92 = add nsw i32 %91, -24
  %93 = shl i64 %88, 3
  %94 = or i64 %93, 7
  %95 = sext i32 %92 to i64
  %96 = sub i64 %94, %95
  %97 = shl i64 %96, 3
  %98 = load i8*, i8** %66, align 16
  %99 = getelementptr inbounds i8, i8* %98, i64 %97
  br label %100

100:                                              ; preds = %87, %60
  %101 = phi i8* [ %61, %60 ], [ %99, %87 ]
  %102 = getelementptr inbounds i8, i8* %101, i64 8
  %103 = getelementptr inbounds i8, i8* %101, i64 4
  %104 = bitcast i8* %103 to i16*
  %105 = load atomic i16, i16* %104 acquire, align 2
  %106 = lshr i16 %105, 2
  %107 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %108 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %107, i64 0, i32 0
  %109 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %108, align 8
  %110 = zext i16 %106 to i64
  %111 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %109, i64 %110
  %112 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %111, align 8
  %113 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %112, i64 0, i32 0
  %114 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %113, align 8
  %115 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %116 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %115, i64 5
  %117 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %116, align 8
  tail call void %117(%"class.blink::Visitor"* %0, i8* nonnull %54, i8* %102, void (%"class.blink::Visitor"*, i8*)* %114) #11
  br label %198

118:                                              ; preds = %33
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %35, i64 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, -128
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %3, i64 %34, i32 0, i32 1, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  %125 = and i1 %121, %124
  %126 = icmp eq i32 %120, -127
  %127 = or i1 %126, %125
  br i1 %127, label %198, label %128

128:                                              ; preds = %118
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %3, i64 %34, i32 1
  %130 = bitcast %"class.blink::Member.3156"* %129 to i64*
  %131 = load atomic i64, i64* %130 monotonic, align 8
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %198, label %133

133:                                              ; preds = %128
  %134 = inttoptr i64 %131 to i8*
  %135 = and i64 %131, -131072
  %136 = inttoptr i64 %135 to i8*
  %137 = getelementptr inbounds i8, i8* %136, i64 4138
  %138 = load i8, i8* %137, align 2
  %139 = icmp eq i8 %138, 1
  br i1 %139, label %140, label %142

140:                                              ; preds = %133
  %141 = getelementptr inbounds i8, i8* %136, i64 4160
  br label %180

142:                                              ; preds = %133
  %143 = getelementptr inbounds i8, i8* %136, i64 4096
  %144 = bitcast i8* %143 to %"class.blink::NormalPage"*
  %145 = getelementptr inbounds i8, i8* %136, i64 4400
  %146 = bitcast i8* %145 to i8**
  %147 = bitcast i8* %145 to i64*
  %148 = load i64, i64* %147, align 16
  %149 = sub i64 %131, %148
  %150 = lshr i64 %149, 3
  %151 = lshr i64 %149, 6
  %152 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %144, i64 0, i32 2, i32 0, i32 1, i64 %151
  %153 = load atomic i8, i8* %152 acquire, align 1
  %154 = trunc i64 %150 to i32
  %155 = and i32 %154, 7
  %156 = shl i32 2, %155
  %157 = trunc i32 %156 to i8
  %158 = add i8 %157, -1
  %159 = and i8 %158, %153
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %167

161:                                              ; preds = %142, %161
  %162 = phi i64 [ %163, %161 ], [ %151, %142 ]
  %163 = add i64 %162, -1
  %164 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %144, i64 0, i32 2, i32 0, i32 1, i64 %163
  %165 = load atomic i8, i8* %164 acquire, align 1
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %161, label %167

167:                                              ; preds = %161, %142
  %168 = phi i64 [ %151, %142 ], [ %163, %161 ]
  %169 = phi i8 [ %159, %142 ], [ %165, %161 ]
  %170 = zext i8 %169 to i32
  %171 = tail call i32 @llvm.ctlz.i32(i32 %170, i1 true) #11, !range !21
  %172 = add nsw i32 %171, -24
  %173 = shl i64 %168, 3
  %174 = or i64 %173, 7
  %175 = sext i32 %172 to i64
  %176 = sub i64 %174, %175
  %177 = shl i64 %176, 3
  %178 = load i8*, i8** %146, align 16
  %179 = getelementptr inbounds i8, i8* %178, i64 %177
  br label %180

180:                                              ; preds = %167, %140
  %181 = phi i8* [ %141, %140 ], [ %179, %167 ]
  %182 = getelementptr inbounds i8, i8* %181, i64 8
  %183 = getelementptr inbounds i8, i8* %181, i64 4
  %184 = bitcast i8* %183 to i16*
  %185 = load atomic i16, i16* %184 acquire, align 2
  %186 = lshr i16 %185, 2
  %187 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %188 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %187, i64 0, i32 0
  %189 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %188, align 8
  %190 = zext i16 %186 to i64
  %191 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %189, i64 %190
  %192 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %191, align 8
  %193 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %192, i64 0, i32 0
  %194 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %193, align 8
  %195 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %196 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %195, i64 5
  %197 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %196, align 8
  tail call void %197(%"class.blink::Visitor"* %0, i8* nonnull %134, i8* %182, void (%"class.blink::Visitor"*, i8*)* %194) #11
  br label %198

198:                                              ; preds = %180, %128, %36, %48, %100, %118
  %199 = add nuw nsw i64 %34, 1
  %200 = icmp ult i64 %199, %23
  br i1 %200, label %33, label %32
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3154"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE16LookupForWritingERKS6_(%"class.WTF::HashTable.3152"*, %"struct.std::__1::pair.3155"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3154"*, %"struct.WTF::KeyValuePair.3154"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.std::__1::pair.3155", %"struct.std::__1::pair.3155"* %1, i64 0, i32 1
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %17 = select i1 %15, %"class.WTF::AtomicString"* %16, %"class.WTF::AtomicString"* %9
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = lshr i32 %21, 8
  %23 = getelementptr inbounds %"struct.std::__1::pair.3155", %"struct.std::__1::pair.3155"* %1, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %22, %24
  %26 = and i32 %25, %7
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %4, i64 %27
  %29 = ptrtoint %"struct.WTF::KeyValuePair.3154"* %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %28, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, -128
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %4, i64 %27, i32 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  %36 = and i1 %32, %35
  br i1 %36, label %53, label %37

37:                                               ; preds = %2
  %38 = xor i32 %25, -1
  %39 = lshr i32 %25, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %59

51:                                               ; preds = %72
  %52 = ptrtoint %"struct.WTF::KeyValuePair.3154"* %78 to i64
  br label %53

53:                                               ; preds = %51, %2
  %54 = phi i64 [ %29, %2 ], [ %52, %51 ]
  %55 = phi %"struct.WTF::KeyValuePair.3154"* [ null, %2 ], [ %73, %51 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair.3154"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair.3154"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %87

59:                                               ; preds = %72, %37
  %60 = phi %"class.WTF::StringImpl"* [ %34, %37 ], [ %84, %72 ]
  %61 = phi %"struct.WTF::KeyValuePair.3154"* [ null, %37 ], [ %73, %72 ]
  %62 = phi i32 [ %31, %37 ], [ %81, %72 ]
  %63 = phi i64 [ %29, %37 ], [ %79, %72 ]
  %64 = phi %"struct.WTF::KeyValuePair.3154"* [ %28, %37 ], [ %78, %72 ]
  %65 = phi i64 [ %27, %37 ], [ %77, %72 ]
  %66 = phi i64 [ 0, %37 ], [ %75, %72 ]
  %67 = icmp eq i32 %62, -127
  br i1 %67, label %72, label %68

68:                                               ; preds = %59
  %69 = icmp eq i32 %62, %24
  %70 = icmp eq %"class.WTF::StringImpl"* %60, %12
  %71 = and i1 %70, %69
  br i1 %71, label %87, label %72

72:                                               ; preds = %68, %59
  %73 = phi %"struct.WTF::KeyValuePair.3154"* [ %61, %68 ], [ %64, %59 ]
  %74 = icmp eq i64 %66, 0
  %75 = select i1 %74, i64 %50, i64 %66
  %76 = add i64 %75, %65
  %77 = and i64 %76, %8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %4, i64 %77
  %79 = ptrtoint %"struct.WTF::KeyValuePair.3154"* %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %78, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, -128
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %4, i64 %77, i32 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  %86 = and i1 %82, %85
  br i1 %86, label %51, label %59

87:                                               ; preds = %68, %53
  %88 = phi i64 [ %58, %53 ], [ %63, %68 ]
  %89 = phi i8 [ 0, %53 ], [ 1, %68 ]
  %90 = inttoptr i64 %88 to %"struct.WTF::KeyValuePair.3154"*
  %91 = insertvalue { %"struct.WTF::KeyValuePair.3154"*, i8 } undef, %"struct.WTF::KeyValuePair.3154"* %90, 0
  %92 = insertvalue { %"struct.WTF::KeyValuePair.3154"*, i8 } %91, i8 %89, 1
  ret { %"struct.WTF::KeyValuePair.3154"*, i8 } %92
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.3154"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %98, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !5

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %98, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %0, i64 0, i32 1
  %26 = bitcast %"class.blink::Member.3156"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %95, label %29

29:                                               ; preds = %18
  %30 = inttoptr i64 %27 to i8*
  %31 = and i64 %27, -131072
  %32 = inttoptr i64 %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 4138
  %34 = load i8, i8* %33, align 2
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %32, i64 4160
  br label %75

38:                                               ; preds = %29
  %39 = getelementptr inbounds i8, i8* %32, i64 4400
  %40 = bitcast i8* %39 to %"class.blink::ObjectStartBitmap"*
  %41 = bitcast i8* %39 to i8**
  %42 = bitcast i8* %39 to i64*
  %43 = load i64, i64* %42, align 16
  %44 = sub i64 %27, %43
  %45 = lshr i64 %44, 3
  %46 = lshr i64 %44, 6
  %47 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %40, i64 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = trunc i64 %45 to i32
  %50 = and i32 %49, 7
  %51 = shl i32 2, %50
  %52 = trunc i32 %51 to i8
  %53 = add i8 %52, -1
  %54 = and i8 %53, %48
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %38, %56
  %57 = phi i64 [ %58, %56 ], [ %46, %38 ]
  %58 = add i64 %57, -1
  %59 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %40, i64 0, i32 1, i64 %58
  %60 = load atomic i8, i8* %59 acquire, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %56, label %62

62:                                               ; preds = %56, %38
  %63 = phi i64 [ %46, %38 ], [ %58, %56 ]
  %64 = phi i8 [ %54, %38 ], [ %60, %56 ]
  %65 = zext i8 %64 to i32
  %66 = tail call i32 @llvm.ctlz.i32(i32 %65, i1 true) #11, !range !21
  %67 = add nsw i32 %66, -24
  %68 = shl i64 %63, 3
  %69 = or i64 %68, 7
  %70 = sext i32 %67 to i64
  %71 = sub i64 %69, %70
  %72 = shl i64 %71, 3
  %73 = load i8*, i8** %41, align 16
  %74 = getelementptr inbounds i8, i8* %73, i64 %72
  br label %75

75:                                               ; preds = %36, %62
  %76 = phi i8* [ %37, %36 ], [ %74, %62 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 8
  %78 = getelementptr inbounds i8, i8* %76, i64 4
  %79 = bitcast i8* %78 to i16*
  %80 = load atomic i16, i16* %79 acquire, align 2
  %81 = lshr i16 %80, 2
  %82 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %83 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %82, i64 0, i32 0
  %84 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %83, align 8
  %85 = zext i16 %81 to i64
  %86 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %84, i64 %85
  %87 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %86, align 8
  %88 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %87, i64 0, i32 0
  %89 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %88, align 8
  %90 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %91 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %91, i64 5
  %93 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %92, align 8
  tail call void %93(%"class.blink::Visitor"* %24, i8* nonnull %30, i8* %77, void (%"class.blink::Visitor"*, i8*)* %89) #11
  %94 = load i64, i64* %19, align 8
  br label %95

95:                                               ; preds = %18, %75
  %96 = phi i64 [ %21, %18 ], [ %94, %75 ]
  %97 = add i64 %96, -1
  store i64 %97, i64* %19, align 8
  br label %98

98:                                               ; preds = %1, %11, %95
  ret void
}

declare void @_ZN5blink14HTMLCollectionC1ERNS_13ContainerNodeENS_14CollectionTypeENS0_21ItemAfterOverrideTypeE(%"class.blink::HTMLCollection"*, %"class.blink::ContainerNode"* dereferenceable(80), i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLOptionsCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_21HTMLOptionsCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::NodeListsNodeData"*, %"class.blink::ContainerNode"* dereferenceable(80), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.3155", align 8
  %5 = alloca i8*, align 8
  %6 = bitcast %"struct.std::__1::pair.3155"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %8 = getelementptr inbounds %"struct.std::__1::pair.3155", %"struct.std::__1::pair.3155"* %4, i64 0, i32 0
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair.3155", %"struct.std::__1::pair.3155"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #11
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !5

27:                                               ; preds = %18
  tail call void @llvm.trap() #11
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %3, %13, %28
  %31 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  store i8* null, i8** %5, align 8
  %32 = getelementptr inbounds %"class.blink::NodeListsNodeData", %"class.blink::NodeListsNodeData"* %0, i64 0, i32 1, i32 0, i32 0
  %33 = call { %"struct.WTF::KeyValuePair.3154"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES6_DnEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.3152"* %32, %"struct.std::__1::pair.3155"* nonnull dereferenceable(16) %4, i8** nonnull dereferenceable(8) %5) #11
  %34 = extractvalue { %"struct.WTF::KeyValuePair.3154"*, i8 } %33, 0
  %35 = extractvalue { %"struct.WTF::KeyValuePair.3154"*, i8 } %33, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %51

51:                                               ; preds = %30, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  %52 = and i8 %35, 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %34, i64 0, i32 1, i32 0, i32 0
  %56 = load %"class.blink::LiveNodeListBase"*, %"class.blink::LiveNodeListBase"** %55, align 8
  %57 = icmp eq %"class.blink::LiveNodeListBase"* %56, null
  %58 = getelementptr inbounds %"class.blink::LiveNodeListBase", %"class.blink::LiveNodeListBase"* %56, i64 -1, i32 1
  %59 = bitcast %"class.blink::Member.314"* %58 to %"class.blink::HTMLOptionsCollection"*
  %60 = select i1 %57, %"class.blink::HTMLOptionsCollection"* null, %"class.blink::HTMLOptionsCollection"* %59
  br label %79

61:                                               ; preds = %51
  %62 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 96) #11
  %63 = bitcast i8* %62 to %"class.blink::HTMLOptionsCollection"*
  call void @_ZN5blink21HTMLOptionsCollectionC1ERNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::HTMLOptionsCollection"* %63, %"class.blink::ContainerNode"* dereferenceable(80) %1, i32 %2) #11
  %64 = getelementptr inbounds i8, i8* %62, i64 -4
  %65 = bitcast i8* %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = or i16 %66, 1
  store atomic i16 %67, i16* %65 release, align 2
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %34, i64 0, i32 1
  %69 = icmp eq i8* %62, null
  %70 = getelementptr inbounds i8, i8* %62, i64 16
  %71 = ptrtoint i8* %70 to i64
  %72 = select i1 %69, i64 0, i64 %71
  %73 = bitcast %"class.blink::Member.3156"* %68 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %61
  %77 = inttoptr i64 %72 to i8*
  %78 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #11
  br label %79

79:                                               ; preds = %76, %61, %54
  %80 = phi %"class.blink::HTMLOptionsCollection"* [ %60, %54 ], [ %63, %61 ], [ %63, %76 ]
  ret %"class.blink::HTMLOptionsCollection"* %80
}

declare void @_ZN5blink21HTMLOptionsCollectionC1ERNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::HTMLOptionsCollection"*, %"class.blink::ContainerNode"* dereferenceable(80), i32) unnamed_addr #1

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::bindings::UnionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::bindings::UnionBase"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::bindings::UnionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::bindings::UnionBase"*)***
  %4 = load void (%"class.blink::bindings::UnionBase"*)**, void (%"class.blink::bindings::UnionBase"*)*** %3, align 8
  %5 = load void (%"class.blink::bindings::UnionBase"*)*, void (%"class.blink::bindings::UnionBase"*)** %4, align 8
  tail call void %5(%"class.blink::bindings::UnionBase"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLOptionElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HTMLOptionElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 128
  br i1 %15, label %46, label %16, !prof !5

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 128
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -128
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 64, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 128, i64 %47) #11
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLOptionElement"*
  tail call void @_ZN5blink17HTMLOptionElementC1ERNS_8DocumentE(%"class.blink::HTMLOptionElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #11
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLOptionElement"* %51
}

declare void @_ZN5blink17HTMLOptionElementC1ERNS_8DocumentE(%"class.blink::HTMLOptionElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKPS3_EEvOT_(%"class.WTF::Vector.2961"*, %"class.blink::HTMLOptionElement"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2961", %"class.WTF::Vector.2961"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2961", %"class.WTF::Vector.2961"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2961"* %0, i32 %14) #11
  %15 = getelementptr inbounds %"class.WTF::Vector.2961", %"class.WTF::Vector.2961"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %16, i64 %18
  %20 = bitcast %"class.blink::HTMLOptionElement"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.1836"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #11
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2961"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2961", %"class.WTF::Vector.2961"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2961", %"class.WTF::Vector.2961"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %8, align 8
  %10 = icmp eq %"class.blink::Member.1836"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17HTMLOptionElementEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2961"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %8, align 8
  %26 = icmp eq %"class.blink::Member.1836"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.1836"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !5

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2961"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17HTMLOptionElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2961"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2961"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2961", %"class.WTF::Vector.2961"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2961"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2961", %"class.WTF::Vector.2961"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17HTMLOptionElementEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2961", %"class.WTF::Vector.2961"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.1836"*, %"class.blink::Member.1836"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2961", %"class.WTF::Vector.2961"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.1836"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.1836"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2961"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.2961"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.2961"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2961", %"class.WTF::Vector.2961"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17HTMLOptionElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.21, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([175 x i8], [175 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17HTMLOptionElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1836"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !5

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.1836", %"class.blink::Member.1836"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1836"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HTMLOptionElementEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17HTMLOptionElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare %"class.blink::NodeListsNodeData"* @_ZN5blink4Node9NodeListsEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLCollection"* @_ZN5blink17NodeListsNodeData6CachedINS_14HTMLCollectionEEEPT_NS_14CollectionTypeE(%"class.blink::NodeListsNodeData"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::pair.3155", align 8
  %4 = bitcast %"struct.std::__1::pair.3155"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %6 = getelementptr inbounds %"struct.std::__1::pair.3155", %"struct.std::__1::pair.3155"* %3, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair.3155", %"struct.std::__1::pair.3155"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !5

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %2, %11, %26
  %29 = getelementptr inbounds %"class.blink::NodeListsNodeData", %"class.blink::NodeListsNodeData"* %0, i64 0, i32 1, i32 0, i32 0
  %30 = call %"struct.WTF::KeyValuePair.3154"* @_ZNK3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6LookupERKS6_(%"class.WTF::HashTable.3152"* %29, %"struct.std::__1::pair.3155"* nonnull dereferenceable(16) %3) #11
  %31 = icmp eq %"struct.WTF::KeyValuePair.3154"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %30, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::LiveNodeListBase"*, %"class.blink::LiveNodeListBase"** %33, align 8
  br label %35

35:                                               ; preds = %28, %32
  %36 = phi %"class.blink::LiveNodeListBase"* [ %34, %32 ], [ null, %28 ]
  %37 = icmp eq %"class.blink::LiveNodeListBase"* %36, null
  %38 = getelementptr inbounds %"class.blink::LiveNodeListBase", %"class.blink::LiveNodeListBase"* %36, i64 -1, i32 1
  %39 = bitcast %"class.blink::Member.314"* %38 to %"class.blink::HTMLCollection"*
  %40 = select i1 %37, %"class.blink::HTMLCollection"* null, %"class.blink::HTMLCollection"* %39
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #11
  br label %56

56:                                               ; preds = %35, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret %"class.blink::HTMLCollection"* %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3154"* @_ZNK3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6LookupERKS6_(%"class.WTF::HashTable.3152"*, %"struct.std::__1::pair.3155"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3154"*, %"struct.WTF::KeyValuePair.3154"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3154"* %4, null
  br i1 %5, label %76, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.3152", %"class.WTF::HashTable.3152"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.3155", %"struct.std::__1::pair.3155"* %1, i64 0, i32 1
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %14, %16
  %18 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %19 = select i1 %17, %"class.WTF::AtomicString"* %18, %"class.WTF::AtomicString"* %11
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = lshr i32 %23, 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.3155", %"struct.std::__1::pair.3155"* %1, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %24, %26
  %28 = and i32 %27, %9
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %4, i64 %29
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %30, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, -128
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %4, i64 %29, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  %37 = and i1 %33, %36
  br i1 %37, label %76, label %38

38:                                               ; preds = %6
  %39 = xor i32 %27, -1
  %40 = lshr i32 %27, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %63, %38
  %53 = phi %"class.WTF::StringImpl"* [ %35, %38 ], [ %73, %63 ]
  %54 = phi i32 [ %32, %38 ], [ %70, %63 ]
  %55 = phi %"struct.WTF::KeyValuePair.3154"* [ %30, %38 ], [ %68, %63 ]
  %56 = phi i64 [ %29, %38 ], [ %67, %63 ]
  %57 = phi i64 [ 0, %38 ], [ %65, %63 ]
  %58 = icmp eq i32 %54, -127
  br i1 %58, label %63, label %59

59:                                               ; preds = %52
  %60 = icmp eq i32 %54, %26
  %61 = icmp eq %"class.WTF::StringImpl"* %53, %14
  %62 = and i1 %61, %60
  br i1 %62, label %76, label %63

63:                                               ; preds = %59, %52
  %64 = icmp eq i64 %57, 0
  %65 = select i1 %64, i64 %51, i64 %57
  %66 = add i64 %65, %56
  %67 = and i64 %66, %10
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %4, i64 %67
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %68, i64 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, -128
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %4, i64 %67, i32 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  %75 = and i1 %71, %74
  br i1 %75, label %76, label %52

76:                                               ; preds = %59, %63, %2, %6
  %77 = phi %"struct.WTF::KeyValuePair.3154"* [ null, %2 ], [ null, %6 ], [ %55, %59 ], [ null, %63 ]
  ret %"struct.WTF::KeyValuePair.3154"* %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLOptionsCollection"* @_ZN5blink17NodeListsNodeData6CachedINS_21HTMLOptionsCollectionEEEPT_NS_14CollectionTypeE(%"class.blink::NodeListsNodeData"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::pair.3155", align 8
  %4 = bitcast %"struct.std::__1::pair.3155"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %6 = getelementptr inbounds %"struct.std::__1::pair.3155", %"struct.std::__1::pair.3155"* %3, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair.3155", %"struct.std::__1::pair.3155"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !5

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %2, %11, %26
  %29 = getelementptr inbounds %"class.blink::NodeListsNodeData", %"class.blink::NodeListsNodeData"* %0, i64 0, i32 1, i32 0, i32 0
  %30 = call %"struct.WTF::KeyValuePair.3154"* @_ZNK3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6LookupERKS6_(%"class.WTF::HashTable.3152"* %29, %"struct.std::__1::pair.3155"* nonnull dereferenceable(16) %3) #11
  %31 = icmp eq %"struct.WTF::KeyValuePair.3154"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %30, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::LiveNodeListBase"*, %"class.blink::LiveNodeListBase"** %33, align 8
  br label %35

35:                                               ; preds = %28, %32
  %36 = phi %"class.blink::LiveNodeListBase"* [ %34, %32 ], [ null, %28 ]
  %37 = icmp eq %"class.blink::LiveNodeListBase"* %36, null
  %38 = getelementptr inbounds %"class.blink::LiveNodeListBase", %"class.blink::LiveNodeListBase"* %36, i64 -1, i32 1
  %39 = bitcast %"class.blink::Member.314"* %38 to %"class.blink::HTMLOptionsCollection"*
  %40 = select i1 %37, %"class.blink::HTMLOptionsCollection"* null, %"class.blink::HTMLOptionsCollection"* %39
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #11
  br label %56

56:                                               ; preds = %35, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret %"class.blink::HTMLOptionsCollection"* %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1814"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1814", %"class.WTF::Vector.1814"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1814", %"class.WTF::Vector.1814"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.1817"*, %"class.blink::Member.1817"** %8, align 8
  %10 = icmp eq %"class.blink::Member.1817"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HTMLElementEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.3280"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking.3280"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1814"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.3280", %"class.blink::HeapVectorBacking.3280"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.1817"*, %"class.blink::Member.1817"** %8, align 8
  %26 = icmp eq %"class.blink::Member.1817"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.1817"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !5

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1814"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1814"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1814"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1814", %"class.WTF::Vector.1814"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1814"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1814", %"class.WTF::Vector.1814"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HTMLElementEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.3280"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking.3280"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1814", %"class.WTF::Vector.1814"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.1817"*, %"class.blink::Member.1817"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1814", %"class.WTF::Vector.1814"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.3280"* %17, null
  %23 = icmp ne %"class.blink::Member.1817"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.1817"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1814"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.3280", %"class.blink::HeapVectorBacking.3280"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.1814"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.1814"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1814", %"class.WTF::Vector.1814"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.3280", %"class.blink::HeapVectorBacking.3280"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HTMLElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.3280"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.21, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([163 x i8], [163 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11HTMLElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking.3280"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking.3280"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1817"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !5

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1817"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HTMLElementEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HTMLElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1814"*, %"class.blink::HTMLElement"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1814", %"class.WTF::Vector.1814"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1814", %"class.WTF::Vector.1814"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1814"* %0, i32 %14) #11
  %15 = getelementptr inbounds %"class.WTF::Vector.1814", %"class.WTF::Vector.1814"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.1817"*, %"class.blink::Member.1817"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.1817", %"class.blink::Member.1817"* %16, i64 %18
  %20 = bitcast %"class.blink::HTMLElement"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.1817"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #11
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HTMLOptionElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLOptionElement"*
  tail call void @_ZNK5blink17HTMLOptionElement5TraceEPNS_7VisitorE(%"class.blink::HTMLOptionElement"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink17HTMLOptionElement5TraceEPNS_7VisitorE(%"class.blink::HTMLOptionElement"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10SelectTypeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SelectType"*
  %4 = bitcast i8* %1 to void (%"class.blink::SelectType"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SelectType"*, %"class.blink::Visitor"*)**, void (%"class.blink::SelectType"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::SelectType"*, %"class.blink::Visitor"*)*, void (%"class.blink::SelectType"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::SelectType"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv: argument 0"}
!8 = distinct !{!8, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv: argument 0"}
!11 = distinct !{!11, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv: argument 0"}
!17 = distinct !{!17, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv: argument 0"}
!20 = distinct !{!20, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv"}
!21 = !{i32 24, i32 33}
