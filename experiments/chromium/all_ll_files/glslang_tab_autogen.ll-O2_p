; ModuleID = '../../third_party/angle/src/compiler/translator/glslang_tab_autogen.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/glslang_tab_autogen.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.sh::ImmutableString" = type { i8*, i64 }
%"struct.std::__1::array.101" = type { [2 x i8] }
%"struct.std::__1::array.102" = type { [3 x i8] }
%"class.sh::TParseContext" = type <{ %"class.sh::TSymbolTable"*, i8, [3 x i8], i32, i32, [4 x i8], i64, i32, [4 x i8], %"class.sh::TIntermBlock"*, i32, i32, i32, [4 x i8], %"class.sh::TType"*, i8, i8, i8, i8, i32, i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", %"class.sh::TDiagnostics"*, %"class.sh::TDirectiveHandler", %"class.angle::pp::Preprocessor", i8*, i32, i32, i32, i32, i8, [3 x i8], %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.std::__1::map.69", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.sh::TSymbolTable" = type { %"class.sh::TSymbolTableBase", %"class.std::__1::vector", %"class.std::__1::vector.1", i8, i32, i32, i32, %struct.ShBuiltInResources, %"class.std::__1::map", %"class.sh::TVariable"* }
%"class.sh::TSymbolTableBase" = type { %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"* }
%"class.sh::TSymbol" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8, i8 }>
%"class.sh::TSymbolUniqueId" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::unique_ptr.3"*, %"class.std::__1::unique_ptr.3"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::unique_ptr.3" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::unique_ptr.3"* }
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array", %"struct.std::__1::array", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [3 x i32] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"class.sh::TVariable" = type { %"class.sh::TSymbol.base", %"class.sh::TType"*, %"class.sh::TConstantUnion"* }
%"class.sh::TSymbol.base" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8 }>
%"class.sh::TConstantUnion" = type { %union.anon.35, i32 }
%union.anon.35 = type { i32 }
%"class.sh::TIntermBlock" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.36", i8, [7 x i8] }>
%"class.sh::TIntermNode" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"class.sh::TIntermAggregateBase" = type { i32 (...)** }
%"class.sh::TVector.36" = type { %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"**, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.sh::TIntermNode"** }
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector" = type { %"class.std::__1::vector.17" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { i32*, i32*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i32* }
%"class.sh::TInterfaceBlock" = type { %"class.sh::TSymbol.base", %"class.sh::TFieldListCollection", i32, i32 }
%"class.sh::TFieldListCollection" = type { %"class.sh::TVector.22"*, i64, i32, %"class.std::__1::basic_string" }
%"class.sh::TVector.22" = type { %"class.std::__1::vector.23" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.sh::TField"**, %"class.sh::TField"**, %"class.std::__1::__compressed_pair.25" }
%"class.sh::TField" = type <{ %"class.sh::TType"*, %"class.sh::ImmutableString", %"struct.sh::TSourceLoc", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.sh::TField"** }
%"class.sh::TStructure" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TFieldListCollection", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TDiagnostics" = type { %"class.angle::pp::Diagnostics", %"class.sh::TInfoSinkBase"*, i32, i32 }
%"class.angle::pp::Diagnostics" = type { i32 (...)** }
%"class.sh::TInfoSinkBase" = type { %"class.std::__1::basic_string.44", %"class.std::__1::vector.52" }
%"class.std::__1::basic_string.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.47 }
%union.anon.47 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { i32*, i32*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.sh::TDirectiveHandler" = type <{ %"class.angle::pp::DirectiveHandler", %struct.TPragma, [4 x i8], %"class.std::__1::map.58"*, %"class.sh::TDiagnostics"*, i32*, i32, i8, [3 x i8] }>
%"class.angle::pp::DirectiveHandler" = type { i32 (...)** }
%struct.TPragma = type { i8, i8, i8, %"struct.TPragma::STDGL" }
%"struct.TPragma::STDGL" = type { i8 }
%"class.std::__1::map.58" = type { %"class.std::__1::__tree.59" }
%"class.std::__1::__tree.59" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.60", %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.angle::pp::Preprocessor" = type { %"struct.angle::pp::PreprocessorImpl"* }
%"struct.angle::pp::PreprocessorImpl" = type opaque
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::map.69" = type { %"class.std::__1::__tree.70" }
%"class.std::__1::__tree.70" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.71", %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%union.YYSTYPE = type { %struct.anon.80 }
%struct.anon.80 = type { i8, %union.anon.81, %union.anon.83 }
%union.anon.81 = type { %"struct.sh::TIntermNodePair" }
%"struct.sh::TIntermNodePair" = type { %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"* }
%union.anon.83 = type { %"struct.sh::TPublicType" }
%"struct.sh::TPublicType" = type { %"struct.sh::TTypeSpecifierNonArray", %"struct.sh::TLayoutQualifier", %"struct.sh::TMemoryQualifier", i32, i8, i8, i32, %"class.sh::TVector"* }
%"struct.sh::TTypeSpecifierNonArray" = type { i32, i8, i8, %"class.sh::TStructure"*, %"struct.sh::TSourceLoc", i8 }
%"class.sh::TIntermCase" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"* }
%"class.sh::TIntermTyped" = type { %"class.sh::TIntermNode" }
%"class.sh::TIntermSwitch" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TDeclarator" = type { %"class.sh::ImmutableString", %"class.sh::TVector"*, %"struct.sh::TSourceLoc" }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.sh::TDeclarator"**, %"class.sh::TDeclarator"**, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.sh::TDeclarator"** }
%"class.sh::TQualifierWrapperBase" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"class.sh::TTypeQualifierBuilder" = type <{ %"class.sh::TVector.92", i32, [4 x i8] }>
%"class.sh::TVector.92" = type { %"class.std::__1::vector.93" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"class.sh::TQualifierWrapperBase"**, %"class.sh::TQualifierWrapperBase"**, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.sh::TQualifierWrapperBase"** }
%"class.sh::TIntermDeclaration" = type { %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.36" }
%"class.sh::TFunction" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TVector.82"*, %"class.sh::TVariable"**, i64, %"class.sh::TType"*, %"class.sh::ImmutableString", i8, i8, i8, i8, [4 x i8] }>
%"class.sh::TVector.82" = type opaque
%"class.sh::TFunctionLookup" = type { %"class.sh::ImmutableString", %"class.sh::TType"*, %"class.sh::TIntermTyped"*, %"class.sh::TVector.36", %"class.sh::TSymbol"* }
%union.yyalloc = type { %union.YYSTYPE }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.103", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.105" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.sh::TIntermConstantUnion" = type { %"class.sh::TIntermExpression", %"class.sh::TConstantUnion"* }
%"class.sh::TIntermExpression" = type { %"class.sh::TIntermTyped", %"class.sh::TType" }
%"class.sh::TIntermFunctionPrototype" = type { %"class.sh::TIntermTyped", %"class.sh::TFunction"* }
%"class.sh::TIntermGlobalQualifierDeclaration" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermSymbol"*, i8, [7 x i8] }>
%"class.sh::TIntermSymbol" = type { %"class.sh::TIntermTyped", %"class.sh::TVariable"* }
%"class.sh::TStorageQualifierWrapper" = type <{ %"class.sh::TQualifierWrapperBase", i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.sh::TVector.84" = type { %"class.std::__1::vector.85" }
%"class.sh::TIntermBranch" = type { %"class.sh::TIntermNode", i8, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermFunctionDefinition" = type { %"class.sh::TIntermNode", %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermBlock"* }

$_ZNSt3__16vectorIj14pool_allocatorIjEE6insertENS_11__wrap_iterIPKjEEOj = comdat any

$_ZNSt3__16vectorIj14pool_allocatorIjEE6insertENS_11__wrap_iterIPKjEERS5_ = comdat any

$_ZN2sh21TQualifierWrapperBaseD2Ev = comdat any

$_ZN2sh21TQualifierWrapperBaseD0Ev = comdat any

$_ZTVN2sh21TQualifierWrapperBaseE = comdat any

@_ZZ7yyparsePN2sh13TParseContextEPvE13yyloc_default = internal unnamed_addr constant %"struct.sh::TSourceLoc" { i32 1, i32 1, i32 1, i32 1 }, align 4
@_ZL6yypact = internal unnamed_addr constant [450 x i16] [i16 2998, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 135, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -108, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -63, i16 -393, i16 -393, i16 -393, i16 -56, i16 -60, i16 -31, i16 3127, i16 -61, i16 -393, i16 -66, i16 -393, i16 1585, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -46, i16 -393, i16 2869, i16 -393, i16 -393, i16 3369, i16 -393, i16 -393, i16 -393, i16 -17, i16 -47, i16 -393, i16 -14, i16 -393, i16 3127, i16 -393, i16 -393, i16 -393, i16 3127, i16 -9, i16 -9, i16 -393, i16 6, i16 -119, i16 -80, i16 -393, i16 3127, i16 -393, i16 -393, i16 1707, i16 5, i16 -393, i16 -393, i16 -2, i16 3127, i16 -393, i16 -393, i16 1, i16 -74, i16 -393, i16 435, i16 -393, i16 -393, i16 -393, i16 -393, i16 -46, i16 -98, i16 -393, i16 2157, i16 -87, i16 -393, i16 -393, i16 3127, i16 -9, i16 2455, i16 -393, i16 -393, i16 11, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 2157, i16 2157, i16 2157, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -111, i16 -393, i16 -393, i16 -393, i16 12, i16 -73, i16 2305, i16 16, i16 -393, i16 2157, i16 -21, i16 -132, i16 -6, i16 -116, i16 -15, i16 -8, i16 -3, i16 -1, i16 25, i16 31, i16 -125, i16 -393, i16 18, i16 -393, i16 1858, i16 -393, i16 2593, i16 3127, i16 3, i16 -393, i16 -47, i16 13, i16 20, i16 -393, i16 22, i16 24, i16 32, i16 2009, i16 28, i16 2157, i16 35, i16 45, i16 44, i16 -393, i16 -393, i16 42, i16 -393, i16 -393, i16 -57, i16 -393, i16 -56, i16 48, i16 -393, i16 -393, i16 -393, i16 -393, i16 605, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 5, i16 2157, i16 -86, i16 -393, i16 -393, i16 2157, i16 -9, i16 -46, i16 -55, i16 -393, i16 -110, i16 -393, i16 -393, i16 -393, i16 -72, i16 -393, i16 -393, i16 2157, i16 3248, i16 -393, i16 -393, i16 2157, i16 49, i16 -393, i16 -393, i16 -393, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 2157, i16 -393, i16 -393, i16 51, i16 -393, i16 2731, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 52, i16 -393, i16 2157, i16 -393, i16 -393, i16 -45, i16 2157, i16 47, i16 -393, i16 -393, i16 -393, i16 775, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 2157, i16 2157, i16 -393, i16 -393, i16 -393, i16 -393, i16 2157, i16 -393, i16 -38, i16 5, i16 -9, i16 -393, i16 -129, i16 -393, i16 -393, i16 54, i16 53, i16 -393, i16 58, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -21, i16 -21, i16 -132, i16 -132, i16 -6, i16 -6, i16 -6, i16 -6, i16 -116, i16 -116, i16 -15, i16 -8, i16 -3, i16 -1, i16 25, i16 31, i16 -10, i16 -393, i16 -393, i16 143, i16 -14, i16 1115, i16 1285, i16 -69, i16 -393, i16 -62, i16 -393, i16 1435, i16 775, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -123, i16 -393, i16 2157, i16 61, i16 -393, i16 -393, i16 -393, i16 -393, i16 1435, i16 52, i16 -393, i16 53, i16 -9, i16 3127, i16 62, i16 57, i16 -393, i16 -393, i16 2157, i16 -393, i16 55, i16 63, i16 206, i16 -393, i16 64, i16 67, i16 945, i16 -393, i16 -59, i16 2157, i16 945, i16 52, i16 -393, i16 2157, i16 -393, i16 -393, i16 -393, i16 60, i16 53, i16 -393, i16 -393, i16 -393, i16 -393], align 16
@_ZL11yytranslate = internal unnamed_addr constant [437 x i8] c`abcdefghijklmnopqrstuvwxyz{|}~\7F\80\81\82\83\84\85\86\87\88\89\8A\8B\8C\8D\8E\8F\90\91\92\93\94\95\96\97\98\99\9A\9B\9C\9D\9E\9F\A0\A1\A2\A3\A4\A5\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5", align 16
@_ZL7yycheck = internal unnamed_addr constant [3501 x i16] [i16 0, i16 52, i16 119, i16 145, i16 119, i16 270, i16 124, i16 124, i16 262, i16 274, i16 198, i16 162, i16 187, i16 156, i16 0, i16 0, i16 181, i16 64, i16 167, i16 393, i16 130, i16 146, i16 130, i16 131, i16 416, i16 141, i16 142, i16 399, i16 139, i16 140, i16 147, i16 160, i16 147, i16 151, i16 151, i16 178, i16 179, i16 160, i16 170, i16 168, i16 172, i16 160, i16 159, i16 415, i16 159, i16 168, i16 438, i16 212, i16 167, i16 160, i16 167, i16 230, i16 167, i16 164, i16 162, i16 243, i16 181, i16 232, i16 168, i16 433, i16 176, i16 177, i16 160, i16 437, i16 130, i16 131, i16 245, i16 185, i16 185, i16 167, i16 187, i16 122, i16 187, i16 160, i16 160, i16 302, i16 303, i16 304, i16 305, i16 230, i16 167, i16 167, i16 162, i16 130, i16 233, i16 159, i16 159, i16 159, i16 168, i16 354, i16 159, i16 165, i16 165, i16 165, i16 245, i16 158, i16 165, i16 159, i16 286, i16 159, i16 159, i16 152, i16 153, i16 165, i16 165, i16 270, i16 165, i16 168, i16 165, i16 274, i16 165, i16 168, i16 168, i16 168, i16 160, i16 232, i16 233, i16 232, i16 233, i16 119, i16 165, i16 130, i16 131, i16 168, i16 124, i16 290, i16 314, i16 165, i16 143, i16 144, i16 168, i16 137, i16 138, i16 276, i16 165, i16 135, i16 133, i16 134, i16 138, i16 327, i16 5, i16 6, i16 7, i16 331, i16 319, i16 162, i16 400, i16 147, i16 162, i16 135, i16 135, i16 151, i16 173, i16 174, i16 175, i16 165, i16 166, i16 298, i16 299, i16 159, i16 300, i16 301, i16 306, i16 307, i16 158, i16 160, i16 168, i16 167, i16 167, i16 158, i16 145, i16 159, i16 180, i16 173, i16 158, i16 440, i16 179, i16 178, i16 147, i16 161, i16 158, i16 168, i16 158, i16 348, i16 349, i16 185, i16 158, i16 187, i16 168, i16 354, i16 148, i16 149, i16 150, i16 151, i16 152, i16 153, i16 154, i16 155, i16 156, i16 157, i16 168, i16 166, i16 319, i16 158, i16 319, i16 162, i16 158, i16 163, i16 159, i16 167, i16 67, i16 399, i16 161, i16 166, i16 162, i16 161, i16 158, i16 360, i16 165, i16 158, i16 163, i16 159, i16 159, i16 168, i16 18, i16 308, i16 162, i16 415, i16 168, i16 287, i16 309, i16 312, i16 232, i16 233, i16 167, i16 310, i16 313, i16 425, i16 151, i16 196, i16 197, i16 311, i16 147, i16 151, i16 409, i16 6, i16 236, i16 275, i16 436, i16 358, i16 392, i16 431, i16 437, i16 415, i16 336, i16 394, i16 394, i16 135, i16 215, i16 -1, i16 -1, i16 -1, i16 262, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 230, i16 -1, i16 440, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 399, i16 -1, i16 -1, i16 -1, i16 245, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 415, i16 -1, i16 420, i16 420, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 319, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 336, i16 -1, i16 295, i16 296, i16 297, i16 298, i16 299, i16 300, i16 301, i16 302, i16 303, i16 304, i16 305, i16 306, i16 307, i16 308, i16 309, i16 310, i16 311, i16 312, i16 313, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 419, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 393, i16 394, i16 -1, i16 -1, i16 -1, i16 -1, i16 399, i16 400, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 415, i16 -1, i16 -1, i16 -1, i16 -1, i16 420, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 433, i16 -1, i16 -1, i16 -1, i16 437, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 -1, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 -1, i16 -1, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 -1, i16 162, i16 163, i16 -1, i16 -1, i16 -1, i16 -1, i16 168, i16 169, i16 170, i16 171, i16 172, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 -1, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 -1, i16 -1, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 -1, i16 162, i16 163, i16 -1, i16 -1, i16 -1, i16 -1, i16 168, i16 169, i16 170, i16 171, i16 172, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 -1, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 -1, i16 -1, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 -1, i16 162, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 168, i16 169, i16 170, i16 171, i16 172, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 -1, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 -1, i16 -1, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 -1, i16 162, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 168, i16 169, i16 170, i16 171, i16 172, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 -1, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 -1, i16 -1, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 168, i16 169, i16 170, i16 171, i16 172, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 -1, i16 -1, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 3, i16 4, i16 5, i16 6, i16 7, i16 158, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 -1, i16 -1, i16 -1, i16 168, i16 169, i16 170, i16 171, i16 172, i16 -1, i16 -1, i16 -1, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 -1, i16 -1, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 3, i16 4, i16 5, i16 6, i16 7, i16 158, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 -1, i16 -1, i16 -1, i16 -1, i16 169, i16 170, i16 171, i16 172, i16 -1, i16 -1, i16 -1, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 -1, i16 130, i16 131, i16 -1, i16 11, i16 12, i16 13, i16 14, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 168, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 -1, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 -1, i16 -1, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 161, i16 11, i16 12, i16 13, i16 14, i16 -1, i16 -1, i16 -1, i16 169, i16 170, i16 171, i16 172, i16 -1, i16 -1, i16 -1, i16 -1, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 -1, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 -1, i16 -1, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 161, i16 11, i16 12, i16 13, i16 14, i16 -1, i16 -1, i16 -1, i16 169, i16 170, i16 171, i16 172, i16 -1, i16 -1, i16 -1, i16 -1, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 -1, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 -1, i16 -1, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 11, i16 12, i16 13, i16 14, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 168, i16 169, i16 170, i16 171, i16 172, i16 -1, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 -1, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 -1, i16 -1, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 11, i16 12, i16 13, i16 14, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 169, i16 170, i16 171, i16 172, i16 -1, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 -1, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 -1, i16 -1, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 3, i16 4, i16 5, i16 6, i16 7, i16 158, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 -1, i16 -1, i16 -1, i16 -1, i16 169, i16 170, i16 171, i16 172, i16 -1, i16 -1, i16 -1, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 -1, i16 -1, i16 131, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 163, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 -1, i16 -1, i16 131, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 163, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 -1, i16 -1, i16 131, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 0, i16 -1, i16 -1, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 163, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 -1, i16 -1, i16 131, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 -1, i16 -1, i16 131, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 -1, i16 -1, i16 131, i16 11, i16 12, i16 13, i16 14, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 -1, i16 128, i16 -1, i16 130, i16 131, i16 11, i16 12, i16 13, i16 14, i16 136, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 -1, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 -1, i16 128, i16 -1, i16 -1, i16 131], align 16
@_ZL7yytable = internal unnamed_addr constant [3501 x i16] [i16 132, i16 142, i16 152, i16 174, i16 151, i16 353, i16 160, i16 161, i16 352, i16 355, i16 283, i16 227, i16 280, i16 182, i16 115, i16 116, i16 272, i16 169, i16 232, i16 412, i16 360, i16 313, i16 139, i16 140, i16 429, i16 302, i16 303, i16 419, i16 284, i16 285, i16 152, i16 162, i16 151, i16 160, i16 152, i16 269, i16 271, i16 230, i16 298, i16 406, i16 299, i16 162, i16 186, i16 419, i16 185, i16 423, i16 447, i16 292, i16 181, i16 286, i16 186, i16 317, i16 185, i16 287, i16 141, i16 330, i16 314, i16 280, i16 361, i16 441, i16 304, i16 305, i16 162, i16 441, i16 155, i16 140, i16 332, i16 160, i16 275, i16 270, i16 186, i16 156, i16 185, i16 230, i16 230, i16 376, i16 377, i16 378, i16 379, i16 227, i16 274, i16 354, i16 183, i16 170, i16 319, i16 235, i16 289, i16 362, i16 184, i16 403, i16 416, i16 236, i16 290, i16 349, i16 227, i16 143, i16 349, i16 417, i16 364, i16 146, i16 444, i16 178, i16 179, i16 349, i16 153, i16 272, i16 349, i16 154, i16 349, i16 272, i16 358, i16 350, i16 144, i16 359, i16 162, i16 186, i16 186, i16 185, i16 185, i16 132, i16 349, i16 139, i16 140, i16 396, i16 132, i16 368, i16 388, i16 358, i16 306, i16 307, i16 404, i16 300, i16 301, i16 357, i16 147, i16 132, i16 320, i16 321, i16 166, i16 395, i16 3, i16 4, i16 5, i16 397, i16 280, i16 168, i16 352, i16 132, i16 173, i16 115, i16 116, i16 132, i16 295, i16 296, i16 297, i16 349, i16 409, i16 372, i16 373, i16 132, i16 374, i16 375, i16 380, i16 381, i16 180, i16 230, i16 231, i16 132, i16 234, i16 -30, i16 311, i16 288, i16 308, i16 257, i16 293, i16 448, i16 309, i16 310, i16 312, i16 315, i16 326, i16 323, i16 327, i16 401, i16 402, i16 132, i16 331, i16 132, i16 324, i16 272, i16 337, i16 338, i16 339, i16 340, i16 341, i16 342, i16 343, i16 344, i16 345, i16 346, i16 328, i16 333, i16 186, i16 334, i16 185, i16 214, i16 -29, i16 335, i16 -24, i16 347, i16 410, i16 418, i16 389, i16 398, i16 -285, i16 408, i16 -31, i16 407, i16 349, i16 425, i16 434, i16 433, i16 437, i16 436, i16 438, i16 382, i16 248, i16 418, i16 449, i16 367, i16 383, i16 386, i16 132, i16 132, i16 440, i16 384, i16 387, i16 435, i16 176, i16 281, i16 282, i16 385, i16 175, i16 177, i16 424, i16 138, i16 322, i16 356, i16 445, i16 405, i16 411, i16 439, i16 446, i16 426, i16 400, i16 413, i16 414, i16 165, i16 294, i16 0, i16 0, i16 0, i16 257, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 214, i16 0, i16 272, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 420, i16 0, i16 0, i16 0, i16 214, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 420, i16 0, i16 160, i16 161, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 132, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 257, i16 0, i16 369, i16 370, i16 371, i16 214, i16 214, i16 214, i16 214, i16 214, i16 214, i16 214, i16 214, i16 214, i16 214, i16 214, i16 214, i16 214, i16 214, i16 214, i16 214, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 432, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 257, i16 257, i16 0, i16 0, i16 0, i16 0, i16 257, i16 257, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 257, i16 0, i16 0, i16 0, i16 0, i16 132, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 257, i16 0, i16 0, i16 0, i16 257, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 237, i16 238, i16 239, i16 0, i16 240, i16 241, i16 242, i16 243, i16 244, i16 245, i16 246, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 247, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 189, i16 190, i16 114, i16 191, i16 192, i16 193, i16 194, i16 195, i16 0, i16 0, i16 196, i16 197, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 198, i16 0, i16 0, i16 0, i16 248, i16 249, i16 0, i16 0, i16 0, i16 0, i16 250, i16 200, i16 201, i16 202, i16 203, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 237, i16 238, i16 239, i16 0, i16 240, i16 241, i16 242, i16 243, i16 244, i16 245, i16 246, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 247, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 189, i16 190, i16 114, i16 191, i16 192, i16 193, i16 194, i16 195, i16 0, i16 0, i16 196, i16 197, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 198, i16 0, i16 0, i16 0, i16 248, i16 351, i16 0, i16 0, i16 0, i16 0, i16 250, i16 200, i16 201, i16 202, i16 203, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 237, i16 238, i16 239, i16 0, i16 240, i16 241, i16 242, i16 243, i16 244, i16 245, i16 246, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 247, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 189, i16 190, i16 114, i16 191, i16 192, i16 193, i16 194, i16 195, i16 0, i16 0, i16 196, i16 197, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 198, i16 0, i16 0, i16 0, i16 248, i16 0, i16 0, i16 0, i16 0, i16 0, i16 250, i16 200, i16 201, i16 202, i16 203, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 237, i16 238, i16 239, i16 0, i16 240, i16 241, i16 242, i16 243, i16 244, i16 245, i16 246, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 247, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 189, i16 190, i16 114, i16 191, i16 192, i16 193, i16 194, i16 195, i16 0, i16 0, i16 196, i16 197, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 198, i16 0, i16 0, i16 0, i16 173, i16 0, i16 0, i16 0, i16 0, i16 0, i16 250, i16 200, i16 201, i16 202, i16 203, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 237, i16 238, i16 239, i16 0, i16 240, i16 241, i16 242, i16 243, i16 244, i16 245, i16 246, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 247, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 189, i16 190, i16 114, i16 191, i16 192, i16 193, i16 194, i16 195, i16 0, i16 0, i16 196, i16 197, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 198, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 250, i16 200, i16 201, i16 202, i16 203, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 189, i16 190, i16 114, i16 191, i16 192, i16 193, i16 194, i16 195, i16 0, i16 0, i16 196, i16 197, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 198, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 0, i16 0, i16 0, i16 250, i16 200, i16 201, i16 202, i16 203, i16 0, i16 0, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 189, i16 190, i16 114, i16 191, i16 192, i16 193, i16 194, i16 195, i16 0, i16 0, i16 196, i16 197, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 198, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 0, i16 0, i16 0, i16 0, i16 200, i16 201, i16 202, i16 203, i16 0, i16 0, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 0, i16 157, i16 114, i16 0, i16 9, i16 10, i16 11, i16 12, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 0, i16 0, i16 0, i16 0, i16 0, i16 158, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 52, i16 53, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 0, i16 113, i16 189, i16 190, i16 114, i16 191, i16 192, i16 193, i16 194, i16 195, i16 0, i16 0, i16 196, i16 197, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 198, i16 0, i16 0, i16 199, i16 9, i16 10, i16 11, i16 12, i16 0, i16 0, i16 0, i16 200, i16 201, i16 202, i16 203, i16 0, i16 0, i16 0, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 52, i16 53, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 0, i16 113, i16 189, i16 190, i16 114, i16 191, i16 192, i16 193, i16 194, i16 195, i16 0, i16 0, i16 196, i16 197, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 198, i16 0, i16 0, i16 316, i16 9, i16 10, i16 11, i16 12, i16 0, i16 0, i16 0, i16 200, i16 201, i16 202, i16 203, i16 0, i16 0, i16 0, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 52, i16 53, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 0, i16 113, i16 189, i16 190, i16 114, i16 191, i16 192, i16 193, i16 194, i16 195, i16 0, i16 0, i16 196, i16 197, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 198, i16 9, i16 10, i16 11, i16 12, i16 0, i16 0, i16 0, i16 0, i16 0, i16 329, i16 200, i16 201, i16 202, i16 203, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 52, i16 53, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 0, i16 113, i16 189, i16 190, i16 114, i16 191, i16 192, i16 193, i16 194, i16 195, i16 0, i16 0, i16 196, i16 197, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 198, i16 9, i16 10, i16 11, i16 12, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 200, i16 201, i16 202, i16 203, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 52, i16 291, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 0, i16 113, i16 189, i16 190, i16 114, i16 191, i16 192, i16 193, i16 194, i16 195, i16 0, i16 0, i16 196, i16 197, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 198, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 0, i16 0, i16 0, i16 0, i16 200, i16 201, i16 202, i16 203, i16 0, i16 0, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 0, i16 0, i16 114, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 0, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 279, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 0, i16 0, i16 114, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 0, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 318, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 0, i16 0, i16 114, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 164, i16 0, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 390, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 0, i16 0, i16 114, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 0, i16 0, i16 114, i16 1, i16 2, i16 3, i16 4, i16 5, i16 0, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 0, i16 0, i16 114, i16 9, i16 10, i16 11, i16 12, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 52, i16 53, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 0, i16 113, i16 0, i16 365, i16 114, i16 9, i16 10, i16 11, i16 12, i16 366, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 52, i16 53, i16 0, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 0, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 0, i16 113, i16 0, i16 0, i16 114], align 16
@_ZL8yydefact = internal unnamed_addr constant [450 x i16] [i16 0, i16 127, i16 128, i16 153, i16 154, i16 155, i16 0, i16 135, i16 137, i16 173, i16 170, i16 171, i16 172, i16 177, i16 178, i16 179, i16 180, i16 181, i16 182, i16 174, i16 175, i16 176, i16 183, i16 184, i16 185, i16 186, i16 187, i16 188, i16 138, i16 139, i16 140, i16 143, i16 144, i16 136, i16 189, i16 190, i16 191, i16 192, i16 193, i16 194, i16 151, i16 141, i16 123, i16 122, i16 124, i16 142, i16 145, i16 146, i16 147, i16 148, i16 149, i16 150, i16 0, i16 169, i16 196, i16 198, i16 229, i16 231, i16 199, i16 205, i16 206, i16 207, i16 208, i16 214, i16 215, i16 216, i16 217, i16 200, i16 209, i16 218, i16 201, i16 210, i16 219, i16 197, i16 223, i16 224, i16 225, i16 228, i16 202, i16 226, i16 211, i16 220, i16 203, i16 227, i16 212, i16 221, i16 204, i16 213, i16 222, i16 230, i16 232, i16 233, i16 234, i16 235, i16 236, i16 237, i16 238, i16 239, i16 240, i16 241, i16 242, i16 243, i16 244, i16 246, i16 248, i16 245, i16 247, i16 249, i16 250, i16 251, i16 252, i16 253, i16 0, i16 195, i16 255, i16 324, i16 325, i16 0, i16 99, i16 98, i16 0, i16 110, i16 115, i16 132, i16 0, i16 133, i16 134, i16 125, i16 129, i16 120, i16 131, i16 130, i16 152, i16 163, i16 254, i16 0, i16 321, i16 323, i16 0, i16 2, i16 3, i16 258, i16 0, i16 0, i16 89, i16 0, i16 97, i16 0, i16 106, i16 100, i16 108, i16 0, i16 109, i16 0, i16 90, i16 2, i16 116, i16 0, i16 95, i16 0, i16 126, i16 121, i16 0, i16 164, i16 1, i16 322, i16 0, i16 0, i16 256, i16 162, i16 159, i16 0, i16 157, i16 0, i16 326, i16 101, i16 105, i16 107, i16 103, i16 111, i16 102, i16 0, i16 117, i16 88, i16 96, i16 0, i16 0, i16 0, i16 260, i16 10, i16 4, i16 8, i16 6, i16 7, i16 9, i16 31, i16 0, i16 0, i16 0, i16 165, i16 38, i16 37, i16 39, i16 36, i16 5, i16 12, i16 32, i16 14, i16 19, i16 20, i16 0, i16 0, i16 25, i16 0, i16 40, i16 0, i16 44, i16 47, i16 50, i16 55, i16 58, i16 60, i16 62, i16 64, i16 66, i16 68, i16 70, i16 87, i16 0, i16 29, i16 0, i16 91, i16 0, i16 0, i16 0, i16 156, i16 0, i16 0, i16 0, i16 306, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 280, i16 289, i16 293, i16 40, i16 72, i16 85, i16 0, i16 269, i16 0, i16 152, i16 272, i16 291, i16 271, i16 270, i16 0, i16 273, i16 274, i16 275, i16 276, i16 277, i16 278, i16 104, i16 0, i16 112, i16 268, i16 119, i16 0, i16 0, i16 266, i16 0, i16 264, i16 0, i16 261, i16 33, i16 34, i16 0, i16 16, i16 17, i16 0, i16 0, i16 23, i16 22, i16 0, i16 169, i16 26, i16 28, i16 35, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 166, i16 167, i16 0, i16 259, i16 0, i16 160, i16 161, i16 158, i16 317, i16 316, i16 287, i16 308, i16 0, i16 320, i16 318, i16 0, i16 0, i16 0, i16 301, i16 304, i16 279, i16 0, i16 75, i16 76, i16 78, i16 77, i16 80, i16 81, i16 82, i16 83, i16 84, i16 79, i16 74, i16 0, i16 0, i16 294, i16 290, i16 292, i16 114, i16 0, i16 118, i16 0, i16 267, i16 0, i16 262, i16 0, i16 92, i16 11, i16 0, i16 18, i16 30, i16 15, i16 21, i16 27, i16 41, i16 42, i16 43, i16 46, i16 45, i16 48, i16 49, i16 53, i16 54, i16 51, i16 52, i16 56, i16 57, i16 59, i16 61, i16 63, i16 65, i16 67, i16 69, i16 0, i16 168, i16 257, i16 0, i16 0, i16 0, i16 0, i16 0, i16 319, i16 0, i16 300, i16 0, i16 281, i16 73, i16 86, i16 113, i16 263, i16 265, i16 93, i16 0, i16 13, i16 0, i16 0, i16 286, i16 288, i16 311, i16 310, i16 313, i16 287, i16 298, i16 302, i16 0, i16 0, i16 0, i16 0, i16 94, i16 71, i16 0, i16 312, i16 0, i16 0, i16 297, i16 295, i16 0, i16 0, i16 0, i16 282, i16 0, i16 314, i16 0, i16 287, i16 299, i16 0, i16 284, i16 305, i16 283, i16 0, i16 315, i16 309, i16 296, i16 303, i16 307], align 16
@_ZL4yyr2 = internal unnamed_addr constant [327 x i8] calign 16
@.str = private unnamed_addr constant [18 x i8] c"unsupported value\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@.str.2 = private unnamed_addr constant [49 x i8] c"methods supported in GLSL ES 3.00 and above only\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"bit-wise operator supported in GLSL ES 3.00 and above only\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.6 = private unnamed_addr constant [66 x i8] c"integer modulus operator supported in GLSL ES 3.00 and above only\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"<<\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c">>\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"%=\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"<<=\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c">>=\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"&=\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"^=\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"|=\00", align 1
@.str.19 = private unnamed_addr constant [58 x i8] c"interface blocks supported in GLSL ES 3.00 and above only\00", align 1
@_ZN2shL21kEmptyImmutableStringE = internal constant %"class.sh::ImmutableString" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0), i64 0 }, align 8
@.str.20 = private unnamed_addr constant [47 x i8] c"cannot be a parameter type except for '(void)'\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.22 = private unnamed_addr constant [80 x i8] c"first-class arrays (array initializer) supported in GLSL ES 3.00 and above only\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.24 = private unnamed_addr constant [36 x i8] c"unsupported interpolation qualifier\00", align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"noperspective\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"layout\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"invariant\00", align 1
@.str.28 = private unnamed_addr constant [34 x i8] c" supported in vertex shaders only\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"attribute\00", align 1
@.str.30 = private unnamed_addr constant [32 x i8] c" supported in GLSL ES 1.00 only\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"varying\00", align 1
@.str.32 = private unnamed_addr constant [59 x i8] c"storage qualifier supported in GLSL ES 3.00 and above only\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"centroid\00", align 1
@.str.34 = private unnamed_addr constant [30 x i8] c"unsupported storage qualifier\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"patch\00", align 1
@.str.36 = private unnamed_addr constant [59 x i8] c"storage qualifier supported in GLSL ES 3.10 and above only\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"buffer\00", align 1
@.str.38 = private unnamed_addr constant [35 x i8] c" supported in compute shaders only\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"shared\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"sample\00", align 1
@.str.41 = private unnamed_addr constant [64 x i8] c"implicitly sized array supported in GLSL ES 3.00 and above only\00", align 1
@.str.42 = private unnamed_addr constant [58 x i8] c"arrays of arrays supported in GLSL ES 3.10 and above only\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"unsupported type\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"yuvCscStandardEXT\00", align 1
@.str.45 = private unnamed_addr constant [19 x i8] c"__samplerCubeArray\00", align 1
@_ZZ7yyparsePN2sh13TParseContextEPvE10extensions = internal constant %"struct.std::__1::array.101" { [2 x i8] c"\22\15" }, align 1
@.str.46 = private unnamed_addr constant [16 x i8] c"__samplerBuffer\00", align 1
@.str.47 = private unnamed_addr constant [20 x i8] c"__isamplerCubeArray\00", align 1
@_ZZ7yyparsePN2sh13TParseContextEPvE10extensions_0 = internal constant %"struct.std::__1::array.101" { [2 x i8] c"\22\15" }, align 1
@.str.48 = private unnamed_addr constant [17 x i8] c"__isamplerBuffer\00", align 1
@.str.49 = private unnamed_addr constant [20 x i8] c"__usamplerCubeArray\00", align 1
@_ZZ7yyparsePN2sh13TParseContextEPvE10extensions_1 = internal constant %"struct.std::__1::array.101" { [2 x i8] c"\22\15" }, align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"__usamplerBuffer\00", align 1
@.str.51 = private unnamed_addr constant [25 x i8] c"__samplerCubeArrayShadow\00", align 1
@.str.52 = private unnamed_addr constant [18 x i8] c"samplerVideoWEBGL\00", align 1
@_ZZ7yyparsePN2sh13TParseContextEPvE10extensions_2 = internal constant %"struct.std::__1::array.102" { [3 x i8] c"\18\1C\1B" }, align 1
@.str.53 = private unnamed_addr constant [19 x i8] c"samplerExternalOES\00", align 1
@.str.54 = private unnamed_addr constant [26 x i8] c"__samplerExternal2DY2YEXT\00", align 1
@.str.55 = private unnamed_addr constant [14 x i8] c"sampler2DRect\00", align 1
@.str.56 = private unnamed_addr constant [17 x i8] c"__imageCubeArray\00", align 1
@.str.57 = private unnamed_addr constant [18 x i8] c"__iimageCubeArray\00", align 1
@.str.58 = private unnamed_addr constant [18 x i8] c"__uimageCubeArray\00", align 1
@_ZZ7yyparsePN2sh13TParseContextEPvE10extensions_3 = internal constant %"struct.std::__1::array.101" { [2 x i8] c"\22\15" }, align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"__imageBuffer\00", align 1
@_ZZ7yyparsePN2sh13TParseContextEPvE10extensions_4 = internal constant %"struct.std::__1::array.101" { [2 x i8] c"\22\15" }, align 1
@.str.60 = private unnamed_addr constant [15 x i8] c"__iimageBuffer\00", align 1
@_ZZ7yyparsePN2sh13TParseContextEPvE10extensions_5 = internal constant %"struct.std::__1::array.101" { [2 x i8] c"\22\15" }, align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"__uimageBuffer\00", align 1
@_ZL4yyr1 = internal unnamed_addr constant [327 x i16] [i16 0, i16 182, i16 183, i16 183, i16 184, i16 185, i16 185, i16 185, i16 185, i16 185, i16 185, i16 185, i16 186, i16 186, i16 186, i16 186, i16 186, i16 186, i16 187, i16 188, i16 189, i16 189, i16 190, i16 190, i16 191, i16 191, i16 192, i16 192, i16 193, i16 194, i16 194, i16 194, i16 195, i16 195, i16 195, i16 195, i16 196, i16 196, i16 196, i16 196, i16 197, i16 197, i16 197, i16 197, i16 198, i16 198, i16 198, i16 199, i16 199, i16 199, i16 200, i16 200, i16 200, i16 200, i16 200, i16 201, i16 201, i16 201, i16 202, i16 202, i16 203, i16 203, i16 204, i16 204, i16 205, i16 205, i16 206, i16 206, i16 207, i16 207, i16 208, i16 208, i16 209, i16 209, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 211, i16 211, i16 212, i16 213, i16 214, i16 214, i16 214, i16 214, i16 214, i16 214, i16 214, i16 214, i16 215, i16 216, i16 216, i16 217, i16 217, i16 218, i16 219, i16 219, i16 220, i16 220, i16 220, i16 220, i16 221, i16 222, i16 222, i16 222, i16 222, i16 222, i16 223, i16 223, i16 223, i16 223, i16 223, i16 224, i16 224, i16 225, i16 225, i16 225, i16 226, i16 226, i16 227, i16 228, i16 229, i16 229, i16 229, i16 229, i16 229, i16 229, i16 230, i16 230, i16 230, i16 230, i16 230, i16 230, i16 230, i16 230, i16 230, i16 230, i16 230, i16 230, i16 230, i16 230, i16 230, i16 230, i16 230, i16 231, i16 232, i16 232, i16 232, i16 233, i16 234, i16 234, i16 235, i16 235, i16 235, i16 235, i16 236, i16 236, i16 237, i16 237, i16 237, i16 237, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 238, i16 240, i16 239, i16 241, i16 239, i16 242, i16 242, i16 243, i16 243, i16 244, i16 244, i16 245, i16 245, i16 246, i16 247, i16 248, i16 248, i16 249, i16 249, i16 249, i16 249, i16 249, i16 249, i16 249, i16 250, i16 251, i16 252, i16 250, i16 253, i16 253, i16 255, i16 254, i16 256, i16 254, i16 257, i16 257, i16 258, i16 258, i16 259, i16 259, i16 260, i16 261, i16 261, i16 263, i16 262, i16 264, i16 264, i16 265, i16 265, i16 267, i16 266, i16 268, i16 266, i16 269, i16 266, i16 270, i16 270, i16 271, i16 271, i16 272, i16 272, i16 273, i16 273, i16 273, i16 273, i16 273, i16 274, i16 274, i16 275, i16 275, i16 277, i16 276], align 16
@_ZL7yypgoto = internal unnamed_addr constant [96 x i16] [i16 -393, i16 -51, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -58, i16 -393, i16 -393, i16 -393, i16 -393, i16 43, i16 -393, i16 -141, i16 -140, i16 -227, i16 -144, i16 -83, i16 -79, i16 -75, i16 -70, i16 -81, i16 -77, i16 -393, i16 -151, i16 -165, i16 -393, i16 -188, i16 -179, i16 -393, i16 14, i16 15, i16 -393, i16 -393, i16 -393, i16 87, i16 95, i16 92, i16 -393, i16 -393, i16 -372, i16 -393, i16 -115, i16 -393, i16 -393, i16 -118, i16 -393, i16 -117, i16 239, i16 -393, i16 -393, i16 10, i16 0, i16 -143, i16 -393, i16 -393, i16 -393, i16 -393, i16 -149, i16 -175, i16 -28, i16 -109, i16 -265, i16 -139, i16 -254, i16 -374, i16 -180, i16 -393, i16 -393, i16 -185, i16 -392, i16 -393, i16 -393, i16 -142, i16 -82, i16 -138, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -162, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 -393, i16 122, i16 -393, i16 -393], align 16
@_ZL9yydefgoto = internal unnamed_addr constant [96 x i16] [i16 -1, i16 276, i16 204, i16 205, i16 206, i16 363, i16 207, i16 208, i16 209, i16 210, i16 211, i16 212, i16 213, i16 251, i16 215, i16 216, i16 217, i16 218, i16 219, i16 220, i16 221, i16 222, i16 223, i16 224, i16 225, i16 226, i16 252, i16 253, i16 348, i16 254, i16 228, i16 159, i16 255, i16 256, i16 117, i16 118, i16 119, i16 148, i16 149, i16 150, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 129, i16 130, i16 131, i16 171, i16 172, i16 229, i16 163, i16 133, i16 134, i16 233, i16 167, i16 187, i16 188, i16 277, i16 278, i16 273, i16 258, i16 259, i16 260, i16 261, i16 336, i16 422, i16 442, i16 391, i16 392, i16 393, i16 443, i16 262, i16 263, i16 264, i16 430, i16 265, i16 431, i16 266, i16 421, i16 267, i16 399, i16 325, i16 394, i16 415, i16 427, i16 428, i16 268, i16 135, i16 136, i16 137, i16 145], align 16
@.str.62 = private unnamed_addr constant [13 x i8] c"syntax error\00", align 1
@.str.65 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.68 = private unnamed_addr constant [8 x i8] c"itu_601\00", align 1
@.str.69 = private unnamed_addr constant [19 x i8] c"itu_601_full_range\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"itu_709\00", align 1
@_ZTVN2sh23TLayoutQualifierWrapperE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTVN2sh21TQualifierWrapperBaseE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::TQualifierWrapperBase"*)* @_ZN2sh21TQualifierWrapperBaseD2Ev to i8*), i8* bitcast (void (%"class.sh::TQualifierWrapperBase"*)* @_ZN2sh21TQualifierWrapperBaseD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN2sh26TPrecisionQualifierWrapperE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTVN2sh30TInterpolationQualifierWrapperE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTVN2sh26TInvariantQualifierWrapperE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTVN2sh24TPreciseQualifierWrapperE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTVN2sh24TStorageQualifierWrapperE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTVN2sh23TMemoryQualifierWrapperE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTVN2sh12TIntermBlockE = external unnamed_addr constant { [31 x i8*], [6 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z7yyparsePN2sh13TParseContextEPv(%"class.sh::TParseContext"*, i8*) local_unnamed_addr #0 {
  %3 = alloca [92 x i8], align 8
  %4 = alloca %"class.sh::ImmutableString", align 8
  %5 = alloca %"class.sh::ImmutableString", align 8
  %6 = alloca %union.YYSTYPE, align 8
  %7 = alloca %"struct.sh::TSourceLoc", align 8
  %8 = alloca [200 x i16], align 16
  %9 = alloca [200 x %union.YYSTYPE], align 16
  %10 = alloca [200 x %"struct.sh::TSourceLoc"], align 16
  %11 = alloca %union.YYSTYPE, align 8
  %12 = alloca %"struct.sh::TSourceLoc", align 4
  %13 = alloca %"class.sh::ImmutableString", align 8
  %14 = alloca %"class.sh::ImmutableString", align 8
  %15 = alloca %"class.sh::ImmutableString", align 8
  %16 = alloca %"class.sh::ImmutableString", align 8
  %17 = alloca %"class.sh::ImmutableString", align 8
  %18 = alloca %"class.sh::ImmutableString", align 8
  %19 = alloca %"class.sh::ImmutableString", align 8
  %20 = alloca %"class.sh::ImmutableString", align 8
  %21 = alloca %"class.sh::ImmutableString", align 8
  %22 = alloca %"class.sh::ImmutableString", align 8
  %23 = alloca %"class.sh::ImmutableString", align 8
  %24 = alloca %"class.sh::ImmutableString", align 8
  %25 = alloca %"class.sh::ImmutableString", align 8
  %26 = alloca %"class.sh::ImmutableString", align 8
  %27 = alloca %"class.sh::ImmutableString", align 8
  %28 = alloca %"class.sh::ImmutableString", align 8
  %29 = alloca %"class.sh::ImmutableString", align 8
  %30 = alloca %"class.sh::ImmutableString", align 8
  %31 = alloca %"class.sh::ImmutableString", align 8
  %32 = alloca %"class.sh::ImmutableString", align 8
  %33 = alloca %"class.sh::ImmutableString", align 8
  %34 = alloca %"class.sh::ImmutableString", align 8
  %35 = alloca %"class.sh::ImmutableString", align 8
  %36 = alloca %"class.sh::ImmutableString", align 8
  %37 = alloca %"class.sh::ImmutableString", align 8
  %38 = alloca %"class.sh::ImmutableString", align 8
  %39 = alloca %"struct.sh::TPublicType", align 8
  %40 = alloca %"struct.sh::TLayoutQualifier", align 4
  %41 = alloca %"struct.sh::TLayoutQualifier", align 8
  %42 = alloca %"struct.sh::TLayoutQualifier", align 4
  %43 = alloca %"class.sh::ImmutableString", align 8
  %44 = alloca %"struct.sh::TLayoutQualifier", align 4
  %45 = alloca %"class.sh::ImmutableString", align 8
  %46 = alloca %"struct.sh::TLayoutQualifier", align 4
  %47 = alloca %"class.sh::ImmutableString", align 8
  %48 = alloca %"struct.sh::TLayoutQualifier", align 4
  %49 = alloca %"class.sh::ImmutableString", align 8
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca %"class.sh::ImmutableString", align 8
  %53 = alloca %"struct.sh::TTypeSpecifierNonArray", align 8
  %54 = alloca %"class.sh::ImmutableString", align 8
  %55 = alloca %"struct.sh::TTypeSpecifierNonArray", align 8
  %56 = alloca %"class.sh::ImmutableString", align 8
  %57 = alloca %"class.sh::ImmutableString", align 8
  %58 = alloca %"class.sh::ImmutableString", align 8
  %59 = getelementptr inbounds [92 x i8], [92 x i8]* %3, i64 0, i64 0
  %60 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %60) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 184, i1 false)
  %61 = bitcast %"struct.sh::TSourceLoc"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #8
  %62 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %7, i64 0, i32 2
  %63 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %7, i64 0, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* align 4 bitcast (%"struct.sh::TSourceLoc"* @_ZZ7yyparsePN2sh13TParseContextEPvE13yyloc_default to i8*), i64 16, i1 false)
  %64 = bitcast [200 x i16]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 400, i8* nonnull %64) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %64, i8 -86, i64 400, i1 false)
  %65 = getelementptr inbounds [200 x %union.YYSTYPE], [200 x %union.YYSTYPE]* %9, i64 0, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 36800, i8* nonnull %65) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %65, i8 -86, i64 36800, i1 false)
  %66 = bitcast [200 x %"struct.sh::TSourceLoc"]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3200, i8* nonnull %66) #8
  %67 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %11, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %67) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 184, i1 false)
  %68 = bitcast %"struct.sh::TSourceLoc"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #8
  %69 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %12, i64 0, i32 0
  %70 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %12, i64 0, i32 1
  %71 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %12, i64 0, i32 2
  %72 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %12, i64 0, i32 3
  %73 = getelementptr inbounds [200 x i16], [200 x i16]* %8, i64 0, i64 0
  %74 = getelementptr inbounds [200 x %union.YYSTYPE], [200 x %union.YYSTYPE]* %9, i64 0, i64 0
  %75 = getelementptr inbounds [200 x %"struct.sh::TSourceLoc"], [200 x %"struct.sh::TSourceLoc"]* %10, i64 0, i64 0
  %76 = bitcast %"struct.sh::TSourceLoc"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %76, i8 -86, i64 16, i1 false)
  %77 = getelementptr inbounds [200 x %"struct.sh::TSourceLoc"], [200 x %"struct.sh::TSourceLoc"]* %10, i64 0, i64 1
  %78 = bitcast %"struct.sh::TSourceLoc"* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %78, i8 -86, i64 3184, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %66, i8* align 4 bitcast (%"struct.sh::TSourceLoc"* @_ZZ7yyparsePN2sh13TParseContextEPvE13yyloc_default to i8*), i64 16, i1 false)
  %79 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %11, i64 0, i32 0, i32 1
  %80 = bitcast %union.anon.81* %79 to i64*
  %81 = bitcast %union.anon.81* %79 to %"class.sh::TIntermBlock"**
  %82 = bitcast %union.anon.81* %79 to i8**
  %83 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %84 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %11, i64 0, i32 0, i32 1, i32 0, i32 1
  %85 = bitcast %"class.sh::TIntermNode"** %84 to i64*
  %86 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %87 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 10
  %88 = bitcast %"class.sh::ImmutableString"* %58 to i8*
  %89 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %58, i64 0, i32 0
  %90 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %58, i64 0, i32 1
  %91 = bitcast %union.anon.81* %79 to %"class.sh::TIntermCase"**
  %92 = bitcast %union.anon.81* %79 to %"class.sh::TIntermSwitch"**
  %93 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 12
  %94 = bitcast %"class.sh::ImmutableString"* %57 to i8*
  %95 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %57, i64 0, i32 0
  %96 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %57, i64 0, i32 1
  %97 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %11, i64 0, i32 0, i32 2
  %98 = bitcast %union.anon.83* %97 to %"class.sh::TDeclarator"**
  %99 = bitcast %"class.sh::ImmutableString"* %56 to i8*
  %100 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %56, i64 0, i32 0
  %101 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %56, i64 0, i32 1
  %102 = bitcast %union.anon.83* %97 to %"class.std::__1::vector.85"**
  %103 = bitcast %union.anon.83* %97 to i8**
  %104 = bitcast %union.anon.83* %97 to %"class.sh::TVector.22"**
  %105 = bitcast %"struct.sh::TTypeSpecifierNonArray"* %55 to i8*
  %106 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %107 = bitcast %"struct.sh::TTypeSpecifierNonArray"* %106 to i8*
  %108 = bitcast %"struct.sh::TTypeSpecifierNonArray"* %53 to i8*
  %109 = bitcast %"class.sh::ImmutableString"* %54 to i8*
  %110 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %54, i64 0, i32 0
  %111 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %54, i64 0, i32 1
  %112 = bitcast %"class.sh::ImmutableString"* %52 to i8*
  %113 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %52, i64 0, i32 0
  %114 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %52, i64 0, i32 1
  %115 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %11, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %11, i64 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %117 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %11, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %118 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %11, i64 0, i32 0, i32 2, i32 0, i32 0, i32 3
  %119 = bitcast %"class.sh::TStructure"** %118 to i64*
  %120 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %11, i64 0, i32 0, i32 2, i32 0, i32 0, i32 4
  %121 = bitcast %"struct.sh::TSourceLoc"* %120 to i8*
  %122 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %11, i64 0, i32 0, i32 2, i32 0, i32 0, i32 5
  %123 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %124 = bitcast %union.anon.83* %97 to i64*
  %125 = bitcast i32* %51 to i8*
  %126 = bitcast %union.anon.83* %97 to %"class.std::__1::vector.17"**
  %127 = bitcast %union.anon.83* %97 to %"class.sh::TVector"**
  %128 = bitcast i32* %50 to i8*
  %129 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %11, i64 0, i32 0, i32 2, i32 0
  %130 = bitcast %"struct.sh::TLayoutQualifier"* %48 to i8*
  %131 = bitcast %"class.sh::ImmutableString"* %49 to i8*
  %132 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %49, i64 0, i32 0
  %133 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %49, i64 0, i32 1
  %134 = bitcast %union.anon.83* %97 to i8*
  %135 = bitcast %"struct.sh::TLayoutQualifier"* %46 to i8*
  %136 = bitcast %"class.sh::ImmutableString"* %47 to i8*
  %137 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %47, i64 0, i32 0
  %138 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %47, i64 0, i32 1
  %139 = bitcast %"struct.sh::TLayoutQualifier"* %44 to i8*
  %140 = bitcast %"class.sh::ImmutableString"* %45 to i8*
  %141 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %45, i64 0, i32 0
  %142 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %45, i64 0, i32 1
  %143 = bitcast %"struct.sh::TLayoutQualifier"* %42 to i8*
  %144 = bitcast %"class.sh::ImmutableString"* %43 to i8*
  %145 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %43, i64 0, i32 0
  %146 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %43, i64 0, i32 1
  %147 = bitcast %"struct.sh::TLayoutQualifier"* %40 to i8*
  %148 = bitcast %"struct.sh::TLayoutQualifier"* %41 to i8*
  %149 = bitcast %"struct.sh::TPublicType"* %129 to i8*
  %150 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %11, i64 0, i32 0, i32 2, i32 0, i32 6
  %151 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %152 = bitcast %union.anon.83* %97 to %"class.sh::TQualifierWrapperBase"**
  %153 = bitcast %union.anon.83* %97 to %"class.sh::TTypeQualifierBuilder"**
  %154 = bitcast %"struct.sh::TPublicType"* %39 to i8*
  %155 = bitcast %"class.sh::ImmutableString"* %38 to i8*
  %156 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %38, i64 0, i32 0
  %157 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %38, i64 0, i32 1
  %158 = bitcast %union.anon.81* %79 to %"class.sh::TIntermDeclaration"**
  %159 = bitcast %"class.sh::ImmutableString"* %37 to i8*
  %160 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %37, i64 0, i32 0
  %161 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %37, i64 0, i32 1
  %162 = bitcast %"class.sh::ImmutableString"* %36 to i8*
  %163 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %36, i64 0, i32 0
  %164 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %36, i64 0, i32 1
  %165 = bitcast %"class.sh::ImmutableString"* %35 to i8*
  %166 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %35, i64 0, i32 0
  %167 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %35, i64 0, i32 1
  %168 = bitcast %"class.sh::ImmutableString"* %34 to i8*
  %169 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %34, i64 0, i32 0
  %170 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %34, i64 0, i32 1
  %171 = bitcast %"class.sh::ImmutableString"* %33 to i8*
  %172 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %33, i64 0, i32 0
  %173 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %33, i64 0, i32 1
  %174 = bitcast %"class.sh::ImmutableString"* %32 to i8*
  %175 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %32, i64 0, i32 0
  %176 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %32, i64 0, i32 1
  %177 = bitcast %"class.sh::ImmutableString"* %31 to i8*
  %178 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %31, i64 0, i32 0
  %179 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %31, i64 0, i32 1
  %180 = bitcast %"class.sh::TStructure"** %118 to i8**
  %181 = bitcast %"class.sh::TStructure"** %118 to %"class.sh::TType"**
  %182 = bitcast %"class.sh::ImmutableString"* %30 to i8*
  %183 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %30, i64 0, i32 0
  %184 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %30, i64 0, i32 1
  %185 = bitcast %"class.sh::ImmutableString"* %29 to i8*
  %186 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %29, i64 0, i32 0
  %187 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %29, i64 0, i32 1
  %188 = bitcast %"class.sh::ImmutableString"* %28 to i8*
  %189 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %28, i64 0, i32 0
  %190 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %28, i64 0, i32 1
  %191 = bitcast %union.anon.83* %97 to %"class.sh::TFunction"**
  %192 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 45
  %193 = bitcast %"class.sh::ImmutableString"* %4 to i8*
  %194 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %4, i64 0, i32 0
  %195 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %4, i64 0, i32 1
  %196 = bitcast %"class.sh::ImmutableString"* %5 to i8*
  %197 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 0
  %198 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 1
  %199 = bitcast %"class.sh::ImmutableString"* %27 to i8*
  %200 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %27, i64 0, i32 0
  %201 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %27, i64 0, i32 1
  %202 = bitcast %"class.sh::ImmutableString"* %24 to i8*
  %203 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %24, i64 0, i32 0
  %204 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %24, i64 0, i32 1
  %205 = bitcast %"class.sh::ImmutableString"* %25 to i8*
  %206 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %25, i64 0, i32 0
  %207 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %25, i64 0, i32 1
  %208 = bitcast %"class.sh::ImmutableString"* %26 to i8*
  %209 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %26, i64 0, i32 0
  %210 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %26, i64 0, i32 1
  %211 = bitcast %"class.sh::ImmutableString"* %21 to i8*
  %212 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %21, i64 0, i32 0
  %213 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %21, i64 0, i32 1
  %214 = bitcast %"class.sh::ImmutableString"* %22 to i8*
  %215 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %22, i64 0, i32 0
  %216 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %22, i64 0, i32 1
  %217 = bitcast %"class.sh::ImmutableString"* %23 to i8*
  %218 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %23, i64 0, i32 0
  %219 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %23, i64 0, i32 1
  %220 = bitcast %"class.sh::ImmutableString"* %19 to i8*
  %221 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %19, i64 0, i32 0
  %222 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %19, i64 0, i32 1
  %223 = bitcast %"class.sh::ImmutableString"* %20 to i8*
  %224 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %20, i64 0, i32 0
  %225 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %20, i64 0, i32 1
  %226 = bitcast %"class.sh::ImmutableString"* %18 to i8*
  %227 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %18, i64 0, i32 0
  %228 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %18, i64 0, i32 1
  %229 = bitcast %union.anon.81* %79 to %"class.sh::TIntermTyped"**
  %230 = bitcast %"class.sh::ImmutableString"* %17 to i8*
  %231 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %17, i64 0, i32 0
  %232 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %17, i64 0, i32 1
  %233 = bitcast %union.anon.83* %97 to %"class.sh::TFunctionLookup"**
  %234 = bitcast %"class.sh::ImmutableString"* %16 to i8*
  %235 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %16, i64 0, i32 0
  %236 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %16, i64 0, i32 1
  %237 = bitcast %"class.sh::ImmutableString"* %15 to i8*
  %238 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %15, i64 0, i32 0
  %239 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %15, i64 0, i32 1
  %240 = bitcast %"class.sh::ImmutableString"* %14 to i8*
  %241 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %14, i64 0, i32 0
  %242 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %14, i64 0, i32 1
  %243 = bitcast %"class.sh::ImmutableString"* %13 to i8*
  %244 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %13, i64 0, i32 0
  %245 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %13, i64 0, i32 1
  %246 = bitcast %"struct.sh::TSourceLoc"* %7 to <2 x i32>*
  %247 = bitcast %"struct.sh::TSourceLoc"* %7 to <2 x i32>*
  br label %256

248:                                              ; preds = %3602, %3550, %369
  %249 = phi %"struct.sh::TSourceLoc"* [ %3610, %3602 ], [ %3528, %3550 ], [ %375, %369 ]
  %250 = phi %union.YYSTYPE* [ %3604, %3602 ], [ %3526, %3550 ], [ %373, %369 ]
  %251 = phi i16* [ %3572, %3602 ], [ %3525, %3550 ], [ %328, %369 ]
  %252 = phi i32 [ 3, %3602 ], [ %264, %3550 ], [ %372, %369 ]
  %253 = phi i32 [ %3603, %3602 ], [ %3553, %3550 ], [ %365, %369 ]
  %254 = phi i32 [ %3566, %3602 ], [ %385, %3550 ], [ -2, %369 ]
  %255 = getelementptr inbounds i16, i16* %251, i64 1
  br label %256

256:                                              ; preds = %248, %2
  %257 = phi i64 [ 200, %2 ], [ %323, %248 ]
  %258 = phi %"struct.sh::TSourceLoc"* [ %75, %2 ], [ %249, %248 ]
  %259 = phi %"struct.sh::TSourceLoc"* [ %75, %2 ], [ %325, %248 ]
  %260 = phi %union.YYSTYPE* [ %74, %2 ], [ %250, %248 ]
  %261 = phi %union.YYSTYPE* [ %74, %2 ], [ %327, %248 ]
  %262 = phi i16* [ %73, %2 ], [ %255, %248 ]
  %263 = phi i16* [ %73, %2 ], [ %329, %248 ]
  %264 = phi i32 [ 0, %2 ], [ %252, %248 ]
  %265 = phi i32 [ 0, %2 ], [ %253, %248 ]
  %266 = phi i32 [ -2, %2 ], [ %254, %248 ]
  %267 = trunc i32 %265 to i16
  store i16 %267, i16* %262, align 2
  %268 = getelementptr inbounds i16, i16* %263, i64 -1
  %269 = getelementptr inbounds i16, i16* %268, i64 %257
  %270 = icmp ugt i16* %269, %262
  br i1 %270, label %322, label %271

271:                                              ; preds = %256
  %272 = ptrtoint i16* %262 to i64
  %273 = ptrtoint i16* %263 to i64
  %274 = sub i64 %272, %273
  %275 = ashr exact i64 %274, 1
  %276 = add nsw i64 %275, 1
  %277 = icmp ugt i64 %257, 9999
  br i1 %277, label %3612, label %278

278:                                              ; preds = %271
  %279 = shl i64 %257, 1
  %280 = icmp ult i64 %279, 10000
  %281 = select i1 %280, i64 %279, i64 10000
  %282 = mul nuw nsw i64 %281, 202
  %283 = add nuw nsw i64 %282, 366
  %284 = call noalias i8* @malloc(i64 %283) #8
  %285 = icmp eq i8* %284, null
  br i1 %285, label %3612, label %286

286:                                              ; preds = %278
  %287 = bitcast i8* %284 to %union.yyalloc*
  %288 = bitcast i8* %284 to i16*
  %289 = bitcast i16* %263 to i8*
  %290 = shl i64 %276, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %284, i8* align 2 %289, i64 %290, i1 false)
  %291 = trunc i64 %281 to i16
  %292 = shl nuw nsw i16 %291, 1
  %293 = add nuw nsw i16 %292, 183
  %294 = udiv i16 %293, 184
  %295 = zext i16 %294 to i64
  %296 = getelementptr inbounds %union.yyalloc, %union.yyalloc* %287, i64 %295
  %297 = getelementptr inbounds %union.yyalloc, %union.yyalloc* %296, i64 0, i32 0
  %298 = getelementptr inbounds %union.yyalloc, %union.yyalloc* %296, i64 0, i32 0, i32 0, i32 0
  %299 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %261, i64 0, i32 0, i32 0
  %300 = mul i64 %276, 184
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %298, i8* align 8 %299, i64 %300, i1 false)
  %301 = trunc i64 %281 to i32
  %302 = mul nuw nsw i32 %301, 184
  %303 = add nuw nsw i32 %302, 183
  %304 = udiv i32 %303, 184
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds %union.yyalloc, %union.yyalloc* %296, i64 %305
  %307 = bitcast %union.yyalloc* %306 to %"struct.sh::TSourceLoc"*
  %308 = getelementptr inbounds %union.yyalloc, %union.yyalloc* %306, i64 0, i32 0, i32 0, i32 0
  %309 = bitcast %"struct.sh::TSourceLoc"* %259 to i8*
  %310 = shl i64 %276, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* align 4 %309, i64 %310, i1 false)
  %311 = icmp eq i16* %263, %73
  br i1 %311, label %313, label %312

312:                                              ; preds = %286
  call void @free(i8* %289) #8
  br label %313

313:                                              ; preds = %286, %312
  %314 = getelementptr inbounds i16, i16* %288, i64 %275
  %315 = getelementptr inbounds %union.yyalloc, %union.yyalloc* %296, i64 %275
  %316 = getelementptr inbounds %union.yyalloc, %union.yyalloc* %315, i64 0, i32 0
  %317 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %307, i64 %275
  %318 = getelementptr inbounds i8, i8* %284, i64 -2
  %319 = bitcast i8* %318 to i16*
  %320 = getelementptr inbounds i16, i16* %319, i64 %281
  %321 = icmp ugt i16* %320, %314
  br i1 %321, label %322, label %3617

322:                                              ; preds = %313, %256
  %323 = phi i64 [ %257, %256 ], [ %281, %313 ]
  %324 = phi %"struct.sh::TSourceLoc"* [ %258, %256 ], [ %317, %313 ]
  %325 = phi %"struct.sh::TSourceLoc"* [ %259, %256 ], [ %307, %313 ]
  %326 = phi %union.YYSTYPE* [ %260, %256 ], [ %316, %313 ]
  %327 = phi %union.YYSTYPE* [ %261, %256 ], [ %297, %313 ]
  %328 = phi i16* [ %262, %256 ], [ %314, %313 ]
  %329 = phi i16* [ %263, %256 ], [ %288, %313 ]
  %330 = icmp eq i32 %265, 164
  br i1 %330, label %3613, label %331

331:                                              ; preds = %322
  %332 = sext i32 %265 to i64
  %333 = getelementptr inbounds [450 x i16], [450 x i16]* @_ZL6yypact, i64 0, i64 %332
  %334 = load i16, i16* %333, align 2
  %335 = sext i16 %334 to i32
  %336 = icmp eq i16 %334, -393
  br i1 %336, label %377, label %337

337:                                              ; preds = %331
  %338 = icmp eq i32 %266, -2
  br i1 %338, label %339, label %341

339:                                              ; preds = %337
  %340 = call i32 @_Z5yylexP7YYSTYPEPN2sh10TSourceLocEPv(%union.YYSTYPE* nonnull %6, %"struct.sh::TSourceLoc"* nonnull %7, i8* %1) #8
  br label %341

341:                                              ; preds = %339, %337
  %342 = phi i32 [ %340, %339 ], [ %266, %337 ]
  %343 = icmp slt i32 %342, 1
  br i1 %343, label %351, label %344

344:                                              ; preds = %341
  %345 = icmp ult i32 %342, 437
  br i1 %345, label %346, label %351

346:                                              ; preds = %344
  %347 = sext i32 %342 to i64
  %348 = getelementptr inbounds [437 x i8], [437 x i8]* @_ZL11yytranslate, i64 0, i64 %347
  %349 = load i8, i8* %348, align 1
  %350 = zext i8 %349 to i32
  br label %351

351:                                              ; preds = %346, %344, %341
  %352 = phi i32 [ 0, %341 ], [ %350, %346 ], [ 2, %344 ]
  %353 = phi i32 [ 0, %341 ], [ %342, %346 ], [ %342, %344 ]
  %354 = add nsw i32 %352, %335
  %355 = icmp ugt i32 %354, 3500
  br i1 %355, label %377, label %356

356:                                              ; preds = %351
  %357 = sext i32 %354 to i64
  %358 = getelementptr inbounds [3501 x i16], [3501 x i16]* @_ZL7yycheck, i64 0, i64 %357
  %359 = load i16, i16* %358, align 2
  %360 = sext i16 %359 to i32
  %361 = icmp eq i32 %352, %360
  br i1 %361, label %362, label %377

362:                                              ; preds = %356
  %363 = getelementptr inbounds [3501 x i16], [3501 x i16]* @_ZL7yytable, i64 0, i64 %357
  %364 = load i16, i16* %363, align 2
  %365 = sext i16 %364 to i32
  %366 = icmp slt i16 %364, 1
  br i1 %366, label %367, label %369

367:                                              ; preds = %362
  %368 = sub nsw i32 0, %365
  br label %383

369:                                              ; preds = %362
  %370 = icmp eq i32 %264, 0
  %371 = add nsw i32 %264, -1
  %372 = select i1 %370, i32 0, i32 %371
  %373 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 1
  %374 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %373, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %374, i8* nonnull align 8 %60, i64 184, i1 false)
  %375 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 1
  %376 = bitcast %"struct.sh::TSourceLoc"* %375 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %376, i8* nonnull align 8 %61, i64 16, i1 false)
  br label %248

377:                                              ; preds = %356, %351, %331
  %378 = phi i32 [ %266, %331 ], [ %353, %351 ], [ %353, %356 ]
  %379 = getelementptr inbounds [450 x i16], [450 x i16]* @_ZL8yydefact, i64 0, i64 %332
  %380 = load i16, i16* %379, align 2
  %381 = zext i16 %380 to i32
  %382 = icmp eq i16 %380, 0
  br i1 %382, label %3554, label %383

383:                                              ; preds = %377, %367
  %384 = phi i32 [ %381, %377 ], [ %368, %367 ]
  %385 = phi i32 [ %378, %377 ], [ %353, %367 ]
  %386 = sext i32 %384 to i64
  %387 = getelementptr inbounds [327 x i8], [327 x i8]* @_ZL4yyr2, i64 0, i64 %386
  %388 = load i8, i8* %387, align 1
  %389 = zext i8 %388 to i64
  %390 = sub nsw i64 1, %389
  %391 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 %390, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %391, i64 184, i1 false)
  %392 = icmp eq i8 %388, 0
  %393 = sub nsw i64 0, %389
  %394 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 %393
  br i1 %392, label %404, label %395

395:                                              ; preds = %383
  %396 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %394, i64 1
  %397 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %396, i64 0, i32 0
  %398 = load i32, i32* %397, align 4
  store i32 %398, i32* %69, align 4
  %399 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %396, i64 0, i32 1
  %400 = load i32, i32* %399, align 4
  store i32 %400, i32* %70, align 4
  %401 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 0, i32 2
  %402 = load i32, i32* %401, align 4
  store i32 %402, i32* %71, align 4
  %403 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 0, i32 3
  br label %410

404:                                              ; preds = %383
  %405 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 %393, i32 2
  %406 = load i32, i32* %405, align 4
  store i32 %406, i32* %69, align 4
  %407 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 %393, i32 3
  %408 = load i32, i32* %407, align 4
  store i32 %408, i32* %70, align 4
  %409 = load i32, i32* %405, align 4
  store i32 %409, i32* %71, align 4
  br label %410

410:                                              ; preds = %404, %395
  %411 = phi i32* [ %407, %404 ], [ %403, %395 ]
  %412 = load i32, i32* %411, align 4
  store i32 %412, i32* %72, align 4
  switch i32 %384, label %3523 [
    i32 4, label %413
    i32 5, label %429
    i32 6, label %433
    i32 7, label %444
    i32 8, label %455
    i32 9, label %466
    i32 10, label %476
    i32 11, label %523
    i32 12, label %527
    i32 13, label %531
    i32 14, label %540
    i32 15, label %544
    i32 16, label %561
    i32 17, label %566
    i32 18, label %571
    i32 19, label %577
    i32 20, label %582
    i32 21, label %586
    i32 22, label %597
    i32 23, label %601
    i32 24, label %605
    i32 25, label %609
    i32 26, label %613
    i32 27, label %620
    i32 28, label %627
    i32 29, label %631
    i32 30, label %634
    i32 31, label %650
    i32 32, label %666
    i32 33, label %670
    i32 34, label %676
    i32 35, label %682
    i32 36, label %690
    i32 37, label %691
    i32 38, label %692
    i32 39, label %693
    i32 40, label %698
    i32 41, label %702
    i32 42, label %711
    i32 43, label %720
    i32 44, label %734
    i32 45, label %738
    i32 46, label %747
    i32 47, label %756
    i32 48, label %760
    i32 49, label %774
    i32 50, label %788
    i32 51, label %792
    i32 52, label %801
    i32 53, label %810
    i32 54, label %819
    i32 55, label %828
    i32 56, label %832
    i32 57, label %841
    i32 58, label %850
    i32 59, label %854
    i32 60, label %868
    i32 61, label %872
    i32 62, label %886
    i32 63, label %890
    i32 64, label %904
    i32 65, label %908
    i32 66, label %917
    i32 67, label %921
    i32 68, label %930
    i32 69, label %934
    i32 70, label %943
    i32 71, label %947
    i32 72, label %959
    i32 73, label %963
    i32 74, label %974
    i32 75, label %975
    i32 76, label %976
    i32 77, label %977
    i32 78, label %982
    i32 79, label %983
    i32 80, label %984
    i32 81, label %989
    i32 82, label %994
    i32 83, label %999
    i32 84, label %1004
    i32 85, label %1009
    i32 86, label %1013
    i32 87, label %1022
    i32 88, label %1028
    i32 89, label %1043
    i32 90, label %1050
    i32 91, label %1054
    i32 92, label %1059
    i32 93, label %1098
    i32 94, label %1150
    i32 95, label %1206
    i32 96, label %1210
    i32 97, label %1232
    i32 98, label %1237
    i32 99, label %1241
    i32 100, label %1245
    i32 101, label %1277
    i32 102, label %1311
    i32 103, label %1328
    i32 104, label %1344
    i32 105, label %1365
    i32 106, label %1374
    i32 107, label %1379
    i32 108, label %1388
    i32 109, label %1393
    i32 110, label %1398
    i32 111, label %1400
    i32 112, label %1414
    i32 113, label %1433
    i32 114, label %1462
    i32 115, label %1482
    i32 116, label %1486
    i32 117, label %1501
    i32 118, label %1521
    i32 119, label %1551
    i32 120, label %1572
    i32 121, label %1575
    i32 122, label %1580
    i32 123, label %1581
    i32 124, label %1582
    i32 125, label %1586
    i32 126, label %1591
    i32 326, label %3513
    i32 325, label %3507
    i32 129, label %1598
    i32 130, label %1604
    i32 131, label %1614
    i32 132, label %1624
    i32 133, label %1634
    i32 134, label %1641
    i32 135, label %1647
    i32 136, label %1658
    i32 137, label %1665
    i32 138, label %1673
    i32 139, label %1676
    i32 140, label %1679
    i32 141, label %1682
    i32 142, label %1694
    i32 143, label %1708
    i32 144, label %1711
    i32 145, label %1718
    i32 146, label %1726
    i32 147, label %1734
    i32 148, label %1742
    i32 149, label %1750
    i32 150, label %1758
    i32 151, label %1765
    i32 152, label %1777
    i32 153, label %1784
    i32 154, label %1785
    i32 155, label %1786
    i32 156, label %1787
    i32 157, label %1791
    i32 158, label %1794
    i32 159, label %1799
    i32 160, label %1811
    i32 161, label %1827
    i32 162, label %1843
    i32 163, label %1844
    i32 164, label %1849
    i32 165, label %1857
    i32 166, label %2072
    i32 167, label %2286
    i32 168, label %2299
    i32 169, label %2317
    i32 170, label %2319
    i32 171, label %2321
    i32 172, label %2323
    i32 173, label %2325
    i32 174, label %2327
    i32 175, label %2329
    i32 176, label %2331
    i32 177, label %2333
    i32 178, label %2335
    i32 179, label %2337
    i32 180, label %2339
    i32 181, label %2341
    i32 182, label %2343
    i32 183, label %2345
    i32 184, label %2347
    i32 185, label %2349
    i32 186, label %2351
    i32 187, label %2353
    i32 188, label %2355
    i32 189, label %2357
    i32 190, label %2359
    i32 191, label %2361
    i32 192, label %2363
    i32 193, label %2365
    i32 194, label %2367
    i32 195, label %2369
    i32 196, label %2374
    i32 197, label %2376
    i32 198, label %2378
    i32 199, label %2380
    i32 200, label %2382
    i32 201, label %2384
    i32 202, label %2386
    i32 203, label %2394
    i32 204, label %2402
    i32 205, label %2410
    i32 206, label %2412
    i32 207, label %2414
    i32 208, label %2416
    i32 209, label %2418
    i32 210, label %2420
    i32 211, label %2422
    i32 212, label %2430
    i32 213, label %2438
    i32 214, label %2446
    i32 215, label %2448
    i32 216, label %2450
    i32 217, label %2452
    i32 218, label %2454
    i32 219, label %2456
    i32 220, label %2458
    i32 221, label %2466
    i32 222, label %2474
    i32 223, label %2482
    i32 224, label %2484
    i32 225, label %2486
    i32 226, label %2488
    i32 227, label %2496
    i32 228, label %2504
    i32 229, label %2509
    i32 230, label %2514
    i32 231, label %2519
    i32 232, label %2524
    i32 233, label %2526
    i32 234, label %2528
    i32 235, label %2530
    i32 236, label %2532
    i32 237, label %2534
    i32 238, label %2536
    i32 239, label %2538
    i32 240, label %2540
    i32 241, label %2542
    i32 242, label %2544
    i32 243, label %2546
    i32 244, label %2548
    i32 245, label %2556
    i32 246, label %2564
    i32 247, label %2572
    i32 248, label %2580
    i32 249, label %2588
    i32 250, label %2596
    i32 251, label %2604
    i32 252, label %2612
    i32 253, label %2620
    i32 254, label %2622
    i32 255, label %2625
    i32 256, label %2630
    i32 257, label %2644
    i32 258, label %2662
    i32 259, label %2663
    i32 260, label %2668
    i32 261, label %2673
    i32 262, label %2681
    i32 263, label %2687
    i32 264, label %2696
    i32 265, label %2931
    i32 266, label %3163
    i32 267, label %3176
    i32 268, label %3194
    i32 269, label %3198
    i32 270, label %3202
    i32 271, label %3206
    i32 272, label %3210
    i32 273, label %3214
    i32 274, label %3218
    i32 275, label %3222
    i32 276, label %3226
    i32 277, label %3230
    i32 278, label %3234
    i32 279, label %3238
    i32 280, label %3246
    i32 281, label %3248
    i32 282, label %3250
    i32 283, label %3258
    i32 284, label %3262
    i32 285, label %3266
    i32 286, label %3268
    i32 287, label %3273
    i32 288, label %3275
    i32 289, label %3280
    i32 290, label %3288
    i32 291, label %3296
    i32 292, label %3307
    i32 293, label %3313
    i32 294, label %3315
    i32 295, label %3319
    i32 296, label %3329
    i32 297, label %3336
    i32 298, label %3340
    i32 299, label %3343
    i32 300, label %3354
    i32 301, label %3360
    i32 302, label %3363
    i32 303, label %3372
    i32 304, label %3391
    i32 305, label %3395
    i32 306, label %3405
    i32 307, label %3408
    i32 308, label %3417
    i32 309, label %3421
    i32 310, label %3436
    i32 311, label %3440
    i32 312, label %3444
    i32 313, label %3448
    i32 314, label %3449
    i32 315, label %3453
    i32 316, label %3460
    i32 317, label %3464
    i32 318, label %3468
    i32 319, label %3472
    i32 320, label %3479
    i32 321, label %3483
    i32 322, label %3495
    i32 323, label %3499
    i32 324, label %3503
  ]

413:                                              ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %243) #8
  %414 = bitcast %union.YYSTYPE* %326 to i8**
  %415 = load i8*, i8** %414, align 8
  store i8* %415, i8** %244, align 8
  %416 = icmp eq i8* %415, null
  br i1 %416, label %423, label %417

417:                                              ; preds = %413, %417
  %418 = phi i64 [ %422, %417 ], [ 0, %413 ]
  %419 = getelementptr inbounds i8, i8* %415, i64 %418
  %420 = load i8, i8* %419, align 1
  %421 = icmp eq i8 %420, 0
  %422 = add i64 %418, 1
  br i1 %421, label %423, label %417

423:                                              ; preds = %417, %413
  %424 = phi i64 [ 0, %413 ], [ %418, %417 ]
  store i64 %424, i64* %245, align 8
  %425 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %426 = bitcast %union.anon.81* %425 to %"class.sh::TSymbol"**
  %427 = load %"class.sh::TSymbol"*, %"class.sh::TSymbol"** %426, align 8
  %428 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext23parseVariableIdentifierERKNS_10TSourceLocERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %13, %"class.sh::TSymbol"* %427) #8
  store %"class.sh::TIntermTyped"* %428, %"class.sh::TIntermTyped"** %229, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %243) #8
  br label %3523

429:                                              ; preds = %410
  %430 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %431 = bitcast %union.anon.81* %430 to i64*
  %432 = load i64, i64* %431, align 8
  store i64 %432, i64* %80, align 8
  br label %3523

433:                                              ; preds = %410
  %434 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %435 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %434, i64 8) #8
  %436 = bitcast i8* %435 to %"class.sh::TConstantUnion"*
  call void @_ZN2sh14TConstantUnionC1Ev(%"class.sh::TConstantUnion"* %436) #8
  %437 = bitcast %union.YYSTYPE* %326 to i32*
  %438 = load i32, i32* %437, align 8
  %439 = bitcast i8* %435 to i32*
  store i32 %438, i32* %439, align 4
  %440 = getelementptr inbounds i8, i8* %435, i64 4
  %441 = bitcast i8* %440 to i32*
  store i32 3, i32* %441, align 4
  %442 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh13TParseContext16addScalarLiteralEPKNS_14TConstantUnionERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TConstantUnion"* %436, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  %443 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %442, i64 0, i32 0, i32 0
  store %"class.sh::TIntermTyped"* %443, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

444:                                              ; preds = %410
  %445 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %446 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %445, i64 8) #8
  %447 = bitcast i8* %446 to %"class.sh::TConstantUnion"*
  call void @_ZN2sh14TConstantUnionC1Ev(%"class.sh::TConstantUnion"* %447) #8
  %448 = bitcast %union.YYSTYPE* %326 to i32*
  %449 = load i32, i32* %448, align 8
  %450 = bitcast i8* %446 to i32*
  store i32 %449, i32* %450, align 4
  %451 = getelementptr inbounds i8, i8* %446, i64 4
  %452 = bitcast i8* %451 to i32*
  store i32 4, i32* %452, align 4
  %453 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh13TParseContext16addScalarLiteralEPKNS_14TConstantUnionERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TConstantUnion"* %447, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  %454 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %453, i64 0, i32 0, i32 0
  store %"class.sh::TIntermTyped"* %454, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

455:                                              ; preds = %410
  %456 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %457 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %456, i64 8) #8
  %458 = bitcast i8* %457 to %"class.sh::TConstantUnion"*
  call void @_ZN2sh14TConstantUnionC1Ev(%"class.sh::TConstantUnion"* %458) #8
  %459 = bitcast %union.YYSTYPE* %326 to i32*
  %460 = load i32, i32* %459, align 8
  %461 = bitcast i8* %457 to i32*
  store i32 %460, i32* %461, align 4
  %462 = getelementptr inbounds i8, i8* %457, i64 4
  %463 = bitcast i8* %462 to i32*
  store i32 1, i32* %463, align 4
  %464 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh13TParseContext16addScalarLiteralEPKNS_14TConstantUnionERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TConstantUnion"* %458, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  %465 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %464, i64 0, i32 0, i32 0
  store %"class.sh::TIntermTyped"* %465, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

466:                                              ; preds = %410
  %467 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %468 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %467, i64 8) #8
  %469 = bitcast i8* %468 to %"class.sh::TConstantUnion"*
  call void @_ZN2sh14TConstantUnionC1Ev(%"class.sh::TConstantUnion"* %469) #8
  %470 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 0
  %471 = load i8, i8* %470, align 8, !range !2
  store i8 %471, i8* %468, align 4
  %472 = getelementptr inbounds i8, i8* %468, i64 4
  %473 = bitcast i8* %472 to i32*
  store i32 5, i32* %473, align 4
  %474 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh13TParseContext16addScalarLiteralEPKNS_14TConstantUnionERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TConstantUnion"* %469, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  %475 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %474, i64 0, i32 0, i32 0
  store %"class.sh::TIntermTyped"* %475, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

476:                                              ; preds = %410
  %477 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 23) #8
  br i1 %477, label %478, label %480

478:                                              ; preds = %476
  %479 = bitcast %union.YYSTYPE* %326 to i8**
  br label %492

480:                                              ; preds = %476
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %240) #8
  %481 = bitcast %union.YYSTYPE* %326 to i8**
  %482 = load i8*, i8** %481, align 8
  store i8* %482, i8** %241, align 8
  %483 = icmp eq i8* %482, null
  br i1 %483, label %490, label %484

484:                                              ; preds = %480, %484
  %485 = phi i64 [ %489, %484 ], [ 0, %480 ]
  %486 = getelementptr inbounds i8, i8* %482, i64 %485
  %487 = load i8, i8* %486, align 1
  %488 = icmp eq i8 %487, 0
  %489 = add i64 %485, 1
  br i1 %488, label %490, label %484

490:                                              ; preds = %484, %480
  %491 = phi i64 [ 0, %480 ], [ %485, %484 ]
  store i64 %491, i64* %242, align 8
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcRKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), %"class.sh::ImmutableString"* nonnull dereferenceable(16) %14) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %240) #8
  br label %492

492:                                              ; preds = %478, %490
  %493 = phi i8** [ %479, %478 ], [ %481, %490 ]
  %494 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %495 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %494, i64 8) #8
  %496 = bitcast i8* %495 to %"class.sh::TConstantUnion"*
  call void @_ZN2sh14TConstantUnionC1Ev(%"class.sh::TConstantUnion"* %496) #8
  %497 = load i8*, i8** %493, align 8
  %498 = icmp eq i8* %497, null
  br i1 %498, label %505, label %499

499:                                              ; preds = %492, %499
  %500 = phi i64 [ %504, %499 ], [ 0, %492 ]
  %501 = getelementptr inbounds i8, i8* %497, i64 %500
  %502 = load i8, i8* %501, align 1
  %503 = icmp eq i8 %502, 0
  %504 = add i64 %500, 1
  br i1 %503, label %505, label %499

505:                                              ; preds = %499, %492
  %506 = select i1 %498, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8* %497
  %507 = call i32 @strcmp(i8* %506, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i64 0, i64 0)) #9
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %516, label %509

509:                                              ; preds = %505
  %510 = call i32 @strcmp(i8* %506, i8* nonnull getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0)) #9
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %516, label %512

512:                                              ; preds = %509
  %513 = call i32 @strcmp(i8* %506, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i64 0, i64 0)) #9
  %514 = icmp eq i32 %513, 0
  %515 = select i1 %514, i32 3, i32 0
  br label %516

516:                                              ; preds = %505, %509, %512
  %517 = phi i32 [ 1, %505 ], [ 2, %509 ], [ %515, %512 ]
  %518 = bitcast i8* %495 to i32*
  store i32 %517, i32* %518, align 4
  %519 = getelementptr inbounds i8, i8* %495, i64 4
  %520 = bitcast i8* %519 to i32*
  store i32 7, i32* %520, align 4
  %521 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh13TParseContext16addScalarLiteralEPKNS_14TConstantUnionERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TConstantUnion"* %496, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  %522 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %521, i64 0, i32 0, i32 0
  store %"class.sh::TIntermTyped"* %522, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

523:                                              ; preds = %410
  %524 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 1
  %525 = bitcast %union.anon.81* %524 to i64*
  %526 = load i64, i64* %525, align 8
  store i64 %526, i64* %80, align 8
  br label %3523

527:                                              ; preds = %410
  %528 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %529 = bitcast %union.anon.81* %528 to i64*
  %530 = load i64, i64* %529, align 8
  store i64 %530, i64* %80, align 8
  br label %3523

531:                                              ; preds = %410
  %532 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -3, i32 0, i32 1
  %533 = bitcast %union.anon.81* %532 to %"class.sh::TIntermTyped"**
  %534 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %533, align 8
  %535 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  %536 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 1
  %537 = bitcast %union.anon.81* %536 to %"class.sh::TIntermTyped"**
  %538 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %537, align 8
  %539 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext18addIndexExpressionEPNS_12TIntermTypedERKNS_10TSourceLocES2_(%"class.sh::TParseContext"* %0, %"class.sh::TIntermTyped"* %534, %"struct.sh::TSourceLoc"* dereferenceable(16) %535, %"class.sh::TIntermTyped"* %538) #8
  store %"class.sh::TIntermTyped"* %539, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

540:                                              ; preds = %410
  %541 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %542 = bitcast %union.anon.81* %541 to i64*
  %543 = load i64, i64* %542, align 8
  store i64 %543, i64* %80, align 8
  br label %3523

544:                                              ; preds = %410
  %545 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %546 = bitcast %union.anon.81* %545 to %"class.sh::TIntermTyped"**
  %547 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %546, align 8
  %548 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %237) #8
  %549 = bitcast %union.YYSTYPE* %326 to i8**
  %550 = load i8*, i8** %549, align 8
  store i8* %550, i8** %238, align 8
  %551 = icmp eq i8* %550, null
  br i1 %551, label %558, label %552

552:                                              ; preds = %544, %552
  %553 = phi i64 [ %557, %552 ], [ 0, %544 ]
  %554 = getelementptr inbounds i8, i8* %550, i64 %553
  %555 = load i8, i8* %554, align 1
  %556 = icmp eq i8 %555, 0
  %557 = add i64 %553, 1
  br i1 %556, label %558, label %552

558:                                              ; preds = %552, %544
  %559 = phi i64 [ 0, %544 ], [ %553, %552 ]
  store i64 %559, i64* %239, align 8
  %560 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext27addFieldSelectionExpressionEPNS_12TIntermTypedERKNS_10TSourceLocERKNS_15ImmutableStringES5_(%"class.sh::TParseContext"* %0, %"class.sh::TIntermTyped"* %547, %"struct.sh::TSourceLoc"* dereferenceable(16) %548, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %15, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  store %"class.sh::TIntermTyped"* %560, %"class.sh::TIntermTyped"** %229, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %237) #8
  br label %3523

561:                                              ; preds = %410
  %562 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 1
  %563 = bitcast %union.anon.81* %562 to %"class.sh::TIntermTyped"**
  %564 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %563, align 8
  %565 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext18addUnaryMathLValueE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 8, %"class.sh::TIntermTyped"* %564, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  store %"class.sh::TIntermTyped"* %565, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

566:                                              ; preds = %410
  %567 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 1
  %568 = bitcast %union.anon.81* %567 to %"class.sh::TIntermTyped"**
  %569 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %568, align 8
  %570 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext18addUnaryMathLValueE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 9, %"class.sh::TIntermTyped"* %569, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  store %"class.sh::TIntermTyped"* %570, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

571:                                              ; preds = %410
  %572 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %573 = bitcast %union.anon.81* %572 to %"class.sh::TIntermTyped"**
  %574 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %573, align 8
  call void @_ZN2sh13TParseContext20checkIsScalarIntegerEPNS_12TIntermTypedEPKc(%"class.sh::TParseContext"* %0, %"class.sh::TIntermTyped"* %574, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #8
  %575 = bitcast %union.anon.81* %572 to i64*
  %576 = load i64, i64* %575, align 8
  store i64 %576, i64* %80, align 8
  br label %3523

577:                                              ; preds = %410
  %578 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %579 = bitcast %union.anon.83* %578 to %"class.sh::TFunctionLookup"**
  %580 = load %"class.sh::TFunctionLookup"*, %"class.sh::TFunctionLookup"** %579, align 8
  %581 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext23addFunctionCallOrMethodEPNS_15TFunctionLookupERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TFunctionLookup"* %580, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  store %"class.sh::TIntermTyped"* %581, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

582:                                              ; preds = %410
  %583 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %584 = bitcast %union.anon.83* %583 to i64*
  %585 = load i64, i64* %584, align 8
  store i64 %585, i64* %124, align 8
  br label %3523

586:                                              ; preds = %410
  %587 = load i32, i32* %123, align 8
  %588 = icmp slt i32 %587, 300
  br i1 %588, label %589, label %590

589:                                              ; preds = %586
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)) #8
  br label %590

590:                                              ; preds = %589, %586
  %591 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %592 = bitcast %union.anon.83* %591 to %"class.sh::TFunctionLookup"**
  %593 = load %"class.sh::TFunctionLookup"*, %"class.sh::TFunctionLookup"** %592, align 8
  store %"class.sh::TFunctionLookup"* %593, %"class.sh::TFunctionLookup"** %233, align 8
  %594 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %595 = bitcast %union.anon.81* %594 to %"class.sh::TIntermTyped"**
  %596 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %595, align 8
  call void @_ZN2sh15TFunctionLookup11setThisNodeEPNS_12TIntermTypedE(%"class.sh::TFunctionLookup"* %593, %"class.sh::TIntermTyped"* %596) #8
  br label %3523

597:                                              ; preds = %410
  %598 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %599 = bitcast %union.anon.83* %598 to i64*
  %600 = load i64, i64* %599, align 8
  store i64 %600, i64* %124, align 8
  br label %3523

601:                                              ; preds = %410
  %602 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %603 = bitcast %union.anon.83* %602 to i64*
  %604 = load i64, i64* %603, align 8
  store i64 %604, i64* %124, align 8
  br label %3523

605:                                              ; preds = %410
  %606 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %607 = bitcast %union.anon.83* %606 to i64*
  %608 = load i64, i64* %607, align 8
  store i64 %608, i64* %124, align 8
  br label %3523

609:                                              ; preds = %410
  %610 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %611 = bitcast %union.anon.83* %610 to i64*
  %612 = load i64, i64* %611, align 8
  store i64 %612, i64* %124, align 8
  br label %3523

613:                                              ; preds = %410
  %614 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %615 = bitcast %union.anon.83* %614 to %"class.sh::TFunctionLookup"**
  %616 = load %"class.sh::TFunctionLookup"*, %"class.sh::TFunctionLookup"** %615, align 8
  store %"class.sh::TFunctionLookup"* %616, %"class.sh::TFunctionLookup"** %233, align 8
  %617 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %618 = bitcast %union.anon.81* %617 to %"class.sh::TIntermTyped"**
  %619 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %618, align 8
  call void @_ZN2sh15TFunctionLookup11addArgumentEPNS_12TIntermTypedE(%"class.sh::TFunctionLookup"* %616, %"class.sh::TIntermTyped"* %619) #8
  br label %3523

620:                                              ; preds = %410
  %621 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 2
  %622 = bitcast %union.anon.83* %621 to %"class.sh::TFunctionLookup"**
  %623 = load %"class.sh::TFunctionLookup"*, %"class.sh::TFunctionLookup"** %622, align 8
  store %"class.sh::TFunctionLookup"* %623, %"class.sh::TFunctionLookup"** %233, align 8
  %624 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %625 = bitcast %union.anon.81* %624 to %"class.sh::TIntermTyped"**
  %626 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %625, align 8
  call void @_ZN2sh15TFunctionLookup11addArgumentEPNS_12TIntermTypedE(%"class.sh::TFunctionLookup"* %623, %"class.sh::TIntermTyped"* %626) #8
  br label %3523

627:                                              ; preds = %410
  %628 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %629 = bitcast %union.anon.83* %628 to i64*
  %630 = load i64, i64* %629, align 8
  store i64 %630, i64* %124, align 8
  br label %3523

631:                                              ; preds = %410
  %632 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2, i32 0
  %633 = call %"class.sh::TFunctionLookup"* @_ZN2sh13TParseContext18addConstructorFuncERKNS_11TPublicTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %632) #8
  store %"class.sh::TFunctionLookup"* %633, %"class.sh::TFunctionLookup"** %233, align 8
  br label %3523

634:                                              ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %234) #8
  %635 = bitcast %union.YYSTYPE* %326 to i8**
  %636 = load i8*, i8** %635, align 8
  store i8* %636, i8** %235, align 8
  %637 = icmp eq i8* %636, null
  br i1 %637, label %644, label %638

638:                                              ; preds = %634, %638
  %639 = phi i64 [ %643, %638 ], [ 0, %634 ]
  %640 = getelementptr inbounds i8, i8* %636, i64 %639
  %641 = load i8, i8* %640, align 1
  %642 = icmp eq i8 %641, 0
  %643 = add i64 %639, 1
  br i1 %642, label %644, label %638

644:                                              ; preds = %638, %634
  %645 = phi i64 [ 0, %634 ], [ %639, %638 ]
  store i64 %645, i64* %236, align 8
  %646 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %647 = bitcast %union.anon.81* %646 to %"class.sh::TSymbol"**
  %648 = load %"class.sh::TSymbol"*, %"class.sh::TSymbol"** %647, align 8
  %649 = call %"class.sh::TFunctionLookup"* @_ZN2sh13TParseContext21addNonConstructorFuncERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::TParseContext"* %0, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %16, %"class.sh::TSymbol"* %648) #8
  store %"class.sh::TFunctionLookup"* %649, %"class.sh::TFunctionLookup"** %233, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %234) #8
  br label %3523

650:                                              ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %230) #8
  %651 = bitcast %union.YYSTYPE* %326 to i8**
  %652 = load i8*, i8** %651, align 8
  store i8* %652, i8** %231, align 8
  %653 = icmp eq i8* %652, null
  br i1 %653, label %660, label %654

654:                                              ; preds = %650, %654
  %655 = phi i64 [ %659, %654 ], [ 0, %650 ]
  %656 = getelementptr inbounds i8, i8* %652, i64 %655
  %657 = load i8, i8* %656, align 1
  %658 = icmp eq i8 %657, 0
  %659 = add i64 %655, 1
  br i1 %658, label %660, label %654

660:                                              ; preds = %654, %650
  %661 = phi i64 [ 0, %650 ], [ %655, %654 ]
  store i64 %661, i64* %232, align 8
  %662 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %663 = bitcast %union.anon.81* %662 to %"class.sh::TSymbol"**
  %664 = load %"class.sh::TSymbol"*, %"class.sh::TSymbol"** %663, align 8
  %665 = call %"class.sh::TFunctionLookup"* @_ZN2sh13TParseContext21addNonConstructorFuncERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::TParseContext"* %0, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %17, %"class.sh::TSymbol"* %664) #8
  store %"class.sh::TFunctionLookup"* %665, %"class.sh::TFunctionLookup"** %233, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %230) #8
  br label %3523

666:                                              ; preds = %410
  %667 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %668 = bitcast %union.anon.81* %667 to i64*
  %669 = load i64, i64* %668, align 8
  store i64 %669, i64* %80, align 8
  br label %3523

670:                                              ; preds = %410
  %671 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %672 = bitcast %union.anon.81* %671 to %"class.sh::TIntermTyped"**
  %673 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %672, align 8
  %674 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %675 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext18addUnaryMathLValueE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 10, %"class.sh::TIntermTyped"* %673, %"struct.sh::TSourceLoc"* dereferenceable(16) %674) #8
  store %"class.sh::TIntermTyped"* %675, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

676:                                              ; preds = %410
  %677 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %678 = bitcast %union.anon.81* %677 to %"class.sh::TIntermTyped"**
  %679 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %678, align 8
  %680 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %681 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext18addUnaryMathLValueE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 11, %"class.sh::TIntermTyped"* %679, %"struct.sh::TSourceLoc"* dereferenceable(16) %680) #8
  store %"class.sh::TIntermTyped"* %681, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

682:                                              ; preds = %410
  %683 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 0
  %684 = load i8, i8* %683, align 8
  %685 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %686 = bitcast %union.anon.81* %685 to %"class.sh::TIntermTyped"**
  %687 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %686, align 8
  %688 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %689 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext12addUnaryMathE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext %684, %"class.sh::TIntermTyped"* %687, %"struct.sh::TSourceLoc"* dereferenceable(16) %688) #8
  store %"class.sh::TIntermTyped"* %689, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

690:                                              ; preds = %410
  store i8 5, i8* %67, align 8
  br label %3523

691:                                              ; preds = %410
  store i8 4, i8* %67, align 8
  br label %3523

692:                                              ; preds = %410
  store i8 6, i8* %67, align 8
  br label %3523

693:                                              ; preds = %410
  %694 = load i32, i32* %123, align 8
  %695 = icmp slt i32 %694, 300
  br i1 %695, label %696, label %697

696:                                              ; preds = %693
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* nonnull dereferenceable(16) %12, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #8
  br label %697

697:                                              ; preds = %696, %693
  store i8 7, i8* %67, align 8
  br label %3523

698:                                              ; preds = %410
  %699 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %700 = bitcast %union.anon.81* %699 to i64*
  %701 = load i64, i64* %700, align 8
  store i64 %701, i64* %80, align 8
  br label %3523

702:                                              ; preds = %410
  %703 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %704 = bitcast %union.anon.81* %703 to %"class.sh::TIntermTyped"**
  %705 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %704, align 8
  %706 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %707 = bitcast %union.anon.81* %706 to %"class.sh::TIntermTyped"**
  %708 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %707, align 8
  %709 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %710 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext13addBinaryMathE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 15, %"class.sh::TIntermTyped"* %705, %"class.sh::TIntermTyped"* %708, %"struct.sh::TSourceLoc"* dereferenceable(16) %709) #8
  store %"class.sh::TIntermTyped"* %710, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

711:                                              ; preds = %410
  %712 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %713 = bitcast %union.anon.81* %712 to %"class.sh::TIntermTyped"**
  %714 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %713, align 8
  %715 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %716 = bitcast %union.anon.81* %715 to %"class.sh::TIntermTyped"**
  %717 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %716, align 8
  %718 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %719 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext13addBinaryMathE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 16, %"class.sh::TIntermTyped"* %714, %"class.sh::TIntermTyped"* %717, %"struct.sh::TSourceLoc"* dereferenceable(16) %718) #8
  store %"class.sh::TIntermTyped"* %719, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

720:                                              ; preds = %410
  %721 = load i32, i32* %123, align 8
  %722 = icmp slt i32 %721, 300
  br i1 %722, label %723, label %725

723:                                              ; preds = %720
  %724 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %724, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #8
  br label %725

725:                                              ; preds = %723, %720
  %726 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %727 = bitcast %union.anon.81* %726 to %"class.sh::TIntermTyped"**
  %728 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %727, align 8
  %729 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %730 = bitcast %union.anon.81* %729 to %"class.sh::TIntermTyped"**
  %731 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %730, align 8
  %732 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %733 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext13addBinaryMathE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 17, %"class.sh::TIntermTyped"* %728, %"class.sh::TIntermTyped"* %731, %"struct.sh::TSourceLoc"* dereferenceable(16) %732) #8
  store %"class.sh::TIntermTyped"* %733, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

734:                                              ; preds = %410
  %735 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %736 = bitcast %union.anon.81* %735 to i64*
  %737 = load i64, i64* %736, align 8
  store i64 %737, i64* %80, align 8
  br label %3523

738:                                              ; preds = %410
  %739 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %740 = bitcast %union.anon.81* %739 to %"class.sh::TIntermTyped"**
  %741 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %740, align 8
  %742 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %743 = bitcast %union.anon.81* %742 to %"class.sh::TIntermTyped"**
  %744 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %743, align 8
  %745 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %746 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext13addBinaryMathE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 13, %"class.sh::TIntermTyped"* %741, %"class.sh::TIntermTyped"* %744, %"struct.sh::TSourceLoc"* dereferenceable(16) %745) #8
  store %"class.sh::TIntermTyped"* %746, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

747:                                              ; preds = %410
  %748 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %749 = bitcast %union.anon.81* %748 to %"class.sh::TIntermTyped"**
  %750 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %749, align 8
  %751 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %752 = bitcast %union.anon.81* %751 to %"class.sh::TIntermTyped"**
  %753 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %752, align 8
  %754 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %755 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext13addBinaryMathE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 14, %"class.sh::TIntermTyped"* %750, %"class.sh::TIntermTyped"* %753, %"struct.sh::TSourceLoc"* dereferenceable(16) %754) #8
  store %"class.sh::TIntermTyped"* %755, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

756:                                              ; preds = %410
  %757 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %758 = bitcast %union.anon.81* %757 to i64*
  %759 = load i64, i64* %758, align 8
  store i64 %759, i64* %80, align 8
  br label %3523

760:                                              ; preds = %410
  %761 = load i32, i32* %123, align 8
  %762 = icmp slt i32 %761, 300
  br i1 %762, label %763, label %765

763:                                              ; preds = %760
  %764 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %764, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #8
  br label %765

765:                                              ; preds = %763, %760
  %766 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %767 = bitcast %union.anon.81* %766 to %"class.sh::TIntermTyped"**
  %768 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %767, align 8
  %769 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %770 = bitcast %union.anon.81* %769 to %"class.sh::TIntermTyped"**
  %771 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %770, align 8
  %772 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %773 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext13addBinaryMathE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 39, %"class.sh::TIntermTyped"* %768, %"class.sh::TIntermTyped"* %771, %"struct.sh::TSourceLoc"* dereferenceable(16) %772) #8
  store %"class.sh::TIntermTyped"* %773, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

774:                                              ; preds = %410
  %775 = load i32, i32* %123, align 8
  %776 = icmp slt i32 %775, 300
  br i1 %776, label %777, label %779

777:                                              ; preds = %774
  %778 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %778, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #8
  br label %779

779:                                              ; preds = %777, %774
  %780 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %781 = bitcast %union.anon.81* %780 to %"class.sh::TIntermTyped"**
  %782 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %781, align 8
  %783 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %784 = bitcast %union.anon.81* %783 to %"class.sh::TIntermTyped"**
  %785 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %784, align 8
  %786 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %787 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext13addBinaryMathE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 40, %"class.sh::TIntermTyped"* %782, %"class.sh::TIntermTyped"* %785, %"struct.sh::TSourceLoc"* dereferenceable(16) %786) #8
  store %"class.sh::TIntermTyped"* %787, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

788:                                              ; preds = %410
  %789 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %790 = bitcast %union.anon.81* %789 to i64*
  %791 = load i64, i64* %790, align 8
  store i64 %791, i64* %80, align 8
  br label %3523

792:                                              ; preds = %410
  %793 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %794 = bitcast %union.anon.81* %793 to %"class.sh::TIntermTyped"**
  %795 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %794, align 8
  %796 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %797 = bitcast %union.anon.81* %796 to %"class.sh::TIntermTyped"**
  %798 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %797, align 8
  %799 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %800 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext26addBinaryMathBooleanResultE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 20, %"class.sh::TIntermTyped"* %795, %"class.sh::TIntermTyped"* %798, %"struct.sh::TSourceLoc"* dereferenceable(16) %799) #8
  store %"class.sh::TIntermTyped"* %800, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

801:                                              ; preds = %410
  %802 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %803 = bitcast %union.anon.81* %802 to %"class.sh::TIntermTyped"**
  %804 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %803, align 8
  %805 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %806 = bitcast %union.anon.81* %805 to %"class.sh::TIntermTyped"**
  %807 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %806, align 8
  %808 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %809 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext26addBinaryMathBooleanResultE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 21, %"class.sh::TIntermTyped"* %804, %"class.sh::TIntermTyped"* %807, %"struct.sh::TSourceLoc"* dereferenceable(16) %808) #8
  store %"class.sh::TIntermTyped"* %809, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

810:                                              ; preds = %410
  %811 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %812 = bitcast %union.anon.81* %811 to %"class.sh::TIntermTyped"**
  %813 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %812, align 8
  %814 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %815 = bitcast %union.anon.81* %814 to %"class.sh::TIntermTyped"**
  %816 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %815, align 8
  %817 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %818 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext26addBinaryMathBooleanResultE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 22, %"class.sh::TIntermTyped"* %813, %"class.sh::TIntermTyped"* %816, %"struct.sh::TSourceLoc"* dereferenceable(16) %817) #8
  store %"class.sh::TIntermTyped"* %818, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

819:                                              ; preds = %410
  %820 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %821 = bitcast %union.anon.81* %820 to %"class.sh::TIntermTyped"**
  %822 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %821, align 8
  %823 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %824 = bitcast %union.anon.81* %823 to %"class.sh::TIntermTyped"**
  %825 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %824, align 8
  %826 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %827 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext26addBinaryMathBooleanResultE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 23, %"class.sh::TIntermTyped"* %822, %"class.sh::TIntermTyped"* %825, %"struct.sh::TSourceLoc"* dereferenceable(16) %826) #8
  store %"class.sh::TIntermTyped"* %827, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

828:                                              ; preds = %410
  %829 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %830 = bitcast %union.anon.81* %829 to i64*
  %831 = load i64, i64* %830, align 8
  store i64 %831, i64* %80, align 8
  br label %3523

832:                                              ; preds = %410
  %833 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %834 = bitcast %union.anon.81* %833 to %"class.sh::TIntermTyped"**
  %835 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %834, align 8
  %836 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %837 = bitcast %union.anon.81* %836 to %"class.sh::TIntermTyped"**
  %838 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %837, align 8
  %839 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %840 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext26addBinaryMathBooleanResultE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 18, %"class.sh::TIntermTyped"* %835, %"class.sh::TIntermTyped"* %838, %"struct.sh::TSourceLoc"* dereferenceable(16) %839) #8
  store %"class.sh::TIntermTyped"* %840, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

841:                                              ; preds = %410
  %842 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %843 = bitcast %union.anon.81* %842 to %"class.sh::TIntermTyped"**
  %844 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %843, align 8
  %845 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %846 = bitcast %union.anon.81* %845 to %"class.sh::TIntermTyped"**
  %847 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %846, align 8
  %848 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %849 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext26addBinaryMathBooleanResultE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 19, %"class.sh::TIntermTyped"* %844, %"class.sh::TIntermTyped"* %847, %"struct.sh::TSourceLoc"* dereferenceable(16) %848) #8
  store %"class.sh::TIntermTyped"* %849, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

850:                                              ; preds = %410
  %851 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %852 = bitcast %union.anon.81* %851 to i64*
  %853 = load i64, i64* %852, align 8
  store i64 %853, i64* %80, align 8
  br label %3523

854:                                              ; preds = %410
  %855 = load i32, i32* %123, align 8
  %856 = icmp slt i32 %855, 300
  br i1 %856, label %857, label %859

857:                                              ; preds = %854
  %858 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %858, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #8
  br label %859

859:                                              ; preds = %857, %854
  %860 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %861 = bitcast %union.anon.81* %860 to %"class.sh::TIntermTyped"**
  %862 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %861, align 8
  %863 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %864 = bitcast %union.anon.81* %863 to %"class.sh::TIntermTyped"**
  %865 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %864, align 8
  %866 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %867 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext13addBinaryMathE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 41, %"class.sh::TIntermTyped"* %862, %"class.sh::TIntermTyped"* %865, %"struct.sh::TSourceLoc"* dereferenceable(16) %866) #8
  store %"class.sh::TIntermTyped"* %867, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

868:                                              ; preds = %410
  %869 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %870 = bitcast %union.anon.81* %869 to i64*
  %871 = load i64, i64* %870, align 8
  store i64 %871, i64* %80, align 8
  br label %3523

872:                                              ; preds = %410
  %873 = load i32, i32* %123, align 8
  %874 = icmp slt i32 %873, 300
  br i1 %874, label %875, label %877

875:                                              ; preds = %872
  %876 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %876, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #8
  br label %877

877:                                              ; preds = %875, %872
  %878 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %879 = bitcast %union.anon.81* %878 to %"class.sh::TIntermTyped"**
  %880 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %879, align 8
  %881 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %882 = bitcast %union.anon.81* %881 to %"class.sh::TIntermTyped"**
  %883 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %882, align 8
  %884 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %885 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext13addBinaryMathE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 42, %"class.sh::TIntermTyped"* %880, %"class.sh::TIntermTyped"* %883, %"struct.sh::TSourceLoc"* dereferenceable(16) %884) #8
  store %"class.sh::TIntermTyped"* %885, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

886:                                              ; preds = %410
  %887 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %888 = bitcast %union.anon.81* %887 to i64*
  %889 = load i64, i64* %888, align 8
  store i64 %889, i64* %80, align 8
  br label %3523

890:                                              ; preds = %410
  %891 = load i32, i32* %123, align 8
  %892 = icmp slt i32 %891, 300
  br i1 %892, label %893, label %895

893:                                              ; preds = %890
  %894 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %894, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #8
  br label %895

895:                                              ; preds = %893, %890
  %896 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %897 = bitcast %union.anon.81* %896 to %"class.sh::TIntermTyped"**
  %898 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %897, align 8
  %899 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %900 = bitcast %union.anon.81* %899 to %"class.sh::TIntermTyped"**
  %901 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %900, align 8
  %902 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %903 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext13addBinaryMathE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 43, %"class.sh::TIntermTyped"* %898, %"class.sh::TIntermTyped"* %901, %"struct.sh::TSourceLoc"* dereferenceable(16) %902) #8
  store %"class.sh::TIntermTyped"* %903, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

904:                                              ; preds = %410
  %905 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %906 = bitcast %union.anon.81* %905 to i64*
  %907 = load i64, i64* %906, align 8
  store i64 %907, i64* %80, align 8
  br label %3523

908:                                              ; preds = %410
  %909 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %910 = bitcast %union.anon.81* %909 to %"class.sh::TIntermTyped"**
  %911 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %910, align 8
  %912 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %913 = bitcast %union.anon.81* %912 to %"class.sh::TIntermTyped"**
  %914 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %913, align 8
  %915 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %916 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext26addBinaryMathBooleanResultE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 38, %"class.sh::TIntermTyped"* %911, %"class.sh::TIntermTyped"* %914, %"struct.sh::TSourceLoc"* dereferenceable(16) %915) #8
  store %"class.sh::TIntermTyped"* %916, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

917:                                              ; preds = %410
  %918 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %919 = bitcast %union.anon.81* %918 to i64*
  %920 = load i64, i64* %919, align 8
  store i64 %920, i64* %80, align 8
  br label %3523

921:                                              ; preds = %410
  %922 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %923 = bitcast %union.anon.81* %922 to %"class.sh::TIntermTyped"**
  %924 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %923, align 8
  %925 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %926 = bitcast %union.anon.81* %925 to %"class.sh::TIntermTyped"**
  %927 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %926, align 8
  %928 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %929 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext26addBinaryMathBooleanResultE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 37, %"class.sh::TIntermTyped"* %924, %"class.sh::TIntermTyped"* %927, %"struct.sh::TSourceLoc"* dereferenceable(16) %928) #8
  store %"class.sh::TIntermTyped"* %929, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

930:                                              ; preds = %410
  %931 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %932 = bitcast %union.anon.81* %931 to i64*
  %933 = load i64, i64* %932, align 8
  store i64 %933, i64* %80, align 8
  br label %3523

934:                                              ; preds = %410
  %935 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %936 = bitcast %union.anon.81* %935 to %"class.sh::TIntermTyped"**
  %937 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %936, align 8
  %938 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %939 = bitcast %union.anon.81* %938 to %"class.sh::TIntermTyped"**
  %940 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %939, align 8
  %941 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %942 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext26addBinaryMathBooleanResultE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext 36, %"class.sh::TIntermTyped"* %937, %"class.sh::TIntermTyped"* %940, %"struct.sh::TSourceLoc"* dereferenceable(16) %941) #8
  store %"class.sh::TIntermTyped"* %942, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

943:                                              ; preds = %410
  %944 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %945 = bitcast %union.anon.81* %944 to i64*
  %946 = load i64, i64* %945, align 8
  store i64 %946, i64* %80, align 8
  br label %3523

947:                                              ; preds = %410
  %948 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -4, i32 0, i32 1
  %949 = bitcast %union.anon.81* %948 to %"class.sh::TIntermTyped"**
  %950 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %949, align 8
  %951 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %952 = bitcast %union.anon.81* %951 to %"class.sh::TIntermTyped"**
  %953 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %952, align 8
  %954 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %955 = bitcast %union.anon.81* %954 to %"class.sh::TIntermTyped"**
  %956 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %955, align 8
  %957 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -3
  %958 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext19addTernarySelectionEPNS_12TIntermTypedES2_S2_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TIntermTyped"* %950, %"class.sh::TIntermTyped"* %953, %"class.sh::TIntermTyped"* %956, %"struct.sh::TSourceLoc"* dereferenceable(16) %957) #8
  store %"class.sh::TIntermTyped"* %958, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

959:                                              ; preds = %410
  %960 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %961 = bitcast %union.anon.81* %960 to i64*
  %962 = load i64, i64* %961, align 8
  store i64 %962, i64* %80, align 8
  br label %3523

963:                                              ; preds = %410
  %964 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 0
  %965 = load i8, i8* %964, align 8
  %966 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %967 = bitcast %union.anon.81* %966 to %"class.sh::TIntermTyped"**
  %968 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %967, align 8
  %969 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %970 = bitcast %union.anon.81* %969 to %"class.sh::TIntermTyped"**
  %971 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %970, align 8
  %972 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %973 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext9addAssignE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext %965, %"class.sh::TIntermTyped"* %968, %"class.sh::TIntermTyped"* %971, %"struct.sh::TSourceLoc"* dereferenceable(16) %972) #8
  store %"class.sh::TIntermTyped"* %973, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

974:                                              ; preds = %410
  store i8 -118, i8* %67, align 8
  br label %3523

975:                                              ; preds = %410
  store i8 -114, i8* %67, align 8
  br label %3523

976:                                              ; preds = %410
  store i8 -109, i8* %67, align 8
  br label %3523

977:                                              ; preds = %410
  %978 = load i32, i32* %123, align 8
  %979 = icmp slt i32 %978, 300
  br i1 %979, label %980, label %981

980:                                              ; preds = %977
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* nonnull dereferenceable(16) %12, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #8
  br label %981

981:                                              ; preds = %980, %977
  store i8 -108, i8* %67, align 8
  br label %3523

982:                                              ; preds = %410
  store i8 -116, i8* %67, align 8
  br label %3523

983:                                              ; preds = %410
  store i8 -115, i8* %67, align 8
  br label %3523

984:                                              ; preds = %410
  %985 = load i32, i32* %123, align 8
  %986 = icmp slt i32 %985, 300
  br i1 %986, label %987, label %988

987:                                              ; preds = %984
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* nonnull dereferenceable(16) %12, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #8
  br label %988

988:                                              ; preds = %987, %984
  store i8 -107, i8* %67, align 8
  br label %3523

989:                                              ; preds = %410
  %990 = load i32, i32* %123, align 8
  %991 = icmp slt i32 %990, 300
  br i1 %991, label %992, label %993

992:                                              ; preds = %989
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* nonnull dereferenceable(16) %12, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0)) #8
  br label %993

993:                                              ; preds = %992, %989
  store i8 -106, i8* %67, align 8
  br label %3523

994:                                              ; preds = %410
  %995 = load i32, i32* %123, align 8
  %996 = icmp slt i32 %995, 300
  br i1 %996, label %997, label %998

997:                                              ; preds = %994
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* nonnull dereferenceable(16) %12, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0)) #8
  br label %998

998:                                              ; preds = %997, %994
  store i8 -105, i8* %67, align 8
  br label %3523

999:                                              ; preds = %410
  %1000 = load i32, i32* %123, align 8
  %1001 = icmp slt i32 %1000, 300
  br i1 %1001, label %1002, label %1003

1002:                                             ; preds = %999
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* nonnull dereferenceable(16) %12, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0)) #8
  br label %1003

1003:                                             ; preds = %1002, %999
  store i8 -104, i8* %67, align 8
  br label %3523

1004:                                             ; preds = %410
  %1005 = load i32, i32* %123, align 8
  %1006 = icmp slt i32 %1005, 300
  br i1 %1006, label %1007, label %1008

1007:                                             ; preds = %1004
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* nonnull dereferenceable(16) %12, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0)) #8
  br label %1008

1008:                                             ; preds = %1007, %1004
  store i8 -103, i8* %67, align 8
  br label %3523

1009:                                             ; preds = %410
  %1010 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %1011 = bitcast %union.anon.81* %1010 to i64*
  %1012 = load i64, i64* %1011, align 8
  store i64 %1012, i64* %80, align 8
  br label %3523

1013:                                             ; preds = %410
  %1014 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %1015 = bitcast %union.anon.81* %1014 to %"class.sh::TIntermTyped"**
  %1016 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %1015, align 8
  %1017 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %1018 = bitcast %union.anon.81* %1017 to %"class.sh::TIntermTyped"**
  %1019 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %1018, align 8
  %1020 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %1021 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext8addCommaEPNS_12TIntermTypedES2_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TIntermTyped"* %1016, %"class.sh::TIntermTyped"* %1019, %"struct.sh::TSourceLoc"* dereferenceable(16) %1020) #8
  store %"class.sh::TIntermTyped"* %1021, %"class.sh::TIntermTyped"** %229, align 8
  br label %3523

1022:                                             ; preds = %410
  %1023 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %1024 = bitcast %union.anon.81* %1023 to %"class.sh::TIntermTyped"**
  %1025 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %1024, align 8
  call void @_ZN2sh13TParseContext12checkIsConstEPNS_12TIntermTypedE(%"class.sh::TParseContext"* %0, %"class.sh::TIntermTyped"* %1025) #8
  %1026 = bitcast %union.anon.81* %1023 to i64*
  %1027 = load i64, i64* %1026, align 8
  store i64 %1027, i64* %80, align 8
  br label %3523

1028:                                             ; preds = %410
  %1029 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %226) #8
  %1030 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1
  %1031 = bitcast %union.YYSTYPE* %1030 to i8**
  %1032 = load i8*, i8** %1031, align 8
  store i8* %1032, i8** %227, align 8
  %1033 = icmp eq i8* %1032, null
  br i1 %1033, label %1040, label %1034

1034:                                             ; preds = %1028, %1034
  %1035 = phi i64 [ %1039, %1034 ], [ 0, %1028 ]
  %1036 = getelementptr inbounds i8, i8* %1032, i64 %1035
  %1037 = load i8, i8* %1036, align 1
  %1038 = icmp eq i8 %1037, 0
  %1039 = add i64 %1035, 1
  br i1 %1038, label %1040, label %1034

1040:                                             ; preds = %1034, %1028
  %1041 = phi i64 [ 0, %1028 ], [ %1035, %1034 ]
  store i64 %1041, i64* %228, align 8
  call void @_ZN2sh13TParseContext22enterStructDeclarationERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1029, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %18) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %226) #8
  %1042 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1030, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %1042, i64 16, i1 false)
  br label %3523

1043:                                             ; preds = %410
  %1044 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %1045 = bitcast %union.anon.83* %1044 to %"class.sh::TFunction"**
  %1046 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %1045, align 8
  %1047 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %1048 = call %"class.sh::TIntermFunctionPrototype"* @_ZN2sh13TParseContext31addFunctionPrototypeDeclarationERKNS_9TFunctionERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TFunction"* dereferenceable(80) %1046, %"struct.sh::TSourceLoc"* dereferenceable(16) %1047) #8
  %1049 = getelementptr inbounds %"class.sh::TIntermFunctionPrototype", %"class.sh::TIntermFunctionPrototype"* %1048, i64 0, i32 0, i32 0
  store %"class.sh::TIntermNode"* %1049, %"class.sh::TIntermNode"** %83, align 8
  br label %3523

1050:                                             ; preds = %410
  %1051 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 1
  %1052 = bitcast %union.anon.81* %1051 to i64*
  %1053 = load i64, i64* %1052, align 8
  store i64 %1053, i64* %80, align 8
  br label %3523

1054:                                             ; preds = %410
  %1055 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 2, i32 0, i32 0, i32 0
  %1056 = load i32, i32* %1055, align 8
  %1057 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2, i32 0
  %1058 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -3
  call void @_ZN2sh13TParseContext30parseDefaultPrecisionQualifierENS_10TPrecisionERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i32 %1056, %"struct.sh::TPublicType"* dereferenceable(160) %1057, %"struct.sh::TSourceLoc"* dereferenceable(16) %1058) #8
  store %"class.sh::TIntermNode"* null, %"class.sh::TIntermNode"** %83, align 8
  br label %3523

1059:                                             ; preds = %410
  %1060 = load i32, i32* %123, align 8
  %1061 = icmp slt i32 %1060, 300
  br i1 %1061, label %1062, label %1076

1062:                                             ; preds = %1059
  %1063 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %220) #8
  %1064 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -3
  %1065 = bitcast %union.YYSTYPE* %1064 to i8**
  %1066 = load i8*, i8** %1065, align 8
  store i8* %1066, i8** %221, align 8
  %1067 = icmp eq i8* %1066, null
  br i1 %1067, label %1074, label %1068

1068:                                             ; preds = %1062, %1068
  %1069 = phi i64 [ %1073, %1068 ], [ 0, %1062 ]
  %1070 = getelementptr inbounds i8, i8* %1066, i64 %1069
  %1071 = load i8, i8* %1070, align 1
  %1072 = icmp eq i8 %1071, 0
  %1073 = add i64 %1069, 1
  br i1 %1072, label %1074, label %1068

1074:                                             ; preds = %1068, %1062
  %1075 = phi i64 [ 0, %1062 ], [ %1069, %1068 ]
  store i64 %1075, i64* %222, align 8
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcRKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1063, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19, i64 0, i64 0), %"class.sh::ImmutableString"* nonnull dereferenceable(16) %19) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %220) #8
  br label %1076

1076:                                             ; preds = %1059, %1074
  %1077 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -4, i32 0, i32 2
  %1078 = bitcast %union.anon.83* %1077 to %"class.sh::TTypeQualifierBuilder"**
  %1079 = load %"class.sh::TTypeQualifierBuilder"*, %"class.sh::TTypeQualifierBuilder"** %1078, align 8
  %1080 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %223) #8
  %1081 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -3
  %1082 = bitcast %union.YYSTYPE* %1081 to i8**
  %1083 = load i8*, i8** %1082, align 8
  store i8* %1083, i8** %224, align 8
  %1084 = icmp eq i8* %1083, null
  br i1 %1084, label %1091, label %1085

1085:                                             ; preds = %1076, %1085
  %1086 = phi i64 [ %1090, %1085 ], [ 0, %1076 ]
  %1087 = getelementptr inbounds i8, i8* %1083, i64 %1086
  %1088 = load i8, i8* %1087, align 1
  %1089 = icmp eq i8 %1088, 0
  %1090 = add i64 %1086, 1
  br i1 %1089, label %1091, label %1085

1091:                                             ; preds = %1085, %1076
  %1092 = phi i64 [ 0, %1076 ], [ %1086, %1085 ]
  store i64 %1092, i64* %225, align 8
  %1093 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 2
  %1094 = bitcast %union.anon.83* %1093 to %"class.sh::TVector.22"**
  %1095 = load %"class.sh::TVector.22"*, %"class.sh::TVector.22"** %1094, align 8
  %1096 = call %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext17addInterfaceBlockERKNS_21TTypeQualifierBuilderERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_7TVectorIPNS_6TFieldEEES9_S6_PKNSA_IjEES6_(%"class.sh::TParseContext"* %0, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32) %1079, %"struct.sh::TSourceLoc"* dereferenceable(16) %1080, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %20, %"class.sh::TVector.22"* %1095, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2shL21kEmptyImmutableStringE, %"struct.sh::TSourceLoc"* nonnull dereferenceable(16) %12, %"class.sh::TVector"* null, %"struct.sh::TSourceLoc"* nonnull dereferenceable(16) %12) #8
  %1097 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %1096, i64 0, i32 0
  store %"class.sh::TIntermNode"* %1097, %"class.sh::TIntermNode"** %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %223) #8
  br label %3523

1098:                                             ; preds = %410
  %1099 = load i32, i32* %123, align 8
  %1100 = icmp slt i32 %1099, 300
  br i1 %1100, label %1101, label %1115

1101:                                             ; preds = %1098
  %1102 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %211) #8
  %1103 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -4
  %1104 = bitcast %union.YYSTYPE* %1103 to i8**
  %1105 = load i8*, i8** %1104, align 8
  store i8* %1105, i8** %212, align 8
  %1106 = icmp eq i8* %1105, null
  br i1 %1106, label %1113, label %1107

1107:                                             ; preds = %1101, %1107
  %1108 = phi i64 [ %1112, %1107 ], [ 0, %1101 ]
  %1109 = getelementptr inbounds i8, i8* %1105, i64 %1108
  %1110 = load i8, i8* %1109, align 1
  %1111 = icmp eq i8 %1110, 0
  %1112 = add i64 %1108, 1
  br i1 %1111, label %1113, label %1107

1113:                                             ; preds = %1107, %1101
  %1114 = phi i64 [ 0, %1101 ], [ %1108, %1107 ]
  store i64 %1114, i64* %213, align 8
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcRKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1102, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19, i64 0, i64 0), %"class.sh::ImmutableString"* nonnull dereferenceable(16) %21) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %211) #8
  br label %1115

1115:                                             ; preds = %1098, %1113
  %1116 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -5, i32 0, i32 2
  %1117 = bitcast %union.anon.83* %1116 to %"class.sh::TTypeQualifierBuilder"**
  %1118 = load %"class.sh::TTypeQualifierBuilder"*, %"class.sh::TTypeQualifierBuilder"** %1117, align 8
  %1119 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %214) #8
  %1120 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -4
  %1121 = bitcast %union.YYSTYPE* %1120 to i8**
  %1122 = load i8*, i8** %1121, align 8
  store i8* %1122, i8** %215, align 8
  %1123 = icmp eq i8* %1122, null
  br i1 %1123, label %1130, label %1124

1124:                                             ; preds = %1115, %1124
  %1125 = phi i64 [ %1129, %1124 ], [ 0, %1115 ]
  %1126 = getelementptr inbounds i8, i8* %1122, i64 %1125
  %1127 = load i8, i8* %1126, align 1
  %1128 = icmp eq i8 %1127, 0
  %1129 = add i64 %1125, 1
  br i1 %1128, label %1130, label %1124

1130:                                             ; preds = %1124, %1115
  %1131 = phi i64 [ 0, %1115 ], [ %1125, %1124 ]
  store i64 %1131, i64* %216, align 8
  %1132 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -3, i32 0, i32 2
  %1133 = bitcast %union.anon.83* %1132 to %"class.sh::TVector.22"**
  %1134 = load %"class.sh::TVector.22"*, %"class.sh::TVector.22"** %1133, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %217) #8
  %1135 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1
  %1136 = bitcast %union.YYSTYPE* %1135 to i8**
  %1137 = load i8*, i8** %1136, align 8
  store i8* %1137, i8** %218, align 8
  %1138 = icmp eq i8* %1137, null
  br i1 %1138, label %1145, label %1139

1139:                                             ; preds = %1130, %1139
  %1140 = phi i64 [ %1144, %1139 ], [ 0, %1130 ]
  %1141 = getelementptr inbounds i8, i8* %1137, i64 %1140
  %1142 = load i8, i8* %1141, align 1
  %1143 = icmp eq i8 %1142, 0
  %1144 = add i64 %1140, 1
  br i1 %1143, label %1145, label %1139

1145:                                             ; preds = %1139, %1130
  %1146 = phi i64 [ 0, %1130 ], [ %1140, %1139 ]
  store i64 %1146, i64* %219, align 8
  %1147 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %1148 = call %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext17addInterfaceBlockERKNS_21TTypeQualifierBuilderERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_7TVectorIPNS_6TFieldEEES9_S6_PKNSA_IjEES6_(%"class.sh::TParseContext"* %0, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32) %1118, %"struct.sh::TSourceLoc"* dereferenceable(16) %1119, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %22, %"class.sh::TVector.22"* %1134, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %23, %"struct.sh::TSourceLoc"* dereferenceable(16) %1147, %"class.sh::TVector"* null, %"struct.sh::TSourceLoc"* nonnull dereferenceable(16) %12) #8
  %1149 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %1148, i64 0, i32 0
  store %"class.sh::TIntermNode"* %1149, %"class.sh::TIntermNode"** %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %217) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %214) #8
  br label %3523

1150:                                             ; preds = %410
  %1151 = load i32, i32* %123, align 8
  %1152 = icmp slt i32 %1151, 300
  br i1 %1152, label %1153, label %1167

1153:                                             ; preds = %1150
  %1154 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -6
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %202) #8
  %1155 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -5
  %1156 = bitcast %union.YYSTYPE* %1155 to i8**
  %1157 = load i8*, i8** %1156, align 8
  store i8* %1157, i8** %203, align 8
  %1158 = icmp eq i8* %1157, null
  br i1 %1158, label %1165, label %1159

1159:                                             ; preds = %1153, %1159
  %1160 = phi i64 [ %1164, %1159 ], [ 0, %1153 ]
  %1161 = getelementptr inbounds i8, i8* %1157, i64 %1160
  %1162 = load i8, i8* %1161, align 1
  %1163 = icmp eq i8 %1162, 0
  %1164 = add i64 %1160, 1
  br i1 %1163, label %1165, label %1159

1165:                                             ; preds = %1159, %1153
  %1166 = phi i64 [ 0, %1153 ], [ %1160, %1159 ]
  store i64 %1166, i64* %204, align 8
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcRKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1154, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19, i64 0, i64 0), %"class.sh::ImmutableString"* nonnull dereferenceable(16) %24) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %202) #8
  br label %1167

1167:                                             ; preds = %1150, %1165
  %1168 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -6, i32 0, i32 2
  %1169 = bitcast %union.anon.83* %1168 to %"class.sh::TTypeQualifierBuilder"**
  %1170 = load %"class.sh::TTypeQualifierBuilder"*, %"class.sh::TTypeQualifierBuilder"** %1169, align 8
  %1171 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %205) #8
  %1172 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -5
  %1173 = bitcast %union.YYSTYPE* %1172 to i8**
  %1174 = load i8*, i8** %1173, align 8
  store i8* %1174, i8** %206, align 8
  %1175 = icmp eq i8* %1174, null
  br i1 %1175, label %1182, label %1176

1176:                                             ; preds = %1167, %1176
  %1177 = phi i64 [ %1181, %1176 ], [ 0, %1167 ]
  %1178 = getelementptr inbounds i8, i8* %1174, i64 %1177
  %1179 = load i8, i8* %1178, align 1
  %1180 = icmp eq i8 %1179, 0
  %1181 = add i64 %1177, 1
  br i1 %1180, label %1182, label %1176

1182:                                             ; preds = %1176, %1167
  %1183 = phi i64 [ 0, %1167 ], [ %1177, %1176 ]
  store i64 %1183, i64* %207, align 8
  %1184 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -4, i32 0, i32 2
  %1185 = bitcast %union.anon.83* %1184 to %"class.sh::TVector.22"**
  %1186 = load %"class.sh::TVector.22"*, %"class.sh::TVector.22"** %1185, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %208) #8
  %1187 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2
  %1188 = bitcast %union.YYSTYPE* %1187 to i8**
  %1189 = load i8*, i8** %1188, align 8
  store i8* %1189, i8** %209, align 8
  %1190 = icmp eq i8* %1189, null
  br i1 %1190, label %1197, label %1191

1191:                                             ; preds = %1182, %1191
  %1192 = phi i64 [ %1196, %1191 ], [ 0, %1182 ]
  %1193 = getelementptr inbounds i8, i8* %1189, i64 %1192
  %1194 = load i8, i8* %1193, align 1
  %1195 = icmp eq i8 %1194, 0
  %1196 = add i64 %1192, 1
  br i1 %1195, label %1197, label %1191

1197:                                             ; preds = %1191, %1182
  %1198 = phi i64 [ 0, %1182 ], [ %1192, %1191 ]
  store i64 %1198, i64* %210, align 8
  %1199 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  %1200 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %1201 = bitcast %union.anon.83* %1200 to %"class.sh::TVector"**
  %1202 = load %"class.sh::TVector"*, %"class.sh::TVector"** %1201, align 8
  %1203 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %1204 = call %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext17addInterfaceBlockERKNS_21TTypeQualifierBuilderERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_7TVectorIPNS_6TFieldEEES9_S6_PKNSA_IjEES6_(%"class.sh::TParseContext"* %0, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32) %1170, %"struct.sh::TSourceLoc"* dereferenceable(16) %1171, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %25, %"class.sh::TVector.22"* %1186, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %26, %"struct.sh::TSourceLoc"* dereferenceable(16) %1199, %"class.sh::TVector"* %1202, %"struct.sh::TSourceLoc"* dereferenceable(16) %1203) #8
  %1205 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %1204, i64 0, i32 0
  store %"class.sh::TIntermNode"* %1205, %"class.sh::TIntermNode"** %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %208) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %205) #8
  br label %3523

1206:                                             ; preds = %410
  %1207 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %1208 = bitcast %union.anon.83* %1207 to %"class.sh::TTypeQualifierBuilder"**
  %1209 = load %"class.sh::TTypeQualifierBuilder"*, %"class.sh::TTypeQualifierBuilder"** %1208, align 8
  call void @_ZN2sh13TParseContext26parseGlobalLayoutQualifierERKNS_21TTypeQualifierBuilderE(%"class.sh::TParseContext"* %0, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32) %1209) #8
  store %"class.sh::TIntermNode"* null, %"class.sh::TIntermNode"** %83, align 8
  br label %3523

1210:                                             ; preds = %410
  %1211 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 2
  %1212 = bitcast %union.anon.83* %1211 to %"class.sh::TTypeQualifierBuilder"**
  %1213 = load %"class.sh::TTypeQualifierBuilder"*, %"class.sh::TTypeQualifierBuilder"** %1212, align 8
  %1214 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %199) #8
  %1215 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1
  %1216 = bitcast %union.YYSTYPE* %1215 to i8**
  %1217 = load i8*, i8** %1216, align 8
  store i8* %1217, i8** %200, align 8
  %1218 = icmp eq i8* %1217, null
  br i1 %1218, label %1225, label %1219

1219:                                             ; preds = %1210, %1219
  %1220 = phi i64 [ %1224, %1219 ], [ 0, %1210 ]
  %1221 = getelementptr inbounds i8, i8* %1217, i64 %1220
  %1222 = load i8, i8* %1221, align 1
  %1223 = icmp eq i8 %1222, 0
  %1224 = add i64 %1220, 1
  br i1 %1223, label %1225, label %1219

1225:                                             ; preds = %1219, %1210
  %1226 = phi i64 [ 0, %1210 ], [ %1220, %1219 ]
  store i64 %1226, i64* %201, align 8
  %1227 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 1
  %1228 = bitcast %union.anon.81* %1227 to %"class.sh::TSymbol"**
  %1229 = load %"class.sh::TSymbol"*, %"class.sh::TSymbol"** %1228, align 8
  %1230 = call %"class.sh::TIntermGlobalQualifierDeclaration"* @_ZN2sh13TParseContext31parseGlobalQualifierDeclarationERKNS_21TTypeQualifierBuilderERKNS_10TSourceLocERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::TParseContext"* %0, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32) %1213, %"struct.sh::TSourceLoc"* dereferenceable(16) %1214, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %27, %"class.sh::TSymbol"* %1229) #8
  %1231 = getelementptr inbounds %"class.sh::TIntermGlobalQualifierDeclaration", %"class.sh::TIntermGlobalQualifierDeclaration"* %1230, i64 0, i32 0
  store %"class.sh::TIntermNode"* %1231, %"class.sh::TIntermNode"** %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %199) #8
  br label %3523

1232:                                             ; preds = %410
  %1233 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %1234 = bitcast %union.anon.83* %1233 to %"class.sh::TFunction"**
  %1235 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %1234, align 8
  %1236 = call %"class.sh::TFunction"* @_ZN2sh13TParseContext23parseFunctionDeclaratorERKNS_10TSourceLocEPNS_9TFunctionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"class.sh::TFunction"* %1235) #8
  store %"class.sh::TFunction"* %1236, %"class.sh::TFunction"** %191, align 8
  store i8 0, i8* %192, align 4
  br label %3523

1237:                                             ; preds = %410
  %1238 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1239 = bitcast %union.anon.83* %1238 to i64*
  %1240 = load i64, i64* %1239, align 8
  store i64 %1240, i64* %124, align 8
  br label %3523

1241:                                             ; preds = %410
  %1242 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1243 = bitcast %union.anon.83* %1242 to i64*
  %1244 = load i64, i64* %1243, align 8
  store i64 %1244, i64* %124, align 8
  br label %3523

1245:                                             ; preds = %410
  %1246 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %1247 = bitcast %union.anon.83* %1246 to i64*
  %1248 = load i64, i64* %1247, align 8
  store i64 %1248, i64* %124, align 8
  %1249 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2, i32 0, i32 0, i32 3
  %1250 = bitcast %"class.sh::TStructure"** %1249 to %"class.sh::TType"**
  %1251 = load %"class.sh::TType"*, %"class.sh::TType"** %1250, align 8
  %1252 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1251, i64 0, i32 0
  %1253 = load i32, i32* %1252, align 8
  %1254 = icmp eq i32 %1253, 0
  br i1 %1254, label %3523, label %1255

1255:                                             ; preds = %1245
  %1256 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1257 = bitcast %union.anon.83* %1246 to %"class.sh::TFunction"**
  %1258 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %1257, align 8
  %1259 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %196) #8
  %1260 = bitcast %union.anon.83* %1256 to i8**
  store i64 -6148914691236517206, i64* %198, align 8
  %1261 = load i8*, i8** %1260, align 8
  store i8* %1261, i8** %197, align 8
  %1262 = icmp eq i8* %1261, null
  br i1 %1262, label %1269, label %1263

1263:                                             ; preds = %1255, %1263
  %1264 = phi i64 [ %1268, %1263 ], [ 0, %1255 ]
  %1265 = getelementptr inbounds i8, i8* %1261, i64 %1264
  %1266 = load i8, i8* %1265, align 1
  %1267 = icmp eq i8 %1266, 0
  %1268 = add i64 %1264, 1
  br i1 %1267, label %1269, label %1263

1269:                                             ; preds = %1263, %1255
  %1270 = phi i64 [ 0, %1255 ], [ %1264, %1263 ]
  store i64 %1270, i64* %198, align 8
  %1271 = bitcast %union.anon.83* %1256 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1271, i8 0, i64 16, i1 false) #8
  %1272 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1273 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1272, i64 40) #8
  %1274 = bitcast i8* %1273 to %"class.sh::TVariable"*
  %1275 = icmp eq i64 %1270, 0
  %1276 = select i1 %1275, i8 3, i8 1
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %1274, %"class.sh::TSymbolTable"* %1259, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %5, %"class.sh::TType"* %1251, i8 zeroext %1276, i8 zeroext 0) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %196) #8
  call void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"* %1258, %"class.sh::TVariable"* %1274) #8
  br label %3523

1277:                                             ; preds = %410
  %1278 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 2
  %1279 = bitcast %union.anon.83* %1278 to i64*
  %1280 = load i64, i64* %1279, align 8
  store i64 %1280, i64* %124, align 8
  %1281 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2, i32 0, i32 0, i32 3
  %1282 = bitcast %"class.sh::TStructure"** %1281 to %"class.sh::TType"**
  %1283 = load %"class.sh::TType"*, %"class.sh::TType"** %1282, align 8
  %1284 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1283, i64 0, i32 0
  %1285 = load i32, i32* %1284, align 8
  %1286 = icmp eq i32 %1285, 0
  br i1 %1286, label %1287, label %1289

1287:                                             ; preds = %1277
  %1288 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1288, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0)) #8
  br label %3523

1289:                                             ; preds = %1277
  %1290 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1291 = bitcast %union.anon.83* %1278 to %"class.sh::TFunction"**
  %1292 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %1291, align 8
  %1293 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %193) #8
  %1294 = bitcast %union.anon.83* %1290 to i8**
  store i64 -6148914691236517206, i64* %195, align 8
  %1295 = load i8*, i8** %1294, align 8
  store i8* %1295, i8** %194, align 8
  %1296 = icmp eq i8* %1295, null
  br i1 %1296, label %1303, label %1297

1297:                                             ; preds = %1289, %1297
  %1298 = phi i64 [ %1302, %1297 ], [ 0, %1289 ]
  %1299 = getelementptr inbounds i8, i8* %1295, i64 %1298
  %1300 = load i8, i8* %1299, align 1
  %1301 = icmp eq i8 %1300, 0
  %1302 = add i64 %1298, 1
  br i1 %1301, label %1303, label %1297

1303:                                             ; preds = %1297, %1289
  %1304 = phi i64 [ 0, %1289 ], [ %1298, %1297 ]
  store i64 %1304, i64* %195, align 8
  %1305 = bitcast %union.anon.83* %1290 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1305, i8 0, i64 16, i1 false) #8
  %1306 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1307 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1306, i64 40) #8
  %1308 = bitcast i8* %1307 to %"class.sh::TVariable"*
  %1309 = icmp eq i64 %1304, 0
  %1310 = select i1 %1309, i8 3, i8 1
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %1308, %"class.sh::TSymbolTable"* %1293, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %4, %"class.sh::TType"* %1283, i8 zeroext %1310, i8 zeroext 0) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193) #8
  call void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"* %1292, %"class.sh::TVariable"* %1308) #8
  br label %3523

1311:                                             ; preds = %410
  %1312 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 2, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %188) #8
  %1313 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1
  %1314 = bitcast %union.YYSTYPE* %1313 to i8**
  %1315 = load i8*, i8** %1314, align 8
  store i8* %1315, i8** %189, align 8
  %1316 = icmp eq i8* %1315, null
  br i1 %1316, label %1323, label %1317

1317:                                             ; preds = %1311, %1317
  %1318 = phi i64 [ %1322, %1317 ], [ 0, %1311 ]
  %1319 = getelementptr inbounds i8, i8* %1315, i64 %1318
  %1320 = load i8, i8* %1319, align 1
  %1321 = icmp eq i8 %1320, 0
  %1322 = add i64 %1318, 1
  br i1 %1321, label %1323, label %1317

1323:                                             ; preds = %1317, %1311
  %1324 = phi i64 [ 0, %1311 ], [ %1318, %1317 ]
  store i64 %1324, i64* %190, align 8
  %1325 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %1326 = call %"class.sh::TFunction"* @_ZN2sh13TParseContext19parseFunctionHeaderERKNS_11TPublicTypeERKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %1312, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %28, %"struct.sh::TSourceLoc"* dereferenceable(16) %1325) #8
  store %"class.sh::TFunction"* %1326, %"class.sh::TFunction"** %191, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %188) #8
  %1327 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  call void @_ZN2sh12TSymbolTable4pushEv(%"class.sh::TSymbolTable"* %1327) #8
  store i8 1, i8* %192, align 4
  br label %3523

1328:                                             ; preds = %410
  %1329 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #8
  %1330 = bitcast %union.YYSTYPE* %326 to i8**
  %1331 = load i8*, i8** %1330, align 8
  store i8* %1331, i8** %186, align 8
  %1332 = icmp eq i8* %1331, null
  br i1 %1332, label %1339, label %1333

1333:                                             ; preds = %1328, %1333
  %1334 = phi i64 [ %1338, %1333 ], [ 0, %1328 ]
  %1335 = getelementptr inbounds i8, i8* %1331, i64 %1334
  %1336 = load i8, i8* %1335, align 1
  %1337 = icmp eq i8 %1336, 0
  %1338 = add i64 %1334, 1
  br i1 %1337, label %1339, label %1333

1339:                                             ; preds = %1333, %1328
  %1340 = phi i64 [ 0, %1328 ], [ %1334, %1333 ]
  store i64 %1340, i64* %187, align 8
  %1341 = call { i8*, %"class.sh::TType"* } @_ZN2sh13TParseContext24parseParameterDeclaratorERKNS_11TPublicTypeERKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %1329, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %29, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  %1342 = extractvalue { i8*, %"class.sh::TType"* } %1341, 0
  %1343 = extractvalue { i8*, %"class.sh::TType"* } %1341, 1
  store i8* %1342, i8** %103, align 8
  store %"class.sh::TType"* %1343, %"class.sh::TType"** %181, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #8
  br label %3523

1344:                                             ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %182) #8
  %1345 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1
  %1346 = bitcast %union.YYSTYPE* %1345 to i8**
  %1347 = load i8*, i8** %1346, align 8
  store i8* %1347, i8** %183, align 8
  %1348 = icmp eq i8* %1347, null
  br i1 %1348, label %1355, label %1349

1349:                                             ; preds = %1344, %1349
  %1350 = phi i64 [ %1354, %1349 ], [ 0, %1344 ]
  %1351 = getelementptr inbounds i8, i8* %1347, i64 %1350
  %1352 = load i8, i8* %1351, align 1
  %1353 = icmp eq i8 %1352, 0
  %1354 = add i64 %1350, 1
  br i1 %1353, label %1355, label %1349

1355:                                             ; preds = %1349, %1344
  %1356 = phi i64 [ 0, %1344 ], [ %1350, %1349 ]
  store i64 %1356, i64* %184, align 8
  %1357 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %1358 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1359 = bitcast %union.anon.83* %1358 to %"class.sh::TVector"**
  %1360 = load %"class.sh::TVector"*, %"class.sh::TVector"** %1359, align 8
  %1361 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 2, i32 0
  %1362 = call { i8*, %"class.sh::TType"* } @_ZN2sh13TParseContext29parseParameterArrayDeclaratorERKNS_15ImmutableStringERKNS_10TSourceLocERKNS_7TVectorIjEES6_PNS_11TPublicTypeE(%"class.sh::TParseContext"* %0, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %30, %"struct.sh::TSourceLoc"* dereferenceable(16) %1357, %"class.sh::TVector"* dereferenceable(24) %1360, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"struct.sh::TPublicType"* %1361) #8
  %1363 = extractvalue { i8*, %"class.sh::TType"* } %1362, 0
  %1364 = extractvalue { i8*, %"class.sh::TType"* } %1362, 1
  store i8* %1363, i8** %103, align 8
  store %"class.sh::TType"* %1364, %"class.sh::TType"** %181, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %182) #8
  br label %3523

1365:                                             ; preds = %410
  %1366 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1367 = bitcast %union.anon.83* %1366 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %1367, i64 16, i1 false)
  %1368 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %1369 = bitcast %union.anon.83* %1368 to %"class.sh::TTypeQualifierBuilder"**
  %1370 = load %"class.sh::TTypeQualifierBuilder"*, %"class.sh::TTypeQualifierBuilder"** %1369, align 8
  %1371 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2, i32 0, i32 0, i32 3
  %1372 = bitcast %"class.sh::TStructure"** %1371 to %"class.sh::TType"**
  %1373 = load %"class.sh::TType"*, %"class.sh::TType"** %1372, align 8
  call void @_ZN2sh13TParseContext30checkIsParameterQualifierValidERKNS_10TSourceLocERKNS_21TTypeQualifierBuilderEPNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32) %1370, %"class.sh::TType"* %1373) #8
  br label %3523

1374:                                             ; preds = %410
  %1375 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1376 = bitcast %union.anon.83* %1375 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %1376, i64 16, i1 false)
  %1377 = load %"class.sh::TType"*, %"class.sh::TType"** %181, align 8
  %1378 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1377, i64 0, i32 2
  store i32 14, i32* %1378, align 8
  br label %3523

1379:                                             ; preds = %410
  %1380 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1381 = bitcast %union.anon.83* %1380 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %1381, i64 16, i1 false)
  %1382 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %1383 = bitcast %union.anon.83* %1382 to %"class.sh::TTypeQualifierBuilder"**
  %1384 = load %"class.sh::TTypeQualifierBuilder"*, %"class.sh::TTypeQualifierBuilder"** %1383, align 8
  %1385 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2, i32 0, i32 0, i32 3
  %1386 = bitcast %"class.sh::TStructure"** %1385 to %"class.sh::TType"**
  %1387 = load %"class.sh::TType"*, %"class.sh::TType"** %1386, align 8
  call void @_ZN2sh13TParseContext30checkIsParameterQualifierValidERKNS_10TSourceLocERKNS_21TTypeQualifierBuilderEPNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32) %1384, %"class.sh::TType"* %1387) #8
  br label %3523

1388:                                             ; preds = %410
  %1389 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1390 = bitcast %union.anon.83* %1389 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %1390, i64 16, i1 false)
  %1391 = load %"class.sh::TType"*, %"class.sh::TType"** %181, align 8
  %1392 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1391, i64 0, i32 2
  store i32 14, i32* %1392, align 8
  br label %3523

1393:                                             ; preds = %410
  %1394 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1395 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1394, i64 184) #8
  %1396 = bitcast i8* %1395 to %"class.sh::TType"*
  %1397 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2, i32 0
  call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* %1396, %"struct.sh::TPublicType"* dereferenceable(160) %1397) #8
  store i8* null, i8** %103, align 8
  store i8* %1395, i8** %180, align 8
  br label %3523

1398:                                             ; preds = %410
  %1399 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %1399, i64 184, i1 false)
  br label %3523

1400:                                             ; preds = %410
  %1401 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %1401, i64 184, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %177) #8
  %1402 = bitcast %union.YYSTYPE* %326 to i8**
  %1403 = load i8*, i8** %1402, align 8
  store i8* %1403, i8** %178, align 8
  %1404 = icmp eq i8* %1403, null
  br i1 %1404, label %1411, label %1405

1405:                                             ; preds = %1400, %1405
  %1406 = phi i64 [ %1410, %1405 ], [ 0, %1400 ]
  %1407 = getelementptr inbounds i8, i8* %1403, i64 %1406
  %1408 = load i8, i8* %1407, align 1
  %1409 = icmp eq i8 %1408, 0
  %1410 = add i64 %1406, 1
  br i1 %1409, label %1411, label %1405

1411:                                             ; preds = %1405, %1400
  %1412 = phi i64 [ 0, %1400 ], [ %1406, %1405 ]
  store i64 %1412, i64* %179, align 8
  %1413 = load %"class.sh::TIntermDeclaration"*, %"class.sh::TIntermDeclaration"** %158, align 8
  call void @_ZN2sh13TParseContext15parseDeclaratorERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_18TIntermDeclarationE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %129, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %31, %"class.sh::TIntermDeclaration"* %1413) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %177) #8
  br label %3523

1414:                                             ; preds = %410
  %1415 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -3, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %1415, i64 184, i1 false)
  %1416 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #8
  %1417 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1
  %1418 = bitcast %union.YYSTYPE* %1417 to i8**
  %1419 = load i8*, i8** %1418, align 8
  store i8* %1419, i8** %175, align 8
  %1420 = icmp eq i8* %1419, null
  br i1 %1420, label %1427, label %1421

1421:                                             ; preds = %1414, %1421
  %1422 = phi i64 [ %1426, %1421 ], [ 0, %1414 ]
  %1423 = getelementptr inbounds i8, i8* %1419, i64 %1422
  %1424 = load i8, i8* %1423, align 1
  %1425 = icmp eq i8 %1424, 0
  %1426 = add i64 %1422, 1
  br i1 %1425, label %1427, label %1421

1427:                                             ; preds = %1421, %1414
  %1428 = phi i64 [ 0, %1414 ], [ %1422, %1421 ]
  store i64 %1428, i64* %176, align 8
  %1429 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1430 = bitcast %union.anon.83* %1429 to %"class.sh::TVector"**
  %1431 = load %"class.sh::TVector"*, %"class.sh::TVector"** %1430, align 8
  %1432 = load %"class.sh::TIntermDeclaration"*, %"class.sh::TIntermDeclaration"** %158, align 8
  call void @_ZN2sh13TParseContext20parseArrayDeclaratorERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES5_RKNS_7TVectorIjEEPNS_18TIntermDeclarationE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %129, %"struct.sh::TSourceLoc"* dereferenceable(16) %1416, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %32, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"class.sh::TVector"* dereferenceable(24) %1431, %"class.sh::TIntermDeclaration"* %1432) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #8
  br label %3523

1433:                                             ; preds = %410
  %1434 = load i32, i32* %123, align 8
  %1435 = icmp slt i32 %1434, 300
  br i1 %1435, label %1436, label %1438

1436:                                             ; preds = %1433
  %1437 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1437, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #8
  br label %1438

1438:                                             ; preds = %1436, %1433
  %1439 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -5, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %1439, i64 184, i1 false)
  %1440 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171) #8
  %1441 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -3
  %1442 = bitcast %union.YYSTYPE* %1441 to i8**
  %1443 = load i8*, i8** %1442, align 8
  store i8* %1443, i8** %172, align 8
  %1444 = icmp eq i8* %1443, null
  br i1 %1444, label %1451, label %1445

1445:                                             ; preds = %1438, %1445
  %1446 = phi i64 [ %1450, %1445 ], [ 0, %1438 ]
  %1447 = getelementptr inbounds i8, i8* %1443, i64 %1446
  %1448 = load i8, i8* %1447, align 1
  %1449 = icmp eq i8 %1448, 0
  %1450 = add i64 %1446, 1
  br i1 %1449, label %1451, label %1445

1451:                                             ; preds = %1445, %1438
  %1452 = phi i64 [ 0, %1438 ], [ %1446, %1445 ]
  store i64 %1452, i64* %173, align 8
  %1453 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  %1454 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 2
  %1455 = bitcast %union.anon.83* %1454 to %"class.sh::TVector"**
  %1456 = load %"class.sh::TVector"*, %"class.sh::TVector"** %1455, align 8
  %1457 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %1458 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %1459 = bitcast %union.anon.81* %1458 to %"class.sh::TIntermTyped"**
  %1460 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %1459, align 8
  %1461 = load %"class.sh::TIntermDeclaration"*, %"class.sh::TIntermDeclaration"** %158, align 8
  call void @_ZN2sh13TParseContext24parseArrayInitDeclaratorERKNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES6_RKNS_7TVectorIjEES6_PNS_12TIntermTypedEPNS_18TIntermDeclarationE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %129, %"struct.sh::TSourceLoc"* dereferenceable(16) %1440, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %33, %"struct.sh::TSourceLoc"* dereferenceable(16) %1453, %"class.sh::TVector"* dereferenceable(24) %1456, %"struct.sh::TSourceLoc"* dereferenceable(16) %1457, %"class.sh::TIntermTyped"* %1460, %"class.sh::TIntermDeclaration"* %1461) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171) #8
  br label %3523

1462:                                             ; preds = %410
  %1463 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -4, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %1463, i64 184, i1 false)
  %1464 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %168) #8
  %1465 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2
  %1466 = bitcast %union.YYSTYPE* %1465 to i8**
  %1467 = load i8*, i8** %1466, align 8
  store i8* %1467, i8** %169, align 8
  %1468 = icmp eq i8* %1467, null
  br i1 %1468, label %1475, label %1469

1469:                                             ; preds = %1462, %1469
  %1470 = phi i64 [ %1474, %1469 ], [ 0, %1462 ]
  %1471 = getelementptr inbounds i8, i8* %1467, i64 %1470
  %1472 = load i8, i8* %1471, align 1
  %1473 = icmp eq i8 %1472, 0
  %1474 = add i64 %1470, 1
  br i1 %1473, label %1475, label %1469

1475:                                             ; preds = %1469, %1462
  %1476 = phi i64 [ 0, %1462 ], [ %1470, %1469 ]
  store i64 %1476, i64* %170, align 8
  %1477 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %1478 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %1479 = bitcast %union.anon.81* %1478 to %"class.sh::TIntermTyped"**
  %1480 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %1479, align 8
  %1481 = load %"class.sh::TIntermDeclaration"*, %"class.sh::TIntermDeclaration"** %158, align 8
  call void @_ZN2sh13TParseContext19parseInitDeclaratorERKNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES6_PNS_12TIntermTypedEPNS_18TIntermDeclarationE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %129, %"struct.sh::TSourceLoc"* dereferenceable(16) %1464, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %34, %"struct.sh::TSourceLoc"* dereferenceable(16) %1477, %"class.sh::TIntermTyped"* %1480, %"class.sh::TIntermDeclaration"* %1481) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168) #8
  br label %3523

1482:                                             ; preds = %410
  %1483 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2, i32 0
  %1484 = bitcast %"struct.sh::TPublicType"* %1483 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %1484, i64 160, i1 false)
  %1485 = call %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext22parseSingleDeclarationERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %129, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2shL21kEmptyImmutableStringE) #8
  store %"class.sh::TIntermDeclaration"* %1485, %"class.sh::TIntermDeclaration"** %158, align 8
  br label %3523

1486:                                             ; preds = %410
  %1487 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2, i32 0
  %1488 = bitcast %"struct.sh::TPublicType"* %1487 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %1488, i64 160, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %165) #8
  %1489 = bitcast %union.YYSTYPE* %326 to i8**
  %1490 = load i8*, i8** %1489, align 8
  store i8* %1490, i8** %166, align 8
  %1491 = icmp eq i8* %1490, null
  br i1 %1491, label %1498, label %1492

1492:                                             ; preds = %1486, %1492
  %1493 = phi i64 [ %1497, %1492 ], [ 0, %1486 ]
  %1494 = getelementptr inbounds i8, i8* %1490, i64 %1493
  %1495 = load i8, i8* %1494, align 1
  %1496 = icmp eq i8 %1495, 0
  %1497 = add i64 %1493, 1
  br i1 %1496, label %1498, label %1492

1498:                                             ; preds = %1492, %1486
  %1499 = phi i64 [ 0, %1486 ], [ %1493, %1492 ]
  store i64 %1499, i64* %167, align 8
  %1500 = call %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext22parseSingleDeclarationERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %129, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %35) #8
  store %"class.sh::TIntermDeclaration"* %1500, %"class.sh::TIntermDeclaration"** %158, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %165) #8
  br label %3523

1501:                                             ; preds = %410
  %1502 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 2, i32 0
  %1503 = bitcast %"struct.sh::TPublicType"* %1502 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %1503, i64 160, i1 false)
  %1504 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162) #8
  %1505 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1
  %1506 = bitcast %union.YYSTYPE* %1505 to i8**
  %1507 = load i8*, i8** %1506, align 8
  store i8* %1507, i8** %163, align 8
  %1508 = icmp eq i8* %1507, null
  br i1 %1508, label %1515, label %1509

1509:                                             ; preds = %1501, %1509
  %1510 = phi i64 [ %1514, %1509 ], [ 0, %1501 ]
  %1511 = getelementptr inbounds i8, i8* %1507, i64 %1510
  %1512 = load i8, i8* %1511, align 1
  %1513 = icmp eq i8 %1512, 0
  %1514 = add i64 %1510, 1
  br i1 %1513, label %1515, label %1509

1515:                                             ; preds = %1509, %1501
  %1516 = phi i64 [ 0, %1501 ], [ %1510, %1509 ]
  store i64 %1516, i64* %164, align 8
  %1517 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1518 = bitcast %union.anon.83* %1517 to %"class.sh::TVector"**
  %1519 = load %"class.sh::TVector"*, %"class.sh::TVector"** %1518, align 8
  %1520 = call %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext27parseSingleArrayDeclarationERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES5_RKNS_7TVectorIjEE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %129, %"struct.sh::TSourceLoc"* dereferenceable(16) %1504, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %36, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"class.sh::TVector"* dereferenceable(24) %1519) #8
  store %"class.sh::TIntermDeclaration"* %1520, %"class.sh::TIntermDeclaration"** %158, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #8
  br label %3523

1521:                                             ; preds = %410
  %1522 = load i32, i32* %123, align 8
  %1523 = icmp slt i32 %1522, 300
  br i1 %1523, label %1524, label %1526

1524:                                             ; preds = %1521
  %1525 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1525, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %1526

1526:                                             ; preds = %1524, %1521
  %1527 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -4, i32 0, i32 2, i32 0
  %1528 = bitcast %"struct.sh::TPublicType"* %1527 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %1528, i64 160, i1 false)
  %1529 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159) #8
  %1530 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -3
  %1531 = bitcast %union.YYSTYPE* %1530 to i8**
  %1532 = load i8*, i8** %1531, align 8
  store i8* %1532, i8** %160, align 8
  %1533 = icmp eq i8* %1532, null
  br i1 %1533, label %1540, label %1534

1534:                                             ; preds = %1526, %1534
  %1535 = phi i64 [ %1539, %1534 ], [ 0, %1526 ]
  %1536 = getelementptr inbounds i8, i8* %1532, i64 %1535
  %1537 = load i8, i8* %1536, align 1
  %1538 = icmp eq i8 %1537, 0
  %1539 = add i64 %1535, 1
  br i1 %1538, label %1540, label %1534

1540:                                             ; preds = %1534, %1526
  %1541 = phi i64 [ 0, %1526 ], [ %1535, %1534 ]
  store i64 %1541, i64* %161, align 8
  %1542 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  %1543 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 2
  %1544 = bitcast %union.anon.83* %1543 to %"class.sh::TVector"**
  %1545 = load %"class.sh::TVector"*, %"class.sh::TVector"** %1544, align 8
  %1546 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %1547 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %1548 = bitcast %union.anon.81* %1547 to %"class.sh::TIntermTyped"**
  %1549 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %1548, align 8
  %1550 = call %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext31parseSingleArrayInitDeclarationERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES5_RKNS_7TVectorIjEES5_PNS_12TIntermTypedE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %129, %"struct.sh::TSourceLoc"* dereferenceable(16) %1529, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %37, %"struct.sh::TSourceLoc"* dereferenceable(16) %1542, %"class.sh::TVector"* dereferenceable(24) %1545, %"struct.sh::TSourceLoc"* dereferenceable(16) %1546, %"class.sh::TIntermTyped"* %1549) #8
  store %"class.sh::TIntermDeclaration"* %1550, %"class.sh::TIntermDeclaration"** %158, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #8
  br label %3523

1551:                                             ; preds = %410
  %1552 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -3, i32 0, i32 2, i32 0
  %1553 = bitcast %"struct.sh::TPublicType"* %1552 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %1553, i64 160, i1 false)
  %1554 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #8
  %1555 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2
  %1556 = bitcast %union.YYSTYPE* %1555 to i8**
  %1557 = load i8*, i8** %1556, align 8
  store i8* %1557, i8** %156, align 8
  %1558 = icmp eq i8* %1557, null
  br i1 %1558, label %1565, label %1559

1559:                                             ; preds = %1551, %1559
  %1560 = phi i64 [ %1564, %1559 ], [ 0, %1551 ]
  %1561 = getelementptr inbounds i8, i8* %1557, i64 %1560
  %1562 = load i8, i8* %1561, align 1
  %1563 = icmp eq i8 %1562, 0
  %1564 = add i64 %1560, 1
  br i1 %1563, label %1565, label %1559

1565:                                             ; preds = %1559, %1551
  %1566 = phi i64 [ 0, %1551 ], [ %1560, %1559 ]
  store i64 %1566, i64* %157, align 8
  %1567 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %1568 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %1569 = bitcast %union.anon.81* %1568 to %"class.sh::TIntermTyped"**
  %1570 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %1569, align 8
  %1571 = call %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext26parseSingleInitDeclarationERKNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES6_PNS_12TIntermTypedE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %129, %"struct.sh::TSourceLoc"* dereferenceable(16) %1554, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %38, %"struct.sh::TSourceLoc"* dereferenceable(16) %1567, %"class.sh::TIntermTyped"* %1570) #8
  store %"class.sh::TIntermDeclaration"* %1571, %"class.sh::TIntermDeclaration"** %158, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #8
  br label %3523

1572:                                             ; preds = %410
  %1573 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2, i32 0
  call void @_ZN2sh13TParseContext21addFullySpecifiedTypeEPNS_11TPublicTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* %1573) #8
  %1574 = bitcast %"struct.sh::TPublicType"* %1573 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %1574, i64 160, i1 false)
  br label %3523

1575:                                             ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %154) #8
  %1576 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %1577 = bitcast %union.anon.83* %1576 to %"class.sh::TTypeQualifierBuilder"**
  %1578 = load %"class.sh::TTypeQualifierBuilder"*, %"class.sh::TTypeQualifierBuilder"** %1577, align 8
  %1579 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2, i32 0
  call void @_ZN2sh13TParseContext21addFullySpecifiedTypeERKNS_21TTypeQualifierBuilderERKNS_11TPublicTypeE(%"struct.sh::TPublicType"* nonnull sret %39, %"class.sh::TParseContext"* %0, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32) %1578, %"struct.sh::TPublicType"* dereferenceable(160) %1579) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* nonnull align 8 %154, i64 160, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %154) #8
  br label %3523

1580:                                             ; preds = %410
  store i32 39, i32* %115, align 8
  br label %3523

1581:                                             ; preds = %410
  store i32 40, i32* %115, align 8
  br label %3523

1582:                                             ; preds = %410
  %1583 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 26) #8
  br i1 %1583, label %1585, label %1584

1584:                                             ; preds = %1582
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i64 0, i64 0)) #8
  br label %1585

1585:                                             ; preds = %1584, %1582
  store i32 41, i32* %115, align 8
  br label %3523

1586:                                             ; preds = %410
  %1587 = call %"class.sh::TTypeQualifierBuilder"* @_ZN2sh13TParseContext26createTypeQualifierBuilderERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  store %"class.sh::TTypeQualifierBuilder"* %1587, %"class.sh::TTypeQualifierBuilder"** %153, align 8
  %1588 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1589 = bitcast %union.anon.83* %1588 to %"class.sh::TQualifierWrapperBase"**
  %1590 = load %"class.sh::TQualifierWrapperBase"*, %"class.sh::TQualifierWrapperBase"** %1589, align 8
  call void @_ZN2sh21TTypeQualifierBuilder15appendQualifierEPKNS_21TQualifierWrapperBaseE(%"class.sh::TTypeQualifierBuilder"* %1587, %"class.sh::TQualifierWrapperBase"* %1590) #8
  br label %3523

1591:                                             ; preds = %410
  %1592 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %1593 = bitcast %union.anon.83* %1592 to %"class.sh::TTypeQualifierBuilder"**
  %1594 = load %"class.sh::TTypeQualifierBuilder"*, %"class.sh::TTypeQualifierBuilder"** %1593, align 8
  store %"class.sh::TTypeQualifierBuilder"* %1594, %"class.sh::TTypeQualifierBuilder"** %153, align 8
  %1595 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1596 = bitcast %union.anon.83* %1595 to %"class.sh::TQualifierWrapperBase"**
  %1597 = load %"class.sh::TQualifierWrapperBase"*, %"class.sh::TQualifierWrapperBase"** %1596, align 8
  call void @_ZN2sh21TTypeQualifierBuilder15appendQualifierEPKNS_21TQualifierWrapperBaseE(%"class.sh::TTypeQualifierBuilder"* %1594, %"class.sh::TQualifierWrapperBase"* %1597) #8
  br label %3523

1598:                                             ; preds = %410
  %1599 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1600 = bitcast %union.anon.83* %1599 to %"class.sh::TQualifierWrapperBase"**
  %1601 = load %"class.sh::TQualifierWrapperBase"*, %"class.sh::TQualifierWrapperBase"** %1600, align 8
  call void @_ZN2sh13TParseContext39checkLocalVariableConstStorageQualifierERKNS_21TQualifierWrapperBaseE(%"class.sh::TParseContext"* %0, %"class.sh::TQualifierWrapperBase"* dereferenceable(24) %1601) #8
  %1602 = bitcast %union.anon.83* %1599 to i64*
  %1603 = load i64, i64* %1602, align 8
  store i64 %1603, i64* %124, align 8
  br label %3523

1604:                                             ; preds = %410
  %1605 = call zeroext i1 @_ZN2sh13TParseContext20checkIsAtGlobalLevelERKNS_10TSourceLocEPKc(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0)) #8
  %1606 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1607 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1606, i64 120) #8
  %1608 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1609 = bitcast %union.anon.83* %1608 to i8*
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %59)
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 %1609, i64 92, i1 false)
  %1610 = bitcast i8* %1607 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1610, align 8
  %1611 = getelementptr inbounds i8, i8* %1607, i64 8
  %1612 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1611, i8* align 4 %1612, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh23TLayoutQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1610, align 8
  %1613 = getelementptr inbounds i8, i8* %1607, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1613, i8* nonnull align 8 %59, i64 92, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %59)
  store i8* %1607, i8** %103, align 8
  br label %3523

1614:                                             ; preds = %410
  %1615 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1616 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1615, i64 32) #8
  %1617 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %1618 = load i32, i32* %1617, align 8
  %1619 = bitcast i8* %1616 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1619, align 8
  %1620 = getelementptr inbounds i8, i8* %1616, i64 8
  %1621 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1620, i8* align 4 %1621, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh26TPrecisionQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1619, align 8
  %1622 = getelementptr inbounds i8, i8* %1616, i64 24
  %1623 = bitcast i8* %1622 to i32*
  store i32 %1618, i32* %1623, align 8
  store i8* %1616, i8** %103, align 8
  br label %3523

1624:                                             ; preds = %410
  %1625 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1626 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1625, i64 32) #8
  %1627 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %1628 = load i32, i32* %1627, align 8
  %1629 = bitcast i8* %1626 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1629, align 8
  %1630 = getelementptr inbounds i8, i8* %1626, i64 8
  %1631 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1630, i8* align 4 %1631, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh30TInterpolationQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1629, align 8
  %1632 = getelementptr inbounds i8, i8* %1626, i64 24
  %1633 = bitcast i8* %1632 to i32*
  store i32 %1628, i32* %1633, align 8
  store i8* %1626, i8** %103, align 8
  br label %3523

1634:                                             ; preds = %410
  %1635 = call zeroext i1 @_ZN2sh13TParseContext20checkIsAtGlobalLevelERKNS_10TSourceLocEPKc(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i64 0, i64 0)) #8
  %1636 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1637 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1636, i64 24) #8
  %1638 = bitcast i8* %1637 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1638, align 8
  %1639 = getelementptr inbounds i8, i8* %1637, i64 8
  %1640 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1639, i8* align 4 %1640, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh26TInvariantQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1638, align 8
  store i8* %1637, i8** %103, align 8
  br label %3523

1641:                                             ; preds = %410
  %1642 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1643 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1642, i64 24) #8
  %1644 = bitcast i8* %1643 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1644, align 8
  %1645 = getelementptr inbounds i8, i8* %1643, i64 8
  %1646 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1645, i8* align 4 %1646, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh24TPreciseQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1644, align 8
  store i8* %1643, i8** %103, align 8
  br label %3523

1647:                                             ; preds = %410
  %1648 = load i32, i32* %151, align 4
  %1649 = icmp eq i32 %1648, 35633
  br i1 %1649, label %1651, label %1650

1650:                                             ; preds = %1647
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0)) #8
  br label %1651

1651:                                             ; preds = %1647, %1650
  %1652 = load i32, i32* %123, align 8
  %1653 = icmp eq i32 %1652, 100
  br i1 %1653, label %1655, label %1654

1654:                                             ; preds = %1651
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0)) #8
  br label %1655

1655:                                             ; preds = %1651, %1654
  %1656 = call %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext27parseGlobalStorageQualifierENS_10TQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i32 3, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  %1657 = getelementptr inbounds %"class.sh::TStorageQualifierWrapper", %"class.sh::TStorageQualifierWrapper"* %1656, i64 0, i32 0
  store %"class.sh::TQualifierWrapperBase"* %1657, %"class.sh::TQualifierWrapperBase"** %152, align 8
  br label %3523

1658:                                             ; preds = %410
  %1659 = load i32, i32* %123, align 8
  %1660 = icmp eq i32 %1659, 100
  br i1 %1660, label %1662, label %1661

1661:                                             ; preds = %1658
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0)) #8
  br label %1662

1662:                                             ; preds = %1658, %1661
  %1663 = call %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext21parseVaryingQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  %1664 = getelementptr inbounds %"class.sh::TStorageQualifierWrapper", %"class.sh::TStorageQualifierWrapper"* %1663, i64 0, i32 0
  store %"class.sh::TQualifierWrapperBase"* %1664, %"class.sh::TQualifierWrapperBase"** %152, align 8
  br label %3523

1665:                                             ; preds = %410
  %1666 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1667 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1666, i64 32) #8
  %1668 = bitcast i8* %1667 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1668, align 8
  %1669 = getelementptr inbounds i8, i8* %1667, i64 8
  %1670 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1669, i8* align 4 %1670, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh24TStorageQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1668, align 8
  %1671 = getelementptr inbounds i8, i8* %1667, i64 24
  %1672 = bitcast i8* %1671 to i32*
  store i32 2, i32* %1672, align 8
  store i8* %1667, i8** %103, align 8
  br label %3523

1673:                                             ; preds = %410
  %1674 = call %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext16parseInQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  %1675 = getelementptr inbounds %"class.sh::TStorageQualifierWrapper", %"class.sh::TStorageQualifierWrapper"* %1674, i64 0, i32 0
  store %"class.sh::TQualifierWrapperBase"* %1675, %"class.sh::TQualifierWrapperBase"** %152, align 8
  br label %3523

1676:                                             ; preds = %410
  %1677 = call %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext17parseOutQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  %1678 = getelementptr inbounds %"class.sh::TStorageQualifierWrapper", %"class.sh::TStorageQualifierWrapper"* %1677, i64 0, i32 0
  store %"class.sh::TQualifierWrapperBase"* %1678, %"class.sh::TQualifierWrapperBase"** %152, align 8
  br label %3523

1679:                                             ; preds = %410
  %1680 = call %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext19parseInOutQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  %1681 = getelementptr inbounds %"class.sh::TStorageQualifierWrapper", %"class.sh::TStorageQualifierWrapper"* %1680, i64 0, i32 0
  store %"class.sh::TQualifierWrapperBase"* %1681, %"class.sh::TQualifierWrapperBase"** %152, align 8
  br label %3523

1682:                                             ; preds = %410
  %1683 = load i32, i32* %123, align 8
  %1684 = icmp slt i32 %1683, 300
  br i1 %1684, label %1685, label %1686

1685:                                             ; preds = %1682
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0)) #8
  br label %1686

1686:                                             ; preds = %1685, %1682
  %1687 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1688 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1687, i64 32) #8
  %1689 = bitcast i8* %1688 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1689, align 8
  %1690 = getelementptr inbounds i8, i8* %1688, i64 8
  %1691 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1690, i8* align 4 %1691, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh24TStorageQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1689, align 8
  %1692 = getelementptr inbounds i8, i8* %1688, i64 24
  %1693 = bitcast i8* %1692 to i32*
  store i32 42, i32* %1693, align 8
  store i8* %1688, i8** %103, align 8
  br label %3523

1694:                                             ; preds = %410
  %1695 = load i32, i32* %123, align 8
  %1696 = icmp slt i32 %1695, 320
  br i1 %1696, label %1697, label %1700

1697:                                             ; preds = %1694
  %1698 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 20) #8
  br i1 %1698, label %1700, label %1699

1699:                                             ; preds = %1697
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0)) #8
  br label %1700

1700:                                             ; preds = %1699, %1697, %1694
  %1701 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1702 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1701, i64 32) #8
  %1703 = bitcast i8* %1702 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1703, align 8
  %1704 = getelementptr inbounds i8, i8* %1702, i64 8
  %1705 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1704, i8* align 4 %1705, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh24TStorageQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1703, align 8
  %1706 = getelementptr inbounds i8, i8* %1702, i64 24
  %1707 = bitcast i8* %1706 to i32*
  store i32 8, i32* %1707, align 8
  store i8* %1702, i8** %103, align 8
  br label %3523

1708:                                             ; preds = %410
  %1709 = call %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext27parseGlobalStorageQualifierENS_10TQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i32 6, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  %1710 = getelementptr inbounds %"class.sh::TStorageQualifierWrapper", %"class.sh::TStorageQualifierWrapper"* %1709, i64 0, i32 0
  store %"class.sh::TQualifierWrapperBase"* %1710, %"class.sh::TQualifierWrapperBase"** %152, align 8
  br label %3523

1711:                                             ; preds = %410
  %1712 = load i32, i32* %123, align 8
  %1713 = icmp slt i32 %1712, 310
  br i1 %1713, label %1714, label %1715

1714:                                             ; preds = %1711
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i64 0, i64 0)) #8
  br label %1715

1715:                                             ; preds = %1714, %1711
  %1716 = call %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext27parseGlobalStorageQualifierENS_10TQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i32 7, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  %1717 = getelementptr inbounds %"class.sh::TStorageQualifierWrapper", %"class.sh::TStorageQualifierWrapper"* %1716, i64 0, i32 0
  store %"class.sh::TQualifierWrapperBase"* %1717, %"class.sh::TQualifierWrapperBase"** %152, align 8
  br label %3523

1718:                                             ; preds = %410
  %1719 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1720 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1719, i64 32) #8
  %1721 = bitcast i8* %1720 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1721, align 8
  %1722 = getelementptr inbounds i8, i8* %1720, i64 8
  %1723 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1722, i8* align 4 %1723, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh23TMemoryQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1721, align 8
  %1724 = getelementptr inbounds i8, i8* %1720, i64 24
  %1725 = bitcast i8* %1724 to i32*
  store i32 67, i32* %1725, align 8
  store i8* %1720, i8** %103, align 8
  br label %3523

1726:                                             ; preds = %410
  %1727 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1728 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1727, i64 32) #8
  %1729 = bitcast i8* %1728 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1729, align 8
  %1730 = getelementptr inbounds i8, i8* %1728, i64 8
  %1731 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1730, i8* align 4 %1731, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh23TMemoryQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1729, align 8
  %1732 = getelementptr inbounds i8, i8* %1728, i64 24
  %1733 = bitcast i8* %1732 to i32*
  store i32 68, i32* %1733, align 8
  store i8* %1728, i8** %103, align 8
  br label %3523

1734:                                             ; preds = %410
  %1735 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1736 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1735, i64 32) #8
  %1737 = bitcast i8* %1736 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1737, align 8
  %1738 = getelementptr inbounds i8, i8* %1736, i64 8
  %1739 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1738, i8* align 4 %1739, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh23TMemoryQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1737, align 8
  %1740 = getelementptr inbounds i8, i8* %1736, i64 24
  %1741 = bitcast i8* %1740 to i32*
  store i32 69, i32* %1741, align 8
  store i8* %1736, i8** %103, align 8
  br label %3523

1742:                                             ; preds = %410
  %1743 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1744 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1743, i64 32) #8
  %1745 = bitcast i8* %1744 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1745, align 8
  %1746 = getelementptr inbounds i8, i8* %1744, i64 8
  %1747 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1746, i8* align 4 %1747, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh23TMemoryQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1745, align 8
  %1748 = getelementptr inbounds i8, i8* %1744, i64 24
  %1749 = bitcast i8* %1748 to i32*
  store i32 70, i32* %1749, align 8
  store i8* %1744, i8** %103, align 8
  br label %3523

1750:                                             ; preds = %410
  %1751 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1752 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1751, i64 32) #8
  %1753 = bitcast i8* %1752 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1753, align 8
  %1754 = getelementptr inbounds i8, i8* %1752, i64 8
  %1755 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1754, i8* align 4 %1755, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh23TMemoryQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1753, align 8
  %1756 = getelementptr inbounds i8, i8* %1752, i64 24
  %1757 = bitcast i8* %1756 to i32*
  store i32 71, i32* %1757, align 8
  store i8* %1752, i8** %103, align 8
  br label %3523

1758:                                             ; preds = %410
  %1759 = load i32, i32* %151, align 4
  %1760 = icmp eq i32 %1759, 37305
  br i1 %1760, label %1762, label %1761

1761:                                             ; preds = %1758
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0)) #8
  br label %1762

1762:                                             ; preds = %1758, %1761
  %1763 = call %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext27parseGlobalStorageQualifierENS_10TQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i32 59, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  %1764 = getelementptr inbounds %"class.sh::TStorageQualifierWrapper", %"class.sh::TStorageQualifierWrapper"* %1763, i64 0, i32 0
  store %"class.sh::TQualifierWrapperBase"* %1764, %"class.sh::TQualifierWrapperBase"** %152, align 8
  br label %3523

1765:                                             ; preds = %410
  %1766 = load i32, i32* %123, align 8
  %1767 = icmp slt i32 %1766, 300
  br i1 %1767, label %1768, label %1769

1768:                                             ; preds = %1765
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i64 0, i64 0)) #8
  br label %1769

1769:                                             ; preds = %1768, %1765
  %1770 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1771 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1770, i64 32) #8
  %1772 = bitcast i8* %1771 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1772, align 8
  %1773 = getelementptr inbounds i8, i8* %1771, i64 8
  %1774 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1773, i8* align 4 %1774, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh24TStorageQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1772, align 8
  %1775 = getelementptr inbounds i8, i8* %1771, i64 24
  %1776 = bitcast i8* %1775 to i32*
  store i32 43, i32* %1776, align 8
  store i8* %1771, i8** %103, align 8
  br label %3523

1777:                                             ; preds = %410
  %1778 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2, i32 0
  %1779 = bitcast %"struct.sh::TPublicType"* %1778 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %1779, i64 160, i1 false)
  %1780 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  %1781 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1778, i64 0, i32 0, i32 0
  %1782 = load i32, i32* %1781, align 8
  %1783 = call i32 @_ZNK2sh12TSymbolTable19getDefaultPrecisionENS_10TBasicTypeE(%"class.sh::TSymbolTable"* %1780, i32 %1782) #8
  store i32 %1783, i32* %150, align 4
  br label %3523

1784:                                             ; preds = %410
  store i32 3, i32* %115, align 8
  br label %3523

1785:                                             ; preds = %410
  store i32 2, i32* %115, align 8
  br label %3523

1786:                                             ; preds = %410
  store i32 1, i32* %115, align 8
  br label %3523

1787:                                             ; preds = %410
  %1788 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -3
  call void @_ZN2sh13TParseContext26checkCanUseLayoutQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1788) #8
  %1789 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %1790 = bitcast %union.anon.83* %1789 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 4 %1790, i64 89, i1 false)
  br label %3523

1791:                                             ; preds = %410
  %1792 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1793 = bitcast %union.anon.83* %1792 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 4 %1793, i64 89, i1 false)
  br label %3523

1794:                                             ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %147) #8
  %1795 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 2
  %1796 = bitcast %union.anon.83* %1795 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %148, i8* align 8 %1796, i64 92, i1 false)
  %1797 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1798 = bitcast %union.anon.83* %1797 to %"struct.sh::TLayoutQualifier"*
  call void @_ZN2sh13TParseContext20joinLayoutQualifiersENS_16TLayoutQualifierES1_RKNS_10TSourceLocE(%"struct.sh::TLayoutQualifier"* nonnull sret %40, %"class.sh::TParseContext"* %0, %"struct.sh::TLayoutQualifier"* nonnull byval(%"struct.sh::TLayoutQualifier") align 8 %41, %"struct.sh::TLayoutQualifier"* nonnull byval(%"struct.sh::TLayoutQualifier") align 8 %1798, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* nonnull align 4 %147, i64 89, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %147) #8
  br label %3523

1799:                                             ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %143) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #8
  %1800 = bitcast %union.YYSTYPE* %326 to i8**
  %1801 = load i8*, i8** %1800, align 8
  store i8* %1801, i8** %145, align 8
  %1802 = icmp eq i8* %1801, null
  br i1 %1802, label %1809, label %1803

1803:                                             ; preds = %1799, %1803
  %1804 = phi i64 [ %1808, %1803 ], [ 0, %1799 ]
  %1805 = getelementptr inbounds i8, i8* %1801, i64 %1804
  %1806 = load i8, i8* %1805, align 1
  %1807 = icmp eq i8 %1806, 0
  %1808 = add i64 %1804, 1
  br i1 %1807, label %1809, label %1803

1809:                                             ; preds = %1803, %1799
  %1810 = phi i64 [ 0, %1799 ], [ %1804, %1803 ]
  store i64 %1810, i64* %146, align 8
  call void @_ZN2sh13TParseContext20parseLayoutQualifierERKNS_15ImmutableStringERKNS_10TSourceLocE(%"struct.sh::TLayoutQualifier"* nonnull sret %42, %"class.sh::TParseContext"* %0, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %43, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* nonnull align 4 %143, i64 89, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #8
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %143) #8
  br label %3523

1811:                                             ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %139) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %140) #8
  %1812 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2
  %1813 = bitcast %union.YYSTYPE* %1812 to i8**
  %1814 = load i8*, i8** %1813, align 8
  store i8* %1814, i8** %141, align 8
  %1815 = icmp eq i8* %1814, null
  br i1 %1815, label %1822, label %1816

1816:                                             ; preds = %1811, %1816
  %1817 = phi i64 [ %1821, %1816 ], [ 0, %1811 ]
  %1818 = getelementptr inbounds i8, i8* %1814, i64 %1817
  %1819 = load i8, i8* %1818, align 1
  %1820 = icmp eq i8 %1819, 0
  %1821 = add i64 %1817, 1
  br i1 %1820, label %1822, label %1816

1822:                                             ; preds = %1816, %1811
  %1823 = phi i64 [ 0, %1811 ], [ %1817, %1816 ]
  store i64 %1823, i64* %142, align 8
  %1824 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  %1825 = bitcast %union.YYSTYPE* %326 to i32*
  %1826 = load i32, i32* %1825, align 8
  call void @_ZN2sh13TParseContext20parseLayoutQualifierERKNS_15ImmutableStringERKNS_10TSourceLocEiS6_(%"struct.sh::TLayoutQualifier"* nonnull sret %44, %"class.sh::TParseContext"* %0, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %45, %"struct.sh::TSourceLoc"* dereferenceable(16) %1824, i32 %1826, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* nonnull align 4 %139, i64 89, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %140) #8
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %139) #8
  br label %3523

1827:                                             ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %135) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %136) #8
  %1828 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2
  %1829 = bitcast %union.YYSTYPE* %1828 to i8**
  %1830 = load i8*, i8** %1829, align 8
  store i8* %1830, i8** %137, align 8
  %1831 = icmp eq i8* %1830, null
  br i1 %1831, label %1838, label %1832

1832:                                             ; preds = %1827, %1832
  %1833 = phi i64 [ %1837, %1832 ], [ 0, %1827 ]
  %1834 = getelementptr inbounds i8, i8* %1830, i64 %1833
  %1835 = load i8, i8* %1834, align 1
  %1836 = icmp eq i8 %1835, 0
  %1837 = add i64 %1833, 1
  br i1 %1836, label %1838, label %1832

1838:                                             ; preds = %1832, %1827
  %1839 = phi i64 [ 0, %1827 ], [ %1833, %1832 ]
  store i64 %1839, i64* %138, align 8
  %1840 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  %1841 = bitcast %union.YYSTYPE* %326 to i32*
  %1842 = load i32, i32* %1841, align 8
  call void @_ZN2sh13TParseContext20parseLayoutQualifierERKNS_15ImmutableStringERKNS_10TSourceLocEiS6_(%"struct.sh::TLayoutQualifier"* nonnull sret %46, %"class.sh::TParseContext"* %0, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %47, %"struct.sh::TSourceLoc"* dereferenceable(16) %1840, i32 %1842, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* nonnull align 4 %135, i64 89, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136) #8
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %135) #8
  br label %3523

1843:                                             ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %130) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131) #8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0), i8** %132, align 8
  store i64 6, i64* %133, align 8
  call void @_ZN2sh13TParseContext20parseLayoutQualifierERKNS_15ImmutableStringERKNS_10TSourceLocE(%"struct.sh::TLayoutQualifier"* nonnull sret %48, %"class.sh::TParseContext"* %0, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %49, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* nonnull align 4 %130, i64 89, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #8
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %130) #8
  br label %3523

1844:                                             ; preds = %410
  %1845 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2, i32 0, i32 0
  %1846 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  %1847 = call zeroext i1 @_ZNK2sh12TSymbolTable13atGlobalLevelEv(%"class.sh::TSymbolTable"* %1846) #8
  %1848 = zext i1 %1847 to i32
  call void @_ZN2sh11TPublicType10initializeERKNS_22TTypeSpecifierNonArrayENS_10TQualifierE(%"struct.sh::TPublicType"* %129, %"struct.sh::TTypeSpecifierNonArray"* dereferenceable(40) %1845, i32 %1848) #8
  br label %3523

1849:                                             ; preds = %410
  %1850 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2, i32 0, i32 0
  %1851 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  %1852 = call zeroext i1 @_ZNK2sh12TSymbolTable13atGlobalLevelEv(%"class.sh::TSymbolTable"* %1851) #8
  %1853 = zext i1 %1852 to i32
  call void @_ZN2sh11TPublicType10initializeERKNS_22TTypeSpecifierNonArrayENS_10TQualifierE(%"struct.sh::TPublicType"* %129, %"struct.sh::TTypeSpecifierNonArray"* dereferenceable(40) %1850, i32 %1853) #8
  %1854 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %1855 = bitcast %union.anon.83* %1854 to %"class.sh::TVector"**
  %1856 = load %"class.sh::TVector"*, %"class.sh::TVector"** %1855, align 8
  call void @_ZN2sh11TPublicType13setArraySizesEPNS_7TVectorIjEE(%"struct.sh::TPublicType"* %129, %"class.sh::TVector"* %1856) #8
  br label %3523

1857:                                             ; preds = %410
  %1858 = load i32, i32* %123, align 8
  %1859 = icmp slt i32 %1858, 300
  br i1 %1859, label %1860, label %1862

1860:                                             ; preds = %1857
  %1861 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1861, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %1862

1862:                                             ; preds = %1860, %1857
  %1863 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1864 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1863, i64 24) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1864, i8 0, i64 24, i1 false) #8
  store i8* %1864, i8** %103, align 8
  %1865 = getelementptr inbounds i8, i8* %1864, i64 8
  %1866 = bitcast i8* %1865 to i32**
  %1867 = load i32*, i32** %1866, align 8
  %1868 = getelementptr inbounds i8, i8* %1864, i64 16
  %1869 = bitcast i8* %1868 to i32**
  %1870 = load i32*, i32** %1869, align 8
  %1871 = icmp ult i32* %1867, %1870
  %1872 = ptrtoint i32* %1870 to i64
  br i1 %1871, label %1873, label %1877

1873:                                             ; preds = %1862
  store i32 0, i32* %1867, align 4
  %1874 = getelementptr inbounds i32, i32* %1867, i64 1
  %1875 = ptrtoint i32* %1874 to i64
  %1876 = bitcast i8* %1865 to i64*
  store i64 %1875, i64* %1876, align 8
  br label %3523

1877:                                             ; preds = %1862
  %1878 = ptrtoint i32* %1867 to i64
  %1879 = bitcast i8* %1865 to i64*
  %1880 = bitcast i8* %1864 to i64*
  %1881 = load i64, i64* %1880, align 8
  %1882 = sub i64 %1878, %1881
  %1883 = ashr exact i64 %1882, 2
  %1884 = add nsw i64 %1883, 1
  %1885 = icmp ugt i64 %1884, 4611686018427387903
  br i1 %1885, label %1886, label %1888

1886:                                             ; preds = %1877
  %1887 = bitcast i8* %1864 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1887) #10
  unreachable

1888:                                             ; preds = %1877
  %1889 = bitcast i8* %1868 to i64*
  %1890 = sub i64 %1872, %1881
  %1891 = ashr exact i64 %1890, 2
  %1892 = icmp ult i64 %1891, 2305843009213693951
  br i1 %1892, label %1893, label %1898

1893:                                             ; preds = %1888
  %1894 = ashr exact i64 %1890, 1
  %1895 = icmp ult i64 %1894, %1884
  %1896 = select i1 %1895, i64 %1884, i64 %1894
  %1897 = icmp eq i64 %1896, 0
  br i1 %1897, label %1904, label %1898

1898:                                             ; preds = %1893, %1888
  %1899 = phi i64 [ %1896, %1893 ], [ 4611686018427387903, %1888 ]
  %1900 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1901 = shl i64 %1899, 2
  %1902 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1900, i64 %1901) #8
  %1903 = bitcast i8* %1902 to i32*
  br label %1904

1904:                                             ; preds = %1898, %1893
  %1905 = phi i64 [ %1899, %1898 ], [ 0, %1893 ]
  %1906 = phi i32* [ %1903, %1898 ], [ null, %1893 ]
  %1907 = getelementptr inbounds i32, i32* %1906, i64 %1883
  %1908 = getelementptr inbounds i32, i32* %1906, i64 %1905
  %1909 = ptrtoint i32* %1908 to i64
  store i32 0, i32* %1907, align 4
  %1910 = getelementptr inbounds i32, i32* %1907, i64 1
  %1911 = ptrtoint i32* %1910 to i64
  %1912 = bitcast i8* %1864 to i32**
  %1913 = load i32*, i32** %1912, align 8
  %1914 = ptrtoint i32* %1913 to i64
  %1915 = load i32*, i32** %1866, align 8
  %1916 = icmp eq i32* %1915, %1913
  br i1 %1916, label %2069, label %1917

1917:                                             ; preds = %1904
  %1918 = getelementptr i32, i32* %1915, i64 -1
  %1919 = ptrtoint i32* %1918 to i64
  %1920 = sub i64 %1919, %1914
  %1921 = lshr i64 %1920, 2
  %1922 = add nuw nsw i64 %1921, 1
  %1923 = icmp ult i64 %1922, 8
  br i1 %1923, label %2017, label %1924

1924:                                             ; preds = %1917
  %1925 = getelementptr i32, i32* %1906, i64 -1
  %1926 = getelementptr i32, i32* %1915, i64 -1
  %1927 = ptrtoint i32* %1926 to i64
  %1928 = sub i64 %1927, %1914
  %1929 = lshr i64 %1928, 2
  %1930 = sub nsw i64 %1883, %1929
  %1931 = getelementptr i32, i32* %1925, i64 %1930
  %1932 = getelementptr i32, i32* %1915, i64 -1
  %1933 = sub nsw i64 0, %1929
  %1934 = getelementptr i32, i32* %1932, i64 %1933
  %1935 = icmp ult i32* %1931, %1915
  %1936 = icmp ult i32* %1934, %1907
  %1937 = and i1 %1935, %1936
  br i1 %1937, label %2017, label %1938

1938:                                             ; preds = %1924
  %1939 = and i64 %1922, 9223372036854775800
  %1940 = sub nsw i64 0, %1939
  %1941 = getelementptr i32, i32* %1907, i64 %1940
  %1942 = sub nsw i64 0, %1939
  %1943 = getelementptr i32, i32* %1915, i64 %1942
  %1944 = add nsw i64 %1939, -8
  %1945 = lshr exact i64 %1944, 3
  %1946 = add nuw nsw i64 %1945, 1
  %1947 = and i64 %1946, 1
  %1948 = icmp eq i64 %1944, 0
  br i1 %1948, label %1993, label %1949

1949:                                             ; preds = %1938
  %1950 = sub nuw nsw i64 %1946, %1947
  %1951 = getelementptr i32, i32* %1907, i64 -1
  %1952 = getelementptr i32, i32* %1915, i64 -1
  %1953 = getelementptr i32, i32* %1907, i64 -1
  %1954 = getelementptr i32, i32* %1915, i64 -1
  br label %1955

1955:                                             ; preds = %1955, %1949
  %1956 = phi i64 [ 0, %1949 ], [ %1990, %1955 ]
  %1957 = phi i64 [ %1950, %1949 ], [ %1991, %1955 ]
  %1958 = sub i64 0, %1956
  %1959 = sub i64 0, %1956
  %1960 = getelementptr inbounds i32, i32* %1951, i64 %1958
  %1961 = getelementptr inbounds i32, i32* %1952, i64 %1959
  %1962 = getelementptr inbounds i32, i32* %1961, i64 -3
  %1963 = bitcast i32* %1962 to <4 x i32>*
  %1964 = load <4 x i32>, <4 x i32>* %1963, align 4, !alias.scope !3
  %1965 = getelementptr inbounds i32, i32* %1961, i64 -4
  %1966 = getelementptr inbounds i32, i32* %1965, i64 -3
  %1967 = bitcast i32* %1966 to <4 x i32>*
  %1968 = load <4 x i32>, <4 x i32>* %1967, align 4, !alias.scope !3
  %1969 = getelementptr inbounds i32, i32* %1960, i64 -3
  %1970 = bitcast i32* %1969 to <4 x i32>*
  store <4 x i32> %1964, <4 x i32>* %1970, align 4, !alias.scope !6, !noalias !3
  %1971 = getelementptr inbounds i32, i32* %1960, i64 -4
  %1972 = getelementptr inbounds i32, i32* %1971, i64 -3
  %1973 = bitcast i32* %1972 to <4 x i32>*
  store <4 x i32> %1968, <4 x i32>* %1973, align 4, !alias.scope !6, !noalias !3
  %1974 = sub nuw nsw i64 -8, %1956
  %1975 = sub nuw nsw i64 -8, %1956
  %1976 = getelementptr inbounds i32, i32* %1953, i64 %1974
  %1977 = getelementptr inbounds i32, i32* %1954, i64 %1975
  %1978 = getelementptr inbounds i32, i32* %1977, i64 -3
  %1979 = bitcast i32* %1978 to <4 x i32>*
  %1980 = load <4 x i32>, <4 x i32>* %1979, align 4, !alias.scope !3
  %1981 = getelementptr inbounds i32, i32* %1977, i64 -4
  %1982 = getelementptr inbounds i32, i32* %1981, i64 -3
  %1983 = bitcast i32* %1982 to <4 x i32>*
  %1984 = load <4 x i32>, <4 x i32>* %1983, align 4, !alias.scope !3
  %1985 = getelementptr inbounds i32, i32* %1976, i64 -3
  %1986 = bitcast i32* %1985 to <4 x i32>*
  store <4 x i32> %1980, <4 x i32>* %1986, align 4, !alias.scope !6, !noalias !3
  %1987 = getelementptr inbounds i32, i32* %1976, i64 -4
  %1988 = getelementptr inbounds i32, i32* %1987, i64 -3
  %1989 = bitcast i32* %1988 to <4 x i32>*
  store <4 x i32> %1984, <4 x i32>* %1989, align 4, !alias.scope !6, !noalias !3
  %1990 = add i64 %1956, 16
  %1991 = add i64 %1957, -2
  %1992 = icmp eq i64 %1991, 0
  br i1 %1992, label %1993, label %1955, !llvm.loop !8

1993:                                             ; preds = %1955, %1938
  %1994 = phi i64 [ 0, %1938 ], [ %1990, %1955 ]
  %1995 = icmp eq i64 %1947, 0
  br i1 %1995, label %2015, label %1996

1996:                                             ; preds = %1993
  %1997 = sub i64 0, %1994
  %1998 = getelementptr i32, i32* %1907, i64 -1
  %1999 = sub i64 0, %1994
  %2000 = getelementptr i32, i32* %1915, i64 -1
  %2001 = getelementptr inbounds i32, i32* %1998, i64 %1997
  %2002 = getelementptr inbounds i32, i32* %2000, i64 %1999
  %2003 = getelementptr inbounds i32, i32* %2002, i64 -3
  %2004 = bitcast i32* %2003 to <4 x i32>*
  %2005 = load <4 x i32>, <4 x i32>* %2004, align 4, !alias.scope !3
  %2006 = getelementptr inbounds i32, i32* %2002, i64 -4
  %2007 = getelementptr inbounds i32, i32* %2006, i64 -3
  %2008 = bitcast i32* %2007 to <4 x i32>*
  %2009 = load <4 x i32>, <4 x i32>* %2008, align 4, !alias.scope !3
  %2010 = getelementptr inbounds i32, i32* %2001, i64 -3
  %2011 = bitcast i32* %2010 to <4 x i32>*
  store <4 x i32> %2005, <4 x i32>* %2011, align 4, !alias.scope !6, !noalias !3
  %2012 = getelementptr inbounds i32, i32* %2001, i64 -4
  %2013 = getelementptr inbounds i32, i32* %2012, i64 -3
  %2014 = bitcast i32* %2013 to <4 x i32>*
  store <4 x i32> %2009, <4 x i32>* %2014, align 4, !alias.scope !6, !noalias !3
  br label %2015

2015:                                             ; preds = %1993, %1996
  %2016 = icmp eq i64 %1922, %1939
  br i1 %2016, label %2069, label %2017

2017:                                             ; preds = %2015, %1924, %1917
  %2018 = phi i32* [ %1907, %1924 ], [ %1907, %1917 ], [ %1941, %2015 ]
  %2019 = phi i32* [ %1915, %1924 ], [ %1915, %1917 ], [ %1943, %2015 ]
  %2020 = getelementptr i32, i32* %2019, i64 -1
  %2021 = ptrtoint i32* %2020 to i64
  %2022 = sub i64 %2021, %1914
  %2023 = lshr i64 %2022, 2
  %2024 = add nuw nsw i64 %2023, 1
  %2025 = and i64 %2024, 7
  %2026 = icmp eq i64 %2025, 0
  br i1 %2026, label %2036, label %2027

2027:                                             ; preds = %2017, %2027
  %2028 = phi i32* [ %2031, %2027 ], [ %2018, %2017 ]
  %2029 = phi i32* [ %2032, %2027 ], [ %2019, %2017 ]
  %2030 = phi i64 [ %2034, %2027 ], [ %2025, %2017 ]
  %2031 = getelementptr inbounds i32, i32* %2028, i64 -1
  %2032 = getelementptr inbounds i32, i32* %2029, i64 -1
  %2033 = load i32, i32* %2032, align 4
  store i32 %2033, i32* %2031, align 4
  %2034 = add i64 %2030, -1
  %2035 = icmp eq i64 %2034, 0
  br i1 %2035, label %2036, label %2027, !llvm.loop !10

2036:                                             ; preds = %2027, %2017
  %2037 = phi i32* [ undef, %2017 ], [ %2031, %2027 ]
  %2038 = phi i32* [ %2018, %2017 ], [ %2031, %2027 ]
  %2039 = phi i32* [ %2019, %2017 ], [ %2032, %2027 ]
  %2040 = icmp ult i64 %2022, 28
  br i1 %2040, label %2069, label %2041

2041:                                             ; preds = %2036, %2041
  %2042 = phi i32* [ %2065, %2041 ], [ %2038, %2036 ]
  %2043 = phi i32* [ %2066, %2041 ], [ %2039, %2036 ]
  %2044 = getelementptr inbounds i32, i32* %2042, i64 -1
  %2045 = getelementptr inbounds i32, i32* %2043, i64 -1
  %2046 = load i32, i32* %2045, align 4
  store i32 %2046, i32* %2044, align 4
  %2047 = getelementptr inbounds i32, i32* %2042, i64 -2
  %2048 = getelementptr inbounds i32, i32* %2043, i64 -2
  %2049 = load i32, i32* %2048, align 4
  store i32 %2049, i32* %2047, align 4
  %2050 = getelementptr inbounds i32, i32* %2042, i64 -3
  %2051 = getelementptr inbounds i32, i32* %2043, i64 -3
  %2052 = load i32, i32* %2051, align 4
  store i32 %2052, i32* %2050, align 4
  %2053 = getelementptr inbounds i32, i32* %2042, i64 -4
  %2054 = getelementptr inbounds i32, i32* %2043, i64 -4
  %2055 = load i32, i32* %2054, align 4
  store i32 %2055, i32* %2053, align 4
  %2056 = getelementptr inbounds i32, i32* %2042, i64 -5
  %2057 = getelementptr inbounds i32, i32* %2043, i64 -5
  %2058 = load i32, i32* %2057, align 4
  store i32 %2058, i32* %2056, align 4
  %2059 = getelementptr inbounds i32, i32* %2042, i64 -6
  %2060 = getelementptr inbounds i32, i32* %2043, i64 -6
  %2061 = load i32, i32* %2060, align 4
  store i32 %2061, i32* %2059, align 4
  %2062 = getelementptr inbounds i32, i32* %2042, i64 -7
  %2063 = getelementptr inbounds i32, i32* %2043, i64 -7
  %2064 = load i32, i32* %2063, align 4
  store i32 %2064, i32* %2062, align 4
  %2065 = getelementptr inbounds i32, i32* %2042, i64 -8
  %2066 = getelementptr inbounds i32, i32* %2043, i64 -8
  %2067 = load i32, i32* %2066, align 4
  store i32 %2067, i32* %2065, align 4
  %2068 = icmp eq i32* %2066, %1913
  br i1 %2068, label %2069, label %2041, !llvm.loop !12

2069:                                             ; preds = %2036, %2041, %2015, %1904
  %2070 = phi i32* [ %1907, %1904 ], [ %1941, %2015 ], [ %2037, %2036 ], [ %2065, %2041 ]
  %2071 = ptrtoint i32* %2070 to i64
  store i64 %2071, i64* %1880, align 8
  store i64 %1911, i64* %1879, align 8
  store i64 %1909, i64* %1889, align 8
  br label %3523

2072:                                             ; preds = %410
  %2073 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2074 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2073, i64 24) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %2074, i8 0, i64 24, i1 false) #8
  store i8* %2074, i8** %103, align 8
  %2075 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  %2076 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 1
  %2077 = bitcast %union.anon.81* %2076 to %"class.sh::TIntermTyped"**
  %2078 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %2077, align 8
  %2079 = call i32 @_ZN2sh13TParseContext21checkIsValidArraySizeERKNS_10TSourceLocEPNS_12TIntermTypedE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2075, %"class.sh::TIntermTyped"* %2078) #8
  %2080 = load %"class.std::__1::vector.17"*, %"class.std::__1::vector.17"** %126, align 8
  %2081 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %2080, i64 0, i32 0, i32 1
  %2082 = load i32*, i32** %2081, align 8
  %2083 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %2080, i64 0, i32 0, i32 2, i32 0, i32 0
  %2084 = load i32*, i32** %2083, align 8
  %2085 = icmp eq i32* %2082, %2084
  %2086 = ptrtoint i32* %2084 to i64
  br i1 %2085, label %2091, label %2087

2087:                                             ; preds = %2072
  store i32 %2079, i32* %2082, align 4
  %2088 = getelementptr inbounds i32, i32* %2082, i64 1
  %2089 = ptrtoint i32* %2088 to i64
  %2090 = bitcast i32** %2081 to i64*
  store i64 %2089, i64* %2090, align 8
  br label %3523

2091:                                             ; preds = %2072
  %2092 = ptrtoint i32* %2082 to i64
  %2093 = bitcast i32** %2081 to i64*
  %2094 = bitcast %"class.std::__1::vector.17"* %2080 to i64*
  %2095 = load i64, i64* %2094, align 8
  %2096 = sub i64 %2092, %2095
  %2097 = ashr exact i64 %2096, 2
  %2098 = add nsw i64 %2097, 1
  %2099 = icmp ugt i64 %2098, 4611686018427387903
  br i1 %2099, label %2100, label %2102

2100:                                             ; preds = %2091
  %2101 = bitcast %"class.std::__1::vector.17"* %2080 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2101) #10
  unreachable

2102:                                             ; preds = %2091
  %2103 = bitcast i32** %2083 to i64*
  %2104 = sub i64 %2086, %2095
  %2105 = ashr exact i64 %2104, 2
  %2106 = icmp ult i64 %2105, 2305843009213693951
  br i1 %2106, label %2107, label %2112

2107:                                             ; preds = %2102
  %2108 = ashr exact i64 %2104, 1
  %2109 = icmp ult i64 %2108, %2098
  %2110 = select i1 %2109, i64 %2098, i64 %2108
  %2111 = icmp eq i64 %2110, 0
  br i1 %2111, label %2118, label %2112

2112:                                             ; preds = %2107, %2102
  %2113 = phi i64 [ %2110, %2107 ], [ 4611686018427387903, %2102 ]
  %2114 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2115 = shl i64 %2113, 2
  %2116 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2114, i64 %2115) #8
  %2117 = bitcast i8* %2116 to i32*
  br label %2118

2118:                                             ; preds = %2112, %2107
  %2119 = phi i64 [ %2113, %2112 ], [ 0, %2107 ]
  %2120 = phi i32* [ %2117, %2112 ], [ null, %2107 ]
  %2121 = getelementptr inbounds i32, i32* %2120, i64 %2097
  %2122 = getelementptr inbounds i32, i32* %2120, i64 %2119
  %2123 = ptrtoint i32* %2122 to i64
  store i32 %2079, i32* %2121, align 4
  %2124 = getelementptr inbounds i32, i32* %2121, i64 1
  %2125 = ptrtoint i32* %2124 to i64
  %2126 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %2080, i64 0, i32 0, i32 0
  %2127 = load i32*, i32** %2126, align 8
  %2128 = ptrtoint i32* %2127 to i64
  %2129 = load i32*, i32** %2081, align 8
  %2130 = icmp eq i32* %2129, %2127
  br i1 %2130, label %2283, label %2131

2131:                                             ; preds = %2118
  %2132 = getelementptr i32, i32* %2129, i64 -1
  %2133 = ptrtoint i32* %2132 to i64
  %2134 = sub i64 %2133, %2128
  %2135 = lshr i64 %2134, 2
  %2136 = add nuw nsw i64 %2135, 1
  %2137 = icmp ult i64 %2136, 8
  br i1 %2137, label %2231, label %2138

2138:                                             ; preds = %2131
  %2139 = getelementptr i32, i32* %2120, i64 -1
  %2140 = getelementptr i32, i32* %2129, i64 -1
  %2141 = ptrtoint i32* %2140 to i64
  %2142 = sub i64 %2141, %2128
  %2143 = lshr i64 %2142, 2
  %2144 = sub nsw i64 %2097, %2143
  %2145 = getelementptr i32, i32* %2139, i64 %2144
  %2146 = getelementptr i32, i32* %2129, i64 -1
  %2147 = sub nsw i64 0, %2143
  %2148 = getelementptr i32, i32* %2146, i64 %2147
  %2149 = icmp ult i32* %2145, %2129
  %2150 = icmp ult i32* %2148, %2121
  %2151 = and i1 %2149, %2150
  br i1 %2151, label %2231, label %2152

2152:                                             ; preds = %2138
  %2153 = and i64 %2136, 9223372036854775800
  %2154 = sub nsw i64 0, %2153
  %2155 = getelementptr i32, i32* %2121, i64 %2154
  %2156 = sub nsw i64 0, %2153
  %2157 = getelementptr i32, i32* %2129, i64 %2156
  %2158 = add nsw i64 %2153, -8
  %2159 = lshr exact i64 %2158, 3
  %2160 = add nuw nsw i64 %2159, 1
  %2161 = and i64 %2160, 1
  %2162 = icmp eq i64 %2158, 0
  br i1 %2162, label %2207, label %2163

2163:                                             ; preds = %2152
  %2164 = sub nuw nsw i64 %2160, %2161
  %2165 = getelementptr i32, i32* %2121, i64 -1
  %2166 = getelementptr i32, i32* %2129, i64 -1
  %2167 = getelementptr i32, i32* %2121, i64 -1
  %2168 = getelementptr i32, i32* %2129, i64 -1
  br label %2169

2169:                                             ; preds = %2169, %2163
  %2170 = phi i64 [ 0, %2163 ], [ %2204, %2169 ]
  %2171 = phi i64 [ %2164, %2163 ], [ %2205, %2169 ]
  %2172 = sub i64 0, %2170
  %2173 = sub i64 0, %2170
  %2174 = getelementptr inbounds i32, i32* %2165, i64 %2172
  %2175 = getelementptr inbounds i32, i32* %2166, i64 %2173
  %2176 = getelementptr inbounds i32, i32* %2175, i64 -3
  %2177 = bitcast i32* %2176 to <4 x i32>*
  %2178 = load <4 x i32>, <4 x i32>* %2177, align 4, !alias.scope !13
  %2179 = getelementptr inbounds i32, i32* %2175, i64 -4
  %2180 = getelementptr inbounds i32, i32* %2179, i64 -3
  %2181 = bitcast i32* %2180 to <4 x i32>*
  %2182 = load <4 x i32>, <4 x i32>* %2181, align 4, !alias.scope !13
  %2183 = getelementptr inbounds i32, i32* %2174, i64 -3
  %2184 = bitcast i32* %2183 to <4 x i32>*
  store <4 x i32> %2178, <4 x i32>* %2184, align 4, !alias.scope !16, !noalias !13
  %2185 = getelementptr inbounds i32, i32* %2174, i64 -4
  %2186 = getelementptr inbounds i32, i32* %2185, i64 -3
  %2187 = bitcast i32* %2186 to <4 x i32>*
  store <4 x i32> %2182, <4 x i32>* %2187, align 4, !alias.scope !16, !noalias !13
  %2188 = sub nuw nsw i64 -8, %2170
  %2189 = sub nuw nsw i64 -8, %2170
  %2190 = getelementptr inbounds i32, i32* %2167, i64 %2188
  %2191 = getelementptr inbounds i32, i32* %2168, i64 %2189
  %2192 = getelementptr inbounds i32, i32* %2191, i64 -3
  %2193 = bitcast i32* %2192 to <4 x i32>*
  %2194 = load <4 x i32>, <4 x i32>* %2193, align 4, !alias.scope !13
  %2195 = getelementptr inbounds i32, i32* %2191, i64 -4
  %2196 = getelementptr inbounds i32, i32* %2195, i64 -3
  %2197 = bitcast i32* %2196 to <4 x i32>*
  %2198 = load <4 x i32>, <4 x i32>* %2197, align 4, !alias.scope !13
  %2199 = getelementptr inbounds i32, i32* %2190, i64 -3
  %2200 = bitcast i32* %2199 to <4 x i32>*
  store <4 x i32> %2194, <4 x i32>* %2200, align 4, !alias.scope !16, !noalias !13
  %2201 = getelementptr inbounds i32, i32* %2190, i64 -4
  %2202 = getelementptr inbounds i32, i32* %2201, i64 -3
  %2203 = bitcast i32* %2202 to <4 x i32>*
  store <4 x i32> %2198, <4 x i32>* %2203, align 4, !alias.scope !16, !noalias !13
  %2204 = add i64 %2170, 16
  %2205 = add i64 %2171, -2
  %2206 = icmp eq i64 %2205, 0
  br i1 %2206, label %2207, label %2169, !llvm.loop !18

2207:                                             ; preds = %2169, %2152
  %2208 = phi i64 [ 0, %2152 ], [ %2204, %2169 ]
  %2209 = icmp eq i64 %2161, 0
  br i1 %2209, label %2229, label %2210

2210:                                             ; preds = %2207
  %2211 = sub i64 0, %2208
  %2212 = getelementptr i32, i32* %2121, i64 -1
  %2213 = sub i64 0, %2208
  %2214 = getelementptr i32, i32* %2129, i64 -1
  %2215 = getelementptr inbounds i32, i32* %2212, i64 %2211
  %2216 = getelementptr inbounds i32, i32* %2214, i64 %2213
  %2217 = getelementptr inbounds i32, i32* %2216, i64 -3
  %2218 = bitcast i32* %2217 to <4 x i32>*
  %2219 = load <4 x i32>, <4 x i32>* %2218, align 4, !alias.scope !13
  %2220 = getelementptr inbounds i32, i32* %2216, i64 -4
  %2221 = getelementptr inbounds i32, i32* %2220, i64 -3
  %2222 = bitcast i32* %2221 to <4 x i32>*
  %2223 = load <4 x i32>, <4 x i32>* %2222, align 4, !alias.scope !13
  %2224 = getelementptr inbounds i32, i32* %2215, i64 -3
  %2225 = bitcast i32* %2224 to <4 x i32>*
  store <4 x i32> %2219, <4 x i32>* %2225, align 4, !alias.scope !16, !noalias !13
  %2226 = getelementptr inbounds i32, i32* %2215, i64 -4
  %2227 = getelementptr inbounds i32, i32* %2226, i64 -3
  %2228 = bitcast i32* %2227 to <4 x i32>*
  store <4 x i32> %2223, <4 x i32>* %2228, align 4, !alias.scope !16, !noalias !13
  br label %2229

2229:                                             ; preds = %2207, %2210
  %2230 = icmp eq i64 %2136, %2153
  br i1 %2230, label %2283, label %2231

2231:                                             ; preds = %2229, %2138, %2131
  %2232 = phi i32* [ %2121, %2138 ], [ %2121, %2131 ], [ %2155, %2229 ]
  %2233 = phi i32* [ %2129, %2138 ], [ %2129, %2131 ], [ %2157, %2229 ]
  %2234 = getelementptr i32, i32* %2233, i64 -1
  %2235 = ptrtoint i32* %2234 to i64
  %2236 = sub i64 %2235, %2128
  %2237 = lshr i64 %2236, 2
  %2238 = add nuw nsw i64 %2237, 1
  %2239 = and i64 %2238, 7
  %2240 = icmp eq i64 %2239, 0
  br i1 %2240, label %2250, label %2241

2241:                                             ; preds = %2231, %2241
  %2242 = phi i32* [ %2245, %2241 ], [ %2232, %2231 ]
  %2243 = phi i32* [ %2246, %2241 ], [ %2233, %2231 ]
  %2244 = phi i64 [ %2248, %2241 ], [ %2239, %2231 ]
  %2245 = getelementptr inbounds i32, i32* %2242, i64 -1
  %2246 = getelementptr inbounds i32, i32* %2243, i64 -1
  %2247 = load i32, i32* %2246, align 4
  store i32 %2247, i32* %2245, align 4
  %2248 = add i64 %2244, -1
  %2249 = icmp eq i64 %2248, 0
  br i1 %2249, label %2250, label %2241, !llvm.loop !19

2250:                                             ; preds = %2241, %2231
  %2251 = phi i32* [ undef, %2231 ], [ %2245, %2241 ]
  %2252 = phi i32* [ %2232, %2231 ], [ %2245, %2241 ]
  %2253 = phi i32* [ %2233, %2231 ], [ %2246, %2241 ]
  %2254 = icmp ult i64 %2236, 28
  br i1 %2254, label %2283, label %2255

2255:                                             ; preds = %2250, %2255
  %2256 = phi i32* [ %2279, %2255 ], [ %2252, %2250 ]
  %2257 = phi i32* [ %2280, %2255 ], [ %2253, %2250 ]
  %2258 = getelementptr inbounds i32, i32* %2256, i64 -1
  %2259 = getelementptr inbounds i32, i32* %2257, i64 -1
  %2260 = load i32, i32* %2259, align 4
  store i32 %2260, i32* %2258, align 4
  %2261 = getelementptr inbounds i32, i32* %2256, i64 -2
  %2262 = getelementptr inbounds i32, i32* %2257, i64 -2
  %2263 = load i32, i32* %2262, align 4
  store i32 %2263, i32* %2261, align 4
  %2264 = getelementptr inbounds i32, i32* %2256, i64 -3
  %2265 = getelementptr inbounds i32, i32* %2257, i64 -3
  %2266 = load i32, i32* %2265, align 4
  store i32 %2266, i32* %2264, align 4
  %2267 = getelementptr inbounds i32, i32* %2256, i64 -4
  %2268 = getelementptr inbounds i32, i32* %2257, i64 -4
  %2269 = load i32, i32* %2268, align 4
  store i32 %2269, i32* %2267, align 4
  %2270 = getelementptr inbounds i32, i32* %2256, i64 -5
  %2271 = getelementptr inbounds i32, i32* %2257, i64 -5
  %2272 = load i32, i32* %2271, align 4
  store i32 %2272, i32* %2270, align 4
  %2273 = getelementptr inbounds i32, i32* %2256, i64 -6
  %2274 = getelementptr inbounds i32, i32* %2257, i64 -6
  %2275 = load i32, i32* %2274, align 4
  store i32 %2275, i32* %2273, align 4
  %2276 = getelementptr inbounds i32, i32* %2256, i64 -7
  %2277 = getelementptr inbounds i32, i32* %2257, i64 -7
  %2278 = load i32, i32* %2277, align 4
  store i32 %2278, i32* %2276, align 4
  %2279 = getelementptr inbounds i32, i32* %2256, i64 -8
  %2280 = getelementptr inbounds i32, i32* %2257, i64 -8
  %2281 = load i32, i32* %2280, align 4
  store i32 %2281, i32* %2279, align 4
  %2282 = icmp eq i32* %2280, %2127
  br i1 %2282, label %2283, label %2255, !llvm.loop !20

2283:                                             ; preds = %2250, %2255, %2229, %2118
  %2284 = phi i32* [ %2121, %2118 ], [ %2155, %2229 ], [ %2251, %2250 ], [ %2279, %2255 ]
  %2285 = ptrtoint i32* %2284 to i64
  store i64 %2285, i64* %2094, align 8
  store i64 %2125, i64* %2093, align 8
  store i64 %2123, i64* %2103, align 8
  br label %3523

2286:                                             ; preds = %410
  %2287 = load i32, i32* %123, align 8
  %2288 = icmp slt i32 %2287, 310
  br i1 %2288, label %2289, label %2291

2289:                                             ; preds = %2286
  %2290 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2290, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %2291

2291:                                             ; preds = %2289, %2286
  %2292 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 2
  %2293 = bitcast %union.anon.83* %2292 to %"class.sh::TVector"**
  %2294 = load %"class.sh::TVector"*, %"class.sh::TVector"** %2293, align 8
  store %"class.sh::TVector"* %2294, %"class.sh::TVector"** %127, align 8
  %2295 = getelementptr inbounds %"class.sh::TVector", %"class.sh::TVector"* %2294, i64 0, i32 0
  %2296 = getelementptr inbounds %"class.sh::TVector", %"class.sh::TVector"* %2294, i64 0, i32 0, i32 0, i32 0
  %2297 = load i32*, i32** %2296, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128) #8
  store i32 0, i32* %50, align 4
  %2298 = call i32* @_ZNSt3__16vectorIj14pool_allocatorIjEE6insertENS_11__wrap_iterIPKjEEOj(%"class.std::__1::vector.17"* %2295, i32* %2297, i32* nonnull dereferenceable(4) %50)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128) #8
  br label %3523

2299:                                             ; preds = %410
  %2300 = load i32, i32* %123, align 8
  %2301 = icmp slt i32 %2300, 310
  br i1 %2301, label %2302, label %2304

2302:                                             ; preds = %2299
  %2303 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2303, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %2304

2304:                                             ; preds = %2302, %2299
  %2305 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -3, i32 0, i32 2
  %2306 = bitcast %union.anon.83* %2305 to i64*
  %2307 = load i64, i64* %2306, align 8
  store i64 %2307, i64* %124, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #8
  store i32 -1431655766, i32* %51, align 4
  %2308 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  %2309 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 1
  %2310 = bitcast %union.anon.81* %2309 to %"class.sh::TIntermTyped"**
  %2311 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %2310, align 8
  %2312 = call i32 @_ZN2sh13TParseContext21checkIsValidArraySizeERKNS_10TSourceLocEPNS_12TIntermTypedE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2308, %"class.sh::TIntermTyped"* %2311) #8
  store i32 %2312, i32* %51, align 4
  %2313 = load %"class.std::__1::vector.17"*, %"class.std::__1::vector.17"** %126, align 8
  %2314 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %2313, i64 0, i32 0, i32 0
  %2315 = load i32*, i32** %2314, align 8
  %2316 = call i32* @_ZNSt3__16vectorIj14pool_allocatorIjEE6insertENS_11__wrap_iterIPKjEERS5_(%"class.std::__1::vector.17"* %2313, i32* %2315, i32* nonnull dereferenceable(4) %51)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #8
  br label %3523

2317:                                             ; preds = %410
  store i32 0, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2318 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2318, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2319:                                             ; preds = %410
  store i32 1, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2320 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2320, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2321:                                             ; preds = %410
  store i32 3, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2322 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2322, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2323:                                             ; preds = %410
  store i32 4, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2324 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2324, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2325:                                             ; preds = %410
  store i32 5, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2326 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2326, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2327:                                             ; preds = %410
  store i32 1, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2328 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2328, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 2, i8* %116, align 4
  br label %3523

2329:                                             ; preds = %410
  store i32 1, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2330 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2330, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 3, i8* %116, align 4
  br label %3523

2331:                                             ; preds = %410
  store i32 1, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2332 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2332, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 4, i8* %116, align 4
  br label %3523

2333:                                             ; preds = %410
  store i32 5, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2334 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2334, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 2, i8* %116, align 4
  br label %3523

2335:                                             ; preds = %410
  store i32 5, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2336 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2336, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 3, i8* %116, align 4
  br label %3523

2337:                                             ; preds = %410
  store i32 5, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2338 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2338, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 4, i8* %116, align 4
  br label %3523

2339:                                             ; preds = %410
  store i32 3, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2340 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2340, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 2, i8* %116, align 4
  br label %3523

2341:                                             ; preds = %410
  store i32 3, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2342 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2342, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 3, i8* %116, align 4
  br label %3523

2343:                                             ; preds = %410
  store i32 3, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2344 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2344, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 4, i8* %116, align 4
  br label %3523

2345:                                             ; preds = %410
  store i32 4, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2346 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2346, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 2, i8* %116, align 4
  br label %3523

2347:                                             ; preds = %410
  store i32 4, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2348 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2348, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 3, i8* %116, align 4
  br label %3523

2349:                                             ; preds = %410
  store i32 4, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2350 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2350, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 4, i8* %116, align 4
  br label %3523

2351:                                             ; preds = %410
  store i32 1, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2352 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2352, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 2, i8* %116, align 4
  store i8 2, i8* %117, align 1
  br label %3523

2353:                                             ; preds = %410
  store i32 1, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2354 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2354, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 3, i8* %116, align 4
  store i8 3, i8* %117, align 1
  br label %3523

2355:                                             ; preds = %410
  store i32 1, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2356 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2356, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 4, i8* %116, align 4
  store i8 4, i8* %117, align 1
  br label %3523

2357:                                             ; preds = %410
  store i32 1, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2358 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2358, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 2, i8* %116, align 4
  store i8 3, i8* %117, align 1
  br label %3523

2359:                                             ; preds = %410
  store i32 1, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2360 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2360, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 3, i8* %116, align 4
  store i8 2, i8* %117, align 1
  br label %3523

2361:                                             ; preds = %410
  store i32 1, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2362 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2362, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 2, i8* %116, align 4
  store i8 4, i8* %117, align 1
  br label %3523

2363:                                             ; preds = %410
  store i32 1, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2364 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2364, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 4, i8* %116, align 4
  store i8 2, i8* %117, align 1
  br label %3523

2365:                                             ; preds = %410
  store i32 1, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2366 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2366, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 3, i8* %116, align 4
  store i8 4, i8* %117, align 1
  br label %3523

2367:                                             ; preds = %410
  store i32 1, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2368 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2368, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  store i8 4, i8* %116, align 4
  store i8 3, i8* %117, align 1
  br label %3523

2369:                                             ; preds = %410
  %2370 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 23) #8
  br i1 %2370, label %2372, label %2371

2371:                                             ; preds = %2369
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.44, i64 0, i64 0)) #8
  br label %2372

2372:                                             ; preds = %2371, %2369
  store i32 7, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2373 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2373, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2374:                                             ; preds = %410
  store i32 8, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2375 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2375, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2376:                                             ; preds = %410
  store i32 9, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2377 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2377, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2378:                                             ; preds = %410
  store i32 10, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2379 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2379, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2380:                                             ; preds = %410
  store i32 11, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2381 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2381, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2382:                                             ; preds = %410
  store i32 15, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2383 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2383, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2384:                                             ; preds = %410
  store i32 16, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2385 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2385, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2386:                                             ; preds = %410
  %2387 = load i32, i32* %123, align 8
  %2388 = icmp slt i32 %2387, 320
  br i1 %2388, label %2389, label %2392

2389:                                             ; preds = %2386
  %2390 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 35) #8
  br i1 %2390, label %2392, label %2391

2391:                                             ; preds = %2389
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i64 0, i64 0)) #8
  br label %2392

2392:                                             ; preds = %2391, %2389, %2386
  store i32 36, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2393 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2393, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2394:                                             ; preds = %410
  %2395 = load i32, i32* %123, align 8
  %2396 = icmp slt i32 %2395, 320
  br i1 %2396, label %2397, label %2400

2397:                                             ; preds = %2394
  %2398 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 22) #8
  br i1 %2398, label %2400, label %2399

2399:                                             ; preds = %2397
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i64 0, i64 0)) #8
  br label %2400

2400:                                             ; preds = %2399, %2397, %2394
  store i32 36, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2401 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2401, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2402:                                             ; preds = %410
  %2403 = load i32, i32* %123, align 8
  %2404 = icmp slt i32 %2403, 320
  br i1 %2404, label %2405, label %2408

2405:                                             ; preds = %2402
  %2406 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm2EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"struct.std::__1::array.101"* nonnull dereferenceable(2) @_ZZ7yyparsePN2sh13TParseContextEPvE10extensions) #8
  br i1 %2406, label %2408, label %2407

2407:                                             ; preds = %2405
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46, i64 0, i64 0)) #8
  br label %2408

2408:                                             ; preds = %2407, %2405, %2402
  store i32 35, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2409 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2409, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2410:                                             ; preds = %410
  store i32 17, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2411 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2411, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2412:                                             ; preds = %410
  store i32 18, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2413 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2413, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2414:                                             ; preds = %410
  store i32 19, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2415 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2415, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2416:                                             ; preds = %410
  store i32 20, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2417 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2417, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2418:                                             ; preds = %410
  store i32 21, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2419 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2419, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2420:                                             ; preds = %410
  store i32 22, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2421 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2421, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2422:                                             ; preds = %410
  %2423 = load i32, i32* %123, align 8
  %2424 = icmp slt i32 %2423, 320
  br i1 %2424, label %2425, label %2428

2425:                                             ; preds = %2422
  %2426 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 35) #8
  br i1 %2426, label %2428, label %2427

2427:                                             ; preds = %2425
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.47, i64 0, i64 0)) #8
  br label %2428

2428:                                             ; preds = %2427, %2425, %2422
  store i32 44, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2429 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2429, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2430:                                             ; preds = %410
  %2431 = load i32, i32* %123, align 8
  %2432 = icmp slt i32 %2431, 320
  br i1 %2432, label %2433, label %2436

2433:                                             ; preds = %2430
  %2434 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 22) #8
  br i1 %2434, label %2436, label %2435

2435:                                             ; preds = %2433
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.47, i64 0, i64 0)) #8
  br label %2436

2436:                                             ; preds = %2435, %2433, %2430
  store i32 44, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2437 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2437, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2438:                                             ; preds = %410
  %2439 = load i32, i32* %123, align 8
  %2440 = icmp slt i32 %2439, 320
  br i1 %2440, label %2441, label %2444

2441:                                             ; preds = %2438
  %2442 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm2EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"struct.std::__1::array.101"* nonnull dereferenceable(2) @_ZZ7yyparsePN2sh13TParseContextEPvE10extensions_0) #8
  br i1 %2442, label %2444, label %2443

2443:                                             ; preds = %2441
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48, i64 0, i64 0)) #8
  br label %2444

2444:                                             ; preds = %2443, %2441, %2438
  store i32 43, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2445 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2445, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2446:                                             ; preds = %410
  store i32 23, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2447 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2447, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2448:                                             ; preds = %410
  store i32 24, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2449 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2449, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2450:                                             ; preds = %410
  store i32 25, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2451 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2451, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2452:                                             ; preds = %410
  store i32 26, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2453 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2453, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2454:                                             ; preds = %410
  store i32 27, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2455 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2455, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2456:                                             ; preds = %410
  store i32 28, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2457 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2457, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2458:                                             ; preds = %410
  %2459 = load i32, i32* %123, align 8
  %2460 = icmp slt i32 %2459, 320
  br i1 %2460, label %2461, label %2464

2461:                                             ; preds = %2458
  %2462 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 35) #8
  br i1 %2462, label %2464, label %2463

2463:                                             ; preds = %2461
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.49, i64 0, i64 0)) #8
  br label %2464

2464:                                             ; preds = %2463, %2461, %2458
  store i32 49, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2465 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2465, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2466:                                             ; preds = %410
  %2467 = load i32, i32* %123, align 8
  %2468 = icmp slt i32 %2467, 320
  br i1 %2468, label %2469, label %2472

2469:                                             ; preds = %2466
  %2470 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 22) #8
  br i1 %2470, label %2472, label %2471

2471:                                             ; preds = %2469
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.49, i64 0, i64 0)) #8
  br label %2472

2472:                                             ; preds = %2471, %2469, %2466
  store i32 49, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2473 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2473, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2474:                                             ; preds = %410
  %2475 = load i32, i32* %123, align 8
  %2476 = icmp slt i32 %2475, 320
  br i1 %2476, label %2477, label %2480

2477:                                             ; preds = %2474
  %2478 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm2EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"struct.std::__1::array.101"* nonnull dereferenceable(2) @_ZZ7yyparsePN2sh13TParseContextEPvE10extensions_1) #8
  br i1 %2478, label %2480, label %2479

2479:                                             ; preds = %2477
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i64 0, i64 0)) #8
  br label %2480

2480:                                             ; preds = %2479, %2477, %2474
  store i32 48, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2481 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2481, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2482:                                             ; preds = %410
  store i32 29, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2483 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2483, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2484:                                             ; preds = %410
  store i32 30, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2485 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2485, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2486:                                             ; preds = %410
  store i32 31, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2487 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2487, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2488:                                             ; preds = %410
  %2489 = load i32, i32* %123, align 8
  %2490 = icmp slt i32 %2489, 320
  br i1 %2490, label %2491, label %2494

2491:                                             ; preds = %2488
  %2492 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 35) #8
  br i1 %2492, label %2494, label %2493

2493:                                             ; preds = %2491
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.51, i64 0, i64 0)) #8
  br label %2494

2494:                                             ; preds = %2493, %2491, %2488
  store i32 37, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2495 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2495, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2496:                                             ; preds = %410
  %2497 = load i32, i32* %123, align 8
  %2498 = icmp slt i32 %2497, 320
  br i1 %2498, label %2499, label %2502

2499:                                             ; preds = %2496
  %2500 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 22) #8
  br i1 %2500, label %2502, label %2501

2501:                                             ; preds = %2499
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.51, i64 0, i64 0)) #8
  br label %2502

2502:                                             ; preds = %2501, %2499, %2496
  store i32 37, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2503 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2503, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2504:                                             ; preds = %410
  %2505 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 39) #8
  br i1 %2505, label %2507, label %2506

2506:                                             ; preds = %2504
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0)) #8
  br label %2507

2507:                                             ; preds = %2506, %2504
  store i32 50, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2508 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2508, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2509:                                             ; preds = %410
  %2510 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm3EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"struct.std::__1::array.102"* nonnull dereferenceable(3) @_ZZ7yyparsePN2sh13TParseContextEPvE10extensions_2) #8
  br i1 %2510, label %2512, label %2511

2511:                                             ; preds = %2509
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.53, i64 0, i64 0)) #8
  br label %2512

2512:                                             ; preds = %2511, %2509
  store i32 12, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2513 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2513, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2514:                                             ; preds = %410
  %2515 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 23) #8
  br i1 %2515, label %2517, label %2516

2516:                                             ; preds = %2514
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.54, i64 0, i64 0)) #8
  br label %2517

2517:                                             ; preds = %2516, %2514
  store i32 13, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2518 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2518, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2519:                                             ; preds = %410
  %2520 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 5) #8
  br i1 %2520, label %2522, label %2521

2521:                                             ; preds = %2519
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.55, i64 0, i64 0)) #8
  br label %2522

2522:                                             ; preds = %2521, %2519
  store i32 14, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2523 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2523, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2524:                                             ; preds = %410
  store i32 51, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2525 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2525, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2526:                                             ; preds = %410
  store i32 52, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2527 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2527, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2528:                                             ; preds = %410
  store i32 53, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2529 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2529, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2530:                                             ; preds = %410
  store i32 54, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2531 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2531, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2532:                                             ; preds = %410
  store i32 55, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2533 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2533, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2534:                                             ; preds = %410
  store i32 56, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2535 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2535, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2536:                                             ; preds = %410
  store i32 57, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2537 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2537, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2538:                                             ; preds = %410
  store i32 58, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2539 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2539, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2540:                                             ; preds = %410
  store i32 59, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2541 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2541, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2542:                                             ; preds = %410
  store i32 60, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2543 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2543, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2544:                                             ; preds = %410
  store i32 61, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2545 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2545, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2546:                                             ; preds = %410
  store i32 62, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2547 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2547, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2548:                                             ; preds = %410
  %2549 = load i32, i32* %123, align 8
  %2550 = icmp slt i32 %2549, 320
  br i1 %2550, label %2551, label %2554

2551:                                             ; preds = %2548
  %2552 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 35) #8
  br i1 %2552, label %2554, label %2553

2553:                                             ; preds = %2551
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.56, i64 0, i64 0)) #8
  br label %2554

2554:                                             ; preds = %2553, %2551, %2548
  store i32 75, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2555 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2555, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2556:                                             ; preds = %410
  %2557 = load i32, i32* %123, align 8
  %2558 = icmp slt i32 %2557, 320
  br i1 %2558, label %2559, label %2562

2559:                                             ; preds = %2556
  %2560 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 22) #8
  br i1 %2560, label %2562, label %2561

2561:                                             ; preds = %2559
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.56, i64 0, i64 0)) #8
  br label %2562

2562:                                             ; preds = %2561, %2559, %2556
  store i32 75, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2563 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2563, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2564:                                             ; preds = %410
  %2565 = load i32, i32* %123, align 8
  %2566 = icmp slt i32 %2565, 320
  br i1 %2566, label %2567, label %2570

2567:                                             ; preds = %2564
  %2568 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 35) #8
  br i1 %2568, label %2570, label %2569

2569:                                             ; preds = %2567
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.57, i64 0, i64 0)) #8
  br label %2570

2570:                                             ; preds = %2569, %2567, %2564
  store i32 76, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2571 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2571, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2572:                                             ; preds = %410
  %2573 = load i32, i32* %123, align 8
  %2574 = icmp slt i32 %2573, 320
  br i1 %2574, label %2575, label %2578

2575:                                             ; preds = %2572
  %2576 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 22) #8
  br i1 %2576, label %2578, label %2577

2577:                                             ; preds = %2575
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.57, i64 0, i64 0)) #8
  br label %2578

2578:                                             ; preds = %2577, %2575, %2572
  store i32 76, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2579 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2579, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2580:                                             ; preds = %410
  %2581 = load i32, i32* %123, align 8
  %2582 = icmp slt i32 %2581, 320
  br i1 %2582, label %2583, label %2586

2583:                                             ; preds = %2580
  %2584 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 35) #8
  br i1 %2584, label %2586, label %2585

2585:                                             ; preds = %2583
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.58, i64 0, i64 0)) #8
  br label %2586

2586:                                             ; preds = %2585, %2583, %2580
  store i32 77, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2587 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2587, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2588:                                             ; preds = %410
  %2589 = load i32, i32* %123, align 8
  %2590 = icmp slt i32 %2589, 320
  br i1 %2590, label %2591, label %2594

2591:                                             ; preds = %2588
  %2592 = call zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8 zeroext 22) #8
  br i1 %2592, label %2594, label %2593

2593:                                             ; preds = %2591
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.58, i64 0, i64 0)) #8
  br label %2594

2594:                                             ; preds = %2593, %2591, %2588
  store i32 77, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2595 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2595, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2596:                                             ; preds = %410
  %2597 = load i32, i32* %123, align 8
  %2598 = icmp slt i32 %2597, 320
  br i1 %2598, label %2599, label %2602

2599:                                             ; preds = %2596
  %2600 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm2EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"struct.std::__1::array.101"* nonnull dereferenceable(2) @_ZZ7yyparsePN2sh13TParseContextEPvE10extensions_3) #8
  br i1 %2600, label %2602, label %2601

2601:                                             ; preds = %2599
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0)) #8
  br label %2602

2602:                                             ; preds = %2601, %2599, %2596
  store i32 81, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2603 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2603, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2604:                                             ; preds = %410
  %2605 = load i32, i32* %123, align 8
  %2606 = icmp slt i32 %2605, 320
  br i1 %2606, label %2607, label %2610

2607:                                             ; preds = %2604
  %2608 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm2EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"struct.std::__1::array.101"* nonnull dereferenceable(2) @_ZZ7yyparsePN2sh13TParseContextEPvE10extensions_4) #8
  br i1 %2608, label %2610, label %2609

2609:                                             ; preds = %2607
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i64 0, i64 0)) #8
  br label %2610

2610:                                             ; preds = %2609, %2607, %2604
  store i32 82, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2611 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2611, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2612:                                             ; preds = %410
  %2613 = load i32, i32* %123, align 8
  %2614 = icmp slt i32 %2613, 320
  br i1 %2614, label %2615, label %2618

2615:                                             ; preds = %2612
  %2616 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm2EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"struct.std::__1::array.101"* nonnull dereferenceable(2) @_ZZ7yyparsePN2sh13TParseContextEPvE10extensions_5) #8
  br i1 %2616, label %2618, label %2617

2617:                                             ; preds = %2615
  call void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0)) #8
  br label %2618

2618:                                             ; preds = %2617, %2615, %2612
  store i32 83, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2619 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2619, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2620:                                             ; preds = %410
  store i32 6, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store %"class.sh::TStructure"* null, %"class.sh::TStructure"** %118, align 8
  %2621 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2621, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2622:                                             ; preds = %410
  %2623 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2, i32 0, i32 0
  %2624 = bitcast %"struct.sh::TTypeSpecifierNonArray"* %2623 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %2624, i64 40, i1 false)
  br label %3523

2625:                                             ; preds = %410
  %2626 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %2627 = bitcast %union.anon.81* %2626 to i64*
  %2628 = load i64, i64* %2627, align 8
  store i32 90, i32* %115, align 8
  store i8 1, i8* %116, align 4
  store i8 1, i8* %117, align 1
  store i64 %2628, i64* %119, align 8
  %2629 = bitcast %"struct.sh::TSourceLoc"* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 4 %2629, i64 16, i1 false) #8
  store i8 0, i8* %122, align 8
  br label %3523

2630:                                             ; preds = %410
  %2631 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112) #8
  %2632 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1
  %2633 = bitcast %union.YYSTYPE* %2632 to i8**
  %2634 = load i8*, i8** %2633, align 8
  store i8* %2634, i8** %113, align 8
  %2635 = icmp eq i8* %2634, null
  br i1 %2635, label %2642, label %2636

2636:                                             ; preds = %2630, %2636
  %2637 = phi i64 [ %2641, %2636 ], [ 0, %2630 ]
  %2638 = getelementptr inbounds i8, i8* %2634, i64 %2637
  %2639 = load i8, i8* %2638, align 1
  %2640 = icmp eq i8 %2639, 0
  %2641 = add i64 %2637, 1
  br i1 %2640, label %2642, label %2636

2642:                                             ; preds = %2636, %2630
  %2643 = phi i64 [ 0, %2630 ], [ %2637, %2636 ]
  store i64 %2643, i64* %114, align 8
  call void @_ZN2sh13TParseContext22enterStructDeclarationERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2631, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %52) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112) #8
  br label %3523

2644:                                             ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %108) #8
  %2645 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -5
  %2646 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #8
  %2647 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -4
  %2648 = bitcast %union.YYSTYPE* %2647 to i8**
  %2649 = load i8*, i8** %2648, align 8
  store i8* %2649, i8** %110, align 8
  %2650 = icmp eq i8* %2649, null
  br i1 %2650, label %2657, label %2651

2651:                                             ; preds = %2644, %2651
  %2652 = phi i64 [ %2656, %2651 ], [ 0, %2644 ]
  %2653 = getelementptr inbounds i8, i8* %2649, i64 %2652
  %2654 = load i8, i8* %2653, align 1
  %2655 = icmp eq i8 %2654, 0
  %2656 = add i64 %2652, 1
  br i1 %2655, label %2657, label %2651

2657:                                             ; preds = %2651, %2644
  %2658 = phi i64 [ 0, %2644 ], [ %2652, %2651 ]
  store i64 %2658, i64* %111, align 8
  %2659 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %2660 = bitcast %union.anon.83* %2659 to %"class.sh::TVector.22"**
  %2661 = load %"class.sh::TVector.22"*, %"class.sh::TVector.22"** %2660, align 8
  call void @_ZN2sh13TParseContext12addStructureERKNS_10TSourceLocES3_RKNS_15ImmutableStringEPNS_7TVectorIPNS_6TFieldEEE(%"struct.sh::TTypeSpecifierNonArray"* nonnull sret %53, %"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2645, %"struct.sh::TSourceLoc"* dereferenceable(16) %2646, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %54, %"class.sh::TVector.22"* %2661) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* nonnull align 8 %108, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %108) #8
  br label %3523

2662:                                             ; preds = %410
  call void @_ZN2sh13TParseContext22enterStructDeclarationERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2shL21kEmptyImmutableStringE) #8
  br label %3523

2663:                                             ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %105) #8
  %2664 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -4
  %2665 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %2666 = bitcast %union.anon.83* %2665 to %"class.sh::TVector.22"**
  %2667 = load %"class.sh::TVector.22"*, %"class.sh::TVector.22"** %2666, align 8
  call void @_ZN2sh13TParseContext12addStructureERKNS_10TSourceLocES3_RKNS_15ImmutableStringEPNS_7TVectorIPNS_6TFieldEEE(%"struct.sh::TTypeSpecifierNonArray"* nonnull sret %55, %"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2664, %"struct.sh::TSourceLoc"* nonnull dereferenceable(16) %12, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2shL21kEmptyImmutableStringE, %"class.sh::TVector.22"* %2667) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* nonnull align 8 %105, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %105) #8
  br label %3523

2668:                                             ; preds = %410
  %2669 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %2670 = bitcast %union.anon.83* %2669 to %"class.sh::TVector.22"**
  %2671 = load %"class.sh::TVector.22"*, %"class.sh::TVector.22"** %2670, align 8
  %2672 = call %"class.sh::TVector.22"* @_ZN2sh13TParseContext18addStructFieldListEPNS_7TVectorIPNS_6TFieldEEERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TVector.22"* %2671, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  store %"class.sh::TVector.22"* %2672, %"class.sh::TVector.22"** %104, align 8
  br label %3523

2673:                                             ; preds = %410
  %2674 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %2675 = bitcast %union.anon.83* %2674 to %"class.sh::TVector.22"**
  %2676 = load %"class.sh::TVector.22"*, %"class.sh::TVector.22"** %2675, align 8
  %2677 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %2678 = bitcast %union.anon.83* %2677 to %"class.sh::TVector.22"**
  %2679 = load %"class.sh::TVector.22"*, %"class.sh::TVector.22"** %2678, align 8
  %2680 = call %"class.sh::TVector.22"* @_ZN2sh13TParseContext23combineStructFieldListsEPNS_7TVectorIPNS_6TFieldEEEPKS4_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TVector.22"* %2676, %"class.sh::TVector.22"* %2679, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  store %"class.sh::TVector.22"* %2680, %"class.sh::TVector.22"** %104, align 8
  br label %3523

2681:                                             ; preds = %410
  %2682 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 2, i32 0
  %2683 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %2684 = bitcast %union.anon.83* %2683 to %"class.sh::TVector.84"**
  %2685 = load %"class.sh::TVector.84"*, %"class.sh::TVector.84"** %2684, align 8
  %2686 = call %"class.sh::TVector.22"* @_ZN2sh13TParseContext23addStructDeclaratorListERKNS_11TPublicTypeEPKNS_7TVectorIPNS_11TDeclaratorEEE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %2682, %"class.sh::TVector.84"* %2685) #8
  store %"class.sh::TVector.22"* %2686, %"class.sh::TVector.22"** %104, align 8
  br label %3523

2687:                                             ; preds = %410
  %2688 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -3, i32 0, i32 2
  %2689 = bitcast %union.anon.83* %2688 to %"class.sh::TTypeQualifierBuilder"**
  %2690 = load %"class.sh::TTypeQualifierBuilder"*, %"class.sh::TTypeQualifierBuilder"** %2689, align 8
  %2691 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 2, i32 0
  %2692 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 2
  %2693 = bitcast %union.anon.83* %2692 to %"class.sh::TVector.84"**
  %2694 = load %"class.sh::TVector.84"*, %"class.sh::TVector.84"** %2693, align 8
  %2695 = call %"class.sh::TVector.22"* @_ZN2sh13TParseContext37addStructDeclaratorListWithQualifiersERKNS_21TTypeQualifierBuilderEPNS_11TPublicTypeEPKNS_7TVectorIPNS_11TDeclaratorEEE(%"class.sh::TParseContext"* %0, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32) %2690, %"struct.sh::TPublicType"* %2691, %"class.sh::TVector.84"* %2694) #8
  store %"class.sh::TVector.22"* %2695, %"class.sh::TVector.22"** %104, align 8
  br label %3523

2696:                                             ; preds = %410
  %2697 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2698 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2697, i64 24) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %2698, i8 0, i64 24, i1 false) #8
  store i8* %2698, i8** %103, align 8
  %2699 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %2700 = getelementptr inbounds i8, i8* %2698, i64 8
  %2701 = bitcast i8* %2700 to %"class.sh::TDeclarator"***
  %2702 = load %"class.sh::TDeclarator"**, %"class.sh::TDeclarator"*** %2701, align 8
  %2703 = getelementptr inbounds i8, i8* %2698, i64 16
  %2704 = bitcast i8* %2703 to %"class.sh::TDeclarator"***
  %2705 = load %"class.sh::TDeclarator"**, %"class.sh::TDeclarator"*** %2704, align 8
  %2706 = icmp eq %"class.sh::TDeclarator"** %2702, %2705
  %2707 = ptrtoint %"class.sh::TDeclarator"** %2705 to i64
  br i1 %2706, label %2715, label %2708

2708:                                             ; preds = %2696
  %2709 = bitcast %union.anon.83* %2699 to i64*
  %2710 = load i64, i64* %2709, align 8
  %2711 = bitcast %"class.sh::TDeclarator"** %2702 to i64*
  store i64 %2710, i64* %2711, align 8
  %2712 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2702, i64 1
  %2713 = ptrtoint %"class.sh::TDeclarator"** %2712 to i64
  %2714 = bitcast i8* %2700 to i64*
  store i64 %2713, i64* %2714, align 8
  br label %3523

2715:                                             ; preds = %2696
  %2716 = ptrtoint %"class.sh::TDeclarator"** %2702 to i64
  %2717 = bitcast i8* %2700 to i64*
  %2718 = bitcast i8* %2698 to i64*
  %2719 = load i64, i64* %2718, align 8
  %2720 = sub i64 %2716, %2719
  %2721 = ashr exact i64 %2720, 3
  %2722 = add nsw i64 %2721, 1
  %2723 = icmp ugt i64 %2722, 2305843009213693951
  br i1 %2723, label %2724, label %2726

2724:                                             ; preds = %2715
  %2725 = bitcast i8* %2698 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2725) #10
  unreachable

2726:                                             ; preds = %2715
  %2727 = bitcast i8* %2703 to i64*
  %2728 = sub i64 %2707, %2719
  %2729 = ashr exact i64 %2728, 3
  %2730 = icmp ult i64 %2729, 1152921504606846975
  br i1 %2730, label %2731, label %2736

2731:                                             ; preds = %2726
  %2732 = ashr exact i64 %2728, 2
  %2733 = icmp ult i64 %2732, %2722
  %2734 = select i1 %2733, i64 %2722, i64 %2732
  %2735 = icmp eq i64 %2734, 0
  br i1 %2735, label %2742, label %2736

2736:                                             ; preds = %2731, %2726
  %2737 = phi i64 [ %2734, %2731 ], [ 2305843009213693951, %2726 ]
  %2738 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2739 = shl i64 %2737, 3
  %2740 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2738, i64 %2739) #8
  %2741 = bitcast i8* %2740 to %"class.sh::TDeclarator"**
  br label %2742

2742:                                             ; preds = %2736, %2731
  %2743 = phi i64 [ %2737, %2736 ], [ 0, %2731 ]
  %2744 = phi %"class.sh::TDeclarator"** [ %2741, %2736 ], [ null, %2731 ]
  %2745 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2744, i64 %2721
  %2746 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2744, i64 %2743
  %2747 = ptrtoint %"class.sh::TDeclarator"** %2746 to i64
  %2748 = bitcast %union.anon.83* %2699 to i64*
  %2749 = load i64, i64* %2748, align 8
  %2750 = bitcast %"class.sh::TDeclarator"** %2745 to i64*
  store i64 %2749, i64* %2750, align 8
  %2751 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2745, i64 1
  %2752 = ptrtoint %"class.sh::TDeclarator"** %2751 to i64
  %2753 = bitcast i8* %2698 to %"class.sh::TDeclarator"***
  %2754 = load %"class.sh::TDeclarator"**, %"class.sh::TDeclarator"*** %2753, align 8
  %2755 = ptrtoint %"class.sh::TDeclarator"** %2754 to i64
  %2756 = load %"class.sh::TDeclarator"**, %"class.sh::TDeclarator"*** %2701, align 8
  %2757 = icmp eq %"class.sh::TDeclarator"** %2756, %2754
  br i1 %2757, label %2928, label %2758

2758:                                             ; preds = %2742
  %2759 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2756, i64 -1
  %2760 = ptrtoint %"class.sh::TDeclarator"** %2759 to i64
  %2761 = sub i64 %2760, %2755
  %2762 = lshr i64 %2761, 3
  %2763 = add nuw nsw i64 %2762, 1
  %2764 = icmp ult i64 %2763, 4
  br i1 %2764, label %2858, label %2765

2765:                                             ; preds = %2758
  %2766 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2744, i64 -1
  %2767 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2756, i64 -1
  %2768 = ptrtoint %"class.sh::TDeclarator"** %2767 to i64
  %2769 = sub i64 %2768, %2755
  %2770 = lshr i64 %2769, 3
  %2771 = sub nsw i64 %2721, %2770
  %2772 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2766, i64 %2771
  %2773 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2756, i64 -1
  %2774 = sub nsw i64 0, %2770
  %2775 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2773, i64 %2774
  %2776 = icmp ult %"class.sh::TDeclarator"** %2772, %2756
  %2777 = icmp ult %"class.sh::TDeclarator"** %2775, %2745
  %2778 = and i1 %2776, %2777
  br i1 %2778, label %2858, label %2779

2779:                                             ; preds = %2765
  %2780 = and i64 %2763, 4611686018427387900
  %2781 = sub nsw i64 0, %2780
  %2782 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2745, i64 %2781
  %2783 = sub nsw i64 0, %2780
  %2784 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2756, i64 %2783
  %2785 = add nsw i64 %2780, -4
  %2786 = lshr exact i64 %2785, 2
  %2787 = add nuw nsw i64 %2786, 1
  %2788 = and i64 %2787, 1
  %2789 = icmp eq i64 %2785, 0
  br i1 %2789, label %2834, label %2790

2790:                                             ; preds = %2779
  %2791 = sub nuw nsw i64 %2787, %2788
  %2792 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2745, i64 -1
  %2793 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2756, i64 -1
  %2794 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2745, i64 -1
  %2795 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2756, i64 -1
  br label %2796

2796:                                             ; preds = %2796, %2790
  %2797 = phi i64 [ 0, %2790 ], [ %2831, %2796 ]
  %2798 = phi i64 [ %2791, %2790 ], [ %2832, %2796 ]
  %2799 = sub i64 0, %2797
  %2800 = sub i64 0, %2797
  %2801 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2792, i64 %2799
  %2802 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2793, i64 %2800
  %2803 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2802, i64 -1
  %2804 = bitcast %"class.sh::TDeclarator"** %2803 to <2 x i64>*
  %2805 = load <2 x i64>, <2 x i64>* %2804, align 8, !alias.scope !21
  %2806 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2802, i64 -2
  %2807 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2806, i64 -1
  %2808 = bitcast %"class.sh::TDeclarator"** %2807 to <2 x i64>*
  %2809 = load <2 x i64>, <2 x i64>* %2808, align 8, !alias.scope !21
  %2810 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2801, i64 -1
  %2811 = bitcast %"class.sh::TDeclarator"** %2810 to <2 x i64>*
  store <2 x i64> %2805, <2 x i64>* %2811, align 8, !alias.scope !24, !noalias !21
  %2812 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2801, i64 -2
  %2813 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2812, i64 -1
  %2814 = bitcast %"class.sh::TDeclarator"** %2813 to <2 x i64>*
  store <2 x i64> %2809, <2 x i64>* %2814, align 8, !alias.scope !24, !noalias !21
  %2815 = sub nuw nsw i64 -4, %2797
  %2816 = sub nuw nsw i64 -4, %2797
  %2817 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2794, i64 %2815
  %2818 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2795, i64 %2816
  %2819 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2818, i64 -1
  %2820 = bitcast %"class.sh::TDeclarator"** %2819 to <2 x i64>*
  %2821 = load <2 x i64>, <2 x i64>* %2820, align 8, !alias.scope !21
  %2822 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2818, i64 -2
  %2823 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2822, i64 -1
  %2824 = bitcast %"class.sh::TDeclarator"** %2823 to <2 x i64>*
  %2825 = load <2 x i64>, <2 x i64>* %2824, align 8, !alias.scope !21
  %2826 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2817, i64 -1
  %2827 = bitcast %"class.sh::TDeclarator"** %2826 to <2 x i64>*
  store <2 x i64> %2821, <2 x i64>* %2827, align 8, !alias.scope !24, !noalias !21
  %2828 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2817, i64 -2
  %2829 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2828, i64 -1
  %2830 = bitcast %"class.sh::TDeclarator"** %2829 to <2 x i64>*
  store <2 x i64> %2825, <2 x i64>* %2830, align 8, !alias.scope !24, !noalias !21
  %2831 = add i64 %2797, 8
  %2832 = add i64 %2798, -2
  %2833 = icmp eq i64 %2832, 0
  br i1 %2833, label %2834, label %2796, !llvm.loop !26

2834:                                             ; preds = %2796, %2779
  %2835 = phi i64 [ 0, %2779 ], [ %2831, %2796 ]
  %2836 = icmp eq i64 %2788, 0
  br i1 %2836, label %2856, label %2837

2837:                                             ; preds = %2834
  %2838 = sub i64 0, %2835
  %2839 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2745, i64 -1
  %2840 = sub i64 0, %2835
  %2841 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2756, i64 -1
  %2842 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2839, i64 %2838
  %2843 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2841, i64 %2840
  %2844 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2843, i64 -1
  %2845 = bitcast %"class.sh::TDeclarator"** %2844 to <2 x i64>*
  %2846 = load <2 x i64>, <2 x i64>* %2845, align 8, !alias.scope !21
  %2847 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2843, i64 -2
  %2848 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2847, i64 -1
  %2849 = bitcast %"class.sh::TDeclarator"** %2848 to <2 x i64>*
  %2850 = load <2 x i64>, <2 x i64>* %2849, align 8, !alias.scope !21
  %2851 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2842, i64 -1
  %2852 = bitcast %"class.sh::TDeclarator"** %2851 to <2 x i64>*
  store <2 x i64> %2846, <2 x i64>* %2852, align 8, !alias.scope !24, !noalias !21
  %2853 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2842, i64 -2
  %2854 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2853, i64 -1
  %2855 = bitcast %"class.sh::TDeclarator"** %2854 to <2 x i64>*
  store <2 x i64> %2850, <2 x i64>* %2855, align 8, !alias.scope !24, !noalias !21
  br label %2856

2856:                                             ; preds = %2834, %2837
  %2857 = icmp eq i64 %2763, %2780
  br i1 %2857, label %2928, label %2858

2858:                                             ; preds = %2856, %2765, %2758
  %2859 = phi %"class.sh::TDeclarator"** [ %2745, %2765 ], [ %2745, %2758 ], [ %2782, %2856 ]
  %2860 = phi %"class.sh::TDeclarator"** [ %2756, %2765 ], [ %2756, %2758 ], [ %2784, %2856 ]
  %2861 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2860, i64 -1
  %2862 = ptrtoint %"class.sh::TDeclarator"** %2861 to i64
  %2863 = sub i64 %2862, %2755
  %2864 = lshr i64 %2863, 3
  %2865 = add nuw nsw i64 %2864, 1
  %2866 = and i64 %2865, 7
  %2867 = icmp eq i64 %2866, 0
  br i1 %2867, label %2879, label %2868

2868:                                             ; preds = %2858, %2868
  %2869 = phi %"class.sh::TDeclarator"** [ %2872, %2868 ], [ %2859, %2858 ]
  %2870 = phi %"class.sh::TDeclarator"** [ %2873, %2868 ], [ %2860, %2858 ]
  %2871 = phi i64 [ %2877, %2868 ], [ %2866, %2858 ]
  %2872 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2869, i64 -1
  %2873 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2870, i64 -1
  %2874 = bitcast %"class.sh::TDeclarator"** %2873 to i64*
  %2875 = load i64, i64* %2874, align 8
  %2876 = bitcast %"class.sh::TDeclarator"** %2872 to i64*
  store i64 %2875, i64* %2876, align 8
  %2877 = add i64 %2871, -1
  %2878 = icmp eq i64 %2877, 0
  br i1 %2878, label %2879, label %2868, !llvm.loop !27

2879:                                             ; preds = %2868, %2858
  %2880 = phi %"class.sh::TDeclarator"** [ undef, %2858 ], [ %2872, %2868 ]
  %2881 = phi %"class.sh::TDeclarator"** [ %2859, %2858 ], [ %2872, %2868 ]
  %2882 = phi %"class.sh::TDeclarator"** [ %2860, %2858 ], [ %2873, %2868 ]
  %2883 = icmp ult i64 %2863, 56
  br i1 %2883, label %2928, label %2884

2884:                                             ; preds = %2879, %2884
  %2885 = phi %"class.sh::TDeclarator"** [ %2922, %2884 ], [ %2881, %2879 ]
  %2886 = phi %"class.sh::TDeclarator"** [ %2923, %2884 ], [ %2882, %2879 ]
  %2887 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2885, i64 -1
  %2888 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2886, i64 -1
  %2889 = bitcast %"class.sh::TDeclarator"** %2888 to i64*
  %2890 = load i64, i64* %2889, align 8
  %2891 = bitcast %"class.sh::TDeclarator"** %2887 to i64*
  store i64 %2890, i64* %2891, align 8
  %2892 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2885, i64 -2
  %2893 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2886, i64 -2
  %2894 = bitcast %"class.sh::TDeclarator"** %2893 to i64*
  %2895 = load i64, i64* %2894, align 8
  %2896 = bitcast %"class.sh::TDeclarator"** %2892 to i64*
  store i64 %2895, i64* %2896, align 8
  %2897 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2885, i64 -3
  %2898 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2886, i64 -3
  %2899 = bitcast %"class.sh::TDeclarator"** %2898 to i64*
  %2900 = load i64, i64* %2899, align 8
  %2901 = bitcast %"class.sh::TDeclarator"** %2897 to i64*
  store i64 %2900, i64* %2901, align 8
  %2902 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2885, i64 -4
  %2903 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2886, i64 -4
  %2904 = bitcast %"class.sh::TDeclarator"** %2903 to i64*
  %2905 = load i64, i64* %2904, align 8
  %2906 = bitcast %"class.sh::TDeclarator"** %2902 to i64*
  store i64 %2905, i64* %2906, align 8
  %2907 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2885, i64 -5
  %2908 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2886, i64 -5
  %2909 = bitcast %"class.sh::TDeclarator"** %2908 to i64*
  %2910 = load i64, i64* %2909, align 8
  %2911 = bitcast %"class.sh::TDeclarator"** %2907 to i64*
  store i64 %2910, i64* %2911, align 8
  %2912 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2885, i64 -6
  %2913 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2886, i64 -6
  %2914 = bitcast %"class.sh::TDeclarator"** %2913 to i64*
  %2915 = load i64, i64* %2914, align 8
  %2916 = bitcast %"class.sh::TDeclarator"** %2912 to i64*
  store i64 %2915, i64* %2916, align 8
  %2917 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2885, i64 -7
  %2918 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2886, i64 -7
  %2919 = bitcast %"class.sh::TDeclarator"** %2918 to i64*
  %2920 = load i64, i64* %2919, align 8
  %2921 = bitcast %"class.sh::TDeclarator"** %2917 to i64*
  store i64 %2920, i64* %2921, align 8
  %2922 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2885, i64 -8
  %2923 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2886, i64 -8
  %2924 = bitcast %"class.sh::TDeclarator"** %2923 to i64*
  %2925 = load i64, i64* %2924, align 8
  %2926 = bitcast %"class.sh::TDeclarator"** %2922 to i64*
  store i64 %2925, i64* %2926, align 8
  %2927 = icmp eq %"class.sh::TDeclarator"** %2923, %2754
  br i1 %2927, label %2928, label %2884, !llvm.loop !28

2928:                                             ; preds = %2879, %2884, %2856, %2742
  %2929 = phi %"class.sh::TDeclarator"** [ %2745, %2742 ], [ %2782, %2856 ], [ %2880, %2879 ], [ %2922, %2884 ]
  %2930 = ptrtoint %"class.sh::TDeclarator"** %2929 to i64
  store i64 %2930, i64* %2718, align 8
  store i64 %2752, i64* %2717, align 8
  store i64 %2747, i64* %2727, align 8
  br label %3523

2931:                                             ; preds = %410
  %2932 = load %"class.std::__1::vector.85"*, %"class.std::__1::vector.85"** %102, align 8
  %2933 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %2934 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %2932, i64 0, i32 0, i32 1
  %2935 = load %"class.sh::TDeclarator"**, %"class.sh::TDeclarator"*** %2934, align 8
  %2936 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %2932, i64 0, i32 0, i32 2, i32 0, i32 0
  %2937 = load %"class.sh::TDeclarator"**, %"class.sh::TDeclarator"*** %2936, align 8
  %2938 = icmp eq %"class.sh::TDeclarator"** %2935, %2937
  %2939 = ptrtoint %"class.sh::TDeclarator"** %2937 to i64
  br i1 %2938, label %2947, label %2940

2940:                                             ; preds = %2931
  %2941 = bitcast %union.anon.83* %2933 to i64*
  %2942 = load i64, i64* %2941, align 8
  %2943 = bitcast %"class.sh::TDeclarator"** %2935 to i64*
  store i64 %2942, i64* %2943, align 8
  %2944 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2935, i64 1
  %2945 = ptrtoint %"class.sh::TDeclarator"** %2944 to i64
  %2946 = bitcast %"class.sh::TDeclarator"*** %2934 to i64*
  store i64 %2945, i64* %2946, align 8
  br label %3523

2947:                                             ; preds = %2931
  %2948 = ptrtoint %"class.sh::TDeclarator"** %2935 to i64
  %2949 = bitcast %"class.sh::TDeclarator"*** %2934 to i64*
  %2950 = bitcast %"class.std::__1::vector.85"* %2932 to i64*
  %2951 = load i64, i64* %2950, align 8
  %2952 = sub i64 %2948, %2951
  %2953 = ashr exact i64 %2952, 3
  %2954 = add nsw i64 %2953, 1
  %2955 = icmp ugt i64 %2954, 2305843009213693951
  br i1 %2955, label %2956, label %2958

2956:                                             ; preds = %2947
  %2957 = bitcast %"class.std::__1::vector.85"* %2932 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2957) #10
  unreachable

2958:                                             ; preds = %2947
  %2959 = bitcast %"class.sh::TDeclarator"*** %2936 to i64*
  %2960 = sub i64 %2939, %2951
  %2961 = ashr exact i64 %2960, 3
  %2962 = icmp ult i64 %2961, 1152921504606846975
  br i1 %2962, label %2963, label %2968

2963:                                             ; preds = %2958
  %2964 = ashr exact i64 %2960, 2
  %2965 = icmp ult i64 %2964, %2954
  %2966 = select i1 %2965, i64 %2954, i64 %2964
  %2967 = icmp eq i64 %2966, 0
  br i1 %2967, label %2974, label %2968

2968:                                             ; preds = %2963, %2958
  %2969 = phi i64 [ %2966, %2963 ], [ 2305843009213693951, %2958 ]
  %2970 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2971 = shl i64 %2969, 3
  %2972 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2970, i64 %2971) #8
  %2973 = bitcast i8* %2972 to %"class.sh::TDeclarator"**
  br label %2974

2974:                                             ; preds = %2968, %2963
  %2975 = phi i64 [ %2969, %2968 ], [ 0, %2963 ]
  %2976 = phi %"class.sh::TDeclarator"** [ %2973, %2968 ], [ null, %2963 ]
  %2977 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2976, i64 %2953
  %2978 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2976, i64 %2975
  %2979 = ptrtoint %"class.sh::TDeclarator"** %2978 to i64
  %2980 = bitcast %union.anon.83* %2933 to i64*
  %2981 = load i64, i64* %2980, align 8
  %2982 = bitcast %"class.sh::TDeclarator"** %2977 to i64*
  store i64 %2981, i64* %2982, align 8
  %2983 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2977, i64 1
  %2984 = ptrtoint %"class.sh::TDeclarator"** %2983 to i64
  %2985 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %2932, i64 0, i32 0, i32 0
  %2986 = load %"class.sh::TDeclarator"**, %"class.sh::TDeclarator"*** %2985, align 8
  %2987 = ptrtoint %"class.sh::TDeclarator"** %2986 to i64
  %2988 = load %"class.sh::TDeclarator"**, %"class.sh::TDeclarator"*** %2934, align 8
  %2989 = icmp eq %"class.sh::TDeclarator"** %2988, %2986
  br i1 %2989, label %3160, label %2990

2990:                                             ; preds = %2974
  %2991 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2988, i64 -1
  %2992 = ptrtoint %"class.sh::TDeclarator"** %2991 to i64
  %2993 = sub i64 %2992, %2987
  %2994 = lshr i64 %2993, 3
  %2995 = add nuw nsw i64 %2994, 1
  %2996 = icmp ult i64 %2995, 4
  br i1 %2996, label %3090, label %2997

2997:                                             ; preds = %2990
  %2998 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2976, i64 -1
  %2999 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2988, i64 -1
  %3000 = ptrtoint %"class.sh::TDeclarator"** %2999 to i64
  %3001 = sub i64 %3000, %2987
  %3002 = lshr i64 %3001, 3
  %3003 = sub nsw i64 %2953, %3002
  %3004 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2998, i64 %3003
  %3005 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2988, i64 -1
  %3006 = sub nsw i64 0, %3002
  %3007 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3005, i64 %3006
  %3008 = icmp ult %"class.sh::TDeclarator"** %3004, %2988
  %3009 = icmp ult %"class.sh::TDeclarator"** %3007, %2977
  %3010 = and i1 %3008, %3009
  br i1 %3010, label %3090, label %3011

3011:                                             ; preds = %2997
  %3012 = and i64 %2995, 4611686018427387900
  %3013 = sub nsw i64 0, %3012
  %3014 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2977, i64 %3013
  %3015 = sub nsw i64 0, %3012
  %3016 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2988, i64 %3015
  %3017 = add nsw i64 %3012, -4
  %3018 = lshr exact i64 %3017, 2
  %3019 = add nuw nsw i64 %3018, 1
  %3020 = and i64 %3019, 1
  %3021 = icmp eq i64 %3017, 0
  br i1 %3021, label %3066, label %3022

3022:                                             ; preds = %3011
  %3023 = sub nuw nsw i64 %3019, %3020
  %3024 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2977, i64 -1
  %3025 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2988, i64 -1
  %3026 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2977, i64 -1
  %3027 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2988, i64 -1
  br label %3028

3028:                                             ; preds = %3028, %3022
  %3029 = phi i64 [ 0, %3022 ], [ %3063, %3028 ]
  %3030 = phi i64 [ %3023, %3022 ], [ %3064, %3028 ]
  %3031 = sub i64 0, %3029
  %3032 = sub i64 0, %3029
  %3033 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3024, i64 %3031
  %3034 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3025, i64 %3032
  %3035 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3034, i64 -1
  %3036 = bitcast %"class.sh::TDeclarator"** %3035 to <2 x i64>*
  %3037 = load <2 x i64>, <2 x i64>* %3036, align 8, !alias.scope !29
  %3038 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3034, i64 -2
  %3039 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3038, i64 -1
  %3040 = bitcast %"class.sh::TDeclarator"** %3039 to <2 x i64>*
  %3041 = load <2 x i64>, <2 x i64>* %3040, align 8, !alias.scope !29
  %3042 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3033, i64 -1
  %3043 = bitcast %"class.sh::TDeclarator"** %3042 to <2 x i64>*
  store <2 x i64> %3037, <2 x i64>* %3043, align 8, !alias.scope !32, !noalias !29
  %3044 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3033, i64 -2
  %3045 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3044, i64 -1
  %3046 = bitcast %"class.sh::TDeclarator"** %3045 to <2 x i64>*
  store <2 x i64> %3041, <2 x i64>* %3046, align 8, !alias.scope !32, !noalias !29
  %3047 = sub nuw nsw i64 -4, %3029
  %3048 = sub nuw nsw i64 -4, %3029
  %3049 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3026, i64 %3047
  %3050 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3027, i64 %3048
  %3051 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3050, i64 -1
  %3052 = bitcast %"class.sh::TDeclarator"** %3051 to <2 x i64>*
  %3053 = load <2 x i64>, <2 x i64>* %3052, align 8, !alias.scope !29
  %3054 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3050, i64 -2
  %3055 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3054, i64 -1
  %3056 = bitcast %"class.sh::TDeclarator"** %3055 to <2 x i64>*
  %3057 = load <2 x i64>, <2 x i64>* %3056, align 8, !alias.scope !29
  %3058 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3049, i64 -1
  %3059 = bitcast %"class.sh::TDeclarator"** %3058 to <2 x i64>*
  store <2 x i64> %3053, <2 x i64>* %3059, align 8, !alias.scope !32, !noalias !29
  %3060 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3049, i64 -2
  %3061 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3060, i64 -1
  %3062 = bitcast %"class.sh::TDeclarator"** %3061 to <2 x i64>*
  store <2 x i64> %3057, <2 x i64>* %3062, align 8, !alias.scope !32, !noalias !29
  %3063 = add i64 %3029, 8
  %3064 = add i64 %3030, -2
  %3065 = icmp eq i64 %3064, 0
  br i1 %3065, label %3066, label %3028, !llvm.loop !34

3066:                                             ; preds = %3028, %3011
  %3067 = phi i64 [ 0, %3011 ], [ %3063, %3028 ]
  %3068 = icmp eq i64 %3020, 0
  br i1 %3068, label %3088, label %3069

3069:                                             ; preds = %3066
  %3070 = sub i64 0, %3067
  %3071 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2977, i64 -1
  %3072 = sub i64 0, %3067
  %3073 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %2988, i64 -1
  %3074 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3071, i64 %3070
  %3075 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3073, i64 %3072
  %3076 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3075, i64 -1
  %3077 = bitcast %"class.sh::TDeclarator"** %3076 to <2 x i64>*
  %3078 = load <2 x i64>, <2 x i64>* %3077, align 8, !alias.scope !29
  %3079 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3075, i64 -2
  %3080 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3079, i64 -1
  %3081 = bitcast %"class.sh::TDeclarator"** %3080 to <2 x i64>*
  %3082 = load <2 x i64>, <2 x i64>* %3081, align 8, !alias.scope !29
  %3083 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3074, i64 -1
  %3084 = bitcast %"class.sh::TDeclarator"** %3083 to <2 x i64>*
  store <2 x i64> %3078, <2 x i64>* %3084, align 8, !alias.scope !32, !noalias !29
  %3085 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3074, i64 -2
  %3086 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3085, i64 -1
  %3087 = bitcast %"class.sh::TDeclarator"** %3086 to <2 x i64>*
  store <2 x i64> %3082, <2 x i64>* %3087, align 8, !alias.scope !32, !noalias !29
  br label %3088

3088:                                             ; preds = %3066, %3069
  %3089 = icmp eq i64 %2995, %3012
  br i1 %3089, label %3160, label %3090

3090:                                             ; preds = %3088, %2997, %2990
  %3091 = phi %"class.sh::TDeclarator"** [ %2977, %2997 ], [ %2977, %2990 ], [ %3014, %3088 ]
  %3092 = phi %"class.sh::TDeclarator"** [ %2988, %2997 ], [ %2988, %2990 ], [ %3016, %3088 ]
  %3093 = getelementptr %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3092, i64 -1
  %3094 = ptrtoint %"class.sh::TDeclarator"** %3093 to i64
  %3095 = sub i64 %3094, %2987
  %3096 = lshr i64 %3095, 3
  %3097 = add nuw nsw i64 %3096, 1
  %3098 = and i64 %3097, 7
  %3099 = icmp eq i64 %3098, 0
  br i1 %3099, label %3111, label %3100

3100:                                             ; preds = %3090, %3100
  %3101 = phi %"class.sh::TDeclarator"** [ %3104, %3100 ], [ %3091, %3090 ]
  %3102 = phi %"class.sh::TDeclarator"** [ %3105, %3100 ], [ %3092, %3090 ]
  %3103 = phi i64 [ %3109, %3100 ], [ %3098, %3090 ]
  %3104 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3101, i64 -1
  %3105 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3102, i64 -1
  %3106 = bitcast %"class.sh::TDeclarator"** %3105 to i64*
  %3107 = load i64, i64* %3106, align 8
  %3108 = bitcast %"class.sh::TDeclarator"** %3104 to i64*
  store i64 %3107, i64* %3108, align 8
  %3109 = add i64 %3103, -1
  %3110 = icmp eq i64 %3109, 0
  br i1 %3110, label %3111, label %3100, !llvm.loop !35

3111:                                             ; preds = %3100, %3090
  %3112 = phi %"class.sh::TDeclarator"** [ undef, %3090 ], [ %3104, %3100 ]
  %3113 = phi %"class.sh::TDeclarator"** [ %3091, %3090 ], [ %3104, %3100 ]
  %3114 = phi %"class.sh::TDeclarator"** [ %3092, %3090 ], [ %3105, %3100 ]
  %3115 = icmp ult i64 %3095, 56
  br i1 %3115, label %3160, label %3116

3116:                                             ; preds = %3111, %3116
  %3117 = phi %"class.sh::TDeclarator"** [ %3154, %3116 ], [ %3113, %3111 ]
  %3118 = phi %"class.sh::TDeclarator"** [ %3155, %3116 ], [ %3114, %3111 ]
  %3119 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3117, i64 -1
  %3120 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3118, i64 -1
  %3121 = bitcast %"class.sh::TDeclarator"** %3120 to i64*
  %3122 = load i64, i64* %3121, align 8
  %3123 = bitcast %"class.sh::TDeclarator"** %3119 to i64*
  store i64 %3122, i64* %3123, align 8
  %3124 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3117, i64 -2
  %3125 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3118, i64 -2
  %3126 = bitcast %"class.sh::TDeclarator"** %3125 to i64*
  %3127 = load i64, i64* %3126, align 8
  %3128 = bitcast %"class.sh::TDeclarator"** %3124 to i64*
  store i64 %3127, i64* %3128, align 8
  %3129 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3117, i64 -3
  %3130 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3118, i64 -3
  %3131 = bitcast %"class.sh::TDeclarator"** %3130 to i64*
  %3132 = load i64, i64* %3131, align 8
  %3133 = bitcast %"class.sh::TDeclarator"** %3129 to i64*
  store i64 %3132, i64* %3133, align 8
  %3134 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3117, i64 -4
  %3135 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3118, i64 -4
  %3136 = bitcast %"class.sh::TDeclarator"** %3135 to i64*
  %3137 = load i64, i64* %3136, align 8
  %3138 = bitcast %"class.sh::TDeclarator"** %3134 to i64*
  store i64 %3137, i64* %3138, align 8
  %3139 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3117, i64 -5
  %3140 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3118, i64 -5
  %3141 = bitcast %"class.sh::TDeclarator"** %3140 to i64*
  %3142 = load i64, i64* %3141, align 8
  %3143 = bitcast %"class.sh::TDeclarator"** %3139 to i64*
  store i64 %3142, i64* %3143, align 8
  %3144 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3117, i64 -6
  %3145 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3118, i64 -6
  %3146 = bitcast %"class.sh::TDeclarator"** %3145 to i64*
  %3147 = load i64, i64* %3146, align 8
  %3148 = bitcast %"class.sh::TDeclarator"** %3144 to i64*
  store i64 %3147, i64* %3148, align 8
  %3149 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3117, i64 -7
  %3150 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3118, i64 -7
  %3151 = bitcast %"class.sh::TDeclarator"** %3150 to i64*
  %3152 = load i64, i64* %3151, align 8
  %3153 = bitcast %"class.sh::TDeclarator"** %3149 to i64*
  store i64 %3152, i64* %3153, align 8
  %3154 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3117, i64 -8
  %3155 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %3118, i64 -8
  %3156 = bitcast %"class.sh::TDeclarator"** %3155 to i64*
  %3157 = load i64, i64* %3156, align 8
  %3158 = bitcast %"class.sh::TDeclarator"** %3154 to i64*
  store i64 %3157, i64* %3158, align 8
  %3159 = icmp eq %"class.sh::TDeclarator"** %3155, %2986
  br i1 %3159, label %3160, label %3116, !llvm.loop !36

3160:                                             ; preds = %3111, %3116, %3088, %2974
  %3161 = phi %"class.sh::TDeclarator"** [ %2977, %2974 ], [ %3014, %3088 ], [ %3112, %3111 ], [ %3154, %3116 ]
  %3162 = ptrtoint %"class.sh::TDeclarator"** %3161 to i64
  store i64 %3162, i64* %2950, align 8
  store i64 %2984, i64* %2949, align 8
  store i64 %2979, i64* %2959, align 8
  br label %3523

3163:                                             ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #8
  %3164 = bitcast %union.YYSTYPE* %326 to i8**
  %3165 = load i8*, i8** %3164, align 8
  store i8* %3165, i8** %100, align 8
  %3166 = icmp eq i8* %3165, null
  br i1 %3166, label %3173, label %3167

3167:                                             ; preds = %3163, %3167
  %3168 = phi i64 [ %3172, %3167 ], [ 0, %3163 ]
  %3169 = getelementptr inbounds i8, i8* %3165, i64 %3168
  %3170 = load i8, i8* %3169, align 1
  %3171 = icmp eq i8 %3170, 0
  %3172 = add i64 %3168, 1
  br i1 %3171, label %3173, label %3167

3173:                                             ; preds = %3167, %3163
  %3174 = phi i64 [ 0, %3163 ], [ %3168, %3167 ]
  store i64 %3174, i64* %101, align 8
  %3175 = call %"class.sh::TDeclarator"* @_ZN2sh13TParseContext21parseStructDeclaratorERKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %56, %"struct.sh::TSourceLoc"* dereferenceable(16) %324) #8
  store %"class.sh::TDeclarator"* %3175, %"class.sh::TDeclarator"** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #8
  br label %3523

3176:                                             ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #8
  %3177 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1
  %3178 = bitcast %union.YYSTYPE* %3177 to i8**
  %3179 = load i8*, i8** %3178, align 8
  store i8* %3179, i8** %95, align 8
  %3180 = icmp eq i8* %3179, null
  br i1 %3180, label %3187, label %3181

3181:                                             ; preds = %3176, %3181
  %3182 = phi i64 [ %3186, %3181 ], [ 0, %3176 ]
  %3183 = getelementptr inbounds i8, i8* %3179, i64 %3182
  %3184 = load i8, i8* %3183, align 1
  %3185 = icmp eq i8 %3184, 0
  %3186 = add i64 %3182, 1
  br i1 %3185, label %3187, label %3181

3187:                                             ; preds = %3181, %3176
  %3188 = phi i64 [ 0, %3176 ], [ %3182, %3181 ]
  store i64 %3188, i64* %96, align 8
  %3189 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %3190 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %3191 = bitcast %union.anon.83* %3190 to %"class.sh::TVector"**
  %3192 = load %"class.sh::TVector"*, %"class.sh::TVector"** %3191, align 8
  %3193 = call %"class.sh::TDeclarator"* @_ZN2sh13TParseContext26parseStructArrayDeclaratorERKNS_15ImmutableStringERKNS_10TSourceLocEPKNS_7TVectorIjEE(%"class.sh::TParseContext"* %0, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %57, %"struct.sh::TSourceLoc"* dereferenceable(16) %3189, %"class.sh::TVector"* %3192) #8
  store %"class.sh::TDeclarator"* %3193, %"class.sh::TDeclarator"** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #8
  br label %3523

3194:                                             ; preds = %410
  %3195 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %3196 = bitcast %union.anon.81* %3195 to i64*
  %3197 = load i64, i64* %3196, align 8
  store i64 %3197, i64* %80, align 8
  br label %3523

3198:                                             ; preds = %410
  %3199 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3200 = bitcast %"class.sh::TIntermNode"** %3199 to i64*
  %3201 = load i64, i64* %3200, align 8
  store i64 %3201, i64* %80, align 8
  br label %3523

3202:                                             ; preds = %410
  %3203 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %3204 = bitcast %union.anon.81* %3203 to i64*
  %3205 = load i64, i64* %3204, align 8
  store i64 %3205, i64* %80, align 8
  br label %3523

3206:                                             ; preds = %410
  %3207 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3208 = bitcast %"class.sh::TIntermNode"** %3207 to i64*
  %3209 = load i64, i64* %3208, align 8
  store i64 %3209, i64* %80, align 8
  br label %3523

3210:                                             ; preds = %410
  %3211 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3212 = bitcast %"class.sh::TIntermNode"** %3211 to i64*
  %3213 = load i64, i64* %3212, align 8
  store i64 %3213, i64* %80, align 8
  br label %3523

3214:                                             ; preds = %410
  %3215 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3216 = bitcast %"class.sh::TIntermNode"** %3215 to i64*
  %3217 = load i64, i64* %3216, align 8
  store i64 %3217, i64* %80, align 8
  br label %3523

3218:                                             ; preds = %410
  %3219 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3220 = bitcast %"class.sh::TIntermNode"** %3219 to i64*
  %3221 = load i64, i64* %3220, align 8
  store i64 %3221, i64* %80, align 8
  br label %3523

3222:                                             ; preds = %410
  %3223 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %3224 = bitcast %union.anon.81* %3223 to i64*
  %3225 = load i64, i64* %3224, align 8
  store i64 %3225, i64* %80, align 8
  br label %3523

3226:                                             ; preds = %410
  %3227 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %3228 = bitcast %union.anon.81* %3227 to i64*
  %3229 = load i64, i64* %3228, align 8
  store i64 %3229, i64* %80, align 8
  br label %3523

3230:                                             ; preds = %410
  %3231 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3232 = bitcast %"class.sh::TIntermNode"** %3231 to i64*
  %3233 = load i64, i64* %3232, align 8
  store i64 %3233, i64* %80, align 8
  br label %3523

3234:                                             ; preds = %410
  %3235 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3236 = bitcast %"class.sh::TIntermNode"** %3235 to i64*
  %3237 = load i64, i64* %3236, align 8
  store i64 %3237, i64* %80, align 8
  br label %3523

3238:                                             ; preds = %410
  %3239 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %3240 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %3239, i64 64) #8
  %3241 = bitcast i8* %3240 to i32 (...)***
  %3242 = getelementptr inbounds i8, i8* %3240, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %3242, i8 0, i64 16, i1 false) #8
  %3243 = getelementptr inbounds i8, i8* %3240, i64 24
  %3244 = bitcast i8* %3243 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3241, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3244, align 8
  %3245 = getelementptr inbounds i8, i8* %3240, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %3245, i8 0, i64 25, i1 false) #8
  store i8* %3240, i8** %82, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3242, i8* nonnull align 4 %68, i64 16, i1 false) #8
  br label %3523

3246:                                             ; preds = %410
  %3247 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  call void @_ZN2sh12TSymbolTable4pushEv(%"class.sh::TSymbolTable"* %3247) #8
  br label %3523

3248:                                             ; preds = %410
  %3249 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  call void @_ZN2sh12TSymbolTable3popEv(%"class.sh::TSymbolTable"* %3249) #8
  br label %3523

3250:                                             ; preds = %410
  %3251 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %3252 = getelementptr inbounds %union.anon.81, %union.anon.81* %3251, i64 0, i32 0, i32 0
  %3253 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3252, align 8
  %3254 = getelementptr inbounds %"class.sh::TIntermNode", %"class.sh::TIntermNode"* %3253, i64 0, i32 1
  %3255 = bitcast %"struct.sh::TSourceLoc"* %3254 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3255, i8* nonnull align 4 %68, i64 16, i1 false) #8
  %3256 = bitcast %union.anon.81* %3251 to i64*
  %3257 = load i64, i64* %3256, align 8
  store i64 %3257, i64* %80, align 8
  br label %3523

3258:                                             ; preds = %410
  %3259 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %3260 = bitcast %union.anon.81* %3259 to i64*
  %3261 = load i64, i64* %3260, align 8
  store i64 %3261, i64* %80, align 8
  br label %3523

3262:                                             ; preds = %410
  %3263 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3264 = bitcast %"class.sh::TIntermNode"** %3263 to i64*
  %3265 = load i64, i64* %3264, align 8
  store i64 %3265, i64* %80, align 8
  br label %3523

3266:                                             ; preds = %410
  %3267 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  call void @_ZN2sh12TSymbolTable4pushEv(%"class.sh::TSymbolTable"* %3267) #8
  br label %3523

3268:                                             ; preds = %410
  %3269 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  call void @_ZN2sh12TSymbolTable3popEv(%"class.sh::TSymbolTable"* %3269) #8
  %3270 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %3271 = bitcast %union.anon.81* %3270 to i64*
  %3272 = load i64, i64* %3271, align 8
  store i64 %3272, i64* %80, align 8
  br label %3523

3273:                                             ; preds = %410
  %3274 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  call void @_ZN2sh12TSymbolTable4pushEv(%"class.sh::TSymbolTable"* %3274) #8
  br label %3523

3275:                                             ; preds = %410
  %3276 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  call void @_ZN2sh12TSymbolTable3popEv(%"class.sh::TSymbolTable"* %3276) #8
  %3277 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3278 = bitcast %"class.sh::TIntermNode"** %3277 to i64*
  %3279 = load i64, i64* %3278, align 8
  store i64 %3279, i64* %80, align 8
  br label %3523

3280:                                             ; preds = %410
  %3281 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %3282 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %3281, i64 64) #8
  %3283 = bitcast i8* %3282 to i32 (...)***
  %3284 = getelementptr inbounds i8, i8* %3282, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %3284, i8 0, i64 16, i1 false) #8
  %3285 = getelementptr inbounds i8, i8* %3282, i64 24
  %3286 = bitcast i8* %3285 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3283, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3286, align 8
  %3287 = getelementptr inbounds i8, i8* %3282, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %3287, i8 0, i64 25, i1 false) #8
  store i8* %3282, i8** %82, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3284, i8* nonnull align 4 %68, i64 16, i1 false) #8
  br label %3523

3288:                                             ; preds = %410
  %3289 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 1
  %3290 = getelementptr inbounds %union.anon.81, %union.anon.81* %3289, i64 0, i32 0, i32 0
  %3291 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3290, align 8
  %3292 = getelementptr inbounds %"class.sh::TIntermNode", %"class.sh::TIntermNode"* %3291, i64 0, i32 1
  %3293 = bitcast %"struct.sh::TSourceLoc"* %3292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3293, i8* nonnull align 4 %68, i64 16, i1 false) #8
  %3294 = bitcast %union.anon.81* %3289 to i64*
  %3295 = load i64, i64* %3294, align 8
  store i64 %3295, i64* %80, align 8
  br label %3523

3296:                                             ; preds = %410
  %3297 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %3298 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %3297, i64 64) #8
  %3299 = bitcast i8* %3298 to %"class.sh::TIntermBlock"*
  %3300 = bitcast i8* %3298 to i32 (...)***
  %3301 = getelementptr inbounds i8, i8* %3298, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %3301, i8 0, i64 16, i1 false) #8
  %3302 = getelementptr inbounds i8, i8* %3298, i64 24
  %3303 = bitcast i8* %3302 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3300, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3303, align 8
  %3304 = getelementptr inbounds i8, i8* %3298, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %3304, i8 0, i64 25, i1 false) #8
  store i8* %3298, i8** %82, align 8
  %3305 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3306 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3305, align 8
  call void @_ZN2sh13TParseContext15appendStatementEPNS_12TIntermBlockEPNS_11TIntermNodeE(%"class.sh::TParseContext"* %0, %"class.sh::TIntermBlock"* %3299, %"class.sh::TIntermNode"* %3306) #8
  br label %3523

3307:                                             ; preds = %410
  %3308 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 1
  %3309 = bitcast %union.anon.81* %3308 to %"class.sh::TIntermBlock"**
  %3310 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %3309, align 8
  store %"class.sh::TIntermBlock"* %3310, %"class.sh::TIntermBlock"** %81, align 8
  %3311 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3312 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3311, align 8
  call void @_ZN2sh13TParseContext15appendStatementEPNS_12TIntermBlockEPNS_11TIntermNodeE(%"class.sh::TParseContext"* %0, %"class.sh::TIntermBlock"* %3310, %"class.sh::TIntermNode"* %3312) #8
  br label %3523

3313:                                             ; preds = %410
  %3314 = call %"class.sh::TIntermNode"* @_ZN2sh13TParseContext17addEmptyStatementERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* nonnull dereferenceable(16) %12) #8
  store %"class.sh::TIntermNode"* %3314, %"class.sh::TIntermNode"** %83, align 8
  br label %3523

3315:                                             ; preds = %410
  %3316 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 1
  %3317 = bitcast %union.anon.81* %3316 to i64*
  %3318 = load i64, i64* %3317, align 8
  store i64 %3318, i64* %80, align 8
  br label %3523

3319:                                             ; preds = %410
  %3320 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %3321 = bitcast %union.anon.81* %3320 to %"class.sh::TIntermTyped"**
  %3322 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %3321, align 8
  %3323 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3324 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3323, align 8
  %3325 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 1
  %3326 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3325, align 8
  %3327 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -4
  %3328 = call %"class.sh::TIntermNode"* @_ZN2sh13TParseContext9addIfElseEPNS_12TIntermTypedENS_15TIntermNodePairERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TIntermTyped"* %3322, %"class.sh::TIntermNode"* %3324, %"class.sh::TIntermNode"* %3326, %"struct.sh::TSourceLoc"* dereferenceable(16) %3327) #8
  store %"class.sh::TIntermNode"* %3328, %"class.sh::TIntermNode"** %83, align 8
  br label %3523

3329:                                             ; preds = %410
  %3330 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1, i32 0, i32 0
  %3331 = bitcast %"class.sh::TIntermNode"** %3330 to i64*
  %3332 = load i64, i64* %3331, align 8
  store i64 %3332, i64* %80, align 8
  %3333 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3334 = bitcast %"class.sh::TIntermNode"** %3333 to i64*
  %3335 = load i64, i64* %3334, align 8
  store i64 %3335, i64* %85, align 8
  br label %3523

3336:                                             ; preds = %410
  %3337 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3338 = bitcast %"class.sh::TIntermNode"** %3337 to i64*
  %3339 = load i64, i64* %3338, align 8
  store i64 %3339, i64* %80, align 8
  store %"class.sh::TIntermNode"* null, %"class.sh::TIntermNode"** %84, align 8
  br label %3523

3340:                                             ; preds = %410
  %3341 = load i32, i32* %93, align 8
  %3342 = add nsw i32 %3341, 1
  store i32 %3342, i32* %93, align 8
  br label %3523

3343:                                             ; preds = %410
  %3344 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -3, i32 0, i32 1
  %3345 = bitcast %union.anon.81* %3344 to %"class.sh::TIntermTyped"**
  %3346 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %3345, align 8
  %3347 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %3348 = bitcast %union.anon.81* %3347 to %"class.sh::TIntermBlock"**
  %3349 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %3348, align 8
  %3350 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -5
  %3351 = call %"class.sh::TIntermSwitch"* @_ZN2sh13TParseContext9addSwitchEPNS_12TIntermTypedEPNS_12TIntermBlockERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TIntermTyped"* %3346, %"class.sh::TIntermBlock"* %3349, %"struct.sh::TSourceLoc"* dereferenceable(16) %3350) #8
  store %"class.sh::TIntermSwitch"* %3351, %"class.sh::TIntermSwitch"** %92, align 8
  %3352 = load i32, i32* %93, align 8
  %3353 = add nsw i32 %3352, -1
  store i32 %3353, i32* %93, align 8
  br label %3523

3354:                                             ; preds = %410
  %3355 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 1
  %3356 = bitcast %union.anon.81* %3355 to %"class.sh::TIntermTyped"**
  %3357 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %3356, align 8
  %3358 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  %3359 = call %"class.sh::TIntermCase"* @_ZN2sh13TParseContext7addCaseEPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TIntermTyped"* %3357, %"struct.sh::TSourceLoc"* dereferenceable(16) %3358) #8
  store %"class.sh::TIntermCase"* %3359, %"class.sh::TIntermCase"** %91, align 8
  br label %3523

3360:                                             ; preds = %410
  %3361 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %3362 = call %"class.sh::TIntermCase"* @_ZN2sh13TParseContext10addDefaultERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %3361) #8
  store %"class.sh::TIntermCase"* %3362, %"class.sh::TIntermCase"** %91, align 8
  br label %3523

3363:                                             ; preds = %410
  %3364 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %3365 = bitcast %union.anon.81* %3364 to i64*
  %3366 = load i64, i64* %3365, align 8
  store i64 %3366, i64* %80, align 8
  %3367 = getelementptr inbounds %union.anon.81, %union.anon.81* %3364, i64 0, i32 0, i32 0
  %3368 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3367, align 8
  %3369 = getelementptr inbounds %"class.sh::TIntermNode", %"class.sh::TIntermNode"* %3368, i64 0, i32 1
  %3370 = bitcast %"class.sh::TIntermNode"* %3368 to %"class.sh::TIntermTyped"*
  %3371 = call zeroext i1 @_ZN2sh13TParseContext17checkIsScalarBoolERKNS_10TSourceLocEPKNS_12TIntermTypedE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %3369, %"class.sh::TIntermTyped"* %3370) #8
  br label %3523

3372:                                             ; preds = %410
  %3373 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -3, i32 0, i32 2, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #8
  %3374 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2
  %3375 = bitcast %union.YYSTYPE* %3374 to i8**
  %3376 = load i8*, i8** %3375, align 8
  store i8* %3376, i8** %89, align 8
  %3377 = icmp eq i8* %3376, null
  br i1 %3377, label %3384, label %3378

3378:                                             ; preds = %3372, %3378
  %3379 = phi i64 [ %3383, %3378 ], [ 0, %3372 ]
  %3380 = getelementptr inbounds i8, i8* %3376, i64 %3379
  %3381 = load i8, i8* %3380, align 1
  %3382 = icmp eq i8 %3381, 0
  %3383 = add i64 %3379, 1
  br i1 %3382, label %3384, label %3378

3384:                                             ; preds = %3378, %3372
  %3385 = phi i64 [ 0, %3372 ], [ %3379, %3378 ]
  store i64 %3385, i64* %90, align 8
  %3386 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %3387 = bitcast %union.anon.81* %3386 to %"class.sh::TIntermTyped"**
  %3388 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %3387, align 8
  %3389 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  %3390 = call %"class.sh::TIntermNode"* @_ZN2sh13TParseContext23addConditionInitializerERKNS_11TPublicTypeERKNS_15ImmutableStringEPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %3373, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %58, %"class.sh::TIntermTyped"* %3388, %"struct.sh::TSourceLoc"* dereferenceable(16) %3389) #8
  store %"class.sh::TIntermNode"* %3390, %"class.sh::TIntermNode"** %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #8
  br label %3523

3391:                                             ; preds = %410
  %3392 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  call void @_ZN2sh12TSymbolTable4pushEv(%"class.sh::TSymbolTable"* %3392) #8
  %3393 = load i32, i32* %87, align 8
  %3394 = add nsw i32 %3393, 1
  store i32 %3394, i32* %87, align 8
  br label %3523

3395:                                             ; preds = %410
  %3396 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  call void @_ZN2sh12TSymbolTable3popEv(%"class.sh::TSymbolTable"* %3396) #8
  %3397 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1, i32 0, i32 0
  %3398 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3397, align 8
  %3399 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3400 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3399, align 8
  %3401 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -5
  %3402 = call %"class.sh::TIntermNode"* @_ZN2sh13TParseContext7addLoopENS_9TLoopTypeEPNS_11TIntermNodeES3_PNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i32 1, %"class.sh::TIntermNode"* null, %"class.sh::TIntermNode"* %3398, %"class.sh::TIntermTyped"* null, %"class.sh::TIntermNode"* %3400, %"struct.sh::TSourceLoc"* dereferenceable(16) %3401) #8
  store %"class.sh::TIntermNode"* %3402, %"class.sh::TIntermNode"** %83, align 8
  %3403 = load i32, i32* %87, align 8
  %3404 = add nsw i32 %3403, -1
  store i32 %3404, i32* %87, align 8
  br label %3523

3405:                                             ; preds = %410
  %3406 = load i32, i32* %87, align 8
  %3407 = add nsw i32 %3406, 1
  store i32 %3407, i32* %87, align 8
  br label %3523

3408:                                             ; preds = %410
  %3409 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1, i32 0, i32 0
  %3410 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3409, align 8
  %3411 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -5, i32 0, i32 1, i32 0, i32 0
  %3412 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3411, align 8
  %3413 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -4
  %3414 = call %"class.sh::TIntermNode"* @_ZN2sh13TParseContext7addLoopENS_9TLoopTypeEPNS_11TIntermNodeES3_PNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i32 2, %"class.sh::TIntermNode"* null, %"class.sh::TIntermNode"* %3410, %"class.sh::TIntermTyped"* null, %"class.sh::TIntermNode"* %3412, %"struct.sh::TSourceLoc"* dereferenceable(16) %3413) #8
  store %"class.sh::TIntermNode"* %3414, %"class.sh::TIntermNode"** %83, align 8
  %3415 = load i32, i32* %87, align 8
  %3416 = add nsw i32 %3415, -1
  store i32 %3416, i32* %87, align 8
  br label %3523

3417:                                             ; preds = %410
  %3418 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  call void @_ZN2sh12TSymbolTable4pushEv(%"class.sh::TSymbolTable"* %3418) #8
  %3419 = load i32, i32* %87, align 8
  %3420 = add nsw i32 %3419, 1
  store i32 %3420, i32* %87, align 8
  br label %3523

3421:                                             ; preds = %410
  %3422 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %86, align 8
  call void @_ZN2sh12TSymbolTable3popEv(%"class.sh::TSymbolTable"* %3422) #8
  %3423 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -3, i32 0, i32 1, i32 0, i32 0
  %3424 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3423, align 8
  %3425 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1, i32 0, i32 0
  %3426 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3425, align 8
  %3427 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1, i32 0, i32 1
  %3428 = bitcast %"class.sh::TIntermNode"** %3427 to %"class.sh::TIntermTyped"**
  %3429 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %3428, align 8
  %3430 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3431 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3430, align 8
  %3432 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -6
  %3433 = call %"class.sh::TIntermNode"* @_ZN2sh13TParseContext7addLoopENS_9TLoopTypeEPNS_11TIntermNodeES3_PNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i32 0, %"class.sh::TIntermNode"* %3424, %"class.sh::TIntermNode"* %3426, %"class.sh::TIntermTyped"* %3429, %"class.sh::TIntermNode"* %3431, %"struct.sh::TSourceLoc"* dereferenceable(16) %3432) #8
  store %"class.sh::TIntermNode"* %3433, %"class.sh::TIntermNode"** %83, align 8
  %3434 = load i32, i32* %87, align 8
  %3435 = add nsw i32 %3434, -1
  store i32 %3435, i32* %87, align 8
  br label %3523

3436:                                             ; preds = %410
  %3437 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3438 = bitcast %"class.sh::TIntermNode"** %3437 to i64*
  %3439 = load i64, i64* %3438, align 8
  store i64 %3439, i64* %80, align 8
  br label %3523

3440:                                             ; preds = %410
  %3441 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3442 = bitcast %"class.sh::TIntermNode"** %3441 to i64*
  %3443 = load i64, i64* %3442, align 8
  store i64 %3443, i64* %80, align 8
  br label %3523

3444:                                             ; preds = %410
  %3445 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3446 = bitcast %"class.sh::TIntermNode"** %3445 to i64*
  %3447 = load i64, i64* %3446, align 8
  store i64 %3447, i64* %80, align 8
  br label %3523

3448:                                             ; preds = %410
  store %"class.sh::TIntermNode"* null, %"class.sh::TIntermNode"** %83, align 8
  br label %3523

3449:                                             ; preds = %410
  %3450 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 1, i32 0, i32 0
  %3451 = bitcast %"class.sh::TIntermNode"** %3450 to i64*
  %3452 = load i64, i64* %3451, align 8
  store i64 %3452, i64* %80, align 8
  store %"class.sh::TIntermNode"* null, %"class.sh::TIntermNode"** %84, align 8
  br label %3523

3453:                                             ; preds = %410
  %3454 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1, i32 0, i32 0
  %3455 = bitcast %"class.sh::TIntermNode"** %3454 to i64*
  %3456 = load i64, i64* %3455, align 8
  store i64 %3456, i64* %80, align 8
  %3457 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %3458 = bitcast %union.anon.81* %3457 to i64*
  %3459 = load i64, i64* %3458, align 8
  store i64 %3459, i64* %85, align 8
  br label %3523

3460:                                             ; preds = %410
  %3461 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %3462 = call %"class.sh::TIntermBranch"* @_ZN2sh13TParseContext9addBranchE9TOperatorRKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext -120, %"struct.sh::TSourceLoc"* dereferenceable(16) %3461) #8
  %3463 = getelementptr inbounds %"class.sh::TIntermBranch", %"class.sh::TIntermBranch"* %3462, i64 0, i32 0
  store %"class.sh::TIntermNode"* %3463, %"class.sh::TIntermNode"** %83, align 8
  br label %3523

3464:                                             ; preds = %410
  %3465 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %3466 = call %"class.sh::TIntermBranch"* @_ZN2sh13TParseContext9addBranchE9TOperatorRKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext -121, %"struct.sh::TSourceLoc"* dereferenceable(16) %3465) #8
  %3467 = getelementptr inbounds %"class.sh::TIntermBranch", %"class.sh::TIntermBranch"* %3466, i64 0, i32 0
  store %"class.sh::TIntermNode"* %3467, %"class.sh::TIntermNode"** %83, align 8
  br label %3523

3468:                                             ; preds = %410
  %3469 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %3470 = call %"class.sh::TIntermBranch"* @_ZN2sh13TParseContext9addBranchE9TOperatorRKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext -122, %"struct.sh::TSourceLoc"* dereferenceable(16) %3469) #8
  %3471 = getelementptr inbounds %"class.sh::TIntermBranch", %"class.sh::TIntermBranch"* %3470, i64 0, i32 0
  store %"class.sh::TIntermNode"* %3471, %"class.sh::TIntermNode"** %83, align 8
  br label %3523

3472:                                             ; preds = %410
  %3473 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -1, i32 0, i32 1
  %3474 = bitcast %union.anon.81* %3473 to %"class.sh::TIntermTyped"**
  %3475 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %3474, align 8
  %3476 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  %3477 = call %"class.sh::TIntermBranch"* @_ZN2sh13TParseContext9addBranchE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext -122, %"class.sh::TIntermTyped"* %3475, %"struct.sh::TSourceLoc"* dereferenceable(16) %3476) #8
  %3478 = getelementptr inbounds %"class.sh::TIntermBranch", %"class.sh::TIntermBranch"* %3477, i64 0, i32 0
  store %"class.sh::TIntermNode"* %3478, %"class.sh::TIntermNode"** %83, align 8
  br label %3523

3479:                                             ; preds = %410
  %3480 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -1
  %3481 = call %"class.sh::TIntermBranch"* @_ZN2sh13TParseContext9addBranchE9TOperatorRKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext -123, %"struct.sh::TSourceLoc"* dereferenceable(16) %3480) #8
  %3482 = getelementptr inbounds %"class.sh::TIntermBranch", %"class.sh::TIntermBranch"* %3481, i64 0, i32 0
  store %"class.sh::TIntermNode"* %3482, %"class.sh::TIntermNode"** %83, align 8
  br label %3523

3483:                                             ; preds = %410
  %3484 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %3485 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %3484, i64 64) #8
  %3486 = bitcast i8* %3485 to i32 (...)***
  %3487 = getelementptr inbounds i8, i8* %3485, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %3487, i8 0, i64 16, i1 false) #8
  %3488 = getelementptr inbounds i8, i8* %3485, i64 24
  %3489 = bitcast i8* %3488 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3486, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3489, align 8
  %3490 = getelementptr inbounds i8, i8* %3485, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %3490, i8 0, i64 25, i1 false) #8
  store i8* %3485, i8** %82, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3487, i8* nonnull align 4 %68, i64 16, i1 false) #8
  %3491 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %81, align 8
  %3492 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3493 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3492, align 8
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %3491, %"class.sh::TIntermNode"* %3493) #8
  %3494 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %81, align 8
  call void @_ZN2sh13TParseContext11setTreeRootEPNS_12TIntermBlockE(%"class.sh::TParseContext"* %0, %"class.sh::TIntermBlock"* %3494) #8
  br label %3523

3495:                                             ; preds = %410
  %3496 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %81, align 8
  %3497 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3498 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3497, align 8
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %3496, %"class.sh::TIntermNode"* %3498) #8
  br label %3523

3499:                                             ; preds = %410
  %3500 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3501 = bitcast %"class.sh::TIntermNode"** %3500 to i64*
  %3502 = load i64, i64* %3501, align 8
  store i64 %3502, i64* %80, align 8
  br label %3523

3503:                                             ; preds = %410
  %3504 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %3505 = bitcast %"class.sh::TIntermNode"** %3504 to i64*
  %3506 = load i64, i64* %3505, align 8
  store i64 %3506, i64* %80, align 8
  br label %3523

3507:                                             ; preds = %410
  %3508 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 2
  %3509 = bitcast %union.anon.83* %3508 to %"class.sh::TFunction"**
  %3510 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %3509, align 8
  %3511 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %3512 = bitcast %union.anon.81* %3511 to %"class.sh::TIntermFunctionPrototype"**
  call void @_ZN2sh13TParseContext29parseFunctionDefinitionHeaderERKNS_10TSourceLocEPKNS_9TFunctionEPPNS_24TIntermFunctionPrototypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %324, %"class.sh::TFunction"* %3510, %"class.sh::TIntermFunctionPrototype"** %3512) #8
  br label %3523

3513:                                             ; preds = %410
  %3514 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 -2, i32 0, i32 1
  %3515 = bitcast %union.anon.81* %3514 to %"class.sh::TIntermFunctionPrototype"**
  %3516 = load %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermFunctionPrototype"** %3515, align 8
  %3517 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 0, i32 0, i32 1
  %3518 = bitcast %union.anon.81* %3517 to %"class.sh::TIntermBlock"**
  %3519 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %3518, align 8
  %3520 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %324, i64 -2
  %3521 = call %"class.sh::TIntermFunctionDefinition"* @_ZN2sh13TParseContext21addFunctionDefinitionEPNS_24TIntermFunctionPrototypeEPNS_12TIntermBlockERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TIntermFunctionPrototype"* %3516, %"class.sh::TIntermBlock"* %3519, %"struct.sh::TSourceLoc"* dereferenceable(16) %3520) #8
  %3522 = getelementptr inbounds %"class.sh::TIntermFunctionDefinition", %"class.sh::TIntermFunctionDefinition"* %3521, i64 0, i32 0
  store %"class.sh::TIntermNode"* %3522, %"class.sh::TIntermNode"** %83, align 8
  br label %3523

3523:                                             ; preds = %3160, %2940, %2928, %2708, %2283, %2087, %2069, %1873, %1245, %410, %1287, %1303, %1269, %3513, %3507, %3503, %3499, %3495, %3483, %3479, %3472, %3468, %3464, %3460, %3453, %3449, %3448, %3444, %3440, %3436, %3421, %3417, %3408, %3405, %3395, %3391, %3384, %3363, %3360, %3354, %3343, %3340, %3336, %3329, %3319, %3315, %3313, %3307, %3296, %3288, %3280, %3275, %3273, %3268, %3266, %3262, %3258, %3250, %3248, %3246, %3238, %3234, %3230, %3226, %3222, %3218, %3214, %3210, %3206, %3202, %3198, %3194, %3187, %3173, %2687, %2681, %2673, %2668, %2663, %2662, %2657, %2642, %2625, %2622, %2620, %2618, %2610, %2602, %2594, %2586, %2578, %2570, %2562, %2554, %2546, %2544, %2542, %2540, %2538, %2536, %2534, %2532, %2530, %2528, %2526, %2524, %2522, %2517, %2512, %2507, %2502, %2494, %2486, %2484, %2482, %2480, %2472, %2464, %2456, %2454, %2452, %2450, %2448, %2446, %2444, %2436, %2428, %2420, %2418, %2416, %2414, %2412, %2410, %2408, %2400, %2392, %2384, %2382, %2380, %2378, %2376, %2374, %2372, %2367, %2365, %2363, %2361, %2359, %2357, %2355, %2353, %2351, %2349, %2347, %2345, %2343, %2341, %2339, %2337, %2335, %2333, %2331, %2329, %2327, %2325, %2323, %2321, %2319, %2317, %2304, %2291, %1849, %1844, %1843, %1838, %1822, %1809, %1794, %1791, %1787, %1786, %1785, %1784, %1777, %1769, %1762, %1750, %1742, %1734, %1726, %1718, %1715, %1708, %1700, %1686, %1679, %1676, %1673, %1665, %1662, %1655, %1641, %1634, %1624, %1614, %1604, %1598, %1591, %1586, %1585, %1581, %1580, %1575, %1572, %1565, %1540, %1515, %1498, %1482, %1475, %1451, %1427, %1411, %1398, %1393, %1388, %1379, %1374, %1365, %1355, %1339, %1323, %1241, %1237, %1232, %1225, %1206, %1197, %1145, %1091, %1054, %1050, %1043, %1040, %1022, %1013, %1009, %1008, %1003, %998, %993, %988, %983, %982, %981, %976, %975, %974, %963, %959, %947, %943, %934, %930, %921, %917, %908, %904, %895, %886, %877, %868, %859, %850, %841, %832, %828, %819, %810, %801, %792, %788, %779, %765, %756, %747, %738, %734, %725, %711, %702, %698, %697, %692, %691, %690, %682, %676, %670, %666, %660, %644, %631, %627, %620, %613, %609, %605, %601, %597, %590, %582, %577, %571, %566, %561, %558, %540, %531, %527, %523, %516, %466, %455, %444, %433, %429, %423
  %3524 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %326, i64 1
  %3525 = getelementptr inbounds i16, i16* %328, i64 %393
  %3526 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3524, i64 %393
  %3527 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3526, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3527, i8* nonnull align 8 %67, i64 184, i1 false)
  %3528 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %394, i64 1
  %3529 = bitcast %"struct.sh::TSourceLoc"* %3528 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3529, i8* nonnull align 4 %68, i64 16, i1 false)
  %3530 = getelementptr inbounds [327 x i16], [327 x i16]* @_ZL4yyr1, i64 0, i64 %386
  %3531 = load i16, i16* %3530, align 2
  %3532 = zext i16 %3531 to i64
  %3533 = add nsw i64 %3532, -182
  %3534 = getelementptr inbounds [96 x i16], [96 x i16]* @_ZL7yypgoto, i64 0, i64 %3533
  %3535 = load i16, i16* %3534, align 2
  %3536 = sext i16 %3535 to i32
  %3537 = load i16, i16* %3525, align 2
  %3538 = sext i16 %3537 to i32
  %3539 = add nsw i32 %3538, %3536
  %3540 = icmp ult i32 %3539, 3501
  br i1 %3540, label %3541, label %3548

3541:                                             ; preds = %3523
  %3542 = sext i32 %3539 to i64
  %3543 = getelementptr inbounds [3501 x i16], [3501 x i16]* @_ZL7yycheck, i64 0, i64 %3542
  %3544 = load i16, i16* %3543, align 2
  %3545 = icmp eq i16 %3544, %3537
  br i1 %3545, label %3546, label %3548

3546:                                             ; preds = %3541
  %3547 = getelementptr inbounds [3501 x i16], [3501 x i16]* @_ZL7yytable, i64 0, i64 %3542
  br label %3550

3548:                                             ; preds = %3541, %3523
  %3549 = getelementptr inbounds [96 x i16], [96 x i16]* @_ZL9yydefgoto, i64 0, i64 %3533
  br label %3550

3550:                                             ; preds = %3548, %3546
  %3551 = phi i16* [ %3547, %3546 ], [ %3549, %3548 ]
  %3552 = load i16, i16* %3551, align 2
  %3553 = sext i16 %3552 to i32
  br label %248

3554:                                             ; preds = %377
  %3555 = icmp eq i32 %264, 0
  br i1 %3555, label %3556, label %3558

3556:                                             ; preds = %3554
  call void @_Z7yyerrorPN2sh10TSourceLocEPNS_13TParseContextEPvPKc(%"struct.sh::TSourceLoc"* nonnull %7, %"class.sh::TParseContext"* %0, i8* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0)) #8
  %3557 = load <2 x i32>, <2 x i32>* %247, align 8
  br label %3565

3558:                                             ; preds = %3554
  %3559 = load <2 x i32>, <2 x i32>* %246, align 8
  %3560 = icmp eq i32 %264, 3
  br i1 %3560, label %3561, label %3565

3561:                                             ; preds = %3558
  %3562 = icmp slt i32 %378, 1
  br i1 %3562, label %3563, label %3565

3563:                                             ; preds = %3561
  %3564 = icmp eq i32 %378, 0
  br i1 %3564, label %3613, label %3565

3565:                                             ; preds = %3561, %3556, %3558, %3563
  %3566 = phi i32 [ %378, %3563 ], [ %378, %3558 ], [ %378, %3556 ], [ -2, %3561 ]
  %3567 = phi <2 x i32> [ %3559, %3563 ], [ %3559, %3558 ], [ %3557, %3556 ], [ %3559, %3561 ]
  br label %3568

3568:                                             ; preds = %3592, %3565
  %3569 = phi i16 [ %334, %3565 ], [ %3601, %3592 ]
  %3570 = phi %"struct.sh::TSourceLoc"* [ %324, %3565 ], [ %3597, %3592 ]
  %3571 = phi %union.YYSTYPE* [ %326, %3565 ], [ %3595, %3592 ]
  %3572 = phi i16* [ %328, %3565 ], [ %3596, %3592 ]
  %3573 = phi <2 x i32> [ %3567, %3565 ], [ %3594, %3592 ]
  %3574 = icmp eq i16 %3569, -393
  br i1 %3574, label %3590, label %3575

3575:                                             ; preds = %3568
  %3576 = sext i16 %3569 to i32
  %3577 = add nsw i32 %3576, 1
  %3578 = icmp sgt i16 %3569, -2
  %3579 = icmp slt i32 %3577, 3501
  %3580 = and i1 %3578, %3579
  br i1 %3580, label %3581, label %3590

3581:                                             ; preds = %3575
  %3582 = sext i32 %3577 to i64
  %3583 = getelementptr inbounds [3501 x i16], [3501 x i16]* @_ZL7yycheck, i64 0, i64 %3582
  %3584 = load i16, i16* %3583, align 2
  %3585 = icmp eq i16 %3584, 1
  br i1 %3585, label %3586, label %3590

3586:                                             ; preds = %3581
  %3587 = getelementptr inbounds [3501 x i16], [3501 x i16]* @_ZL7yytable, i64 0, i64 %3582
  %3588 = load i16, i16* %3587, align 2
  %3589 = icmp sgt i16 %3588, 0
  br i1 %3589, label %3602, label %3590

3590:                                             ; preds = %3575, %3581, %3586, %3568
  %3591 = icmp eq i16* %3572, %329
  br i1 %3591, label %3613, label %3592

3592:                                             ; preds = %3590
  %3593 = bitcast %"struct.sh::TSourceLoc"* %3570 to <2 x i32>*
  %3594 = load <2 x i32>, <2 x i32>* %3593, align 4
  %3595 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3571, i64 -1
  %3596 = getelementptr inbounds i16, i16* %3572, i64 -1
  %3597 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %3570, i64 -1
  %3598 = load i16, i16* %3596, align 2
  %3599 = sext i16 %3598 to i64
  %3600 = getelementptr inbounds [450 x i16], [450 x i16]* @_ZL6yypact, i64 0, i64 %3599
  %3601 = load i16, i16* %3600, align 2
  br label %3568

3602:                                             ; preds = %3586
  %3603 = sext i16 %3588 to i32
  %3604 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3571, i64 1
  %3605 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3604, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3605, i8* nonnull align 8 %60, i64 184, i1 false)
  %3606 = load i32, i32* %62, align 8
  %3607 = load i32, i32* %63, align 4
  %3608 = extractelement <2 x i32> %3573, i32 0
  store i32 %3608, i32* %69, align 4
  %3609 = extractelement <2 x i32> %3573, i32 1
  store i32 %3609, i32* %70, align 4
  store i32 %3606, i32* %71, align 4
  store i32 %3607, i32* %72, align 4
  %3610 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %3570, i64 1
  %3611 = bitcast %"struct.sh::TSourceLoc"* %3610 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3611, i8* nonnull align 4 %68, i64 16, i1 false)
  br label %248

3612:                                             ; preds = %271, %278
  call void @_Z7yyerrorPN2sh10TSourceLocEPNS_13TParseContextEPvPKc(%"struct.sh::TSourceLoc"* nonnull %7, %"class.sh::TParseContext"* %0, i8* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.65, i64 0, i64 0)) #8
  br label %3613

3613:                                             ; preds = %3563, %322, %3590, %3612
  %3614 = phi i16* [ %263, %3612 ], [ %329, %3590 ], [ %329, %322 ], [ %329, %3563 ]
  %3615 = phi i32 [ 2, %3612 ], [ 1, %3590 ], [ 1, %3563 ], [ 0, %322 ]
  %3616 = icmp eq i16* %3614, %73
  br i1 %3616, label %3623, label %3619

3617:                                             ; preds = %313
  %3618 = bitcast i8* %284 to i16*
  br label %3619

3619:                                             ; preds = %3617, %3613
  %3620 = phi i32 [ %3615, %3613 ], [ 1, %3617 ]
  %3621 = phi i16* [ %3614, %3613 ], [ %3618, %3617 ]
  %3622 = bitcast i16* %3621 to i8*
  call void @free(i8* %3622) #8
  br label %3623

3623:                                             ; preds = %3619, %3613
  %3624 = phi i32 [ %3620, %3619 ], [ %3615, %3613 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #8
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %67) #8
  call void @llvm.lifetime.end.p0i8(i64 3200, i8* nonnull %66) #8
  call void @llvm.lifetime.end.p0i8(i64 36800, i8* nonnull %65) #8
  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %64) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #8
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %60) #8
  ret i32 %3624
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare i32 @_Z5yylexP7YYSTYPEPN2sh10TSourceLocEPv(%union.YYSTYPE*, %"struct.sh::TSourceLoc"*, i8*) local_unnamed_addr #4

declare %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext23parseVariableIdentifierERKNS_10TSourceLocERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TSymbol"*) local_unnamed_addr #4

declare void @_ZN2sh14TConstantUnionC1Ev(%"class.sh::TConstantUnion"*) unnamed_addr #4

declare %"class.sh::TIntermConstantUnion"* @_ZN2sh13TParseContext16addScalarLiteralEPKNS_14TConstantUnionERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"class.sh::TConstantUnion"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), i8 zeroext) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcRKNS_15ImmutableStringE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, %"class.sh::ImmutableString"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext18addIndexExpressionEPNS_12TIntermTypedERKNS_10TSourceLocES2_(%"class.sh::TParseContext"*, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TIntermTyped"*) local_unnamed_addr #4

declare %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext27addFieldSelectionExpressionEPNS_12TIntermTypedERKNS_10TSourceLocERKNS_15ImmutableStringES5_(%"class.sh::TParseContext"*, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext18addUnaryMathLValueE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext20checkIsScalarIntegerEPNS_12TIntermTypedEPKc(%"class.sh::TParseContext"*, %"class.sh::TIntermTyped"*, i8*) local_unnamed_addr #4

declare %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext23addFunctionCallOrMethodEPNS_15TFunctionLookupERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"class.sh::TFunctionLookup"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, i8*) local_unnamed_addr #4

declare void @_ZN2sh15TFunctionLookup11setThisNodeEPNS_12TIntermTypedE(%"class.sh::TFunctionLookup"*, %"class.sh::TIntermTyped"*) local_unnamed_addr #4

declare void @_ZN2sh15TFunctionLookup11addArgumentEPNS_12TIntermTypedE(%"class.sh::TFunctionLookup"*, %"class.sh::TIntermTyped"*) local_unnamed_addr #4

declare %"class.sh::TFunctionLookup"* @_ZN2sh13TParseContext18addConstructorFuncERKNS_11TPublicTypeE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160)) local_unnamed_addr #4

declare %"class.sh::TFunctionLookup"* @_ZN2sh13TParseContext21addNonConstructorFuncERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::TParseContext"*, %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TSymbol"*) local_unnamed_addr #4

declare %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext12addUnaryMathE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext13addBinaryMathE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext26addBinaryMathBooleanResultE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext19addTernarySelectionEPNS_12TIntermTypedES2_S2_RKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext9addAssignE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext8addCommaEPNS_12TIntermTypedES2_RKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext12checkIsConstEPNS_12TIntermTypedE(%"class.sh::TParseContext"*, %"class.sh::TIntermTyped"*) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext22enterStructDeclarationERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermFunctionPrototype"* @_ZN2sh13TParseContext31addFunctionPrototypeDeclarationERKNS_9TFunctionERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"class.sh::TFunction"* dereferenceable(80), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext30parseDefaultPrecisionQualifierENS_10TPrecisionERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"*, i32, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext17addInterfaceBlockERKNS_21TTypeQualifierBuilderERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_7TVectorIPNS_6TFieldEEES9_S6_PKNSA_IjEES6_(%"class.sh::TParseContext"*, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TVector.22"*, %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TVector"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext26parseGlobalLayoutQualifierERKNS_21TTypeQualifierBuilderE(%"class.sh::TParseContext"*, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32)) local_unnamed_addr #4

declare %"class.sh::TIntermGlobalQualifierDeclaration"* @_ZN2sh13TParseContext31parseGlobalQualifierDeclarationERKNS_21TTypeQualifierBuilderERKNS_10TSourceLocERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::TParseContext"*, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TSymbol"*) local_unnamed_addr #4

declare %"class.sh::TFunction"* @_ZN2sh13TParseContext23parseFunctionDeclaratorERKNS_10TSourceLocEPNS_9TFunctionE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TFunction"*) local_unnamed_addr #4

declare void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"*, %"class.sh::TVariable"*) local_unnamed_addr #4

declare %"class.sh::TFunction"* @_ZN2sh13TParseContext19parseFunctionHeaderERKNS_11TPublicTypeERKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN2sh12TSymbolTable4pushEv(%"class.sh::TSymbolTable"*) local_unnamed_addr #4

declare { i8*, %"class.sh::TType"* } @_ZN2sh13TParseContext24parseParameterDeclaratorERKNS_11TPublicTypeERKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare { i8*, %"class.sh::TType"* } @_ZN2sh13TParseContext29parseParameterArrayDeclaratorERKNS_15ImmutableStringERKNS_10TSourceLocERKNS_7TVectorIjEES6_PNS_11TPublicTypeE(%"class.sh::TParseContext"*, %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TVector"* dereferenceable(24), %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.sh::TPublicType"*) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext30checkIsParameterQualifierValidERKNS_10TSourceLocERKNS_21TTypeQualifierBuilderEPNS_5TTypeE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TTypeQualifierBuilder"* dereferenceable(32), %"class.sh::TType"*) local_unnamed_addr #4

declare void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"*, %"struct.sh::TPublicType"* dereferenceable(160)) unnamed_addr #4

declare void @_ZN2sh13TParseContext15parseDeclaratorERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_18TIntermDeclarationE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TIntermDeclaration"*) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext20parseArrayDeclaratorERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES5_RKNS_7TVectorIjEEPNS_18TIntermDeclarationE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TVector"* dereferenceable(24), %"class.sh::TIntermDeclaration"*) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext24parseArrayInitDeclaratorERKNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES6_RKNS_7TVectorIjEES6_PNS_12TIntermTypedEPNS_18TIntermDeclarationE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TVector"* dereferenceable(24), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TIntermTyped"*, %"class.sh::TIntermDeclaration"*) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext19parseInitDeclaratorERKNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES6_PNS_12TIntermTypedEPNS_18TIntermDeclarationE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TIntermTyped"*, %"class.sh::TIntermDeclaration"*) local_unnamed_addr #4

declare %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext22parseSingleDeclarationERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext27parseSingleArrayDeclarationERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES5_RKNS_7TVectorIjEE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TVector"* dereferenceable(24)) local_unnamed_addr #4

declare %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext31parseSingleArrayInitDeclarationERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES5_RKNS_7TVectorIjEES5_PNS_12TIntermTypedE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TVector"* dereferenceable(24), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TIntermTyped"*) local_unnamed_addr #4

declare %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext26parseSingleInitDeclarationERKNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES6_PNS_12TIntermTypedE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TIntermTyped"*) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext21addFullySpecifiedTypeEPNS_11TPublicTypeE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"*) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext21addFullySpecifiedTypeERKNS_21TTypeQualifierBuilderERKNS_11TPublicTypeE(%"struct.sh::TPublicType"* sret, %"class.sh::TParseContext"*, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32), %"struct.sh::TPublicType"* dereferenceable(160)) local_unnamed_addr #4

declare %"class.sh::TTypeQualifierBuilder"* @_ZN2sh13TParseContext26createTypeQualifierBuilderERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN2sh21TTypeQualifierBuilder15appendQualifierEPKNS_21TQualifierWrapperBaseE(%"class.sh::TTypeQualifierBuilder"*, %"class.sh::TQualifierWrapperBase"*) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext39checkLocalVariableConstStorageQualifierERKNS_21TQualifierWrapperBaseE(%"class.sh::TParseContext"*, %"class.sh::TQualifierWrapperBase"* dereferenceable(24)) local_unnamed_addr #4

declare zeroext i1 @_ZN2sh13TParseContext20checkIsAtGlobalLevelERKNS_10TSourceLocEPKc(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*) local_unnamed_addr #4

declare %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext27parseGlobalStorageQualifierENS_10TQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"*, i32, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext21parseVaryingQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext16parseInQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext17parseOutQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext19parseInOutQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare i32 @_ZNK2sh12TSymbolTable19getDefaultPrecisionENS_10TBasicTypeE(%"class.sh::TSymbolTable"*, i32) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext26checkCanUseLayoutQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext20joinLayoutQualifiersENS_16TLayoutQualifierES1_RKNS_10TSourceLocE(%"struct.sh::TLayoutQualifier"* sret, %"class.sh::TParseContext"*, %"struct.sh::TLayoutQualifier"* byval(%"struct.sh::TLayoutQualifier") align 8, %"struct.sh::TLayoutQualifier"* byval(%"struct.sh::TLayoutQualifier") align 8, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext20parseLayoutQualifierERKNS_15ImmutableStringERKNS_10TSourceLocE(%"struct.sh::TLayoutQualifier"* sret, %"class.sh::TParseContext"*, %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext20parseLayoutQualifierERKNS_15ImmutableStringERKNS_10TSourceLocEiS6_(%"struct.sh::TLayoutQualifier"* sret, %"class.sh::TParseContext"*, %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), i32, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN2sh11TPublicType10initializeERKNS_22TTypeSpecifierNonArrayENS_10TQualifierE(%"struct.sh::TPublicType"*, %"struct.sh::TTypeSpecifierNonArray"* dereferenceable(40), i32) local_unnamed_addr #4

declare zeroext i1 @_ZNK2sh12TSymbolTable13atGlobalLevelEv(%"class.sh::TSymbolTable"*) local_unnamed_addr #4

declare void @_ZN2sh11TPublicType13setArraySizesEPNS_7TVectorIjEE(%"struct.sh::TPublicType"*, %"class.sh::TVector"*) local_unnamed_addr #4

declare i32 @_ZN2sh13TParseContext21checkIsValidArraySizeERKNS_10TSourceLocEPNS_12TIntermTypedE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TIntermTyped"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIj14pool_allocatorIjEE6insertENS_11__wrap_iterIPKjEEOj(%"class.std::__1::vector.17"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = bitcast i32* %1 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  br i1 %15, label %16, label %21

16:                                               ; preds = %14
  %17 = load i32, i32* %2, align 4
  store i32 %17, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %534

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %149

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !37
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !37
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !40, !noalias !37
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !40, !noalias !37
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !37
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !37
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !40, !noalias !37
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !40, !noalias !37
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !37
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !37
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !40, !noalias !37
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !40, !noalias !37
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !37
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !37
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !40, !noalias !37
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !40, !noalias !37
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !42

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !37
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !37
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !40, !noalias !37
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !40, !noalias !37
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !43

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %149, %137
  %140 = phi i32* [ %60, %137 ], [ %154, %149 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %5, i64 %24, i1 false) #8
  br label %156

149:                                              ; preds = %39, %149
  %150 = phi i32* [ %154, %149 ], [ %40, %39 ]
  %151 = phi i32* [ %153, %149 ], [ %41, %39 ]
  %152 = load i32, i32* %151, align 4
  store i32 %152, i32* %150, align 4
  %153 = getelementptr inbounds i32, i32* %151, i64 1
  %154 = getelementptr inbounds i32, i32* %150, i64 1
  %155 = icmp ult i32* %153, %8
  br i1 %155, label %149, label %139, !llvm.loop !44

156:                                              ; preds = %142, %145
  %157 = load i32, i32* %2, align 4
  store i32 %157, i32* %1, align 4
  br label %534

158:                                              ; preds = %3
  %159 = bitcast i32** %7 to i64*
  %160 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = sub i64 %12, %161
  %163 = ashr exact i64 %162, 2
  %164 = add nsw i64 %163, 1
  %165 = icmp ugt i64 %164, 4611686018427387903
  br i1 %165, label %166, label %168

166:                                              ; preds = %158
  %167 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %167) #10
  unreachable

168:                                              ; preds = %158
  %169 = bitcast i32** %9 to i64*
  %170 = sub i64 %13, %161
  %171 = ashr exact i64 %170, 2
  %172 = icmp ult i64 %171, 2305843009213693951
  br i1 %172, label %176, label %173

173:                                              ; preds = %168
  %174 = sub i64 %4, %161
  %175 = ashr exact i64 %174, 2
  br label %183

176:                                              ; preds = %168
  %177 = ashr exact i64 %170, 1
  %178 = icmp ult i64 %177, %164
  %179 = select i1 %178, i64 %164, i64 %177
  %180 = sub i64 %4, %161
  %181 = ashr exact i64 %180, 2
  %182 = icmp eq i64 %179, 0
  br i1 %182, label %190, label %183

183:                                              ; preds = %173, %176
  %184 = phi i64 [ %175, %173 ], [ %181, %176 ]
  %185 = phi i64 [ 4611686018427387903, %173 ], [ %179, %176 ]
  %186 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %187 = shl i64 %185, 2
  %188 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %186, i64 %187) #8
  %189 = bitcast i8* %188 to i32*
  br label %190

190:                                              ; preds = %176, %183
  %191 = phi i64 [ %184, %183 ], [ %181, %176 ]
  %192 = phi i64 [ %185, %183 ], [ 0, %176 ]
  %193 = phi i32* [ %189, %183 ], [ null, %176 ]
  %194 = getelementptr inbounds i32, i32* %193, i64 %191
  %195 = getelementptr inbounds i32, i32* %193, i64 %192
  %196 = ptrtoint i32* %195 to i64
  %197 = icmp eq i64 %191, %192
  br i1 %197, label %198, label %216

198:                                              ; preds = %190
  %199 = icmp sgt i64 %191, 0
  br i1 %199, label %200, label %204

200:                                              ; preds = %198
  %201 = add nuw nsw i64 %191, 1
  %202 = sdiv i64 %201, -2
  %203 = getelementptr inbounds i32, i32* %194, i64 %202
  br label %216

204:                                              ; preds = %198
  %205 = shl nsw i64 %191, 1
  %206 = icmp eq i64 %191, 0
  %207 = select i1 %206, i64 1, i64 %205
  %208 = lshr i64 %207, 2
  %209 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %210 = shl i64 %207, 2
  %211 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %209, i64 %210) #8
  %212 = bitcast i8* %211 to i32*
  %213 = getelementptr inbounds i32, i32* %212, i64 %208
  %214 = getelementptr inbounds i32, i32* %212, i64 %207
  %215 = ptrtoint i32* %214 to i64
  br label %216

216:                                              ; preds = %190, %200, %204
  %217 = phi i32* [ %203, %200 ], [ %213, %204 ], [ %194, %190 ]
  %218 = phi i64 [ %196, %200 ], [ %215, %204 ], [ %196, %190 ]
  %219 = load i32, i32* %2, align 4
  store i32 %219, i32* %217, align 4
  %220 = getelementptr inbounds i32, i32* %217, i64 1
  %221 = load i32*, i32** %6, align 8
  %222 = ptrtoint i32* %221 to i64
  %223 = icmp eq i32* %221, %1
  br i1 %223, label %373, label %224

224:                                              ; preds = %216
  %225 = getelementptr i32, i32* %1, i64 -1
  %226 = ptrtoint i32* %225 to i64
  %227 = sub i64 %226, %222
  %228 = lshr i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = icmp ult i64 %229, 8
  br i1 %230, label %321, label %231

231:                                              ; preds = %224
  %232 = getelementptr i32, i32* %1, i64 -1
  %233 = ptrtoint i32* %232 to i64
  %234 = sub i64 %233, %222
  %235 = lshr i64 %234, 2
  %236 = xor i64 %235, -1
  %237 = getelementptr i32, i32* %217, i64 %236
  %238 = getelementptr i32, i32* %1, i64 %236
  %239 = icmp ult i32* %237, %1
  %240 = icmp ult i32* %238, %217
  %241 = and i1 %239, %240
  br i1 %241, label %321, label %242

242:                                              ; preds = %231
  %243 = and i64 %229, 9223372036854775800
  %244 = sub nsw i64 0, %243
  %245 = getelementptr i32, i32* %217, i64 %244
  %246 = sub nsw i64 0, %243
  %247 = getelementptr i32, i32* %1, i64 %246
  %248 = add nsw i64 %243, -8
  %249 = lshr exact i64 %248, 3
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 1
  %252 = icmp eq i64 %248, 0
  br i1 %252, label %297, label %253

253:                                              ; preds = %242
  %254 = sub nuw nsw i64 %250, %251
  %255 = getelementptr i32, i32* %217, i64 -1
  %256 = getelementptr i32, i32* %1, i64 -1
  %257 = getelementptr i32, i32* %217, i64 -1
  %258 = getelementptr i32, i32* %1, i64 -1
  br label %259

259:                                              ; preds = %259, %253
  %260 = phi i64 [ 0, %253 ], [ %294, %259 ]
  %261 = phi i64 [ %254, %253 ], [ %295, %259 ]
  %262 = sub i64 0, %260
  %263 = sub i64 0, %260
  %264 = getelementptr inbounds i32, i32* %255, i64 %262
  %265 = getelementptr inbounds i32, i32* %256, i64 %263
  %266 = getelementptr inbounds i32, i32* %265, i64 -3
  %267 = bitcast i32* %266 to <4 x i32>*
  %268 = load <4 x i32>, <4 x i32>* %267, align 4, !alias.scope !45
  %269 = getelementptr inbounds i32, i32* %265, i64 -4
  %270 = getelementptr inbounds i32, i32* %269, i64 -3
  %271 = bitcast i32* %270 to <4 x i32>*
  %272 = load <4 x i32>, <4 x i32>* %271, align 4, !alias.scope !45
  %273 = getelementptr inbounds i32, i32* %264, i64 -3
  %274 = bitcast i32* %273 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %274, align 4, !alias.scope !48, !noalias !45
  %275 = getelementptr inbounds i32, i32* %264, i64 -4
  %276 = getelementptr inbounds i32, i32* %275, i64 -3
  %277 = bitcast i32* %276 to <4 x i32>*
  store <4 x i32> %272, <4 x i32>* %277, align 4, !alias.scope !48, !noalias !45
  %278 = sub nuw nsw i64 -8, %260
  %279 = sub nuw nsw i64 -8, %260
  %280 = getelementptr inbounds i32, i32* %257, i64 %278
  %281 = getelementptr inbounds i32, i32* %258, i64 %279
  %282 = getelementptr inbounds i32, i32* %281, i64 -3
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4, !alias.scope !45
  %285 = getelementptr inbounds i32, i32* %281, i64 -4
  %286 = getelementptr inbounds i32, i32* %285, i64 -3
  %287 = bitcast i32* %286 to <4 x i32>*
  %288 = load <4 x i32>, <4 x i32>* %287, align 4, !alias.scope !45
  %289 = getelementptr inbounds i32, i32* %280, i64 -3
  %290 = bitcast i32* %289 to <4 x i32>*
  store <4 x i32> %284, <4 x i32>* %290, align 4, !alias.scope !48, !noalias !45
  %291 = getelementptr inbounds i32, i32* %280, i64 -4
  %292 = getelementptr inbounds i32, i32* %291, i64 -3
  %293 = bitcast i32* %292 to <4 x i32>*
  store <4 x i32> %288, <4 x i32>* %293, align 4, !alias.scope !48, !noalias !45
  %294 = add i64 %260, 16
  %295 = add i64 %261, -2
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %297, label %259, !llvm.loop !50

297:                                              ; preds = %259, %242
  %298 = phi i64 [ 0, %242 ], [ %294, %259 ]
  %299 = icmp eq i64 %251, 0
  br i1 %299, label %319, label %300

300:                                              ; preds = %297
  %301 = sub i64 0, %298
  %302 = getelementptr i32, i32* %217, i64 -1
  %303 = sub i64 0, %298
  %304 = getelementptr i32, i32* %1, i64 -1
  %305 = getelementptr inbounds i32, i32* %302, i64 %301
  %306 = getelementptr inbounds i32, i32* %304, i64 %303
  %307 = getelementptr inbounds i32, i32* %306, i64 -3
  %308 = bitcast i32* %307 to <4 x i32>*
  %309 = load <4 x i32>, <4 x i32>* %308, align 4, !alias.scope !45
  %310 = getelementptr inbounds i32, i32* %306, i64 -4
  %311 = getelementptr inbounds i32, i32* %310, i64 -3
  %312 = bitcast i32* %311 to <4 x i32>*
  %313 = load <4 x i32>, <4 x i32>* %312, align 4, !alias.scope !45
  %314 = getelementptr inbounds i32, i32* %305, i64 -3
  %315 = bitcast i32* %314 to <4 x i32>*
  store <4 x i32> %309, <4 x i32>* %315, align 4, !alias.scope !48, !noalias !45
  %316 = getelementptr inbounds i32, i32* %305, i64 -4
  %317 = getelementptr inbounds i32, i32* %316, i64 -3
  %318 = bitcast i32* %317 to <4 x i32>*
  store <4 x i32> %313, <4 x i32>* %318, align 4, !alias.scope !48, !noalias !45
  br label %319

319:                                              ; preds = %297, %300
  %320 = icmp eq i64 %229, %243
  br i1 %320, label %373, label %321

321:                                              ; preds = %319, %231, %224
  %322 = phi i32* [ %217, %231 ], [ %217, %224 ], [ %245, %319 ]
  %323 = phi i32* [ %1, %231 ], [ %1, %224 ], [ %247, %319 ]
  %324 = getelementptr i32, i32* %323, i64 -1
  %325 = ptrtoint i32* %324 to i64
  %326 = sub i64 %325, %222
  %327 = lshr i64 %326, 2
  %328 = add nuw nsw i64 %327, 1
  %329 = and i64 %328, 7
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %340, label %331

331:                                              ; preds = %321, %331
  %332 = phi i32* [ %335, %331 ], [ %322, %321 ]
  %333 = phi i32* [ %336, %331 ], [ %323, %321 ]
  %334 = phi i64 [ %338, %331 ], [ %329, %321 ]
  %335 = getelementptr inbounds i32, i32* %332, i64 -1
  %336 = getelementptr inbounds i32, i32* %333, i64 -1
  %337 = load i32, i32* %336, align 4
  store i32 %337, i32* %335, align 4
  %338 = add i64 %334, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %331, !llvm.loop !51

340:                                              ; preds = %331, %321
  %341 = phi i32* [ undef, %321 ], [ %335, %331 ]
  %342 = phi i32* [ %322, %321 ], [ %335, %331 ]
  %343 = phi i32* [ %323, %321 ], [ %336, %331 ]
  %344 = icmp ult i64 %326, 28
  br i1 %344, label %373, label %345

345:                                              ; preds = %340, %345
  %346 = phi i32* [ %369, %345 ], [ %342, %340 ]
  %347 = phi i32* [ %370, %345 ], [ %343, %340 ]
  %348 = getelementptr inbounds i32, i32* %346, i64 -1
  %349 = getelementptr inbounds i32, i32* %347, i64 -1
  %350 = load i32, i32* %349, align 4
  store i32 %350, i32* %348, align 4
  %351 = getelementptr inbounds i32, i32* %346, i64 -2
  %352 = getelementptr inbounds i32, i32* %347, i64 -2
  %353 = load i32, i32* %352, align 4
  store i32 %353, i32* %351, align 4
  %354 = getelementptr inbounds i32, i32* %346, i64 -3
  %355 = getelementptr inbounds i32, i32* %347, i64 -3
  %356 = load i32, i32* %355, align 4
  store i32 %356, i32* %354, align 4
  %357 = getelementptr inbounds i32, i32* %346, i64 -4
  %358 = getelementptr inbounds i32, i32* %347, i64 -4
  %359 = load i32, i32* %358, align 4
  store i32 %359, i32* %357, align 4
  %360 = getelementptr inbounds i32, i32* %346, i64 -5
  %361 = getelementptr inbounds i32, i32* %347, i64 -5
  %362 = load i32, i32* %361, align 4
  store i32 %362, i32* %360, align 4
  %363 = getelementptr inbounds i32, i32* %346, i64 -6
  %364 = getelementptr inbounds i32, i32* %347, i64 -6
  %365 = load i32, i32* %364, align 4
  store i32 %365, i32* %363, align 4
  %366 = getelementptr inbounds i32, i32* %346, i64 -7
  %367 = getelementptr inbounds i32, i32* %347, i64 -7
  %368 = load i32, i32* %367, align 4
  store i32 %368, i32* %366, align 4
  %369 = getelementptr inbounds i32, i32* %346, i64 -8
  %370 = getelementptr inbounds i32, i32* %347, i64 -8
  %371 = load i32, i32* %370, align 4
  store i32 %371, i32* %369, align 4
  %372 = icmp eq i32* %370, %221
  br i1 %372, label %373, label %345, !llvm.loop !52

373:                                              ; preds = %340, %345, %319, %216
  %374 = phi i32* [ %217, %216 ], [ %245, %319 ], [ %341, %340 ], [ %369, %345 ]
  %375 = load i32*, i32** %7, align 8
  %376 = icmp eq i32* %375, %1
  br i1 %376, label %530, label %377

377:                                              ; preds = %373
  %378 = getelementptr i32, i32* %375, i64 -1
  %379 = ptrtoint i32* %378 to i64
  %380 = sub i64 %379, %4
  %381 = lshr i64 %380, 2
  %382 = add nuw nsw i64 %381, 1
  %383 = icmp ult i64 %382, 8
  br i1 %383, label %477, label %384

384:                                              ; preds = %377
  %385 = getelementptr i32, i32* %375, i64 -1
  %386 = ptrtoint i32* %385 to i64
  %387 = sub i64 %386, %4
  %388 = lshr i64 %387, 2
  %389 = add nuw nsw i64 %388, 2
  %390 = getelementptr i32, i32* %217, i64 %389
  %391 = add nuw nsw i64 %388, 1
  %392 = getelementptr i32, i32* %1, i64 %391
  %393 = icmp ult i32* %220, %392
  %394 = icmp ugt i32* %390, %1
  %395 = and i1 %393, %394
  br i1 %395, label %477, label %396

396:                                              ; preds = %384
  %397 = and i64 %382, 9223372036854775800
  %398 = getelementptr i32, i32* %220, i64 %397
  %399 = getelementptr i32, i32* %1, i64 %397
  %400 = add nsw i64 %397, -8
  %401 = lshr exact i64 %400, 3
  %402 = add nuw nsw i64 %401, 1
  %403 = and i64 %402, 3
  %404 = icmp ult i64 %400, 24
  br i1 %404, label %456, label %405

405:                                              ; preds = %396
  %406 = sub nsw i64 %402, %403
  br label %407

407:                                              ; preds = %407, %405
  %408 = phi i64 [ 0, %405 ], [ %453, %407 ]
  %409 = phi i64 [ %406, %405 ], [ %454, %407 ]
  %410 = getelementptr i32, i32* %220, i64 %408
  %411 = getelementptr i32, i32* %1, i64 %408
  %412 = bitcast i32* %411 to <4 x i32>*
  %413 = load <4 x i32>, <4 x i32>* %412, align 4, !alias.scope !53
  %414 = getelementptr i32, i32* %411, i64 4
  %415 = bitcast i32* %414 to <4 x i32>*
  %416 = load <4 x i32>, <4 x i32>* %415, align 4, !alias.scope !53
  %417 = bitcast i32* %410 to <4 x i32>*
  store <4 x i32> %413, <4 x i32>* %417, align 4, !alias.scope !56, !noalias !53
  %418 = getelementptr i32, i32* %410, i64 4
  %419 = bitcast i32* %418 to <4 x i32>*
  store <4 x i32> %416, <4 x i32>* %419, align 4, !alias.scope !56, !noalias !53
  %420 = or i64 %408, 8
  %421 = getelementptr i32, i32* %220, i64 %420
  %422 = getelementptr i32, i32* %1, i64 %420
  %423 = bitcast i32* %422 to <4 x i32>*
  %424 = load <4 x i32>, <4 x i32>* %423, align 4, !alias.scope !53
  %425 = getelementptr i32, i32* %422, i64 4
  %426 = bitcast i32* %425 to <4 x i32>*
  %427 = load <4 x i32>, <4 x i32>* %426, align 4, !alias.scope !53
  %428 = bitcast i32* %421 to <4 x i32>*
  store <4 x i32> %424, <4 x i32>* %428, align 4, !alias.scope !56, !noalias !53
  %429 = getelementptr i32, i32* %421, i64 4
  %430 = bitcast i32* %429 to <4 x i32>*
  store <4 x i32> %427, <4 x i32>* %430, align 4, !alias.scope !56, !noalias !53
  %431 = or i64 %408, 16
  %432 = getelementptr i32, i32* %220, i64 %431
  %433 = getelementptr i32, i32* %1, i64 %431
  %434 = bitcast i32* %433 to <4 x i32>*
  %435 = load <4 x i32>, <4 x i32>* %434, align 4, !alias.scope !53
  %436 = getelementptr i32, i32* %433, i64 4
  %437 = bitcast i32* %436 to <4 x i32>*
  %438 = load <4 x i32>, <4 x i32>* %437, align 4, !alias.scope !53
  %439 = bitcast i32* %432 to <4 x i32>*
  store <4 x i32> %435, <4 x i32>* %439, align 4, !alias.scope !56, !noalias !53
  %440 = getelementptr i32, i32* %432, i64 4
  %441 = bitcast i32* %440 to <4 x i32>*
  store <4 x i32> %438, <4 x i32>* %441, align 4, !alias.scope !56, !noalias !53
  %442 = or i64 %408, 24
  %443 = getelementptr i32, i32* %220, i64 %442
  %444 = getelementptr i32, i32* %1, i64 %442
  %445 = bitcast i32* %444 to <4 x i32>*
  %446 = load <4 x i32>, <4 x i32>* %445, align 4, !alias.scope !53
  %447 = getelementptr i32, i32* %444, i64 4
  %448 = bitcast i32* %447 to <4 x i32>*
  %449 = load <4 x i32>, <4 x i32>* %448, align 4, !alias.scope !53
  %450 = bitcast i32* %443 to <4 x i32>*
  store <4 x i32> %446, <4 x i32>* %450, align 4, !alias.scope !56, !noalias !53
  %451 = getelementptr i32, i32* %443, i64 4
  %452 = bitcast i32* %451 to <4 x i32>*
  store <4 x i32> %449, <4 x i32>* %452, align 4, !alias.scope !56, !noalias !53
  %453 = add i64 %408, 32
  %454 = add i64 %409, -4
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %456, label %407, !llvm.loop !58

456:                                              ; preds = %407, %396
  %457 = phi i64 [ 0, %396 ], [ %453, %407 ]
  %458 = icmp eq i64 %403, 0
  br i1 %458, label %475, label %459

459:                                              ; preds = %456, %459
  %460 = phi i64 [ %472, %459 ], [ %457, %456 ]
  %461 = phi i64 [ %473, %459 ], [ %403, %456 ]
  %462 = getelementptr i32, i32* %220, i64 %460
  %463 = getelementptr i32, i32* %1, i64 %460
  %464 = bitcast i32* %463 to <4 x i32>*
  %465 = load <4 x i32>, <4 x i32>* %464, align 4, !alias.scope !53
  %466 = getelementptr i32, i32* %463, i64 4
  %467 = bitcast i32* %466 to <4 x i32>*
  %468 = load <4 x i32>, <4 x i32>* %467, align 4, !alias.scope !53
  %469 = bitcast i32* %462 to <4 x i32>*
  store <4 x i32> %465, <4 x i32>* %469, align 4, !alias.scope !56, !noalias !53
  %470 = getelementptr i32, i32* %462, i64 4
  %471 = bitcast i32* %470 to <4 x i32>*
  store <4 x i32> %468, <4 x i32>* %471, align 4, !alias.scope !56, !noalias !53
  %472 = add i64 %460, 8
  %473 = add i64 %461, -1
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %459, !llvm.loop !59

475:                                              ; preds = %459, %456
  %476 = icmp eq i64 %382, %397
  br i1 %476, label %530, label %477

477:                                              ; preds = %475, %384, %377
  %478 = phi i32* [ %220, %384 ], [ %220, %377 ], [ %398, %475 ]
  %479 = phi i32* [ %1, %384 ], [ %1, %377 ], [ %399, %475 ]
  %480 = ptrtoint i32* %479 to i64
  %481 = getelementptr i32, i32* %375, i64 -1
  %482 = ptrtoint i32* %481 to i64
  %483 = sub i64 %482, %480
  %484 = lshr i64 %483, 2
  %485 = add nuw nsw i64 %484, 1
  %486 = and i64 %485, 7
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %497, label %488

488:                                              ; preds = %477, %488
  %489 = phi i32* [ %494, %488 ], [ %478, %477 ]
  %490 = phi i32* [ %493, %488 ], [ %479, %477 ]
  %491 = phi i64 [ %495, %488 ], [ %486, %477 ]
  %492 = load i32, i32* %490, align 4
  store i32 %492, i32* %489, align 4
  %493 = getelementptr inbounds i32, i32* %490, i64 1
  %494 = getelementptr inbounds i32, i32* %489, i64 1
  %495 = add i64 %491, -1
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %497, label %488, !llvm.loop !60

497:                                              ; preds = %488, %477
  %498 = phi i32* [ undef, %477 ], [ %494, %488 ]
  %499 = phi i32* [ %478, %477 ], [ %494, %488 ]
  %500 = phi i32* [ %479, %477 ], [ %493, %488 ]
  %501 = icmp ult i64 %483, 28
  br i1 %501, label %530, label %502

502:                                              ; preds = %497, %502
  %503 = phi i32* [ %528, %502 ], [ %499, %497 ]
  %504 = phi i32* [ %527, %502 ], [ %500, %497 ]
  %505 = load i32, i32* %504, align 4
  store i32 %505, i32* %503, align 4
  %506 = getelementptr inbounds i32, i32* %504, i64 1
  %507 = getelementptr inbounds i32, i32* %503, i64 1
  %508 = load i32, i32* %506, align 4
  store i32 %508, i32* %507, align 4
  %509 = getelementptr inbounds i32, i32* %504, i64 2
  %510 = getelementptr inbounds i32, i32* %503, i64 2
  %511 = load i32, i32* %509, align 4
  store i32 %511, i32* %510, align 4
  %512 = getelementptr inbounds i32, i32* %504, i64 3
  %513 = getelementptr inbounds i32, i32* %503, i64 3
  %514 = load i32, i32* %512, align 4
  store i32 %514, i32* %513, align 4
  %515 = getelementptr inbounds i32, i32* %504, i64 4
  %516 = getelementptr inbounds i32, i32* %503, i64 4
  %517 = load i32, i32* %515, align 4
  store i32 %517, i32* %516, align 4
  %518 = getelementptr inbounds i32, i32* %504, i64 5
  %519 = getelementptr inbounds i32, i32* %503, i64 5
  %520 = load i32, i32* %518, align 4
  store i32 %520, i32* %519, align 4
  %521 = getelementptr inbounds i32, i32* %504, i64 6
  %522 = getelementptr inbounds i32, i32* %503, i64 6
  %523 = load i32, i32* %521, align 4
  store i32 %523, i32* %522, align 4
  %524 = getelementptr inbounds i32, i32* %504, i64 7
  %525 = getelementptr inbounds i32, i32* %503, i64 7
  %526 = load i32, i32* %524, align 4
  store i32 %526, i32* %525, align 4
  %527 = getelementptr inbounds i32, i32* %504, i64 8
  %528 = getelementptr inbounds i32, i32* %503, i64 8
  %529 = icmp eq i32* %527, %375
  br i1 %529, label %530, label %502, !llvm.loop !61

530:                                              ; preds = %497, %502, %475, %373
  %531 = phi i32* [ %220, %373 ], [ %398, %475 ], [ %498, %497 ], [ %528, %502 ]
  %532 = ptrtoint i32* %374 to i64
  %533 = ptrtoint i32* %531 to i64
  store i64 %532, i64* %160, align 8
  store i64 %533, i64* %159, align 8
  store i64 %218, i64* %169, align 8
  ret i32* %217

534:                                              ; preds = %16, %156
  ret i32* %1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIj14pool_allocatorIjEE6insertENS_11__wrap_iterIPKjEERS5_(%"class.std::__1::vector.17"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = bitcast i32* %1 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %166

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  br i1 %15, label %16, label %21

16:                                               ; preds = %14
  %17 = load i32, i32* %2, align 4
  store i32 %17, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %542

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %149

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !62
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !62
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !65, !noalias !62
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !65, !noalias !62
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !62
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !62
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !65, !noalias !62
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !65, !noalias !62
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !62
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !62
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !65, !noalias !62
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !65, !noalias !62
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !62
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !62
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !65, !noalias !62
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !65, !noalias !62
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !67

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !62
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !62
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !65, !noalias !62
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !65, !noalias !62
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !68

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %149, %137
  %140 = phi i32* [ %60, %137 ], [ %154, %149 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %5, i64 %24, i1 false) #8
  br label %156

149:                                              ; preds = %39, %149
  %150 = phi i32* [ %154, %149 ], [ %40, %39 ]
  %151 = phi i32* [ %153, %149 ], [ %41, %39 ]
  %152 = load i32, i32* %151, align 4
  store i32 %152, i32* %150, align 4
  %153 = getelementptr inbounds i32, i32* %151, i64 1
  %154 = getelementptr inbounds i32, i32* %150, i64 1
  %155 = icmp ult i32* %153, %8
  br i1 %155, label %149, label %139, !llvm.loop !69

156:                                              ; preds = %142, %145
  %157 = icmp ugt i32* %1, %2
  br i1 %157, label %163, label %158

158:                                              ; preds = %156
  %159 = load i32*, i32** %7, align 8
  %160 = icmp ugt i32* %159, %2
  %161 = getelementptr inbounds i32, i32* %2, i64 1
  %162 = select i1 %160, i32* %161, i32* %2
  br label %163

163:                                              ; preds = %158, %156
  %164 = phi i32* [ %2, %156 ], [ %162, %158 ]
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %1, align 4
  br label %542

166:                                              ; preds = %3
  %167 = bitcast i32** %7 to i64*
  %168 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %166
  %175 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #10
  unreachable

176:                                              ; preds = %166
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %184, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  br label %191

184:                                              ; preds = %176
  %185 = ashr exact i64 %178, 1
  %186 = icmp ult i64 %185, %172
  %187 = select i1 %186, i64 %172, i64 %185
  %188 = sub i64 %4, %169
  %189 = ashr exact i64 %188, 2
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %198, label %191

191:                                              ; preds = %181, %184
  %192 = phi i64 [ %183, %181 ], [ %189, %184 ]
  %193 = phi i64 [ 4611686018427387903, %181 ], [ %187, %184 ]
  %194 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %195 = shl i64 %193, 2
  %196 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %194, i64 %195) #8
  %197 = bitcast i8* %196 to i32*
  br label %198

198:                                              ; preds = %184, %191
  %199 = phi i64 [ %192, %191 ], [ %189, %184 ]
  %200 = phi i64 [ %193, %191 ], [ 0, %184 ]
  %201 = phi i32* [ %197, %191 ], [ null, %184 ]
  %202 = getelementptr inbounds i32, i32* %201, i64 %199
  %203 = getelementptr inbounds i32, i32* %201, i64 %200
  %204 = ptrtoint i32* %203 to i64
  %205 = icmp eq i64 %199, %200
  br i1 %205, label %206, label %224

206:                                              ; preds = %198
  %207 = icmp sgt i64 %199, 0
  br i1 %207, label %208, label %212

208:                                              ; preds = %206
  %209 = add nuw nsw i64 %199, 1
  %210 = sdiv i64 %209, -2
  %211 = getelementptr inbounds i32, i32* %202, i64 %210
  br label %224

212:                                              ; preds = %206
  %213 = shl nsw i64 %199, 1
  %214 = icmp eq i64 %199, 0
  %215 = select i1 %214, i64 1, i64 %213
  %216 = lshr i64 %215, 2
  %217 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %218 = shl i64 %215, 2
  %219 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %217, i64 %218) #8
  %220 = bitcast i8* %219 to i32*
  %221 = getelementptr inbounds i32, i32* %220, i64 %216
  %222 = getelementptr inbounds i32, i32* %220, i64 %215
  %223 = ptrtoint i32* %222 to i64
  br label %224

224:                                              ; preds = %198, %208, %212
  %225 = phi i32* [ %211, %208 ], [ %221, %212 ], [ %202, %198 ]
  %226 = phi i64 [ %204, %208 ], [ %223, %212 ], [ %204, %198 ]
  %227 = load i32, i32* %2, align 4
  store i32 %227, i32* %225, align 4
  %228 = getelementptr inbounds i32, i32* %225, i64 1
  %229 = load i32*, i32** %6, align 8
  %230 = ptrtoint i32* %229 to i64
  %231 = icmp eq i32* %229, %1
  br i1 %231, label %381, label %232

232:                                              ; preds = %224
  %233 = getelementptr i32, i32* %1, i64 -1
  %234 = ptrtoint i32* %233 to i64
  %235 = sub i64 %234, %230
  %236 = lshr i64 %235, 2
  %237 = add nuw nsw i64 %236, 1
  %238 = icmp ult i64 %237, 8
  br i1 %238, label %329, label %239

239:                                              ; preds = %232
  %240 = getelementptr i32, i32* %1, i64 -1
  %241 = ptrtoint i32* %240 to i64
  %242 = sub i64 %241, %230
  %243 = lshr i64 %242, 2
  %244 = xor i64 %243, -1
  %245 = getelementptr i32, i32* %225, i64 %244
  %246 = getelementptr i32, i32* %1, i64 %244
  %247 = icmp ult i32* %245, %1
  %248 = icmp ult i32* %246, %225
  %249 = and i1 %247, %248
  br i1 %249, label %329, label %250

250:                                              ; preds = %239
  %251 = and i64 %237, 9223372036854775800
  %252 = sub nsw i64 0, %251
  %253 = getelementptr i32, i32* %225, i64 %252
  %254 = sub nsw i64 0, %251
  %255 = getelementptr i32, i32* %1, i64 %254
  %256 = add nsw i64 %251, -8
  %257 = lshr exact i64 %256, 3
  %258 = add nuw nsw i64 %257, 1
  %259 = and i64 %258, 1
  %260 = icmp eq i64 %256, 0
  br i1 %260, label %305, label %261

261:                                              ; preds = %250
  %262 = sub nuw nsw i64 %258, %259
  %263 = getelementptr i32, i32* %225, i64 -1
  %264 = getelementptr i32, i32* %1, i64 -1
  %265 = getelementptr i32, i32* %225, i64 -1
  %266 = getelementptr i32, i32* %1, i64 -1
  br label %267

267:                                              ; preds = %267, %261
  %268 = phi i64 [ 0, %261 ], [ %302, %267 ]
  %269 = phi i64 [ %262, %261 ], [ %303, %267 ]
  %270 = sub i64 0, %268
  %271 = sub i64 0, %268
  %272 = getelementptr inbounds i32, i32* %263, i64 %270
  %273 = getelementptr inbounds i32, i32* %264, i64 %271
  %274 = getelementptr inbounds i32, i32* %273, i64 -3
  %275 = bitcast i32* %274 to <4 x i32>*
  %276 = load <4 x i32>, <4 x i32>* %275, align 4, !alias.scope !70
  %277 = getelementptr inbounds i32, i32* %273, i64 -4
  %278 = getelementptr inbounds i32, i32* %277, i64 -3
  %279 = bitcast i32* %278 to <4 x i32>*
  %280 = load <4 x i32>, <4 x i32>* %279, align 4, !alias.scope !70
  %281 = getelementptr inbounds i32, i32* %272, i64 -3
  %282 = bitcast i32* %281 to <4 x i32>*
  store <4 x i32> %276, <4 x i32>* %282, align 4, !alias.scope !73, !noalias !70
  %283 = getelementptr inbounds i32, i32* %272, i64 -4
  %284 = getelementptr inbounds i32, i32* %283, i64 -3
  %285 = bitcast i32* %284 to <4 x i32>*
  store <4 x i32> %280, <4 x i32>* %285, align 4, !alias.scope !73, !noalias !70
  %286 = sub nuw nsw i64 -8, %268
  %287 = sub nuw nsw i64 -8, %268
  %288 = getelementptr inbounds i32, i32* %265, i64 %286
  %289 = getelementptr inbounds i32, i32* %266, i64 %287
  %290 = getelementptr inbounds i32, i32* %289, i64 -3
  %291 = bitcast i32* %290 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4, !alias.scope !70
  %293 = getelementptr inbounds i32, i32* %289, i64 -4
  %294 = getelementptr inbounds i32, i32* %293, i64 -3
  %295 = bitcast i32* %294 to <4 x i32>*
  %296 = load <4 x i32>, <4 x i32>* %295, align 4, !alias.scope !70
  %297 = getelementptr inbounds i32, i32* %288, i64 -3
  %298 = bitcast i32* %297 to <4 x i32>*
  store <4 x i32> %292, <4 x i32>* %298, align 4, !alias.scope !73, !noalias !70
  %299 = getelementptr inbounds i32, i32* %288, i64 -4
  %300 = getelementptr inbounds i32, i32* %299, i64 -3
  %301 = bitcast i32* %300 to <4 x i32>*
  store <4 x i32> %296, <4 x i32>* %301, align 4, !alias.scope !73, !noalias !70
  %302 = add i64 %268, 16
  %303 = add i64 %269, -2
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %305, label %267, !llvm.loop !75

305:                                              ; preds = %267, %250
  %306 = phi i64 [ 0, %250 ], [ %302, %267 ]
  %307 = icmp eq i64 %259, 0
  br i1 %307, label %327, label %308

308:                                              ; preds = %305
  %309 = sub i64 0, %306
  %310 = getelementptr i32, i32* %225, i64 -1
  %311 = sub i64 0, %306
  %312 = getelementptr i32, i32* %1, i64 -1
  %313 = getelementptr inbounds i32, i32* %310, i64 %309
  %314 = getelementptr inbounds i32, i32* %312, i64 %311
  %315 = getelementptr inbounds i32, i32* %314, i64 -3
  %316 = bitcast i32* %315 to <4 x i32>*
  %317 = load <4 x i32>, <4 x i32>* %316, align 4, !alias.scope !70
  %318 = getelementptr inbounds i32, i32* %314, i64 -4
  %319 = getelementptr inbounds i32, i32* %318, i64 -3
  %320 = bitcast i32* %319 to <4 x i32>*
  %321 = load <4 x i32>, <4 x i32>* %320, align 4, !alias.scope !70
  %322 = getelementptr inbounds i32, i32* %313, i64 -3
  %323 = bitcast i32* %322 to <4 x i32>*
  store <4 x i32> %317, <4 x i32>* %323, align 4, !alias.scope !73, !noalias !70
  %324 = getelementptr inbounds i32, i32* %313, i64 -4
  %325 = getelementptr inbounds i32, i32* %324, i64 -3
  %326 = bitcast i32* %325 to <4 x i32>*
  store <4 x i32> %321, <4 x i32>* %326, align 4, !alias.scope !73, !noalias !70
  br label %327

327:                                              ; preds = %305, %308
  %328 = icmp eq i64 %237, %251
  br i1 %328, label %381, label %329

329:                                              ; preds = %327, %239, %232
  %330 = phi i32* [ %225, %239 ], [ %225, %232 ], [ %253, %327 ]
  %331 = phi i32* [ %1, %239 ], [ %1, %232 ], [ %255, %327 ]
  %332 = getelementptr i32, i32* %331, i64 -1
  %333 = ptrtoint i32* %332 to i64
  %334 = sub i64 %333, %230
  %335 = lshr i64 %334, 2
  %336 = add nuw nsw i64 %335, 1
  %337 = and i64 %336, 7
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %348, label %339

339:                                              ; preds = %329, %339
  %340 = phi i32* [ %343, %339 ], [ %330, %329 ]
  %341 = phi i32* [ %344, %339 ], [ %331, %329 ]
  %342 = phi i64 [ %346, %339 ], [ %337, %329 ]
  %343 = getelementptr inbounds i32, i32* %340, i64 -1
  %344 = getelementptr inbounds i32, i32* %341, i64 -1
  %345 = load i32, i32* %344, align 4
  store i32 %345, i32* %343, align 4
  %346 = add i64 %342, -1
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %348, label %339, !llvm.loop !76

348:                                              ; preds = %339, %329
  %349 = phi i32* [ undef, %329 ], [ %343, %339 ]
  %350 = phi i32* [ %330, %329 ], [ %343, %339 ]
  %351 = phi i32* [ %331, %329 ], [ %344, %339 ]
  %352 = icmp ult i64 %334, 28
  br i1 %352, label %381, label %353

353:                                              ; preds = %348, %353
  %354 = phi i32* [ %377, %353 ], [ %350, %348 ]
  %355 = phi i32* [ %378, %353 ], [ %351, %348 ]
  %356 = getelementptr inbounds i32, i32* %354, i64 -1
  %357 = getelementptr inbounds i32, i32* %355, i64 -1
  %358 = load i32, i32* %357, align 4
  store i32 %358, i32* %356, align 4
  %359 = getelementptr inbounds i32, i32* %354, i64 -2
  %360 = getelementptr inbounds i32, i32* %355, i64 -2
  %361 = load i32, i32* %360, align 4
  store i32 %361, i32* %359, align 4
  %362 = getelementptr inbounds i32, i32* %354, i64 -3
  %363 = getelementptr inbounds i32, i32* %355, i64 -3
  %364 = load i32, i32* %363, align 4
  store i32 %364, i32* %362, align 4
  %365 = getelementptr inbounds i32, i32* %354, i64 -4
  %366 = getelementptr inbounds i32, i32* %355, i64 -4
  %367 = load i32, i32* %366, align 4
  store i32 %367, i32* %365, align 4
  %368 = getelementptr inbounds i32, i32* %354, i64 -5
  %369 = getelementptr inbounds i32, i32* %355, i64 -5
  %370 = load i32, i32* %369, align 4
  store i32 %370, i32* %368, align 4
  %371 = getelementptr inbounds i32, i32* %354, i64 -6
  %372 = getelementptr inbounds i32, i32* %355, i64 -6
  %373 = load i32, i32* %372, align 4
  store i32 %373, i32* %371, align 4
  %374 = getelementptr inbounds i32, i32* %354, i64 -7
  %375 = getelementptr inbounds i32, i32* %355, i64 -7
  %376 = load i32, i32* %375, align 4
  store i32 %376, i32* %374, align 4
  %377 = getelementptr inbounds i32, i32* %354, i64 -8
  %378 = getelementptr inbounds i32, i32* %355, i64 -8
  %379 = load i32, i32* %378, align 4
  store i32 %379, i32* %377, align 4
  %380 = icmp eq i32* %378, %229
  br i1 %380, label %381, label %353, !llvm.loop !77

381:                                              ; preds = %348, %353, %327, %224
  %382 = phi i32* [ %225, %224 ], [ %253, %327 ], [ %349, %348 ], [ %377, %353 ]
  %383 = load i32*, i32** %7, align 8
  %384 = icmp eq i32* %383, %1
  br i1 %384, label %538, label %385

385:                                              ; preds = %381
  %386 = getelementptr i32, i32* %383, i64 -1
  %387 = ptrtoint i32* %386 to i64
  %388 = sub i64 %387, %4
  %389 = lshr i64 %388, 2
  %390 = add nuw nsw i64 %389, 1
  %391 = icmp ult i64 %390, 8
  br i1 %391, label %485, label %392

392:                                              ; preds = %385
  %393 = getelementptr i32, i32* %383, i64 -1
  %394 = ptrtoint i32* %393 to i64
  %395 = sub i64 %394, %4
  %396 = lshr i64 %395, 2
  %397 = add nuw nsw i64 %396, 2
  %398 = getelementptr i32, i32* %225, i64 %397
  %399 = add nuw nsw i64 %396, 1
  %400 = getelementptr i32, i32* %1, i64 %399
  %401 = icmp ult i32* %228, %400
  %402 = icmp ugt i32* %398, %1
  %403 = and i1 %401, %402
  br i1 %403, label %485, label %404

404:                                              ; preds = %392
  %405 = and i64 %390, 9223372036854775800
  %406 = getelementptr i32, i32* %228, i64 %405
  %407 = getelementptr i32, i32* %1, i64 %405
  %408 = add nsw i64 %405, -8
  %409 = lshr exact i64 %408, 3
  %410 = add nuw nsw i64 %409, 1
  %411 = and i64 %410, 3
  %412 = icmp ult i64 %408, 24
  br i1 %412, label %464, label %413

413:                                              ; preds = %404
  %414 = sub nsw i64 %410, %411
  br label %415

415:                                              ; preds = %415, %413
  %416 = phi i64 [ 0, %413 ], [ %461, %415 ]
  %417 = phi i64 [ %414, %413 ], [ %462, %415 ]
  %418 = getelementptr i32, i32* %228, i64 %416
  %419 = getelementptr i32, i32* %1, i64 %416
  %420 = bitcast i32* %419 to <4 x i32>*
  %421 = load <4 x i32>, <4 x i32>* %420, align 4, !alias.scope !78
  %422 = getelementptr i32, i32* %419, i64 4
  %423 = bitcast i32* %422 to <4 x i32>*
  %424 = load <4 x i32>, <4 x i32>* %423, align 4, !alias.scope !78
  %425 = bitcast i32* %418 to <4 x i32>*
  store <4 x i32> %421, <4 x i32>* %425, align 4, !alias.scope !81, !noalias !78
  %426 = getelementptr i32, i32* %418, i64 4
  %427 = bitcast i32* %426 to <4 x i32>*
  store <4 x i32> %424, <4 x i32>* %427, align 4, !alias.scope !81, !noalias !78
  %428 = or i64 %416, 8
  %429 = getelementptr i32, i32* %228, i64 %428
  %430 = getelementptr i32, i32* %1, i64 %428
  %431 = bitcast i32* %430 to <4 x i32>*
  %432 = load <4 x i32>, <4 x i32>* %431, align 4, !alias.scope !78
  %433 = getelementptr i32, i32* %430, i64 4
  %434 = bitcast i32* %433 to <4 x i32>*
  %435 = load <4 x i32>, <4 x i32>* %434, align 4, !alias.scope !78
  %436 = bitcast i32* %429 to <4 x i32>*
  store <4 x i32> %432, <4 x i32>* %436, align 4, !alias.scope !81, !noalias !78
  %437 = getelementptr i32, i32* %429, i64 4
  %438 = bitcast i32* %437 to <4 x i32>*
  store <4 x i32> %435, <4 x i32>* %438, align 4, !alias.scope !81, !noalias !78
  %439 = or i64 %416, 16
  %440 = getelementptr i32, i32* %228, i64 %439
  %441 = getelementptr i32, i32* %1, i64 %439
  %442 = bitcast i32* %441 to <4 x i32>*
  %443 = load <4 x i32>, <4 x i32>* %442, align 4, !alias.scope !78
  %444 = getelementptr i32, i32* %441, i64 4
  %445 = bitcast i32* %444 to <4 x i32>*
  %446 = load <4 x i32>, <4 x i32>* %445, align 4, !alias.scope !78
  %447 = bitcast i32* %440 to <4 x i32>*
  store <4 x i32> %443, <4 x i32>* %447, align 4, !alias.scope !81, !noalias !78
  %448 = getelementptr i32, i32* %440, i64 4
  %449 = bitcast i32* %448 to <4 x i32>*
  store <4 x i32> %446, <4 x i32>* %449, align 4, !alias.scope !81, !noalias !78
  %450 = or i64 %416, 24
  %451 = getelementptr i32, i32* %228, i64 %450
  %452 = getelementptr i32, i32* %1, i64 %450
  %453 = bitcast i32* %452 to <4 x i32>*
  %454 = load <4 x i32>, <4 x i32>* %453, align 4, !alias.scope !78
  %455 = getelementptr i32, i32* %452, i64 4
  %456 = bitcast i32* %455 to <4 x i32>*
  %457 = load <4 x i32>, <4 x i32>* %456, align 4, !alias.scope !78
  %458 = bitcast i32* %451 to <4 x i32>*
  store <4 x i32> %454, <4 x i32>* %458, align 4, !alias.scope !81, !noalias !78
  %459 = getelementptr i32, i32* %451, i64 4
  %460 = bitcast i32* %459 to <4 x i32>*
  store <4 x i32> %457, <4 x i32>* %460, align 4, !alias.scope !81, !noalias !78
  %461 = add i64 %416, 32
  %462 = add i64 %417, -4
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %464, label %415, !llvm.loop !83

464:                                              ; preds = %415, %404
  %465 = phi i64 [ 0, %404 ], [ %461, %415 ]
  %466 = icmp eq i64 %411, 0
  br i1 %466, label %483, label %467

467:                                              ; preds = %464, %467
  %468 = phi i64 [ %480, %467 ], [ %465, %464 ]
  %469 = phi i64 [ %481, %467 ], [ %411, %464 ]
  %470 = getelementptr i32, i32* %228, i64 %468
  %471 = getelementptr i32, i32* %1, i64 %468
  %472 = bitcast i32* %471 to <4 x i32>*
  %473 = load <4 x i32>, <4 x i32>* %472, align 4, !alias.scope !78
  %474 = getelementptr i32, i32* %471, i64 4
  %475 = bitcast i32* %474 to <4 x i32>*
  %476 = load <4 x i32>, <4 x i32>* %475, align 4, !alias.scope !78
  %477 = bitcast i32* %470 to <4 x i32>*
  store <4 x i32> %473, <4 x i32>* %477, align 4, !alias.scope !81, !noalias !78
  %478 = getelementptr i32, i32* %470, i64 4
  %479 = bitcast i32* %478 to <4 x i32>*
  store <4 x i32> %476, <4 x i32>* %479, align 4, !alias.scope !81, !noalias !78
  %480 = add i64 %468, 8
  %481 = add i64 %469, -1
  %482 = icmp eq i64 %481, 0
  br i1 %482, label %483, label %467, !llvm.loop !84

483:                                              ; preds = %467, %464
  %484 = icmp eq i64 %390, %405
  br i1 %484, label %538, label %485

485:                                              ; preds = %483, %392, %385
  %486 = phi i32* [ %228, %392 ], [ %228, %385 ], [ %406, %483 ]
  %487 = phi i32* [ %1, %392 ], [ %1, %385 ], [ %407, %483 ]
  %488 = ptrtoint i32* %487 to i64
  %489 = getelementptr i32, i32* %383, i64 -1
  %490 = ptrtoint i32* %489 to i64
  %491 = sub i64 %490, %488
  %492 = lshr i64 %491, 2
  %493 = add nuw nsw i64 %492, 1
  %494 = and i64 %493, 7
  %495 = icmp eq i64 %494, 0
  br i1 %495, label %505, label %496

496:                                              ; preds = %485, %496
  %497 = phi i32* [ %502, %496 ], [ %486, %485 ]
  %498 = phi i32* [ %501, %496 ], [ %487, %485 ]
  %499 = phi i64 [ %503, %496 ], [ %494, %485 ]
  %500 = load i32, i32* %498, align 4
  store i32 %500, i32* %497, align 4
  %501 = getelementptr inbounds i32, i32* %498, i64 1
  %502 = getelementptr inbounds i32, i32* %497, i64 1
  %503 = add i64 %499, -1
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %505, label %496, !llvm.loop !85

505:                                              ; preds = %496, %485
  %506 = phi i32* [ undef, %485 ], [ %502, %496 ]
  %507 = phi i32* [ %486, %485 ], [ %502, %496 ]
  %508 = phi i32* [ %487, %485 ], [ %501, %496 ]
  %509 = icmp ult i64 %491, 28
  br i1 %509, label %538, label %510

510:                                              ; preds = %505, %510
  %511 = phi i32* [ %536, %510 ], [ %507, %505 ]
  %512 = phi i32* [ %535, %510 ], [ %508, %505 ]
  %513 = load i32, i32* %512, align 4
  store i32 %513, i32* %511, align 4
  %514 = getelementptr inbounds i32, i32* %512, i64 1
  %515 = getelementptr inbounds i32, i32* %511, i64 1
  %516 = load i32, i32* %514, align 4
  store i32 %516, i32* %515, align 4
  %517 = getelementptr inbounds i32, i32* %512, i64 2
  %518 = getelementptr inbounds i32, i32* %511, i64 2
  %519 = load i32, i32* %517, align 4
  store i32 %519, i32* %518, align 4
  %520 = getelementptr inbounds i32, i32* %512, i64 3
  %521 = getelementptr inbounds i32, i32* %511, i64 3
  %522 = load i32, i32* %520, align 4
  store i32 %522, i32* %521, align 4
  %523 = getelementptr inbounds i32, i32* %512, i64 4
  %524 = getelementptr inbounds i32, i32* %511, i64 4
  %525 = load i32, i32* %523, align 4
  store i32 %525, i32* %524, align 4
  %526 = getelementptr inbounds i32, i32* %512, i64 5
  %527 = getelementptr inbounds i32, i32* %511, i64 5
  %528 = load i32, i32* %526, align 4
  store i32 %528, i32* %527, align 4
  %529 = getelementptr inbounds i32, i32* %512, i64 6
  %530 = getelementptr inbounds i32, i32* %511, i64 6
  %531 = load i32, i32* %529, align 4
  store i32 %531, i32* %530, align 4
  %532 = getelementptr inbounds i32, i32* %512, i64 7
  %533 = getelementptr inbounds i32, i32* %511, i64 7
  %534 = load i32, i32* %532, align 4
  store i32 %534, i32* %533, align 4
  %535 = getelementptr inbounds i32, i32* %512, i64 8
  %536 = getelementptr inbounds i32, i32* %511, i64 8
  %537 = icmp eq i32* %535, %383
  br i1 %537, label %538, label %510, !llvm.loop !86

538:                                              ; preds = %505, %510, %483, %381
  %539 = phi i32* [ %228, %381 ], [ %406, %483 ], [ %506, %505 ], [ %536, %510 ]
  %540 = ptrtoint i32* %382 to i64
  %541 = ptrtoint i32* %539 to i64
  store i64 %540, i64* %168, align 8
  store i64 %541, i64* %167, align 8
  store i64 %226, i64* %177, align 8
  ret i32* %225

542:                                              ; preds = %16, %163
  ret i32* %1
}

declare zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm2EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.std::__1::array.101"* dereferenceable(2)) local_unnamed_addr #4

declare zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm3EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.std::__1::array.102"* dereferenceable(3)) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext12addStructureERKNS_10TSourceLocES3_RKNS_15ImmutableStringEPNS_7TVectorIPNS_6TFieldEEE(%"struct.sh::TTypeSpecifierNonArray"* sret, %"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TVector.22"*) local_unnamed_addr #4

declare %"class.sh::TVector.22"* @_ZN2sh13TParseContext18addStructFieldListEPNS_7TVectorIPNS_6TFieldEEERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"class.sh::TVector.22"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TVector.22"* @_ZN2sh13TParseContext23combineStructFieldListsEPNS_7TVectorIPNS_6TFieldEEEPKS4_RKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"class.sh::TVector.22"*, %"class.sh::TVector.22"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TVector.22"* @_ZN2sh13TParseContext23addStructDeclaratorListERKNS_11TPublicTypeEPKNS_7TVectorIPNS_11TDeclaratorEEE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"class.sh::TVector.84"*) local_unnamed_addr #4

declare %"class.sh::TVector.22"* @_ZN2sh13TParseContext37addStructDeclaratorListWithQualifiersERKNS_21TTypeQualifierBuilderEPNS_11TPublicTypeEPKNS_7TVectorIPNS_11TDeclaratorEEE(%"class.sh::TParseContext"*, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32), %"struct.sh::TPublicType"*, %"class.sh::TVector.84"*) local_unnamed_addr #4

declare %"class.sh::TDeclarator"* @_ZN2sh13TParseContext21parseStructDeclaratorERKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TDeclarator"* @_ZN2sh13TParseContext26parseStructArrayDeclaratorERKNS_15ImmutableStringERKNS_10TSourceLocEPKNS_7TVectorIjEE(%"class.sh::TParseContext"*, %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TVector"*) local_unnamed_addr #4

declare void @_ZN2sh12TSymbolTable3popEv(%"class.sh::TSymbolTable"*) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext15appendStatementEPNS_12TIntermBlockEPNS_11TIntermNodeE(%"class.sh::TParseContext"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermNode"*) local_unnamed_addr #4

declare %"class.sh::TIntermNode"* @_ZN2sh13TParseContext17addEmptyStatementERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermNode"* @_ZN2sh13TParseContext9addIfElseEPNS_12TIntermTypedENS_15TIntermNodePairERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermSwitch"* @_ZN2sh13TParseContext9addSwitchEPNS_12TIntermTypedEPNS_12TIntermBlockERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermCase"* @_ZN2sh13TParseContext7addCaseEPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermCase"* @_ZN2sh13TParseContext10addDefaultERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare zeroext i1 @_ZN2sh13TParseContext17checkIsScalarBoolERKNS_10TSourceLocEPKNS_12TIntermTypedE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TIntermTyped"*) local_unnamed_addr #4

declare %"class.sh::TIntermNode"* @_ZN2sh13TParseContext23addConditionInitializerERKNS_11TPublicTypeERKNS_15ImmutableStringEPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermNode"* @_ZN2sh13TParseContext7addLoopENS_9TLoopTypeEPNS_11TIntermNodeES3_PNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"*, i32, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermNode"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermBranch"* @_ZN2sh13TParseContext9addBranchE9TOperatorRKNS_10TSourceLocE(%"class.sh::TParseContext"*, i8 zeroext, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.sh::TIntermBranch"* @_ZN2sh13TParseContext9addBranchE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"*, %"class.sh::TIntermNode"*) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext11setTreeRootEPNS_12TIntermBlockE(%"class.sh::TParseContext"*, %"class.sh::TIntermBlock"*) local_unnamed_addr #4

declare void @_ZN2sh13TParseContext29parseFunctionDefinitionHeaderERKNS_10TSourceLocEPKNS_9TFunctionEPPNS_24TIntermFunctionPrototypeE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TFunction"*, %"class.sh::TIntermFunctionPrototype"**) local_unnamed_addr #4

declare %"class.sh::TIntermFunctionDefinition"* @_ZN2sh13TParseContext21addFunctionDefinitionEPNS_24TIntermFunctionPrototypeEPNS_12TIntermBlockERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermBlock"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #4

declare void @_Z7yyerrorPN2sh10TSourceLocEPNS_13TParseContextEPvPKc(%"struct.sh::TSourceLoc"*, %"class.sh::TParseContext"*, i8*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z13glslang_parsePN2sh13TParseContextE(%"class.sh::TParseContext"*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 28
  %3 = load i8*, i8** %2, align 8
  %4 = tail call i32 @_Z7yyparsePN2sh13TParseContextEPv(%"class.sh::TParseContext"* %0, i8* %3)
  ret i32 %4
}

declare %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #4

declare i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"*, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #5

declare void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TType"*, i8 zeroext, i8 zeroext) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh21TQualifierWrapperBaseD2Ev(%"class.sh::TQualifierWrapperBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh21TQualifierWrapperBaseD0Ev(%"class.sh::TQualifierWrapperBase"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !9}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !9}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !9}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !9}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !9}
!35 = distinct !{!35, !11}
!36 = distinct !{!36, !9}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !9}
!43 = distinct !{!43, !11}
!44 = distinct !{!44, !9}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !9}
!51 = distinct !{!51, !11}
!52 = distinct !{!52, !9}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !9}
!59 = distinct !{!59, !11}
!60 = distinct !{!60, !11}
!61 = distinct !{!61, !9}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !9}
!68 = distinct !{!68, !11}
!69 = distinct !{!69, !9}
!70 = !{!71}
!71 = distinct !{!71, !72}
!72 = distinct !{!72, !"LVerDomain"}
!73 = !{!74}
!74 = distinct !{!74, !72}
!75 = distinct !{!75, !9}
!76 = distinct !{!76, !11}
!77 = distinct !{!77, !9}
!78 = !{!79}
!79 = distinct !{!79, !80}
!80 = distinct !{!80, !"LVerDomain"}
!81 = !{!82}
!82 = distinct !{!82, !80}
!83 = distinct !{!83, !9}
!84 = distinct !{!84, !11}
!85 = distinct !{!85, !11}
!86 = distinct !{!86, !9}
