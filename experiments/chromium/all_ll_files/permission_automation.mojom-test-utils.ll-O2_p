; ModuleID = 'gen/third_party/blink/public/mojom/permissions/permission_automation.mojom-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/permissions/permission_automation.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::test::mojom::PermissionAutomationAsyncWaiter" = type { %"class.blink::test::mojom::PermissionAutomation"* }
%"class.blink::test::mojom::PermissionAutomation" = type { i32 (...)** }
%"class.blink::test::mojom::PermissionAutomationInterceptorForTesting" = type { %"class.blink::test::mojom::PermissionAutomation" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::mojom::PermissionDescriptor"* }
%"class.blink::mojom::PermissionDescriptor" = type { i32, %"class.mojo::StructPtr.7" }
%"class.mojo::StructPtr.7" = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::mojom::PermissionDescriptorExtension"* }
%"class.blink::mojom::PermissionDescriptorExtension" = type { i32, %"union.blink::mojom::PermissionDescriptorExtension::Union_" }
%"union.blink::mojom::PermissionDescriptorExtension::Union_" = type { %"class.mojo::InlinedStructPtr"* }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::MidiPermissionDescriptor", i32 }
%"class.blink::mojom::MidiPermissionDescriptor" = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.32, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.25", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.27" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.32 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.33" }>
%"class.base::RefCountedThreadSafe.33" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.35", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.35" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.36" }
%"struct.std::__1::atomic.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN5blink4test5mojom20PermissionAutomationD2Ev = comdat any

$_ZN5blink4test5mojom41PermissionAutomationInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [14 x i8] c"SetPermission\00", align 1
@.str.1 = private unnamed_addr constant [89 x i8] c"gen/third_party/blink/public/mojom/permissions/permission_automation.mojom-test-utils.cc\00", align 1
@_ZTVN5blink4test5mojom41PermissionAutomationInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::test::mojom::PermissionAutomation"*)* @_ZN5blink4test5mojom20PermissionAutomationD2Ev to i8*), i8* bitcast (void (%"class.blink::test::mojom::PermissionAutomationInterceptorForTesting"*)* @_ZN5blink4test5mojom41PermissionAutomationInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::test::mojom::PermissionAutomationInterceptorForTesting"*, %"class.mojo::StructPtr"*, i32, %class.GURL*, %class.GURL*, %"class.base::OnceCallback"*)* @_ZN5blink4test5mojom41PermissionAutomationInterceptorForTesting13SetPermissionEN4mojo9StructPtrINS_5mojom20PermissionDescriptorEEENS5_16PermissionStatusERK4GURLSB_N4base12OnceCallbackIFvbEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink4test5mojom31PermissionAutomationAsyncWaiterC1EPNS1_20PermissionAutomationE = hidden unnamed_addr alias void (%"class.blink::test::mojom::PermissionAutomationAsyncWaiter"*, %"class.blink::test::mojom::PermissionAutomation"*), void (%"class.blink::test::mojom::PermissionAutomationAsyncWaiter"*, %"class.blink::test::mojom::PermissionAutomation"*)* @_ZN5blink4test5mojom31PermissionAutomationAsyncWaiterC2EPNS1_20PermissionAutomationE
@_ZN5blink4test5mojom31PermissionAutomationAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::test::mojom::PermissionAutomationAsyncWaiter"*), void (%"class.blink::test::mojom::PermissionAutomationAsyncWaiter"*)* @_ZN5blink4test5mojom31PermissionAutomationAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4test5mojom41PermissionAutomationInterceptorForTesting13SetPermissionEN4mojo9StructPtrINS_5mojom20PermissionDescriptorEEENS5_16PermissionStatusERK4GURLSB_N4base12OnceCallbackIFvbEEE(%"class.blink::test::mojom::PermissionAutomationInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, i32, %class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.mojo::StructPtr", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = bitcast %"class.blink::test::mojom::PermissionAutomationInterceptorForTesting"* %0 to %"class.blink::test::mojom::PermissionAutomation"* (%"class.blink::test::mojom::PermissionAutomationInterceptorForTesting"*)***
  %10 = load %"class.blink::test::mojom::PermissionAutomation"* (%"class.blink::test::mojom::PermissionAutomationInterceptorForTesting"*)**, %"class.blink::test::mojom::PermissionAutomation"* (%"class.blink::test::mojom::PermissionAutomationInterceptorForTesting"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::test::mojom::PermissionAutomation"* (%"class.blink::test::mojom::PermissionAutomationInterceptorForTesting"*)*, %"class.blink::test::mojom::PermissionAutomation"* (%"class.blink::test::mojom::PermissionAutomationInterceptorForTesting"*)** %10, i64 3
  %12 = load %"class.blink::test::mojom::PermissionAutomation"* (%"class.blink::test::mojom::PermissionAutomationInterceptorForTesting"*)*, %"class.blink::test::mojom::PermissionAutomation"* (%"class.blink::test::mojom::PermissionAutomationInterceptorForTesting"*)** %11, align 8
  %13 = tail call %"class.blink::test::mojom::PermissionAutomation"* %12(%"class.blink::test::mojom::PermissionAutomationInterceptorForTesting"* %0) #10
  %14 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  %15 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 0, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %20, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8
  %22 = bitcast %"class.blink::test::mojom::PermissionAutomation"* %13 to void (%"class.blink::test::mojom::PermissionAutomation"*, %"class.mojo::StructPtr"*, i32, %class.GURL*, %class.GURL*, %"class.base::OnceCallback"*)***
  %23 = load void (%"class.blink::test::mojom::PermissionAutomation"*, %"class.mojo::StructPtr"*, i32, %class.GURL*, %class.GURL*, %"class.base::OnceCallback"*)**, void (%"class.blink::test::mojom::PermissionAutomation"*, %"class.mojo::StructPtr"*, i32, %class.GURL*, %class.GURL*, %"class.base::OnceCallback"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::test::mojom::PermissionAutomation"*, %"class.mojo::StructPtr"*, i32, %class.GURL*, %class.GURL*, %"class.base::OnceCallback"*)*, void (%"class.blink::test::mojom::PermissionAutomation"*, %"class.mojo::StructPtr"*, i32, %class.GURL*, %class.GURL*, %"class.base::OnceCallback"*)** %23, i64 2
  %25 = load void (%"class.blink::test::mojom::PermissionAutomation"*, %"class.mojo::StructPtr"*, i32, %class.GURL*, %class.GURL*, %"class.base::OnceCallback"*)*, void (%"class.blink::test::mojom::PermissionAutomation"*, %"class.mojo::StructPtr"*, i32, %class.GURL*, %class.GURL*, %"class.base::OnceCallback"*)** %24, align 8
  call void %25(%"class.blink::test::mojom::PermissionAutomation"* %13, %"class.mojo::StructPtr"* nonnull %7, i32 %2, %class.GURL* dereferenceable(120) %3, %class.GURL* dereferenceable(120) %4, %"class.base::OnceCallback"* nonnull %8) #10
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #10
  %27 = load %"class.blink::mojom::PermissionDescriptor"*, %"class.blink::mojom::PermissionDescriptor"** %15, align 8
  store %"class.blink::mojom::PermissionDescriptor"* null, %"class.blink::mojom::PermissionDescriptor"** %15, align 8
  %28 = icmp eq %"class.blink::mojom::PermissionDescriptor"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %6
  call void @_ZN5blink5mojom20PermissionDescriptorD1Ev(%"class.blink::mojom::PermissionDescriptor"* nonnull %27) #10
  %30 = bitcast %"class.blink::mojom::PermissionDescriptor"* %27 to i8*
  call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %6, %29
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink4test5mojom31PermissionAutomationAsyncWaiterC2EPNS1_20PermissionAutomationE(%"class.blink::test::mojom::PermissionAutomationAsyncWaiter"* nocapture, %"class.blink::test::mojom::PermissionAutomation"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::test::mojom::PermissionAutomationAsyncWaiter", %"class.blink::test::mojom::PermissionAutomationAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::test::mojom::PermissionAutomation"* %1, %"class.blink::test::mojom::PermissionAutomation"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink4test5mojom31PermissionAutomationAsyncWaiterD2Ev(%"class.blink::test::mojom::PermissionAutomationAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4test5mojom31PermissionAutomationAsyncWaiter13SetPermissionEN4mojo9StructPtrINS_5mojom20PermissionDescriptorEEENS5_16PermissionStatusERK4GURLSB_Pb(%"class.blink::test::mojom::PermissionAutomationAsyncWaiter"* nocapture readonly, %"class.mojo::StructPtr"* nocapture, i32, %class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120), i8*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::RunLoop", align 8
  %8 = alloca %"class.mojo::StructPtr", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = ptrtoint i8* %5 to i64
  %12 = bitcast %"class.base::RunLoop"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %7, i32 0) #10
  %13 = getelementptr inbounds %"class.blink::test::mojom::PermissionAutomationAsyncWaiter", %"class.blink::test::mojom::PermissionAutomationAsyncWaiter"* %0, i64 0, i32 0
  %14 = load %"class.blink::test::mojom::PermissionAutomation"*, %"class.blink::test::mojom::PermissionAutomation"** %13, align 8
  %15 = bitcast %"class.mojo::StructPtr"* %8 to i64*
  %16 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 0, i64* %17, align 8
  %19 = ptrtoint %"class.base::RunLoop"* %7 to i64
  %20 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %21 = bitcast i8* %20 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %21, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink4test5mojom31PermissionAutomationAsyncWaiter13SetPermissionEN4mojo9StructPtrINS3_5mojom20PermissionDescriptorEEENS9_16PermissionStatusERK4GURLSF_PbE3$_0JPNS_7RunLoopESG_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink4test5mojom31PermissionAutomationAsyncWaiter13SetPermissionEN4mojo9StructPtrINS2_5mojom20PermissionDescriptorEEENS8_16PermissionStatusERK4GURLSE_PbE3$_0JPNS_7RunLoopESF_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %22 = getelementptr inbounds i8, i8* %20, i64 40
  %23 = bitcast i8* %22 to i64*
  store i64 %19, i64* %23, align 8, !noalias !2
  %24 = getelementptr inbounds i8, i8* %20, i64 48
  %25 = bitcast i8* %24 to i64*
  store i64 %11, i64* %25, align 8, !noalias !2
  %26 = bitcast %"class.base::OnceCallback"* %9 to i8**
  store i8* %20, i8** %26, align 8, !alias.scope !2
  %27 = bitcast %"class.blink::test::mojom::PermissionAutomation"* %14 to void (%"class.blink::test::mojom::PermissionAutomation"*, %"class.mojo::StructPtr"*, i32, %class.GURL*, %class.GURL*, %"class.base::OnceCallback"*)***
  %28 = load void (%"class.blink::test::mojom::PermissionAutomation"*, %"class.mojo::StructPtr"*, i32, %class.GURL*, %class.GURL*, %"class.base::OnceCallback"*)**, void (%"class.blink::test::mojom::PermissionAutomation"*, %"class.mojo::StructPtr"*, i32, %class.GURL*, %class.GURL*, %"class.base::OnceCallback"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::test::mojom::PermissionAutomation"*, %"class.mojo::StructPtr"*, i32, %class.GURL*, %class.GURL*, %"class.base::OnceCallback"*)*, void (%"class.blink::test::mojom::PermissionAutomation"*, %"class.mojo::StructPtr"*, i32, %class.GURL*, %class.GURL*, %"class.base::OnceCallback"*)** %28, i64 2
  %30 = load void (%"class.blink::test::mojom::PermissionAutomation"*, %"class.mojo::StructPtr"*, i32, %class.GURL*, %class.GURL*, %"class.base::OnceCallback"*)*, void (%"class.blink::test::mojom::PermissionAutomation"*, %"class.mojo::StructPtr"*, i32, %class.GURL*, %class.GURL*, %"class.base::OnceCallback"*)** %29, align 8
  call void %30(%"class.blink::test::mojom::PermissionAutomation"* %14, %"class.mojo::StructPtr"* nonnull %8, i32 %2, %class.GURL* dereferenceable(120) %3, %class.GURL* dereferenceable(120) %4, %"class.base::OnceCallback"* nonnull %9) #10
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #10
  %32 = load %"class.blink::mojom::PermissionDescriptor"*, %"class.blink::mojom::PermissionDescriptor"** %16, align 8
  store %"class.blink::mojom::PermissionDescriptor"* null, %"class.blink::mojom::PermissionDescriptor"** %16, align 8
  %33 = icmp eq %"class.blink::mojom::PermissionDescriptor"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %6
  call void @_ZN5blink5mojom20PermissionDescriptorD1Ev(%"class.blink::mojom::PermissionDescriptor"* nonnull %32) #10
  %35 = bitcast %"class.blink::mojom::PermissionDescriptor"* %32 to i8*
  call void @_ZdlPv(i8* %35) #11
  br label %36

36:                                               ; preds = %6, %34
  %37 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 55) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %10) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4test5mojom20PermissionAutomationD2Ev(%"class.blink::test::mojom::PermissionAutomation"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4test5mojom41PermissionAutomationInterceptorForTestingD0Ev(%"class.blink::test::mojom::PermissionAutomationInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN5blink5mojom20PermissionDescriptorD1Ev(%"class.blink::mojom::PermissionDescriptor"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink4test5mojom31PermissionAutomationAsyncWaiter13SetPermissionEN4mojo9StructPtrINS3_5mojom20PermissionDescriptorEEENS9_16PermissionStatusERK4GURLSF_PbE3$_0JPNS_7RunLoopESG_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb"(%"class.base::internal::BindStateBase"* nocapture readonly, i1 zeroext) #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i8**
  %8 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %9 = load i8*, i8** %7, align 8
  store i8 %3, i8* %9, align 1
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %8) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink4test5mojom31PermissionAutomationAsyncWaiter13SetPermissionEN4mojo9StructPtrINS2_5mojom20PermissionDescriptorEEENS8_16PermissionStatusERK4GURLSE_PbE3$_0JPNS_7RunLoopESF_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink4test5mojom31PermissionAutomationAsyncWaiter13SetPermissionEN4mojo9StructPtrINS3_5mojom20PermissionDescriptorEEENS9_16PermissionStatusERK4GURLSF_PbE3$_0JPNS_7RunLoopERSG_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink4test5mojom31PermissionAutomationAsyncWaiter13SetPermissionEN4mojo9StructPtrINS3_5mojom20PermissionDescriptorEEENS9_16PermissionStatusERK4GURLSF_PbE3$_0JPNS_7RunLoopERSG_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5blink4test5mojom31PermissionAutomationAsyncWaiter13SetPermissionEN4mojo9StructPtrINS1_5mojom20PermissionDescriptorEEENS7_16PermissionStatusERK4GURLSD_PbE3$_0JPNS_7RunLoopERSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5blink4test5mojom31PermissionAutomationAsyncWaiter13SetPermissionEN4mojo9StructPtrINS1_5mojom20PermissionDescriptorEEENS7_16PermissionStatusERK4GURLSD_PbE3$_0JPNS_7RunLoopERSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_"}
