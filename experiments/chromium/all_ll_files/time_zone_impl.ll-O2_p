; ModuleID = '../../third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_impl.cc'
source_filename = "../../third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.4", %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.20", [4 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { float }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::__split_buffer" = type { %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.std::__1::__compressed_pair.29" }
%"class.absl::time_internal::cctz::time_zone::Impl" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.absl::time_internal::cctz::TimeZoneIf"* }
%"class.absl::time_internal::cctz::TimeZoneIf" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.absl::time_internal::cctz::time_zone::Impl"*** }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.absl::time_internal::cctz::time_zone" = type { %"class.absl::time_internal::cctz::time_zone::Impl"* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::tuple.40" = type { i8 }
%"class.std::__1::chrono::duration" = type { i64 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.absl::time_internal::cctz::time_zone::Impl"* }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"struct.std::__1::__split_buffer.47" = type { %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.30", %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::allocator.32"* }
%"class.std::__1::allocator.32" = type { i8 }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4absl13time_internal4cctz9time_zone4ImplEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4absl13time_internal4cctz9time_zone4ImplEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSU_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4absl13time_internal4cctz9time_zone4ImplEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4absl13time_internal4cctz9time_zone4ImplEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE8__rehashEm = comdat any

$_ZNSt3__15dequeIPKN4absl13time_internal4cctz9time_zone4ImplENS_9allocatorIS7_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPKN4absl13time_internal4cctz9time_zone4ImplENS_9allocatorIS8_EEE9push_backEOS8_ = comdat any

$_ZNSt3__114__split_bufferIPPKN4absl13time_internal4cctz9time_zone4ImplENS_9allocatorIS8_EEE10push_frontEOS8_ = comdat any

$_ZNSt3__114__split_bufferIPPKN4absl13time_internal4cctz9time_zone4ImplERNS_9allocatorIS8_EEE10push_frontERKS8_ = comdat any

@_ZN4absl13time_internal4cctz12_GLOBAL__N_113time_zone_mapE = internal unnamed_addr global %"class.std::__1::unordered_map"* null, align 8
@_ZZN4absl13time_internal4cctz9time_zone4Impl24ClearTimeZoneMapTestOnlyEvE7cleared = internal unnamed_addr global %"class.std::__1::deque"* null, align 8
@_ZGVZN4absl13time_internal4cctz9time_zone4Impl24ClearTimeZoneMapTestOnlyEvE7cleared = internal global i64 0, align 8
@_ZZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl = internal unnamed_addr global %"class.absl::time_internal::cctz::time_zone::Impl"* null, align 8
@_ZGVZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl = internal global i64 0, align 8
@.str = private unnamed_addr constant [4 x i8] c"UTC\00", align 8
@_ZZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex = internal unnamed_addr global %"class.std::__1::mutex"* null, align 8
@_ZGVZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex = internal global i64 0, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN4absl13time_internal4cctz9time_zone4ImplC1ERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.std::__1::basic_string"*), void (%"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.std::__1::basic_string"*)* @_ZN4absl13time_internal4cctz9time_zone4ImplC2ERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZN4absl13time_internal4cctz9time_zone4Impl3UTCEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %14, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 32) #12
  %8 = bitcast i8* %7 to %"class.std::__1::basic_string"*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false)
  %9 = getelementptr inbounds i8, i8* %7, i64 3
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds i8, i8* %7, i64 23
  store i8 3, i8* %10, align 1
  %11 = tail call %"class.absl::time_internal::cctz::TimeZoneIf"* @_ZN4absl13time_internal4cctz10TimeZoneIf4LoadERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #11
  %12 = getelementptr inbounds i8, i8* %7, i64 24
  %13 = bitcast i8* %12 to %"class.absl::time_internal::cctz::TimeZoneIf"**
  store %"class.absl::time_internal::cctz::TimeZoneIf"* %11, %"class.absl::time_internal::cctz::TimeZoneIf"** %13, align 8
  store i8* %7, i8** bitcast (%"class.absl::time_internal::cctz::time_zone::Impl"** @_ZZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl) #11
  br label %14

14:                                               ; preds = %0, %3, %6
  %15 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** @_ZZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl, align 8
  ret %"class.absl::time_internal::cctz::time_zone::Impl"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %17, !prof !2

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 32) #12
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 3, i8* %11, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #11
  %12 = getelementptr inbounds i8, i8* %9, i64 3
  store i8 0, i8* %12, align 1
  %13 = bitcast i8* %8 to %"class.std::__1::basic_string"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %9, i64 24, i1 false) #11
  %14 = tail call %"class.absl::time_internal::cctz::TimeZoneIf"* @_ZN4absl13time_internal4cctz10TimeZoneIf4LoadERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #11
  %15 = getelementptr inbounds i8, i8* %8, i64 24
  %16 = bitcast i8* %15 to %"class.absl::time_internal::cctz::TimeZoneIf"**
  store %"class.absl::time_internal::cctz::TimeZoneIf"* %14, %"class.absl::time_internal::cctz::TimeZoneIf"** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  store i8* %8, i8** bitcast (%"class.absl::time_internal::cctz::time_zone::Impl"** @_ZZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl) #11
  br label %17

17:                                               ; preds = %4, %7, %0
  %18 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** @_ZZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl, align 8
  ret %"class.absl::time_internal::cctz::time_zone::Impl"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4absl13time_internal4cctz9time_zone4Impl12LoadTimeZoneERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPS2_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.absl::time_internal::cctz::time_zone"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.40", align 1
  %5 = alloca %"class.std::__1::chrono::duration", align 8
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %19, !prof !2

8:                                                ; preds = %2
  %9 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl) #11
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = tail call i8* @_Znwm(i64 32) #12
  %13 = bitcast i8* %12 to %"class.std::__1::basic_string"*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* nonnull align 8 getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false)
  %14 = getelementptr inbounds i8, i8* %12, i64 3
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds i8, i8* %12, i64 23
  store i8 3, i8* %15, align 1
  %16 = tail call %"class.absl::time_internal::cctz::TimeZoneIf"* @_ZN4absl13time_internal4cctz10TimeZoneIf4LoadERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #11
  %17 = getelementptr inbounds i8, i8* %12, i64 24
  %18 = bitcast i8* %17 to %"class.absl::time_internal::cctz::TimeZoneIf"**
  store %"class.absl::time_internal::cctz::TimeZoneIf"* %16, %"class.absl::time_internal::cctz::TimeZoneIf"** %18, align 8
  store i8* %12, i8** bitcast (%"class.absl::time_internal::cctz::time_zone::Impl"** @_ZZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl) #11
  br label %19

19:                                               ; preds = %2, %8, %11
  %20 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** @_ZZN4absl13time_internal4cctz9time_zone4Impl7UTCImplEvE8utc_impl, align 8
  %21 = bitcast %"class.std::__1::chrono::duration"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.std::__1::chrono::duration", %"class.std::__1::chrono::duration"* %5, i64 0, i32 0
  store i64 0, i64* %22, align 8
  %23 = call zeroext i1 @_ZN4absl13time_internal4cctz19FixedOffsetFromNameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS2_6chrono8durationIlNS2_5ratioILl1ELl1EEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.std::__1::chrono::duration"* nonnull %5) #11
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %19
  %28 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"* %20 to i64
  %29 = bitcast %"class.absl::time_internal::cctz::time_zone"* %1 to i64*
  store i64 %28, i64* %29, align 8
  br label %136

30:                                               ; preds = %19
  %31 = load atomic i8, i8* bitcast (i64* @_ZGVZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex to i8*) acquire, align 8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %38, !prof !2

33:                                               ; preds = %30
  %34 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex) #11
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = call i8* @_Znwm(i64 40) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 40, i1 false) #11
  store i8* %37, i8** bitcast (%"class.std::__1::mutex"** @_ZZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex) #11
  br label %38

38:                                               ; preds = %30, %33, %36
  %39 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** @_ZZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %39) #11
  %40 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4absl13time_internal4cctz12_GLOBAL__N_113time_zone_mapE, align 8
  %41 = icmp eq %"class.std::__1::unordered_map"* %40, null
  br i1 %41, label %54, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %40, i64 0, i32 0
  %44 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4absl13time_internal4cctz9time_zone4ImplEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %43, %"class.std::__1::basic_string"* dereferenceable(24) %0) #11
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %54, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 5
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to %"class.absl::time_internal::cctz::time_zone::Impl"**
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.absl::time_internal::cctz::time_zone"* %1 to i64*
  store i64 %50, i64* %51, align 8
  %52 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** %48, align 8
  %53 = icmp ne %"class.absl::time_internal::cctz::time_zone::Impl"* %52, %20
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %39) #11
  br label %136

54:                                               ; preds = %42, %38
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %39) #11
  %55 = call i8* @_Znwm(i64 32) #12
  %56 = bitcast i8* %55 to %"class.absl::time_internal::cctz::time_zone::Impl"*
  %57 = bitcast i8* %55 to %"class.std::__1::basic_string"*
  %58 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %54
  %63 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* align 8 %63, i64 24, i1 false) #11
  br label %69

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %57, i8* %66, i64 %68) #11
  br label %69

69:                                               ; preds = %62, %64
  %70 = call %"class.absl::time_internal::cctz::TimeZoneIf"* @_ZN4absl13time_internal4cctz10TimeZoneIf4LoadERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %57) #11
  %71 = getelementptr inbounds i8, i8* %55, i64 24
  %72 = bitcast i8* %71 to %"class.absl::time_internal::cctz::TimeZoneIf"**
  store %"class.absl::time_internal::cctz::TimeZoneIf"* %70, %"class.absl::time_internal::cctz::TimeZoneIf"** %72, align 8
  %73 = ptrtoint i8* %55 to i64
  %74 = load atomic i8, i8* bitcast (i64* @_ZGVZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex to i8*) acquire, align 8
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %81, !prof !2

76:                                               ; preds = %69
  %77 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex) #11
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = call i8* @_Znwm(i64 40) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 40, i1 false) #11
  store i8* %80, i8** bitcast (%"class.std::__1::mutex"** @_ZZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex) #11
  br label %81

81:                                               ; preds = %69, %76, %79
  %82 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** @_ZZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %82) #11
  %83 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4absl13time_internal4cctz12_GLOBAL__N_113time_zone_mapE, align 8
  %84 = icmp eq %"class.std::__1::unordered_map"* %83, null
  br i1 %84, label %85, label %90

85:                                               ; preds = %81
  %86 = call i8* @_Znwm(i64 40) #12
  %87 = getelementptr inbounds i8, i8* %86, i64 32
  %88 = bitcast i8* %87 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %88, align 4
  store i8* %86, i8** bitcast (%"class.std::__1::unordered_map"** @_ZN4absl13time_internal4cctz12_GLOBAL__N_113time_zone_mapE to i8**), align 8
  %89 = bitcast i8* %86 to %"class.std::__1::unordered_map"*
  br label %90

90:                                               ; preds = %85, %81
  %91 = phi %"class.std::__1::unordered_map"* [ %89, %85 ], [ %83, %81 ]
  %92 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %91, i64 0, i32 0
  %93 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #11
  %94 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::tuple.40", %"class.std::__1::tuple.40"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %95) #11
  %96 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4absl13time_internal4cctz9time_zone4ImplEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSU_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %92, %"class.std::__1::basic_string"* dereferenceable(24) %0, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.40"* nonnull dereferenceable(1) %4) #11
  %97 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %96, 0
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %97, i64 5
  %99 = bitcast %"struct.std::__1::__hash_node_base"* %98 to %"class.absl::time_internal::cctz::time_zone::Impl"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %95) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #11
  %100 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** %99, align 8
  %101 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"* %100, null
  br i1 %101, label %102, label %108

102:                                              ; preds = %90
  %103 = load %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.absl::time_internal::cctz::TimeZoneIf"** %72, align 8
  %104 = icmp ne %"class.absl::time_internal::cctz::TimeZoneIf"* %103, null
  %105 = select i1 %104, %"class.absl::time_internal::cctz::time_zone::Impl"* %56, %"class.absl::time_internal::cctz::time_zone::Impl"* %20
  store %"class.absl::time_internal::cctz::time_zone::Impl"* %105, %"class.absl::time_internal::cctz::time_zone::Impl"** %99, align 8
  %106 = select i1 %104, %"class.absl::time_internal::cctz::time_zone::Impl"* %56, %"class.absl::time_internal::cctz::time_zone::Impl"* %20
  %107 = select i1 %104, i64 0, i64 %73
  br label %108

108:                                              ; preds = %102, %90
  %109 = phi %"class.absl::time_internal::cctz::time_zone::Impl"* [ %100, %90 ], [ %106, %102 ]
  %110 = phi i64 [ %73, %90 ], [ %107, %102 ]
  %111 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"* %109 to i64
  %112 = bitcast %"class.absl::time_internal::cctz::time_zone"* %1 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** %99, align 8
  %114 = icmp ne %"class.absl::time_internal::cctz::time_zone::Impl"* %113, %20
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %82) #11
  %115 = inttoptr i64 %110 to %"class.absl::time_internal::cctz::time_zone::Impl"*
  %116 = icmp eq i64 %110, 0
  br i1 %116, label %136, label %117

117:                                              ; preds = %108
  %118 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl", %"class.absl::time_internal::cctz::time_zone::Impl"* %115, i64 0, i32 1, i32 0, i32 0, i32 0
  %119 = load %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.absl::time_internal::cctz::TimeZoneIf"** %118, align 8
  store %"class.absl::time_internal::cctz::TimeZoneIf"* null, %"class.absl::time_internal::cctz::TimeZoneIf"** %118, align 8
  %120 = icmp eq %"class.absl::time_internal::cctz::TimeZoneIf"* %119, null
  br i1 %120, label %126, label %121

121:                                              ; preds = %117
  %122 = bitcast %"class.absl::time_internal::cctz::TimeZoneIf"* %119 to void (%"class.absl::time_internal::cctz::TimeZoneIf"*)***
  %123 = load void (%"class.absl::time_internal::cctz::TimeZoneIf"*)**, void (%"class.absl::time_internal::cctz::TimeZoneIf"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.absl::time_internal::cctz::TimeZoneIf"*)*, void (%"class.absl::time_internal::cctz::TimeZoneIf"*)** %123, i64 1
  %125 = load void (%"class.absl::time_internal::cctz::TimeZoneIf"*)*, void (%"class.absl::time_internal::cctz::TimeZoneIf"*)** %124, align 8
  call void %125(%"class.absl::time_internal::cctz::TimeZoneIf"* nonnull %119) #11
  br label %126

126:                                              ; preds = %121, %117
  %127 = inttoptr i64 %110 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl", %"class.absl::time_internal::cctz::time_zone::Impl"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %133) #12
  br label %134

134:                                              ; preds = %131, %126
  %135 = inttoptr i64 %110 to i8*
  call void @_ZdlPv(i8* %135) #12
  br label %136

136:                                              ; preds = %134, %108, %46, %27
  %137 = phi i1 [ true, %27 ], [ %53, %46 ], [ %114, %108 ], [ %114, %134 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  ret i1 %137
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN4absl13time_internal4cctz19FixedOffsetFromNameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS2_6chrono8durationIlNS2_5ratioILl1ELl1EEEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::chrono::duration"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13time_internal4cctz9time_zone4Impl24ClearTimeZoneMapTestOnlyEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %8, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #11
  store i8* %7, i8** bitcast (%"class.std::__1::mutex"** @_ZZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex) #11
  br label %8

8:                                                ; preds = %0, %3, %6
  %9 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** @_ZZN4absl13time_internal4cctz12_GLOBAL__N_113TimeZoneMutexEvE15time_zone_mutex, align 8
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %9) #11
  %10 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4absl13time_internal4cctz12_GLOBAL__N_113time_zone_mapE, align 8
  %11 = icmp eq %"class.std::__1::unordered_map"* %10, null
  br i1 %11, label %143, label %12

12:                                               ; preds = %8
  %13 = load atomic i8, i8* bitcast (i64* @_ZGVZN4absl13time_internal4cctz9time_zone4Impl24ClearTimeZoneMapTestOnlyEvE7cleared to i8*) acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %20, !prof !2

15:                                               ; preds = %12
  %16 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4absl13time_internal4cctz9time_zone4Impl24ClearTimeZoneMapTestOnlyEvE7cleared) #11
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 48, i1 false) #11
  store i8* %19, i8** bitcast (%"class.std::__1::deque"** @_ZZN4absl13time_internal4cctz9time_zone4Impl24ClearTimeZoneMapTestOnlyEvE7cleared to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4absl13time_internal4cctz9time_zone4Impl24ClearTimeZoneMapTestOnlyEvE7cleared) #11
  br label %20

20:                                               ; preds = %15, %18, %12
  %21 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4absl13time_internal4cctz12_GLOBAL__N_113time_zone_mapE, align 8
  %22 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %21, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = bitcast %"struct.std::__1::__hash_node_base"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %28, label %92

26:                                               ; preds = %134
  %27 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4absl13time_internal4cctz12_GLOBAL__N_113time_zone_mapE, align 8
  br label %28

28:                                               ; preds = %26, %20
  %29 = phi %"class.std::__1::unordered_map"* [ %27, %26 ], [ %21, %20 ]
  %30 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %29, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %143, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %29, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %52, label %37

37:                                               ; preds = %33, %49
  %38 = phi %"struct.std::__1::__hash_node_base"* [ %40, %49 ], [ %35, %33 ]
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 2
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %37
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %41 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %46, %37
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %38 to i8*
  tail call void @_ZdlPv(i8* %50) #12
  %51 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %51, label %52, label %37

52:                                               ; preds = %49, %33
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %34, align 8
  %53 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %74, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = add i64 %54, -1
  %59 = and i64 %54, 3
  %60 = icmp ult i64 %58, 3
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = sub i64 %54, %59
  br label %75

63:                                               ; preds = %75, %56
  %64 = phi i64 [ 0, %56 ], [ %89, %75 ]
  %65 = icmp eq i64 %59, 0
  br i1 %65, label %74, label %66

66:                                               ; preds = %63, %66
  %67 = phi i64 [ %71, %66 ], [ %64, %63 ]
  %68 = phi i64 [ %72, %66 ], [ %59, %63 ]
  %69 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %57, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %69, i64 %67
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %70, align 8
  %71 = add nuw i64 %67, 1
  %72 = add i64 %68, -1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %66, !llvm.loop !3

74:                                               ; preds = %63, %66, %52
  store i64 0, i64* %30, align 8
  br label %143

75:                                               ; preds = %75, %61
  %76 = phi i64 [ 0, %61 ], [ %89, %75 ]
  %77 = phi i64 [ %62, %61 ], [ %90, %75 ]
  %78 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %57, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %78, i64 %76
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %79, align 8
  %80 = or i64 %76, 1
  %81 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %57, align 8
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %81, i64 %80
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %82, align 8
  %83 = or i64 %76, 2
  %84 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %57, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %84, i64 %83
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %85, align 8
  %86 = or i64 %76, 3
  %87 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %57, align 8
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %87, i64 %86
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %88, align 8
  %89 = add nuw i64 %76, 4
  %90 = add i64 %77, -4
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %63, label %75

92:                                               ; preds = %20, %134
  %93 = phi i64 [ %141, %134 ], [ %24, %20 ]
  %94 = inttoptr i64 %93 to %"struct.std::__1::__hash_node"*
  %95 = load %"class.std::__1::deque"*, %"class.std::__1::deque"** @_ZZN4absl13time_internal4cctz9time_zone4Impl24ClearTimeZoneMapTestOnlyEvE7cleared, align 8
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %94, i64 0, i32 2, i32 0, i32 1
  %97 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %95, i64 0, i32 0, i32 0, i32 2
  %98 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %95, i64 0, i32 0, i32 0, i32 1
  %101 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %99, %102
  %104 = icmp eq i64 %103, 0
  %105 = shl i64 %103, 6
  %106 = add i64 %105, -1
  %107 = select i1 %104, i64 0, i64 %106
  %108 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %95, i64 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %95, i64 0, i32 0, i32 2, i32 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, %109
  %113 = icmp eq i64 %107, %112
  %114 = inttoptr i64 %102 to %"class.absl::time_internal::cctz::time_zone::Impl"***
  %115 = inttoptr i64 %99 to %"class.absl::time_internal::cctz::time_zone::Impl"***
  br i1 %113, label %116, label %122

116:                                              ; preds = %92
  tail call void @_ZNSt3__15dequeIPKN4absl13time_internal4cctz9time_zone4ImplENS_9allocatorIS7_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %95) #11
  %117 = load i64, i64* %110, align 8
  %118 = load i64, i64* %108, align 8
  %119 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %100, align 8
  %120 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %97, align 8
  %121 = add i64 %118, %117
  br label %122

122:                                              ; preds = %116, %92
  %123 = phi i64 [ %121, %116 ], [ %112, %92 ]
  %124 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %120, %116 ], [ %115, %92 ]
  %125 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %119, %116 ], [ %114, %92 ]
  %126 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %124, %125
  br i1 %126, label %134, label %127

127:                                              ; preds = %122
  %128 = lshr i64 %123, 9
  %129 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %125, i64 %128
  %130 = load %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %129, align 8
  %131 = and i64 %123, 511
  %132 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** %130, i64 %131
  %133 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"** %132 to i64*
  br label %134

134:                                              ; preds = %122, %127
  %135 = phi i64* [ %133, %127 ], [ null, %122 ]
  %136 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"** %96 to i64*
  %137 = load i64, i64* %136, align 8
  store i64 %137, i64* %135, align 8
  %138 = load i64, i64* %110, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %110, align 8
  %140 = inttoptr i64 %93 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %26, label %92

143:                                              ; preds = %74, %28, %8
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %9) #11
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13time_internal4cctz9time_zone4ImplC2ERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl", %"class.absl::time_internal::cctz::time_zone::Impl"* %0, i64 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #11
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %3, i8* %13, i64 %15) #11
  br label %16

16:                                               ; preds = %8, %11
  %17 = tail call %"class.absl::time_internal::cctz::TimeZoneIf"* @_ZN4absl13time_internal4cctz10TimeZoneIf4LoadERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %3) #11
  %18 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl", %"class.absl::time_internal::cctz::time_zone::Impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.absl::time_internal::cctz::TimeZoneIf"* %17, %"class.absl::time_internal::cctz::TimeZoneIf"** %18, align 8
  ret void
}

declare %"class.absl::time_internal::cctz::TimeZoneIf"* @_ZN4absl13time_internal4cctz10TimeZoneIf4LoadERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4absl13time_internal4cctz9time_zone4ImplEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #11
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #11
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #11, !range !5
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %17
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #11
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base"* %112
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #7 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4absl13time_internal4cctz9time_zone4ImplEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSU_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.40"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #11
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %17, i64 %18) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #11
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %114, label %24

24:                                               ; preds = %5
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #11, !range !5
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %114, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %114, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  %47 = load i8, i8* %8, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %13, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = load i8*, i8** %11, align 8
  %53 = select i1 %48, i8* %52, i8* %15
  %54 = icmp eq i64 %51, 0
  br label %55

55:                                               ; preds = %45, %98
  %56 = phi %"struct.std::__1::__hash_node_base"* [ %43, %45 ], [ %100, %98 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %20
  br i1 %60, label %71, label %61

61:                                               ; preds = %55
  br i1 %26, label %64, label %62

62:                                               ; preds = %61
  %63 = and i64 %59, %46
  br label %68

64:                                               ; preds = %61
  %65 = icmp ult i64 %59, %22
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %59, %22
  br label %68

68:                                               ; preds = %62, %64, %66
  %69 = phi i64 [ %63, %62 ], [ %67, %66 ], [ %59, %64 ]
  %70 = icmp eq i64 %69, %35
  br i1 %70, label %71, label %114

71:                                               ; preds = %55, %68
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 2
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  %82 = icmp eq i64 %81, %51
  br i1 %82, label %83, label %98

83:                                               ; preds = %71
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i8*
  %87 = select i1 %76, i8* %85, i8* %86
  br i1 %76, label %94, label %88

88:                                               ; preds = %83
  br i1 %54, label %216, label %89

89:                                               ; preds = %88
  %90 = ptrtoint i8* %85 to i64
  %91 = trunc i64 %90 to i8
  %92 = load i8, i8* %53, align 1
  %93 = icmp eq i8 %92, %91
  br i1 %93, label %102, label %98

94:                                               ; preds = %83
  br i1 %54, label %216, label %95

95:                                               ; preds = %94
  %96 = call i32 @bcmp(i8* %87, i8* %53, i64 %51) #11
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %216, label %98

98:                                               ; preds = %109, %89, %71, %95
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %114, label %55

102:                                              ; preds = %89, %109
  %103 = phi i64 [ %106, %109 ], [ %80, %89 ]
  %104 = phi i8* [ %107, %109 ], [ %86, %89 ]
  %105 = phi i8* [ %110, %109 ], [ %53, %89 ]
  %106 = add i64 %103, -1
  %107 = getelementptr inbounds i8, i8* %104, i64 1
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %216, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds i8, i8* %105, i64 1
  %111 = load i8, i8* %107, align 1
  %112 = load i8, i8* %110, align 1
  %113 = icmp eq i8 %111, %112
  br i1 %113, label %102, label %98

114:                                              ; preds = %68, %98, %41, %34, %5
  %115 = phi i64 [ %35, %34 ], [ -6148914691236517206, %5 ], [ %35, %41 ], [ %35, %98 ], [ %35, %68 ]
  %116 = call i8* @_Znwm(i64 48) #12, !noalias !6
  %117 = getelementptr inbounds i8, i8* %116, i64 16
  %118 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %118, align 8, !noalias !6
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1, !noalias !6
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %114
  %125 = bitcast %"class.std::__1::basic_string"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %125, i64 24, i1 false) #11, !noalias !6
  br label %132

126:                                              ; preds = %114
  %127 = bitcast i8* %117 to %"class.std::__1::basic_string"*
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8, !noalias !6
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8, !noalias !6
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %127, i8* %129, i64 %131) #11, !noalias !6
  br label %132

132:                                              ; preds = %124, %126
  %133 = getelementptr inbounds i8, i8* %116, i64 40
  %134 = bitcast i8* %133 to %"class.absl::time_internal::cctz::time_zone::Impl"**
  store %"class.absl::time_internal::cctz::time_zone::Impl"* null, %"class.absl::time_internal::cctz::time_zone::Impl"** %134, align 8, !noalias !6
  %135 = getelementptr inbounds i8, i8* %116, i64 8
  %136 = bitcast i8* %135 to i64*
  store i64 %20, i64* %136, align 8, !noalias !6
  %137 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %137, align 8, !noalias !6
  %138 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, 1
  %141 = uitofp i64 %140 to float
  %142 = uitofp i64 %22 to float
  %143 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %144 = load float, float* %143, align 4
  %145 = fmul float %144, %142
  %146 = fcmp olt float %145, %141
  %147 = or i1 %23, %146
  br i1 %147, label %148, label %171

148:                                              ; preds = %132
  %149 = shl i64 %22, 1
  %150 = icmp ult i64 %22, 3
  %151 = call i64 @llvm.ctpop.i64(i64 %22) #11, !range !5
  %152 = icmp ugt i64 %151, 1
  %153 = or i1 %150, %152
  %154 = zext i1 %153 to i64
  %155 = or i64 %149, %154
  %156 = fdiv float %141, %144
  %157 = call float @llvm.ceil.f32(float %156) #11
  %158 = fptoui float %157 to i64
  %159 = icmp ult i64 %155, %158
  %160 = select i1 %159, i64 %158, i64 %155
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4absl13time_internal4cctz9time_zone4ImplEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %160)
  %161 = load i64, i64* %21, align 8
  %162 = call i64 @llvm.ctpop.i64(i64 %161) #11, !range !5
  %163 = icmp ugt i64 %162, 1
  br i1 %163, label %167, label %164

164:                                              ; preds = %148
  %165 = add i64 %161, -1
  %166 = and i64 %165, %20
  br label %171

167:                                              ; preds = %148
  %168 = icmp ult i64 %20, %161
  br i1 %168, label %171, label %169

169:                                              ; preds = %167
  %170 = urem i64 %20, %161
  br label %171

171:                                              ; preds = %169, %167, %164, %132
  %172 = phi i64 [ %22, %132 ], [ %161, %164 ], [ %161, %167 ], [ %161, %169 ]
  %173 = phi i64 [ %115, %132 ], [ %166, %164 ], [ %20, %167 ], [ %170, %169 ]
  %174 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %175 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %174, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %175, i64 %173
  %177 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base"* %177, null
  br i1 %178, label %179, label %205

179:                                              ; preds = %171
  %180 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %181 = bitcast %"struct.std::__1::__hash_node_base"* %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast i8* %116 to i64*
  store i64 %182, i64* %183, align 8
  %184 = bitcast %"struct.std::__1::__hash_node_base"* %180 to i8**
  store i8* %116, i8** %184, align 8
  store %"struct.std::__1::__hash_node_base"* %180, %"struct.std::__1::__hash_node_base"** %176, align 8
  %185 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %137, align 8
  %186 = icmp eq %"struct.std::__1::__hash_node_base"* %185, null
  br i1 %186, label %212, label %187

187:                                              ; preds = %179
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %185, i64 1
  %189 = bitcast %"struct.std::__1::__hash_node_base"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = call i64 @llvm.ctpop.i64(i64 %172) #11, !range !5
  %192 = icmp ugt i64 %191, 1
  br i1 %192, label %196, label %193

193:                                              ; preds = %187
  %194 = add i64 %172, -1
  %195 = and i64 %190, %194
  br label %200

196:                                              ; preds = %187
  %197 = icmp ult i64 %190, %172
  br i1 %197, label %200, label %198

198:                                              ; preds = %196
  %199 = urem i64 %190, %172
  br label %200

200:                                              ; preds = %193, %196, %198
  %201 = phi i64 [ %195, %193 ], [ %199, %198 ], [ %190, %196 ]
  %202 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %174, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %202, i64 %201
  %204 = bitcast %"struct.std::__1::__hash_node_base"** %203 to i8**
  br label %210

205:                                              ; preds = %171
  %206 = bitcast %"struct.std::__1::__hash_node_base"* %177 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast i8* %116 to i64*
  store i64 %207, i64* %208, align 8
  %209 = bitcast %"struct.std::__1::__hash_node_base"* %177 to i8**
  br label %210

210:                                              ; preds = %200, %205
  %211 = phi i8** [ %209, %205 ], [ %204, %200 ]
  store i8* %116, i8** %211, align 8
  br label %212

212:                                              ; preds = %210, %179
  %213 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base"*
  %214 = load i64, i64* %138, align 8
  %215 = add i64 %214, 1
  store i64 %215, i64* %138, align 8
  br label %216

216:                                              ; preds = %88, %94, %95, %102, %212
  %217 = phi i8 [ 1, %212 ], [ 0, %102 ], [ 0, %95 ], [ 0, %94 ], [ 0, %88 ]
  %218 = phi %"struct.std::__1::__hash_node_base"* [ %213, %212 ], [ %56, %102 ], [ %56, %95 ], [ %56, %94 ], [ %56, %88 ]
  %219 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %218, 0
  %220 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %219, i8 %217, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %220
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4absl13time_internal4cctz9time_zone4ImplEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !5
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4absl13time_internal4cctz9time_zone4ImplEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !5
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !5
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4absl13time_internal4cctz9time_zone4ImplEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4absl13time_internal4cctz9time_zone4ImplEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !9

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !5
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #11
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %154 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ], [ %121, %141 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %187, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #12
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPKN4absl13time_internal4cctz9time_zone4ImplENS_9allocatorIS7_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.absl::time_internal::cctz::time_zone::Impl"**, align 8
  %3 = alloca %"class.absl::time_internal::cctz::time_zone::Impl"**, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.47", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 511
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -512
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %10, align 8
  %12 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %11, i64 1
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %14, %"class.absl::time_internal::cctz::time_zone::Impl"**** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %17, align 8
  %19 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %16, %18
  %20 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %18 to i64
  %21 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %23, align 8
  %25 = icmp ugt %"class.absl::time_internal::cctz::time_zone::Impl"*** %14, %24
  %26 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %14, i64 %32
  %34 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %33 to i8*
  %40 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #11
  %41 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %33, i64 %36
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %44, %"class.absl::time_internal::cctz::time_zone::Impl"**** %15, align 8
  %45 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %43, i64 %32
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %45, %"class.absl::time_internal::cctz::time_zone::Impl"**** %10, align 8
  %46 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #12
  %60 = bitcast i8* %59 to %"class.absl::time_internal::cctz::time_zone::Impl"***
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %60, i64 %57
  %63 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %62 to i64
  %64 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %60, i64 %53
  %65 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %64 to i64
  %66 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %14 to i64
  %67 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %79, i64 1
  %87 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %86 to i64
  %88 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !10

91:                                               ; preds = %78
  %92 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %99, i64 1
  %106 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %101, i64 1
  %107 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %99, i64 2
  %111 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %101, i64 2
  %112 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %99, i64 3
  %116 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %101, i64 3
  %117 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %99, i64 4
  %121 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %101, i64 4
  %122 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %99, i64 5
  %126 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %101, i64 5
  %127 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %99, i64 6
  %131 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %101, i64 6
  %132 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %99, i64 7
  %136 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %101, i64 7
  %137 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %99, i64 8
  %141 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %140 to i64
  %142 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %101, i64 8
  %143 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %70 to i64
  %146 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  %156 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %15, align 8
  %161 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %160, i64 1
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %161, %"class.absl::time_internal::cctz::time_zone::Impl"**** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.absl::time_internal::cctz::time_zone::Impl"***
  %181 = inttoptr i64 %169 to %"class.absl::time_internal::cctz::time_zone::Impl"***
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #11
  %186 = tail call i8* @_Znwm(i64 4096) #12
  %187 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPPKN4absl13time_internal4cctz9time_zone4ImplENS_9allocatorIS8_EEE9push_backEOS8_(%"struct.std::__1::__split_buffer"* %163, %"class.absl::time_internal::cctz::time_zone::Impl"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #11
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #11
  %190 = tail call i8* @_Znwm(i64 4096) #12
  %191 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPPKN4absl13time_internal4cctz9time_zone4ImplENS_9allocatorIS8_EEE10push_frontEOS8_(%"struct.std::__1::__split_buffer"* %163, %"class.absl::time_internal::cctz::time_zone::Impl"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #11
  %192 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %167, align 8
  %193 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %192, i64 1
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %195, %"class.absl::time_internal::cctz::time_zone::Impl"**** %167, align 8
  %196 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %164, align 8
  %197 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %172, align 8
  %198 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %196, %197
  %199 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %197 to i64
  %200 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %202, align 8
  %204 = icmp ugt %"class.absl::time_internal::cctz::time_zone::Impl"*** %195, %203
  %205 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %195, i64 %211
  %213 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %212 to i8*
  %219 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #11
  %220 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %212, i64 %215
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %223, %"class.absl::time_internal::cctz::time_zone::Impl"**** %164, align 8
  %224 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %222, i64 %211
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %224, %"class.absl::time_internal::cctz::time_zone::Impl"**** %167, align 8
  %225 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #13
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #12
  %237 = bitcast i8* %236 to %"class.absl::time_internal::cctz::time_zone::Impl"***
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %237, i64 %234
  %240 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %239 to i64
  %241 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %237, i64 %230
  %242 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %241 to i64
  %243 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %195 to i64
  %244 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %256, i64 1
  %264 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %263 to i64
  %265 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !11

268:                                              ; preds = %255
  %269 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %276, i64 1
  %283 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %278, i64 1
  %284 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %276, i64 2
  %288 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %278, i64 2
  %289 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %276, i64 3
  %293 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %278, i64 3
  %294 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %276, i64 4
  %298 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %278, i64 4
  %299 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %276, i64 5
  %303 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %278, i64 5
  %304 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %276, i64 6
  %308 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %278, i64 6
  %309 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %276, i64 7
  %313 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %278, i64 7
  %314 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %276, i64 8
  %318 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %317 to i64
  %319 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %278, i64 8
  %320 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %247 to i64
  %323 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %325 to i8*
  call void @_ZdlPv(i8* %330) #12
  %331 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %164, align 8
  %336 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %335, i64 1
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %336, %"class.absl::time_internal::cctz::time_zone::Impl"**** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #11
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** null, %"class.absl::time_internal::cctz::time_zone::Impl"**** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.32"** %342 to %"class.std::__1::__compressed_pair.29"**
  store %"class.std::__1::__compressed_pair.29"* %346, %"class.std::__1::__compressed_pair.29"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #13
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #12
  %354 = bitcast i8* %353 to %"class.absl::time_internal::cctz::time_zone::Impl"***
  %355 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %354, i64 %171
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %356, %"class.absl::time_internal::cctz::time_zone::Impl"**** %340, align 8
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %356, %"class.absl::time_internal::cctz::time_zone::Impl"**** %339, align 8
  %357 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %354, i64 %345
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %357, %"class.absl::time_internal::cctz::time_zone::Impl"**** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #12
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.absl::time_internal::cctz::time_zone::Impl"*** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %356, i64 %370
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %371, %"class.absl::time_internal::cctz::time_zone::Impl"**** %340, align 8
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %371, %"class.absl::time_internal::cctz::time_zone::Impl"**** %339, align 8
  %372 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #13
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i64*
  %382 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #12
  %386 = bitcast i8* %385 to %"class.absl::time_internal::cctz::time_zone::Impl"***
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %386, i64 %383
  %389 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %388 to i64
  %390 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %386, i64 %377
  %391 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #12
  %394 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %164, align 8
  %395 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %167, align 8
  %396 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %395 to i64
  %397 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %406, i64 1
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %408, %"class.absl::time_internal::cctz::time_zone::Impl"**** %340, align 8
  %409 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i64*
  %413 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %339 to i64*
  %414 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %340 to i64*
  %415 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.absl::time_internal::cctz::time_zone::Impl"***
  %441 = inttoptr i64 %434 to %"class.absl::time_internal::cctz::time_zone::Impl"***
  %442 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %441, i64 -1
  %445 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %441, i64 %448
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %449, %"class.absl::time_internal::cctz::time_zone::Impl"**** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #12
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #11
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPPKN4absl13time_internal4cctz9time_zone4ImplERNS_9allocatorIS8_EEE10push_frontERKS8_(%"struct.std::__1::__split_buffer.47"* nonnull %4, %"class.absl::time_internal::cctz::time_zone::Impl"*** dereferenceable(8) %457)
  %458 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %167, align 8
  %459 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPKN4absl13time_internal4cctz9time_zone4ImplENS_9allocatorIS8_EEE9push_backEOS8_(%"struct.std::__1::__split_buffer"*, %"class.absl::time_internal::cctz::time_zone::Impl"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %5, align 8
  %7 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %4, %6
  %8 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %6 to i64
  %9 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %13, align 8
  %15 = icmp ugt %"class.absl::time_internal::cctz::time_zone::Impl"*** %12, %14
  %16 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %12, i64 %22
  %24 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %23 to i8*
  %30 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #11
  %31 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %23, i64 %26
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %34, %"class.absl::time_internal::cctz::time_zone::Impl"**** %3, align 8
  %35 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %33, i64 %22
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %35, %"class.absl::time_internal::cctz::time_zone::Impl"**** %11, align 8
  %36 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to %"class.absl::time_internal::cctz::time_zone::Impl"***
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %50, i64 %47
  %53 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %52 to i64
  %54 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %50, i64 %43
  %55 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %54 to i64
  %56 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %12 to i64
  %57 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %69, i64 1
  %77 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %76 to i64
  %78 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !12

81:                                               ; preds = %68
  %82 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %89, i64 1
  %96 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %91, i64 1
  %97 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %89, i64 2
  %101 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %91, i64 2
  %102 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %89, i64 3
  %106 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %91, i64 3
  %107 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %89, i64 4
  %111 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %91, i64 4
  %112 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %89, i64 5
  %116 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %91, i64 5
  %117 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %89, i64 6
  %121 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %91, i64 6
  %122 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %89, i64 7
  %126 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %91, i64 7
  %127 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %89, i64 8
  %131 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %130 to i64
  %132 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %91, i64 8
  %133 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %60 to i64
  %136 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %3, align 8
  %153 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %152, i64 1
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %153, %"class.absl::time_internal::cctz::time_zone::Impl"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPKN4absl13time_internal4cctz9time_zone4ImplENS_9allocatorIS8_EEE10push_frontEOS8_(%"struct.std::__1::__split_buffer"*, %"class.absl::time_internal::cctz::time_zone::Impl"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %5, align 8
  %7 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %4, %6
  %8 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %12, align 8
  %14 = icmp ult %"class.absl::time_internal::cctz::time_zone::Impl"*** %11, %13
  %15 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %12 to i64*
  %16 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %11, i64 %22
  %24 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %23, i64 %29
  %31 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %30 to i8*
  %32 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %36, %"class.absl::time_internal::cctz::time_zone::Impl"**** %3, align 8
  %37 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %35, i64 %22
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %37, %"class.absl::time_internal::cctz::time_zone::Impl"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"class.absl::time_internal::cctz::time_zone::Impl"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %51, i64 %48
  %54 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %53 to i64
  %55 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %51, i64 %43
  %56 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %55 to i64
  %57 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %4 to i64
  %58 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %70, i64 1
  %78 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %77 to i64
  %79 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !13

82:                                               ; preds = %69
  %83 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 1
  %97 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 1
  %98 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 2
  %102 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 2
  %103 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 3
  %107 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 3
  %108 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 4
  %112 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 4
  %113 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 5
  %117 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 5
  %118 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 6
  %122 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 6
  %123 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 7
  %127 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 7
  %128 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 8
  %132 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %131 to i64
  %133 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 8
  %134 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %61 to i64
  %137 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %148, i64 -1
  %150 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %3, align 8
  %154 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %153, i64 -1
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %154, %"class.absl::time_internal::cctz::time_zone::Impl"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPKN4absl13time_internal4cctz9time_zone4ImplERNS_9allocatorIS8_EEE10push_frontERKS8_(%"struct.std::__1::__split_buffer.47"*, %"class.absl::time_internal::cctz::time_zone::Impl"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %0, i64 0, i32 1
  %4 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %0, i64 0, i32 0
  %6 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %5, align 8
  %7 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %4, %6
  %8 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %0, i64 0, i32 2
  %11 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %12, align 8
  %14 = icmp ult %"class.absl::time_internal::cctz::time_zone::Impl"*** %11, %13
  %15 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %12 to i64*
  %16 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %11, i64 %22
  %24 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %23, i64 %29
  %31 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %30 to i8*
  %32 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %36, %"class.absl::time_internal::cctz::time_zone::Impl"**** %3, align 8
  %37 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %35, i64 %22
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %37, %"class.absl::time_internal::cctz::time_zone::Impl"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.47"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"class.absl::time_internal::cctz::time_zone::Impl"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %51, i64 %48
  %54 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %53 to i64
  %55 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %51, i64 %43
  %56 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %55 to i64
  %57 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %4 to i64
  %58 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %70, i64 1
  %78 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %77 to i64
  %79 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !14

82:                                               ; preds = %69
  %83 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 1
  %97 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 1
  %98 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 2
  %102 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 2
  %103 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 3
  %107 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 3
  %108 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 4
  %112 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 4
  %113 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 5
  %117 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 5
  %118 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 6
  %122 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 6
  %123 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 7
  %127 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 7
  %128 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %90, i64 8
  %132 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %131 to i64
  %133 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %92, i64 8
  %134 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.absl::time_internal::cctz::time_zone::Impl"*** %61 to i64
  %137 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.absl::time_internal::cctz::time_zone::Impl"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %148, i64 -1
  %150 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.absl::time_internal::cctz::time_zone::Impl"***, %"class.absl::time_internal::cctz::time_zone::Impl"**** %3, align 8
  %154 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl"**, %"class.absl::time_internal::cctz::time_zone::Impl"*** %153, i64 -1
  store %"class.absl::time_internal::cctz::time_zone::Impl"*** %154, %"class.absl::time_internal::cctz::time_zone::Impl"**** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{i64 0, i64 65}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4absl13time_internal4cctz9time_zone4ImplEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSU_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISF_PvEENS_22__hash_node_destructorINS5_IS12_EEEEEEmOT_DpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4absl13time_internal4cctz9time_zone4ImplEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSU_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISF_PvEENS_22__hash_node_destructorINS5_IS12_EEEEEEmOT_DpOT0_"}
!9 = distinct !{!9, !4}
!10 = distinct !{!10, !4}
!11 = distinct !{!11, !4}
!12 = distinct !{!12, !4}
!13 = distinct !{!13, !4}
!14 = distinct !{!14, !4}
