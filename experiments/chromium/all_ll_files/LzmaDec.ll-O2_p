; ModuleID = '../../third_party/lzma_sdk/LzmaDec.c'
source_filename = "../../third_party/lzma_sdk/LzmaDec.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.CLzmaDec = type { %struct._CLzmaProps, i32*, i8*, i8*, i32, i32, i64, i64, i32, i32, i32, [4 x i32], i32, i32, i32, i32, i32, [20 x i8] }
%struct._CLzmaProps = type { i32, i32, i32, i32 }
%struct.ISzAlloc = type { i8* (i8*, i64)*, void (i8*, i8*)* }

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @LzmaDec_InitDicAndState(%struct.CLzmaDec* nocapture, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 13
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 12
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 16
  store i32 0, i32* %6, align 4
  %7 = icmp eq i32 %1, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 8
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 9
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 14
  store i32 1, i32* %11, align 4
  br label %12

12:                                               ; preds = %3, %8
  %13 = icmp eq i32 %2, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 14
  store i32 1, i32* %15, align 4
  br label %16

16:                                               ; preds = %12, %14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @LzmaDec_Init(%struct.CLzmaDec* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 6
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 13
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 12
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 16
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 8
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 9
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 14
  store i32 1, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @LzmaDec_DecodeToDic(%struct.CLzmaDec*, i64, i8*, i64* nocapture, i32, i32* nocapture) local_unnamed_addr #1 {
  %7 = load i64, i64* %3, align 8
  store i64 0, i64* %3, align 8
  %8 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 12
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, -1
  %11 = icmp ult i32 %10, 273
  br i1 %11, label %12, label %88

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 6
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 7
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 11, i64 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = sub i64 %1, %16
  %23 = zext i32 %9 to i64
  %24 = icmp ult i64 %22, %23
  %25 = trunc i64 %22 to i32
  %26 = select i1 %24, i32 %25, i32 %9
  %27 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 9
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %12
  %31 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 8
  %32 = load i32, i32* %31, align 8
  br label %41

33:                                               ; preds = %12
  %34 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 8
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 %35, %37
  %39 = icmp ugt i32 %38, %26
  br i1 %39, label %41, label %40

40:                                               ; preds = %33
  store i32 %35, i32* %27, align 4
  br label %41

41:                                               ; preds = %40, %33, %30
  %42 = phi i32 [ %32, %30 ], [ %37, %33 ], [ %37, %40 ]
  %43 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 8
  %44 = add i32 %42, %26
  store i32 %44, i32* %43, align 8
  %45 = sub i32 %9, %26
  store i32 %45, i32* %8, align 4
  %46 = icmp eq i32 %26, 0
  br i1 %46, label %86, label %47

47:                                               ; preds = %41
  %48 = and i32 %26, 1
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %60, label %50

50:                                               ; preds = %47
  %51 = add i32 %26, -1
  %52 = sub i64 %16, %21
  %53 = icmp ult i64 %16, %21
  %54 = select i1 %53, i64 %18, i64 0
  %55 = add i64 %52, %54
  %56 = getelementptr inbounds i8, i8* %14, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = getelementptr inbounds i8, i8* %14, i64 %16
  store i8 %57, i8* %58, align 1
  %59 = add i64 %16, 1
  br label %60

60:                                               ; preds = %47, %50
  %61 = phi i64 [ undef, %47 ], [ %59, %50 ]
  %62 = phi i32 [ %26, %47 ], [ %51, %50 ]
  %63 = phi i64 [ %16, %47 ], [ %59, %50 ]
  %64 = icmp eq i32 %26, 1
  br i1 %64, label %86, label %65

65:                                               ; preds = %60, %65
  %66 = phi i32 [ %76, %65 ], [ %62, %60 ]
  %67 = phi i64 [ %84, %65 ], [ %63, %60 ]
  %68 = sub i64 %67, %21
  %69 = icmp ult i64 %67, %21
  %70 = select i1 %69, i64 %18, i64 0
  %71 = add i64 %68, %70
  %72 = getelementptr inbounds i8, i8* %14, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = getelementptr inbounds i8, i8* %14, i64 %67
  store i8 %73, i8* %74, align 1
  %75 = add i64 %67, 1
  %76 = add i32 %66, -2
  %77 = sub i64 %75, %21
  %78 = icmp ult i64 %75, %21
  %79 = select i1 %78, i64 %18, i64 0
  %80 = add i64 %77, %79
  %81 = getelementptr inbounds i8, i8* %14, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = getelementptr inbounds i8, i8* %14, i64 %75
  store i8 %82, i8* %83, align 1
  %84 = add i64 %67, 2
  %85 = icmp eq i32 %76, 0
  br i1 %85, label %86, label %65

86:                                               ; preds = %60, %65, %41
  %87 = phi i64 [ %16, %41 ], [ %61, %60 ], [ %84, %65 ]
  store i64 %87, i64* %15, align 8
  br label %88

88:                                               ; preds = %6, %86
  store i32 0, i32* %5, align 4
  %89 = load i32, i32* %8, align 4
  %90 = icmp eq i32 %89, 274
  br i1 %90, label %369, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 13
  %93 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 16
  %94 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 17, i64 0
  %95 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 17, i64 1
  %96 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 17, i64 2
  %97 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 17, i64 3
  %98 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 17, i64 4
  %99 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 5
  %100 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 4
  %101 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 6
  %102 = icmp eq i32 %4, 0
  %103 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 14
  %104 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 0
  %105 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 1
  %106 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 1
  %107 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 11, i64 3
  %108 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 10
  %109 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 3
  %110 = bitcast i8** %109 to i64*
  %111 = ptrtoint i8* %94 to i64
  %112 = bitcast i32* %108 to <4 x i32>*
  br label %113

113:                                              ; preds = %91, %363
  %114 = phi i64 [ %7, %91 ], [ %366, %363 ]
  %115 = phi i8* [ %2, %91 ], [ %364, %363 ]
  %116 = load i32, i32* %92, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %160, label %118

118:                                              ; preds = %113
  %119 = icmp eq i64 %114, 0
  br i1 %119, label %135, label %120

120:                                              ; preds = %118, %125
  %121 = phi i64 [ %133, %125 ], [ %114, %118 ]
  %122 = phi i8* [ %126, %125 ], [ %115, %118 ]
  %123 = load i32, i32* %93, align 4
  %124 = icmp ult i32 %123, 5
  br i1 %124, label %125, label %140

125:                                              ; preds = %120
  %126 = getelementptr inbounds i8, i8* %122, i64 1
  %127 = load i8, i8* %122, align 1
  %128 = add nuw nsw i32 %123, 1
  store i32 %128, i32* %93, align 4
  %129 = zext i32 %123 to i64
  %130 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 17, i64 %129
  store i8 %127, i8* %130, align 1
  %131 = load i64, i64* %3, align 8
  %132 = add i64 %131, 1
  store i64 %132, i64* %3, align 8
  %133 = add i64 %121, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %120

135:                                              ; preds = %125, %118
  %136 = phi i8* [ %115, %118 ], [ %126, %125 ]
  %137 = load i32, i32* %93, align 4
  %138 = icmp ult i32 %137, 5
  br i1 %138, label %139, label %140

139:                                              ; preds = %135
  store i32 3, i32* %5, align 4
  br label %379

140:                                              ; preds = %120, %135
  %141 = phi i64 [ 0, %135 ], [ %121, %120 ]
  %142 = phi i8* [ %136, %135 ], [ %122, %120 ]
  %143 = load i8, i8* %94, align 8
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %379

145:                                              ; preds = %140
  %146 = load i8, i8* %95, align 1
  %147 = zext i8 %146 to i32
  %148 = shl nuw i32 %147, 24
  %149 = load i8, i8* %96, align 2
  %150 = zext i8 %149 to i32
  %151 = shl nuw nsw i32 %150, 16
  %152 = or i32 %151, %148
  %153 = load i8, i8* %97, align 1
  %154 = zext i8 %153 to i32
  %155 = shl nuw nsw i32 %154, 8
  %156 = or i32 %152, %155
  %157 = load i8, i8* %98, align 4
  %158 = zext i8 %157 to i32
  %159 = or i32 %156, %158
  store i32 %159, i32* %99, align 4
  store i32 -1, i32* %100, align 8
  store i32 0, i32* %92, align 8
  store i32 0, i32* %93, align 4
  br label %160

160:                                              ; preds = %113, %145
  %161 = phi i8* [ %142, %145 ], [ %115, %113 ]
  %162 = phi i64 [ %141, %145 ], [ %114, %113 ]
  %163 = load i64, i64* %101, align 8
  %164 = icmp ult i64 %163, %1
  br i1 %164, label %176, label %165

165:                                              ; preds = %160
  %166 = load i32, i32* %8, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %172

168:                                              ; preds = %165
  %169 = load i32, i32* %99, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  store i32 4, i32* %5, align 4
  br label %379

172:                                              ; preds = %168, %165
  br i1 %102, label %173, label %174

173:                                              ; preds = %172
  store i32 2, i32* %5, align 4
  br label %379

174:                                              ; preds = %172
  br i1 %167, label %176, label %175

175:                                              ; preds = %174
  store i32 2, i32* %5, align 4
  br label %379

176:                                              ; preds = %174, %160
  %177 = phi i32 [ 0, %160 ], [ 1, %174 ]
  %178 = load i32, i32* %103, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %268, label %180

180:                                              ; preds = %176
  %181 = load i32, i32* %104, align 8
  %182 = load i32, i32* %105, align 4
  %183 = add i32 %182, %181
  %184 = shl i32 768, %183
  %185 = add i32 %184, 1846
  %186 = zext i32 %185 to i64
  %187 = load i32*, i32** %106, align 8
  %188 = icmp eq i32 %185, 0
  br i1 %188, label %267, label %189

189:                                              ; preds = %180
  %190 = icmp ult i32 %185, 8
  br i1 %190, label %260, label %191

191:                                              ; preds = %189
  %192 = and i64 %186, 4294967288
  %193 = add nsw i64 %192, -8
  %194 = lshr exact i64 %193, 3
  %195 = add nuw nsw i64 %194, 1
  %196 = and i64 %195, 7
  %197 = icmp ult i64 %193, 56
  br i1 %197, label %245, label %198

198:                                              ; preds = %191
  %199 = sub nsw i64 %195, %196
  br label %200

200:                                              ; preds = %200, %198
  %201 = phi i64 [ 0, %198 ], [ %242, %200 ]
  %202 = phi i64 [ %199, %198 ], [ %243, %200 ]
  %203 = getelementptr inbounds i32, i32* %187, i64 %201
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %204, align 4
  %205 = getelementptr inbounds i32, i32* %203, i64 4
  %206 = bitcast i32* %205 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %206, align 4
  %207 = or i64 %201, 8
  %208 = getelementptr inbounds i32, i32* %187, i64 %207
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %209, align 4
  %210 = getelementptr inbounds i32, i32* %208, i64 4
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %211, align 4
  %212 = or i64 %201, 16
  %213 = getelementptr inbounds i32, i32* %187, i64 %212
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %214, align 4
  %215 = getelementptr inbounds i32, i32* %213, i64 4
  %216 = bitcast i32* %215 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %216, align 4
  %217 = or i64 %201, 24
  %218 = getelementptr inbounds i32, i32* %187, i64 %217
  %219 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %219, align 4
  %220 = getelementptr inbounds i32, i32* %218, i64 4
  %221 = bitcast i32* %220 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %221, align 4
  %222 = or i64 %201, 32
  %223 = getelementptr inbounds i32, i32* %187, i64 %222
  %224 = bitcast i32* %223 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %224, align 4
  %225 = getelementptr inbounds i32, i32* %223, i64 4
  %226 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %226, align 4
  %227 = or i64 %201, 40
  %228 = getelementptr inbounds i32, i32* %187, i64 %227
  %229 = bitcast i32* %228 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %229, align 4
  %230 = getelementptr inbounds i32, i32* %228, i64 4
  %231 = bitcast i32* %230 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %231, align 4
  %232 = or i64 %201, 48
  %233 = getelementptr inbounds i32, i32* %187, i64 %232
  %234 = bitcast i32* %233 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %234, align 4
  %235 = getelementptr inbounds i32, i32* %233, i64 4
  %236 = bitcast i32* %235 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %236, align 4
  %237 = or i64 %201, 56
  %238 = getelementptr inbounds i32, i32* %187, i64 %237
  %239 = bitcast i32* %238 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %239, align 4
  %240 = getelementptr inbounds i32, i32* %238, i64 4
  %241 = bitcast i32* %240 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %241, align 4
  %242 = add i64 %201, 64
  %243 = add i64 %202, -8
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %200, !llvm.loop !2

245:                                              ; preds = %200, %191
  %246 = phi i64 [ 0, %191 ], [ %242, %200 ]
  %247 = icmp eq i64 %196, 0
  br i1 %247, label %258, label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %255, %248 ], [ %246, %245 ]
  %250 = phi i64 [ %256, %248 ], [ %196, %245 ]
  %251 = getelementptr inbounds i32, i32* %187, i64 %249
  %252 = bitcast i32* %251 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %252, align 4
  %253 = getelementptr inbounds i32, i32* %251, i64 4
  %254 = bitcast i32* %253 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1024, i32 1024, i32 1024>, <4 x i32>* %254, align 4
  %255 = add i64 %249, 8
  %256 = add i64 %250, -1
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %258, label %248, !llvm.loop !4

258:                                              ; preds = %248, %245
  %259 = icmp eq i64 %192, %186
  br i1 %259, label %267, label %260

260:                                              ; preds = %258, %189
  %261 = phi i64 [ 0, %189 ], [ %192, %258 ]
  br label %262

262:                                              ; preds = %260, %262
  %263 = phi i64 [ %265, %262 ], [ %261, %260 ]
  %264 = getelementptr inbounds i32, i32* %187, i64 %263
  store i32 1024, i32* %264, align 4
  %265 = add nuw nsw i64 %263, 1
  %266 = icmp eq i64 %265, %186
  br i1 %266, label %267, label %262, !llvm.loop !6

267:                                              ; preds = %262, %258, %180
  store i32 1, i32* %107, align 4
  store <4 x i32> <i32 0, i32 1, i32 1, i32 1>, <4 x i32>* %112, align 8
  store i32 0, i32* %103, align 4
  br label %268

268:                                              ; preds = %176, %267
  %269 = load i32, i32* %93, align 4
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %276, label %271

271:                                              ; preds = %268
  %272 = icmp ult i32 %269, 20
  br i1 %272, label %273, label %323

273:                                              ; preds = %271
  %274 = zext i32 %269 to i64
  %275 = sub nuw nsw i32 20, %269
  br label %305

276:                                              ; preds = %268
  %277 = icmp ult i64 %162, 20
  %278 = icmp ne i32 %177, 0
  %279 = or i1 %277, %278
  br i1 %279, label %280, label %291

280:                                              ; preds = %276
  %281 = tail call fastcc i32 @LzmaDec_TryDummy(%struct.CLzmaDec* %0, i8* %161, i64 %162)
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %287

283:                                              ; preds = %280
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 1 %161, i64 %162, i1 false)
  %284 = trunc i64 %162 to i32
  store i32 %284, i32* %93, align 4
  %285 = load i64, i64* %3, align 8
  %286 = add i64 %285, %162
  store i64 %286, i64* %3, align 8
  store i32 3, i32* %5, align 4
  br label %379

287:                                              ; preds = %280
  %288 = icmp ne i32 %281, 2
  %289 = and i1 %278, %288
  br i1 %289, label %290, label %294

290:                                              ; preds = %287
  store i32 2, i32* %5, align 4
  br label %379

291:                                              ; preds = %276
  %292 = getelementptr inbounds i8, i8* %161, i64 -20
  %293 = getelementptr inbounds i8, i8* %292, i64 %162
  br label %294

294:                                              ; preds = %287, %291
  %295 = phi i8* [ %293, %291 ], [ %161, %287 ]
  store i8* %161, i8** %109, align 8
  %296 = tail call fastcc i32 @LzmaDec_DecodeReal2(%struct.CLzmaDec* %0, i64 %1, i8* %295)
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %379

298:                                              ; preds = %294
  %299 = load i8*, i8** %109, align 8
  %300 = ptrtoint i8* %299 to i64
  %301 = ptrtoint i8* %161 to i64
  %302 = sub i64 %300, %301
  %303 = load i64, i64* %3, align 8
  %304 = add i64 %302, %303
  store i64 %304, i64* %3, align 8
  br label %363

305:                                              ; preds = %313, %273
  %306 = phi i64 [ %274, %273 ], [ %317, %313 ]
  %307 = phi i32 [ 0, %273 ], [ %314, %313 ]
  %308 = zext i32 %307 to i64
  %309 = icmp ugt i64 %162, %308
  br i1 %309, label %313, label %310

310:                                              ; preds = %305
  %311 = trunc i64 %306 to i32
  store i32 %311, i32* %93, align 4
  %312 = icmp ne i32 %177, 0
  br label %329

313:                                              ; preds = %305
  %314 = add nuw nsw i32 %307, 1
  %315 = getelementptr inbounds i8, i8* %161, i64 %308
  %316 = load i8, i8* %315, align 1
  %317 = add nuw nsw i64 %306, 1
  %318 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 17, i64 %306
  store i8 %316, i8* %318, align 1
  %319 = icmp eq i32 %314, %275
  br i1 %319, label %320, label %305

320:                                              ; preds = %313
  %321 = icmp ult i64 %317, 20
  %322 = trunc i64 %317 to i32
  br label %323

323:                                              ; preds = %320, %271
  %324 = phi i32 [ %269, %271 ], [ %322, %320 ]
  %325 = phi i32 [ 0, %271 ], [ %275, %320 ]
  %326 = phi i1 [ false, %271 ], [ %321, %320 ]
  store i32 %324, i32* %93, align 4
  %327 = icmp ne i32 %177, 0
  %328 = or i1 %327, %326
  br i1 %328, label %329, label %344

329:                                              ; preds = %310, %323
  %330 = phi i32 [ %311, %310 ], [ %324, %323 ]
  %331 = phi i32 [ %307, %310 ], [ %325, %323 ]
  %332 = phi i1 [ %312, %310 ], [ %327, %323 ]
  %333 = zext i32 %330 to i64
  %334 = tail call fastcc i32 @LzmaDec_TryDummy(%struct.CLzmaDec* %0, i8* %94, i64 %333)
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %340

336:                                              ; preds = %329
  %337 = zext i32 %331 to i64
  %338 = load i64, i64* %3, align 8
  %339 = add i64 %338, %337
  store i64 %339, i64* %3, align 8
  store i32 3, i32* %5, align 4
  br label %379

340:                                              ; preds = %329
  %341 = icmp ne i32 %334, 2
  %342 = and i1 %332, %341
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  store i32 2, i32* %5, align 4
  br label %379

344:                                              ; preds = %340, %323
  %345 = phi i32 [ %330, %340 ], [ %324, %323 ]
  %346 = phi i32 [ %331, %340 ], [ %325, %323 ]
  store i8* %94, i8** %109, align 8
  %347 = tail call fastcc i32 @LzmaDec_DecodeReal2(%struct.CLzmaDec* %0, i64 %1, i8* %94)
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %379

349:                                              ; preds = %344
  %350 = load i64, i64* %110, align 8
  %351 = sub i64 %350, %111
  %352 = trunc i64 %351 to i32
  %353 = icmp ult i32 %345, %352
  br i1 %353, label %379, label %354

354:                                              ; preds = %349
  %355 = sub i32 %345, %352
  %356 = icmp ult i32 %346, %355
  br i1 %356, label %379, label %357

357:                                              ; preds = %354
  %358 = sub i32 %346, %355
  %359 = zext i32 %358 to i64
  %360 = load i64, i64* %3, align 8
  %361 = add i64 %360, %359
  store i64 %361, i64* %3, align 8
  %362 = getelementptr inbounds i8, i8* %161, i64 %359
  store i32 0, i32* %93, align 4
  br label %363

363:                                              ; preds = %298, %357
  %364 = phi i8* [ %299, %298 ], [ %362, %357 ]
  %365 = phi i64 [ %302, %298 ], [ %359, %357 ]
  %366 = sub i64 %162, %365
  %367 = load i32, i32* %8, align 4
  %368 = icmp eq i32 %367, 274
  br i1 %368, label %369, label %113

369:                                              ; preds = %363, %88
  %370 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 5
  %371 = load i32, i32* %370, align 4
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %375

373:                                              ; preds = %369
  store i32 1, i32* %5, align 4
  %374 = load i32, i32* %370, align 4
  br label %375

375:                                              ; preds = %373, %369
  %376 = phi i32 [ %374, %373 ], [ %371, %369 ]
  %377 = icmp ne i32 %376, 0
  %378 = zext i1 %377 to i32
  br label %379

379:                                              ; preds = %354, %349, %344, %294, %140, %343, %336, %290, %283, %175, %173, %171, %139, %375
  %380 = phi i32 [ %378, %375 ], [ 1, %175 ], [ 0, %173 ], [ 0, %171 ], [ 0, %139 ], [ 1, %290 ], [ 0, %283 ], [ 1, %343 ], [ 0, %336 ], [ 11, %354 ], [ 11, %349 ], [ 1, %344 ], [ 1, %294 ], [ 1, %140 ]
  ret i32 %380
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc i32 @LzmaDec_TryDummy(%struct.CLzmaDec* nocapture readonly, i8* readonly, i64) unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds i8, i8* %1, i64 %2
  %9 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 1
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 10
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 8
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = shl nsw i32 -1, %16
  %18 = xor i32 %17, -1
  %19 = and i32 %14, %18
  %20 = shl i32 %12, 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %10, i64 %21
  %23 = zext i32 %19 to i64
  %24 = getelementptr inbounds i32, i32* %22, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = icmp ult i32 %5, 16777216
  br i1 %26, label %27, label %36

27:                                               ; preds = %3
  %28 = icmp slt i64 %2, 1
  br i1 %28, label %566, label %29

29:                                               ; preds = %27
  %30 = shl i32 %5, 8
  %31 = shl i32 %7, 8
  %32 = getelementptr inbounds i8, i8* %1, i64 1
  %33 = load i8, i8* %1, align 1
  %34 = zext i8 %33 to i32
  %35 = or i32 %31, %34
  br label %36

36:                                               ; preds = %29, %3
  %37 = phi i8* [ %32, %29 ], [ %1, %3 ]
  %38 = phi i32 [ %30, %29 ], [ %5, %3 ]
  %39 = phi i32 [ %35, %29 ], [ %7, %3 ]
  %40 = lshr i32 %38, 11
  %41 = mul i32 %40, %25
  %42 = icmp ult i32 %39, %41
  br i1 %42, label %43, label %184

43:                                               ; preds = %36
  %44 = getelementptr inbounds i32, i32* %10, i64 1846
  %45 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 9
  %46 = load i32, i32* %45, align 4
  %47 = or i32 %46, %14
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %78, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = shl nsw i32 -1, %51
  %53 = xor i32 %52, -1
  %54 = and i32 %14, %53
  %55 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = shl i32 %54, %56
  %58 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 2
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 6
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %49
  %64 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 7
  %65 = load i64, i64* %64, align 8
  br label %66

66:                                               ; preds = %49, %63
  %67 = phi i64 [ %65, %63 ], [ %61, %49 ]
  %68 = add i64 %67, -1
  %69 = getelementptr inbounds i8, i8* %59, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = sub i32 8, %56
  %73 = lshr i32 %71, %72
  %74 = add i32 %73, %57
  %75 = mul i32 %74, 768
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %44, i64 %76
  br label %78

78:                                               ; preds = %43, %66
  %79 = phi i32* [ %77, %66 ], [ %44, %43 ]
  %80 = icmp ult i32 %12, 7
  br i1 %80, label %81, label %118

81:                                               ; preds = %78, %113
  %82 = phi i8* [ %100, %113 ], [ %37, %78 ]
  %83 = phi i32 [ %114, %113 ], [ %41, %78 ]
  %84 = phi i32 [ %115, %113 ], [ %39, %78 ]
  %85 = phi i32 [ %116, %113 ], [ 1, %78 ]
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i32, i32* %79, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = icmp ult i32 %83, 16777216
  br i1 %89, label %90, label %99

90:                                               ; preds = %81
  %91 = icmp ult i8* %82, %8
  br i1 %91, label %92, label %566

92:                                               ; preds = %90
  %93 = shl i32 %83, 8
  %94 = shl i32 %84, 8
  %95 = getelementptr inbounds i8, i8* %82, i64 1
  %96 = load i8, i8* %82, align 1
  %97 = zext i8 %96 to i32
  %98 = or i32 %94, %97
  br label %99

99:                                               ; preds = %92, %81
  %100 = phi i8* [ %95, %92 ], [ %82, %81 ]
  %101 = phi i32 [ %93, %92 ], [ %83, %81 ]
  %102 = phi i32 [ %98, %92 ], [ %84, %81 ]
  %103 = lshr i32 %101, 11
  %104 = mul i32 %103, %88
  %105 = icmp ult i32 %102, %104
  br i1 %105, label %106, label %108

106:                                              ; preds = %99
  %107 = shl i32 %85, 1
  br label %113

108:                                              ; preds = %99
  %109 = sub i32 %101, %104
  %110 = sub i32 %102, %104
  %111 = shl i32 %85, 1
  %112 = or i32 %111, 1
  br label %113

113:                                              ; preds = %106, %108
  %114 = phi i32 [ %104, %106 ], [ %109, %108 ]
  %115 = phi i32 [ %102, %106 ], [ %110, %108 ]
  %116 = phi i32 [ %107, %106 ], [ %112, %108 ]
  %117 = icmp ult i32 %116, 256
  br i1 %117, label %81, label %558

118:                                              ; preds = %78
  %119 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 2
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 6
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 11, i64 0
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i64
  %126 = sub i64 %122, %125
  %127 = icmp ult i64 %122, %125
  br i1 %127, label %128, label %131

128:                                              ; preds = %118
  %129 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 7
  %130 = load i64, i64* %129, align 8
  br label %131

131:                                              ; preds = %118, %128
  %132 = phi i64 [ %130, %128 ], [ 0, %118 ]
  %133 = add i64 %126, %132
  %134 = getelementptr inbounds i8, i8* %120, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  br label %137

137:                                              ; preds = %178, %131
  %138 = phi i8* [ %37, %131 ], [ %164, %178 ]
  %139 = phi i32 [ %41, %131 ], [ %179, %178 ]
  %140 = phi i32 [ %39, %131 ], [ %180, %178 ]
  %141 = phi i32 [ %136, %131 ], [ %144, %178 ]
  %142 = phi i32 [ 256, %131 ], [ %181, %178 ]
  %143 = phi i32 [ 1, %131 ], [ %182, %178 ]
  %144 = shl i32 %141, 1
  %145 = and i32 %144, %142
  %146 = zext i32 %142 to i64
  %147 = getelementptr inbounds i32, i32* %79, i64 %146
  %148 = zext i32 %145 to i64
  %149 = getelementptr inbounds i32, i32* %147, i64 %148
  %150 = zext i32 %143 to i64
  %151 = getelementptr inbounds i32, i32* %149, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = icmp ult i32 %139, 16777216
  br i1 %153, label %154, label %163

154:                                              ; preds = %137
  %155 = icmp ult i8* %138, %8
  br i1 %155, label %156, label %566

156:                                              ; preds = %154
  %157 = shl i32 %139, 8
  %158 = shl i32 %140, 8
  %159 = getelementptr inbounds i8, i8* %138, i64 1
  %160 = load i8, i8* %138, align 1
  %161 = zext i8 %160 to i32
  %162 = or i32 %158, %161
  br label %163

163:                                              ; preds = %156, %137
  %164 = phi i8* [ %159, %156 ], [ %138, %137 ]
  %165 = phi i32 [ %157, %156 ], [ %139, %137 ]
  %166 = phi i32 [ %162, %156 ], [ %140, %137 ]
  %167 = lshr i32 %165, 11
  %168 = mul i32 %167, %152
  %169 = icmp ult i32 %166, %168
  br i1 %169, label %170, label %173

170:                                              ; preds = %163
  %171 = shl i32 %143, 1
  %172 = xor i32 %145, %142
  br label %178

173:                                              ; preds = %163
  %174 = sub i32 %165, %168
  %175 = sub i32 %166, %168
  %176 = shl i32 %143, 1
  %177 = or i32 %176, 1
  br label %178

178:                                              ; preds = %173, %170
  %179 = phi i32 [ %174, %173 ], [ %168, %170 ]
  %180 = phi i32 [ %175, %173 ], [ %166, %170 ]
  %181 = phi i32 [ %145, %173 ], [ %172, %170 ]
  %182 = phi i32 [ %177, %173 ], [ %171, %170 ]
  %183 = icmp ult i32 %182, 256
  br i1 %183, label %137, label %558

184:                                              ; preds = %36
  %185 = sub i32 %38, %41
  %186 = sub i32 %39, %41
  %187 = getelementptr inbounds i32, i32* %10, i64 192
  %188 = zext i32 %12 to i64
  %189 = getelementptr inbounds i32, i32* %187, i64 %188
  %190 = load i32, i32* %189, align 4
  %191 = icmp ult i32 %185, 16777216
  br i1 %191, label %192, label %201

192:                                              ; preds = %184
  %193 = icmp ult i8* %37, %8
  br i1 %193, label %194, label %566

194:                                              ; preds = %192
  %195 = shl i32 %185, 8
  %196 = shl i32 %186, 8
  %197 = getelementptr inbounds i8, i8* %37, i64 1
  %198 = load i8, i8* %37, align 1
  %199 = zext i8 %198 to i32
  %200 = or i32 %196, %199
  br label %201

201:                                              ; preds = %194, %184
  %202 = phi i8* [ %197, %194 ], [ %37, %184 ]
  %203 = phi i32 [ %195, %194 ], [ %185, %184 ]
  %204 = phi i32 [ %200, %194 ], [ %186, %184 ]
  %205 = lshr i32 %203, 11
  %206 = mul i32 %205, %190
  %207 = icmp ult i32 %204, %206
  br i1 %207, label %310, label %208

208:                                              ; preds = %201
  %209 = sub i32 %203, %206
  %210 = sub i32 %204, %206
  %211 = getelementptr inbounds i32, i32* %10, i64 204
  %212 = getelementptr inbounds i32, i32* %211, i64 %188
  %213 = load i32, i32* %212, align 4
  %214 = icmp ult i32 %209, 16777216
  br i1 %214, label %215, label %224

215:                                              ; preds = %208
  %216 = icmp ult i8* %202, %8
  br i1 %216, label %217, label %566

217:                                              ; preds = %215
  %218 = shl i32 %209, 8
  %219 = shl i32 %210, 8
  %220 = getelementptr inbounds i8, i8* %202, i64 1
  %221 = load i8, i8* %202, align 1
  %222 = zext i8 %221 to i32
  %223 = or i32 %219, %222
  br label %224

224:                                              ; preds = %217, %208
  %225 = phi i8* [ %220, %217 ], [ %202, %208 ]
  %226 = phi i32 [ %218, %217 ], [ %209, %208 ]
  %227 = phi i32 [ %223, %217 ], [ %210, %208 ]
  %228 = lshr i32 %226, 11
  %229 = mul i32 %228, %213
  %230 = icmp ult i32 %227, %229
  br i1 %230, label %231, label %261

231:                                              ; preds = %224
  %232 = getelementptr inbounds i32, i32* %10, i64 240
  %233 = getelementptr inbounds i32, i32* %232, i64 %21
  %234 = getelementptr inbounds i32, i32* %233, i64 %23
  %235 = load i32, i32* %234, align 4
  %236 = icmp ult i32 %229, 16777216
  br i1 %236, label %237, label %246

237:                                              ; preds = %231
  %238 = icmp ult i8* %225, %8
  br i1 %238, label %239, label %566

239:                                              ; preds = %237
  %240 = shl i32 %229, 8
  %241 = shl i32 %227, 8
  %242 = getelementptr inbounds i8, i8* %225, i64 1
  %243 = load i8, i8* %225, align 1
  %244 = zext i8 %243 to i32
  %245 = or i32 %241, %244
  br label %246

246:                                              ; preds = %239, %231
  %247 = phi i8* [ %242, %239 ], [ %225, %231 ]
  %248 = phi i32 [ %240, %239 ], [ %229, %231 ]
  %249 = phi i32 [ %245, %239 ], [ %227, %231 ]
  %250 = lshr i32 %248, 11
  %251 = mul i32 %250, %235
  %252 = icmp ult i32 %249, %251
  br i1 %252, label %253, label %258

253:                                              ; preds = %246
  %254 = icmp ult i32 %251, 16777216
  br i1 %254, label %255, label %566

255:                                              ; preds = %253
  %256 = icmp ult i8* %247, %8
  %257 = select i1 %256, i32 3, i32 0
  ret i32 %257

258:                                              ; preds = %246
  %259 = sub i32 %248, %251
  %260 = sub i32 %249, %251
  br label %310

261:                                              ; preds = %224
  %262 = sub i32 %226, %229
  %263 = sub i32 %227, %229
  %264 = getelementptr inbounds i32, i32* %10, i64 216
  %265 = getelementptr inbounds i32, i32* %264, i64 %188
  %266 = load i32, i32* %265, align 4
  %267 = icmp ult i32 %262, 16777216
  br i1 %267, label %268, label %277

268:                                              ; preds = %261
  %269 = icmp ult i8* %225, %8
  br i1 %269, label %270, label %566

270:                                              ; preds = %268
  %271 = shl i32 %262, 8
  %272 = shl i32 %263, 8
  %273 = getelementptr inbounds i8, i8* %225, i64 1
  %274 = load i8, i8* %225, align 1
  %275 = zext i8 %274 to i32
  %276 = or i32 %272, %275
  br label %277

277:                                              ; preds = %270, %261
  %278 = phi i8* [ %273, %270 ], [ %225, %261 ]
  %279 = phi i32 [ %271, %270 ], [ %262, %261 ]
  %280 = phi i32 [ %276, %270 ], [ %263, %261 ]
  %281 = lshr i32 %279, 11
  %282 = mul i32 %281, %266
  %283 = icmp ult i32 %280, %282
  br i1 %283, label %310, label %284

284:                                              ; preds = %277
  %285 = sub i32 %279, %282
  %286 = sub i32 %280, %282
  %287 = getelementptr inbounds i32, i32* %10, i64 228
  %288 = getelementptr inbounds i32, i32* %287, i64 %188
  %289 = load i32, i32* %288, align 4
  %290 = icmp ult i32 %285, 16777216
  br i1 %290, label %291, label %300

291:                                              ; preds = %284
  %292 = icmp ult i8* %278, %8
  br i1 %292, label %293, label %566

293:                                              ; preds = %291
  %294 = shl i32 %285, 8
  %295 = shl i32 %286, 8
  %296 = getelementptr inbounds i8, i8* %278, i64 1
  %297 = load i8, i8* %278, align 1
  %298 = zext i8 %297 to i32
  %299 = or i32 %295, %298
  br label %300

300:                                              ; preds = %293, %284
  %301 = phi i8* [ %296, %293 ], [ %278, %284 ]
  %302 = phi i32 [ %294, %293 ], [ %285, %284 ]
  %303 = phi i32 [ %299, %293 ], [ %286, %284 ]
  %304 = lshr i32 %302, 11
  %305 = mul i32 %304, %289
  %306 = icmp ult i32 %303, %305
  br i1 %306, label %310, label %307

307:                                              ; preds = %300
  %308 = sub i32 %302, %305
  %309 = sub i32 %303, %305
  br label %310

310:                                              ; preds = %258, %307, %277, %300, %201
  %311 = phi i64 [ 818, %201 ], [ 1332, %300 ], [ 1332, %277 ], [ 1332, %307 ], [ 1332, %258 ]
  %312 = phi i8* [ %202, %201 ], [ %301, %300 ], [ %278, %277 ], [ %301, %307 ], [ %247, %258 ]
  %313 = phi i32 [ %206, %201 ], [ %305, %300 ], [ %282, %277 ], [ %308, %307 ], [ %259, %258 ]
  %314 = phi i32 [ %204, %201 ], [ %303, %300 ], [ %280, %277 ], [ %309, %307 ], [ %260, %258 ]
  %315 = phi i32 [ 0, %201 ], [ 12, %300 ], [ 12, %277 ], [ 12, %307 ], [ 12, %258 ]
  %316 = phi i32 [ 2, %201 ], [ 3, %300 ], [ 3, %277 ], [ 3, %307 ], [ 3, %258 ]
  %317 = getelementptr inbounds i32, i32* %10, i64 %311
  %318 = load i32, i32* %317, align 4
  %319 = icmp ult i32 %313, 16777216
  br i1 %319, label %320, label %329

320:                                              ; preds = %310
  %321 = icmp ult i8* %312, %8
  br i1 %321, label %322, label %566

322:                                              ; preds = %320
  %323 = shl i32 %313, 8
  %324 = shl i32 %314, 8
  %325 = getelementptr inbounds i8, i8* %312, i64 1
  %326 = load i8, i8* %312, align 1
  %327 = zext i8 %326 to i32
  %328 = or i32 %324, %327
  br label %329

329:                                              ; preds = %322, %310
  %330 = phi i8* [ %325, %322 ], [ %312, %310 ]
  %331 = phi i32 [ %323, %322 ], [ %313, %310 ]
  %332 = phi i32 [ %328, %322 ], [ %314, %310 ]
  %333 = lshr i32 %331, 11
  %334 = mul i32 %333, %318
  %335 = icmp ult i32 %332, %334
  br i1 %335, label %336, label %341

336:                                              ; preds = %329
  %337 = getelementptr inbounds i32, i32* %317, i64 2
  %338 = shl i32 %19, 3
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds i32, i32* %337, i64 %339
  br label %372

341:                                              ; preds = %329
  %342 = sub i32 %331, %334
  %343 = sub i32 %332, %334
  %344 = getelementptr inbounds i32, i32* %317, i64 1
  %345 = load i32, i32* %344, align 4
  %346 = icmp ult i32 %342, 16777216
  br i1 %346, label %347, label %356

347:                                              ; preds = %341
  %348 = icmp ult i8* %330, %8
  br i1 %348, label %349, label %566

349:                                              ; preds = %347
  %350 = shl i32 %342, 8
  %351 = shl i32 %343, 8
  %352 = getelementptr inbounds i8, i8* %330, i64 1
  %353 = load i8, i8* %330, align 1
  %354 = zext i8 %353 to i32
  %355 = or i32 %351, %354
  br label %356

356:                                              ; preds = %349, %341
  %357 = phi i8* [ %352, %349 ], [ %330, %341 ]
  %358 = phi i32 [ %350, %349 ], [ %342, %341 ]
  %359 = phi i32 [ %355, %349 ], [ %343, %341 ]
  %360 = lshr i32 %358, 11
  %361 = mul i32 %360, %345
  %362 = icmp ult i32 %359, %361
  br i1 %362, label %363, label %368

363:                                              ; preds = %356
  %364 = getelementptr inbounds i32, i32* %317, i64 130
  %365 = shl i32 %19, 3
  %366 = zext i32 %365 to i64
  %367 = getelementptr inbounds i32, i32* %364, i64 %366
  br label %372

368:                                              ; preds = %356
  %369 = sub i32 %358, %361
  %370 = sub i32 %359, %361
  %371 = getelementptr inbounds i32, i32* %317, i64 258
  br label %372

372:                                              ; preds = %363, %368, %336
  %373 = phi i8* [ %330, %336 ], [ %357, %363 ], [ %357, %368 ]
  %374 = phi i32 [ %334, %336 ], [ %361, %363 ], [ %369, %368 ]
  %375 = phi i32 [ %332, %336 ], [ %359, %363 ], [ %370, %368 ]
  %376 = phi i32 [ 8, %336 ], [ 8, %363 ], [ 256, %368 ]
  %377 = phi i32 [ 0, %336 ], [ 8, %363 ], [ 16, %368 ]
  %378 = phi i32* [ %340, %336 ], [ %367, %363 ], [ %371, %368 ]
  br label %379

379:                                              ; preds = %411, %372
  %380 = phi i8* [ %373, %372 ], [ %398, %411 ]
  %381 = phi i32 [ %374, %372 ], [ %412, %411 ]
  %382 = phi i32 [ %375, %372 ], [ %413, %411 ]
  %383 = phi i32 [ 1, %372 ], [ %414, %411 ]
  %384 = zext i32 %383 to i64
  %385 = getelementptr inbounds i32, i32* %378, i64 %384
  %386 = load i32, i32* %385, align 4
  %387 = icmp ult i32 %381, 16777216
  br i1 %387, label %388, label %397

388:                                              ; preds = %379
  %389 = icmp ult i8* %380, %8
  br i1 %389, label %390, label %566

390:                                              ; preds = %388
  %391 = shl i32 %381, 8
  %392 = shl i32 %382, 8
  %393 = getelementptr inbounds i8, i8* %380, i64 1
  %394 = load i8, i8* %380, align 1
  %395 = zext i8 %394 to i32
  %396 = or i32 %392, %395
  br label %397

397:                                              ; preds = %390, %379
  %398 = phi i8* [ %393, %390 ], [ %380, %379 ]
  %399 = phi i32 [ %391, %390 ], [ %381, %379 ]
  %400 = phi i32 [ %396, %390 ], [ %382, %379 ]
  %401 = lshr i32 %399, 11
  %402 = mul i32 %401, %386
  %403 = icmp ult i32 %400, %402
  br i1 %403, label %404, label %406

404:                                              ; preds = %397
  %405 = shl i32 %383, 1
  br label %411

406:                                              ; preds = %397
  %407 = sub i32 %399, %402
  %408 = sub i32 %400, %402
  %409 = shl i32 %383, 1
  %410 = or i32 %409, 1
  br label %411

411:                                              ; preds = %404, %406
  %412 = phi i32 [ %402, %404 ], [ %407, %406 ]
  %413 = phi i32 [ %400, %404 ], [ %408, %406 ]
  %414 = phi i32 [ %405, %404 ], [ %410, %406 ]
  %415 = icmp ult i32 %414, %376
  br i1 %415, label %379, label %416

416:                                              ; preds = %411
  %417 = sub i32 %414, %376
  %418 = add i32 %417, %377
  %419 = icmp eq i32 %315, 0
  br i1 %419, label %420, label %558

420:                                              ; preds = %416
  %421 = getelementptr inbounds i32, i32* %10, i64 432
  %422 = icmp ult i32 %418, 3
  %423 = select i1 %422, i32 %418, i32 3
  %424 = shl nuw nsw i32 %423, 6
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds i32, i32* %421, i64 %425
  br label %427

427:                                              ; preds = %459, %420
  %428 = phi i8* [ %398, %420 ], [ %446, %459 ]
  %429 = phi i32 [ %412, %420 ], [ %460, %459 ]
  %430 = phi i32 [ %413, %420 ], [ %461, %459 ]
  %431 = phi i32 [ 1, %420 ], [ %462, %459 ]
  %432 = zext i32 %431 to i64
  %433 = getelementptr inbounds i32, i32* %426, i64 %432
  %434 = load i32, i32* %433, align 4
  %435 = icmp ult i32 %429, 16777216
  br i1 %435, label %436, label %445

436:                                              ; preds = %427
  %437 = icmp ult i8* %428, %8
  br i1 %437, label %438, label %566

438:                                              ; preds = %436
  %439 = shl i32 %429, 8
  %440 = shl i32 %430, 8
  %441 = getelementptr inbounds i8, i8* %428, i64 1
  %442 = load i8, i8* %428, align 1
  %443 = zext i8 %442 to i32
  %444 = or i32 %440, %443
  br label %445

445:                                              ; preds = %438, %427
  %446 = phi i8* [ %441, %438 ], [ %428, %427 ]
  %447 = phi i32 [ %439, %438 ], [ %429, %427 ]
  %448 = phi i32 [ %444, %438 ], [ %430, %427 ]
  %449 = lshr i32 %447, 11
  %450 = mul i32 %449, %434
  %451 = icmp ult i32 %448, %450
  br i1 %451, label %452, label %454

452:                                              ; preds = %445
  %453 = shl i32 %431, 1
  br label %459

454:                                              ; preds = %445
  %455 = sub i32 %447, %450
  %456 = sub i32 %448, %450
  %457 = shl i32 %431, 1
  %458 = or i32 %457, 1
  br label %459

459:                                              ; preds = %452, %454
  %460 = phi i32 [ %450, %452 ], [ %455, %454 ]
  %461 = phi i32 [ %448, %452 ], [ %456, %454 ]
  %462 = phi i32 [ %453, %452 ], [ %458, %454 ]
  %463 = icmp ult i32 %462, 64
  br i1 %463, label %427, label %464

464:                                              ; preds = %459
  %465 = add i32 %462, -64
  %466 = icmp ugt i32 %465, 3
  br i1 %466, label %467, label %558

467:                                              ; preds = %464
  %468 = lshr i32 %465, 1
  %469 = add nsw i32 %468, -1
  %470 = icmp ult i32 %465, 14
  br i1 %470, label %471, label %482

471:                                              ; preds = %467
  %472 = getelementptr inbounds i32, i32* %10, i64 688
  %473 = and i32 %465, 1
  %474 = or i32 %473, 2
  %475 = shl i32 %474, %469
  %476 = zext i32 %475 to i64
  %477 = getelementptr inbounds i32, i32* %472, i64 %476
  %478 = zext i32 %465 to i64
  %479 = sub nsw i64 0, %478
  %480 = getelementptr inbounds i32, i32* %477, i64 %479
  %481 = getelementptr inbounds i32, i32* %480, i64 -1
  br label %513

482:                                              ; preds = %467
  %483 = add nsw i32 %468, -5
  br label %484

484:                                              ; preds = %499, %482
  %485 = phi i8* [ %446, %482 ], [ %500, %499 ]
  %486 = phi i32 [ %460, %482 ], [ %503, %499 ]
  %487 = phi i32 [ %461, %482 ], [ %508, %499 ]
  %488 = phi i32 [ %483, %482 ], [ %509, %499 ]
  %489 = icmp ult i32 %486, 16777216
  br i1 %489, label %490, label %499

490:                                              ; preds = %484
  %491 = icmp ult i8* %485, %8
  br i1 %491, label %492, label %566

492:                                              ; preds = %490
  %493 = shl i32 %486, 8
  %494 = shl i32 %487, 8
  %495 = getelementptr inbounds i8, i8* %485, i64 1
  %496 = load i8, i8* %485, align 1
  %497 = zext i8 %496 to i32
  %498 = or i32 %494, %497
  br label %499

499:                                              ; preds = %492, %484
  %500 = phi i8* [ %495, %492 ], [ %485, %484 ]
  %501 = phi i32 [ %493, %492 ], [ %486, %484 ]
  %502 = phi i32 [ %498, %492 ], [ %487, %484 ]
  %503 = lshr i32 %501, 1
  %504 = sub i32 %502, %503
  %505 = lshr i32 %504, 31
  %506 = add nuw i32 %505, 2147483647
  %507 = and i32 %506, %503
  %508 = sub i32 %502, %507
  %509 = add i32 %488, -1
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %484

511:                                              ; preds = %499
  %512 = getelementptr inbounds i32, i32* %10, i64 802
  br label %513

513:                                              ; preds = %511, %471
  %514 = phi i8* [ %446, %471 ], [ %500, %511 ]
  %515 = phi i32 [ %460, %471 ], [ %503, %511 ]
  %516 = phi i32 [ %461, %471 ], [ %508, %511 ]
  %517 = phi i32* [ %481, %471 ], [ %512, %511 ]
  %518 = phi i32 [ %469, %471 ], [ 4, %511 ]
  br label %519

519:                                              ; preds = %552, %513
  %520 = phi i8* [ %514, %513 ], [ %539, %552 ]
  %521 = phi i32 [ %515, %513 ], [ %553, %552 ]
  %522 = phi i32 [ %516, %513 ], [ %554, %552 ]
  %523 = phi i32 [ %518, %513 ], [ %556, %552 ]
  %524 = phi i32 [ 1, %513 ], [ %555, %552 ]
  %525 = zext i32 %524 to i64
  %526 = getelementptr inbounds i32, i32* %517, i64 %525
  %527 = load i32, i32* %526, align 4
  %528 = icmp ult i32 %521, 16777216
  br i1 %528, label %529, label %538

529:                                              ; preds = %519
  %530 = icmp ult i8* %520, %8
  br i1 %530, label %531, label %566

531:                                              ; preds = %529
  %532 = shl i32 %521, 8
  %533 = shl i32 %522, 8
  %534 = getelementptr inbounds i8, i8* %520, i64 1
  %535 = load i8, i8* %520, align 1
  %536 = zext i8 %535 to i32
  %537 = or i32 %533, %536
  br label %538

538:                                              ; preds = %531, %519
  %539 = phi i8* [ %534, %531 ], [ %520, %519 ]
  %540 = phi i32 [ %532, %531 ], [ %521, %519 ]
  %541 = phi i32 [ %537, %531 ], [ %522, %519 ]
  %542 = lshr i32 %540, 11
  %543 = mul i32 %542, %527
  %544 = icmp ult i32 %541, %543
  br i1 %544, label %545, label %547

545:                                              ; preds = %538
  %546 = shl i32 %524, 1
  br label %552

547:                                              ; preds = %538
  %548 = sub i32 %540, %543
  %549 = sub i32 %541, %543
  %550 = shl i32 %524, 1
  %551 = or i32 %550, 1
  br label %552

552:                                              ; preds = %545, %547
  %553 = phi i32 [ %543, %545 ], [ %548, %547 ]
  %554 = phi i32 [ %541, %545 ], [ %549, %547 ]
  %555 = phi i32 [ %546, %545 ], [ %551, %547 ]
  %556 = add i32 %523, -1
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %558, label %519

558:                                              ; preds = %552, %178, %113, %464, %416
  %559 = phi i8* [ %446, %464 ], [ %398, %416 ], [ %100, %113 ], [ %164, %178 ], [ %539, %552 ]
  %560 = phi i32 [ %460, %464 ], [ %412, %416 ], [ %114, %113 ], [ %179, %178 ], [ %553, %552 ]
  %561 = phi i32 [ %316, %464 ], [ %316, %416 ], [ 1, %113 ], [ 1, %178 ], [ %316, %552 ]
  %562 = icmp ugt i32 %560, 16777215
  %563 = icmp ult i8* %559, %8
  %564 = or i1 %563, %562
  %565 = select i1 %564, i32 %561, i32 0
  ret i32 %565

566:                                              ; preds = %388, %436, %490, %529, %154, %90, %347, %320, %291, %268, %253, %237, %215, %192, %27
  %567 = phi i32 [ 0, %27 ], [ 0, %291 ], [ 0, %268 ], [ 3, %253 ], [ 0, %237 ], [ 0, %215 ], [ 0, %192 ], [ 0, %320 ], [ 0, %347 ], [ 0, %90 ], [ 0, %154 ], [ 0, %529 ], [ 0, %490 ], [ 0, %436 ], [ 0, %388 ]
  ret i32 %567
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @LzmaDec_DecodeReal2(%struct.CLzmaDec*, i64, i8* readnone) unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 9
  %5 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 3
  %6 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 8
  %7 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 6
  %8 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 1
  %9 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 10
  %10 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 11, i64 0
  %11 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 11, i64 1
  %12 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 11, i64 2
  %13 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 11, i64 3
  %14 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 2
  %18 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 7
  %19 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 3
  %20 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 4
  %21 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 5
  %22 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 12
  br label %23

23:                                               ; preds = %1975, %3
  %24 = load i32, i32* %4, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = load i64, i64* %7, align 8
  %28 = load i32, i32* %6, align 8
  br label %39

29:                                               ; preds = %23
  %30 = load i32, i32* %5, align 4
  %31 = load i32, i32* %6, align 8
  %32 = sub i32 %30, %31
  %33 = load i64, i64* %7, align 8
  %34 = sub i64 %1, %33
  %35 = zext i32 %32 to i64
  %36 = icmp ugt i64 %34, %35
  %37 = add i64 %33, %35
  %38 = select i1 %36, i64 %37, i64 %1
  br label %39

39:                                               ; preds = %26, %29
  %40 = phi i32 [ %31, %29 ], [ %28, %26 ]
  %41 = phi i64 [ %33, %29 ], [ %27, %26 ]
  %42 = phi i64 [ %38, %29 ], [ %1, %26 ]
  %43 = load i32*, i32** %8, align 8
  %44 = load i32, i32* %9, align 8
  %45 = load i32, i32* %10, align 4
  %46 = load i32, i32* %11, align 4
  %47 = load i32, i32* %12, align 4
  %48 = load i32, i32* %13, align 4
  %49 = load i32, i32* %14, align 8
  %50 = shl nsw i32 -1, %49
  %51 = xor i32 %50, -1
  %52 = load i32, i32* %15, align 4
  %53 = shl nsw i32 -1, %52
  %54 = xor i32 %53, -1
  %55 = load i32, i32* %16, align 8
  %56 = load i8*, i8** %17, align 8
  %57 = load i64, i64* %18, align 8
  %58 = load i8*, i8** %19, align 8
  %59 = load i32, i32* %20, align 8
  %60 = load i32, i32* %21, align 4
  %61 = getelementptr inbounds i32, i32* %43, i64 192
  %62 = getelementptr inbounds i32, i32* %43, i64 204
  %63 = getelementptr inbounds i32, i32* %43, i64 216
  %64 = getelementptr inbounds i32, i32* %43, i64 228
  %65 = getelementptr inbounds i32, i32* %43, i64 240
  %66 = getelementptr inbounds i32, i32* %43, i64 1332
  %67 = getelementptr inbounds i32, i32* %43, i64 818
  %68 = getelementptr inbounds i32, i32* %43, i64 432
  %69 = getelementptr inbounds i32, i32* %43, i64 802
  %70 = getelementptr inbounds i32, i32* %43, i64 803
  %71 = getelementptr inbounds i32, i32* %43, i64 687
  %72 = getelementptr inbounds i32, i32* %43, i64 1846
  %73 = sub i32 8, %55
  br label %74

74:                                               ; preds = %1860, %39
  %75 = phi i32 [ %44, %39 ], [ %1871, %1860 ]
  %76 = phi i32 [ %45, %39 ], [ %1870, %1860 ]
  %77 = phi i32 [ %46, %39 ], [ %1869, %1860 ]
  %78 = phi i32 [ %47, %39 ], [ %1868, %1860 ]
  %79 = phi i32 [ %48, %39 ], [ %1867, %1860 ]
  %80 = phi i64 [ %41, %39 ], [ %1866, %1860 ]
  %81 = phi i32 [ %40, %39 ], [ %1865, %1860 ]
  %82 = phi i32 [ 0, %39 ], [ %1864, %1860 ]
  %83 = phi i8* [ %58, %39 ], [ %1863, %1860 ]
  %84 = phi i32 [ %59, %39 ], [ %1862, %1860 ]
  %85 = phi i32 [ %60, %39 ], [ %1861, %1860 ]
  %86 = and i32 %81, %51
  %87 = shl i32 %75, 4
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i32, i32* %43, i64 %88
  %90 = zext i32 %86 to i64
  %91 = getelementptr inbounds i32, i32* %89, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = icmp ult i32 %84, 16777216
  br i1 %93, label %94, label %101

94:                                               ; preds = %74
  %95 = shl i32 %84, 8
  %96 = shl i32 %85, 8
  %97 = getelementptr inbounds i8, i8* %83, i64 1
  %98 = load i8, i8* %83, align 1
  %99 = zext i8 %98 to i32
  %100 = or i32 %96, %99
  br label %101

101:                                              ; preds = %94, %74
  %102 = phi i8* [ %97, %94 ], [ %83, %74 ]
  %103 = phi i32 [ %95, %94 ], [ %84, %74 ]
  %104 = phi i32 [ %100, %94 ], [ %85, %74 ]
  %105 = lshr i32 %103, 11
  %106 = mul i32 %105, %92
  %107 = icmp ult i32 %104, %106
  br i1 %107, label %108, label %753

108:                                              ; preds = %101
  %109 = sub i32 2048, %92
  %110 = lshr i32 %109, 5
  %111 = add i32 %110, %92
  store i32 %111, i32* %91, align 4
  %112 = or i32 %81, %24
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %128, label %114

114:                                              ; preds = %108
  %115 = and i32 %81, %54
  %116 = shl i32 %115, %55
  %117 = icmp eq i64 %80, 0
  %118 = select i1 %117, i64 %57, i64 %80
  %119 = add i64 %118, -1
  %120 = getelementptr inbounds i8, i8* %56, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = lshr i32 %122, %73
  %124 = add i32 %123, %116
  %125 = mul i32 %124, 768
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i32, i32* %72, i64 %126
  br label %128

128:                                              ; preds = %114, %108
  %129 = phi i32* [ %127, %114 ], [ %72, %108 ]
  %130 = add i32 %81, 1
  %131 = icmp ult i32 %75, 7
  br i1 %131, label %132, label %401

132:                                              ; preds = %128
  %133 = icmp ult i32 %75, 3
  %134 = select i1 %133, i32 %75, i32 3
  %135 = sub i32 %75, %134
  %136 = getelementptr inbounds i32, i32* %129, i64 1
  %137 = load i32, i32* %136, align 4
  %138 = icmp ult i32 %106, 16777216
  br i1 %138, label %139, label %146

139:                                              ; preds = %132
  %140 = shl i32 %106, 8
  %141 = shl i32 %104, 8
  %142 = getelementptr inbounds i8, i8* %102, i64 1
  %143 = load i8, i8* %102, align 1
  %144 = zext i8 %143 to i32
  %145 = or i32 %141, %144
  br label %146

146:                                              ; preds = %139, %132
  %147 = phi i8* [ %142, %139 ], [ %102, %132 ]
  %148 = phi i32 [ %140, %139 ], [ %106, %132 ]
  %149 = phi i32 [ %145, %139 ], [ %104, %132 ]
  %150 = lshr i32 %148, 11
  %151 = mul i32 %150, %137
  %152 = icmp ult i32 %149, %151
  br i1 %152, label %153, label %157

153:                                              ; preds = %146
  %154 = sub i32 2048, %137
  %155 = lshr i32 %154, 5
  %156 = add i32 %155, %137
  br label %162

157:                                              ; preds = %146
  %158 = sub i32 %148, %151
  %159 = sub i32 %149, %151
  %160 = lshr i32 %137, 5
  %161 = sub i32 %137, %160
  br label %162

162:                                              ; preds = %157, %153
  %163 = phi i32 [ %161, %157 ], [ %156, %153 ]
  %164 = phi i32 [ %158, %157 ], [ %151, %153 ]
  %165 = phi i32 [ %159, %157 ], [ %149, %153 ]
  %166 = phi i32 [ 3, %157 ], [ 2, %153 ]
  store i32 %163, i32* %136, align 4
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds i32, i32* %129, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = icmp ult i32 %164, 16777216
  br i1 %170, label %171, label %178

171:                                              ; preds = %162
  %172 = shl i32 %164, 8
  %173 = shl i32 %165, 8
  %174 = getelementptr inbounds i8, i8* %147, i64 1
  %175 = load i8, i8* %147, align 1
  %176 = zext i8 %175 to i32
  %177 = or i32 %173, %176
  br label %178

178:                                              ; preds = %171, %162
  %179 = phi i8* [ %174, %171 ], [ %147, %162 ]
  %180 = phi i32 [ %172, %171 ], [ %164, %162 ]
  %181 = phi i32 [ %177, %171 ], [ %165, %162 ]
  %182 = lshr i32 %180, 11
  %183 = mul i32 %182, %169
  %184 = icmp ult i32 %181, %183
  br i1 %184, label %185, label %190

185:                                              ; preds = %178
  %186 = sub i32 2048, %169
  %187 = lshr i32 %186, 5
  %188 = add i32 %187, %169
  store i32 %188, i32* %168, align 4
  %189 = shl nuw nsw i32 %166, 1
  br label %197

190:                                              ; preds = %178
  %191 = sub i32 %180, %183
  %192 = sub i32 %181, %183
  %193 = lshr i32 %169, 5
  %194 = sub i32 %169, %193
  store i32 %194, i32* %168, align 4
  %195 = shl nuw nsw i32 %166, 1
  %196 = or i32 %195, 1
  br label %197

197:                                              ; preds = %190, %185
  %198 = phi i32 [ %183, %185 ], [ %191, %190 ]
  %199 = phi i32 [ %181, %185 ], [ %192, %190 ]
  %200 = phi i32 [ %189, %185 ], [ %196, %190 ]
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds i32, i32* %129, i64 %201
  %203 = load i32, i32* %202, align 4
  %204 = icmp ult i32 %198, 16777216
  br i1 %204, label %205, label %212

205:                                              ; preds = %197
  %206 = shl i32 %198, 8
  %207 = shl i32 %199, 8
  %208 = getelementptr inbounds i8, i8* %179, i64 1
  %209 = load i8, i8* %179, align 1
  %210 = zext i8 %209 to i32
  %211 = or i32 %207, %210
  br label %212

212:                                              ; preds = %205, %197
  %213 = phi i8* [ %208, %205 ], [ %179, %197 ]
  %214 = phi i32 [ %206, %205 ], [ %198, %197 ]
  %215 = phi i32 [ %211, %205 ], [ %199, %197 ]
  %216 = lshr i32 %214, 11
  %217 = mul i32 %216, %203
  %218 = icmp ult i32 %215, %217
  br i1 %218, label %219, label %224

219:                                              ; preds = %212
  %220 = sub i32 2048, %203
  %221 = lshr i32 %220, 5
  %222 = add i32 %221, %203
  store i32 %222, i32* %202, align 4
  %223 = shl nsw i32 %200, 1
  br label %231

224:                                              ; preds = %212
  %225 = sub i32 %214, %217
  %226 = sub i32 %215, %217
  %227 = lshr i32 %203, 5
  %228 = sub i32 %203, %227
  store i32 %228, i32* %202, align 4
  %229 = shl nsw i32 %200, 1
  %230 = or i32 %229, 1
  br label %231

231:                                              ; preds = %224, %219
  %232 = phi i32 [ %217, %219 ], [ %225, %224 ]
  %233 = phi i32 [ %215, %219 ], [ %226, %224 ]
  %234 = phi i32 [ %223, %219 ], [ %230, %224 ]
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds i32, i32* %129, i64 %235
  %237 = load i32, i32* %236, align 4
  %238 = icmp ult i32 %232, 16777216
  br i1 %238, label %239, label %246

239:                                              ; preds = %231
  %240 = shl i32 %232, 8
  %241 = shl i32 %233, 8
  %242 = getelementptr inbounds i8, i8* %213, i64 1
  %243 = load i8, i8* %213, align 1
  %244 = zext i8 %243 to i32
  %245 = or i32 %241, %244
  br label %246

246:                                              ; preds = %239, %231
  %247 = phi i8* [ %242, %239 ], [ %213, %231 ]
  %248 = phi i32 [ %240, %239 ], [ %232, %231 ]
  %249 = phi i32 [ %245, %239 ], [ %233, %231 ]
  %250 = lshr i32 %248, 11
  %251 = mul i32 %250, %237
  %252 = icmp ult i32 %249, %251
  br i1 %252, label %253, label %258

253:                                              ; preds = %246
  %254 = sub i32 2048, %237
  %255 = lshr i32 %254, 5
  %256 = add i32 %255, %237
  store i32 %256, i32* %236, align 4
  %257 = shl i32 %234, 1
  br label %265

258:                                              ; preds = %246
  %259 = sub i32 %248, %251
  %260 = sub i32 %249, %251
  %261 = lshr i32 %237, 5
  %262 = sub i32 %237, %261
  store i32 %262, i32* %236, align 4
  %263 = shl i32 %234, 1
  %264 = or i32 %263, 1
  br label %265

265:                                              ; preds = %258, %253
  %266 = phi i32 [ %251, %253 ], [ %259, %258 ]
  %267 = phi i32 [ %249, %253 ], [ %260, %258 ]
  %268 = phi i32 [ %257, %253 ], [ %264, %258 ]
  %269 = zext i32 %268 to i64
  %270 = getelementptr inbounds i32, i32* %129, i64 %269
  %271 = load i32, i32* %270, align 4
  %272 = icmp ult i32 %266, 16777216
  br i1 %272, label %273, label %280

273:                                              ; preds = %265
  %274 = shl i32 %266, 8
  %275 = shl i32 %267, 8
  %276 = getelementptr inbounds i8, i8* %247, i64 1
  %277 = load i8, i8* %247, align 1
  %278 = zext i8 %277 to i32
  %279 = or i32 %275, %278
  br label %280

280:                                              ; preds = %273, %265
  %281 = phi i8* [ %276, %273 ], [ %247, %265 ]
  %282 = phi i32 [ %274, %273 ], [ %266, %265 ]
  %283 = phi i32 [ %279, %273 ], [ %267, %265 ]
  %284 = lshr i32 %282, 11
  %285 = mul i32 %284, %271
  %286 = icmp ult i32 %283, %285
  br i1 %286, label %287, label %292

287:                                              ; preds = %280
  %288 = sub i32 2048, %271
  %289 = lshr i32 %288, 5
  %290 = add i32 %289, %271
  store i32 %290, i32* %270, align 4
  %291 = shl i32 %268, 1
  br label %299

292:                                              ; preds = %280
  %293 = sub i32 %282, %285
  %294 = sub i32 %283, %285
  %295 = lshr i32 %271, 5
  %296 = sub i32 %271, %295
  store i32 %296, i32* %270, align 4
  %297 = shl i32 %268, 1
  %298 = or i32 %297, 1
  br label %299

299:                                              ; preds = %292, %287
  %300 = phi i32 [ %285, %287 ], [ %293, %292 ]
  %301 = phi i32 [ %283, %287 ], [ %294, %292 ]
  %302 = phi i32 [ %291, %287 ], [ %298, %292 ]
  %303 = zext i32 %302 to i64
  %304 = getelementptr inbounds i32, i32* %129, i64 %303
  %305 = load i32, i32* %304, align 4
  %306 = icmp ult i32 %300, 16777216
  br i1 %306, label %307, label %314

307:                                              ; preds = %299
  %308 = shl i32 %300, 8
  %309 = shl i32 %301, 8
  %310 = getelementptr inbounds i8, i8* %281, i64 1
  %311 = load i8, i8* %281, align 1
  %312 = zext i8 %311 to i32
  %313 = or i32 %309, %312
  br label %314

314:                                              ; preds = %307, %299
  %315 = phi i8* [ %310, %307 ], [ %281, %299 ]
  %316 = phi i32 [ %308, %307 ], [ %300, %299 ]
  %317 = phi i32 [ %313, %307 ], [ %301, %299 ]
  %318 = lshr i32 %316, 11
  %319 = mul i32 %318, %305
  %320 = icmp ult i32 %317, %319
  br i1 %320, label %321, label %326

321:                                              ; preds = %314
  %322 = sub i32 2048, %305
  %323 = lshr i32 %322, 5
  %324 = add i32 %323, %305
  store i32 %324, i32* %304, align 4
  %325 = shl i32 %302, 1
  br label %333

326:                                              ; preds = %314
  %327 = sub i32 %316, %319
  %328 = sub i32 %317, %319
  %329 = lshr i32 %305, 5
  %330 = sub i32 %305, %329
  store i32 %330, i32* %304, align 4
  %331 = shl i32 %302, 1
  %332 = or i32 %331, 1
  br label %333

333:                                              ; preds = %326, %321
  %334 = phi i32 [ %319, %321 ], [ %327, %326 ]
  %335 = phi i32 [ %317, %321 ], [ %328, %326 ]
  %336 = phi i32 [ %325, %321 ], [ %332, %326 ]
  %337 = zext i32 %336 to i64
  %338 = getelementptr inbounds i32, i32* %129, i64 %337
  %339 = load i32, i32* %338, align 4
  %340 = icmp ult i32 %334, 16777216
  br i1 %340, label %341, label %348

341:                                              ; preds = %333
  %342 = shl i32 %334, 8
  %343 = shl i32 %335, 8
  %344 = getelementptr inbounds i8, i8* %315, i64 1
  %345 = load i8, i8* %315, align 1
  %346 = zext i8 %345 to i32
  %347 = or i32 %343, %346
  br label %348

348:                                              ; preds = %341, %333
  %349 = phi i8* [ %344, %341 ], [ %315, %333 ]
  %350 = phi i32 [ %342, %341 ], [ %334, %333 ]
  %351 = phi i32 [ %347, %341 ], [ %335, %333 ]
  %352 = lshr i32 %350, 11
  %353 = mul i32 %352, %339
  %354 = icmp ult i32 %351, %353
  br i1 %354, label %355, label %360

355:                                              ; preds = %348
  %356 = sub i32 2048, %339
  %357 = lshr i32 %356, 5
  %358 = add i32 %357, %339
  store i32 %358, i32* %338, align 4
  %359 = shl i32 %336, 1
  br label %367

360:                                              ; preds = %348
  %361 = sub i32 %350, %353
  %362 = sub i32 %351, %353
  %363 = lshr i32 %339, 5
  %364 = sub i32 %339, %363
  store i32 %364, i32* %338, align 4
  %365 = shl i32 %336, 1
  %366 = or i32 %365, 1
  br label %367

367:                                              ; preds = %360, %355
  %368 = phi i32 [ %353, %355 ], [ %361, %360 ]
  %369 = phi i32 [ %351, %355 ], [ %362, %360 ]
  %370 = phi i32 [ %359, %355 ], [ %366, %360 ]
  %371 = zext i32 %370 to i64
  %372 = getelementptr inbounds i32, i32* %129, i64 %371
  %373 = load i32, i32* %372, align 4
  %374 = icmp ult i32 %368, 16777216
  br i1 %374, label %375, label %382

375:                                              ; preds = %367
  %376 = shl i32 %368, 8
  %377 = shl i32 %369, 8
  %378 = getelementptr inbounds i8, i8* %349, i64 1
  %379 = load i8, i8* %349, align 1
  %380 = zext i8 %379 to i32
  %381 = or i32 %377, %380
  br label %382

382:                                              ; preds = %375, %367
  %383 = phi i8* [ %378, %375 ], [ %349, %367 ]
  %384 = phi i32 [ %376, %375 ], [ %368, %367 ]
  %385 = phi i32 [ %381, %375 ], [ %369, %367 ]
  %386 = lshr i32 %384, 11
  %387 = mul i32 %386, %373
  %388 = icmp ult i32 %385, %387
  br i1 %388, label %389, label %394

389:                                              ; preds = %382
  %390 = sub i32 2048, %373
  %391 = lshr i32 %390, 5
  %392 = add i32 %391, %373
  store i32 %392, i32* %372, align 4
  %393 = shl i32 %370, 1
  br label %744

394:                                              ; preds = %382
  %395 = sub i32 %384, %387
  %396 = sub i32 %385, %387
  %397 = lshr i32 %373, 5
  %398 = sub i32 %373, %397
  store i32 %398, i32* %372, align 4
  %399 = shl i32 %370, 1
  %400 = or i32 %399, 1
  br label %744

401:                                              ; preds = %128
  %402 = zext i32 %76 to i64
  %403 = sub i64 %80, %402
  %404 = icmp ult i64 %80, %402
  %405 = select i1 %404, i64 %57, i64 0
  %406 = add i64 %403, %405
  %407 = getelementptr inbounds i8, i8* %56, i64 %406
  %408 = load i8, i8* %407, align 1
  %409 = zext i8 %408 to i32
  %410 = icmp ult i32 %75, 10
  %411 = select i1 %410, i32 3, i32 6
  %412 = sub nuw i32 %75, %411
  %413 = shl nuw nsw i32 %409, 1
  %414 = and i32 %413, 256
  %415 = zext i32 %414 to i64
  %416 = getelementptr inbounds i32, i32* %129, i64 257
  %417 = getelementptr inbounds i32, i32* %416, i64 %415
  %418 = load i32, i32* %417, align 4
  %419 = icmp ult i32 %106, 16777216
  br i1 %419, label %420, label %427

420:                                              ; preds = %401
  %421 = shl i32 %106, 8
  %422 = shl i32 %104, 8
  %423 = getelementptr inbounds i8, i8* %102, i64 1
  %424 = load i8, i8* %102, align 1
  %425 = zext i8 %424 to i32
  %426 = or i32 %422, %425
  br label %427

427:                                              ; preds = %420, %401
  %428 = phi i8* [ %423, %420 ], [ %102, %401 ]
  %429 = phi i32 [ %421, %420 ], [ %106, %401 ]
  %430 = phi i32 [ %426, %420 ], [ %104, %401 ]
  %431 = lshr i32 %429, 11
  %432 = mul i32 %431, %418
  %433 = icmp ult i32 %430, %432
  br i1 %433, label %434, label %440

434:                                              ; preds = %427
  %435 = sub i32 2048, %418
  %436 = lshr i32 %435, 5
  %437 = add i32 %436, %418
  store i32 %437, i32* %417, align 4
  %438 = xor i32 %414, 256
  %439 = zext i32 %438 to i64
  br label %445

440:                                              ; preds = %427
  %441 = sub i32 %429, %432
  %442 = sub i32 %430, %432
  %443 = lshr i32 %418, 5
  %444 = sub i32 %418, %443
  store i32 %444, i32* %417, align 4
  br label %445

445:                                              ; preds = %440, %434
  %446 = phi i64 [ %415, %440 ], [ %439, %434 ]
  %447 = phi i32 [ %441, %440 ], [ %432, %434 ]
  %448 = phi i32 [ %442, %440 ], [ %430, %434 ]
  %449 = phi i32 [ 3, %440 ], [ 2, %434 ]
  %450 = phi i32 [ %414, %440 ], [ %438, %434 ]
  %451 = shl nuw nsw i32 %409, 2
  %452 = and i32 %450, %451
  %453 = getelementptr inbounds i32, i32* %129, i64 %446
  %454 = zext i32 %452 to i64
  %455 = getelementptr inbounds i32, i32* %453, i64 %454
  %456 = zext i32 %449 to i64
  %457 = getelementptr inbounds i32, i32* %455, i64 %456
  %458 = load i32, i32* %457, align 4
  %459 = icmp ult i32 %447, 16777216
  br i1 %459, label %460, label %467

460:                                              ; preds = %445
  %461 = shl i32 %447, 8
  %462 = shl i32 %448, 8
  %463 = getelementptr inbounds i8, i8* %428, i64 1
  %464 = load i8, i8* %428, align 1
  %465 = zext i8 %464 to i32
  %466 = or i32 %462, %465
  br label %467

467:                                              ; preds = %460, %445
  %468 = phi i8* [ %463, %460 ], [ %428, %445 ]
  %469 = phi i32 [ %461, %460 ], [ %447, %445 ]
  %470 = phi i32 [ %466, %460 ], [ %448, %445 ]
  %471 = lshr i32 %469, 11
  %472 = mul i32 %471, %458
  %473 = icmp ult i32 %470, %472
  br i1 %473, label %474, label %481

474:                                              ; preds = %467
  %475 = sub i32 2048, %458
  %476 = lshr i32 %475, 5
  %477 = add i32 %476, %458
  store i32 %477, i32* %457, align 4
  %478 = shl nuw nsw i32 %449, 1
  %479 = xor i32 %452, %450
  %480 = zext i32 %479 to i64
  br label %488

481:                                              ; preds = %467
  %482 = sub i32 %469, %472
  %483 = sub i32 %470, %472
  %484 = lshr i32 %458, 5
  %485 = sub i32 %458, %484
  store i32 %485, i32* %457, align 4
  %486 = shl nuw nsw i32 %449, 1
  %487 = or i32 %486, 1
  br label %488

488:                                              ; preds = %481, %474
  %489 = phi i64 [ %454, %481 ], [ %480, %474 ]
  %490 = phi i32 [ %482, %481 ], [ %472, %474 ]
  %491 = phi i32 [ %483, %481 ], [ %470, %474 ]
  %492 = phi i32 [ %487, %481 ], [ %478, %474 ]
  %493 = phi i32 [ %452, %481 ], [ %479, %474 ]
  %494 = shl nuw nsw i32 %409, 3
  %495 = and i32 %493, %494
  %496 = getelementptr inbounds i32, i32* %129, i64 %489
  %497 = zext i32 %495 to i64
  %498 = getelementptr inbounds i32, i32* %496, i64 %497
  %499 = zext i32 %492 to i64
  %500 = getelementptr inbounds i32, i32* %498, i64 %499
  %501 = load i32, i32* %500, align 4
  %502 = icmp ult i32 %490, 16777216
  br i1 %502, label %503, label %510

503:                                              ; preds = %488
  %504 = shl i32 %490, 8
  %505 = shl i32 %491, 8
  %506 = getelementptr inbounds i8, i8* %468, i64 1
  %507 = load i8, i8* %468, align 1
  %508 = zext i8 %507 to i32
  %509 = or i32 %505, %508
  br label %510

510:                                              ; preds = %503, %488
  %511 = phi i8* [ %506, %503 ], [ %468, %488 ]
  %512 = phi i32 [ %504, %503 ], [ %490, %488 ]
  %513 = phi i32 [ %509, %503 ], [ %491, %488 ]
  %514 = lshr i32 %512, 11
  %515 = mul i32 %514, %501
  %516 = icmp ult i32 %513, %515
  br i1 %516, label %517, label %524

517:                                              ; preds = %510
  %518 = sub i32 2048, %501
  %519 = lshr i32 %518, 5
  %520 = add i32 %519, %501
  store i32 %520, i32* %500, align 4
  %521 = shl nsw i32 %492, 1
  %522 = xor i32 %495, %493
  %523 = zext i32 %522 to i64
  br label %531

524:                                              ; preds = %510
  %525 = sub i32 %512, %515
  %526 = sub i32 %513, %515
  %527 = lshr i32 %501, 5
  %528 = sub i32 %501, %527
  store i32 %528, i32* %500, align 4
  %529 = shl nsw i32 %492, 1
  %530 = or i32 %529, 1
  br label %531

531:                                              ; preds = %524, %517
  %532 = phi i64 [ %497, %524 ], [ %523, %517 ]
  %533 = phi i32 [ %525, %524 ], [ %515, %517 ]
  %534 = phi i32 [ %526, %524 ], [ %513, %517 ]
  %535 = phi i32 [ %530, %524 ], [ %521, %517 ]
  %536 = phi i32 [ %495, %524 ], [ %522, %517 ]
  %537 = shl nuw nsw i32 %409, 4
  %538 = and i32 %536, %537
  %539 = getelementptr inbounds i32, i32* %129, i64 %532
  %540 = zext i32 %538 to i64
  %541 = getelementptr inbounds i32, i32* %539, i64 %540
  %542 = zext i32 %535 to i64
  %543 = getelementptr inbounds i32, i32* %541, i64 %542
  %544 = load i32, i32* %543, align 4
  %545 = icmp ult i32 %533, 16777216
  br i1 %545, label %546, label %553

546:                                              ; preds = %531
  %547 = shl i32 %533, 8
  %548 = shl i32 %534, 8
  %549 = getelementptr inbounds i8, i8* %511, i64 1
  %550 = load i8, i8* %511, align 1
  %551 = zext i8 %550 to i32
  %552 = or i32 %548, %551
  br label %553

553:                                              ; preds = %546, %531
  %554 = phi i8* [ %549, %546 ], [ %511, %531 ]
  %555 = phi i32 [ %547, %546 ], [ %533, %531 ]
  %556 = phi i32 [ %552, %546 ], [ %534, %531 ]
  %557 = lshr i32 %555, 11
  %558 = mul i32 %557, %544
  %559 = icmp ult i32 %556, %558
  br i1 %559, label %560, label %567

560:                                              ; preds = %553
  %561 = sub i32 2048, %544
  %562 = lshr i32 %561, 5
  %563 = add i32 %562, %544
  store i32 %563, i32* %543, align 4
  %564 = shl i32 %535, 1
  %565 = xor i32 %538, %536
  %566 = zext i32 %565 to i64
  br label %574

567:                                              ; preds = %553
  %568 = sub i32 %555, %558
  %569 = sub i32 %556, %558
  %570 = lshr i32 %544, 5
  %571 = sub i32 %544, %570
  store i32 %571, i32* %543, align 4
  %572 = shl i32 %535, 1
  %573 = or i32 %572, 1
  br label %574

574:                                              ; preds = %567, %560
  %575 = phi i64 [ %540, %567 ], [ %566, %560 ]
  %576 = phi i32 [ %568, %567 ], [ %558, %560 ]
  %577 = phi i32 [ %569, %567 ], [ %556, %560 ]
  %578 = phi i32 [ %573, %567 ], [ %564, %560 ]
  %579 = phi i32 [ %538, %567 ], [ %565, %560 ]
  %580 = shl nuw nsw i32 %409, 5
  %581 = and i32 %579, %580
  %582 = getelementptr inbounds i32, i32* %129, i64 %575
  %583 = zext i32 %581 to i64
  %584 = getelementptr inbounds i32, i32* %582, i64 %583
  %585 = zext i32 %578 to i64
  %586 = getelementptr inbounds i32, i32* %584, i64 %585
  %587 = load i32, i32* %586, align 4
  %588 = icmp ult i32 %576, 16777216
  br i1 %588, label %589, label %596

589:                                              ; preds = %574
  %590 = shl i32 %576, 8
  %591 = shl i32 %577, 8
  %592 = getelementptr inbounds i8, i8* %554, i64 1
  %593 = load i8, i8* %554, align 1
  %594 = zext i8 %593 to i32
  %595 = or i32 %591, %594
  br label %596

596:                                              ; preds = %589, %574
  %597 = phi i8* [ %592, %589 ], [ %554, %574 ]
  %598 = phi i32 [ %590, %589 ], [ %576, %574 ]
  %599 = phi i32 [ %595, %589 ], [ %577, %574 ]
  %600 = lshr i32 %598, 11
  %601 = mul i32 %600, %587
  %602 = icmp ult i32 %599, %601
  br i1 %602, label %603, label %610

603:                                              ; preds = %596
  %604 = sub i32 2048, %587
  %605 = lshr i32 %604, 5
  %606 = add i32 %605, %587
  store i32 %606, i32* %586, align 4
  %607 = shl i32 %578, 1
  %608 = xor i32 %581, %579
  %609 = zext i32 %608 to i64
  br label %617

610:                                              ; preds = %596
  %611 = sub i32 %598, %601
  %612 = sub i32 %599, %601
  %613 = lshr i32 %587, 5
  %614 = sub i32 %587, %613
  store i32 %614, i32* %586, align 4
  %615 = shl i32 %578, 1
  %616 = or i32 %615, 1
  br label %617

617:                                              ; preds = %610, %603
  %618 = phi i64 [ %583, %610 ], [ %609, %603 ]
  %619 = phi i32 [ %611, %610 ], [ %601, %603 ]
  %620 = phi i32 [ %612, %610 ], [ %599, %603 ]
  %621 = phi i32 [ %616, %610 ], [ %607, %603 ]
  %622 = phi i32 [ %581, %610 ], [ %608, %603 ]
  %623 = shl nuw nsw i32 %409, 6
  %624 = and i32 %622, %623
  %625 = getelementptr inbounds i32, i32* %129, i64 %618
  %626 = zext i32 %624 to i64
  %627 = getelementptr inbounds i32, i32* %625, i64 %626
  %628 = zext i32 %621 to i64
  %629 = getelementptr inbounds i32, i32* %627, i64 %628
  %630 = load i32, i32* %629, align 4
  %631 = icmp ult i32 %619, 16777216
  br i1 %631, label %632, label %639

632:                                              ; preds = %617
  %633 = shl i32 %619, 8
  %634 = shl i32 %620, 8
  %635 = getelementptr inbounds i8, i8* %597, i64 1
  %636 = load i8, i8* %597, align 1
  %637 = zext i8 %636 to i32
  %638 = or i32 %634, %637
  br label %639

639:                                              ; preds = %632, %617
  %640 = phi i8* [ %635, %632 ], [ %597, %617 ]
  %641 = phi i32 [ %633, %632 ], [ %619, %617 ]
  %642 = phi i32 [ %638, %632 ], [ %620, %617 ]
  %643 = lshr i32 %641, 11
  %644 = mul i32 %643, %630
  %645 = icmp ult i32 %642, %644
  br i1 %645, label %646, label %653

646:                                              ; preds = %639
  %647 = sub i32 2048, %630
  %648 = lshr i32 %647, 5
  %649 = add i32 %648, %630
  store i32 %649, i32* %629, align 4
  %650 = shl i32 %621, 1
  %651 = xor i32 %624, %622
  %652 = zext i32 %651 to i64
  br label %660

653:                                              ; preds = %639
  %654 = sub i32 %641, %644
  %655 = sub i32 %642, %644
  %656 = lshr i32 %630, 5
  %657 = sub i32 %630, %656
  store i32 %657, i32* %629, align 4
  %658 = shl i32 %621, 1
  %659 = or i32 %658, 1
  br label %660

660:                                              ; preds = %653, %646
  %661 = phi i64 [ %626, %653 ], [ %652, %646 ]
  %662 = phi i32 [ %654, %653 ], [ %644, %646 ]
  %663 = phi i32 [ %655, %653 ], [ %642, %646 ]
  %664 = phi i32 [ %659, %653 ], [ %650, %646 ]
  %665 = phi i32 [ %624, %653 ], [ %651, %646 ]
  %666 = shl nuw nsw i32 %409, 7
  %667 = and i32 %665, %666
  %668 = getelementptr inbounds i32, i32* %129, i64 %661
  %669 = zext i32 %667 to i64
  %670 = getelementptr inbounds i32, i32* %668, i64 %669
  %671 = zext i32 %664 to i64
  %672 = getelementptr inbounds i32, i32* %670, i64 %671
  %673 = load i32, i32* %672, align 4
  %674 = icmp ult i32 %662, 16777216
  br i1 %674, label %675, label %682

675:                                              ; preds = %660
  %676 = shl i32 %662, 8
  %677 = shl i32 %663, 8
  %678 = getelementptr inbounds i8, i8* %640, i64 1
  %679 = load i8, i8* %640, align 1
  %680 = zext i8 %679 to i32
  %681 = or i32 %677, %680
  br label %682

682:                                              ; preds = %675, %660
  %683 = phi i8* [ %678, %675 ], [ %640, %660 ]
  %684 = phi i32 [ %676, %675 ], [ %662, %660 ]
  %685 = phi i32 [ %681, %675 ], [ %663, %660 ]
  %686 = lshr i32 %684, 11
  %687 = mul i32 %686, %673
  %688 = icmp ult i32 %685, %687
  br i1 %688, label %689, label %696

689:                                              ; preds = %682
  %690 = sub i32 2048, %673
  %691 = lshr i32 %690, 5
  %692 = add i32 %691, %673
  store i32 %692, i32* %672, align 4
  %693 = shl i32 %664, 1
  %694 = xor i32 %667, %665
  %695 = zext i32 %694 to i64
  br label %703

696:                                              ; preds = %682
  %697 = sub i32 %684, %687
  %698 = sub i32 %685, %687
  %699 = lshr i32 %673, 5
  %700 = sub i32 %673, %699
  store i32 %700, i32* %672, align 4
  %701 = shl i32 %664, 1
  %702 = or i32 %701, 1
  br label %703

703:                                              ; preds = %696, %689
  %704 = phi i64 [ %669, %696 ], [ %695, %689 ]
  %705 = phi i32 [ %697, %696 ], [ %687, %689 ]
  %706 = phi i32 [ %698, %696 ], [ %685, %689 ]
  %707 = phi i32 [ %702, %696 ], [ %693, %689 ]
  %708 = phi i32 [ %667, %696 ], [ %694, %689 ]
  %709 = shl nuw nsw i32 %409, 8
  %710 = and i32 %708, %709
  %711 = getelementptr inbounds i32, i32* %129, i64 %704
  %712 = zext i32 %710 to i64
  %713 = getelementptr inbounds i32, i32* %711, i64 %712
  %714 = zext i32 %707 to i64
  %715 = getelementptr inbounds i32, i32* %713, i64 %714
  %716 = load i32, i32* %715, align 4
  %717 = icmp ult i32 %705, 16777216
  br i1 %717, label %718, label %725

718:                                              ; preds = %703
  %719 = shl i32 %705, 8
  %720 = shl i32 %706, 8
  %721 = getelementptr inbounds i8, i8* %683, i64 1
  %722 = load i8, i8* %683, align 1
  %723 = zext i8 %722 to i32
  %724 = or i32 %720, %723
  br label %725

725:                                              ; preds = %718, %703
  %726 = phi i8* [ %721, %718 ], [ %683, %703 ]
  %727 = phi i32 [ %719, %718 ], [ %705, %703 ]
  %728 = phi i32 [ %724, %718 ], [ %706, %703 ]
  %729 = lshr i32 %727, 11
  %730 = mul i32 %729, %716
  %731 = icmp ult i32 %728, %730
  br i1 %731, label %732, label %737

732:                                              ; preds = %725
  %733 = sub i32 2048, %716
  %734 = lshr i32 %733, 5
  %735 = add i32 %734, %716
  store i32 %735, i32* %715, align 4
  %736 = shl i32 %707, 1
  br label %744

737:                                              ; preds = %725
  %738 = sub i32 %727, %730
  %739 = sub i32 %728, %730
  %740 = lshr i32 %716, 5
  %741 = sub i32 %716, %740
  store i32 %741, i32* %715, align 4
  %742 = shl i32 %707, 1
  %743 = or i32 %742, 1
  br label %744

744:                                              ; preds = %737, %732, %394, %389
  %745 = phi i32 [ %135, %389 ], [ %135, %394 ], [ %412, %737 ], [ %412, %732 ]
  %746 = phi i8* [ %383, %389 ], [ %383, %394 ], [ %726, %737 ], [ %726, %732 ]
  %747 = phi i32 [ %387, %389 ], [ %395, %394 ], [ %738, %737 ], [ %730, %732 ]
  %748 = phi i32 [ %385, %389 ], [ %396, %394 ], [ %739, %737 ], [ %728, %732 ]
  %749 = phi i32 [ %393, %389 ], [ %400, %394 ], [ %743, %737 ], [ %736, %732 ]
  %750 = trunc i32 %749 to i8
  %751 = add i64 %80, 1
  %752 = getelementptr inbounds i8, i8* %56, i64 %80
  store i8 %750, i8* %752, align 1
  br label %1860

753:                                              ; preds = %101
  %754 = sub i32 %103, %106
  %755 = sub i32 %104, %106
  %756 = lshr i32 %92, 5
  %757 = sub i32 %92, %756
  store i32 %757, i32* %91, align 4
  %758 = zext i32 %75 to i64
  %759 = getelementptr inbounds i32, i32* %61, i64 %758
  %760 = load i32, i32* %759, align 4
  %761 = icmp ult i32 %754, 16777216
  br i1 %761, label %762, label %769

762:                                              ; preds = %753
  %763 = shl i32 %754, 8
  %764 = shl i32 %755, 8
  %765 = getelementptr inbounds i8, i8* %102, i64 1
  %766 = load i8, i8* %102, align 1
  %767 = zext i8 %766 to i32
  %768 = or i32 %764, %767
  br label %769

769:                                              ; preds = %762, %753
  %770 = phi i8* [ %765, %762 ], [ %102, %753 ]
  %771 = phi i32 [ %763, %762 ], [ %754, %753 ]
  %772 = phi i32 [ %768, %762 ], [ %755, %753 ]
  %773 = lshr i32 %771, 11
  %774 = mul i32 %773, %760
  %775 = icmp ult i32 %772, %774
  br i1 %775, label %776, label %781

776:                                              ; preds = %769
  %777 = sub i32 2048, %760
  %778 = lshr i32 %777, 5
  %779 = add i32 %778, %760
  store i32 %779, i32* %759, align 4
  %780 = add i32 %75, 12
  br label %922

781:                                              ; preds = %769
  %782 = sub i32 %771, %774
  %783 = sub i32 %772, %774
  %784 = lshr i32 %760, 5
  %785 = sub i32 %760, %784
  store i32 %785, i32* %759, align 4
  %786 = or i32 %81, %24
  %787 = icmp eq i32 %786, 0
  br i1 %787, label %1984, label %788

788:                                              ; preds = %781
  %789 = getelementptr inbounds i32, i32* %62, i64 %758
  %790 = load i32, i32* %789, align 4
  %791 = icmp ult i32 %782, 16777216
  br i1 %791, label %792, label %799

792:                                              ; preds = %788
  %793 = shl i32 %782, 8
  %794 = shl i32 %783, 8
  %795 = getelementptr inbounds i8, i8* %770, i64 1
  %796 = load i8, i8* %770, align 1
  %797 = zext i8 %796 to i32
  %798 = or i32 %794, %797
  br label %799

799:                                              ; preds = %792, %788
  %800 = phi i8* [ %795, %792 ], [ %770, %788 ]
  %801 = phi i32 [ %793, %792 ], [ %782, %788 ]
  %802 = phi i32 [ %798, %792 ], [ %783, %788 ]
  %803 = lshr i32 %801, 11
  %804 = mul i32 %803, %790
  %805 = icmp ult i32 %802, %804
  br i1 %805, label %806, label %849

806:                                              ; preds = %799
  %807 = sub i32 2048, %790
  %808 = lshr i32 %807, 5
  %809 = add i32 %808, %790
  store i32 %809, i32* %789, align 4
  %810 = getelementptr inbounds i32, i32* %65, i64 %88
  %811 = getelementptr inbounds i32, i32* %810, i64 %90
  %812 = load i32, i32* %811, align 4
  %813 = icmp ult i32 %804, 16777216
  br i1 %813, label %814, label %821

814:                                              ; preds = %806
  %815 = shl i32 %804, 8
  %816 = shl i32 %802, 8
  %817 = getelementptr inbounds i8, i8* %800, i64 1
  %818 = load i8, i8* %800, align 1
  %819 = zext i8 %818 to i32
  %820 = or i32 %816, %819
  br label %821

821:                                              ; preds = %814, %806
  %822 = phi i8* [ %817, %814 ], [ %800, %806 ]
  %823 = phi i32 [ %815, %814 ], [ %804, %806 ]
  %824 = phi i32 [ %820, %814 ], [ %802, %806 ]
  %825 = lshr i32 %823, 11
  %826 = mul i32 %825, %812
  %827 = icmp ult i32 %824, %826
  br i1 %827, label %828, label %844

828:                                              ; preds = %821
  %829 = sub i32 2048, %812
  %830 = lshr i32 %829, 5
  %831 = add i32 %830, %812
  store i32 %831, i32* %811, align 4
  %832 = zext i32 %76 to i64
  %833 = sub i64 %80, %832
  %834 = icmp ult i64 %80, %832
  %835 = select i1 %834, i64 %57, i64 0
  %836 = add i64 %833, %835
  %837 = getelementptr inbounds i8, i8* %56, i64 %836
  %838 = load i8, i8* %837, align 1
  %839 = getelementptr inbounds i8, i8* %56, i64 %80
  store i8 %838, i8* %839, align 1
  %840 = add i64 %80, 1
  %841 = add i32 %81, 1
  %842 = icmp ult i32 %75, 7
  %843 = select i1 %842, i32 9, i32 11
  br label %1860

844:                                              ; preds = %821
  %845 = sub i32 %823, %826
  %846 = sub i32 %824, %826
  %847 = lshr i32 %812, 5
  %848 = sub i32 %812, %847
  store i32 %848, i32* %811, align 4
  br label %912

849:                                              ; preds = %799
  %850 = sub i32 %801, %804
  %851 = sub i32 %802, %804
  %852 = lshr i32 %790, 5
  %853 = sub i32 %790, %852
  store i32 %853, i32* %789, align 4
  %854 = getelementptr inbounds i32, i32* %63, i64 %758
  %855 = load i32, i32* %854, align 4
  %856 = icmp ult i32 %850, 16777216
  br i1 %856, label %857, label %864

857:                                              ; preds = %849
  %858 = shl i32 %850, 8
  %859 = shl i32 %851, 8
  %860 = getelementptr inbounds i8, i8* %800, i64 1
  %861 = load i8, i8* %800, align 1
  %862 = zext i8 %861 to i32
  %863 = or i32 %859, %862
  br label %864

864:                                              ; preds = %857, %849
  %865 = phi i8* [ %860, %857 ], [ %800, %849 ]
  %866 = phi i32 [ %858, %857 ], [ %850, %849 ]
  %867 = phi i32 [ %863, %857 ], [ %851, %849 ]
  %868 = lshr i32 %866, 11
  %869 = mul i32 %868, %855
  %870 = icmp ult i32 %867, %869
  br i1 %870, label %871, label %875

871:                                              ; preds = %864
  %872 = sub i32 2048, %855
  %873 = lshr i32 %872, 5
  %874 = add i32 %873, %855
  store i32 %874, i32* %854, align 4
  br label %912

875:                                              ; preds = %864
  %876 = sub i32 %866, %869
  %877 = sub i32 %867, %869
  %878 = lshr i32 %855, 5
  %879 = sub i32 %855, %878
  store i32 %879, i32* %854, align 4
  %880 = getelementptr inbounds i32, i32* %64, i64 %758
  %881 = load i32, i32* %880, align 4
  %882 = icmp ult i32 %876, 16777216
  br i1 %882, label %883, label %890

883:                                              ; preds = %875
  %884 = shl i32 %876, 8
  %885 = shl i32 %877, 8
  %886 = getelementptr inbounds i8, i8* %865, i64 1
  %887 = load i8, i8* %865, align 1
  %888 = zext i8 %887 to i32
  %889 = or i32 %885, %888
  br label %890

890:                                              ; preds = %883, %875
  %891 = phi i8* [ %886, %883 ], [ %865, %875 ]
  %892 = phi i32 [ %884, %883 ], [ %876, %875 ]
  %893 = phi i32 [ %889, %883 ], [ %877, %875 ]
  %894 = lshr i32 %892, 11
  %895 = mul i32 %894, %881
  %896 = icmp ult i32 %893, %895
  br i1 %896, label %897, label %901

897:                                              ; preds = %890
  %898 = sub i32 2048, %881
  %899 = lshr i32 %898, 5
  %900 = add i32 %899, %881
  br label %906

901:                                              ; preds = %890
  %902 = sub i32 %892, %895
  %903 = sub i32 %893, %895
  %904 = lshr i32 %881, 5
  %905 = sub i32 %881, %904
  br label %906

906:                                              ; preds = %901, %897
  %907 = phi i32 [ %905, %901 ], [ %900, %897 ]
  %908 = phi i32 [ %78, %901 ], [ %79, %897 ]
  %909 = phi i32 [ %902, %901 ], [ %895, %897 ]
  %910 = phi i32 [ %903, %901 ], [ %893, %897 ]
  %911 = phi i32 [ %79, %901 ], [ %78, %897 ]
  store i32 %907, i32* %880, align 4
  br label %912

912:                                              ; preds = %906, %871, %844
  %913 = phi i32 [ %76, %844 ], [ %77, %871 ], [ %911, %906 ]
  %914 = phi i32 [ %77, %844 ], [ %76, %871 ], [ %76, %906 ]
  %915 = phi i32 [ %78, %844 ], [ %78, %871 ], [ %77, %906 ]
  %916 = phi i32 [ %79, %844 ], [ %79, %871 ], [ %908, %906 ]
  %917 = phi i8* [ %822, %844 ], [ %865, %871 ], [ %891, %906 ]
  %918 = phi i32 [ %845, %844 ], [ %869, %871 ], [ %909, %906 ]
  %919 = phi i32 [ %846, %844 ], [ %867, %871 ], [ %910, %906 ]
  %920 = icmp ult i32 %75, 7
  %921 = select i1 %920, i32 8, i32 11
  br label %922

922:                                              ; preds = %912, %776
  %923 = phi i32 [ %780, %776 ], [ %921, %912 ]
  %924 = phi i32 [ %76, %776 ], [ %913, %912 ]
  %925 = phi i32 [ %77, %776 ], [ %914, %912 ]
  %926 = phi i32 [ %78, %776 ], [ %915, %912 ]
  %927 = phi i32 [ %79, %776 ], [ %916, %912 ]
  %928 = phi i8* [ %770, %776 ], [ %917, %912 ]
  %929 = phi i32 [ %774, %776 ], [ %918, %912 ]
  %930 = phi i32 [ %772, %776 ], [ %919, %912 ]
  %931 = phi i32* [ %67, %776 ], [ %66, %912 ]
  %932 = load i32, i32* %931, align 4
  %933 = icmp ult i32 %929, 16777216
  br i1 %933, label %934, label %941

934:                                              ; preds = %922
  %935 = shl i32 %929, 8
  %936 = shl i32 %930, 8
  %937 = getelementptr inbounds i8, i8* %928, i64 1
  %938 = load i8, i8* %928, align 1
  %939 = zext i8 %938 to i32
  %940 = or i32 %936, %939
  br label %941

941:                                              ; preds = %934, %922
  %942 = phi i8* [ %937, %934 ], [ %928, %922 ]
  %943 = phi i32 [ %935, %934 ], [ %929, %922 ]
  %944 = phi i32 [ %940, %934 ], [ %930, %922 ]
  %945 = lshr i32 %943, 11
  %946 = mul i32 %945, %932
  %947 = icmp ult i32 %944, %946
  br i1 %947, label %948, label %1056

948:                                              ; preds = %941
  %949 = sub i32 2048, %932
  %950 = lshr i32 %949, 5
  %951 = add i32 %950, %932
  store i32 %951, i32* %931, align 4
  %952 = getelementptr inbounds i32, i32* %931, i64 2
  %953 = shl i32 %86, 3
  %954 = zext i32 %953 to i64
  %955 = getelementptr inbounds i32, i32* %952, i64 %954
  %956 = getelementptr inbounds i32, i32* %955, i64 1
  %957 = load i32, i32* %956, align 4
  %958 = icmp ult i32 %946, 16777216
  br i1 %958, label %959, label %966

959:                                              ; preds = %948
  %960 = shl i32 %946, 8
  %961 = shl i32 %944, 8
  %962 = getelementptr inbounds i8, i8* %942, i64 1
  %963 = load i8, i8* %942, align 1
  %964 = zext i8 %963 to i32
  %965 = or i32 %961, %964
  br label %966

966:                                              ; preds = %959, %948
  %967 = phi i8* [ %962, %959 ], [ %942, %948 ]
  %968 = phi i32 [ %960, %959 ], [ %946, %948 ]
  %969 = phi i32 [ %965, %959 ], [ %944, %948 ]
  %970 = lshr i32 %968, 11
  %971 = mul i32 %970, %957
  %972 = icmp ult i32 %969, %971
  br i1 %972, label %973, label %977

973:                                              ; preds = %966
  %974 = sub i32 2048, %957
  %975 = lshr i32 %974, 5
  %976 = add i32 %975, %957
  br label %982

977:                                              ; preds = %966
  %978 = sub i32 %968, %971
  %979 = sub i32 %969, %971
  %980 = lshr i32 %957, 5
  %981 = sub i32 %957, %980
  br label %982

982:                                              ; preds = %977, %973
  %983 = phi i32 [ %981, %977 ], [ %976, %973 ]
  %984 = phi i32 [ 3, %977 ], [ 2, %973 ]
  %985 = phi i32 [ %978, %977 ], [ %971, %973 ]
  %986 = phi i32 [ %979, %977 ], [ %969, %973 ]
  store i32 %983, i32* %956, align 4
  %987 = zext i32 %984 to i64
  %988 = getelementptr inbounds i32, i32* %955, i64 %987
  %989 = load i32, i32* %988, align 4
  %990 = icmp ult i32 %985, 16777216
  br i1 %990, label %991, label %998

991:                                              ; preds = %982
  %992 = shl i32 %985, 8
  %993 = shl i32 %986, 8
  %994 = getelementptr inbounds i8, i8* %967, i64 1
  %995 = load i8, i8* %967, align 1
  %996 = zext i8 %995 to i32
  %997 = or i32 %993, %996
  br label %998

998:                                              ; preds = %991, %982
  %999 = phi i8* [ %994, %991 ], [ %967, %982 ]
  %1000 = phi i32 [ %992, %991 ], [ %985, %982 ]
  %1001 = phi i32 [ %997, %991 ], [ %986, %982 ]
  %1002 = lshr i32 %1000, 11
  %1003 = mul i32 %1002, %989
  %1004 = icmp ult i32 %1001, %1003
  br i1 %1004, label %1005, label %1010

1005:                                             ; preds = %998
  %1006 = sub i32 2048, %989
  %1007 = lshr i32 %1006, 5
  %1008 = add i32 %1007, %989
  store i32 %1008, i32* %988, align 4
  %1009 = shl nuw nsw i32 %984, 1
  br label %1017

1010:                                             ; preds = %998
  %1011 = sub i32 %1000, %1003
  %1012 = sub i32 %1001, %1003
  %1013 = lshr i32 %989, 5
  %1014 = sub i32 %989, %1013
  store i32 %1014, i32* %988, align 4
  %1015 = shl nuw nsw i32 %984, 1
  %1016 = or i32 %1015, 1
  br label %1017

1017:                                             ; preds = %1010, %1005
  %1018 = phi i32 [ %1009, %1005 ], [ %1016, %1010 ]
  %1019 = phi i32 [ %1003, %1005 ], [ %1011, %1010 ]
  %1020 = phi i32 [ %1001, %1005 ], [ %1012, %1010 ]
  %1021 = zext i32 %1018 to i64
  %1022 = getelementptr inbounds i32, i32* %955, i64 %1021
  %1023 = load i32, i32* %1022, align 4
  %1024 = icmp ult i32 %1019, 16777216
  br i1 %1024, label %1025, label %1032

1025:                                             ; preds = %1017
  %1026 = shl i32 %1019, 8
  %1027 = shl i32 %1020, 8
  %1028 = getelementptr inbounds i8, i8* %999, i64 1
  %1029 = load i8, i8* %999, align 1
  %1030 = zext i8 %1029 to i32
  %1031 = or i32 %1027, %1030
  br label %1032

1032:                                             ; preds = %1025, %1017
  %1033 = phi i8* [ %1028, %1025 ], [ %999, %1017 ]
  %1034 = phi i32 [ %1026, %1025 ], [ %1019, %1017 ]
  %1035 = phi i32 [ %1031, %1025 ], [ %1020, %1017 ]
  %1036 = lshr i32 %1034, 11
  %1037 = mul i32 %1036, %1023
  %1038 = icmp ult i32 %1035, %1037
  br i1 %1038, label %1039, label %1044

1039:                                             ; preds = %1032
  %1040 = sub i32 2048, %1023
  %1041 = lshr i32 %1040, 5
  %1042 = add i32 %1041, %1023
  store i32 %1042, i32* %1022, align 4
  %1043 = shl nsw i32 %1018, 1
  br label %1051

1044:                                             ; preds = %1032
  %1045 = sub i32 %1034, %1037
  %1046 = sub i32 %1035, %1037
  %1047 = lshr i32 %1023, 5
  %1048 = sub i32 %1023, %1047
  store i32 %1048, i32* %1022, align 4
  %1049 = shl nsw i32 %1018, 1
  %1050 = or i32 %1049, 1
  br label %1051

1051:                                             ; preds = %1044, %1039
  %1052 = phi i32 [ %1043, %1039 ], [ %1050, %1044 ]
  %1053 = phi i32 [ %1037, %1039 ], [ %1045, %1044 ]
  %1054 = phi i32 [ %1035, %1039 ], [ %1046, %1044 ]
  %1055 = add i32 %1052, -8
  br label %1229

1056:                                             ; preds = %941
  %1057 = sub i32 %943, %946
  %1058 = sub i32 %944, %946
  %1059 = lshr i32 %932, 5
  %1060 = sub i32 %932, %1059
  store i32 %1060, i32* %931, align 4
  %1061 = getelementptr inbounds i32, i32* %931, i64 1
  %1062 = load i32, i32* %1061, align 4
  %1063 = icmp ult i32 %1057, 16777216
  br i1 %1063, label %1064, label %1071

1064:                                             ; preds = %1056
  %1065 = shl i32 %1057, 8
  %1066 = shl i32 %1058, 8
  %1067 = getelementptr inbounds i8, i8* %942, i64 1
  %1068 = load i8, i8* %942, align 1
  %1069 = zext i8 %1068 to i32
  %1070 = or i32 %1066, %1069
  br label %1071

1071:                                             ; preds = %1064, %1056
  %1072 = phi i8* [ %1067, %1064 ], [ %942, %1056 ]
  %1073 = phi i32 [ %1065, %1064 ], [ %1057, %1056 ]
  %1074 = phi i32 [ %1070, %1064 ], [ %1058, %1056 ]
  %1075 = lshr i32 %1073, 11
  %1076 = mul i32 %1075, %1062
  %1077 = icmp ult i32 %1074, %1076
  br i1 %1077, label %1078, label %1181

1078:                                             ; preds = %1071
  %1079 = sub i32 2048, %1062
  %1080 = lshr i32 %1079, 5
  %1081 = add i32 %1080, %1062
  store i32 %1081, i32* %1061, align 4
  %1082 = getelementptr inbounds i32, i32* %931, i64 130
  %1083 = shl i32 %86, 3
  %1084 = zext i32 %1083 to i64
  %1085 = getelementptr inbounds i32, i32* %1082, i64 %1084
  %1086 = getelementptr inbounds i32, i32* %1085, i64 1
  %1087 = load i32, i32* %1086, align 4
  %1088 = icmp ult i32 %1076, 16777216
  br i1 %1088, label %1089, label %1096

1089:                                             ; preds = %1078
  %1090 = shl i32 %1076, 8
  %1091 = shl i32 %1074, 8
  %1092 = getelementptr inbounds i8, i8* %1072, i64 1
  %1093 = load i8, i8* %1072, align 1
  %1094 = zext i8 %1093 to i32
  %1095 = or i32 %1091, %1094
  br label %1096

1096:                                             ; preds = %1089, %1078
  %1097 = phi i8* [ %1092, %1089 ], [ %1072, %1078 ]
  %1098 = phi i32 [ %1090, %1089 ], [ %1076, %1078 ]
  %1099 = phi i32 [ %1095, %1089 ], [ %1074, %1078 ]
  %1100 = lshr i32 %1098, 11
  %1101 = mul i32 %1100, %1087
  %1102 = icmp ult i32 %1099, %1101
  br i1 %1102, label %1103, label %1107

1103:                                             ; preds = %1096
  %1104 = sub i32 2048, %1087
  %1105 = lshr i32 %1104, 5
  %1106 = add i32 %1105, %1087
  br label %1112

1107:                                             ; preds = %1096
  %1108 = sub i32 %1098, %1101
  %1109 = sub i32 %1099, %1101
  %1110 = lshr i32 %1087, 5
  %1111 = sub i32 %1087, %1110
  br label %1112

1112:                                             ; preds = %1107, %1103
  %1113 = phi i32 [ %1111, %1107 ], [ %1106, %1103 ]
  %1114 = phi i32 [ 3, %1107 ], [ 2, %1103 ]
  %1115 = phi i32 [ %1108, %1107 ], [ %1101, %1103 ]
  %1116 = phi i32 [ %1109, %1107 ], [ %1099, %1103 ]
  store i32 %1113, i32* %1086, align 4
  %1117 = zext i32 %1114 to i64
  %1118 = getelementptr inbounds i32, i32* %1085, i64 %1117
  %1119 = load i32, i32* %1118, align 4
  %1120 = icmp ult i32 %1115, 16777216
  br i1 %1120, label %1121, label %1128

1121:                                             ; preds = %1112
  %1122 = shl i32 %1115, 8
  %1123 = shl i32 %1116, 8
  %1124 = getelementptr inbounds i8, i8* %1097, i64 1
  %1125 = load i8, i8* %1097, align 1
  %1126 = zext i8 %1125 to i32
  %1127 = or i32 %1123, %1126
  br label %1128

1128:                                             ; preds = %1121, %1112
  %1129 = phi i8* [ %1124, %1121 ], [ %1097, %1112 ]
  %1130 = phi i32 [ %1122, %1121 ], [ %1115, %1112 ]
  %1131 = phi i32 [ %1127, %1121 ], [ %1116, %1112 ]
  %1132 = lshr i32 %1130, 11
  %1133 = mul i32 %1132, %1119
  %1134 = icmp ult i32 %1131, %1133
  br i1 %1134, label %1135, label %1140

1135:                                             ; preds = %1128
  %1136 = sub i32 2048, %1119
  %1137 = lshr i32 %1136, 5
  %1138 = add i32 %1137, %1119
  store i32 %1138, i32* %1118, align 4
  %1139 = shl nuw nsw i32 %1114, 1
  br label %1147

1140:                                             ; preds = %1128
  %1141 = sub i32 %1130, %1133
  %1142 = sub i32 %1131, %1133
  %1143 = lshr i32 %1119, 5
  %1144 = sub i32 %1119, %1143
  store i32 %1144, i32* %1118, align 4
  %1145 = shl nuw nsw i32 %1114, 1
  %1146 = or i32 %1145, 1
  br label %1147

1147:                                             ; preds = %1140, %1135
  %1148 = phi i32 [ %1139, %1135 ], [ %1146, %1140 ]
  %1149 = phi i32 [ %1133, %1135 ], [ %1141, %1140 ]
  %1150 = phi i32 [ %1131, %1135 ], [ %1142, %1140 ]
  %1151 = zext i32 %1148 to i64
  %1152 = getelementptr inbounds i32, i32* %1085, i64 %1151
  %1153 = load i32, i32* %1152, align 4
  %1154 = icmp ult i32 %1149, 16777216
  br i1 %1154, label %1155, label %1162

1155:                                             ; preds = %1147
  %1156 = shl i32 %1149, 8
  %1157 = shl i32 %1150, 8
  %1158 = getelementptr inbounds i8, i8* %1129, i64 1
  %1159 = load i8, i8* %1129, align 1
  %1160 = zext i8 %1159 to i32
  %1161 = or i32 %1157, %1160
  br label %1162

1162:                                             ; preds = %1155, %1147
  %1163 = phi i8* [ %1158, %1155 ], [ %1129, %1147 ]
  %1164 = phi i32 [ %1156, %1155 ], [ %1149, %1147 ]
  %1165 = phi i32 [ %1161, %1155 ], [ %1150, %1147 ]
  %1166 = lshr i32 %1164, 11
  %1167 = mul i32 %1166, %1153
  %1168 = icmp ult i32 %1165, %1167
  br i1 %1168, label %1169, label %1174

1169:                                             ; preds = %1162
  %1170 = sub i32 2048, %1153
  %1171 = lshr i32 %1170, 5
  %1172 = add i32 %1171, %1153
  store i32 %1172, i32* %1152, align 4
  %1173 = shl nsw i32 %1148, 1
  br label %1229

1174:                                             ; preds = %1162
  %1175 = sub i32 %1164, %1167
  %1176 = sub i32 %1165, %1167
  %1177 = lshr i32 %1153, 5
  %1178 = sub i32 %1153, %1177
  store i32 %1178, i32* %1152, align 4
  %1179 = shl nsw i32 %1148, 1
  %1180 = or i32 %1179, 1
  br label %1229

1181:                                             ; preds = %1071
  %1182 = sub i32 %1073, %1076
  %1183 = sub i32 %1074, %1076
  %1184 = lshr i32 %1062, 5
  %1185 = sub i32 %1062, %1184
  store i32 %1185, i32* %1061, align 4
  %1186 = getelementptr inbounds i32, i32* %931, i64 258
  br label %1187

1187:                                             ; preds = %1222, %1181
  %1188 = phi i32 [ 1, %1181 ], [ %1223, %1222 ]
  %1189 = phi i8* [ %1072, %1181 ], [ %1204, %1222 ]
  %1190 = phi i32 [ %1182, %1181 ], [ %1224, %1222 ]
  %1191 = phi i32 [ %1183, %1181 ], [ %1225, %1222 ]
  %1192 = zext i32 %1188 to i64
  %1193 = getelementptr inbounds i32, i32* %1186, i64 %1192
  %1194 = load i32, i32* %1193, align 4
  %1195 = icmp ult i32 %1190, 16777216
  br i1 %1195, label %1196, label %1203

1196:                                             ; preds = %1187
  %1197 = shl i32 %1190, 8
  %1198 = shl i32 %1191, 8
  %1199 = getelementptr inbounds i8, i8* %1189, i64 1
  %1200 = load i8, i8* %1189, align 1
  %1201 = zext i8 %1200 to i32
  %1202 = or i32 %1198, %1201
  br label %1203

1203:                                             ; preds = %1196, %1187
  %1204 = phi i8* [ %1199, %1196 ], [ %1189, %1187 ]
  %1205 = phi i32 [ %1197, %1196 ], [ %1190, %1187 ]
  %1206 = phi i32 [ %1202, %1196 ], [ %1191, %1187 ]
  %1207 = lshr i32 %1205, 11
  %1208 = mul i32 %1207, %1194
  %1209 = icmp ult i32 %1206, %1208
  br i1 %1209, label %1210, label %1215

1210:                                             ; preds = %1203
  %1211 = sub i32 2048, %1194
  %1212 = lshr i32 %1211, 5
  %1213 = add i32 %1212, %1194
  store i32 %1213, i32* %1193, align 4
  %1214 = shl i32 %1188, 1
  br label %1222

1215:                                             ; preds = %1203
  %1216 = sub i32 %1205, %1208
  %1217 = sub i32 %1206, %1208
  %1218 = lshr i32 %1194, 5
  %1219 = sub i32 %1194, %1218
  store i32 %1219, i32* %1193, align 4
  %1220 = shl i32 %1188, 1
  %1221 = or i32 %1220, 1
  br label %1222

1222:                                             ; preds = %1215, %1210
  %1223 = phi i32 [ %1214, %1210 ], [ %1221, %1215 ]
  %1224 = phi i32 [ %1208, %1210 ], [ %1216, %1215 ]
  %1225 = phi i32 [ %1206, %1210 ], [ %1217, %1215 ]
  %1226 = icmp ult i32 %1223, 256
  br i1 %1226, label %1187, label %1227

1227:                                             ; preds = %1222
  %1228 = add i32 %1223, -240
  br label %1229

1229:                                             ; preds = %1227, %1174, %1169, %1051
  %1230 = phi i32 [ %1055, %1051 ], [ %1173, %1169 ], [ %1180, %1174 ], [ %1228, %1227 ]
  %1231 = phi i8* [ %1033, %1051 ], [ %1163, %1169 ], [ %1163, %1174 ], [ %1204, %1227 ]
  %1232 = phi i32 [ %1053, %1051 ], [ %1167, %1169 ], [ %1175, %1174 ], [ %1224, %1227 ]
  %1233 = phi i32 [ %1054, %1051 ], [ %1165, %1169 ], [ %1176, %1174 ], [ %1225, %1227 ]
  %1234 = icmp ugt i32 %923, 11
  br i1 %1234, label %1235, label %1690

1235:                                             ; preds = %1229
  %1236 = icmp ult i32 %1230, 3
  %1237 = select i1 %1236, i32 %1230, i32 3
  %1238 = shl nuw nsw i32 %1237, 6
  %1239 = zext i32 %1238 to i64
  %1240 = getelementptr inbounds i32, i32* %68, i64 %1239
  %1241 = getelementptr inbounds i32, i32* %1240, i64 1
  %1242 = load i32, i32* %1241, align 4
  %1243 = icmp ult i32 %1232, 16777216
  br i1 %1243, label %1244, label %1251

1244:                                             ; preds = %1235
  %1245 = shl i32 %1232, 8
  %1246 = shl i32 %1233, 8
  %1247 = getelementptr inbounds i8, i8* %1231, i64 1
  %1248 = load i8, i8* %1231, align 1
  %1249 = zext i8 %1248 to i32
  %1250 = or i32 %1246, %1249
  br label %1251

1251:                                             ; preds = %1244, %1235
  %1252 = phi i8* [ %1247, %1244 ], [ %1231, %1235 ]
  %1253 = phi i32 [ %1245, %1244 ], [ %1232, %1235 ]
  %1254 = phi i32 [ %1250, %1244 ], [ %1233, %1235 ]
  %1255 = lshr i32 %1253, 11
  %1256 = mul i32 %1255, %1242
  %1257 = icmp ult i32 %1254, %1256
  br i1 %1257, label %1258, label %1262

1258:                                             ; preds = %1251
  %1259 = sub i32 2048, %1242
  %1260 = lshr i32 %1259, 5
  %1261 = add i32 %1260, %1242
  br label %1267

1262:                                             ; preds = %1251
  %1263 = sub i32 %1253, %1256
  %1264 = sub i32 %1254, %1256
  %1265 = lshr i32 %1242, 5
  %1266 = sub i32 %1242, %1265
  br label %1267

1267:                                             ; preds = %1262, %1258
  %1268 = phi i32 [ %1266, %1262 ], [ %1261, %1258 ]
  %1269 = phi i32 [ %1263, %1262 ], [ %1256, %1258 ]
  %1270 = phi i32 [ %1264, %1262 ], [ %1254, %1258 ]
  %1271 = phi i32 [ 3, %1262 ], [ 2, %1258 ]
  store i32 %1268, i32* %1241, align 4
  %1272 = zext i32 %1271 to i64
  %1273 = getelementptr inbounds i32, i32* %1240, i64 %1272
  %1274 = load i32, i32* %1273, align 4
  %1275 = icmp ult i32 %1269, 16777216
  br i1 %1275, label %1276, label %1283

1276:                                             ; preds = %1267
  %1277 = shl i32 %1269, 8
  %1278 = shl i32 %1270, 8
  %1279 = getelementptr inbounds i8, i8* %1252, i64 1
  %1280 = load i8, i8* %1252, align 1
  %1281 = zext i8 %1280 to i32
  %1282 = or i32 %1278, %1281
  br label %1283

1283:                                             ; preds = %1276, %1267
  %1284 = phi i8* [ %1279, %1276 ], [ %1252, %1267 ]
  %1285 = phi i32 [ %1277, %1276 ], [ %1269, %1267 ]
  %1286 = phi i32 [ %1282, %1276 ], [ %1270, %1267 ]
  %1287 = lshr i32 %1285, 11
  %1288 = mul i32 %1287, %1274
  %1289 = icmp ult i32 %1286, %1288
  br i1 %1289, label %1290, label %1295

1290:                                             ; preds = %1283
  %1291 = sub i32 2048, %1274
  %1292 = lshr i32 %1291, 5
  %1293 = add i32 %1292, %1274
  store i32 %1293, i32* %1273, align 4
  %1294 = shl nuw nsw i32 %1271, 1
  br label %1302

1295:                                             ; preds = %1283
  %1296 = sub i32 %1285, %1288
  %1297 = sub i32 %1286, %1288
  %1298 = lshr i32 %1274, 5
  %1299 = sub i32 %1274, %1298
  store i32 %1299, i32* %1273, align 4
  %1300 = shl nuw nsw i32 %1271, 1
  %1301 = or i32 %1300, 1
  br label %1302

1302:                                             ; preds = %1295, %1290
  %1303 = phi i32 [ %1288, %1290 ], [ %1296, %1295 ]
  %1304 = phi i32 [ %1286, %1290 ], [ %1297, %1295 ]
  %1305 = phi i32 [ %1294, %1290 ], [ %1301, %1295 ]
  %1306 = zext i32 %1305 to i64
  %1307 = getelementptr inbounds i32, i32* %1240, i64 %1306
  %1308 = load i32, i32* %1307, align 4
  %1309 = icmp ult i32 %1303, 16777216
  br i1 %1309, label %1310, label %1317

1310:                                             ; preds = %1302
  %1311 = shl i32 %1303, 8
  %1312 = shl i32 %1304, 8
  %1313 = getelementptr inbounds i8, i8* %1284, i64 1
  %1314 = load i8, i8* %1284, align 1
  %1315 = zext i8 %1314 to i32
  %1316 = or i32 %1312, %1315
  br label %1317

1317:                                             ; preds = %1310, %1302
  %1318 = phi i8* [ %1313, %1310 ], [ %1284, %1302 ]
  %1319 = phi i32 [ %1311, %1310 ], [ %1303, %1302 ]
  %1320 = phi i32 [ %1316, %1310 ], [ %1304, %1302 ]
  %1321 = lshr i32 %1319, 11
  %1322 = mul i32 %1321, %1308
  %1323 = icmp ult i32 %1320, %1322
  br i1 %1323, label %1324, label %1329

1324:                                             ; preds = %1317
  %1325 = sub i32 2048, %1308
  %1326 = lshr i32 %1325, 5
  %1327 = add i32 %1326, %1308
  store i32 %1327, i32* %1307, align 4
  %1328 = shl nsw i32 %1305, 1
  br label %1336

1329:                                             ; preds = %1317
  %1330 = sub i32 %1319, %1322
  %1331 = sub i32 %1320, %1322
  %1332 = lshr i32 %1308, 5
  %1333 = sub i32 %1308, %1332
  store i32 %1333, i32* %1307, align 4
  %1334 = shl nsw i32 %1305, 1
  %1335 = or i32 %1334, 1
  br label %1336

1336:                                             ; preds = %1329, %1324
  %1337 = phi i32 [ %1322, %1324 ], [ %1330, %1329 ]
  %1338 = phi i32 [ %1320, %1324 ], [ %1331, %1329 ]
  %1339 = phi i32 [ %1328, %1324 ], [ %1335, %1329 ]
  %1340 = zext i32 %1339 to i64
  %1341 = getelementptr inbounds i32, i32* %1240, i64 %1340
  %1342 = load i32, i32* %1341, align 4
  %1343 = icmp ult i32 %1337, 16777216
  br i1 %1343, label %1344, label %1351

1344:                                             ; preds = %1336
  %1345 = shl i32 %1337, 8
  %1346 = shl i32 %1338, 8
  %1347 = getelementptr inbounds i8, i8* %1318, i64 1
  %1348 = load i8, i8* %1318, align 1
  %1349 = zext i8 %1348 to i32
  %1350 = or i32 %1346, %1349
  br label %1351

1351:                                             ; preds = %1344, %1336
  %1352 = phi i8* [ %1347, %1344 ], [ %1318, %1336 ]
  %1353 = phi i32 [ %1345, %1344 ], [ %1337, %1336 ]
  %1354 = phi i32 [ %1350, %1344 ], [ %1338, %1336 ]
  %1355 = lshr i32 %1353, 11
  %1356 = mul i32 %1355, %1342
  %1357 = icmp ult i32 %1354, %1356
  br i1 %1357, label %1358, label %1363

1358:                                             ; preds = %1351
  %1359 = sub i32 2048, %1342
  %1360 = lshr i32 %1359, 5
  %1361 = add i32 %1360, %1342
  store i32 %1361, i32* %1341, align 4
  %1362 = shl i32 %1339, 1
  br label %1370

1363:                                             ; preds = %1351
  %1364 = sub i32 %1353, %1356
  %1365 = sub i32 %1354, %1356
  %1366 = lshr i32 %1342, 5
  %1367 = sub i32 %1342, %1366
  store i32 %1367, i32* %1341, align 4
  %1368 = shl i32 %1339, 1
  %1369 = or i32 %1368, 1
  br label %1370

1370:                                             ; preds = %1363, %1358
  %1371 = phi i32 [ %1356, %1358 ], [ %1364, %1363 ]
  %1372 = phi i32 [ %1354, %1358 ], [ %1365, %1363 ]
  %1373 = phi i32 [ %1362, %1358 ], [ %1369, %1363 ]
  %1374 = zext i32 %1373 to i64
  %1375 = getelementptr inbounds i32, i32* %1240, i64 %1374
  %1376 = load i32, i32* %1375, align 4
  %1377 = icmp ult i32 %1371, 16777216
  br i1 %1377, label %1378, label %1385

1378:                                             ; preds = %1370
  %1379 = shl i32 %1371, 8
  %1380 = shl i32 %1372, 8
  %1381 = getelementptr inbounds i8, i8* %1352, i64 1
  %1382 = load i8, i8* %1352, align 1
  %1383 = zext i8 %1382 to i32
  %1384 = or i32 %1380, %1383
  br label %1385

1385:                                             ; preds = %1378, %1370
  %1386 = phi i8* [ %1381, %1378 ], [ %1352, %1370 ]
  %1387 = phi i32 [ %1379, %1378 ], [ %1371, %1370 ]
  %1388 = phi i32 [ %1384, %1378 ], [ %1372, %1370 ]
  %1389 = lshr i32 %1387, 11
  %1390 = mul i32 %1389, %1376
  %1391 = icmp ult i32 %1388, %1390
  br i1 %1391, label %1392, label %1397

1392:                                             ; preds = %1385
  %1393 = sub i32 2048, %1376
  %1394 = lshr i32 %1393, 5
  %1395 = add i32 %1394, %1376
  store i32 %1395, i32* %1375, align 4
  %1396 = shl i32 %1373, 1
  br label %1404

1397:                                             ; preds = %1385
  %1398 = sub i32 %1387, %1390
  %1399 = sub i32 %1388, %1390
  %1400 = lshr i32 %1376, 5
  %1401 = sub i32 %1376, %1400
  store i32 %1401, i32* %1375, align 4
  %1402 = shl i32 %1373, 1
  %1403 = or i32 %1402, 1
  br label %1404

1404:                                             ; preds = %1397, %1392
  %1405 = phi i32 [ %1390, %1392 ], [ %1398, %1397 ]
  %1406 = phi i32 [ %1388, %1392 ], [ %1399, %1397 ]
  %1407 = phi i32 [ %1396, %1392 ], [ %1403, %1397 ]
  %1408 = zext i32 %1407 to i64
  %1409 = getelementptr inbounds i32, i32* %1240, i64 %1408
  %1410 = load i32, i32* %1409, align 4
  %1411 = icmp ult i32 %1405, 16777216
  br i1 %1411, label %1412, label %1419

1412:                                             ; preds = %1404
  %1413 = shl i32 %1405, 8
  %1414 = shl i32 %1406, 8
  %1415 = getelementptr inbounds i8, i8* %1386, i64 1
  %1416 = load i8, i8* %1386, align 1
  %1417 = zext i8 %1416 to i32
  %1418 = or i32 %1414, %1417
  br label %1419

1419:                                             ; preds = %1412, %1404
  %1420 = phi i8* [ %1415, %1412 ], [ %1386, %1404 ]
  %1421 = phi i32 [ %1413, %1412 ], [ %1405, %1404 ]
  %1422 = phi i32 [ %1418, %1412 ], [ %1406, %1404 ]
  %1423 = lshr i32 %1421, 11
  %1424 = mul i32 %1423, %1410
  %1425 = icmp ult i32 %1422, %1424
  br i1 %1425, label %1426, label %1431

1426:                                             ; preds = %1419
  %1427 = sub i32 2048, %1410
  %1428 = lshr i32 %1427, 5
  %1429 = add i32 %1428, %1410
  store i32 %1429, i32* %1409, align 4
  %1430 = shl i32 %1407, 1
  br label %1438

1431:                                             ; preds = %1419
  %1432 = sub i32 %1421, %1424
  %1433 = sub i32 %1422, %1424
  %1434 = lshr i32 %1410, 5
  %1435 = sub i32 %1410, %1434
  store i32 %1435, i32* %1409, align 4
  %1436 = shl i32 %1407, 1
  %1437 = or i32 %1436, 1
  br label %1438

1438:                                             ; preds = %1431, %1426
  %1439 = phi i32 [ %1424, %1426 ], [ %1432, %1431 ]
  %1440 = phi i32 [ %1422, %1426 ], [ %1433, %1431 ]
  %1441 = phi i32 [ %1430, %1426 ], [ %1437, %1431 ]
  %1442 = add i32 %1441, -64
  %1443 = icmp ugt i32 %1442, 3
  br i1 %1443, label %1444, label %1675

1444:                                             ; preds = %1438
  %1445 = lshr i32 %1442, 1
  %1446 = add nsw i32 %1445, -1
  %1447 = and i32 %1442, 1
  %1448 = or i32 %1447, 2
  %1449 = icmp ult i32 %1442, 14
  br i1 %1449, label %1450, label %1504

1450:                                             ; preds = %1444
  %1451 = shl i32 %1448, %1446
  %1452 = zext i32 %1451 to i64
  %1453 = zext i32 %1442 to i64
  %1454 = sub nsw i64 0, %1453
  %1455 = getelementptr inbounds i32, i32* %71, i64 %1452
  %1456 = getelementptr inbounds i32, i32* %1455, i64 %1454
  br label %1457

1457:                                             ; preds = %1496, %1450
  %1458 = phi i8* [ %1420, %1450 ], [ %1477, %1496 ]
  %1459 = phi i32 [ %1439, %1450 ], [ %1497, %1496 ]
  %1460 = phi i32 [ %1440, %1450 ], [ %1498, %1496 ]
  %1461 = phi i32 [ %1451, %1450 ], [ %1499, %1496 ]
  %1462 = phi i32 [ %1446, %1450 ], [ %1502, %1496 ]
  %1463 = phi i32 [ 1, %1450 ], [ %1501, %1496 ]
  %1464 = phi i32 [ 1, %1450 ], [ %1500, %1496 ]
  %1465 = zext i32 %1464 to i64
  %1466 = getelementptr inbounds i32, i32* %1456, i64 %1465
  %1467 = load i32, i32* %1466, align 4
  %1468 = icmp ult i32 %1459, 16777216
  br i1 %1468, label %1469, label %1476

1469:                                             ; preds = %1457
  %1470 = shl i32 %1459, 8
  %1471 = shl i32 %1460, 8
  %1472 = getelementptr inbounds i8, i8* %1458, i64 1
  %1473 = load i8, i8* %1458, align 1
  %1474 = zext i8 %1473 to i32
  %1475 = or i32 %1471, %1474
  br label %1476

1476:                                             ; preds = %1469, %1457
  %1477 = phi i8* [ %1472, %1469 ], [ %1458, %1457 ]
  %1478 = phi i32 [ %1470, %1469 ], [ %1459, %1457 ]
  %1479 = phi i32 [ %1475, %1469 ], [ %1460, %1457 ]
  %1480 = lshr i32 %1478, 11
  %1481 = mul i32 %1480, %1467
  %1482 = icmp ult i32 %1479, %1481
  br i1 %1482, label %1483, label %1488

1483:                                             ; preds = %1476
  %1484 = sub i32 2048, %1467
  %1485 = lshr i32 %1484, 5
  %1486 = add i32 %1485, %1467
  store i32 %1486, i32* %1466, align 4
  %1487 = shl i32 %1464, 1
  br label %1496

1488:                                             ; preds = %1476
  %1489 = sub i32 %1478, %1481
  %1490 = sub i32 %1479, %1481
  %1491 = lshr i32 %1467, 5
  %1492 = sub i32 %1467, %1491
  store i32 %1492, i32* %1466, align 4
  %1493 = shl i32 %1464, 1
  %1494 = or i32 %1493, 1
  %1495 = or i32 %1463, %1461
  br label %1496

1496:                                             ; preds = %1488, %1483
  %1497 = phi i32 [ %1481, %1483 ], [ %1489, %1488 ]
  %1498 = phi i32 [ %1479, %1483 ], [ %1490, %1488 ]
  %1499 = phi i32 [ %1461, %1483 ], [ %1495, %1488 ]
  %1500 = phi i32 [ %1487, %1483 ], [ %1494, %1488 ]
  %1501 = shl i32 %1463, 1
  %1502 = add i32 %1462, -1
  %1503 = icmp eq i32 %1502, 0
  br i1 %1503, label %1675, label %1457

1504:                                             ; preds = %1444
  %1505 = add nsw i32 %1445, -5
  br label %1506

1506:                                             ; preds = %1520, %1504
  %1507 = phi i8* [ %1420, %1504 ], [ %1521, %1520 ]
  %1508 = phi i32 [ %1439, %1504 ], [ %1524, %1520 ]
  %1509 = phi i32 [ %1440, %1504 ], [ %1531, %1520 ]
  %1510 = phi i32 [ %1448, %1504 ], [ %1529, %1520 ]
  %1511 = phi i32 [ %1505, %1504 ], [ %1532, %1520 ]
  %1512 = icmp ult i32 %1508, 16777216
  br i1 %1512, label %1513, label %1520

1513:                                             ; preds = %1506
  %1514 = shl i32 %1508, 8
  %1515 = shl i32 %1509, 8
  %1516 = getelementptr inbounds i8, i8* %1507, i64 1
  %1517 = load i8, i8* %1507, align 1
  %1518 = zext i8 %1517 to i32
  %1519 = or i32 %1515, %1518
  br label %1520

1520:                                             ; preds = %1513, %1506
  %1521 = phi i8* [ %1516, %1513 ], [ %1507, %1506 ]
  %1522 = phi i32 [ %1514, %1513 ], [ %1508, %1506 ]
  %1523 = phi i32 [ %1519, %1513 ], [ %1509, %1506 ]
  %1524 = lshr i32 %1522, 1
  %1525 = sub i32 %1523, %1524
  %1526 = ashr i32 %1525, 31
  %1527 = shl i32 %1510, 1
  %1528 = or i32 %1527, 1
  %1529 = add nsw i32 %1526, %1528
  %1530 = and i32 %1526, %1524
  %1531 = add i32 %1530, %1525
  %1532 = add i32 %1511, -1
  %1533 = icmp eq i32 %1532, 0
  br i1 %1533, label %1534, label %1506

1534:                                             ; preds = %1520
  %1535 = shl i32 %1529, 4
  %1536 = load i32, i32* %70, align 4
  %1537 = icmp ult i32 %1522, 33554432
  br i1 %1537, label %1538, label %1545

1538:                                             ; preds = %1534
  %1539 = shl i32 %1524, 8
  %1540 = shl i32 %1531, 8
  %1541 = getelementptr inbounds i8, i8* %1521, i64 1
  %1542 = load i8, i8* %1521, align 1
  %1543 = zext i8 %1542 to i32
  %1544 = or i32 %1540, %1543
  br label %1545

1545:                                             ; preds = %1538, %1534
  %1546 = phi i8* [ %1541, %1538 ], [ %1521, %1534 ]
  %1547 = phi i32 [ %1539, %1538 ], [ %1524, %1534 ]
  %1548 = phi i32 [ %1544, %1538 ], [ %1531, %1534 ]
  %1549 = lshr i32 %1547, 11
  %1550 = mul i32 %1549, %1536
  %1551 = icmp ult i32 %1548, %1550
  br i1 %1551, label %1552, label %1556

1552:                                             ; preds = %1545
  %1553 = sub i32 2048, %1536
  %1554 = lshr i32 %1553, 5
  %1555 = add i32 %1554, %1536
  store i32 %1555, i32* %70, align 4
  br label %1562

1556:                                             ; preds = %1545
  %1557 = sub i32 %1547, %1550
  %1558 = sub i32 %1548, %1550
  %1559 = lshr i32 %1536, 5
  %1560 = sub i32 %1536, %1559
  store i32 %1560, i32* %70, align 4
  %1561 = or i32 %1535, 1
  br label %1562

1562:                                             ; preds = %1556, %1552
  %1563 = phi i32 [ %1550, %1552 ], [ %1557, %1556 ]
  %1564 = phi i32 [ %1548, %1552 ], [ %1558, %1556 ]
  %1565 = phi i32 [ %1535, %1552 ], [ %1561, %1556 ]
  %1566 = phi i32 [ 2, %1552 ], [ 3, %1556 ]
  %1567 = zext i32 %1566 to i64
  %1568 = getelementptr inbounds i32, i32* %69, i64 %1567
  %1569 = load i32, i32* %1568, align 4
  %1570 = icmp ult i32 %1563, 16777216
  br i1 %1570, label %1571, label %1578

1571:                                             ; preds = %1562
  %1572 = shl i32 %1563, 8
  %1573 = shl i32 %1564, 8
  %1574 = getelementptr inbounds i8, i8* %1546, i64 1
  %1575 = load i8, i8* %1546, align 1
  %1576 = zext i8 %1575 to i32
  %1577 = or i32 %1573, %1576
  br label %1578

1578:                                             ; preds = %1571, %1562
  %1579 = phi i8* [ %1574, %1571 ], [ %1546, %1562 ]
  %1580 = phi i32 [ %1572, %1571 ], [ %1563, %1562 ]
  %1581 = phi i32 [ %1577, %1571 ], [ %1564, %1562 ]
  %1582 = lshr i32 %1580, 11
  %1583 = mul i32 %1582, %1569
  %1584 = icmp ult i32 %1581, %1583
  br i1 %1584, label %1585, label %1590

1585:                                             ; preds = %1578
  %1586 = sub i32 2048, %1569
  %1587 = lshr i32 %1586, 5
  %1588 = add i32 %1587, %1569
  store i32 %1588, i32* %1568, align 4
  %1589 = shl nuw nsw i32 %1566, 1
  br label %1598

1590:                                             ; preds = %1578
  %1591 = sub i32 %1580, %1583
  %1592 = sub i32 %1581, %1583
  %1593 = lshr i32 %1569, 5
  %1594 = sub i32 %1569, %1593
  store i32 %1594, i32* %1568, align 4
  %1595 = shl nuw nsw i32 %1566, 1
  %1596 = or i32 %1595, 1
  %1597 = or i32 %1565, 2
  br label %1598

1598:                                             ; preds = %1590, %1585
  %1599 = phi i32 [ %1583, %1585 ], [ %1591, %1590 ]
  %1600 = phi i32 [ %1581, %1585 ], [ %1592, %1590 ]
  %1601 = phi i32 [ %1565, %1585 ], [ %1597, %1590 ]
  %1602 = phi i32 [ %1589, %1585 ], [ %1596, %1590 ]
  %1603 = zext i32 %1602 to i64
  %1604 = getelementptr inbounds i32, i32* %69, i64 %1603
  %1605 = load i32, i32* %1604, align 4
  %1606 = icmp ult i32 %1599, 16777216
  br i1 %1606, label %1607, label %1614

1607:                                             ; preds = %1598
  %1608 = shl i32 %1599, 8
  %1609 = shl i32 %1600, 8
  %1610 = getelementptr inbounds i8, i8* %1579, i64 1
  %1611 = load i8, i8* %1579, align 1
  %1612 = zext i8 %1611 to i32
  %1613 = or i32 %1609, %1612
  br label %1614

1614:                                             ; preds = %1607, %1598
  %1615 = phi i8* [ %1610, %1607 ], [ %1579, %1598 ]
  %1616 = phi i32 [ %1608, %1607 ], [ %1599, %1598 ]
  %1617 = phi i32 [ %1613, %1607 ], [ %1600, %1598 ]
  %1618 = lshr i32 %1616, 11
  %1619 = mul i32 %1618, %1605
  %1620 = icmp ult i32 %1617, %1619
  br i1 %1620, label %1621, label %1626

1621:                                             ; preds = %1614
  %1622 = sub i32 2048, %1605
  %1623 = lshr i32 %1622, 5
  %1624 = add i32 %1623, %1605
  store i32 %1624, i32* %1604, align 4
  %1625 = shl nsw i32 %1602, 1
  br label %1634

1626:                                             ; preds = %1614
  %1627 = sub i32 %1616, %1619
  %1628 = sub i32 %1617, %1619
  %1629 = lshr i32 %1605, 5
  %1630 = sub i32 %1605, %1629
  store i32 %1630, i32* %1604, align 4
  %1631 = shl nsw i32 %1602, 1
  %1632 = or i32 %1631, 1
  %1633 = or i32 %1601, 4
  br label %1634

1634:                                             ; preds = %1626, %1621
  %1635 = phi i32 [ %1619, %1621 ], [ %1627, %1626 ]
  %1636 = phi i32 [ %1617, %1621 ], [ %1628, %1626 ]
  %1637 = phi i32 [ %1601, %1621 ], [ %1633, %1626 ]
  %1638 = phi i32 [ %1625, %1621 ], [ %1632, %1626 ]
  %1639 = zext i32 %1638 to i64
  %1640 = getelementptr inbounds i32, i32* %69, i64 %1639
  %1641 = load i32, i32* %1640, align 4
  %1642 = icmp ult i32 %1635, 16777216
  br i1 %1642, label %1643, label %1650

1643:                                             ; preds = %1634
  %1644 = shl i32 %1635, 8
  %1645 = shl i32 %1636, 8
  %1646 = getelementptr inbounds i8, i8* %1615, i64 1
  %1647 = load i8, i8* %1615, align 1
  %1648 = zext i8 %1647 to i32
  %1649 = or i32 %1645, %1648
  br label %1650

1650:                                             ; preds = %1643, %1634
  %1651 = phi i8* [ %1646, %1643 ], [ %1615, %1634 ]
  %1652 = phi i32 [ %1644, %1643 ], [ %1635, %1634 ]
  %1653 = phi i32 [ %1649, %1643 ], [ %1636, %1634 ]
  %1654 = lshr i32 %1652, 11
  %1655 = mul i32 %1654, %1641
  %1656 = icmp ult i32 %1653, %1655
  br i1 %1656, label %1657, label %1661

1657:                                             ; preds = %1650
  %1658 = sub i32 2048, %1641
  %1659 = lshr i32 %1658, 5
  %1660 = add i32 %1659, %1641
  store i32 %1660, i32* %1640, align 4
  br label %1667

1661:                                             ; preds = %1650
  %1662 = sub i32 %1652, %1655
  %1663 = sub i32 %1653, %1655
  %1664 = lshr i32 %1641, 5
  %1665 = sub i32 %1641, %1664
  store i32 %1665, i32* %1640, align 4
  %1666 = or i32 %1637, 8
  br label %1667

1667:                                             ; preds = %1661, %1657
  %1668 = phi i32 [ %1655, %1657 ], [ %1662, %1661 ]
  %1669 = phi i32 [ %1653, %1657 ], [ %1663, %1661 ]
  %1670 = phi i32 [ %1637, %1657 ], [ %1666, %1661 ]
  %1671 = icmp eq i32 %1670, -1
  br i1 %1671, label %1672, label %1675

1672:                                             ; preds = %1667
  %1673 = add i32 %1230, 274
  %1674 = add i32 %923, -12
  br label %1875

1675:                                             ; preds = %1496, %1667, %1438
  %1676 = phi i8* [ %1420, %1438 ], [ %1651, %1667 ], [ %1477, %1496 ]
  %1677 = phi i32 [ %1439, %1438 ], [ %1668, %1667 ], [ %1497, %1496 ]
  %1678 = phi i32 [ %1440, %1438 ], [ %1669, %1667 ], [ %1498, %1496 ]
  %1679 = phi i32 [ %1442, %1438 ], [ %1670, %1667 ], [ %1499, %1496 ]
  %1680 = add i32 %1679, 1
  br i1 %25, label %1681, label %1684

1681:                                             ; preds = %1675
  %1682 = icmp ult i32 %1679, %81
  br i1 %1682, label %1687, label %1683

1683:                                             ; preds = %1681
  store i64 %80, i64* %7, align 8
  br label %1984

1684:                                             ; preds = %1675
  %1685 = icmp ult i32 %1679, %24
  br i1 %1685, label %1687, label %1686

1686:                                             ; preds = %1684
  store i64 %80, i64* %7, align 8
  br label %1984

1687:                                             ; preds = %1684, %1681
  %1688 = icmp ult i32 %923, 19
  %1689 = select i1 %1688, i32 7, i32 10
  br label %1690

1690:                                             ; preds = %1687, %1229
  %1691 = phi i32 [ %1689, %1687 ], [ %923, %1229 ]
  %1692 = phi i32 [ %1680, %1687 ], [ %924, %1229 ]
  %1693 = phi i32 [ %924, %1687 ], [ %925, %1229 ]
  %1694 = phi i32 [ %925, %1687 ], [ %926, %1229 ]
  %1695 = phi i32 [ %926, %1687 ], [ %927, %1229 ]
  %1696 = phi i8* [ %1676, %1687 ], [ %1231, %1229 ]
  %1697 = phi i32 [ %1677, %1687 ], [ %1232, %1229 ]
  %1698 = phi i32 [ %1678, %1687 ], [ %1233, %1229 ]
  %1699 = add i32 %1230, 2
  %1700 = sub i64 %42, %80
  %1701 = icmp eq i64 %1700, 0
  br i1 %1701, label %1857, label %1702

1702:                                             ; preds = %1690
  %1703 = zext i32 %1699 to i64
  %1704 = icmp ult i64 %1700, %1703
  %1705 = trunc i64 %1700 to i32
  %1706 = select i1 %1704, i32 %1705, i32 %1699
  %1707 = zext i32 %1692 to i64
  %1708 = sub i64 %80, %1707
  %1709 = icmp ult i64 %80, %1707
  %1710 = select i1 %1709, i64 %57, i64 0
  %1711 = add i64 %1710, %1708
  %1712 = add i32 %1706, %81
  %1713 = sub i32 %1699, %1706
  %1714 = zext i32 %1706 to i64
  %1715 = sub i64 %57, %1711
  %1716 = icmp ult i64 %1715, %1714
  br i1 %1716, label %1717, label %1735

1717:                                             ; preds = %1702
  %1718 = and i32 %1706, 1
  %1719 = icmp eq i32 %1718, 0
  br i1 %1719, label %1729, label %1720

1720:                                             ; preds = %1717
  %1721 = getelementptr inbounds i8, i8* %56, i64 %1711
  %1722 = load i8, i8* %1721, align 1
  %1723 = add i64 %80, 1
  %1724 = getelementptr inbounds i8, i8* %56, i64 %80
  store i8 %1722, i8* %1724, align 1
  %1725 = add i64 %1711, 1
  %1726 = icmp eq i64 %1725, %57
  %1727 = select i1 %1726, i64 0, i64 %1725
  %1728 = add i32 %1706, -1
  br label %1729

1729:                                             ; preds = %1720, %1717
  %1730 = phi i64 [ %1723, %1720 ], [ undef, %1717 ]
  %1731 = phi i64 [ %1723, %1720 ], [ %80, %1717 ]
  %1732 = phi i32 [ %1728, %1720 ], [ %1706, %1717 ]
  %1733 = phi i64 [ %1727, %1720 ], [ %1711, %1717 ]
  %1734 = icmp eq i32 %1706, 1
  br i1 %1734, label %1860, label %1837

1735:                                             ; preds = %1702
  %1736 = getelementptr inbounds i8, i8* %56, i64 %80
  %1737 = sub nsw i64 %1711, %80
  %1738 = getelementptr inbounds i8, i8* %1736, i64 %1714
  %1739 = icmp ult i32 %1706, 32
  br i1 %1739, label %1829, label %1740

1740:                                             ; preds = %1735
  %1741 = getelementptr i8, i8* %56, i64 %1711
  %1742 = add i64 %1710, %80
  %1743 = add i64 %1742, %1714
  %1744 = sub i64 %1743, %1707
  %1745 = getelementptr i8, i8* %56, i64 %1744
  %1746 = icmp ult i8* %1736, %1745
  %1747 = icmp ult i8* %1741, %1738
  %1748 = and i1 %1746, %1747
  br i1 %1748, label %1829, label %1749

1749:                                             ; preds = %1740
  %1750 = and i64 %1714, 4294967264
  %1751 = getelementptr i8, i8* %1736, i64 %1750
  %1752 = add nsw i64 %1750, -32
  %1753 = lshr exact i64 %1752, 5
  %1754 = add nuw nsw i64 %1753, 1
  %1755 = and i64 %1754, 3
  %1756 = icmp ult i64 %1752, 96
  br i1 %1756, label %1808, label %1757

1757:                                             ; preds = %1749
  %1758 = sub nsw i64 %1754, %1755
  br label %1759

1759:                                             ; preds = %1759, %1757
  %1760 = phi i64 [ 0, %1757 ], [ %1805, %1759 ]
  %1761 = phi i64 [ %1758, %1757 ], [ %1806, %1759 ]
  %1762 = getelementptr i8, i8* %1736, i64 %1760
  %1763 = getelementptr inbounds i8, i8* %1762, i64 %1737
  %1764 = bitcast i8* %1763 to <16 x i8>*
  %1765 = load <16 x i8>, <16 x i8>* %1764, align 1, !alias.scope !8
  %1766 = getelementptr inbounds i8, i8* %1763, i64 16
  %1767 = bitcast i8* %1766 to <16 x i8>*
  %1768 = load <16 x i8>, <16 x i8>* %1767, align 1, !alias.scope !8
  %1769 = bitcast i8* %1762 to <16 x i8>*
  store <16 x i8> %1765, <16 x i8>* %1769, align 1, !alias.scope !11, !noalias !8
  %1770 = getelementptr i8, i8* %1762, i64 16
  %1771 = bitcast i8* %1770 to <16 x i8>*
  store <16 x i8> %1768, <16 x i8>* %1771, align 1, !alias.scope !11, !noalias !8
  %1772 = or i64 %1760, 32
  %1773 = getelementptr i8, i8* %1736, i64 %1772
  %1774 = getelementptr inbounds i8, i8* %1773, i64 %1737
  %1775 = bitcast i8* %1774 to <16 x i8>*
  %1776 = load <16 x i8>, <16 x i8>* %1775, align 1, !alias.scope !8
  %1777 = getelementptr inbounds i8, i8* %1774, i64 16
  %1778 = bitcast i8* %1777 to <16 x i8>*
  %1779 = load <16 x i8>, <16 x i8>* %1778, align 1, !alias.scope !8
  %1780 = bitcast i8* %1773 to <16 x i8>*
  store <16 x i8> %1776, <16 x i8>* %1780, align 1, !alias.scope !11, !noalias !8
  %1781 = getelementptr i8, i8* %1773, i64 16
  %1782 = bitcast i8* %1781 to <16 x i8>*
  store <16 x i8> %1779, <16 x i8>* %1782, align 1, !alias.scope !11, !noalias !8
  %1783 = or i64 %1760, 64
  %1784 = getelementptr i8, i8* %1736, i64 %1783
  %1785 = getelementptr inbounds i8, i8* %1784, i64 %1737
  %1786 = bitcast i8* %1785 to <16 x i8>*
  %1787 = load <16 x i8>, <16 x i8>* %1786, align 1, !alias.scope !8
  %1788 = getelementptr inbounds i8, i8* %1785, i64 16
  %1789 = bitcast i8* %1788 to <16 x i8>*
  %1790 = load <16 x i8>, <16 x i8>* %1789, align 1, !alias.scope !8
  %1791 = bitcast i8* %1784 to <16 x i8>*
  store <16 x i8> %1787, <16 x i8>* %1791, align 1, !alias.scope !11, !noalias !8
  %1792 = getelementptr i8, i8* %1784, i64 16
  %1793 = bitcast i8* %1792 to <16 x i8>*
  store <16 x i8> %1790, <16 x i8>* %1793, align 1, !alias.scope !11, !noalias !8
  %1794 = or i64 %1760, 96
  %1795 = getelementptr i8, i8* %1736, i64 %1794
  %1796 = getelementptr inbounds i8, i8* %1795, i64 %1737
  %1797 = bitcast i8* %1796 to <16 x i8>*
  %1798 = load <16 x i8>, <16 x i8>* %1797, align 1, !alias.scope !8
  %1799 = getelementptr inbounds i8, i8* %1796, i64 16
  %1800 = bitcast i8* %1799 to <16 x i8>*
  %1801 = load <16 x i8>, <16 x i8>* %1800, align 1, !alias.scope !8
  %1802 = bitcast i8* %1795 to <16 x i8>*
  store <16 x i8> %1798, <16 x i8>* %1802, align 1, !alias.scope !11, !noalias !8
  %1803 = getelementptr i8, i8* %1795, i64 16
  %1804 = bitcast i8* %1803 to <16 x i8>*
  store <16 x i8> %1801, <16 x i8>* %1804, align 1, !alias.scope !11, !noalias !8
  %1805 = add i64 %1760, 128
  %1806 = add i64 %1761, -4
  %1807 = icmp eq i64 %1806, 0
  br i1 %1807, label %1808, label %1759, !llvm.loop !13

1808:                                             ; preds = %1759, %1749
  %1809 = phi i64 [ 0, %1749 ], [ %1805, %1759 ]
  %1810 = icmp eq i64 %1755, 0
  br i1 %1810, label %1827, label %1811

1811:                                             ; preds = %1808, %1811
  %1812 = phi i64 [ %1824, %1811 ], [ %1809, %1808 ]
  %1813 = phi i64 [ %1825, %1811 ], [ %1755, %1808 ]
  %1814 = getelementptr i8, i8* %1736, i64 %1812
  %1815 = getelementptr inbounds i8, i8* %1814, i64 %1737
  %1816 = bitcast i8* %1815 to <16 x i8>*
  %1817 = load <16 x i8>, <16 x i8>* %1816, align 1, !alias.scope !8
  %1818 = getelementptr inbounds i8, i8* %1815, i64 16
  %1819 = bitcast i8* %1818 to <16 x i8>*
  %1820 = load <16 x i8>, <16 x i8>* %1819, align 1, !alias.scope !8
  %1821 = bitcast i8* %1814 to <16 x i8>*
  store <16 x i8> %1817, <16 x i8>* %1821, align 1, !alias.scope !11, !noalias !8
  %1822 = getelementptr i8, i8* %1814, i64 16
  %1823 = bitcast i8* %1822 to <16 x i8>*
  store <16 x i8> %1820, <16 x i8>* %1823, align 1, !alias.scope !11, !noalias !8
  %1824 = add i64 %1812, 32
  %1825 = add i64 %1813, -1
  %1826 = icmp eq i64 %1825, 0
  br i1 %1826, label %1827, label %1811, !llvm.loop !14

1827:                                             ; preds = %1811, %1808
  %1828 = icmp eq i64 %1750, %1714
  br i1 %1828, label %1858, label %1829

1829:                                             ; preds = %1827, %1740, %1735
  %1830 = phi i8* [ %1736, %1740 ], [ %1736, %1735 ], [ %1751, %1827 ]
  br label %1831

1831:                                             ; preds = %1829, %1831
  %1832 = phi i8* [ %1835, %1831 ], [ %1830, %1829 ]
  %1833 = getelementptr inbounds i8, i8* %1832, i64 %1737
  %1834 = load i8, i8* %1833, align 1
  store i8 %1834, i8* %1832, align 1
  %1835 = getelementptr inbounds i8, i8* %1832, i64 1
  %1836 = icmp eq i8* %1835, %1738
  br i1 %1836, label %1858, label %1831, !llvm.loop !15

1837:                                             ; preds = %1729, %1837
  %1838 = phi i64 [ %1850, %1837 ], [ %1731, %1729 ]
  %1839 = phi i32 [ %1855, %1837 ], [ %1732, %1729 ]
  %1840 = phi i64 [ %1854, %1837 ], [ %1733, %1729 ]
  %1841 = getelementptr inbounds i8, i8* %56, i64 %1840
  %1842 = load i8, i8* %1841, align 1
  %1843 = add i64 %1838, 1
  %1844 = getelementptr inbounds i8, i8* %56, i64 %1838
  store i8 %1842, i8* %1844, align 1
  %1845 = add i64 %1840, 1
  %1846 = icmp eq i64 %1845, %57
  %1847 = select i1 %1846, i64 0, i64 %1845
  %1848 = getelementptr inbounds i8, i8* %56, i64 %1847
  %1849 = load i8, i8* %1848, align 1
  %1850 = add i64 %1838, 2
  %1851 = getelementptr inbounds i8, i8* %56, i64 %1843
  store i8 %1849, i8* %1851, align 1
  %1852 = add i64 %1847, 1
  %1853 = icmp eq i64 %1852, %57
  %1854 = select i1 %1853, i64 0, i64 %1852
  %1855 = add i32 %1839, -2
  %1856 = icmp eq i32 %1855, 0
  br i1 %1856, label %1860, label %1837

1857:                                             ; preds = %1690
  store i64 %80, i64* %7, align 8
  br label %1984

1858:                                             ; preds = %1831, %1827
  %1859 = add i64 %80, %1714
  br label %1860

1860:                                             ; preds = %1729, %1837, %1858, %828, %744
  %1861 = phi i32 [ %824, %828 ], [ %748, %744 ], [ %1698, %1858 ], [ %1698, %1837 ], [ %1698, %1729 ]
  %1862 = phi i32 [ %826, %828 ], [ %747, %744 ], [ %1697, %1858 ], [ %1697, %1837 ], [ %1697, %1729 ]
  %1863 = phi i8* [ %822, %828 ], [ %746, %744 ], [ %1696, %1858 ], [ %1696, %1837 ], [ %1696, %1729 ]
  %1864 = phi i32 [ %82, %828 ], [ %82, %744 ], [ %1713, %1858 ], [ %1713, %1837 ], [ %1713, %1729 ]
  %1865 = phi i32 [ %841, %828 ], [ %130, %744 ], [ %1712, %1858 ], [ %1712, %1837 ], [ %1712, %1729 ]
  %1866 = phi i64 [ %840, %828 ], [ %751, %744 ], [ %1859, %1858 ], [ %1730, %1729 ], [ %1850, %1837 ]
  %1867 = phi i32 [ %79, %828 ], [ %79, %744 ], [ %1695, %1858 ], [ %1695, %1837 ], [ %1695, %1729 ]
  %1868 = phi i32 [ %78, %828 ], [ %78, %744 ], [ %1694, %1858 ], [ %1694, %1837 ], [ %1694, %1729 ]
  %1869 = phi i32 [ %77, %828 ], [ %77, %744 ], [ %1693, %1858 ], [ %1693, %1837 ], [ %1693, %1729 ]
  %1870 = phi i32 [ %76, %828 ], [ %76, %744 ], [ %1692, %1858 ], [ %1692, %1837 ], [ %1692, %1729 ]
  %1871 = phi i32 [ %843, %828 ], [ %745, %744 ], [ %1691, %1858 ], [ %1691, %1837 ], [ %1691, %1729 ]
  %1872 = icmp ult i64 %1866, %42
  %1873 = icmp ult i8* %1863, %2
  %1874 = and i1 %1873, %1872
  br i1 %1874, label %74, label %1875

1875:                                             ; preds = %1860, %1672
  %1876 = phi i32 [ %1669, %1672 ], [ %1861, %1860 ]
  %1877 = phi i32 [ %1668, %1672 ], [ %1862, %1860 ]
  %1878 = phi i8* [ %1651, %1672 ], [ %1863, %1860 ]
  %1879 = phi i32 [ %1673, %1672 ], [ %1864, %1860 ]
  %1880 = phi i32 [ %81, %1672 ], [ %1865, %1860 ]
  %1881 = phi i64 [ %80, %1672 ], [ %1866, %1860 ]
  %1882 = phi i32 [ %927, %1672 ], [ %1867, %1860 ]
  %1883 = phi i32 [ %926, %1672 ], [ %1868, %1860 ]
  %1884 = phi i32 [ %925, %1672 ], [ %1869, %1860 ]
  %1885 = phi i32 [ %924, %1672 ], [ %1870, %1860 ]
  %1886 = phi i32 [ %1674, %1672 ], [ %1871, %1860 ]
  %1887 = icmp ult i32 %1877, 16777216
  br i1 %1887, label %1888, label %1895

1888:                                             ; preds = %1875
  %1889 = shl i32 %1877, 8
  %1890 = shl i32 %1876, 8
  %1891 = getelementptr inbounds i8, i8* %1878, i64 1
  %1892 = load i8, i8* %1878, align 1
  %1893 = zext i8 %1892 to i32
  %1894 = or i32 %1890, %1893
  br label %1895

1895:                                             ; preds = %1888, %1875
  %1896 = phi i8* [ %1891, %1888 ], [ %1878, %1875 ]
  %1897 = phi i32 [ %1889, %1888 ], [ %1877, %1875 ]
  %1898 = phi i32 [ %1894, %1888 ], [ %1876, %1875 ]
  store i8* %1896, i8** %19, align 8
  store i32 %1897, i32* %20, align 8
  store i32 %1898, i32* %21, align 4
  store i32 %1879, i32* %22, align 4
  store i64 %1881, i64* %7, align 8
  store i32 %1880, i32* %6, align 8
  store i32 %1885, i32* %10, align 4
  store i32 %1884, i32* %11, align 4
  store i32 %1883, i32* %12, align 4
  store i32 %1882, i32* %13, align 4
  store i32 %1886, i32* %9, align 8
  %1899 = load i32, i32* %4, align 4
  %1900 = icmp eq i32 %1899, 0
  br i1 %1900, label %1901, label %1905

1901:                                             ; preds = %1895
  %1902 = load i32, i32* %5, align 4
  %1903 = icmp ult i32 %1880, %1902
  br i1 %1903, label %1905, label %1904

1904:                                             ; preds = %1901
  store i32 %1902, i32* %4, align 4
  br label %1905

1905:                                             ; preds = %1901, %1904, %1895
  %1906 = phi i32 [ 0, %1901 ], [ %1902, %1904 ], [ %1899, %1895 ]
  %1907 = add i32 %1879, -1
  %1908 = icmp ult i32 %1907, 273
  br i1 %1908, label %1909, label %1969

1909:                                             ; preds = %1905
  %1910 = load i8*, i8** %17, align 8
  %1911 = load i64, i64* %18, align 8
  %1912 = zext i32 %1885 to i64
  %1913 = sub i64 %1, %1881
  %1914 = zext i32 %1879 to i64
  %1915 = icmp ult i64 %1913, %1914
  %1916 = trunc i64 %1913 to i32
  %1917 = select i1 %1915, i32 %1916, i32 %1879
  %1918 = icmp eq i32 %1906, 0
  br i1 %1918, label %1919, label %1924

1919:                                             ; preds = %1909
  %1920 = load i32, i32* %5, align 4
  %1921 = sub i32 %1920, %1880
  %1922 = icmp ugt i32 %1921, %1917
  br i1 %1922, label %1924, label %1923

1923:                                             ; preds = %1919
  store i32 %1920, i32* %4, align 4
  br label %1924

1924:                                             ; preds = %1909, %1923, %1919
  %1925 = add i32 %1880, %1917
  store i32 %1925, i32* %6, align 8
  %1926 = sub i32 %1879, %1917
  store i32 %1926, i32* %22, align 4
  %1927 = icmp eq i32 %1917, 0
  br i1 %1927, label %1967, label %1928

1928:                                             ; preds = %1924
  %1929 = and i32 %1917, 1
  %1930 = icmp eq i32 %1929, 0
  br i1 %1930, label %1941, label %1931

1931:                                             ; preds = %1928
  %1932 = add i32 %1917, -1
  %1933 = sub i64 %1881, %1912
  %1934 = icmp ult i64 %1881, %1912
  %1935 = select i1 %1934, i64 %1911, i64 0
  %1936 = add i64 %1933, %1935
  %1937 = getelementptr inbounds i8, i8* %1910, i64 %1936
  %1938 = load i8, i8* %1937, align 1
  %1939 = getelementptr inbounds i8, i8* %1910, i64 %1881
  store i8 %1938, i8* %1939, align 1
  %1940 = add i64 %1881, 1
  br label %1941

1941:                                             ; preds = %1931, %1928
  %1942 = phi i64 [ %1940, %1931 ], [ undef, %1928 ]
  %1943 = phi i32 [ %1932, %1931 ], [ %1917, %1928 ]
  %1944 = phi i64 [ %1940, %1931 ], [ %1881, %1928 ]
  %1945 = icmp eq i32 %1917, 1
  br i1 %1945, label %1967, label %1946

1946:                                             ; preds = %1941, %1946
  %1947 = phi i32 [ %1957, %1946 ], [ %1943, %1941 ]
  %1948 = phi i64 [ %1965, %1946 ], [ %1944, %1941 ]
  %1949 = sub i64 %1948, %1912
  %1950 = icmp ult i64 %1948, %1912
  %1951 = select i1 %1950, i64 %1911, i64 0
  %1952 = add i64 %1949, %1951
  %1953 = getelementptr inbounds i8, i8* %1910, i64 %1952
  %1954 = load i8, i8* %1953, align 1
  %1955 = getelementptr inbounds i8, i8* %1910, i64 %1948
  store i8 %1954, i8* %1955, align 1
  %1956 = add i64 %1948, 1
  %1957 = add i32 %1947, -2
  %1958 = sub i64 %1956, %1912
  %1959 = icmp ult i64 %1956, %1912
  %1960 = select i1 %1959, i64 %1911, i64 0
  %1961 = add i64 %1958, %1960
  %1962 = getelementptr inbounds i8, i8* %1910, i64 %1961
  %1963 = load i8, i8* %1962, align 1
  %1964 = getelementptr inbounds i8, i8* %1910, i64 %1956
  store i8 %1963, i8* %1964, align 1
  %1965 = add i64 %1948, 2
  %1966 = icmp eq i32 %1957, 0
  br i1 %1966, label %1967, label %1946

1967:                                             ; preds = %1941, %1946, %1924
  %1968 = phi i64 [ %1881, %1924 ], [ %1942, %1941 ], [ %1965, %1946 ]
  store i64 %1968, i64* %7, align 8
  br label %1969

1969:                                             ; preds = %1905, %1967
  %1970 = phi i64 [ %1881, %1905 ], [ %1968, %1967 ]
  %1971 = icmp ult i64 %1970, %1
  br i1 %1971, label %1972, label %1978

1972:                                             ; preds = %1969
  %1973 = load i8*, i8** %19, align 8
  %1974 = icmp ult i8* %1973, %2
  br i1 %1974, label %1975, label %1978

1975:                                             ; preds = %1972
  %1976 = load i32, i32* %22, align 4
  %1977 = icmp ult i32 %1976, 274
  br i1 %1977, label %23, label %1980

1978:                                             ; preds = %1972, %1969
  %1979 = load i32, i32* %22, align 4
  br label %1980

1980:                                             ; preds = %1975, %1978
  %1981 = phi i32 [ %1979, %1978 ], [ %1976, %1975 ]
  %1982 = icmp ugt i32 %1981, 274
  br i1 %1982, label %1983, label %1984

1983:                                             ; preds = %1980
  store i32 274, i32* %22, align 4
  br label %1984

1984:                                             ; preds = %781, %1683, %1686, %1857, %1980, %1983
  %1985 = phi i32 [ 0, %1983 ], [ 0, %1980 ], [ 1, %1857 ], [ 1, %1686 ], [ 1, %1683 ], [ 1, %781 ]
  ret i32 %1985
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @LzmaDec_DecodeToBuf(%struct.CLzmaDec*, i8* nocapture, i64* nocapture, i8*, i64* nocapture, i32, i32* nocapture) local_unnamed_addr #1 {
  %8 = alloca i64, align 8
  %9 = load i64, i64* %2, align 8
  %10 = load i64, i64* %4, align 8
  store i64 0, i64* %2, align 8
  store i64 0, i64* %4, align 8
  %11 = bitcast i64* %8 to i8*
  %12 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 6
  %13 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 7
  %14 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 2
  br label %15

15:                                               ; preds = %44, %7
  %16 = phi i8* [ %3, %7 ], [ %47, %44 ]
  %17 = phi i8* [ %1, %7 ], [ %45, %44 ]
  %18 = phi i64 [ %9, %7 ], [ %39, %44 ]
  %19 = phi i64 [ %10, %7 ], [ %46, %44 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #5
  store i64 %19, i64* %8, align 8
  %20 = load i64, i64* %12, align 8
  %21 = load i64, i64* %13, align 8
  %22 = icmp eq i64 %20, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %15
  store i64 0, i64* %12, align 8
  br label %24

24:                                               ; preds = %23, %15
  %25 = phi i64 [ 0, %23 ], [ %20, %15 ]
  %26 = sub i64 %21, %25
  %27 = icmp ugt i64 %18, %26
  %28 = add i64 %25, %18
  %29 = select i1 %27, i64 %21, i64 %28
  %30 = select i1 %27, i32 0, i32 %5
  %31 = call i32 @LzmaDec_DecodeToDic(%struct.CLzmaDec* %0, i64 %29, i8* %16, i64* nonnull %8, i32 %30, i32* %6)
  %32 = load i64, i64* %8, align 8
  %33 = load i64, i64* %4, align 8
  %34 = add i64 %33, %32
  store i64 %34, i64* %4, align 8
  %35 = load i64, i64* %12, align 8
  %36 = sub i64 %35, %25
  %37 = load i8*, i8** %14, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %38, i64 %36, i1 false)
  %39 = sub i64 %18, %36
  %40 = load i64, i64* %2, align 8
  %41 = add i64 %40, %36
  store i64 %41, i64* %2, align 8
  %42 = icmp eq i32 %31, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #5
  br label %51

44:                                               ; preds = %24
  %45 = getelementptr inbounds i8, i8* %17, i64 %36
  %46 = sub i64 %19, %32
  %47 = getelementptr inbounds i8, i8* %16, i64 %32
  %48 = icmp eq i64 %36, 0
  %49 = icmp eq i64 %39, 0
  %50 = or i1 %48, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #5
  br i1 %50, label %51, label %15

51:                                               ; preds = %44, %43
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @LzmaDec_FreeProbs(%struct.CLzmaDec* nocapture, %struct.ISzAlloc*) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.ISzAlloc, %struct.ISzAlloc* %1, i64 0, i32 1
  %4 = load void (i8*, i8*)*, void (i8*, i8*)** %3, align 8
  %5 = bitcast %struct.ISzAlloc* %1 to i8*
  %6 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 1
  %7 = bitcast i32** %6 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void %4(i8* %5, i8* %8) #5
  store i32* null, i32** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @LzmaDec_Free(%struct.CLzmaDec* nocapture, %struct.ISzAlloc*) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.ISzAlloc, %struct.ISzAlloc* %1, i64 0, i32 1
  %4 = load void (i8*, i8*)*, void (i8*, i8*)** %3, align 8
  %5 = bitcast %struct.ISzAlloc* %1 to i8*
  %6 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 1
  %7 = bitcast i32** %6 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void %4(i8* %5, i8* %8) #5
  store i32* null, i32** %6, align 8
  %9 = load void (i8*, i8*)*, void (i8*, i8*)** %3, align 8
  %10 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 2
  %11 = load i8*, i8** %10, align 8
  tail call void %9(i8* %5, i8* %11) #5
  store i8* null, i8** %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @LzmaProps_Decode(%struct._CLzmaProps* nocapture, i8* nocapture readonly, i32) local_unnamed_addr #4 {
  %4 = icmp ult i32 %2, 5
  br i1 %4, label %40, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds i8, i8* %1, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = getelementptr inbounds i8, i8* %1, i64 2
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl nuw nsw i32 %11, 8
  %13 = or i32 %12, %8
  %14 = getelementptr inbounds i8, i8* %1, i64 3
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 16
  %18 = or i32 %13, %17
  %19 = getelementptr inbounds i8, i8* %1, i64 4
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw i32 %21, 24
  %23 = or i32 %18, %22
  %24 = icmp ugt i32 %23, 4096
  %25 = select i1 %24, i32 %23, i32 4096
  %26 = getelementptr inbounds %struct._CLzmaProps, %struct._CLzmaProps* %0, i64 0, i32 3
  store i32 %25, i32* %26, align 4
  %27 = load i8, i8* %1, align 1
  %28 = icmp ugt i8 %27, -32
  br i1 %28, label %40, label %29

29:                                               ; preds = %5
  %30 = urem i8 %27, 9
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds %struct._CLzmaProps, %struct._CLzmaProps* %0, i64 0, i32 0
  store i32 %31, i32* %32, align 4
  %33 = udiv i8 %27, 9
  %34 = udiv i8 %27, 45
  %35 = zext i8 %34 to i32
  %36 = getelementptr inbounds %struct._CLzmaProps, %struct._CLzmaProps* %0, i64 0, i32 2
  store i32 %35, i32* %36, align 4
  %37 = urem i8 %33, 5
  %38 = zext i8 %37 to i32
  %39 = getelementptr inbounds %struct._CLzmaProps, %struct._CLzmaProps* %0, i64 0, i32 1
  store i32 %38, i32* %39, align 4
  br label %40

40:                                               ; preds = %5, %3, %29
  %41 = phi i32 [ 0, %29 ], [ 4, %3 ], [ 4, %5 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @LzmaDec_AllocateProbs(%struct.CLzmaDec* nocapture, i8* nocapture readonly, i32, %struct.ISzAlloc*) local_unnamed_addr #1 {
  %5 = icmp ult i32 %2, 5
  br i1 %5, label %65, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %1, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = getelementptr inbounds i8, i8* %1, i64 2
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = shl nuw nsw i32 %12, 8
  %14 = or i32 %13, %9
  %15 = getelementptr inbounds i8, i8* %1, i64 3
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 16
  %19 = or i32 %14, %18
  %20 = getelementptr inbounds i8, i8* %1, i64 4
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = shl nuw i32 %22, 24
  %24 = or i32 %19, %23
  %25 = icmp ugt i32 %24, 4096
  %26 = select i1 %25, i32 %24, i32 4096
  %27 = load i8, i8* %1, align 1
  %28 = icmp ugt i8 %27, -32
  br i1 %28, label %65, label %29

29:                                               ; preds = %6
  %30 = urem i8 %27, 9
  %31 = zext i8 %30 to i32
  %32 = udiv i8 %27, 9
  %33 = udiv i8 %27, 45
  %34 = zext i8 %33 to i32
  %35 = urem i8 %32, 5
  %36 = zext i8 %35 to i32
  %37 = add nuw nsw i32 %36, %31
  %38 = shl i32 768, %37
  %39 = add nuw nsw i32 %38, 1846
  %40 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 1
  %41 = load i32*, i32** %40, align 8
  %42 = icmp eq i32* %41, null
  %43 = bitcast i32* %41 to i8*
  br i1 %42, label %48, label %44

44:                                               ; preds = %29
  %45 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 15
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %39, %46
  br i1 %47, label %60, label %48

48:                                               ; preds = %44, %29
  %49 = getelementptr inbounds %struct.ISzAlloc, %struct.ISzAlloc* %3, i64 0, i32 1
  %50 = load void (i8*, i8*)*, void (i8*, i8*)** %49, align 8
  %51 = bitcast %struct.ISzAlloc* %3 to i8*
  %52 = bitcast i32** %40 to i8**
  tail call void %50(i8* %51, i8* %43) #5
  store i32* null, i32** %40, align 8
  %53 = getelementptr inbounds %struct.ISzAlloc, %struct.ISzAlloc* %3, i64 0, i32 0
  %54 = load i8* (i8*, i64)*, i8* (i8*, i64)** %53, align 8
  %55 = zext i32 %39 to i64
  %56 = shl nuw nsw i64 %55, 2
  %57 = tail call i8* %54(i8* %51, i64 %56) #5
  store i8* %57, i8** %52, align 8
  %58 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 15
  store i32 %39, i32* %58, align 8
  %59 = icmp eq i8* %57, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %44, %48
  %61 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 0
  store i32 %31, i32* %61, align 8
  %62 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 1
  store i32 %36, i32* %62, align 4
  %63 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 2
  store i32 %34, i32* %63, align 8
  %64 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 3
  store i32 %26, i32* %64, align 4
  br label %65

65:                                               ; preds = %48, %6, %4, %60
  %66 = phi i32 [ 0, %60 ], [ 4, %4 ], [ 4, %6 ], [ 2, %48 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @LzmaDec_Allocate(%struct.CLzmaDec* nocapture, i8* nocapture readonly, i32, %struct.ISzAlloc*) local_unnamed_addr #1 {
  %5 = icmp ult i32 %2, 5
  br i1 %5, label %96, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %1, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = getelementptr inbounds i8, i8* %1, i64 2
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = shl nuw nsw i32 %12, 8
  %14 = or i32 %13, %9
  %15 = getelementptr inbounds i8, i8* %1, i64 3
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 16
  %19 = or i32 %14, %18
  %20 = getelementptr inbounds i8, i8* %1, i64 4
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = shl nuw i32 %22, 24
  %24 = or i32 %19, %23
  %25 = icmp ugt i32 %24, 4096
  %26 = select i1 %25, i32 %24, i32 4096
  %27 = load i8, i8* %1, align 1
  %28 = icmp ugt i8 %27, -32
  br i1 %28, label %96, label %29

29:                                               ; preds = %6
  %30 = urem i8 %27, 9
  %31 = zext i8 %30 to i32
  %32 = udiv i8 %27, 9
  %33 = udiv i8 %27, 45
  %34 = zext i8 %33 to i32
  %35 = urem i8 %32, 5
  %36 = zext i8 %35 to i32
  %37 = add nuw nsw i32 %36, %31
  %38 = shl i32 768, %37
  %39 = add nuw nsw i32 %38, 1846
  %40 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 1
  %41 = load i32*, i32** %40, align 8
  %42 = icmp eq i32* %41, null
  %43 = bitcast i32* %41 to i8*
  br i1 %42, label %48, label %44

44:                                               ; preds = %29
  %45 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 15
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %39, %46
  br i1 %47, label %60, label %48

48:                                               ; preds = %44, %29
  %49 = getelementptr inbounds %struct.ISzAlloc, %struct.ISzAlloc* %3, i64 0, i32 1
  %50 = load void (i8*, i8*)*, void (i8*, i8*)** %49, align 8
  %51 = bitcast %struct.ISzAlloc* %3 to i8*
  %52 = bitcast i32** %40 to i8**
  tail call void %50(i8* %51, i8* %43) #5
  store i32* null, i32** %40, align 8
  %53 = getelementptr inbounds %struct.ISzAlloc, %struct.ISzAlloc* %3, i64 0, i32 0
  %54 = load i8* (i8*, i64)*, i8* (i8*, i64)** %53, align 8
  %55 = zext i32 %39 to i64
  %56 = shl nuw nsw i64 %55, 2
  %57 = tail call i8* %54(i8* %51, i64 %56) #5
  store i8* %57, i8** %52, align 8
  %58 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 15
  store i32 %39, i32* %58, align 8
  %59 = icmp eq i8* %57, null
  br i1 %59, label %96, label %60

60:                                               ; preds = %44, %48
  %61 = icmp ugt i32 %26, 1073741823
  %62 = icmp ugt i32 %26, 4194303
  %63 = select i1 %62, i64 1048575, i64 4095
  %64 = select i1 %61, i64 4194303, i64 %63
  %65 = zext i32 %26 to i64
  %66 = add nuw nsw i64 %64, %65
  %67 = xor i64 %64, -1
  %68 = and i64 %66, %67
  %69 = icmp ult i64 %68, %65
  %70 = select i1 %69, i64 %65, i64 %68
  %71 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 2
  %72 = load i8*, i8** %71, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %60
  %75 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 7
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %70, %76
  br i1 %77, label %90, label %78

78:                                               ; preds = %74, %60
  %79 = getelementptr inbounds %struct.ISzAlloc, %struct.ISzAlloc* %3, i64 0, i32 1
  %80 = load void (i8*, i8*)*, void (i8*, i8*)** %79, align 8
  %81 = bitcast %struct.ISzAlloc* %3 to i8*
  tail call void %80(i8* %81, i8* %72) #5
  store i8* null, i8** %71, align 8
  %82 = getelementptr inbounds %struct.ISzAlloc, %struct.ISzAlloc* %3, i64 0, i32 0
  %83 = load i8* (i8*, i64)*, i8* (i8*, i64)** %82, align 8
  %84 = tail call i8* %83(i8* %81, i64 %70) #5
  store i8* %84, i8** %71, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %86, label %90

86:                                               ; preds = %78
  %87 = load void (i8*, i8*)*, void (i8*, i8*)** %79, align 8
  %88 = bitcast i32** %40 to i8**
  %89 = load i8*, i8** %88, align 8
  tail call void %87(i8* %81, i8* %89) #5
  store i32* null, i32** %40, align 8
  br label %96

90:                                               ; preds = %74, %78
  %91 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 7
  store i64 %70, i64* %91, align 8
  %92 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 0
  store i32 %31, i32* %92, align 8
  %93 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 1
  store i32 %36, i32* %93, align 4
  %94 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 2
  store i32 %34, i32* %94, align 8
  %95 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i64 0, i32 0, i32 3
  store i32 %26, i32* %95, align 4
  br label %96

96:                                               ; preds = %48, %6, %4, %90, %86
  %97 = phi i32 [ 0, %90 ], [ 2, %86 ], [ 4, %4 ], [ 4, %6 ], [ 2, %48 ]
  ret i32 %97
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @LzmaDecode(i8*, i64* nocapture, i8*, i64* nocapture, i8* nocapture readonly, i32, i32, i32* nocapture, %struct.ISzAlloc*) local_unnamed_addr #1 {
  %10 = alloca %struct.CLzmaDec, align 8
  %11 = bitcast %struct.CLzmaDec* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 136, i1 false)
  %12 = load i64, i64* %1, align 8
  %13 = load i64, i64* %3, align 8
  store i64 0, i64* %3, align 8
  store i64 0, i64* %1, align 8
  store i32 0, i32* %7, align 4
  %14 = icmp ult i64 %13, 5
  br i1 %14, label %89, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i64 0, i32 2
  %17 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i64 0, i32 1
  %18 = icmp ult i32 %5, 5
  %19 = bitcast i32** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false)
  br i1 %18, label %89, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds i8, i8* %4, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds i8, i8* %4, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw nsw i32 %26, 8
  %28 = or i32 %27, %23
  %29 = getelementptr inbounds i8, i8* %4, i64 3
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl nuw nsw i32 %31, 16
  %33 = or i32 %28, %32
  %34 = getelementptr inbounds i8, i8* %4, i64 4
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl nuw i32 %36, 24
  %38 = or i32 %33, %37
  %39 = icmp ugt i32 %38, 4096
  %40 = select i1 %39, i32 %38, i32 4096
  %41 = load i8, i8* %4, align 1
  %42 = icmp ugt i8 %41, -32
  br i1 %42, label %89, label %43

43:                                               ; preds = %20
  %44 = urem i8 %41, 9
  %45 = zext i8 %44 to i32
  %46 = udiv i8 %41, 9
  %47 = urem i8 %46, 5
  %48 = zext i8 %47 to i32
  %49 = add nuw nsw i32 %48, %45
  %50 = shl i32 768, %49
  %51 = add nuw nsw i32 %50, 1846
  %52 = getelementptr inbounds %struct.ISzAlloc, %struct.ISzAlloc* %8, i64 0, i32 1
  %53 = load void (i8*, i8*)*, void (i8*, i8*)** %52, align 8
  %54 = bitcast %struct.ISzAlloc* %8 to i8*
  %55 = bitcast i32** %17 to i8**
  tail call void %53(i8* %54, i8* null) #5
  %56 = getelementptr inbounds %struct.ISzAlloc, %struct.ISzAlloc* %8, i64 0, i32 0
  %57 = load i8* (i8*, i64)*, i8* (i8*, i64)** %56, align 8
  %58 = zext i32 %51 to i64
  %59 = shl nuw nsw i64 %58, 2
  %60 = tail call i8* %57(i8* %54, i64 %59) #5
  store i8* %60, i8** %55, align 8
  %61 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i64 0, i32 15
  store i32 %51, i32* %61, align 8
  %62 = icmp eq i8* %60, null
  br i1 %62, label %89, label %63

63:                                               ; preds = %43
  %64 = udiv i8 %41, 45
  %65 = zext i8 %64 to i32
  %66 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i64 0, i32 0, i32 0
  store i32 %45, i32* %66, align 8
  %67 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i64 0, i32 0, i32 1
  store i32 %48, i32* %67, align 4
  %68 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i64 0, i32 0, i32 2
  store i32 %65, i32* %68, align 8
  %69 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i64 0, i32 0, i32 3
  store i32 %40, i32* %69, align 4
  store i8* %0, i8** %16, align 8
  %70 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i64 0, i32 7
  store i64 %12, i64* %70, align 8
  %71 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i64 0, i32 6
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i64 0, i32 13
  store i32 1, i32* %72, align 8
  %73 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i64 0, i32 12
  store i32 0, i32* %73, align 4
  %74 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i64 0, i32 16
  store i32 0, i32* %74, align 4
  %75 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i64 0, i32 8
  store i32 0, i32* %75, align 8
  %76 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i64 0, i32 9
  store i32 0, i32* %76, align 4
  %77 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i64 0, i32 14
  store i32 1, i32* %77, align 4
  store i64 %13, i64* %3, align 8
  %78 = call i32 @LzmaDec_DecodeToDic(%struct.CLzmaDec* nonnull %10, i64 %12, i8* %2, i64* %3, i32 %6, i32* %7)
  %79 = load i64, i64* %71, align 8
  store i64 %79, i64* %1, align 8
  %80 = icmp eq i32 %78, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %63
  %82 = load i32, i32* %7, align 4
  %83 = icmp eq i32 %82, 3
  %84 = select i1 %83, i32 6, i32 0
  br label %85

85:                                               ; preds = %81, %63
  %86 = phi i32 [ %78, %63 ], [ %84, %81 ]
  %87 = load void (i8*, i8*)*, void (i8*, i8*)** %52, align 8
  %88 = load i8*, i8** %55, align 8
  call void %87(i8* %54, i8* %88) #5
  store i32* null, i32** %17, align 8
  br label %89

89:                                               ; preds = %43, %20, %15, %9, %85
  %90 = phi i32 [ %86, %85 ], [ 6, %9 ], [ 2, %43 ], [ 4, %20 ], [ 4, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %11) #5
  ret i32 %90
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !7, !3}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !3}
!14 = distinct !{!14, !5}
!15 = distinct !{!15, !3}
