; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_html_iframe_element.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_html_iframe_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::MemorySpan" = type { %"class.v8::CFunction"*, i64 }
%"class.v8::CFunction" = type { i8*, %"class.v8::CFunctionInfo"* }
%"class.v8::CFunctionInfo" = type { %"class.v8::CTypeInfo", i32, %"class.v8::CTypeInfo"* }
%"class.v8::CTypeInfo" = type { i8, i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.blink::QualifiedName" = type { %class.scoped_refptr.561 }
%class.scoped_refptr.561 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.562", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.562" = type { %"class.base::RefCounted.563" }
%"class.base::RefCounted.563" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.212 }
%class.scoped_refptr.212 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.213" }
%"struct.std::__1::atomic.213" = type { %"struct.std::__1::__atomic_base.214" }
%"struct.std::__1::__atomic_base.214" = type { %"struct.std::__1::__atomic_base.215" }
%"struct.std::__1::__atomic_base.215" = type { %"struct.std::__1::__cxx_atomic_impl.216" }
%"struct.std::__1::__cxx_atomic_impl.216" = type { %"struct.std::__1::__cxx_atomic_base_impl.217" }
%"struct.std::__1::__cxx_atomic_base_impl.217" = type { i32 }
%"class.blink::CEReactionsScope" = type <{ %"class.blink::CEReactionsScope"*, i8, [7 x i8] }>
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.base::span.182" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.185, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.185 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.186" }
%"class.blink::MemberBase.186" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.187" }
%"class.blink::Persistent.187" = type { %"class.blink::PersistentBase.188" }
%"class.blink::PersistentBase.188" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.261", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.270", %"class.blink::Member.272", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.281", %"class.blink::Member.422", %"class.blink::Member.424", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.189" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.189" = type { %"class.WTF::HashMap.192" }
%"class.WTF::HashMap.192" = type { %"class.WTF::HashTable.193" }
%"class.WTF::HashTable.193" = type <{ %"struct.WTF::KeyValuePair.195"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.195" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.201" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.198" }
%"class.WTF::HashTable.198" = type <{ %"class.blink::WeakMember.200"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.200" = type opaque
%"class.blink::Supplementable.201" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.202" }
%"class.blink::HeapHashMap.202" = type { %"class.WTF::HashMap.205" }
%"class.WTF::HashMap.205" = type { %"class.WTF::HashTable.206" }
%"class.WTF::HashTable.206" = type <{ %"struct.WTF::KeyValuePair.208"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.208" = type { i8*, %"class.blink::Member.427" }
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.429" }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.209, %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249", %"class.blink::Member.255", i32, [4 x i8], %"class.WTF::HashSet.257", i32, i32 }
%class.scoped_refptr.209 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.210", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.218 }
%"class.WTF::RefCounted.210" = type { %"class.base::RefCounted.211" }
%"class.base::RefCounted.211" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.218 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.236", %"class.std::__1::map.245"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.224 }
%union.anon.224 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.228", %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.236" = type { %"class.std::__1::__tree.237" }
%"class.std::__1::__tree.237" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.245" = type opaque
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.257" = type { %"class.WTF::HashTable.258" }
%"class.WTF::HashTable.258" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.265" }
%"class.WTF::Vector.265" = type { %"class.WTF::VectorBuffer.266" }
%"class.WTF::VectorBuffer.266" = type { %"class.WTF::VectorBufferBase.267" }
%"class.WTF::VectorBufferBase.267" = type { %"class.blink::Member.268"*, i32, i32 }
%"class.blink::Member.268" = type opaque
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.274", i32, i32 }
%"class.blink::HeapHashMap.274" = type { %"class.WTF::HashMap.277" }
%"class.WTF::HashMap.277" = type { %"class.WTF::HashTable.278" }
%"class.WTF::HashTable.278" = type <{ %"struct.WTF::KeyValuePair.280"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.280" = type opaque
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.284" }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.287" }
%"class.WTF::Vector.287" = type { %"class.WTF::VectorBuffer.288" }
%"class.WTF::VectorBuffer.288" = type { %"class.WTF::VectorBufferBase.289" }
%"class.WTF::VectorBufferBase.289" = type { %"class.mojo::StructPtr.290"*, i32, i32 }
%"class.mojo::StructPtr.290" = type { %"class.std::__1::unique_ptr.291" }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.294", %"class.WTF::HashMap.301", %"class.WTF::HashMap.306", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.311", i32, %"class.mojo::StructPtr.316", %"class.WTF::Vector.311" }
%"class.mojo::StructPtr.294" = type { %"class.std::__1::unique_ptr.295" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.301" = type { %"class.WTF::HashTable.302" }
%"class.WTF::HashTable.302" = type <{ %"struct.WTF::KeyValuePair.305"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.305" = type opaque
%"class.WTF::HashMap.306" = type { %"class.WTF::HashTable.307" }
%"class.WTF::HashTable.307" = type <{ %"struct.WTF::KeyValuePair.310"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.310" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.316" = type { %"class.std::__1::unique_ptr.317" }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.311", i8, i8, [6 x i8] }>
%"class.WTF::Vector.311" = type { %"class.WTF::VectorBuffer.312" }
%"class.WTF::VectorBuffer.312" = type { %"class.WTF::VectorBufferBase.313" }
%"class.WTF::VectorBufferBase.313" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.413" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.331", i32 }>
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.340", %"class.absl::optional.345", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.366", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.388", %"class.std::__1::map.399", i64, %"class.base::OnceCallback.359", %"class.base::OnceCallback.408", i8, %class.scoped_refptr.350, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.409" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.334 }
%class.scoped_refptr.334 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.335" }
%"struct.std::__1::atomic.335" = type { %"struct.std::__1::__atomic_base.336" }
%"struct.std::__1::__atomic_base.336" = type { %"struct.std::__1::__atomic_base.337" }
%"struct.std::__1::__atomic_base.337" = type { %"struct.std::__1::__cxx_atomic_impl.338" }
%"struct.std::__1::__cxx_atomic_impl.338" = type { %"struct.std::__1::__cxx_atomic_base_impl.339" }
%"struct.std::__1::__cxx_atomic_base_impl.339" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.340" = type { %"class.absl::optional_internal::optional_data.341" }
%"class.absl::optional_internal::optional_data.341" = type { %"class.absl::optional_internal::optional_data_base.342" }
%"class.absl::optional_internal::optional_data_base.342" = type { %"class.absl::optional_internal::optional_data_dtor_base.343" }
%"class.absl::optional_internal::optional_data_dtor_base.343" = type { i8, %union.anon.344 }
%union.anon.344 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.345" = type { %"class.absl::optional_internal::optional_data.346" }
%"class.absl::optional_internal::optional_data.346" = type { %"class.absl::optional_internal::optional_data_base.347" }
%"class.absl::optional_internal::optional_data_base.347" = type { %"class.absl::optional_internal::optional_data_dtor_base.348" }
%"class.absl::optional_internal::optional_data_dtor_base.348" = type { i8, %union.anon.349 }
%union.anon.349 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.359" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.350, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.352 }
%class.scoped_refptr.352 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.353", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.353" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.354" }
%"struct.std::__1::atomic.354" = type { %"struct.std::__1::__atomic_base.355" }
%"struct.std::__1::__atomic_base.355" = type { %"struct.std::__1::__atomic_base.356" }
%"struct.std::__1::__atomic_base.356" = type { %"struct.std::__1::__cxx_atomic_impl.357" }
%"struct.std::__1::__cxx_atomic_impl.357" = type { %"struct.std::__1::__cxx_atomic_base_impl.358" }
%"struct.std::__1::__cxx_atomic_base_impl.358" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.364 }
%class.scoped_refptr.364 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.426", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.350, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.213", [4 x i8] }>
%"class.base::RefCountedThreadSafe.426" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.365 }
%class.scoped_refptr.365 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.369", %class.scoped_refptr.370 }
%"class.base::RepeatingCallback.369" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.370 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.371", [4 x i8] }>
%"class.base::RefCountedThreadSafe.371" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.375", %"class.std::__1::unique_ptr.381", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.387" }
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.387" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.388" = type { %"class.std::__1::__tree.389" }
%"class.std::__1::__tree.389" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.399" = type { %"class.std::__1::__tree.400" }
%"class.std::__1::__tree.400" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.401", %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::OnceCallback.359" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.408" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.350 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.351" }>
%"class.base::RefCountedThreadSafe.351" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.359" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.409" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.431" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.431" = type { %"class.v8::TracedReference.432" }
%"class.v8::TracedReference.432" = type { %"class.v8::BasicTracedReference.433" }
%"class.v8::BasicTracedReference.433" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.452", %"class.WTF::HashMap.452", %"class.WTF::HashMap.457", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.509", %"class.blink::Persistent.187", i8, i8, i8, %"class.WTF::Vector.523", %"class.std::__1::unique_ptr.528", %"class.blink::Persistent.534", %"class.blink::Persistent.538", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.434", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.440", %"class.std::__1::unique_ptr.446", i32, i32 }
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.452" = type { %"class.WTF::HashTable.453" }
%"class.WTF::HashTable.453" = type <{ %"struct.WTF::KeyValuePair.456"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.456" = type opaque
%"class.WTF::HashMap.457" = type { %"class.WTF::HashTable.458" }
%"class.WTF::HashTable.458" = type <{ %"struct.WTF::KeyValuePair.461"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.461" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.470", %class.scoped_refptr.212 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.465", i8* }
%"class.WTF::HashMap.465" = type { %"class.WTF::HashTable.466" }
%"class.WTF::HashTable.466" = type <{ %"struct.WTF::KeyValuePair.469"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.469" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.470" = type { %"class.v8::PersistentValueMapBase.471" }
%"class.v8::PersistentValueMapBase.471" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.472", i8* }
%"class.WTF::HashMap.472" = type { %"class.WTF::HashTable.473" }
%"class.WTF::HashTable.473" = type <{ %"struct.WTF::KeyValuePair.476"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.476" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.477", %"class.WTF::String", %"class.std::__1::unique_ptr.479" }
%"class.WTF::RefCounted.477" = type { %"class.base::RefCounted.478" }
%"class.base::RefCounted.478" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.482", %"class.std::__1::unique_ptr.493", %"class.WTF::Vector.499", i8, i32 }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.WTF::Vector.485"* }
%"class.WTF::Vector.485" = type { %"class.WTF::VectorBuffer.486" }
%"class.WTF::VectorBuffer.486" = type { %"class.WTF::VectorBufferBase.487" }
%"class.WTF::VectorBufferBase.487" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.499" = type { %"class.WTF::VectorBuffer.500" }
%"class.WTF::VectorBuffer.500" = type { %"class.WTF::VectorBufferBase.487", [32 x i8] }
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent.512", %"class.WTF::HashMap.515" }
%"class.blink::ScopedPersistent.512" = type { %"class.v8::Persistent.513" }
%"class.v8::Persistent.513" = type { %"class.v8::PersistentBase.514" }
%"class.v8::PersistentBase.514" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.515" = type { %"class.WTF::HashTable.516" }
%"class.WTF::HashTable.516" = type <{ %"struct.WTF::KeyValuePair.519"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.519" = type opaque
%"class.WTF::Vector.523" = type { %"class.WTF::VectorBuffer.524" }
%"class.WTF::VectorBuffer.524" = type { %"class.WTF::VectorBufferBase.525" }
%"class.WTF::VectorBufferBase.525" = type { %"class.base::OnceCallback.359"*, i32, i32 }
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.534" = type { %"class.blink::PersistentBase.535" }
%"class.blink::PersistentBase.535" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.538" = type { %"class.blink::PersistentBase.539" }
%"class.blink::PersistentBase.539" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.542", i64 }
%"class.blink::HeapVector.542" = type { %"class.WTF::Vector.545" }
%"class.WTF::Vector.545" = type { %"class.WTF::VectorBuffer.546" }
%"class.WTF::VectorBuffer.546" = type { %"class.WTF::VectorBufferBase.547" }
%"class.WTF::VectorBufferBase.547" = type { %"struct.std::__1::pair.548"*, i32, i32 }
%"struct.std::__1::pair.548" = type { %"class.blink::UntracedMember", %"class.blink::Member.550" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.837" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.837" = type { %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"class.blink::KURL"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.564" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.553", %"class.blink::Member.553" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.553", %"class.blink::Member.555", %"class.blink::Member.553", %"class.blink::Member.553", %"class.blink::Member.557" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1258", %"class.blink::Member.1260", %"class.blink::Member.555", %"class.blink::Member.1262", %"class.blink::Member.1262", %"class.blink::Member.1284", %"class.blink::Member.1286", %"class.blink::Member.1288", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1293", %"class.blink::HeapVector.1295" }
%"class.blink::Member.1258" = type { %"class.blink::MemberBase.1259" }
%"class.blink::MemberBase.1259" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1260" = type { %"class.blink::MemberBase.1261" }
%"class.blink::MemberBase.1261" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1304", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.523", %"class.WTF::Vector.523", i8, i32, %"class.blink::Member.1312", %"class.blink::Member.255", %"class.blink::Member.1314", %"class.blink::Member.1316", %"class.blink::Member.1318", %"class.blink::Member.1320", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1322", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1328", %"class.blink::Member.1330", %"class.blink::Member.1301", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1332", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1338", %"class.blink::HeapVector.1277", %"class.blink::Member.618", %"class.blink::Member.1340", %"class.blink::Member.618", %"class.blink::Member.618", %"class.blink::Member.618", %"class.blink::UserActionElementSet", %"class.blink::Member.1349", double, double, i64, i64, %"class.blink::HeapHashSet.1351", %"class.blink::HeapHashSet.1358", i16, i8, %"class.blink::Member.1365", %"class.blink::Member.1367", %"class.blink::Member.1369", %"class.blink::Member.1371", %"class.blink::TextLinkColors", %"class.blink::Member.1373", i8, [7 x i8], %"class.blink::HeapHashMap.1375", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.618", %"class.WTF::Vector.1382", %"class.blink::Member.1387", %"class.blink::Member.1389", i8, %"class.blink::Member.618", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1391", %"class.blink::HeapVector.1393", %"class.std::__1::unique_ptr.1401", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1407", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1420", %"class.WTF::Vector.1422", i8, i8, %"class.std::__1::unique_ptr.1427", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1277", %"class.blink::HeapVector.1433", i32, i8, %"class.blink::HeapTaskRunnerTimer.1338", %"class.blink::HeapTaskRunnerTimer.1338", %"class.blink::DocumentTiming", %"class.blink::Member.1441", i8, i32, %"class.blink::Member.1443", %"class.blink::Member.1445", %"class.blink::Member.1447", %"class.blink::HeapTaskRunnerTimer.1338", %"class.blink::Member.1449", %"class.WTF::HashMap.1451", %"class.blink::Member.1456", %"class.blink::Member.1458", %"class.blink::Member.1460", %"class.blink::Member.1462", %"class.blink::Member.1260", %"class.blink::Member.1260", %"class.blink::HeapTaskRunnerTimer.1338", %"class.blink::HeapHashSet.1464", i8, i32, %"class.blink::Member.1471", %"class.blink::Member.1473", i32, %"class.blink::Member.1475", %"class.blink::Member.1477", %"class.blink::Member.1479", %"class.std::__1::unique_ptr.1481", i64, %"class.std::__1::unique_ptr.1487", i32, i32, %"class.blink::Member.620", %"class.blink::Member.1493", %"class.blink::Member.1495", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1497", %"class.WTF::Vector.1499", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1504", %"class.blink::Member.1511", %"class.std::__1::unique_ptr.1513", %"class.blink::Member.1519", i8, i8, %"class.WTF::String", %"class.blink::Member.1521", i8, [7 x i8], %"class.blink::HeapHashMap.1523", %"class.blink::HeapObserverSet.1530", %"class.blink::Member.1538", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1540", i32, i8, i8, %"class.blink::WeakMember.1542", %"class.blink::Member.1543" }
%"class.blink::Supplementable.1304" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1305" }
%"class.blink::HeapHashMap.1305" = type { %"class.WTF::HashMap.1308" }
%"class.WTF::HashMap.1308" = type { %"class.WTF::HashTable.1309" }
%"class.WTF::HashTable.1309" = type <{ %"struct.WTF::KeyValuePair.1311"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1311" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1312" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1314" = type { %"class.blink::MemberBase.1315" }
%"class.blink::MemberBase.1315" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1316" = type { %"class.blink::MemberBase.1317" }
%"class.blink::MemberBase.1317" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1322" = type { %"class.std::__1::__compressed_pair.1323" }
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.1324" }
%"struct.std::__1::__compressed_pair_elem.1324" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1328" = type { %"class.blink::MemberBase.1329" }
%"class.blink::MemberBase.1329" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1330" = type { %"class.blink::MemberBase.1331" }
%"class.blink::MemberBase.1331" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.778 }
%class.scoped_refptr.778 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1332" = type { %"class.WTF::VectorBuffer.1333" }
%"class.WTF::VectorBuffer.1333" = type { %"class.WTF::VectorBufferBase.1334" }
%"class.WTF::VectorBufferBase.1334" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1335 }
%class.scoped_refptr.1335 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1342" }
%"class.blink::HeapHashMap.1342" = type { %"class.WTF::HashMap.1345" }
%"class.WTF::HashMap.1345" = type { %"class.WTF::HashTable.1346" }
%"class.WTF::HashTable.1346" = type <{ %"struct.WTF::KeyValuePair.1348"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1348" = type opaque
%"class.blink::Member.1349" = type { %"class.blink::MemberBase.1350" }
%"class.blink::MemberBase.1350" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1351" = type { %"class.WTF::HashSet.1354" }
%"class.WTF::HashSet.1354" = type { %"class.WTF::HashTable.1355" }
%"class.WTF::HashTable.1355" = type <{ %"class.blink::WeakMember.1357"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1357" = type opaque
%"class.blink::HeapHashSet.1358" = type { %"class.WTF::HashSet.1361" }
%"class.WTF::HashSet.1361" = type { %"class.WTF::HashTable.1362" }
%"class.WTF::HashTable.1362" = type <{ %"class.blink::WeakMember.1364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1364" = type opaque
%"class.blink::Member.1365" = type { %"class.blink::MemberBase.1366" }
%"class.blink::MemberBase.1366" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1367" = type { %"class.blink::MemberBase.1368" }
%"class.blink::MemberBase.1368" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1371" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1373" = type { %"class.blink::MemberBase.1374" }
%"class.blink::MemberBase.1374" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1375" = type { %"class.WTF::HashMap.1378" }
%"class.WTF::HashMap.1378" = type { %"class.WTF::HashTable.1379" }
%"class.WTF::HashTable.1379" = type <{ %"struct.WTF::KeyValuePair.1381"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1381" = type opaque
%"class.WTF::Vector.1382" = type { %"class.WTF::VectorBuffer.1383" }
%"class.WTF::VectorBuffer.1383" = type { %"class.WTF::VectorBufferBase.1384" }
%"class.WTF::VectorBufferBase.1384" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1389" = type { %"class.blink::MemberBase.1390" }
%"class.blink::MemberBase.1390" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.618" = type { %"class.blink::MemberBase.619" }
%"class.blink::MemberBase.619" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1393" = type { %"class.WTF::Vector.1396" }
%"class.WTF::Vector.1396" = type { %"class.WTF::VectorBuffer.1397" }
%"class.WTF::VectorBuffer.1397" = type { %"class.WTF::VectorBufferBase.1398" }
%"class.WTF::VectorBufferBase.1398" = type { %"class.blink::Member.1399"*, i32, i32 }
%"class.blink::Member.1399" = type opaque
%"class.std::__1::unique_ptr.1401" = type { %"class.std::__1::__compressed_pair.1402" }
%"class.std::__1::__compressed_pair.1402" = type { %"struct.std::__1::__compressed_pair_elem.1403" }
%"struct.std::__1::__compressed_pair_elem.1403" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1407" = type { %"class.WTF::HashSet.1410" }
%"class.WTF::HashSet.1410" = type { %"class.WTF::HashTable.1411" }
%"class.WTF::HashTable.1411" = type <{ %"class.blink::WeakMember.1413"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1413" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1414", i32, [4 x i8] }>
%"class.WTF::Vector.1414" = type { %"class.WTF::VectorBuffer.1415" }
%"class.WTF::VectorBuffer.1415" = type { %"class.WTF::VectorBufferBase.1416" }
%"class.WTF::VectorBufferBase.1416" = type { %"struct.std::__1::pair.1417"*, i32, i32 }
%"struct.std::__1::pair.1417" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1422" = type { %"class.WTF::VectorBuffer.1423" }
%"class.WTF::VectorBuffer.1423" = type { %"class.WTF::VectorBufferBase.1424" }
%"class.WTF::VectorBufferBase.1424" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1427" = type { %"class.std::__1::__compressed_pair.1428" }
%"class.std::__1::__compressed_pair.1428" = type { %"struct.std::__1::__compressed_pair_elem.1429" }
%"struct.std::__1::__compressed_pair_elem.1429" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1277" = type { %"class.WTF::Vector.1280" }
%"class.WTF::Vector.1280" = type { %"class.WTF::VectorBuffer.1281" }
%"class.WTF::VectorBuffer.1281" = type { %"class.WTF::VectorBufferBase.1282" }
%"class.WTF::VectorBufferBase.1282" = type { %"class.blink::Member.618"*, i32, i32 }
%"class.blink::HeapVector.1433" = type { %"class.WTF::Vector.1436" }
%"class.WTF::Vector.1436" = type { %"class.WTF::VectorBuffer.1437" }
%"class.WTF::VectorBuffer.1437" = type { %"class.WTF::VectorBufferBase.1438" }
%"class.WTF::VectorBufferBase.1438" = type { %"class.blink::Member.1439"*, i32, i32 }
%"class.blink::Member.1439" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1260" }
%"class.blink::Member.1441" = type { %"class.blink::MemberBase.1442" }
%"class.blink::MemberBase.1442" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1443" = type { %"class.blink::MemberBase.1444" }
%"class.blink::MemberBase.1444" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1451" = type { %"class.WTF::HashTable.1452" }
%"class.WTF::HashTable.1452" = type <{ %"struct.WTF::KeyValuePair.1455"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1455" = type opaque
%"class.blink::Member.1456" = type { %"class.blink::MemberBase.1457" }
%"class.blink::MemberBase.1457" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1458" = type { %"class.blink::MemberBase.1459" }
%"class.blink::MemberBase.1459" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1460" = type { %"class.blink::MemberBase.1461" }
%"class.blink::MemberBase.1461" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1462" = type { %"class.blink::MemberBase.1463" }
%"class.blink::MemberBase.1463" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1338" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1339", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.992, %"class.base::WeakPtrFactory.993" }
%class.scoped_refptr.992 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.993" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1339" = type { %"class.blink::MemberBase.1261" }
%"class.blink::HeapHashSet.1464" = type { %"class.WTF::HashSet.1467" }
%"class.WTF::HashSet.1467" = type { %"class.WTF::HashTable.1468" }
%"class.WTF::HashTable.1468" = type <{ %"class.blink::Member.1470"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1470" = type opaque
%"class.blink::Member.1471" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1473" = type { %"class.blink::MemberBase.1474" }
%"class.blink::MemberBase.1474" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1481" = type { %"class.std::__1::__compressed_pair.1482" }
%"class.std::__1::__compressed_pair.1482" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"struct.std::__1::__compressed_pair_elem.1483" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1487" = type { %"class.std::__1::__compressed_pair.1488" }
%"class.std::__1::__compressed_pair.1488" = type { %"struct.std::__1::__compressed_pair_elem.1489" }
%"struct.std::__1::__compressed_pair_elem.1489" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.255" }
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1499" = type { %"class.WTF::VectorBuffer.1500" }
%"class.WTF::VectorBuffer.1500" = type { %"class.WTF::VectorBufferBase.1501" }
%"class.WTF::VectorBufferBase.1501" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1504" = type { %"class.WTF::HashMap.1507" }
%"class.WTF::HashMap.1507" = type { %"class.WTF::HashTable.1508" }
%"class.WTF::HashTable.1508" = type <{ %"struct.WTF::KeyValuePair.1510"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1510" = type opaque
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1513" = type { %"class.std::__1::__compressed_pair.1514" }
%"class.std::__1::__compressed_pair.1514" = type { %"struct.std::__1::__compressed_pair_elem.1515" }
%"struct.std::__1::__compressed_pair_elem.1515" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1521" = type { %"class.blink::MemberBase.1522" }
%"class.blink::MemberBase.1522" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Member.1538" = type { %"class.blink::MemberBase.1539" }
%"class.blink::MemberBase.1539" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1260", %"class.blink::HeapHashSet.1547", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1554", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1547" = type { %"class.WTF::HashSet.1550" }
%"class.WTF::HashSet.1550" = type { %"class.WTF::HashTable.1551" }
%"class.WTF::HashTable.1551" = type <{ %"class.blink::Member.1553"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1553" = type opaque
%"class.blink::HeapTaskRunnerTimer.1554" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1555", { i64, i64 } }
%"class.blink::WeakMember.1555" = type { %"class.blink::MemberBase.1541" }
%"class.blink::WeakMember.1542" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::Node"* }
%"class.blink::Member.1543" = type { %"class.blink::MemberBase.1544" }
%"class.blink::MemberBase.1544" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1262" = type { %"class.blink::MemberBase.1263" }
%"class.blink::MemberBase.1263" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1266" }
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type { %"class.WTF::AtomicString", %"class.blink::Member.1273" }
%"class.blink::Member.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.618", i32, %"class.blink::HeapVector.1277" }
%"class.blink::Member.1284" = type { %"class.blink::MemberBase.1285" }
%"class.blink::MemberBase.1285" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.1287" }
%"class.blink::MemberBase.1287" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1288" = type { %"class.blink::MemberBase.1289" }
%"class.blink::MemberBase.1289" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1290" }
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::HeapHashMap.1292"* }
%"class.blink::HeapHashMap.1292" = type opaque
%"class.blink::Member.1293" = type { %"class.blink::MemberBase.1294" }
%"class.blink::MemberBase.1294" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1295" = type { %"class.WTF::Vector.1298" }
%"class.WTF::Vector.1298" = type { %"class.WTF::VectorBuffer.1299" }
%"class.WTF::VectorBuffer.1299" = type { %"class.WTF::VectorBufferBase.1300" }
%"class.WTF::VectorBufferBase.1300" = type { %"class.blink::Member.1301"*, i32, i32 }
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.568", %"class.blink::Member.570", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.568" = type { %"class.WTF::SingleThreadedBitField.569" }
%"class.WTF::SingleThreadedBitField.569" = type { i32 }
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.572 }
%class.scoped_refptr.572 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.573", %"class.WTF::AtomicString", %"class.WTF::Vector.575" }
%"class.WTF::RefCounted.573" = type { %"class.base::RefCounted.574" }
%"class.base::RefCounted.574" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.575" = type { %"class.WTF::VectorBuffer.576" }
%"class.WTF::VectorBuffer.576" = type { %"class.WTF::VectorBufferBase.577", [32 x i8] }
%"class.WTF::VectorBufferBase.577" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.1556", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.1556" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.1557" }
%"class.std::__1::unique_ptr.1557" = type { %"class.std::__1::__compressed_pair.1558" }
%"class.std::__1::__compressed_pair.1558" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"struct.std::__1::__compressed_pair_elem.1559" = type { i8* }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.570", %"class.WTF::Vector.1563" }
%"class.WTF::Vector.1563" = type { %"class.WTF::VectorBuffer.1564" }
%"class.WTF::VectorBuffer.1564" = type { %"class.WTF::VectorBufferBase.1565", [64 x i8] }
%"class.WTF::VectorBufferBase.1565" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::HTMLIFrameElement" = type <{ %"class.blink::HTMLFrameElementBase", %"class.blink::Supplementable.608", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i8, i8, [5 x i8], %"class.blink::Member.616", %"class.blink::Member.620", i32, [4 x i8] }>
%"class.blink::HTMLFrameElementBase" = type { %"class.blink::HTMLFrameOwnerElement.base", i32, i32, i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::HTMLFrameOwnerElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.580", %"class.blink::Member.582", %"struct.blink::FramePolicy", %"class.blink::Member.606", i8, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.624", %"class.blink::Member.626", %"class.blink::Member.628", i8, i32, i8, i32, %"class.blink::Member.762", %"class.blink::Member.651", %"class.blink::FrameLifecycle", %"class.blink::Member.580", %"class.blink::Member.580", %"class.blink::Member.580", %"class.blink::Member.580", %"class.blink::Member.580", %"class.blink::Member.580", %"class.blink::Member.764", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.766", i8, %"class.base::UnguessableToken", %"class.absl::optional.768", %"class.absl::optional.773", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.580", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::FrameOwner"* }
%"class.blink::Member.628" = type { %"class.blink::MemberBase.629" }
%"class.blink::MemberBase.629" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.580", %"class.blink::Member.651", %"class.blink::Member.653", %"class.blink::Member.655", i8, %"class.WTF::Vector.657" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.644" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.632" }
%"class.blink::HeapVector.632" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637", [32 x i8] }
%"class.WTF::VectorBufferBase.637" = type { %"struct.std::__1::pair.638"*, i32, i32 }
%"struct.std::__1::pair.638" = type { %"class.WTF::AtomicString", %"class.blink::Member.639" }
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::HeapVector.641"* }
%"class.blink::HeapVector.641" = type opaque
%"class.std::__1::unique_ptr.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"class.WTF::Vector.647"* }
%"class.WTF::Vector.647" = type opaque
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.657" = type { %"class.WTF::VectorBuffer.658" }
%"class.WTF::VectorBuffer.658" = type { %"class.WTF::VectorBufferBase.659" }
%"class.WTF::VectorBufferBase.659" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.660", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType.660" = type { %"class.base::StrongAlias.661" }
%"class.base::StrongAlias.661" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.754" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.662, %"class.std::__1::unique_ptr.331", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.350, i32 }>
%class.scoped_refptr.662 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.350, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.720", %"class.absl::optional.725", %"class.absl::optional.679", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.745", i8, [7 x i8], %class.scoped_refptr.350, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.371" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.359", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.350, %"class.std::__1::unique_ptr.663", %"class.absl::optional.673", %"struct.std::__1::atomic.167", i8, i8, i8, i8, i32, i32, %"class.absl::optional.679", %"class.std::__1::unique_ptr.684", i8, i64, %class.scoped_refptr.717, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.719" }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.350, i8, %"class.mojo::ScopedHandleBase.666", %class.scoped_refptr.667, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.668", i8*, %"class.base::WeakPtrFactory.669" }
%"class.mojo::ScopedHandleBase.666" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.667 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.668" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.669" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.673" = type { %"class.absl::optional_internal::optional_data.674" }
%"class.absl::optional_internal::optional_data.674" = type { %"class.absl::optional_internal::optional_data_base.675" }
%"class.absl::optional_internal::optional_data_base.675" = type { %"class.absl::optional_internal::optional_data_dtor_base.676" }
%"class.absl::optional_internal::optional_data_dtor_base.676" = type { i8, %union.anon.677 }
%union.anon.677 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.678", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.678" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.684" = type { %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.687", i8, i64, %class.scoped_refptr.688, %class.scoped_refptr.713 }
%"class.base::RepeatingCallback.687" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.688 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.689", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.691", %"class.std::__1::map.702", i8, [7 x i8] }>
%"class.base::RefCounted.689" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.690 }
%class.scoped_refptr.690 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.691" = type { %"class.std::__1::__tree.692" }
%"class.std::__1::__tree.692" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.693", %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.702" = type { %"class.std::__1::__tree.703" }
%"class.std::__1::__tree.703" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.704", %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%class.scoped_refptr.713 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.717 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.718 }
%class.scoped_refptr.718 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.719" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.720" = type { %"class.absl::optional_internal::optional_data.721" }
%"class.absl::optional_internal::optional_data.721" = type { %"class.absl::optional_internal::optional_data_base.722" }
%"class.absl::optional_internal::optional_data_base.722" = type { %"class.absl::optional_internal::optional_data_dtor_base.723" }
%"class.absl::optional_internal::optional_data_dtor_base.723" = type { i8, %union.anon.724 }
%union.anon.724 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.725" = type { %"class.absl::optional_internal::optional_data.726" }
%"class.absl::optional_internal::optional_data.726" = type { %"class.absl::optional_internal::optional_data_base.727" }
%"class.absl::optional_internal::optional_data_base.727" = type { %"class.absl::optional_internal::optional_data_dtor_base.728" }
%"class.absl::optional_internal::optional_data_dtor_base.728" = type { i8, [7 x i8], %union.anon.729 }
%union.anon.729 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.679" = type { %"class.absl::optional_internal::optional_data.680" }
%"class.absl::optional_internal::optional_data.680" = type { %"class.absl::optional_internal::optional_data_base.681" }
%"class.absl::optional_internal::optional_data_base.681" = type { %"class.absl::optional_internal::optional_data_dtor_base.682" }
%"class.absl::optional_internal::optional_data_dtor_base.682" = type { i8, %union.anon.683 }
%union.anon.683 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.730 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.730 = type { %"class.std::__1::map.733" }
%"class.std::__1::map.733" = type { %"class.std::__1::__tree.734" }
%"class.std::__1::__tree.734" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.735", %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.744"*, i64 }
%"class.std::__1::unique_ptr.744" = type opaque
%"class.std::__1::map.745" = type { %"class.std::__1::__tree.746" }
%"class.std::__1::__tree.746" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.747", %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.762" = type { %"class.blink::MemberBase.763" }
%"class.blink::MemberBase.763" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.786", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.794", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.823", %"class.blink::FrameLoader", %"class.blink::Member.850", %"class.blink::Member.618", %"class.blink::Member.852", %"class.blink::Member.854", %"class.blink::Member.856", %"class.blink::Member.858", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.860", %class.scoped_refptr.862, %"class.blink::Member.863", %"class.blink::Member.865", %"class.blink::Member.867", %"class.blink::Member.869", %"class.blink::Member.871", %"class.blink::Member.873", %"class.blink::Member.875", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.889", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.895", %"class.std::__1::unique_ptr.896", %"class.absl::optional.773", i32, [4 x i8], %"class.std::__1::unique_ptr.902", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.920", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.938", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.952", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.960", %"class.blink::Member.962", %"class.blink::Member.964", %"class.blink::Member.966", %"class.mojo::StructPtr.969", %"class.blink::Member.978", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.980", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.786" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.787" }
%"class.blink::HeapHashMap.787" = type { %"class.WTF::HashMap.790" }
%"class.WTF::HashMap.790" = type { %"class.WTF::HashTable.791" }
%"class.WTF::HashTable.791" = type <{ %"struct.WTF::KeyValuePair.793"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.793" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.794" = type { %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.797", %"class.base::WeakPtrFactory.802" }
%"class.WTF::HashMap.797" = type { %"class.WTF::HashTable.798" }
%"class.WTF::HashTable.798" = type <{ %"struct.WTF::KeyValuePair.801"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.801" = type opaque
%"class.base::WeakPtrFactory.802" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.806" }
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.810" }
%"class.blink::WeakMember.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.812", i64, %"class.std::__1::map.813", i8*, i64, %"class.base::WeakPtrFactory.822" }
%"class.base::RepeatingCallback.812" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.813" = type { %"class.std::__1::__tree.814" }
%"class.std::__1::__tree.814" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.815", %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::WeakPtrFactory.822" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.823" = type { %"class.WTF::HashSet.826" }
%"class.WTF::HashSet.826" = type { %"class.WTF::HashTable.827" }
%"class.WTF::HashTable.827" = type <{ %"class.blink::WeakMember.829"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.829" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.764", %"class.blink::Member.830", %"class.blink::Member.832", %"class.std::__1::unique_ptr.834", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.846" }
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.832" = type { %"class.blink::MemberBase.833" }
%"class.blink::MemberBase.833" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.834" = type { %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.212 }
%"class.WTF::HashSet.846" = type { %"class.WTF::HashTable.847" }
%"class.WTF::HashTable.847" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.850" = type { %"class.blink::MemberBase.851" }
%"class.blink::MemberBase.851" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.987", %"class.blink::Member.764", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.995", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1000", %"class.blink::Member.1002", %"class.blink::Member.1002", %"class.std::__1::unique_ptr.1005", i32, [4 x i8], %"class.WTF::HashSet.1008", %"class.blink::Member.1015", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1017", %"class.blink::HeapHashSet.1024", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1032", i8, %"class.blink::Member.1038", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1050", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1064", i8, %"class.std::__1::unique_ptr.1070", %"class.std::__1::unique_ptr.1187", %"class.WTF::Vector.1193", i32, %class.scoped_refptr.1198, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1199", %"class.blink::Member.1201", %"class.blink::Member.1203", %"class.blink::HeapHashSet.1205", %"class.blink::HeapHashSet.1212", %"class.std::__1::unique_ptr.1219", %"class.std::__1::unique_ptr.1226", %"class.WTF::Vector.523" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.987" = type { %"class.WTF::HashTable.988" }
%"class.WTF::HashTable.988" = type <{ %class.scoped_refptr.991*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.991 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.994", { i64, i64 } }
%"class.blink::WeakMember.994" = type { %"class.blink::MemberBase.851" }
%"class.absl::optional.995" = type { %"class.absl::optional_internal::optional_data.996" }
%"class.absl::optional_internal::optional_data.996" = type { %"class.absl::optional_internal::optional_data_base.997" }
%"class.absl::optional_internal::optional_data_base.997" = type { %"class.absl::optional_internal::optional_data_dtor_base.998" }
%"class.absl::optional_internal::optional_data_dtor_base.998" = type { i8, %union.anon.999 }
%union.anon.999 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1002" = type { %"class.blink::MemberBase.1003" }
%"class.blink::MemberBase.1003" = type { %"class.blink::HeapHashSet.1004"* }
%"class.blink::HeapHashSet.1004" = type opaque
%"class.std::__1::unique_ptr.1005" = type { %"class.std::__1::__compressed_pair.1006" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.1007" }
%"struct.std::__1::__compressed_pair_elem.1007" = type { %"class.WTF::HashSet.1008"* }
%"class.WTF::HashSet.1008" = type { %"class.WTF::HashTable.1009" }
%"class.WTF::HashTable.1009" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1015" = type { %"class.blink::MemberBase.1016" }
%"class.blink::MemberBase.1016" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1017" = type { %"class.WTF::HashSet.1020" }
%"class.WTF::HashSet.1020" = type { %"class.WTF::HashTable.1021" }
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type opaque
%"class.blink::HeapHashSet.1024" = type { %"class.WTF::HashSet.1027" }
%"class.WTF::HashSet.1027" = type { %"class.WTF::HashTable.1028" }
%"class.WTF::HashTable.1028" = type <{ %"class.blink::Member.1030"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1032" = type { %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1038" = type { %"class.blink::MemberBase.1039" }
%"class.blink::MemberBase.1039" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1042", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1042" = type { %"class.WTF::HashTable.1043" }
%"class.WTF::HashTable.1043" = type <{ %"struct.WTF::KeyValuePair.1045"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1045" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1046", i32, i32 }
%"class.WTF::Vector.1046" = type { %"class.WTF::VectorBuffer.1047" }
%"class.WTF::VectorBuffer.1047" = type { %"class.WTF::VectorBufferBase.1048" }
%"class.WTF::VectorBufferBase.1048" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1050" = type { %"class.WTF::LinkedHashSet.1053" }
%"class.WTF::LinkedHashSet.1053" = type { %"class.WTF::HashMap.1054", %"class.WTF::VectorBackedLinkedList.1058" }
%"class.WTF::HashMap.1054" = type { %"class.WTF::HashTable.1055" }
%"class.WTF::HashTable.1055" = type <{ %"struct.WTF::KeyValuePair.1057"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1057" = type opaque
%"class.WTF::VectorBackedLinkedList.1058" = type { %"class.WTF::Vector.1059", i32, i32 }
%"class.WTF::Vector.1059" = type { %"class.WTF::VectorBuffer.1060" }
%"class.WTF::VectorBuffer.1060" = type { %"class.WTF::VectorBufferBase.1061" }
%"class.WTF::VectorBufferBase.1061" = type { %"class.WTF::VectorBackedLinkedListNode.1062"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1062" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1064" = type { %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1070" = type { %"class.std::__1::__compressed_pair.1071" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.1072" }
%"struct.std::__1::__compressed_pair_elem.1072" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1073, %class.scoped_refptr.1073, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1164", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1169", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1073 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1074", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1081" }
%"class.WTF::RefCounted.1074" = type { %"class.base::RefCounted.1075" }
%"class.base::RefCounted.1075" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1076", i32, [4 x i8] }>
%"class.WTF::Vector.1076" = type { %"class.WTF::VectorBuffer.1077" }
%"class.WTF::VectorBuffer.1077" = type { %"class.WTF::VectorBufferBase.1078" }
%"class.WTF::VectorBufferBase.1078" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1081" = type { %"class.WTF::VectorBuffer.1082" }
%"class.WTF::VectorBuffer.1082" = type { %"class.WTF::VectorBufferBase.1083" }
%"class.WTF::VectorBufferBase.1083" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1087", %"class.std::__1::unique_ptr.1136", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1084, %class.scoped_refptr.1085, %class.scoped_refptr.1086 }
%class.scoped_refptr.1084 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1100", i8, i8, %class.scoped_refptr.1084, i32, i32 }
%"class.WTF::RefCounted.1100" = type { %"class.base::RefCounted.1101" }
%"class.base::RefCounted.1101" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1085 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1255" }
%"class.blink::PaintPropertyNode.1255" = type { %"class.WTF::RefCounted.1256", i8, i8, %class.scoped_refptr.1085, i32, i32 }
%"class.WTF::RefCounted.1256" = type { %"class.base::RefCounted.1257" }
%"class.base::RefCounted.1257" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1086 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1252" }
%"class.blink::PaintPropertyNode.1252" = type { %"class.WTF::RefCounted.1253", i8, i8, %class.scoped_refptr.1086, i32, i32 }
%"class.WTF::RefCounted.1253" = type { %"class.base::RefCounted.1254" }
%"class.base::RefCounted.1254" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1087" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1090", %"class.WTF::Vector.1095", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1090" = type { %"class.WTF::VectorBuffer.1091" }
%"class.WTF::VectorBuffer.1091" = type { %"class.WTF::VectorBufferBase.1092" }
%"class.WTF::VectorBufferBase.1092" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1095" = type { %"class.WTF::VectorBuffer.1096" }
%"class.WTF::VectorBuffer.1096" = type { %"class.WTF::VectorBufferBase.1097" }
%"class.WTF::VectorBufferBase.1097" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1115" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1108, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1109", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1102" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1108 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1237", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1237" = type { %"class.WTF::RefCounted.1238", i8, i8, %class.scoped_refptr.1108, i32, i32 }
%"class.WTF::RefCounted.1238" = type { %"class.base::RefCounted.1239" }
%"class.base::RefCounted.1239" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1240" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1240" = type { %"class.absl::optional_internal::optional_data.1241" }
%"class.absl::optional_internal::optional_data.1241" = type { %"class.absl::optional_internal::optional_data_base.1242" }
%"class.absl::optional_internal::optional_data_base.1242" = type { %"class.absl::optional_internal::optional_data_dtor_base.1243" }
%"class.absl::optional_internal::optional_data_dtor_base.1243" = type { i8, %union.anon.1244 }
%union.anon.1244 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1245", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1245" = type { %"class.std::__1::__vector_base.1246" }
%"class.std::__1::__vector_base.1246" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1247" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1247" = type { %"struct.std::__1::__compressed_pair_elem.1248" }
%"struct.std::__1::__compressed_pair_elem.1248" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1109" = type { %"class.std::__1::__compressed_pair.1110" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1115" = type { %"class.std::__1::__compressed_pair.1116" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1118", %"class.std::__1::unique_ptr.1124", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1118" = type { %"class.std::__1::__compressed_pair.1119" }
%"class.std::__1::__compressed_pair.1119" = type { %"struct.std::__1::__compressed_pair_elem.1120" }
%"struct.std::__1::__compressed_pair_elem.1120" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1124" = type { %"class.std::__1::__compressed_pair.1125" }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1136" = type { %"class.std::__1::__compressed_pair.1137" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1139", %"class.absl::optional.1139" }
%"class.absl::optional.1139" = type { %"class.absl::optional_internal::optional_data.1140" }
%"class.absl::optional_internal::optional_data.1140" = type { %"class.absl::optional_internal::optional_data_base.1141" }
%"class.absl::optional_internal::optional_data_base.1141" = type { %"class.absl::optional_internal::optional_data_dtor_base.1142" }
%"class.absl::optional_internal::optional_data_dtor_base.1142" = type { i8, [3 x i8], %union.anon.1143 }
%union.anon.1143 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1081"*, %"class.absl::optional.1149", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1149" = type { %"class.absl::optional_internal::optional_data.1150" }
%"class.absl::optional_internal::optional_data.1150" = type { %"class.absl::optional_internal::optional_data_base.1151" }
%"class.absl::optional_internal::optional_data_base.1151" = type { %"class.absl::optional_internal::optional_data_dtor_base.1152" }
%"class.absl::optional_internal::optional_data_dtor_base.1152" = type { i8, %union.anon.1153 }
%union.anon.1153 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1154", %"class.WTF::Vector.1159" }
%"class.WTF::Vector.1154" = type { %"class.WTF::VectorBuffer.1155" }
%"class.WTF::VectorBuffer.1155" = type { %"class.WTF::VectorBufferBase.1156", [128 x i8] }
%"class.WTF::VectorBufferBase.1156" = type { i32*, i32, i32 }
%"class.WTF::Vector.1159" = type { %"class.WTF::VectorBuffer.1160" }
%"class.WTF::VectorBuffer.1160" = type { %"class.WTF::VectorBufferBase.1161", [128 x i8] }
%"class.WTF::VectorBufferBase.1161" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1164" = type { %"class.WTF::VectorBuffer.1165" }
%"class.WTF::VectorBuffer.1165" = type { %"class.WTF::VectorBufferBase.1166" }
%"class.WTF::VectorBufferBase.1166" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1169" = type { %"class.WTF::HashTable.1170" }
%"class.WTF::HashTable.1170" = type <{ %"struct.WTF::KeyValuePair.1173"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1173" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1174", %"class.WTF::Vector.1179" }
%"class.WTF::HashMap.1174" = type { %"class.WTF::HashTable.1175" }
%"class.WTF::HashTable.1175" = type <{ %"struct.WTF::KeyValuePair.1178"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1178" = type opaque
%"class.WTF::Vector.1179" = type { %"class.WTF::VectorBuffer.1180" }
%"class.WTF::VectorBuffer.1180" = type { %"class.WTF::VectorBufferBase.1181" }
%"class.WTF::VectorBufferBase.1181" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1187" = type { %"class.std::__1::__compressed_pair.1188" }
%"class.std::__1::__compressed_pair.1188" = type { %"struct.std::__1::__compressed_pair_elem.1189" }
%"struct.std::__1::__compressed_pair_elem.1189" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1193" = type { %"class.WTF::VectorBuffer.1194" }
%"class.WTF::VectorBuffer.1194" = type { %"class.WTF::VectorBufferBase.1195" }
%"class.WTF::VectorBufferBase.1195" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1198 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1199" = type { %"class.blink::MemberBase.1200" }
%"class.blink::MemberBase.1200" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1201" = type { %"class.blink::MemberBase.1202" }
%"class.blink::MemberBase.1202" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1203" = type { %"class.blink::MemberBase.1204" }
%"class.blink::MemberBase.1204" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1205" = type { %"class.WTF::HashSet.1208" }
%"class.WTF::HashSet.1208" = type { %"class.WTF::HashTable.1209" }
%"class.WTF::HashTable.1209" = type <{ %"class.blink::WeakMember.1211"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1211" = type opaque
%"class.blink::HeapHashSet.1212" = type { %"class.WTF::HashSet.1215" }
%"class.WTF::HashSet.1215" = type { %"class.WTF::HashTable.1216" }
%"class.WTF::HashTable.1216" = type <{ %"class.blink::WeakMember.1218"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1218" = type opaque
%"class.std::__1::unique_ptr.1219" = type { %"class.std::__1::__compressed_pair.1220" }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"struct.std::__1::__compressed_pair_elem.1221" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1222" }
%"class.base::time_internal::TimeBase.1222" = type { i64 }
%"class.std::__1::unique_ptr.1226" = type { %"class.std::__1::__compressed_pair.1227" }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.1228" }
%"struct.std::__1::__compressed_pair_elem.1228" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1229", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1229" = type { %"class.absl::optional_internal::optional_data.1230" }
%"class.absl::optional_internal::optional_data.1230" = type { %"class.absl::optional_internal::optional_data_base.1231" }
%"class.absl::optional_internal::optional_data_base.1231" = type { %"class.absl::optional_internal::optional_data_dtor_base.1232" }
%"class.absl::optional_internal::optional_data_dtor_base.1232" = type { i8, %union.anon.1233 }
%union.anon.1233 = type { %"class.base::Time" }
%"class.blink::Member.852" = type { %"class.blink::MemberBase.853" }
%"class.blink::MemberBase.853" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.854" = type { %"class.blink::MemberBase.855" }
%"class.blink::MemberBase.855" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.858" = type { %"class.blink::MemberBase.859" }
%"class.blink::MemberBase.859" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.860" = type { %"class.blink::MemberBase.861" }
%"class.blink::MemberBase.861" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.862 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.863" = type { %"class.blink::MemberBase.864" }
%"class.blink::MemberBase.864" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.875" = type { %"class.blink::MemberBase.876" }
%"class.blink::MemberBase.876" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.877" }
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.881" }
%"class.mojo::Remote.881" = type { %"class.mojo::internal::InterfacePtrState.882" }
%"class.mojo::internal::InterfacePtrState.882" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.883" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.895" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.908" }
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.912" }
%"class.mojo::AssociatedRemote.912" = type { %"class.mojo::internal::AssociatedInterfacePtrState.913" }
%"class.mojo::internal::AssociatedInterfacePtrState.913" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.914" }
%"class.std::__1::unique_ptr.914" = type { %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.920" = type { %"class.blink::Member.921" }
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.925" }
%"class.mojo::AssociatedRemote.925" = type { %"class.mojo::internal::AssociatedInterfacePtrState.926" }
%"class.mojo::internal::AssociatedInterfacePtrState.926" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.927" }
%"class.std::__1::unique_ptr.927" = type { %"class.std::__1::__compressed_pair.928" }
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.933" }
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.764", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.937" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.331" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.937" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.938" = type { %"class.blink::Member.939" }
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.943", %"class.blink::Member.764", %"class.mojo::AssociatedReceiver.944" }
%"class.blink::ThreadState::PrefinalizerRegistration.943" = type { i8 }
%"class.mojo::AssociatedReceiver.944" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.945" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.945" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.946" }
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.950", %"class.blink::Member.764", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.950" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.662, %"class.std::__1::unique_ptr.331", %"class.base::WeakPtrFactory.951" }
%"class.base::WeakPtrFactory.951" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.952" = type { %"class.blink::Member.953" }
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.957", %"class.blink::Member.764", %"class.mojo::AssociatedReceiver.958" }
%"class.blink::ThreadState::PrefinalizerRegistration.957" = type { i8 }
%"class.mojo::AssociatedReceiver.958" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.959" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.959" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.960" = type { %"class.blink::MemberBase.961" }
%"class.blink::MemberBase.961" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.964" = type { %"class.blink::MemberBase.965" }
%"class.blink::MemberBase.965" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::HeapHashMap.968"* }
%"class.blink::HeapHashMap.968" = type opaque
%"class.mojo::StructPtr.969" = type { %"class.std::__1::unique_ptr.970" }
%"class.std::__1::unique_ptr.970" = type { %"class.std::__1::__compressed_pair.971" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.973", %"class.mojo::InlinedStructPtr.974" }
%"class.mojo::InlinedStructPtr.973" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.974" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.980" = type { %"class.absl::optional_internal::optional_data.981" }
%"class.absl::optional_internal::optional_data.981" = type { %"class.absl::optional_internal::optional_data_base.982" }
%"class.absl::optional_internal::optional_data_base.982" = type { %"class.absl::optional_internal::optional_data_dtor_base.983" }
%"class.absl::optional_internal::optional_data_dtor_base.983" = type { i8, %union.anon.984 }
%union.anon.984 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.580", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.598" }
%"class.std::__1::vector.598" = type { %"class.std::__1::__vector_base.599" }
%"class.std::__1::__vector_base.599" = type { %"struct.std::__1::pair.600"*, %"struct.std::__1::pair.600"*, %"class.std::__1::__compressed_pair.601" }
%"struct.std::__1::pair.600" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"struct.std::__1::pair.600"* }
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.768" = type { %"class.absl::optional_internal::optional_data.769" }
%"class.absl::optional_internal::optional_data.769" = type { %"class.absl::optional_internal::optional_data_base.770" }
%"class.absl::optional_internal::optional_data_base.770" = type { %"class.absl::optional_internal::optional_data_dtor_base.771" }
%"class.absl::optional_internal::optional_data_dtor_base.771" = type { i8, %union.anon.772 }
%union.anon.772 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.773" = type { %"class.absl::optional_internal::optional_data.774" }
%"class.absl::optional_internal::optional_data.774" = type { %"class.absl::optional_internal::optional_data_base.775" }
%"class.absl::optional_internal::optional_data_base.775" = type { %"class.absl::optional_internal::optional_data_dtor_base.776" }
%"class.absl::optional_internal::optional_data_dtor_base.776" = type { i8, %union.anon.777 }
%union.anon.777 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.779" }
%"class.blink::HeapHashSet.779" = type { %"class.WTF::HashSet.782" }
%"class.WTF::HashSet.782" = type { %"class.WTF::HashTable.783" }
%"class.WTF::HashTable.783" = type <{ %"class.blink::WeakMember.785"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.785" = type opaque
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.584", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.584" = type { %"class.std::__1::__vector_base.585" }
%"class.std::__1::__vector_base.585" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.593" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.586", i8, i8, [6 x i8] }>
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::Supplementable.608" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.609" }
%"class.blink::HeapHashMap.609" = type { %"class.WTF::HashMap.612" }
%"class.WTF::HashMap.612" = type { %"class.WTF::HashTable.613" }
%"class.WTF::HashTable.613" = type <{ %"struct.WTF::KeyValuePair.615"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.615" = type opaque
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::HTMLIFrameElementSandbox"* }
%"class.blink::HTMLIFrameElementSandbox" = type { %"class.blink::DOMTokenList.base", [7 x i8] }
%"class.blink::DOMTokenList.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.618", %"class.blink::QualifiedName", i8 }>
%"class.blink::DOMTokenList" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.618", %"class.blink::QualifiedName", i8, [7 x i8] }>
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.580", %"class.blink::Member.582", %"struct.blink::FramePolicy", %"class.blink::Member.606", i8, i8, [6 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Int32" = type { i8 }
%"class.blink::TrustedHTML" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_39IDLStringStringContextTrustedHTMLBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateEPNS_16ExecutionContextE = comdat any

$_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

@_ZN5blink19V8HTMLIFrameElement32install_interface_template_func_E = external local_unnamed_addr global void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, align 8
@_ZN5blink19V8HTMLIFrameElement33install_unconditional_props_func_E = external local_unnamed_addr global void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*)*, align 8
@_ZN5blink19V8HTMLIFrameElement39install_context_independent_props_func_E = external local_unnamed_addr global void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*)*, align 8
@_ZN5blink19V8HTMLIFrameElement37install_context_dependent_props_func_E = external local_unnamed_addr global void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, align 8
@_ZN5blink19V8HTMLIFrameElement18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@.ref.tmp = private constant %"class.v8::MemorySpan" zeroinitializer, align 8
@_ZZN5blink19V8HTMLIFrameElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable = internal constant [19 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element23SrcAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element23SrcAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element26SrcdocAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element26SrcdocAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element24NameAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element24NameAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element27SandboxAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element27SandboxAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element35AllowFullscreenAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element35AllowFullscreenAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element25WidthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element25WidthAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element26HeightAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element26HeightAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element35ContentDocumentAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element33ContentWindowAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element34ReferrerPolicyAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element34ReferrerPolicyAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element23CspAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element23CspAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element25AllowAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element25AllowAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element33FeaturePolicyAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element25AlignAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element25AlignAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element29ScrollingAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element29ScrollingAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element31FrameBorderAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element31FrameBorderAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element28LongDescAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element28LongDescAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element32MarginHeightAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element32MarginHeightAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element31MarginWidthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element31MarginWidthAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }], align 16
@.str = private unnamed_addr constant [4 x i8] c"src\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"srcdoc\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"sandbox\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"allowFullscreen\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"contentDocument\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"contentWindow\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"referrerPolicy\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"csp\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"allow\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"featurePolicy\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"align\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"scrolling\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"frameBorder\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"longDesc\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"marginHeight\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"marginWidth\00", align 1
@_ZZN5blink19V8HTMLIFrameElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kOperationTable = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element31GetSVGDocumentOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }], align 16
@.str.19 = private unnamed_addr constant [15 x i8] c"getSVGDocument\00", align 1
@_ZZN5blink19V8HTMLIFrameElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element27LoadingAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element27LoadingAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }], align 16
@.str.20 = private unnamed_addr constant [8 x i8] c"loading\00", align 1
@_ZZN5blink19V8HTMLIFrameElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable_0 = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element42DisallowDocumentAccessAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element42DisallowDocumentAccessAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }], align 16
@.str.21 = private unnamed_addr constant [23 x i8] c"disallowDocumentAccess\00", align 1
@_ZZN5blink19V8HTMLIFrameElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable_1 = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element39AllowPaymentRequestAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element39AllowPaymentRequestAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }], align 16
@.str.22 = private unnamed_addr constant [20 x i8] c"allowPaymentRequest\00", align 1
@_ZZN5blink19V8HTMLIFrameElement4Impl33InstallContextDependentPropertiesEN2v85LocalINS2_7ContextEEERKNS_15DOMWrapperWorldENS3_INS2_6ObjectEEESA_SA_NS3_INS2_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kAttributeTable = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element30TrustTokenAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element30TrustTokenAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }], align 16
@.str.23 = private unnamed_addr constant [11 x i8] c"trustToken\00", align 1
@_ZZN5blink19V8HTMLIFrameElement4Impl33InstallContextDependentPropertiesEN2v85LocalINS2_7ContextEEERKNS_15DOMWrapperWorldENS3_INS2_6ObjectEEESA_SA_NS3_INS2_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kAttributeTable_0 = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element26PolicyAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element26PolicyAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }], align 16
@.str.24 = private unnamed_addr constant [7 x i8] c"policy\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"HTMLIFrameElement\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink10html_names8kSrcAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16CEReactionsScope13top_of_stack_E = external local_unnamed_addr global %"class.blink::CEReactionsScope"*, align 8
@_ZN5blink10html_names11kSrcdocAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink13V8TrustedHTML18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.26 = private unnamed_addr constant [37 x i8] c"The attribute value is not an object\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@_ZN5blink10html_names20kAllowfullscreenAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names19kReferrerpolicyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink8keywords11kNoReferrerE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink8keywords7kOriginE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink8keywords24kNoReferrerWhenDowngradeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink8keywords22kOriginWhenCrossOriginE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink8keywords10kUnsafeUrlE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names8kCspAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kAllowAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kAlignAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kScrollingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kFrameborderAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kLongdescAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kMarginheightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kMarginwidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase30is_lazy_frame_loading_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink10html_names12kLoadingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink8keywords5kAutoE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink8keywords5kLazyE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink8keywords6kEagerE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase36is_disallow_document_access_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink10html_names27kDisallowdocumentaccessAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase27is_payment_request_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink10html_names24kAllowpaymentrequestAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.30 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.32 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink10html_names15kTrusttokenAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kPolicyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink19V8HTMLIFrameElement4Impl4InitEv() local_unnamed_addr #0 align 2 {
  store void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink19V8HTMLIFrameElement4Impl24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEE, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)** @_ZN5blink19V8HTMLIFrameElement32install_interface_template_func_E, align 8
  store void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*)* @_ZN5blink19V8HTMLIFrameElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*)** @_ZN5blink19V8HTMLIFrameElement33install_unconditional_props_func_E, align 8
  store void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*)* @_ZN5blink19V8HTMLIFrameElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*)** @_ZN5blink19V8HTMLIFrameElement39install_context_independent_props_func_E, align 8
  store void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* @_ZN5blink19V8HTMLIFrameElement4Impl33InstallContextDependentPropertiesEN2v85LocalINS2_7ContextEEERKNS_15DOMWrapperWorldENS3_INS2_6ObjectEEESA_SA_NS3_INS2_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)** @_ZN5blink19V8HTMLIFrameElement37install_context_dependent_props_func_E, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8HTMLIFrameElement4Impl24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #1 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = alloca %"class.base::span.182", align 8
  %6 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %6) #7
  %8 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %6) #7
  %9 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink19V8HTMLIFrameElement18wrapper_type_info_E, i64 0, i32 4), align 8
  %10 = tail call %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"* %9, %"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1) #7
  %11 = bitcast %"class.v8::Template"* %10 to %"class.v8::FunctionTemplate"*
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink19V8HTMLIFrameElement18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %7, %"class.v8::ObjectTemplate"* %8, %"class.v8::FunctionTemplate"* %6, %"class.v8::FunctionTemplate"* %11) #7
  tail call void @_ZN2v816FunctionTemplate14SetCallHandlerEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS2_EENS_14SideEffectTypeERKNS_10MemorySpanIKNS_9CFunctionEEE(%"class.v8::FunctionTemplate"* %6, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element19ConstructorCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %"class.v8::Value"* null, i32 0, %"class.v8::MemorySpan"* nonnull dereferenceable(16) @.ref.tmp) #7
  tail call void @_ZN2v816FunctionTemplate9SetLengthEi(%"class.v8::FunctionTemplate"* %6, i32 0) #7
  %12 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %13 = bitcast %"class.v8::ObjectTemplate"* %8 to %"class.v8::Template"*
  %14 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  %15 = bitcast %"class.base::span.182"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15)
  %16 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %6) #7
  %17 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 19, i64* %17, align 8
  %18 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([19 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink19V8HTMLIFrameElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %18, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %12, %"class.v8::Template"* %13, %"class.v8::Template"* %2, %"class.v8::Signature"* %16, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #7
  %19 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %5, i64 0, i32 0, i32 0
  store i64 1, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %5, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink19V8HTMLIFrameElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %20, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %12, %"class.v8::Template"* %13, %"class.v8::Template"* %2, %"class.v8::Signature"* %16, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15)
  tail call void @_ZN5blink19V8HTMLIFrameElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %12, %"class.v8::Template"* %13, %"class.v8::Template"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8HTMLIFrameElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) #1 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span.182", align 8
  %8 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %9 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #7
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 19, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([19 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink19V8HTMLIFrameElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %11, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #7
  %12 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %7, i64 0, i32 0, i32 0
  store i64 1, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink19V8HTMLIFrameElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %7) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8HTMLIFrameElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) #1 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span", align 8
  %8 = alloca %"class.base::span", align 8
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_lazy_frame_loading_enabled_E, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %13 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %12) #7
  %14 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 1, i64* %14, align 8
  %15 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink19V8HTMLIFrameElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %15, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %13, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #7
  br label %16

16:                                               ; preds = %5, %11
  %17 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_disallow_document_access_enabled_E, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %21 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %20) #7
  %22 = getelementptr inbounds %"class.base::span", %"class.base::span"* %7, i64 0, i32 0, i32 0
  store i64 1, i64* %22, align 8
  %23 = getelementptr inbounds %"class.base::span", %"class.base::span"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink19V8HTMLIFrameElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable_0 to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %23, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %21, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %7) #7
  br label %24

24:                                               ; preds = %16, %19
  %25 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase27is_payment_request_enabled_E, align 1, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %29 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %28) #7
  %30 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 0, i32 0
  store i64 1, i64* %30, align 8
  %31 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink19V8HTMLIFrameElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable_1 to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %31, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %29, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %8) #7
  br label %32

32:                                               ; preds = %24, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8HTMLIFrameElement4Impl33InstallContextDependentPropertiesEN2v85LocalINS2_7ContextEEERKNS_15DOMWrapperWorldENS3_INS2_6ObjectEEESA_SA_NS3_INS2_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE(%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64) #1 align 2 {
  %8 = alloca %"class.base::span", align 8
  %9 = alloca %"class.base::span", align 8
  %10 = trunc i64 %6 to i8
  %11 = lshr i64 %6, 32
  %12 = trunc i64 %11 to i32
  %13 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %0)
  %14 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %13) #7
  %15 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %14, i64 0, i32 6, i32 11
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %34

18:                                               ; preds = %7
  %19 = icmp eq i8 %10, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %18
  %21 = icmp eq %"class.blink::ExecutionContext"* %14, null
  %22 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %14, i64 0, i32 4
  %23 = select i1 %21, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %22
  %24 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase18TrustTokensEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %23) #7
  %25 = icmp eq i32 %12, 66
  %26 = or i1 %25, %24
  br i1 %26, label %28, label %36

27:                                               ; preds = %18
  switch i32 %12, label %51 [
    i32 66, label %28
    i32 18, label %45
  ]

28:                                               ; preds = %27, %20
  %29 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #7
  %30 = bitcast %"class.v8::Template"* %5 to %"class.v8::FunctionTemplate"*
  %31 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %29, %"class.v8::FunctionTemplate"* %30) #7
  %32 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 0, i32 0
  store i64 1, i64* %32, align 8
  %33 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink19V8HTMLIFrameElement4Impl33InstallContextDependentPropertiesEN2v85LocalINS2_7ContextEEERKNS_15DOMWrapperWorldENS3_INS2_6ObjectEEESA_SA_NS3_INS2_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %33, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_6ObjectEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %29, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Object"* %2, %"class.v8::Object"* %3, %"class.v8::Object"* %4, %"class.v8::Signature"* %31, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %8) #7
  br label %34

34:                                               ; preds = %28, %7
  %35 = icmp eq i8 %10, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %20, %34
  %37 = icmp eq %"class.blink::ExecutionContext"* %14, null
  %38 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %14, i64 0, i32 4
  %39 = select i1 %37, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %38
  %40 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase32DocumentPolicyNegotiationEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %39) #7
  %41 = icmp eq i32 %12, 18
  %42 = or i1 %41, %40
  br i1 %42, label %45, label %51

43:                                               ; preds = %34
  %44 = icmp eq i32 %12, 18
  br i1 %44, label %45, label %51

45:                                               ; preds = %27, %43, %36
  %46 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #7
  %47 = bitcast %"class.v8::Template"* %5 to %"class.v8::FunctionTemplate"*
  %48 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %46, %"class.v8::FunctionTemplate"* %47) #7
  %49 = getelementptr inbounds %"class.base::span", %"class.base::span"* %9, i64 0, i32 0, i32 0
  store i64 1, i64* %49, align 8
  %50 = getelementptr inbounds %"class.base::span", %"class.base::span"* %9, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink19V8HTMLIFrameElement4Impl33InstallContextDependentPropertiesEN2v85LocalINS2_7ContextEEERKNS_15DOMWrapperWorldENS3_INS2_6ObjectEEESA_SA_NS3_INS2_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kAttributeTable_0 to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %50, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_6ObjectEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %46, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Object"* %2, %"class.v8::Object"* %3, %"class.v8::Object"* %4, %"class.v8::Signature"* %48, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %9) #7
  br label %51

51:                                               ; preds = %27, %36, %45, %43
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #3

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #3

declare %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #3

declare void @_ZN2v816FunctionTemplate14SetCallHandlerEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS2_EENS_14SideEffectTypeERKNS_10MemorySpanIKNS_9CFunctionEEE(%"class.v8::FunctionTemplate"*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::Value"*, i32, %"class.v8::MemorySpan"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element19ConstructorCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = getelementptr inbounds i64, i64* %5, i64 5
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %90

13:                                               ; preds = %1
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %90

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, -2
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %30, label %90

30:                                               ; preds = %24
  %31 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 56, i1 false)
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 5, i16* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 3
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %38 = bitcast i8** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #7
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %41 = bitcast %"class.WTF::StringImpl"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #7
  %42 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #7
  %43 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages27ConstructorCalledAsFunctionEv() #7
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %44, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #7
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %30
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #7
  br label %60

60:                                               ; preds = %30, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = icmp eq i64* %62, null
  br i1 %63, label %73, label %64

64:                                               ; preds = %60
  %65 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %66 = bitcast %"class.v8::Isolate"* %65 to %"class.v8::internal::Isolate"*
  %67 = load i64, i64* %62, align 8
  %68 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %66, i64 %67) #7
  %69 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %65) #7
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = bitcast i64* %68 to %"class.v8::Value"*
  %72 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %65, %"class.v8::Value"* %71) #7
  br label %73

73:                                               ; preds = %70, %64, %60
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #7
  br label %89

89:                                               ; preds = %73, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #7
  br label %108

90:                                               ; preds = %24, %13, %1
  %91 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %92 = add i64 %91, 8
  %93 = inttoptr i64 %92 to %"class.blink::V8PerIsolateData"**
  %94 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %94, i64 0, i32 8
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %107

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %100 = load i64*, i64** %99, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 -1
  %102 = getelementptr inbounds i64, i64* %5, i64 3
  %103 = icmp eq i64* %101, null
  %104 = getelementptr inbounds i64, i64* %5, i64 2
  %105 = select i1 %103, i64* %104, i64* %101, !prof !3
  %106 = load i64, i64* %105, align 8
  store i64 %106, i64* %102, align 8
  br label %108

107:                                              ; preds = %90
  tail call void @_ZN5blink17V8HTMLConstructor15HtmlConstructorERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_15WrapperTypeInfoENS_15HTMLElementTypeE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"struct.blink::WrapperTypeInfo"* nonnull dereferenceable(48) @_ZN5blink19V8HTMLIFrameElement18wrapper_type_info_E, i32 27) #7
  br label %108

108:                                              ; preds = %107, %98, %89
  ret void
}

declare void @_ZN2v816FunctionTemplate9SetLengthEi(%"class.v8::FunctionTemplate"*, i32) local_unnamed_addr #3

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element23SrcAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #7
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %25) #7
  %26 = bitcast i8* %24 to %"class.blink::Element"*
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  call void @_ZNK5blink7Element15GetURLAttributeERKNS_13QualifiedNameE(%"class.blink::KURL"* nonnull sret %2, %"class.blink::Element"* %26, %"class.blink::QualifiedName"* dereferenceable(8) %27) #7
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 1
  %31 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 4, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %40

34:                                               ; preds = %23
  %35 = getelementptr inbounds i64, i64* %29, i64 3
  %36 = load i64, i64* %30, align 8
  %37 = add i64 %36, 200
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %35, align 8
  br label %59

40:                                               ; preds = %23
  %41 = load i64, i64* %30, align 8
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to %"class.blink::V8PerIsolateData"**
  %44 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %44, i64 0, i32 5, i32 0, i32 0, i32 0
  %46 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %45, align 8
  %47 = getelementptr inbounds i64, i64* %29, i64 3
  %48 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %46, i64 0, i32 3, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, %32
  br i1 %50, label %51, label %58

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %46, i64 0, i32 1, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = inttoptr i64 %53 to i64*
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %47, align 8
  br label %59

58:                                               ; preds = %40
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %46, i64* %47, %"class.WTF::StringImpl"* nonnull %32) #7
  br label %59

59:                                               ; preds = %34, %51, %55, %58
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %25) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element23SrcAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #7
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #7
  %23 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %26 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %25, i64* %26, align 8
  store i8 0, i8* %23, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 -1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i64 %30, -4294967296
  %35 = zext i32 %33 to i64
  %36 = or i64 %34, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load i16, i16* %38, align 2
  switch i16 %39, label %44 [
    i16 1057, label %40
    i16 1056, label %40
    i16 1040, label %40
  ]

40:                                               ; preds = %1, %1, %1
  %41 = add i64 %30, 19
  %42 = inttoptr i64 %41 to i8**
  %43 = load i8*, i8** %42, align 1
  br label %47

44:                                               ; preds = %1
  %45 = bitcast i64* %29 to %"class.v8::Object"*
  %46 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %45, i32 1) #7
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i8* [ %43, %40 ], [ %46, %44 ]
  %49 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %47
  %53 = load i64*, i64** %6, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 160
  %57 = inttoptr i64 %56 to %"class.v8::Value"*
  br label %61

58:                                               ; preds = %47
  %59 = bitcast i64** %27 to %"class.v8::Value"**
  %60 = load %"class.v8::Value"*, %"class.v8::Value"** %59, align 8
  br label %61

61:                                               ; preds = %52, %58
  %62 = phi %"class.v8::Value"* [ %57, %52 ], [ %60, %58 ]
  %63 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %63) #7
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %62, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %64 = load i32, i32* %19, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %121

66:                                               ; preds = %61
  %67 = bitcast i8* %48 to %"class.blink::Element"*
  %68 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %69 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #7
  %70 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %71 = load %"class.v8::String"*, %"class.v8::String"** %70, align 8
  %72 = icmp eq %"class.v8::String"* %71, null
  br i1 %72, label %75, label %73, !prof !3

73:                                               ; preds = %66
  %74 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %71, i32 0) #7
  br label %102

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %102, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 acquire, align 4
  %82 = and i32 %81, 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %100, label %84

84:                                               ; preds = %79
  %85 = load atomic i32, i32* %80 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %102

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #7
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  call void @llvm.trap() #7
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %102

100:                                              ; preds = %79
  %101 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %77) #7
  br label %102

102:                                              ; preds = %73, %75, %84, %98, %100
  %103 = phi %"class.WTF::StringImpl"* [ %74, %73 ], [ %101, %100 ], [ %77, %84 ], [ %77, %98 ], [ null, %75 ]
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %104, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %67, %"class.blink::QualifiedName"* dereferenceable(8) %68, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #7
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #7
  br label %120

120:                                              ; preds = %102, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #7
  br label %121

121:                                              ; preds = %61, %120
  %122 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  store i8* null, i8** %122, align 8
  %124 = icmp eq i8* %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %123) #7
  br label %126

126:                                              ; preds = %125, %121
  %127 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #7
  br label %143

143:                                              ; preds = %126, %139, %142
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %63) #7
  %144 = load i8, i8* %23, align 8, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %147, label %146

146:                                              ; preds = %143
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #7
  br label %147

147:                                              ; preds = %143, %146
  %148 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %149 = load i64, i64* %148, align 8
  store i64 %149, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %150 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %151 = load i64*, i64** %150, align 8
  %152 = icmp eq i64* %151, null
  br i1 %152, label %162, label %153

153:                                              ; preds = %147
  %154 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %155 = bitcast %"class.v8::Isolate"* %154 to %"class.v8::internal::Isolate"*
  %156 = load i64, i64* %151, align 8
  %157 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %155, i64 %156) #7
  %158 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %154) #7
  br i1 %158, label %162, label %159

159:                                              ; preds = %153
  %160 = bitcast i64* %157 to %"class.v8::Value"*
  %161 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %154, %"class.v8::Value"* %160) #7
  br label %162

162:                                              ; preds = %159, %153, %147
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #7
  br label %178

178:                                              ; preds = %162, %174, %177
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element26SrcdocAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcdocAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.570"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #7
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element26SrcdocAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #7
  %21 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #7
  %22 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %23 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  %24 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %25 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %24, i64* %25, align 8
  store i8 0, i8* %22, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 -1
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = and i64 %29, -4294967296
  %34 = zext i32 %32 to i64
  %35 = or i64 %33, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load i16, i16* %37, align 2
  switch i16 %38, label %43 [
    i16 1057, label %39
    i16 1056, label %39
    i16 1040, label %39
  ]

39:                                               ; preds = %1, %1, %1
  %40 = add i64 %29, 19
  %41 = inttoptr i64 %40 to i8**
  %42 = load i8*, i8** %41, align 1
  br label %46

43:                                               ; preds = %1
  %44 = bitcast i64* %28 to %"class.v8::Object"*
  %45 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %44, i32 1) #7
  br label %46

46:                                               ; preds = %39, %43
  %47 = phi i8* [ %42, %39 ], [ %45, %43 ]
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = load i64*, i64** %5, align 8
  %53 = getelementptr inbounds i64, i64* %52, i64 1
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 160
  %56 = inttoptr i64 %55 to %"class.v8::Value"*
  br label %60

57:                                               ; preds = %46
  %58 = bitcast i64** %26 to %"class.v8::Value"**
  %59 = load %"class.v8::Value"*, %"class.v8::Value"** %58, align 8
  br label %60

60:                                               ; preds = %51, %57
  %61 = phi %"class.v8::Value"* [ %56, %51 ], [ %59, %57 ]
  %62 = bitcast i8* %47 to %"class.blink::EventTarget"*
  %63 = bitcast i8* %47 to %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)***
  %64 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)**, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %64, i64 10
  %66 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %65, align 8
  %67 = call %"class.blink::ExecutionContext"* %66(%"class.blink::EventTarget"* %62) #7
  %68 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #7
  %69 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_39IDLStringStringContextTrustedHTMLBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateEPNS_16ExecutionContextE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %61, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2, %"class.blink::ExecutionContext"* %67)
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %70, align 8
  %71 = load i32, i32* %18, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %60
  %74 = bitcast i8* %47 to %"class.blink::Element"*
  %75 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcdocAttrE, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::Element"* %74, %"class.blink::QualifiedName"* dereferenceable(8) %75, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #7
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  br label %77

77:                                               ; preds = %60, %73
  %78 = phi %"class.WTF::StringImpl"* [ %76, %73 ], [ %69, %60 ]
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #7
  br label %93

93:                                               ; preds = %77, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #7
  %94 = load i8, i8* %22, align 8, !range !2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #7
  br label %97

97:                                               ; preds = %93, %96
  %98 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %100 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %101 = load i64*, i64** %100, align 8
  %102 = icmp eq i64* %101, null
  br i1 %102, label %112, label %103

103:                                              ; preds = %97
  %104 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %105 = bitcast %"class.v8::Isolate"* %104 to %"class.v8::internal::Isolate"*
  %106 = load i64, i64* %101, align 8
  %107 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %105, i64 %106) #7
  %108 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %104) #7
  br i1 %108, label %112, label %109

109:                                              ; preds = %103
  %110 = bitcast i64* %107 to %"class.v8::Value"*
  %111 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %104, %"class.v8::Value"* %110) #7
  br label %112

112:                                              ; preds = %109, %103, %97
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #7
  br label %128

128:                                              ; preds = %112, %124, %127
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element24NameAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 1048576
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %87, label %29

29:                                               ; preds = %22
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %31 = getelementptr inbounds i8, i8* %23, i64 96
  %32 = bitcast i8* %31 to %"class.blink::ElementData"**
  %33 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %32, align 8
  %34 = icmp eq %"class.blink::ElementData"* %33, null
  br i1 %34, label %85, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %33, i64 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.blink::ElementData"* %33 to %"class.blink::UniqueElementData"*
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %33, i64 1, i32 1
  %43 = bitcast %"class.blink::Member.570"* %42 to %"class.blink::Attribute"**
  %44 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %41, i64 0, i32 2, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  br label %52

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %33, i64 1
  %49 = bitcast %"class.blink::ElementData"* %48 to %"class.blink::Attribute"*
  %50 = lshr i32 %37, 1
  %51 = and i32 %50, 268435455
  br label %52

52:                                               ; preds = %47, %40
  %53 = phi %"class.blink::Attribute"* [ %49, %47 ], [ %44, %40 ]
  %54 = phi i32 [ %51, %47 ], [ %46, %40 ]
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %53, i64 %55
  %57 = icmp eq i32 %54, 0
  br i1 %57, label %85, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %63

63:                                               ; preds = %78, %58
  %64 = phi %"class.blink::Attribute"* [ %53, %58 ], [ %79, %78 ]
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %60
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %70, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, %76
  br i1 %77, label %81, label %78

78:                                               ; preds = %73, %68
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %64, i64 1
  %80 = icmp eq %"class.blink::Attribute"* %79, %56
  br i1 %80, label %85, label %63

81:                                               ; preds = %73, %63
  %82 = icmp eq %"class.blink::Attribute"* %64, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %64, i64 0, i32 1
  br label %89

85:                                               ; preds = %78, %81, %52, %29
  %86 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %89

87:                                               ; preds = %22
  %88 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %89

89:                                               ; preds = %83, %85, %87
  %90 = phi %"class.WTF::AtomicString"* [ %88, %87 ], [ %86, %85 ], [ %84, %83 ]
  %91 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 1
  %94 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %90, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %97, label %103

97:                                               ; preds = %89
  %98 = getelementptr inbounds i64, i64* %92, i64 3
  %99 = load i64, i64* %93, align 8
  %100 = add i64 %99, 200
  %101 = inttoptr i64 %100 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %98, align 8
  br label %122

103:                                              ; preds = %89
  %104 = load i64, i64* %93, align 8
  %105 = add i64 %104, 8
  %106 = inttoptr i64 %105 to %"class.blink::V8PerIsolateData"**
  %107 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %107, i64 0, i32 5, i32 0, i32 0, i32 0
  %109 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %108, align 8
  %110 = getelementptr inbounds i64, i64* %92, i64 3
  %111 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %109, i64 0, i32 3, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, %95
  br i1 %113, label %114, label %121

114:                                              ; preds = %103
  %115 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %109, i64 0, i32 1, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %122, label %118

118:                                              ; preds = %114
  %119 = inttoptr i64 %116 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %110, align 8
  br label %122

121:                                              ; preds = %103
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %109, i64* %110, %"class.WTF::StringImpl"* nonnull %95) #7
  br label %122

122:                                              ; preds = %97, %114, %118, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element24NameAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element27SandboxAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLIFrameElement"*
  %25 = tail call %"class.blink::DOMTokenList"* @_ZNK5blink17HTMLIFrameElement7sandboxEv(%"class.blink::HTMLIFrameElement"* %24) #7
  %26 = getelementptr inbounds %"class.blink::DOMTokenList", %"class.blink::DOMTokenList"* %25, i64 0, i32 0
  %27 = icmp eq %"class.blink::DOMTokenList"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !3

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #7
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #7
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #7
  %49 = bitcast %"class.blink::DOMTokenList"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #7
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element27SandboxAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %73, !prof !3

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %14) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %17, align 2
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %19 = bitcast i8** %18 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)>, <2 x i8*>* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %24 = bitcast %"class.WTF::StringImpl"** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #7
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #7
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %11) #7
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #7
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %13
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #7
  br label %43

43:                                               ; preds = %13, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = icmp eq i64* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %43
  %48 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  %49 = bitcast %"class.v8::Isolate"* %48 to %"class.v8::internal::Isolate"*
  %50 = load i64, i64* %45, align 8
  %51 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %49, i64 %50) #7
  %52 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %48) #7
  br i1 %52, label %56, label %53

53:                                               ; preds = %47
  %54 = bitcast i64* %51 to %"class.v8::Value"*
  %55 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %48, %"class.v8::Value"* %54) #7
  br label %56

56:                                               ; preds = %53, %47, %43
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #7
  br label %72

72:                                               ; preds = %56, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %14) #7
  br label %150

73:                                               ; preds = %1
  %74 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %75 = load i64*, i64** %74, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 -1
  %77 = bitcast i64* %76 to %"class.v8::Object"*
  %78 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %9) #7
  %79 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %9, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 7) #7
  %80 = icmp eq %"class.v8::String"* %79, null
  br i1 %80, label %81, label %82, !prof !3

81:                                               ; preds = %73
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %82

82:                                               ; preds = %73, %81
  %83 = bitcast %"class.v8::String"* %79 to %"class.v8::Value"*
  %84 = tail call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %77, %"class.v8::Context"* %78, %"class.v8::Value"* %83) #7
  %85 = icmp eq %"class.v8::Value"* %84, null
  br i1 %85, label %150, label %86

86:                                               ; preds = %82
  %87 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %84) #7
  br i1 %87, label %129, label %88

88:                                               ; preds = %86
  %89 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %89) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 56, i1 false)
  %90 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 3, i16* %91, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %92, align 2
  %93 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %94 = bitcast i8** %93 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)>, <2 x i8*>* %94, align 8
  %95 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %95, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %96, align 8
  %97 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %97, align 8
  %98 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %99 = bitcast %"class.WTF::StringImpl"** %98 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 16, i1 false) #7
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.26, i64 0, i64 0)) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %100 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %101 = load i64*, i64** %100, align 8
  %102 = icmp eq i64* %101, null
  br i1 %102, label %112, label %103

103:                                              ; preds = %88
  %104 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %96, align 8
  %105 = bitcast %"class.v8::Isolate"* %104 to %"class.v8::internal::Isolate"*
  %106 = load i64, i64* %101, align 8
  %107 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %105, i64 %106) #7
  %108 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %104) #7
  br i1 %108, label %112, label %109

109:                                              ; preds = %103
  %110 = bitcast i64* %107 to %"class.v8::Value"*
  %111 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %104, %"class.v8::Value"* %110) #7
  br label %112

112:                                              ; preds = %109, %103, %88
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #7
  br label %128

128:                                              ; preds = %112, %124, %127
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %89) #7
  br label %150

129:                                              ; preds = %86
  %130 = load i32, i32* %10, align 8
  %131 = icmp sgt i32 %130, 0
  br i1 %131, label %138, label %132

132:                                              ; preds = %129
  %133 = load i64*, i64** %5, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 1
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %135, 160
  %137 = inttoptr i64 %136 to %"class.v8::Value"*
  br label %141

138:                                              ; preds = %129
  %139 = bitcast i64** %74 to %"class.v8::Value"**
  %140 = load %"class.v8::Value"*, %"class.v8::Value"** %139, align 8
  br label %141

141:                                              ; preds = %132, %138
  %142 = phi %"class.v8::Value"* [ %137, %132 ], [ %140, %138 ]
  %143 = bitcast %"class.v8::Value"* %84 to %"class.v8::Object"*
  %144 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %9, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i32 1, i32 5) #7
  %145 = icmp eq %"class.v8::String"* %144, null
  br i1 %145, label %146, label %147, !prof !3

146:                                              ; preds = %141
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %147

147:                                              ; preds = %141, %146
  %148 = bitcast %"class.v8::String"* %144 to %"class.v8::Value"*
  %149 = tail call i16 @_ZN2v86Object3SetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEES5_(%"class.v8::Object"* nonnull %143, %"class.v8::Context"* %78, %"class.v8::Value"* %148, %"class.v8::Value"* %142) #7
  br label %150

150:                                              ; preds = %82, %147, %128, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element35AllowFullscreenAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kAllowfullscreenAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 3
  %33 = getelementptr inbounds i64, i64* %31, i64 1
  br label %94

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %42 = bitcast %"class.blink::Member.570"* %41 to %"class.blink::Attribute"**
  %43 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  br label %51

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %48 = bitcast %"class.blink::ElementData"* %47 to %"class.blink::Attribute"*
  %49 = lshr i32 %36, 1
  %50 = and i32 %49, 268435455
  br label %51

51:                                               ; preds = %46, %39
  %52 = phi %"class.blink::Attribute"* [ %48, %46 ], [ %43, %39 ]
  %53 = phi i32 [ %50, %46 ], [ %45, %39 ]
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %82, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %78, %57
  %63 = phi %"class.blink::Attribute"* [ %52, %57 ], [ %79, %78 ]
  %64 = phi i32 [ 0, %57 ], [ %80, %78 ]
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %59
  br i1 %67, label %87, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %70, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, %76
  br i1 %77, label %87, label %78

78:                                               ; preds = %73, %68
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 1
  %80 = add i32 %64, 1
  %81 = icmp eq %"class.blink::Attribute"* %79, %55
  br i1 %81, label %82, label %62

82:                                               ; preds = %78, %51
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 3
  %86 = getelementptr inbounds i64, i64* %84, i64 1
  br label %94

87:                                               ; preds = %62, %73
  %88 = icmp eq i32 %64, -1
  %89 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 3
  %92 = getelementptr inbounds i64, i64* %90, i64 1
  %93 = select i1 %88, i64 192, i64 184
  br label %94

94:                                               ; preds = %87, %82, %29
  %95 = phi i64* [ %33, %29 ], [ %86, %82 ], [ %92, %87 ]
  %96 = phi i64* [ %32, %29 ], [ %85, %82 ], [ %91, %87 ]
  %97 = phi i64 [ 192, %29 ], [ 192, %82 ], [ %93, %87 ]
  %98 = load i64, i64* %95, align 8
  %99 = add i64 %98, %97
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %96, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element35AllowFullscreenAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kAllowfullscreenAttrE, align 8
  tail call void @_ZN5blink8bindings48PerformAttributeSetCEReactionsReflectTypeBooleanERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element25WidthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.570"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #7
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element25WidthAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element26HeightAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.570"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #7
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element26HeightAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element35ContentDocumentAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #7
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 -1
  %11 = bitcast i64* %10 to %"class.v8::Object"*
  %12 = load i64, i64* %10, align 8
  %13 = add i64 %12, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %12, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  switch i16 %21, label %26 [
    i16 1057, label %22
    i16 1056, label %22
    i16 1040, label %22
  ]

22:                                               ; preds = %1, %1, %1
  %23 = add i64 %12, 19
  %24 = inttoptr i64 %23 to i8**
  %25 = load i8*, i8** %24, align 1
  br label %28

26:                                               ; preds = %1
  %27 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %11, i32 1) #7
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi i8* [ %25, %22 ], [ %27, %26 ]
  %30 = bitcast i8* %29 to %"class.blink::HTMLFrameOwnerElement"*
  %31 = tail call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %30) #7
  %32 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink16ToLocalDOMWindowEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #7
  %33 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %31, i64 0, i32 0, i32 0
  %34 = tail call zeroext i1 @_ZN5blink15BindingSecurity19ShouldAllowAccessToEPKNS_14LocalDOMWindowEPKNS_4NodeENS_26BindingSecurityForPlatform17ErrorReportOptionE(%"class.blink::LocalDOMWindow"* %32, %"class.blink::Node"* %33, i32 0) #7
  br i1 %34, label %52, label %35

35:                                               ; preds = %28
  %36 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #7
  %37 = icmp eq %"class.blink::ExecutionContext"* %36, null
  %38 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %36, i64 0, i32 3
  %39 = icmp eq %"class.blink::UseCounter"* %38, null
  %40 = or i1 %37, %39
  br i1 %40, label %46, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.blink::UseCounter"* %38 to void (%"class.blink::UseCounter"*, i32)***
  %43 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %43, i64 3
  %45 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %44, align 8
  tail call void %45(%"class.blink::UseCounter"* nonnull %38, i32 2407) #7
  br label %46

46:                                               ; preds = %35, %41
  %47 = load i64*, i64** %2, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 176
  %51 = inttoptr i64 %50 to i64*
  br label %87

52:                                               ; preds = %28
  %53 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %11) #7
  %54 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %53)
  %55 = tail call %"class.blink::DOMWindow"* @_ZNK5blink21HTMLFrameOwnerElement13contentWindowEv(%"class.blink::HTMLFrameOwnerElement"* %30) #7
  %56 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %55, i64 0, i32 1, i32 0, i32 0
  %57 = bitcast %"class.blink::Frame"** %56 to %"class.blink::LocalFrame"**
  %58 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %54, i64 0, i32 2, i32 0
  %60 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %59, align 8
  %61 = tail call %"class.blink::ScriptState"* @_ZN5blink13ToScriptStateEPNS_10LocalFrameERNS_15DOMWrapperWorldE(%"class.blink::LocalFrame"* %58, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %60) #7
  %62 = icmp eq %"class.blink::Document"* %31, null
  br i1 %62, label %63, label %68

63:                                               ; preds = %52
  %64 = bitcast %"class.blink::ScriptState"* %61 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, 176
  %67 = inttoptr i64 %66 to %"class.v8::Value"*
  br label %81

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %61, i64 0, i32 0
  %71 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %70, align 8
  %72 = tail call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* %69, %"class.v8::Isolate"* %71) #7
  %73 = bitcast %"class.v8::Object"* %72 to %"class.v8::Value"*
  %74 = icmp eq %"class.v8::Object"* %72, null
  br i1 %74, label %75, label %81

75:                                               ; preds = %68
  %76 = bitcast %"class.blink::Document"* %31 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %77 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %76, align 8
  %78 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %77, i64 7
  %79 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %78, align 8
  %80 = tail call %"class.v8::Value"* %79(%"class.blink::ScriptWrappable"* %69, %"class.blink::ScriptState"* %61) #7
  br label %81

81:                                               ; preds = %63, %68, %75
  %82 = phi %"class.v8::Value"* [ %67, %63 ], [ %80, %75 ], [ %73, %68 ]
  %83 = icmp eq %"class.v8::Value"* %82, null
  br i1 %83, label %92, label %84

84:                                               ; preds = %81
  %85 = load i64*, i64** %2, align 8
  %86 = bitcast %"class.v8::Value"* %82 to i64*
  br label %87

87:                                               ; preds = %46, %84
  %88 = phi i64* [ %86, %84 ], [ %51, %46 ]
  %89 = phi i64* [ %85, %84 ], [ %47, %46 ]
  %90 = getelementptr inbounds i64, i64* %89, i64 3
  %91 = load i64, i64* %88, align 8
  store i64 %91, i64* %90, align 8
  br label %92

92:                                               ; preds = %87, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element33ContentWindowAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLFrameOwnerElement"*
  %25 = tail call %"class.blink::DOMWindow"* @_ZNK5blink21HTMLFrameOwnerElement13contentWindowEv(%"class.blink::HTMLFrameOwnerElement"* %24) #7
  %26 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::DOMWindow"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !3

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %61

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #7
  br i1 %42, label %61, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %28, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 1
  %46 = bitcast i64* %45 to %"class.v8::Isolate"**
  %47 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %48 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %47) #7
  %49 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %48) #7
  %50 = bitcast %"class.blink::DOMWindow"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %51 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, i64 7
  %53 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %52, align 8
  %54 = tail call %"class.v8::Value"* %53(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %49) #7
  %55 = icmp eq %"class.v8::Value"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %43
  %57 = load i64*, i64** %28, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 3
  %59 = bitcast %"class.v8::Value"* %54 to i64*
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %58, align 8
  br label %61

61:                                               ; preds = %31, %37, %43, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element34ReferrerPolicyAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #7
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #7
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %26, align 8
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kReferrerpolicyAttrE, align 8
  %28 = getelementptr inbounds i8, i8* %24, i64 96
  %29 = bitcast i8* %28 to %"class.blink::ElementData"**
  %30 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %29, align 8
  %31 = icmp eq %"class.blink::ElementData"* %30, null
  br i1 %31, label %82, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %30, i64 0, i32 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.blink::ElementData"* %30 to %"class.blink::UniqueElementData"*
  %39 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %30, i64 1, i32 1
  %40 = bitcast %"class.blink::Member.570"* %39 to %"class.blink::Attribute"**
  %41 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %38, i64 0, i32 2, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  br label %49

44:                                               ; preds = %32
  %45 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %30, i64 1
  %46 = bitcast %"class.blink::ElementData"* %45 to %"class.blink::Attribute"*
  %47 = lshr i32 %34, 1
  %48 = and i32 %47, 268435455
  br label %49

49:                                               ; preds = %44, %37
  %50 = phi %"class.blink::Attribute"* [ %46, %44 ], [ %41, %37 ]
  %51 = phi i32 [ %48, %44 ], [ %43, %37 ]
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 %52
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %82, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %60

60:                                               ; preds = %75, %55
  %61 = phi %"class.blink::Attribute"* [ %50, %55 ], [ %76, %75 ]
  %62 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %62, align 8
  %64 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %63, %57
  br i1 %64, label %78, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %67, %68
  br i1 %69, label %70, label %75

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 4, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %72, %73
  br i1 %74, label %78, label %75

75:                                               ; preds = %70, %65
  %76 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %61, i64 1
  %77 = icmp eq %"class.blink::Attribute"* %76, %53
  br i1 %77, label %82, label %60

78:                                               ; preds = %70, %60
  %79 = icmp eq %"class.blink::Attribute"* %61, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %61, i64 0, i32 1
  br label %84

82:                                               ; preds = %75, %78, %49, %23
  %83 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %84

84:                                               ; preds = %80, %82
  %85 = phi %"class.WTF::AtomicString"* [ %83, %82 ], [ %81, %80 ]
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %26, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #7
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !3

103:                                              ; preds = %94
  tail call void @llvm.trap() #7
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %106

106:                                              ; preds = %84, %89, %104
  %107 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* nonnull %2) #7
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  %109 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %110 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  br i1 %108, label %112, label %149

112:                                              ; preds = %106
  %113 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %113, label %131, label %114

114:                                              ; preds = %112
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i33
  %123 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %122, i33 1) #7
  %124 = extractvalue { i33, i1 } %123, 1
  %125 = extractvalue { i33, i1 } %123, 0
  %126 = icmp slt i33 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %129, !prof !3

128:                                              ; preds = %119
  call void @llvm.trap() #7
  unreachable

129:                                              ; preds = %119
  %130 = trunc i33 %125 to i32
  store i32 %130, i32* %120, align 4
  br label %131

131:                                              ; preds = %129, %114, %112
  %132 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %133 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %132, i64* %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %254, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %252

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #7
  br label %252

149:                                              ; preds = %106
  %150 = icmp eq %"class.WTF::StringImpl"* %107, %111
  br i1 %150, label %176, label %151

151:                                              ; preds = %149
  %152 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink8keywords11kNoReferrerE, align 8
  %153 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %152, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %107, %154
  br i1 %155, label %176, label %156

156:                                              ; preds = %151
  %157 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink8keywords7kOriginE, align 8
  %158 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %157, i64 0, i32 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %107, %159
  br i1 %160, label %176, label %161

161:                                              ; preds = %156
  %162 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink8keywords24kNoReferrerWhenDowngradeE, align 8
  %163 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %162, i64 0, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %107, %164
  br i1 %165, label %176, label %166

166:                                              ; preds = %161
  %167 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink8keywords22kOriginWhenCrossOriginE, align 8
  %168 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %107, %169
  br i1 %170, label %176, label %171

171:                                              ; preds = %166
  %172 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink8keywords10kUnsafeUrlE, align 8
  %173 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %172, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %107, %174
  br i1 %175, label %176, label %215

176:                                              ; preds = %149, %151, %156, %161, %166, %171
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %193

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = zext i32 %183 to i33
  %185 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %184, i33 1) #7
  %186 = extractvalue { i33, i1 } %185, 1
  %187 = extractvalue { i33, i1 } %185, 0
  %188 = icmp slt i33 %187, 0
  %189 = or i1 %186, %188
  br i1 %189, label %190, label %191, !prof !3

190:                                              ; preds = %181
  call void @llvm.trap() #7
  unreachable

191:                                              ; preds = %181
  %192 = trunc i33 %187 to i32
  store i32 %192, i32* %182, align 4
  br label %193

193:                                              ; preds = %191, %176
  %194 = ptrtoint %"class.WTF::StringImpl"* %107 to i64
  %195 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %194, i64* %195, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %198, label %202

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %200 = load i64*, i64** %199, align 8
  %201 = getelementptr inbounds i64, i64* %200, i64 1
  br label %266

202:                                              ; preds = %193
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  br i1 %206, label %209, label %211

209:                                              ; preds = %202
  %210 = add i32 %208, -1
  store i32 %210, i32* %207, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %210, %209 ], [ %208, %202 ]
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %252

214:                                              ; preds = %211
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #7
  br label %252

215:                                              ; preds = %171
  %216 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %216, label %234, label %217

217:                                              ; preds = %215
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %234

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = zext i32 %224 to i33
  %226 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %225, i33 1) #7
  %227 = extractvalue { i33, i1 } %226, 1
  %228 = extractvalue { i33, i1 } %226, 0
  %229 = icmp slt i33 %228, 0
  %230 = or i1 %227, %229
  br i1 %230, label %231, label %232, !prof !3

231:                                              ; preds = %222
  call void @llvm.trap() #7
  unreachable

232:                                              ; preds = %222
  %233 = trunc i33 %228 to i32
  store i32 %233, i32* %223, align 4
  br label %234

234:                                              ; preds = %232, %217, %215
  %235 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %236 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %235, i64* %236, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %254, label %239

239:                                              ; preds = %234
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #7
  br label %252

252:                                              ; preds = %145, %148, %211, %214, %248, %251
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  br label %254

254:                                              ; preds = %252, %234, %131
  %255 = phi %"class.WTF::StringImpl"* [ %253, %252 ], [ %111, %234 ], [ %111, %131 ]
  %256 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %257 = load i64*, i64** %256, align 8
  %258 = getelementptr inbounds i64, i64* %257, i64 1
  %259 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %259, label %260, label %266

260:                                              ; preds = %254
  %261 = getelementptr inbounds i64, i64* %257, i64 3
  %262 = load i64, i64* %258, align 8
  %263 = add i64 %262, 200
  %264 = inttoptr i64 %263 to i64*
  %265 = load i64, i64* %264, align 8
  store i64 %265, i64* %261, align 8
  br label %288

266:                                              ; preds = %198, %254
  %267 = phi i64* [ %201, %198 ], [ %258, %254 ]
  %268 = phi i64* [ %200, %198 ], [ %257, %254 ]
  %269 = phi %"class.WTF::StringImpl"* [ %107, %198 ], [ %255, %254 ]
  %270 = load i64, i64* %267, align 8
  %271 = add i64 %270, 8
  %272 = inttoptr i64 %271 to %"class.blink::V8PerIsolateData"**
  %273 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %272, align 8
  %274 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %273, i64 0, i32 5, i32 0, i32 0, i32 0
  %275 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %274, align 8
  %276 = getelementptr inbounds i64, i64* %268, i64 3
  %277 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %275, i64 0, i32 3, i32 0
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %277, align 8
  %279 = icmp eq %"class.WTF::StringImpl"* %278, %269
  br i1 %279, label %280, label %287

280:                                              ; preds = %266
  %281 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %275, i64 0, i32 1, i32 0
  %282 = load i64, i64* %281, align 8
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %288, label %284

284:                                              ; preds = %280
  %285 = inttoptr i64 %282 to i64*
  %286 = load i64, i64* %285, align 8
  store i64 %286, i64* %276, align 8
  br label %288

287:                                              ; preds = %266
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %275, i64* %276, %"class.WTF::StringImpl"* nonnull %269) #7
  br label %288

288:                                              ; preds = %260, %280, %284, %287
  br i1 %108, label %302, label %289

289:                                              ; preds = %288
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load atomic i32, i32* %290 monotonic, align 4
  %292 = and i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %295 = load i32, i32* %294, align 4
  br i1 %293, label %296, label %298

296:                                              ; preds = %289
  %297 = add i32 %295, -1
  store i32 %297, i32* %294, align 4
  br label %298

298:                                              ; preds = %296, %289
  %299 = phi i32 [ %297, %296 ], [ %295, %289 ]
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %302

301:                                              ; preds = %298
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #7
  br label %302

302:                                              ; preds = %288, %298, %301
  %303 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %304 = icmp eq %"class.WTF::StringImpl"* %303, null
  br i1 %304, label %318, label %305

305:                                              ; preds = %302
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load atomic i32, i32* %306 monotonic, align 4
  %308 = and i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 0
  %311 = load i32, i32* %310, align 4
  br i1 %309, label %312, label %314

312:                                              ; preds = %305
  %313 = add i32 %311, -1
  store i32 %313, i32* %310, align 4
  br label %314

314:                                              ; preds = %312, %305
  %315 = phi i32 [ %313, %312 ], [ %311, %305 ]
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %318

317:                                              ; preds = %314
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %303) #7
  br label %318

318:                                              ; preds = %302, %314, %317
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element34ReferrerPolicyAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kReferrerpolicyAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element23CspAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kCspAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.570"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #7
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element23CspAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kCspAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element25AllowAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAllowAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.570"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #7
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element25AllowAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAllowAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element33FeaturePolicyAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLIFrameElement"*
  %25 = tail call %"class.blink::DOMFeaturePolicy"* @_ZN5blink17HTMLIFrameElement13featurePolicyEv(%"class.blink::HTMLIFrameElement"* %24) #7
  %26 = getelementptr inbounds %"class.blink::DOMFeaturePolicy", %"class.blink::DOMFeaturePolicy"* %25, i64 0, i32 0
  %27 = icmp eq %"class.blink::DOMFeaturePolicy"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !3

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #7
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #7
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #7
  %49 = bitcast %"class.blink::DOMFeaturePolicy"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #7
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element25AlignAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAlignAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.570"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #7
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element25AlignAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAlignAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element29ScrollingAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kScrollingAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.570"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #7
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element29ScrollingAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kScrollingAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element31FrameBorderAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kFrameborderAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.570"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #7
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element31FrameBorderAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kFrameborderAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element28LongDescAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #7
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %25) #7
  %26 = bitcast i8* %24 to %"class.blink::Element"*
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kLongdescAttrE, align 8
  call void @_ZNK5blink7Element15GetURLAttributeERKNS_13QualifiedNameE(%"class.blink::KURL"* nonnull sret %2, %"class.blink::Element"* %26, %"class.blink::QualifiedName"* dereferenceable(8) %27) #7
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 1
  %31 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 4, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %40

34:                                               ; preds = %23
  %35 = getelementptr inbounds i64, i64* %29, i64 3
  %36 = load i64, i64* %30, align 8
  %37 = add i64 %36, 200
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %35, align 8
  br label %59

40:                                               ; preds = %23
  %41 = load i64, i64* %30, align 8
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to %"class.blink::V8PerIsolateData"**
  %44 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %44, i64 0, i32 5, i32 0, i32 0, i32 0
  %46 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %45, align 8
  %47 = getelementptr inbounds i64, i64* %29, i64 3
  %48 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %46, i64 0, i32 3, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, %32
  br i1 %50, label %51, label %58

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %46, i64 0, i32 1, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = inttoptr i64 %53 to i64*
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %47, align 8
  br label %59

58:                                               ; preds = %40
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %46, i64* %47, %"class.WTF::StringImpl"* nonnull %32) #7
  br label %59

59:                                               ; preds = %34, %51, %55, %58
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %25) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element28LongDescAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #7
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #7
  %23 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %26 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %25, i64* %26, align 8
  store i8 0, i8* %23, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 -1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i64 %30, -4294967296
  %35 = zext i32 %33 to i64
  %36 = or i64 %34, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load i16, i16* %38, align 2
  switch i16 %39, label %44 [
    i16 1057, label %40
    i16 1056, label %40
    i16 1040, label %40
  ]

40:                                               ; preds = %1, %1, %1
  %41 = add i64 %30, 19
  %42 = inttoptr i64 %41 to i8**
  %43 = load i8*, i8** %42, align 1
  br label %47

44:                                               ; preds = %1
  %45 = bitcast i64* %29 to %"class.v8::Object"*
  %46 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %45, i32 1) #7
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i8* [ %43, %40 ], [ %46, %44 ]
  %49 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %47
  %53 = load i64*, i64** %6, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 160
  %57 = inttoptr i64 %56 to %"class.v8::Value"*
  br label %61

58:                                               ; preds = %47
  %59 = bitcast i64** %27 to %"class.v8::Value"**
  %60 = load %"class.v8::Value"*, %"class.v8::Value"** %59, align 8
  br label %61

61:                                               ; preds = %52, %58
  %62 = phi %"class.v8::Value"* [ %57, %52 ], [ %60, %58 ]
  %63 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %63) #7
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %62, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %64 = load i32, i32* %19, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %121

66:                                               ; preds = %61
  %67 = bitcast i8* %48 to %"class.blink::Element"*
  %68 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kLongdescAttrE, align 8
  %69 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #7
  %70 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %71 = load %"class.v8::String"*, %"class.v8::String"** %70, align 8
  %72 = icmp eq %"class.v8::String"* %71, null
  br i1 %72, label %75, label %73, !prof !3

73:                                               ; preds = %66
  %74 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %71, i32 0) #7
  br label %102

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %102, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 acquire, align 4
  %82 = and i32 %81, 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %100, label %84

84:                                               ; preds = %79
  %85 = load atomic i32, i32* %80 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %102

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #7
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  call void @llvm.trap() #7
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %102

100:                                              ; preds = %79
  %101 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %77) #7
  br label %102

102:                                              ; preds = %73, %75, %84, %98, %100
  %103 = phi %"class.WTF::StringImpl"* [ %74, %73 ], [ %101, %100 ], [ %77, %84 ], [ %77, %98 ], [ null, %75 ]
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %104, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %67, %"class.blink::QualifiedName"* dereferenceable(8) %68, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #7
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #7
  br label %120

120:                                              ; preds = %102, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #7
  br label %121

121:                                              ; preds = %61, %120
  %122 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  store i8* null, i8** %122, align 8
  %124 = icmp eq i8* %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %123) #7
  br label %126

126:                                              ; preds = %125, %121
  %127 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #7
  br label %143

143:                                              ; preds = %126, %139, %142
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %63) #7
  %144 = load i8, i8* %23, align 8, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %147, label %146

146:                                              ; preds = %143
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #7
  br label %147

147:                                              ; preds = %143, %146
  %148 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %149 = load i64, i64* %148, align 8
  store i64 %149, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %150 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %151 = load i64*, i64** %150, align 8
  %152 = icmp eq i64* %151, null
  br i1 %152, label %162, label %153

153:                                              ; preds = %147
  %154 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %155 = bitcast %"class.v8::Isolate"* %154 to %"class.v8::internal::Isolate"*
  %156 = load i64, i64* %151, align 8
  %157 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %155, i64 %156) #7
  %158 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %154) #7
  br i1 %158, label %162, label %159

159:                                              ; preds = %153
  %160 = bitcast i64* %157 to %"class.v8::Value"*
  %161 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %154, %"class.v8::Value"* %160) #7
  br label %162

162:                                              ; preds = %159, %153, %147
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #7
  br label %178

178:                                              ; preds = %162, %174, %177
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element32MarginHeightAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kMarginheightAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.570"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #7
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element32MarginHeightAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kMarginheightAttrE, align 8
  tail call void @_ZN5blink8bindings70PerformAttributeSetCEReactionsReflectTypeStringLegacyNullToEmptyStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element31MarginWidthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kMarginwidthAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.570"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #7
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element31MarginWidthAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kMarginwidthAttrE, align 8
  tail call void @_ZN5blink8bindings70PerformAttributeSetCEReactionsReflectTypeStringLegacyNullToEmptyStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i64 0, i64 0)) #7
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element31GetSVGDocumentOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #7
  %9 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds i64, i64* %10, i64 -1
  %12 = bitcast i64* %11 to %"class.v8::Object"*
  %13 = load i64, i64* %11, align 8
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %13, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  switch i16 %22, label %27 [
    i16 1057, label %23
    i16 1056, label %23
    i16 1040, label %23
  ]

23:                                               ; preds = %1, %1, %1
  %24 = add i64 %13, 19
  %25 = inttoptr i64 %24 to i8**
  %26 = load i8*, i8** %25, align 1
  br label %29

27:                                               ; preds = %1
  %28 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %12, i32 1) #7
  br label %29

29:                                               ; preds = %23, %27
  %30 = phi i8* [ %26, %23 ], [ %28, %27 ]
  %31 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 56, i1 false)
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %36 = bitcast i8** %35 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0)>, <2 x i8*>* %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %41 = bitcast %"class.WTF::StringImpl"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #7
  %42 = bitcast i8* %30 to %"class.blink::HTMLFrameOwnerElement"*
  %43 = call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement14getSVGDocumentERNS_14ExceptionStateE(%"class.blink::HTMLFrameOwnerElement"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #7
  %44 = load i32, i32* %39, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %106

46:                                               ; preds = %29
  %47 = call %"class.blink::LocalDOMWindow"* @_ZN5blink16ToLocalDOMWindowEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %8) #7
  %48 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %43, i64 0, i32 0, i32 0
  %49 = call zeroext i1 @_ZN5blink15BindingSecurity19ShouldAllowAccessToEPKNS_14LocalDOMWindowEPKNS_4NodeENS_26BindingSecurityForPlatform17ErrorReportOptionE(%"class.blink::LocalDOMWindow"* %47, %"class.blink::Node"* %48, i32 0) #7
  br i1 %49, label %69, label %50

50:                                               ; preds = %46
  %51 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #7
  %52 = icmp eq %"class.blink::ExecutionContext"* %51, null
  %53 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %51, i64 0, i32 3
  %54 = icmp eq %"class.blink::UseCounter"* %53, null
  %55 = or i1 %52, %54
  br i1 %55, label %61, label %56

56:                                               ; preds = %50
  %57 = bitcast %"class.blink::UseCounter"* %53 to void (%"class.blink::UseCounter"*, i32)***
  %58 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %58, i64 3
  %60 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %59, align 8
  call void %60(%"class.blink::UseCounter"* nonnull %53, i32 2408) #7
  br label %61

61:                                               ; preds = %50, %56
  %62 = load i64*, i64** %3, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 3
  %64 = getelementptr inbounds i64, i64* %62, i64 1
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, 176
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %63, align 8
  br label %106

69:                                               ; preds = %46
  %70 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %12) #7
  %71 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %70)
  %72 = call %"class.blink::DOMWindow"* @_ZNK5blink21HTMLFrameOwnerElement13contentWindowEv(%"class.blink::HTMLFrameOwnerElement"* %42) #7
  %73 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %72, i64 0, i32 1, i32 0, i32 0
  %74 = bitcast %"class.blink::Frame"** %73 to %"class.blink::LocalFrame"**
  %75 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %71, i64 0, i32 2, i32 0
  %77 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %76, align 8
  %78 = call %"class.blink::ScriptState"* @_ZN5blink13ToScriptStateEPNS_10LocalFrameERNS_15DOMWrapperWorldE(%"class.blink::LocalFrame"* %75, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %77) #7
  %79 = icmp eq %"class.blink::Document"* %43, null
  br i1 %79, label %80, label %85

80:                                               ; preds = %69
  %81 = bitcast %"class.blink::ScriptState"* %78 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 176
  %84 = inttoptr i64 %83 to %"class.v8::Value"*
  br label %98

85:                                               ; preds = %69
  %86 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %78, i64 0, i32 0
  %88 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %87, align 8
  %89 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* %86, %"class.v8::Isolate"* %88) #7
  %90 = bitcast %"class.v8::Object"* %89 to %"class.v8::Value"*
  %91 = icmp eq %"class.v8::Object"* %89, null
  br i1 %91, label %92, label %98

92:                                               ; preds = %85
  %93 = bitcast %"class.blink::Document"* %43 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %94 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %93, align 8
  %95 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %94, i64 7
  %96 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %95, align 8
  %97 = call %"class.v8::Value"* %96(%"class.blink::ScriptWrappable"* %86, %"class.blink::ScriptState"* %78) #7
  br label %98

98:                                               ; preds = %80, %85, %92
  %99 = phi %"class.v8::Value"* [ %84, %80 ], [ %97, %92 ], [ %90, %85 ]
  %100 = icmp eq %"class.v8::Value"* %99, null
  br i1 %100, label %106, label %101

101:                                              ; preds = %98
  %102 = load i64*, i64** %3, align 8
  %103 = getelementptr inbounds i64, i64* %102, i64 3
  %104 = bitcast %"class.v8::Value"* %99 to i64*
  %105 = load i64, i64* %104, align 8
  store i64 %105, i64* %103, align 8
  br label %106

106:                                              ; preds = %98, %29, %101, %61
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %107 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %108 = load i64*, i64** %107, align 8
  %109 = icmp eq i64* %108, null
  br i1 %109, label %119, label %110

110:                                              ; preds = %106
  %111 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %38, align 8
  %112 = bitcast %"class.v8::Isolate"* %111 to %"class.v8::internal::Isolate"*
  %113 = load i64, i64* %108, align 8
  %114 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %112, i64 %113) #7
  %115 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %111) #7
  br i1 %115, label %119, label %116

116:                                              ; preds = %110
  %117 = bitcast i64* %114 to %"class.v8::Value"*
  %118 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %111, %"class.v8::Value"* %117) #7
  br label %119

119:                                              ; preds = %116, %110, %106
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #7
  br label %135

135:                                              ; preds = %119, %131, %134
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #7
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.182"* byval(%"class.base::span.182") align 8) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element27LoadingAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #7
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #7
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %26, align 8
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kLoadingAttrE, align 8
  %28 = getelementptr inbounds i8, i8* %24, i64 96
  %29 = bitcast i8* %28 to %"class.blink::ElementData"**
  %30 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %29, align 8
  %31 = icmp eq %"class.blink::ElementData"* %30, null
  br i1 %31, label %82, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %30, i64 0, i32 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.blink::ElementData"* %30 to %"class.blink::UniqueElementData"*
  %39 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %30, i64 1, i32 1
  %40 = bitcast %"class.blink::Member.570"* %39 to %"class.blink::Attribute"**
  %41 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %38, i64 0, i32 2, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  br label %49

44:                                               ; preds = %32
  %45 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %30, i64 1
  %46 = bitcast %"class.blink::ElementData"* %45 to %"class.blink::Attribute"*
  %47 = lshr i32 %34, 1
  %48 = and i32 %47, 268435455
  br label %49

49:                                               ; preds = %44, %37
  %50 = phi %"class.blink::Attribute"* [ %46, %44 ], [ %41, %37 ]
  %51 = phi i32 [ %48, %44 ], [ %43, %37 ]
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 %52
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %82, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %60

60:                                               ; preds = %75, %55
  %61 = phi %"class.blink::Attribute"* [ %50, %55 ], [ %76, %75 ]
  %62 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %62, align 8
  %64 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %63, %57
  br i1 %64, label %78, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %67, %68
  br i1 %69, label %70, label %75

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 4, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %72, %73
  br i1 %74, label %78, label %75

75:                                               ; preds = %70, %65
  %76 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %61, i64 1
  %77 = icmp eq %"class.blink::Attribute"* %76, %53
  br i1 %77, label %82, label %60

78:                                               ; preds = %70, %60
  %79 = icmp eq %"class.blink::Attribute"* %61, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %61, i64 0, i32 1
  br label %84

82:                                               ; preds = %75, %78, %49, %23
  %83 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %84

84:                                               ; preds = %80, %82
  %85 = phi %"class.WTF::AtomicString"* [ %83, %82 ], [ %81, %80 ]
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %26, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #7
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !3

103:                                              ; preds = %94
  tail call void @llvm.trap() #7
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %106

106:                                              ; preds = %84, %89, %104
  %107 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* nonnull %2) #7
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %109, label %149

109:                                              ; preds = %106
  %110 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink8keywords5kAutoE, align 8
  %111 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %131, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i33
  %123 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %122, i33 1) #7
  %124 = extractvalue { i33, i1 } %123, 1
  %125 = extractvalue { i33, i1 } %123, 0
  %126 = icmp slt i33 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %129, !prof !3

128:                                              ; preds = %119
  call void @llvm.trap() #7
  unreachable

129:                                              ; preds = %119
  %130 = trunc i33 %125 to i32
  store i32 %130, i32* %120, align 4
  br label %131

131:                                              ; preds = %129, %114, %109
  %132 = ptrtoint %"class.WTF::StringImpl"* %112 to i64
  %133 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %132, i64* %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %242, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %240

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #7
  br label %240

149:                                              ; preds = %106
  %150 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink8keywords5kLazyE, align 8
  %151 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %150, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %107, %152
  br i1 %153, label %164, label %154

154:                                              ; preds = %149
  %155 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink8keywords6kEagerE, align 8
  %156 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %155, i64 0, i32 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %107, %157
  br i1 %158, label %164, label %159

159:                                              ; preds = %154
  %160 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink8keywords5kAutoE, align 8
  %161 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %160, i64 0, i32 0, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %107, %162
  br i1 %163, label %164, label %203

164:                                              ; preds = %149, %154, %159
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %181

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = zext i32 %171 to i33
  %173 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %172, i33 1) #7
  %174 = extractvalue { i33, i1 } %173, 1
  %175 = extractvalue { i33, i1 } %173, 0
  %176 = icmp slt i33 %175, 0
  %177 = or i1 %174, %176
  br i1 %177, label %178, label %179, !prof !3

178:                                              ; preds = %169
  call void @llvm.trap() #7
  unreachable

179:                                              ; preds = %169
  %180 = trunc i33 %175 to i32
  store i32 %180, i32* %170, align 4
  br label %181

181:                                              ; preds = %179, %164
  %182 = ptrtoint %"class.WTF::StringImpl"* %107 to i64
  %183 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %182, i64* %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %186, label %190

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %188 = load i64*, i64** %187, align 8
  %189 = getelementptr inbounds i64, i64* %188, i64 1
  br label %254

190:                                              ; preds = %181
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %240

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #7
  br label %240

203:                                              ; preds = %159
  %204 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %204, label %222, label %205

205:                                              ; preds = %203
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %222

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = zext i32 %212 to i33
  %214 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %213, i33 1) #7
  %215 = extractvalue { i33, i1 } %214, 1
  %216 = extractvalue { i33, i1 } %214, 0
  %217 = icmp slt i33 %216, 0
  %218 = or i1 %215, %217
  br i1 %218, label %219, label %220, !prof !3

219:                                              ; preds = %210
  call void @llvm.trap() #7
  unreachable

220:                                              ; preds = %210
  %221 = trunc i33 %216 to i32
  store i32 %221, i32* %211, align 4
  br label %222

222:                                              ; preds = %220, %205, %203
  %223 = ptrtoint %"class.WTF::StringImpl"* %162 to i64
  %224 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %223, i64* %224, align 8
  %226 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %226, label %242, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  br i1 %231, label %234, label %236

234:                                              ; preds = %227
  %235 = add i32 %233, -1
  store i32 %235, i32* %232, align 4
  br label %236

236:                                              ; preds = %234, %227
  %237 = phi i32 [ %235, %234 ], [ %233, %227 ]
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %236
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %225) #7
  br label %240

240:                                              ; preds = %145, %148, %199, %202, %236, %239
  %241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  br label %242

242:                                              ; preds = %240, %222, %131
  %243 = phi %"class.WTF::StringImpl"* [ %241, %240 ], [ %162, %222 ], [ %112, %131 ]
  %244 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %245 = load i64*, i64** %244, align 8
  %246 = getelementptr inbounds i64, i64* %245, i64 1
  %247 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %247, label %248, label %254

248:                                              ; preds = %242
  %249 = getelementptr inbounds i64, i64* %245, i64 3
  %250 = load i64, i64* %246, align 8
  %251 = add i64 %250, 200
  %252 = inttoptr i64 %251 to i64*
  %253 = load i64, i64* %252, align 8
  store i64 %253, i64* %249, align 8
  br label %276

254:                                              ; preds = %186, %242
  %255 = phi i64* [ %189, %186 ], [ %246, %242 ]
  %256 = phi i64* [ %188, %186 ], [ %245, %242 ]
  %257 = phi %"class.WTF::StringImpl"* [ %107, %186 ], [ %243, %242 ]
  %258 = load i64, i64* %255, align 8
  %259 = add i64 %258, 8
  %260 = inttoptr i64 %259 to %"class.blink::V8PerIsolateData"**
  %261 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %260, align 8
  %262 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %261, i64 0, i32 5, i32 0, i32 0, i32 0
  %263 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %262, align 8
  %264 = getelementptr inbounds i64, i64* %256, i64 3
  %265 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %263, i64 0, i32 3, i32 0
  %266 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %265, align 8
  %267 = icmp eq %"class.WTF::StringImpl"* %266, %257
  br i1 %267, label %268, label %275

268:                                              ; preds = %254
  %269 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %263, i64 0, i32 1, i32 0
  %270 = load i64, i64* %269, align 8
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %276, label %272

272:                                              ; preds = %268
  %273 = inttoptr i64 %270 to i64*
  %274 = load i64, i64* %273, align 8
  store i64 %274, i64* %264, align 8
  br label %276

275:                                              ; preds = %254
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %263, i64* %264, %"class.WTF::StringImpl"* nonnull %257) #7
  br label %276

276:                                              ; preds = %248, %268, %272, %275
  br i1 %108, label %290, label %277

277:                                              ; preds = %276
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #7
  br label %290

290:                                              ; preds = %276, %286, %289
  %291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %292 = icmp eq %"class.WTF::StringImpl"* %291, null
  br i1 %292, label %306, label %293

293:                                              ; preds = %290
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  br i1 %297, label %300, label %302

300:                                              ; preds = %293
  %301 = add i32 %299, -1
  store i32 %301, i32* %298, align 4
  br label %302

302:                                              ; preds = %300, %293
  %303 = phi i32 [ %301, %300 ], [ %299, %293 ]
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %306

305:                                              ; preds = %302
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %291) #7
  br label %306

306:                                              ; preds = %290, %302, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element27LoadingAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kLoadingAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element42DisallowDocumentAccessAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names27kDisallowdocumentaccessAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 3
  %33 = getelementptr inbounds i64, i64* %31, i64 1
  br label %94

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %42 = bitcast %"class.blink::Member.570"* %41 to %"class.blink::Attribute"**
  %43 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  br label %51

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %48 = bitcast %"class.blink::ElementData"* %47 to %"class.blink::Attribute"*
  %49 = lshr i32 %36, 1
  %50 = and i32 %49, 268435455
  br label %51

51:                                               ; preds = %46, %39
  %52 = phi %"class.blink::Attribute"* [ %48, %46 ], [ %43, %39 ]
  %53 = phi i32 [ %50, %46 ], [ %45, %39 ]
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %82, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %78, %57
  %63 = phi %"class.blink::Attribute"* [ %52, %57 ], [ %79, %78 ]
  %64 = phi i32 [ 0, %57 ], [ %80, %78 ]
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %59
  br i1 %67, label %87, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %70, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, %76
  br i1 %77, label %87, label %78

78:                                               ; preds = %73, %68
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 1
  %80 = add i32 %64, 1
  %81 = icmp eq %"class.blink::Attribute"* %79, %55
  br i1 %81, label %82, label %62

82:                                               ; preds = %78, %51
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 3
  %86 = getelementptr inbounds i64, i64* %84, i64 1
  br label %94

87:                                               ; preds = %62, %73
  %88 = icmp eq i32 %64, -1
  %89 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 3
  %92 = getelementptr inbounds i64, i64* %90, i64 1
  %93 = select i1 %88, i64 192, i64 184
  br label %94

94:                                               ; preds = %87, %82, %29
  %95 = phi i64* [ %33, %29 ], [ %86, %82 ], [ %92, %87 ]
  %96 = phi i64* [ %32, %29 ], [ %85, %82 ], [ %91, %87 ]
  %97 = phi i64 [ 192, %29 ], [ 192, %82 ], [ %93, %87 ]
  %98 = load i64, i64* %95, align 8
  %99 = add i64 %98, %97
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %96, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element42DisallowDocumentAccessAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names27kDisallowdocumentaccessAttrE, align 8
  tail call void @_ZN5blink8bindings48PerformAttributeSetCEReactionsReflectTypeBooleanERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element39AllowPaymentRequestAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLIFrameElement"*
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names24kAllowpaymentrequestAttrE, align 8
  %26 = tail call zeroext i1 @_ZN5blink25HTMLIFrameElementPayments16FastHasAttributeERKNS_17HTMLIFrameElementERKNS_13QualifiedNameE(%"class.blink::HTMLIFrameElement"* dereferenceable(336) %24, %"class.blink::QualifiedName"* dereferenceable(8) %25) #7
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 3
  %30 = getelementptr inbounds i64, i64* %28, i64 1
  %31 = load i64, i64* %30, align 8
  %32 = select i1 %26, i64 184, i64 192
  %33 = add i64 %31, %32
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element39AllowPaymentRequestAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names24kAllowpaymentrequestAttrE, align 8
  tail call void @_ZN5blink8bindings48PerformAttributeSetCEReactionsReflectTypeBooleanERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.30, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0)) #7
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.30, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0)) #7
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase18TrustTokensEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element30TrustTokenAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #7
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #7
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 3278) #7
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #7
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kTrusttokenAttrE, align 8
  %42 = getelementptr inbounds i8, i8* %40, i64 96
  %43 = bitcast i8* %42 to %"class.blink::ElementData"**
  %44 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %43, align 8
  %45 = icmp eq %"class.blink::ElementData"* %44, null
  br i1 %45, label %96, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 0, i32 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.blink::ElementData"* %44 to %"class.blink::UniqueElementData"*
  %53 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 1, i32 1
  %54 = bitcast %"class.blink::Member.570"* %53 to %"class.blink::Attribute"**
  %55 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %52, i64 0, i32 2, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  br label %63

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 1
  %60 = bitcast %"class.blink::ElementData"* %59 to %"class.blink::Attribute"*
  %61 = lshr i32 %48, 1
  %62 = and i32 %61, 268435455
  br label %63

63:                                               ; preds = %58, %51
  %64 = phi %"class.blink::Attribute"* [ %60, %58 ], [ %55, %51 ]
  %65 = phi i32 [ %62, %58 ], [ %57, %51 ]
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %64, i64 %66
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %96, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %41, i64 0, i32 0, i32 0
  %71 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 3, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %74

74:                                               ; preds = %89, %69
  %75 = phi %"class.blink::Attribute"* [ %64, %69 ], [ %90, %89 ]
  %76 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %71
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %77, i64 0, i32 3, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %81, %82
  br i1 %83, label %84, label %89

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %77, i64 0, i32 4, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %86, %87
  br i1 %88, label %92, label %89

89:                                               ; preds = %84, %79
  %90 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %75, i64 1
  %91 = icmp eq %"class.blink::Attribute"* %90, %67
  br i1 %91, label %96, label %74

92:                                               ; preds = %84, %74
  %93 = icmp eq %"class.blink::Attribute"* %75, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %75, i64 0, i32 1
  br label %98

96:                                               ; preds = %89, %92, %63, %39
  %97 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %98

98:                                               ; preds = %94, %96
  %99 = phi %"class.WTF::AtomicString"* [ %97, %96 ], [ %95, %94 ]
  %100 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %103, label %111

103:                                              ; preds = %98
  %104 = load i64*, i64** %2, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 3
  %106 = getelementptr inbounds i64, i64* %104, i64 1
  %107 = load i64, i64* %106, align 8
  %108 = add i64 %107, 200
  %109 = inttoptr i64 %108 to i64*
  %110 = load i64, i64* %109, align 8
  store i64 %110, i64* %105, align 8
  br label %131

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::Isolate"* %6 to i64
  %113 = add i64 %112, 8
  %114 = inttoptr i64 %113 to %"class.blink::V8PerIsolateData"**
  %115 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %115, i64 0, i32 5, i32 0, i32 0, i32 0
  %117 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %116, align 8
  %118 = load i64*, i64** %2, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 3
  %120 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %117, i64 0, i32 3, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, %101
  br i1 %122, label %123, label %130

123:                                              ; preds = %111
  %124 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %117, i64 0, i32 1, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %131, label %127

127:                                              ; preds = %123
  %128 = inttoptr i64 %125 to i64*
  %129 = load i64, i64* %128, align 8
  store i64 %129, i64* %119, align 8
  br label %131

130:                                              ; preds = %111
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %117, i64* %119, %"class.WTF::StringImpl"* nonnull %101) #7
  br label %131

131:                                              ; preds = %103, %123, %127, %130
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element30TrustTokenAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %9) #7
  %11 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %10) #7
  %12 = icmp eq %"class.blink::ExecutionContext"* %11, null
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %11, i64 0, i32 3
  %14 = icmp eq %"class.blink::UseCounter"* %13, null
  %15 = or i1 %12, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::UseCounter"* %13 to void (%"class.blink::UseCounter"*, i32)***
  %18 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, i64 3
  %20 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %19, align 8
  tail call void %20(%"class.blink::UseCounter"* nonnull %13, i32 3278) #7
  br label %21

21:                                               ; preds = %1, %16
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds i64, i64* %23, i64 -1
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i64 %25, -4294967296
  %30 = zext i32 %28 to i64
  %31 = or i64 %29, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load i16, i16* %33, align 2
  switch i16 %34, label %39 [
    i16 1057, label %35
    i16 1056, label %35
    i16 1040, label %35
  ]

35:                                               ; preds = %21, %21, %21
  %36 = add i64 %25, 19
  %37 = inttoptr i64 %36 to i8**
  %38 = load i8*, i8** %37, align 1
  br label %42

39:                                               ; preds = %21
  %40 = bitcast i64* %24 to %"class.v8::Object"*
  %41 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %40, i32 1) #7
  br label %42

42:                                               ; preds = %35, %39
  %43 = phi i8* [ %38, %35 ], [ %41, %39 ]
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %42
  %48 = load i64*, i64** %5, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 1
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, 160
  %52 = inttoptr i64 %51 to %"class.v8::Value"*
  br label %56

53:                                               ; preds = %42
  %54 = bitcast i64** %22 to %"class.v8::Value"**
  %55 = load %"class.v8::Value"*, %"class.v8::Value"** %54, align 8
  br label %56

56:                                               ; preds = %47, %53
  %57 = phi %"class.v8::Value"* [ %52, %47 ], [ %55, %53 ]
  %58 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %58) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 56, i1 false)
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %60, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %61, align 2
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %63 = bitcast i8** %62 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0)>, <2 x i8*>* %63, align 8
  %64 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %66, align 8
  %67 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %68 = bitcast %"class.WTF::StringImpl"** %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #7
  %69 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %69) #7
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %3, %"class.v8::Isolate"* %9, %"class.v8::Value"* %57, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %70 = load i32, i32* %66, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %127

72:                                               ; preds = %56
  %73 = bitcast i8* %43 to %"class.blink::Element"*
  %74 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kTrusttokenAttrE, align 8
  %75 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #7
  %76 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 0, i32 0
  %77 = load %"class.v8::String"*, %"class.v8::String"** %76, align 8
  %78 = icmp eq %"class.v8::String"* %77, null
  br i1 %78, label %81, label %79, !prof !3

79:                                               ; preds = %72
  %80 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %77, i32 0) #7
  br label %108

81:                                               ; preds = %72
  %82 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %108, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 acquire, align 4
  %88 = and i32 %87, 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %106, label %90

90:                                               ; preds = %85
  %91 = load atomic i32, i32* %86 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %108

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #7
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !3

103:                                              ; preds = %94
  call void @llvm.trap() #7
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %108

106:                                              ; preds = %85
  %107 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %83) #7
  br label %108

108:                                              ; preds = %79, %81, %90, %104, %106
  %109 = phi %"class.WTF::StringImpl"* [ %80, %79 ], [ %107, %106 ], [ %83, %90 ], [ %83, %104 ], [ null, %81 ]
  %110 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %109, %"class.WTF::StringImpl"** %110, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %73, %"class.blink::QualifiedName"* dereferenceable(8) %74, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #7
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #7
  br label %126

126:                                              ; preds = %108, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #7
  br label %127

127:                                              ; preds = %56, %126
  %128 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  store i8* null, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %132, label %131

131:                                              ; preds = %127
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %129) #7
  br label %132

132:                                              ; preds = %131, %127
  %133 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #7
  br label %149

149:                                              ; preds = %132, %145, %148
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %69) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %150 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %151 = load i64*, i64** %150, align 8
  %152 = icmp eq i64* %151, null
  br i1 %152, label %162, label %153

153:                                              ; preds = %149
  %154 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %65, align 8
  %155 = bitcast %"class.v8::Isolate"* %154 to %"class.v8::internal::Isolate"*
  %156 = load i64, i64* %151, align 8
  %157 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %155, i64 %156) #7
  %158 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %154) #7
  br i1 %158, label %162, label %159

159:                                              ; preds = %153
  %160 = bitcast i64* %157 to %"class.v8::Value"*
  %161 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %154, %"class.v8::Value"* %160) #7
  br label %162

162:                                              ; preds = %159, %153, %149
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #7
  br label %178

178:                                              ; preds = %162, %174, %177
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %58) #7
  ret void
}

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #3

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_6ObjectEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase32DocumentPolicyNegotiationEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element26PolicyAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kPolicyAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.570"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #7
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_iframe_element26PolicyAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kPolicyAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages27ConstructorCalledAsFunctionEv() local_unnamed_addr #3

declare void @_ZN5blink17V8HTMLConstructor15HtmlConstructorERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_15WrapperTypeInfoENS_15HTMLElementTypeE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"struct.blink::WrapperTypeInfo"* dereferenceable(48), i32) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #3

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

declare void @_ZNK5blink7Element15GetURLAttributeERKNS_13QualifiedNameE(%"class.blink::KURL"* sret, %"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #3

declare void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"*, i64*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %6) #7
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %7 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.v8::String"*, %"class.v8::String"** %7, align 8
  %9 = icmp eq %"class.v8::String"* %8, null
  br i1 %9, label %12, label %10, !prof !3

10:                                               ; preds = %4
  %11 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %8, i32 0) #7
  br label %33

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #7
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %21
  call void @llvm.trap() #7
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %10, %12, %16, %31
  %34 = phi %"class.WTF::StringImpl"* [ %11, %10 ], [ null, %12 ], [ %14, %16 ], [ %14, %31 ]
  %35 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  store i8* null, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %33
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %36) #7
  br label %39

39:                                               ; preds = %38, %33
  %40 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #7
  br label %56

56:                                               ; preds = %39, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %6) #7
  %57 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 152, i1 false)
  br label %120

62:                                               ; preds = %56
  %63 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #7
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !3

78:                                               ; preds = %69
  call void @llvm.trap() #7
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %62, %64, %79
  %82 = call %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"* %34) #7
  %83 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %83, align 8
  %84 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %84, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %85, label %103, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %106

93:                                               ; preds = %86
  %94 = zext i32 %92 to i33
  %95 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #7
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !3

100:                                              ; preds = %93
  call void @llvm.trap() #7
  unreachable

101:                                              ; preds = %93
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %91, align 4
  br label %106

103:                                              ; preds = %81
  %104 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %105 = bitcast %"class.std::__1::unique_ptr.1557"* %104 to i64*
  store i64 0, i64* %105, align 8
  br label %120

106:                                              ; preds = %86, %101
  %107 = phi i32 [ %102, %101 ], [ %92, %86 ]
  %108 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %109 = bitcast %"class.std::__1::unique_ptr.1557"* %108 to i64*
  store i64 0, i64* %109, align 8
  %110 = load atomic i32, i32* %87 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %115 = add i32 %107, -1
  store i32 %115, i32* %114, align 4
  br label %116

116:                                              ; preds = %113, %106
  %117 = phi i32 [ %115, %113 ], [ %107, %106 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #7
  br label %120

120:                                              ; preds = %119, %116, %103, %60
  %121 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %120
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #7
  br label %135

135:                                              ; preds = %120, %131, %134
  ret void
}

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.1557"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #7
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #7
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #7
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.1557"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #7
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #7
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #7
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #7
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.1557"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #7
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #3

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #3

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #3

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #3

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #3

declare void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_39IDLStringStringContextTrustedHTMLBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateEPNS_16ExecutionContextE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.blink::ExecutionContext"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %7 = add i64 %6, 8
  %8 = inttoptr i64 %7 to %"class.blink::V8PerIsolateData"**
  %9 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %8, align 8
  %10 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %9, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8TrustedHTML18wrapper_type_info_E, %"class.v8::Value"* %1) #7
  br i1 %10, label %11, label %57

11:                                               ; preds = %4
  %12 = bitcast %"class.v8::Value"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %13, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  switch i16 %22, label %27 [
    i16 1057, label %23
    i16 1056, label %23
    i16 1040, label %23
  ]

23:                                               ; preds = %11, %11, %11
  %24 = add i64 %13, 19
  %25 = inttoptr i64 %24 to i8**
  %26 = load i8*, i8** %25, align 1
  br label %30

27:                                               ; preds = %11
  %28 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %29 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %28, i32 1) #7
  br label %30

30:                                               ; preds = %23, %27
  %31 = phi i8* [ %26, %23 ], [ %29, %27 ]
  %32 = icmp eq i8* %31, null
  br i1 %32, label %57, label %33

33:                                               ; preds = %30
  %34 = bitcast i8* %31 to %"class.blink::TrustedHTML"*
  %35 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink11TrustedHTML8toStringEv(%"class.blink::TrustedHTML"* nonnull %34) #7
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = ptrtoint %"class.WTF::StringImpl"* %37 to i64
  %39 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %39, label %117, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %117

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #7
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !3

54:                                               ; preds = %45
  tail call void @llvm.trap() #7
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %117

57:                                               ; preds = %4, %30
  %58 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %58) #7
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %93

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %64 = load %"class.v8::String"*, %"class.v8::String"** %63, align 8
  %65 = icmp eq %"class.v8::String"* %64, null
  br i1 %65, label %68, label %66, !prof !3

66:                                               ; preds = %62
  %67 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %64, i32 0) #7
  br label %89

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %89, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %89

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i33
  %81 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #7
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !3

86:                                               ; preds = %77
  call void @llvm.trap() #7
  unreachable

87:                                               ; preds = %77
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %78, align 4
  br label %89

89:                                               ; preds = %66, %68, %72, %87
  %90 = phi %"class.WTF::StringImpl"* [ %67, %66 ], [ null, %68 ], [ %70, %72 ], [ %70, %87 ]
  %91 = call %"class.WTF::StringImpl"* @_ZN5blink24TrustedTypesCheckForHTMLEN3WTF6StringEPKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.WTF::StringImpl"* %90, %"class.blink::ExecutionContext"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %2) #7
  %92 = ptrtoint %"class.WTF::StringImpl"* %91 to i64
  br label %93

93:                                               ; preds = %57, %89
  %94 = phi i64 [ %92, %89 ], [ 0, %57 ]
  %95 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  store i8* null, i8** %95, align 8
  %97 = icmp eq i8* %96, null
  br i1 %97, label %99, label %98

98:                                               ; preds = %93
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %96) #7
  br label %99

99:                                               ; preds = %98, %93
  %100 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #7
  br label %116

116:                                              ; preds = %99, %112, %115
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %58) #7
  br label %117

117:                                              ; preds = %55, %40, %33, %116
  %118 = phi i64 [ %94, %116 ], [ %38, %33 ], [ %38, %40 ], [ %38, %55 ]
  %119 = inttoptr i64 %118 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %119
}

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink11TrustedHTML8toStringEv(%"class.blink::TrustedHTML"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink24TrustedTypesCheckForHTMLEN3WTF6StringEPKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.WTF::StringImpl"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #3

declare void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8), i8*, i8*) local_unnamed_addr #3

declare %"class.blink::DOMTokenList"* @_ZNK5blink17HTMLIFrameElement7sandboxEv(%"class.blink::HTMLIFrameElement"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64*, %"class.blink::ScriptWrappable"*, %"class.v8::Object"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %5 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %12 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  %19 = icmp eq %"class.v8::Object"* %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::Object"* %2 to i64*
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %28, label %37

26:                                               ; preds = %15
  %27 = and i1 %19, %18
  br i1 %27, label %28, label %37

28:                                               ; preds = %21, %26, %4
  %29 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  %32 = getelementptr inbounds i64, i64* %0, i64 -1
  %33 = select i1 %31, i64* %32, i64* %30, !prof !3
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %0, align 8
  %35 = load i64*, i64** %29, align 8
  %36 = icmp ne i64* %35, null
  br label %80

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds i64, i64* %0, i64 -2
  %39 = bitcast i64* %38 to %"class.v8::Isolate"**
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %40) #7
  %42 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %41) #7
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %42, i64 0, i32 2, i32 0
  %44 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  %54 = getelementptr inbounds i64, i64* %0, i64 -1
  %55 = select i1 %53, i64* %54, i64* %52, !prof !3
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %0, align 8
  %57 = load i64*, i64** %51, align 8
  %58 = icmp ne i64* %57, null
  br label %80

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %61, %"class.blink::ScriptWrappable"* %1) #7
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %63, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %78, !prof !3

75:                                               ; preds = %71
  %76 = getelementptr inbounds i64, i64* %0, i64 -1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %0, align 8
  br label %80

78:                                               ; preds = %71
  %79 = load i64, i64* %73, align 8
  store i64 %79, i64* %0, align 8
  br label %80

80:                                               ; preds = %78, %75, %59, %50, %28
  %81 = phi i1 [ %36, %28 ], [ %58, %50 ], [ false, %59 ], [ true, %75 ], [ true, %78 ]
  ret i1 %81
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #1 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #3

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #3

declare i16 @_ZN2v86Object3SetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEES5_(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Value"*) local_unnamed_addr #3

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #3

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #3

declare void @_ZN5blink8bindings48PerformAttributeSetCEReactionsReflectTypeBooleanERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8), i8*, i8*) local_unnamed_addr #3

declare %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink15BindingSecurity19ShouldAllowAccessToEPKNS_14LocalDOMWindowEPKNS_4NodeENS_26BindingSecurityForPlatform17ErrorReportOptionE(%"class.blink::LocalDOMWindow"*, %"class.blink::Node"*, i32) local_unnamed_addr #3

declare %"class.blink::LocalDOMWindow"* @_ZN5blink16ToLocalDOMWindowEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #3

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #3

declare %"class.blink::ScriptState"* @_ZN5blink13ToScriptStateEPNS_10LocalFrameERNS_15DOMWrapperWorldE(%"class.blink::LocalFrame"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #3

declare %"class.blink::DOMWindow"* @_ZNK5blink21HTMLFrameOwnerElement13contentWindowEv(%"class.blink::HTMLFrameOwnerElement"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #7
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #7
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #7
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #7
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %47, %"class.blink::ScriptWrappable"* %0) #7
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #7
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #3

declare %"class.blink::DOMFeaturePolicy"* @_ZN5blink17HTMLIFrameElement13featurePolicyEv(%"class.blink::HTMLIFrameElement"*) local_unnamed_addr #3

declare void @_ZN5blink8bindings70PerformAttributeSetCEReactionsReflectTypeStringLegacyNullToEmptyStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8), i8*, i8*) local_unnamed_addr #3

declare %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement14getSVGDocumentERNS_14ExceptionStateE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink25HTMLIFrameElementPayments16FastHasAttributeERKNS_17HTMLIFrameElementERKNS_13QualifiedNameE(%"class.blink::HTMLIFrameElement"* dereferenceable(336), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
