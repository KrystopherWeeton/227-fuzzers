; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/sparse_to_dense.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/sparse_to_dense.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::vector.1"* }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { i64*, i64*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64* }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::vector.16"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIfiEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIflEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE7reserveEm = comdat any

$_ZN6tflite3ops7builtin15sparse_to_dense16GetIndicesVectorIiEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensoriPNSt3__16vectorINSB_IT_NSA_9allocatorISC_EEEENSD_ISF_EEEE = comdat any

$_ZN6tflite13reference_ops13SparseToDenseIfiEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_ = comdat any

$_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZNSt3__16vectorINS0_IlNS_9allocatorIlEEEENS1_IS3_EEE7reserveEm = comdat any

$_ZN6tflite3ops7builtin15sparse_to_dense16GetIndicesVectorIlEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensoriPNSt3__16vectorINSB_IT_NSA_9allocatorISC_EEEENSD_ISF_EEEE = comdat any

$_ZN6tflite13reference_ops13SparseToDenseIflEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_ = comdat any

$_ZNSt3__16vectorINS0_IlNS_9allocatorIlEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIiiEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIilEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite13reference_ops13SparseToDenseIiiEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_ = comdat any

$_ZN6tflite13reference_ops13SparseToDenseIilEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_ = comdat any

$_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIliEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIllEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite13reference_ops13SparseToDenseIliEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_ = comdat any

$_ZN6tflite13reference_ops13SparseToDenseIllEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_ = comdat any

$_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIaiEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIalEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite13reference_ops13SparseToDenseIaiEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_ = comdat any

$_ZN6tflite13reference_ops13SparseToDenseIalEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_ = comdat any

$_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIhiEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIhlEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite13reference_ops13SparseToDenseIhiEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_ = comdat any

$_ZN6tflite13reference_ops13SparseToDenseIhlEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_ = comdat any

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.3 = private unnamed_addr constant [72 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/sparse_to_dense.cc\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"NumElements(indices)\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"NumElements(values)\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"NumElements(output_shape)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"SizeOfDimension(indices, 1)\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"SizeOfDimension(indices, 0)\00", align 1
@.str.10 = private unnamed_addr constant [52 x i8] c"Wrong indices dimensions %d, should be less than 3.\00", align 1
@.str.11 = private unnamed_addr constant [35 x i8] c"Dense shape type %d not supported.\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.16 = private unnamed_addr constant [28 x i8] c"NumDimensions(indices) >= 0\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"\0AFATAL\0A\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"NumDimensions(indices) < 3\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"NumDimensions(output_shape) >= 0\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"NumDimensions(output_shape)\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"NumDimensions(values) >= 0\00", align 1
@.str.23 = private unnamed_addr constant [26 x i8] c"NumDimensions(values) < 2\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"NumElements(default_value)\00", align 1
@.str.25 = private unnamed_addr constant [63 x i8] c"indices->type == kTfLiteInt32 || indices->type == kTfLiteInt64\00", align 1
@.str.26 = private unnamed_addr constant [73 x i8] c"output_shape->type == kTfLiteInt32 || output_shape->type == kTfLiteInt64\00", align 1
@.str.27 = private unnamed_addr constant [158 x i8] c"values->type == kTfLiteInt32 || values->type == kTfLiteInt64 || values->type == kTfLiteInt8 || values->type == kTfLiteUInt8 || values->type == kTfLiteFloat32\00", align 1
@.str.28 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"values->type\00", align 1
@.str.30 = private unnamed_addr constant [20 x i8] c"default_value->type\00", align 1
@.str.31 = private unnamed_addr constant [61 x i8] c"Value type %s is currently not supported by sparse to dense.\00", align 1
@_ZZN6tflite3ops7builtin24Register_SPARSE_TO_DENSEEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15sparse_to_dense7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15sparse_to_dense4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.33 = private unnamed_addr constant [62 x i8] c"Indice type %s is currently not supported by sparse to dense.\00", align 1
@.str.35 = private unnamed_addr constant [34 x i8] c"true_dimensions <= kMaxDimensions\00", align 1
@.str.36 = private unnamed_addr constant [46 x i8] c"Indices dimensions problem, got %d dimensions\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense20CheckDimensionsMatchEP13TfLiteContextPK12TfLiteTensorS7_S7_(%struct.TfLiteContext*, %struct.TfLiteTensor* nocapture readonly, %struct.TfLiteTensor* nocapture readonly, %struct.TfLiteTensor* nocapture readonly) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %479 [
    i32 0, label %9
    i32 1, label %9
    i32 2, label %311
  ]

9:                                                ; preds = %4, %4
  %10 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %11 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %10, align 8
  %12 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = icmp sgt i32 %8, 0
  %16 = and i1 %14, %15
  br i1 %16, label %17, label %161

17:                                               ; preds = %9
  %18 = sext i32 %8 to i64
  %19 = add nsw i64 %18, -1
  %20 = and i64 %18, 7
  %21 = icmp ult i64 %19, 7
  br i1 %21, label %70, label %22

22:                                               ; preds = %17
  %23 = sub nsw i64 %18, %20
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i64 [ 0, %22 ], [ %67, %24 ]
  %26 = phi i64 [ 1, %22 ], [ %66, %24 ]
  %27 = phi i64 [ %23, %22 ], [ %68, %24 ]
  %28 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %25
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = mul nsw i64 %26, %30
  %32 = or i64 %25, 1
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = mul nsw i64 %31, %35
  %37 = or i64 %25, 2
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = mul nsw i64 %36, %40
  %42 = or i64 %25, 3
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = mul nsw i64 %41, %45
  %47 = or i64 %25, 4
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = mul nsw i64 %46, %50
  %52 = or i64 %25, 5
  %53 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = mul nsw i64 %51, %55
  %57 = or i64 %25, 6
  %58 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = mul nsw i64 %56, %60
  %62 = or i64 %25, 7
  %63 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = sext i32 %64 to i64
  %66 = mul nsw i64 %61, %65
  %67 = add nuw nsw i64 %25, 8
  %68 = add i64 %27, -8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %24

70:                                               ; preds = %24, %17
  %71 = phi i64 [ undef, %17 ], [ %66, %24 ]
  %72 = phi i64 [ 0, %17 ], [ %67, %24 ]
  %73 = phi i64 [ 1, %17 ], [ %66, %24 ]
  %74 = icmp eq i64 %20, 0
  br i1 %74, label %86, label %75

75:                                               ; preds = %70, %75
  %76 = phi i64 [ %83, %75 ], [ %72, %70 ]
  %77 = phi i64 [ %82, %75 ], [ %73, %70 ]
  %78 = phi i64 [ %84, %75 ], [ %20, %70 ]
  %79 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %76
  %80 = load i32, i32* %79, align 4
  %81 = sext i32 %80 to i64
  %82 = mul nsw i64 %77, %81
  %83 = add nuw nsw i64 %76, 1
  %84 = add i64 %78, -1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %75, !llvm.loop !2

86:                                               ; preds = %75, %70
  %87 = phi i64 [ %71, %70 ], [ %82, %75 ]
  %88 = icmp eq i64 %87, 1
  br i1 %88, label %161, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %91 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %90, align 8
  %92 = add nsw i64 %18, -1
  %93 = and i64 %18, 7
  %94 = icmp ult i64 %92, 7
  br i1 %94, label %143, label %95

95:                                               ; preds = %89
  %96 = sub nsw i64 %18, %93
  br label %97

97:                                               ; preds = %97, %95
  %98 = phi i64 [ 0, %95 ], [ %140, %97 ]
  %99 = phi i64 [ 1, %95 ], [ %139, %97 ]
  %100 = phi i64 [ %96, %95 ], [ %141, %97 ]
  %101 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %98
  %102 = load i32, i32* %101, align 4
  %103 = sext i32 %102 to i64
  %104 = mul nsw i64 %99, %103
  %105 = or i64 %98, 1
  %106 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = sext i32 %107 to i64
  %109 = mul nsw i64 %104, %108
  %110 = or i64 %98, 2
  %111 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = sext i32 %112 to i64
  %114 = mul nsw i64 %109, %113
  %115 = or i64 %98, 3
  %116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = sext i32 %117 to i64
  %119 = mul nsw i64 %114, %118
  %120 = or i64 %98, 4
  %121 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = sext i32 %122 to i64
  %124 = mul nsw i64 %119, %123
  %125 = or i64 %98, 5
  %126 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %125
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = mul nsw i64 %124, %128
  %130 = or i64 %98, 6
  %131 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = sext i32 %132 to i64
  %134 = mul nsw i64 %129, %133
  %135 = or i64 %98, 7
  %136 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %135
  %137 = load i32, i32* %136, align 4
  %138 = sext i32 %137 to i64
  %139 = mul nsw i64 %134, %138
  %140 = add nuw nsw i64 %98, 8
  %141 = add i64 %100, -8
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %97

143:                                              ; preds = %97, %89
  %144 = phi i64 [ undef, %89 ], [ %139, %97 ]
  %145 = phi i64 [ 0, %89 ], [ %140, %97 ]
  %146 = phi i64 [ 1, %89 ], [ %139, %97 ]
  %147 = icmp eq i64 %93, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %143, %148
  %149 = phi i64 [ %156, %148 ], [ %145, %143 ]
  %150 = phi i64 [ %155, %148 ], [ %146, %143 ]
  %151 = phi i64 [ %157, %148 ], [ %93, %143 ]
  %152 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %149
  %153 = load i32, i32* %152, align 4
  %154 = sext i32 %153 to i64
  %155 = mul nsw i64 %150, %154
  %156 = add nuw nsw i64 %149, 1
  %157 = add i64 %151, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %148, !llvm.loop !4

159:                                              ; preds = %148, %143
  %160 = phi i64 [ %144, %143 ], [ %155, %148 ]
  tail call void (%struct.TfLiteContext*, i8*, ...) %91(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i64 %160, i64 1) #10
  br label %482

161:                                              ; preds = %86, %9
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = icmp sgt i32 %165, 0
  br i1 %166, label %167, label %482

167:                                              ; preds = %161
  %168 = sext i32 %165 to i64
  %169 = add nsw i64 %168, -1
  %170 = and i64 %168, 7
  %171 = icmp ult i64 %169, 7
  br i1 %171, label %220, label %172

172:                                              ; preds = %167
  %173 = sub nsw i64 %168, %170
  br label %174

174:                                              ; preds = %174, %172
  %175 = phi i64 [ 0, %172 ], [ %217, %174 ]
  %176 = phi i64 [ 1, %172 ], [ %216, %174 ]
  %177 = phi i64 [ %173, %172 ], [ %218, %174 ]
  %178 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %175
  %179 = load i32, i32* %178, align 4
  %180 = sext i32 %179 to i64
  %181 = mul nsw i64 %176, %180
  %182 = or i64 %175, 1
  %183 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %182
  %184 = load i32, i32* %183, align 4
  %185 = sext i32 %184 to i64
  %186 = mul nsw i64 %181, %185
  %187 = or i64 %175, 2
  %188 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %187
  %189 = load i32, i32* %188, align 4
  %190 = sext i32 %189 to i64
  %191 = mul nsw i64 %186, %190
  %192 = or i64 %175, 3
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %192
  %194 = load i32, i32* %193, align 4
  %195 = sext i32 %194 to i64
  %196 = mul nsw i64 %191, %195
  %197 = or i64 %175, 4
  %198 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = sext i32 %199 to i64
  %201 = mul nsw i64 %196, %200
  %202 = or i64 %175, 5
  %203 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = sext i32 %204 to i64
  %206 = mul nsw i64 %201, %205
  %207 = or i64 %175, 6
  %208 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %207
  %209 = load i32, i32* %208, align 4
  %210 = sext i32 %209 to i64
  %211 = mul nsw i64 %206, %210
  %212 = or i64 %175, 7
  %213 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %212
  %214 = load i32, i32* %213, align 4
  %215 = sext i32 %214 to i64
  %216 = mul nsw i64 %211, %215
  %217 = add nuw nsw i64 %175, 8
  %218 = add i64 %177, -8
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %174

220:                                              ; preds = %174, %167
  %221 = phi i64 [ undef, %167 ], [ %216, %174 ]
  %222 = phi i64 [ 0, %167 ], [ %217, %174 ]
  %223 = phi i64 [ 1, %167 ], [ %216, %174 ]
  %224 = icmp eq i64 %170, 0
  br i1 %224, label %236, label %225

225:                                              ; preds = %220, %225
  %226 = phi i64 [ %233, %225 ], [ %222, %220 ]
  %227 = phi i64 [ %232, %225 ], [ %223, %220 ]
  %228 = phi i64 [ %234, %225 ], [ %170, %220 ]
  %229 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %226
  %230 = load i32, i32* %229, align 4
  %231 = sext i32 %230 to i64
  %232 = mul nsw i64 %227, %231
  %233 = add nuw nsw i64 %226, 1
  %234 = add i64 %228, -1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %225, !llvm.loop !5

236:                                              ; preds = %225, %220
  %237 = phi i64 [ %221, %220 ], [ %232, %225 ]
  %238 = icmp eq i64 %237, 1
  br i1 %238, label %482, label %239

239:                                              ; preds = %236
  %240 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %241 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %240, align 8
  %242 = add nsw i64 %168, -1
  %243 = and i64 %168, 7
  %244 = icmp ult i64 %242, 7
  br i1 %244, label %293, label %245

245:                                              ; preds = %239
  %246 = sub nsw i64 %168, %243
  br label %247

247:                                              ; preds = %247, %245
  %248 = phi i64 [ 0, %245 ], [ %290, %247 ]
  %249 = phi i64 [ 1, %245 ], [ %289, %247 ]
  %250 = phi i64 [ %246, %245 ], [ %291, %247 ]
  %251 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %248
  %252 = load i32, i32* %251, align 4
  %253 = sext i32 %252 to i64
  %254 = mul nsw i64 %249, %253
  %255 = or i64 %248, 1
  %256 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %255
  %257 = load i32, i32* %256, align 4
  %258 = sext i32 %257 to i64
  %259 = mul nsw i64 %254, %258
  %260 = or i64 %248, 2
  %261 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %260
  %262 = load i32, i32* %261, align 4
  %263 = sext i32 %262 to i64
  %264 = mul nsw i64 %259, %263
  %265 = or i64 %248, 3
  %266 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %265
  %267 = load i32, i32* %266, align 4
  %268 = sext i32 %267 to i64
  %269 = mul nsw i64 %264, %268
  %270 = or i64 %248, 4
  %271 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %270
  %272 = load i32, i32* %271, align 4
  %273 = sext i32 %272 to i64
  %274 = mul nsw i64 %269, %273
  %275 = or i64 %248, 5
  %276 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = sext i32 %277 to i64
  %279 = mul nsw i64 %274, %278
  %280 = or i64 %248, 6
  %281 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %280
  %282 = load i32, i32* %281, align 4
  %283 = sext i32 %282 to i64
  %284 = mul nsw i64 %279, %283
  %285 = or i64 %248, 7
  %286 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = sext i32 %287 to i64
  %289 = mul nsw i64 %284, %288
  %290 = add nuw nsw i64 %248, 8
  %291 = add i64 %250, -8
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %247

293:                                              ; preds = %247, %239
  %294 = phi i64 [ undef, %239 ], [ %289, %247 ]
  %295 = phi i64 [ 0, %239 ], [ %290, %247 ]
  %296 = phi i64 [ 1, %239 ], [ %289, %247 ]
  %297 = icmp eq i64 %243, 0
  br i1 %297, label %309, label %298

298:                                              ; preds = %293, %298
  %299 = phi i64 [ %306, %298 ], [ %295, %293 ]
  %300 = phi i64 [ %305, %298 ], [ %296, %293 ]
  %301 = phi i64 [ %307, %298 ], [ %243, %293 ]
  %302 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 %299
  %303 = load i32, i32* %302, align 4
  %304 = sext i32 %303 to i64
  %305 = mul nsw i64 %300, %304
  %306 = add nuw nsw i64 %299, 1
  %307 = add i64 %301, -1
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %309, label %298, !llvm.loop !6

309:                                              ; preds = %298, %293
  %310 = phi i64 [ %294, %293 ], [ %305, %298 ]
  tail call void (%struct.TfLiteContext*, i8*, ...) %241(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 61, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 %310, i32 1) #10
  br label %482

311:                                              ; preds = %4
  %312 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %313 = load i32, i32* %312, align 4
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %316 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %315, align 8
  %317 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 0
  %318 = load i32, i32* %317, align 4
  %319 = icmp sgt i32 %318, 0
  br i1 %319, label %320, label %389

320:                                              ; preds = %311
  %321 = sext i32 %318 to i64
  %322 = add nsw i64 %321, -1
  %323 = and i64 %321, 7
  %324 = icmp ult i64 %322, 7
  br i1 %324, label %373, label %325

325:                                              ; preds = %320
  %326 = sub nsw i64 %321, %323
  br label %327

327:                                              ; preds = %327, %325
  %328 = phi i64 [ 0, %325 ], [ %370, %327 ]
  %329 = phi i64 [ 1, %325 ], [ %369, %327 ]
  %330 = phi i64 [ %326, %325 ], [ %371, %327 ]
  %331 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %328
  %332 = load i32, i32* %331, align 4
  %333 = sext i32 %332 to i64
  %334 = mul nsw i64 %329, %333
  %335 = or i64 %328, 1
  %336 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %335
  %337 = load i32, i32* %336, align 4
  %338 = sext i32 %337 to i64
  %339 = mul nsw i64 %334, %338
  %340 = or i64 %328, 2
  %341 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %340
  %342 = load i32, i32* %341, align 4
  %343 = sext i32 %342 to i64
  %344 = mul nsw i64 %339, %343
  %345 = or i64 %328, 3
  %346 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %345
  %347 = load i32, i32* %346, align 4
  %348 = sext i32 %347 to i64
  %349 = mul nsw i64 %344, %348
  %350 = or i64 %328, 4
  %351 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %350
  %352 = load i32, i32* %351, align 4
  %353 = sext i32 %352 to i64
  %354 = mul nsw i64 %349, %353
  %355 = or i64 %328, 5
  %356 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %355
  %357 = load i32, i32* %356, align 4
  %358 = sext i32 %357 to i64
  %359 = mul nsw i64 %354, %358
  %360 = or i64 %328, 6
  %361 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %360
  %362 = load i32, i32* %361, align 4
  %363 = sext i32 %362 to i64
  %364 = mul nsw i64 %359, %363
  %365 = or i64 %328, 7
  %366 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %365
  %367 = load i32, i32* %366, align 4
  %368 = sext i32 %367 to i64
  %369 = mul nsw i64 %364, %368
  %370 = add nuw nsw i64 %328, 8
  %371 = add i64 %330, -8
  %372 = icmp eq i64 %371, 0
  br i1 %372, label %373, label %327

373:                                              ; preds = %327, %320
  %374 = phi i64 [ undef, %320 ], [ %369, %327 ]
  %375 = phi i64 [ 0, %320 ], [ %370, %327 ]
  %376 = phi i64 [ 1, %320 ], [ %369, %327 ]
  %377 = icmp eq i64 %323, 0
  br i1 %377, label %389, label %378

378:                                              ; preds = %373, %378
  %379 = phi i64 [ %386, %378 ], [ %375, %373 ]
  %380 = phi i64 [ %385, %378 ], [ %376, %373 ]
  %381 = phi i64 [ %387, %378 ], [ %323, %373 ]
  %382 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %379
  %383 = load i32, i32* %382, align 4
  %384 = sext i32 %383 to i64
  %385 = mul nsw i64 %380, %384
  %386 = add nuw nsw i64 %379, 1
  %387 = add i64 %381, -1
  %388 = icmp eq i64 %387, 0
  br i1 %388, label %389, label %378, !llvm.loop !7

389:                                              ; preds = %373, %378, %311
  %390 = phi i64 [ 1, %311 ], [ %374, %373 ], [ %385, %378 ]
  %391 = icmp eq i64 %390, %314
  br i1 %391, label %466, label %392

392:                                              ; preds = %389
  %393 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %394 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %393, align 8
  br i1 %319, label %395, label %464

395:                                              ; preds = %392
  %396 = sext i32 %318 to i64
  %397 = add nsw i64 %396, -1
  %398 = and i64 %396, 7
  %399 = icmp ult i64 %397, 7
  br i1 %399, label %448, label %400

400:                                              ; preds = %395
  %401 = sub nsw i64 %396, %398
  br label %402

402:                                              ; preds = %402, %400
  %403 = phi i64 [ 0, %400 ], [ %445, %402 ]
  %404 = phi i64 [ 1, %400 ], [ %444, %402 ]
  %405 = phi i64 [ %401, %400 ], [ %446, %402 ]
  %406 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %403
  %407 = load i32, i32* %406, align 4
  %408 = sext i32 %407 to i64
  %409 = mul nsw i64 %404, %408
  %410 = or i64 %403, 1
  %411 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %410
  %412 = load i32, i32* %411, align 4
  %413 = sext i32 %412 to i64
  %414 = mul nsw i64 %409, %413
  %415 = or i64 %403, 2
  %416 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %415
  %417 = load i32, i32* %416, align 4
  %418 = sext i32 %417 to i64
  %419 = mul nsw i64 %414, %418
  %420 = or i64 %403, 3
  %421 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %420
  %422 = load i32, i32* %421, align 4
  %423 = sext i32 %422 to i64
  %424 = mul nsw i64 %419, %423
  %425 = or i64 %403, 4
  %426 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %425
  %427 = load i32, i32* %426, align 4
  %428 = sext i32 %427 to i64
  %429 = mul nsw i64 %424, %428
  %430 = or i64 %403, 5
  %431 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %430
  %432 = load i32, i32* %431, align 4
  %433 = sext i32 %432 to i64
  %434 = mul nsw i64 %429, %433
  %435 = or i64 %403, 6
  %436 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %435
  %437 = load i32, i32* %436, align 4
  %438 = sext i32 %437 to i64
  %439 = mul nsw i64 %434, %438
  %440 = or i64 %403, 7
  %441 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %440
  %442 = load i32, i32* %441, align 4
  %443 = sext i32 %442 to i64
  %444 = mul nsw i64 %439, %443
  %445 = add nuw nsw i64 %403, 8
  %446 = add i64 %405, -8
  %447 = icmp eq i64 %446, 0
  br i1 %447, label %448, label %402

448:                                              ; preds = %402, %395
  %449 = phi i64 [ undef, %395 ], [ %444, %402 ]
  %450 = phi i64 [ 0, %395 ], [ %445, %402 ]
  %451 = phi i64 [ 1, %395 ], [ %444, %402 ]
  %452 = icmp eq i64 %398, 0
  br i1 %452, label %464, label %453

453:                                              ; preds = %448, %453
  %454 = phi i64 [ %461, %453 ], [ %450, %448 ]
  %455 = phi i64 [ %460, %453 ], [ %451, %448 ]
  %456 = phi i64 [ %462, %453 ], [ %398, %448 ]
  %457 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %316, i64 0, i32 1, i64 %454
  %458 = load i32, i32* %457, align 4
  %459 = sext i32 %458 to i64
  %460 = mul nsw i64 %455, %459
  %461 = add nuw nsw i64 %454, 1
  %462 = add i64 %456, -1
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %464, label %453, !llvm.loop !8

464:                                              ; preds = %448, %453, %392
  %465 = phi i64 [ 1, %392 ], [ %449, %448 ], [ %460, %453 ]
  tail call void (%struct.TfLiteContext*, i8*, ...) %394(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 66, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i32 %313, i64 %465) #10
  br label %482

466:                                              ; preds = %389
  %467 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %468 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %467, align 8
  %469 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %468, i64 0, i32 0
  %470 = load i32, i32* %469, align 4
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %482

472:                                              ; preds = %466
  %473 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %474 = load i32, i32* %473, align 4
  %475 = icmp eq i32 %474, 1
  br i1 %475, label %482, label %476

476:                                              ; preds = %472
  %477 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %478 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %477, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %478(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 69, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i32 %474, i64 1) #10
  br label %482

479:                                              ; preds = %4
  %480 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %481 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %480, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %481(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.10, i64 0, i64 0), i32 %8) #10
  br label %482

482:                                              ; preds = %161, %466, %472, %236, %479, %476, %464, %309, %159
  %483 = phi i32 [ 1, %479 ], [ 1, %464 ], [ 1, %476 ], [ 1, %159 ], [ 1, %309 ], [ 0, %236 ], [ 0, %472 ], [ 0, %466 ], [ 0, %161 ]
  ret i32 %483
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext*, %struct.TfLiteTensor* readonly, %struct.TfLiteTensor*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %247 [
    i32 2, label %6
    i32 4, label %125
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %8 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %6
  %13 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #10
  br label %88

14:                                               ; preds = %6
  %15 = sext i32 %10 to i64
  %16 = add nsw i64 %15, -1
  %17 = and i64 %15, 7
  %18 = icmp ult i64 %16, 7
  br i1 %18, label %67, label %19

19:                                               ; preds = %14
  %20 = sub nsw i64 %15, %17
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i64 [ 0, %19 ], [ %64, %21 ]
  %23 = phi i64 [ 1, %19 ], [ %63, %21 ]
  %24 = phi i64 [ %20, %19 ], [ %65, %21 ]
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %22
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = mul nsw i64 %23, %27
  %29 = or i64 %22, 1
  %30 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = mul nsw i64 %28, %32
  %34 = or i64 %22, 2
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = mul nsw i64 %33, %37
  %39 = or i64 %22, 3
  %40 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = mul nsw i64 %38, %42
  %44 = or i64 %22, 4
  %45 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = mul nsw i64 %43, %47
  %49 = or i64 %22, 5
  %50 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = mul nsw i64 %48, %52
  %54 = or i64 %22, 6
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = sext i32 %56 to i64
  %58 = mul nsw i64 %53, %57
  %59 = or i64 %22, 7
  %60 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %61 to i64
  %63 = mul nsw i64 %58, %62
  %64 = add nuw nsw i64 %22, 8
  %65 = add i64 %24, -8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %21

67:                                               ; preds = %21, %14
  %68 = phi i64 [ undef, %14 ], [ %63, %21 ]
  %69 = phi i64 [ 0, %14 ], [ %64, %21 ]
  %70 = phi i64 [ 1, %14 ], [ %63, %21 ]
  %71 = icmp eq i64 %17, 0
  br i1 %71, label %83, label %72

72:                                               ; preds = %67, %72
  %73 = phi i64 [ %80, %72 ], [ %69, %67 ]
  %74 = phi i64 [ %79, %72 ], [ %70, %67 ]
  %75 = phi i64 [ %81, %72 ], [ %17, %67 ]
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %73
  %77 = load i32, i32* %76, align 4
  %78 = sext i32 %77 to i64
  %79 = mul nsw i64 %74, %78
  %80 = add nuw nsw i64 %73, 1
  %81 = add i64 %75, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %72, !llvm.loop !9

83:                                               ; preds = %72, %67
  %84 = phi i64 [ %68, %67 ], [ %79, %72 ]
  %85 = trunc i64 %84 to i32
  %86 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %85) #10
  %87 = icmp sgt i32 %85, 0
  br i1 %87, label %88, label %120

88:                                               ; preds = %83, %12
  %89 = phi %struct.TfLiteIntArray* [ %13, %12 ], [ %86, %83 ]
  %90 = phi i64 [ 1, %12 ], [ %84, %83 ]
  %91 = icmp eq %struct.TfLiteTensor* %1, null
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1, i32 0
  %93 = and i64 %90, 4294967295
  %94 = and i64 %90, 1
  %95 = icmp eq i64 %93, 1
  br i1 %95, label %109, label %96

96:                                               ; preds = %88
  %97 = sub nsw i64 %93, %94
  br label %98

98:                                               ; preds = %254, %96
  %99 = phi i64 [ 0, %96 ], [ %259, %254 ]
  %100 = phi i64 [ %97, %96 ], [ %260, %254 ]
  br i1 %91, label %103, label %101

101:                                              ; preds = %98
  %102 = load i32*, i32** %92, align 8
  br label %103

103:                                              ; preds = %101, %98
  %104 = phi i32* [ %102, %101 ], [ null, %98 ]
  %105 = getelementptr inbounds i32, i32* %104, i64 %99
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 1, i64 %99
  store i32 %106, i32* %107, align 4
  %108 = or i64 %99, 1
  br i1 %91, label %254, label %252

109:                                              ; preds = %254, %88
  %110 = phi i64 [ 0, %88 ], [ %259, %254 ]
  %111 = icmp eq i64 %94, 0
  br i1 %111, label %120, label %112

112:                                              ; preds = %109
  br i1 %91, label %115, label %113

113:                                              ; preds = %112
  %114 = load i32*, i32** %92, align 8
  br label %115

115:                                              ; preds = %113, %112
  %116 = phi i32* [ %114, %113 ], [ null, %112 ]
  %117 = getelementptr inbounds i32, i32* %116, i64 %110
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 1, i64 %110
  store i32 %118, i32* %119, align 4
  br label %120

120:                                              ; preds = %115, %109, %83
  %121 = phi %struct.TfLiteIntArray* [ %86, %83 ], [ %89, %109 ], [ %89, %115 ]
  %122 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %123 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %122, align 8
  %124 = tail call i32 %123(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %2, %struct.TfLiteIntArray* %121) #10
  br label %250

125:                                              ; preds = %3
  %126 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %127 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %126, align 8
  %128 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %127, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp sgt i32 %129, 0
  br i1 %130, label %133, label %131

131:                                              ; preds = %125
  %132 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #10
  br label %207

133:                                              ; preds = %125
  %134 = sext i32 %129 to i64
  %135 = add nsw i64 %134, -1
  %136 = and i64 %134, 7
  %137 = icmp ult i64 %135, 7
  br i1 %137, label %186, label %138

138:                                              ; preds = %133
  %139 = sub nsw i64 %134, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %183, %140 ]
  %142 = phi i64 [ 1, %138 ], [ %182, %140 ]
  %143 = phi i64 [ %139, %138 ], [ %184, %140 ]
  %144 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %127, i64 0, i32 1, i64 %141
  %145 = load i32, i32* %144, align 4
  %146 = sext i32 %145 to i64
  %147 = mul nsw i64 %142, %146
  %148 = or i64 %141, 1
  %149 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %127, i64 0, i32 1, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = sext i32 %150 to i64
  %152 = mul nsw i64 %147, %151
  %153 = or i64 %141, 2
  %154 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %127, i64 0, i32 1, i64 %153
  %155 = load i32, i32* %154, align 4
  %156 = sext i32 %155 to i64
  %157 = mul nsw i64 %152, %156
  %158 = or i64 %141, 3
  %159 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %127, i64 0, i32 1, i64 %158
  %160 = load i32, i32* %159, align 4
  %161 = sext i32 %160 to i64
  %162 = mul nsw i64 %157, %161
  %163 = or i64 %141, 4
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %127, i64 0, i32 1, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = sext i32 %165 to i64
  %167 = mul nsw i64 %162, %166
  %168 = or i64 %141, 5
  %169 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %127, i64 0, i32 1, i64 %168
  %170 = load i32, i32* %169, align 4
  %171 = sext i32 %170 to i64
  %172 = mul nsw i64 %167, %171
  %173 = or i64 %141, 6
  %174 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %127, i64 0, i32 1, i64 %173
  %175 = load i32, i32* %174, align 4
  %176 = sext i32 %175 to i64
  %177 = mul nsw i64 %172, %176
  %178 = or i64 %141, 7
  %179 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %127, i64 0, i32 1, i64 %178
  %180 = load i32, i32* %179, align 4
  %181 = sext i32 %180 to i64
  %182 = mul nsw i64 %177, %181
  %183 = add nuw nsw i64 %141, 8
  %184 = add i64 %143, -8
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %140

186:                                              ; preds = %140, %133
  %187 = phi i64 [ undef, %133 ], [ %182, %140 ]
  %188 = phi i64 [ 0, %133 ], [ %183, %140 ]
  %189 = phi i64 [ 1, %133 ], [ %182, %140 ]
  %190 = icmp eq i64 %136, 0
  br i1 %190, label %202, label %191

191:                                              ; preds = %186, %191
  %192 = phi i64 [ %199, %191 ], [ %188, %186 ]
  %193 = phi i64 [ %198, %191 ], [ %189, %186 ]
  %194 = phi i64 [ %200, %191 ], [ %136, %186 ]
  %195 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %127, i64 0, i32 1, i64 %192
  %196 = load i32, i32* %195, align 4
  %197 = sext i32 %196 to i64
  %198 = mul nsw i64 %193, %197
  %199 = add nuw nsw i64 %192, 1
  %200 = add i64 %194, -1
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %202, label %191, !llvm.loop !10

202:                                              ; preds = %191, %186
  %203 = phi i64 [ %187, %186 ], [ %198, %191 ]
  %204 = trunc i64 %203 to i32
  %205 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %204) #10
  %206 = icmp sgt i32 %204, 0
  br i1 %206, label %207, label %242

207:                                              ; preds = %202, %131
  %208 = phi %struct.TfLiteIntArray* [ %132, %131 ], [ %205, %202 ]
  %209 = phi i64 [ 1, %131 ], [ %203, %202 ]
  %210 = icmp eq %struct.TfLiteTensor* %1, null
  %211 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %212 = bitcast %union.TfLitePtrUnion* %211 to i64**
  %213 = and i64 %209, 4294967295
  %214 = and i64 %209, 1
  %215 = icmp eq i64 %213, 1
  br i1 %215, label %230, label %216

216:                                              ; preds = %207
  %217 = sub nsw i64 %213, %214
  br label %218

218:                                              ; preds = %264, %216
  %219 = phi i64 [ 0, %216 ], [ %270, %264 ]
  %220 = phi i64 [ %217, %216 ], [ %271, %264 ]
  br i1 %210, label %223, label %221

221:                                              ; preds = %218
  %222 = load i64*, i64** %212, align 8
  br label %223

223:                                              ; preds = %221, %218
  %224 = phi i64* [ %222, %221 ], [ null, %218 ]
  %225 = getelementptr inbounds i64, i64* %224, i64 %219
  %226 = load i64, i64* %225, align 8
  %227 = trunc i64 %226 to i32
  %228 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %208, i64 0, i32 1, i64 %219
  store i32 %227, i32* %228, align 4
  %229 = or i64 %219, 1
  br i1 %210, label %264, label %262

230:                                              ; preds = %264, %207
  %231 = phi i64 [ 0, %207 ], [ %270, %264 ]
  %232 = icmp eq i64 %214, 0
  br i1 %232, label %242, label %233

233:                                              ; preds = %230
  br i1 %210, label %236, label %234

234:                                              ; preds = %233
  %235 = load i64*, i64** %212, align 8
  br label %236

236:                                              ; preds = %234, %233
  %237 = phi i64* [ %235, %234 ], [ null, %233 ]
  %238 = getelementptr inbounds i64, i64* %237, i64 %231
  %239 = load i64, i64* %238, align 8
  %240 = trunc i64 %239 to i32
  %241 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %208, i64 0, i32 1, i64 %231
  store i32 %240, i32* %241, align 4
  br label %242

242:                                              ; preds = %236, %230, %202
  %243 = phi %struct.TfLiteIntArray* [ %205, %202 ], [ %208, %230 ], [ %208, %236 ]
  %244 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %245 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %244, align 8
  %246 = tail call i32 %245(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %2, %struct.TfLiteIntArray* %243) #10
  br label %250

247:                                              ; preds = %3
  %248 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %249 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %248, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %249(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0), i32 %5) #10
  br label %250

250:                                              ; preds = %247, %242, %120
  %251 = phi i32 [ %124, %120 ], [ %246, %242 ], [ 1, %247 ]
  ret i32 %251

252:                                              ; preds = %103
  %253 = load i32*, i32** %92, align 8
  br label %254

254:                                              ; preds = %252, %103
  %255 = phi i32* [ %253, %252 ], [ null, %103 ]
  %256 = getelementptr inbounds i32, i32* %255, i64 %108
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 1, i64 %108
  store i32 %257, i32* %258, align 4
  %259 = add nuw nsw i64 %99, 2
  %260 = add i64 %100, -2
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %109, label %98

262:                                              ; preds = %223
  %263 = load i64*, i64** %212, align 8
  br label %264

264:                                              ; preds = %262, %223
  %265 = phi i64* [ %263, %262 ], [ null, %223 ]
  %266 = getelementptr inbounds i64, i64* %265, i64 %229
  %267 = load i64, i64* %266, align 8
  %268 = trunc i64 %267 to i32
  %269 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %208, i64 0, i32 1, i64 %229
  store i32 %268, i32* %269, align 4
  %270 = add nuw nsw i64 %219, 2
  %271 = add i64 %220, -2
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %230, label %218
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 4
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 143, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i32 %6, i32 4) #10
  br label %323

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 144, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %15, i32 1) #10
  br label %323

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %29, %34
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %29 ]
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %46 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %45, align 8
  %47 = sext i32 %42 to i64
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 %47
  br label %49

49:                                               ; preds = %39, %44
  %50 = phi %struct.TfLiteTensor* [ %48, %44 ], [ null, %39 ]
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 3
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %56 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %55, align 8
  %57 = sext i32 %52 to i64
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 %57
  br label %59

59:                                               ; preds = %49, %54
  %60 = phi %struct.TfLiteTensor* [ %58, %54 ], [ null, %49 ]
  %61 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %62 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %61, align 8
  %63 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %62, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, -1
  br i1 %65, label %71, label %66

66:                                               ; preds = %59
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %68 = tail call i64 @fwrite(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i64 0, i64 0), i64 27, i64 1, %struct._IO_FILE* %67) #11
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %70 = tail call i64 @fwrite(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %69) #11
  tail call void @abort() #12
  unreachable

71:                                               ; preds = %59
  %72 = icmp slt i32 %64, 3
  br i1 %72, label %76, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %75 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %74, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %75(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 157, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0)) #10
  br label %323

76:                                               ; preds = %71
  %77 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 2
  %78 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %77, align 8
  %79 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %78, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp sgt i32 %80, -1
  br i1 %81, label %87, label %82

82:                                               ; preds = %76
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %84 = tail call i64 @fwrite(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0), i64 32, i64 1, %struct._IO_FILE* %83) #11
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %86 = tail call i64 @fwrite(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %85) #11
  tail call void @abort() #12
  unreachable

87:                                               ; preds = %76
  %88 = icmp eq i32 %80, 1
  br i1 %88, label %92, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %91 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %90, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %91(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 159, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %80, i32 1) #10
  br label %323

92:                                               ; preds = %87
  %93 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 0, i32 2
  %94 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %93, align 8
  %95 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %94, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp sgt i32 %96, -1
  br i1 %97, label %103, label %98

98:                                               ; preds = %92
  %99 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %100 = tail call i64 @fwrite(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i64 26, i64 1, %struct._IO_FILE* %99) #11
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %102 = tail call i64 @fwrite(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %101) #11
  tail call void @abort() #12
  unreachable

103:                                              ; preds = %92
  %104 = icmp slt i32 %96, 2
  br i1 %104, label %108, label %105

105:                                              ; preds = %103
  %106 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %107 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %106, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %107(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 162, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23, i64 0, i64 0)) #10
  br label %323

108:                                              ; preds = %103
  %109 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 2
  %110 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %109, align 8
  %111 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %258

114:                                              ; preds = %108
  %115 = sext i32 %112 to i64
  %116 = add nsw i64 %115, -1
  %117 = and i64 %115, 7
  %118 = icmp ult i64 %116, 7
  br i1 %118, label %167, label %119

119:                                              ; preds = %114
  %120 = sub nsw i64 %115, %117
  br label %121

121:                                              ; preds = %121, %119
  %122 = phi i64 [ 0, %119 ], [ %164, %121 ]
  %123 = phi i64 [ 1, %119 ], [ %163, %121 ]
  %124 = phi i64 [ %120, %119 ], [ %165, %121 ]
  %125 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %122
  %126 = load i32, i32* %125, align 4
  %127 = sext i32 %126 to i64
  %128 = mul nsw i64 %123, %127
  %129 = or i64 %122, 1
  %130 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = sext i32 %131 to i64
  %133 = mul nsw i64 %128, %132
  %134 = or i64 %122, 2
  %135 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = mul nsw i64 %133, %137
  %139 = or i64 %122, 3
  %140 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = mul nsw i64 %138, %142
  %144 = or i64 %122, 4
  %145 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %146 to i64
  %148 = mul nsw i64 %143, %147
  %149 = or i64 %122, 5
  %150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = mul nsw i64 %148, %152
  %154 = or i64 %122, 6
  %155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = sext i32 %156 to i64
  %158 = mul nsw i64 %153, %157
  %159 = or i64 %122, 7
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = mul nsw i64 %158, %162
  %164 = add nuw nsw i64 %122, 8
  %165 = add i64 %124, -8
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %121

167:                                              ; preds = %121, %114
  %168 = phi i64 [ undef, %114 ], [ %163, %121 ]
  %169 = phi i64 [ 0, %114 ], [ %164, %121 ]
  %170 = phi i64 [ 1, %114 ], [ %163, %121 ]
  %171 = icmp eq i64 %117, 0
  br i1 %171, label %183, label %172

172:                                              ; preds = %167, %172
  %173 = phi i64 [ %180, %172 ], [ %169, %167 ]
  %174 = phi i64 [ %179, %172 ], [ %170, %167 ]
  %175 = phi i64 [ %181, %172 ], [ %117, %167 ]
  %176 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %173
  %177 = load i32, i32* %176, align 4
  %178 = sext i32 %177 to i64
  %179 = mul nsw i64 %174, %178
  %180 = add nuw nsw i64 %173, 1
  %181 = add i64 %175, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %172, !llvm.loop !11

183:                                              ; preds = %172, %167
  %184 = phi i64 [ %168, %167 ], [ %179, %172 ]
  %185 = icmp eq i64 %184, 1
  br i1 %185, label %258, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %188 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %187, align 8
  %189 = add nsw i64 %115, -1
  %190 = and i64 %115, 7
  %191 = icmp ult i64 %189, 7
  br i1 %191, label %240, label %192

192:                                              ; preds = %186
  %193 = sub nsw i64 %115, %190
  br label %194

194:                                              ; preds = %194, %192
  %195 = phi i64 [ 0, %192 ], [ %237, %194 ]
  %196 = phi i64 [ 1, %192 ], [ %236, %194 ]
  %197 = phi i64 [ %193, %192 ], [ %238, %194 ]
  %198 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %195
  %199 = load i32, i32* %198, align 4
  %200 = sext i32 %199 to i64
  %201 = mul nsw i64 %196, %200
  %202 = or i64 %195, 1
  %203 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = sext i32 %204 to i64
  %206 = mul nsw i64 %201, %205
  %207 = or i64 %195, 2
  %208 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %207
  %209 = load i32, i32* %208, align 4
  %210 = sext i32 %209 to i64
  %211 = mul nsw i64 %206, %210
  %212 = or i64 %195, 3
  %213 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %212
  %214 = load i32, i32* %213, align 4
  %215 = sext i32 %214 to i64
  %216 = mul nsw i64 %211, %215
  %217 = or i64 %195, 4
  %218 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %217
  %219 = load i32, i32* %218, align 4
  %220 = sext i32 %219 to i64
  %221 = mul nsw i64 %216, %220
  %222 = or i64 %195, 5
  %223 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = sext i32 %224 to i64
  %226 = mul nsw i64 %221, %225
  %227 = or i64 %195, 6
  %228 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = sext i32 %229 to i64
  %231 = mul nsw i64 %226, %230
  %232 = or i64 %195, 7
  %233 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %232
  %234 = load i32, i32* %233, align 4
  %235 = sext i32 %234 to i64
  %236 = mul nsw i64 %231, %235
  %237 = add nuw nsw i64 %195, 8
  %238 = add i64 %197, -8
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %240, label %194

240:                                              ; preds = %194, %186
  %241 = phi i64 [ undef, %186 ], [ %236, %194 ]
  %242 = phi i64 [ 0, %186 ], [ %237, %194 ]
  %243 = phi i64 [ 1, %186 ], [ %236, %194 ]
  %244 = icmp eq i64 %190, 0
  br i1 %244, label %256, label %245

245:                                              ; preds = %240, %245
  %246 = phi i64 [ %253, %245 ], [ %242, %240 ]
  %247 = phi i64 [ %252, %245 ], [ %243, %240 ]
  %248 = phi i64 [ %254, %245 ], [ %190, %240 ]
  %249 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %246
  %250 = load i32, i32* %249, align 4
  %251 = sext i32 %250 to i64
  %252 = mul nsw i64 %247, %251
  %253 = add nuw nsw i64 %246, 1
  %254 = add i64 %248, -1
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %256, label %245, !llvm.loop !12

256:                                              ; preds = %245, %240
  %257 = phi i64 [ %241, %240 ], [ %252, %245 ]
  tail call void (%struct.TfLiteContext*, i8*, ...) %188(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 164, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 %257, i32 1) #10
  br label %323

258:                                              ; preds = %108, %183
  %259 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %260 = load i32, i32* %259, align 8
  switch i32 %260, label %261 [
    i32 2, label %264
    i32 4, label %264
  ]

261:                                              ; preds = %258
  %262 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %263 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %262, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %263(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 167, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.25, i64 0, i64 0)) #10
  br label %323

264:                                              ; preds = %258, %258
  %265 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %266 = load i32, i32* %265, align 8
  switch i32 %266, label %267 [
    i32 2, label %270
    i32 4, label %270
  ]

267:                                              ; preds = %264
  %268 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %269 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %268, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %269(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 169, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.26, i64 0, i64 0)) #10
  br label %323

270:                                              ; preds = %264, %264
  %271 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 0, i32 0
  %272 = load i32, i32* %271, align 8
  switch i32 %272, label %273 [
    i32 2, label %276
    i32 4, label %276
    i32 9, label %276
    i32 3, label %276
    i32 1, label %276
  ]

273:                                              ; preds = %270
  %274 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %275 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %274, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %275(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 174, i8* getelementptr inbounds ([158 x i8], [158 x i8]* @.str.27, i64 0, i64 0)) #10
  br label %323

276:                                              ; preds = %270, %270, %270, %270, %270
  %277 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 0
  %278 = load i32, i32* %277, align 8
  %279 = icmp eq i32 %272, %278
  br i1 %279, label %286, label %280

280:                                              ; preds = %276
  %281 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %282 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %281, align 8
  %283 = tail call i8* @TfLiteTypeGetName(i32 %272) #10
  %284 = load i32, i32* %277, align 8
  %285 = tail call i8* @TfLiteTypeGetName(i32 %284) #10
  tail call void (%struct.TfLiteContext*, i8*, ...) %282(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30, i64 0, i64 0), i8* %283, i8* %285) #10
  br label %323

286:                                              ; preds = %276
  %287 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense20CheckDimensionsMatchEP13TfLiteContextPK12TfLiteTensorS7_S7_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %40, %struct.TfLiteTensor* %50)
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %323

289:                                              ; preds = %286
  %290 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %291 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %290, i64 0, i32 1, i64 0
  %292 = load i32, i32* %291, align 4
  %293 = icmp slt i32 %292, 0
  br i1 %293, label %299, label %294

294:                                              ; preds = %289
  %295 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %296 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %295, align 8
  %297 = sext i32 %292 to i64
  %298 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %296, i64 %297
  br label %299

299:                                              ; preds = %289, %294
  %300 = phi %struct.TfLiteTensor* [ %298, %294 ], [ null, %289 ]
  %301 = load i32, i32* %271, align 8
  %302 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %300, i64 0, i32 0
  store i32 %301, i32* %302, align 8
  %303 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %77, align 8
  %304 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %303, i64 0, i32 0
  %305 = load i32, i32* %304, align 4
  %306 = icmp eq i32 %305, 1
  br i1 %306, label %310, label %307

307:                                              ; preds = %299
  %308 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %309 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %308, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %309(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 183, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %305, i32 1) #10
  br label %323

310:                                              ; preds = %299
  %311 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 4
  %312 = load i32, i32* %311, align 8
  %313 = icmp eq i32 %312, 1
  br i1 %313, label %321, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %300, i64 0, i32 4
  %316 = load i32, i32* %315, align 8
  %317 = icmp eq i32 %316, 4
  br i1 %317, label %323, label %318

318:                                              ; preds = %314
  store i32 4, i32* %315, align 8
  %319 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %300, i64 0, i32 1
  %320 = bitcast %union.TfLitePtrUnion* %319 to i8**
  store i8* null, i8** %320, align 8
  br label %323

321:                                              ; preds = %310
  %322 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %40, %struct.TfLiteTensor* %300)
  br label %323

323:                                              ; preds = %318, %314, %73, %89, %105, %256, %261, %267, %273, %280, %286, %321, %307, %17, %8
  %324 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %89 ], [ 1, %256 ], [ 1, %280 ], [ %287, %286 ], [ 1, %273 ], [ 1, %267 ], [ 1, %261 ], [ 1, %105 ], [ 1, %73 ], [ 1, %307 ], [ %322, %321 ], [ 0, %314 ], [ 0, %318 ]
  ret i32 %324
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #2

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %20 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %19, align 8
  %21 = sext i32 %16 to i64
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %20, i64 %21
  br label %23

23:                                               ; preds = %13, %18
  %24 = phi %struct.TfLiteTensor* [ %22, %18 ], [ null, %13 ]
  %25 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  switch i32 %26, label %82 [
    i32 1, label %27
    i32 2, label %38
    i32 4, label %49
    i32 9, label %60
    i32 3, label %71
  ]

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  switch i32 %29, label %34 [
    i32 2, label %30
    i32 4, label %32
  ]

30:                                               ; preds = %27
  %31 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIfiEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1) #10
  br label %86

32:                                               ; preds = %27
  %33 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIflEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1) #10
  br label %86

34:                                               ; preds = %27
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %36 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %35, align 8
  %37 = tail call i8* @TfLiteTypeGetName(i32 %29) #10
  tail call void (%struct.TfLiteContext*, i8*, ...) %36(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.33, i64 0, i64 0), i8* %37) #10
  br label %86

38:                                               ; preds = %23
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %40 = load i32, i32* %39, align 8
  switch i32 %40, label %45 [
    i32 2, label %41
    i32 4, label %43
  ]

41:                                               ; preds = %38
  %42 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIiiEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1) #10
  br label %86

43:                                               ; preds = %38
  %44 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIilEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1) #10
  br label %86

45:                                               ; preds = %38
  %46 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %47 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %46, align 8
  %48 = tail call i8* @TfLiteTypeGetName(i32 %40) #10
  tail call void (%struct.TfLiteContext*, i8*, ...) %47(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.33, i64 0, i64 0), i8* %48) #10
  br label %86

49:                                               ; preds = %23
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %51 = load i32, i32* %50, align 8
  switch i32 %51, label %56 [
    i32 2, label %52
    i32 4, label %54
  ]

52:                                               ; preds = %49
  %53 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIliEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1) #10
  br label %86

54:                                               ; preds = %49
  %55 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIllEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1) #10
  br label %86

56:                                               ; preds = %49
  %57 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %58 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %57, align 8
  %59 = tail call i8* @TfLiteTypeGetName(i32 %51) #10
  tail call void (%struct.TfLiteContext*, i8*, ...) %58(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.33, i64 0, i64 0), i8* %59) #10
  br label %86

60:                                               ; preds = %23
  %61 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  switch i32 %62, label %67 [
    i32 2, label %63
    i32 4, label %65
  ]

63:                                               ; preds = %60
  %64 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIaiEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1) #10
  br label %86

65:                                               ; preds = %60
  %66 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIalEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1) #10
  br label %86

67:                                               ; preds = %60
  %68 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %69 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %68, align 8
  %70 = tail call i8* @TfLiteTypeGetName(i32 %62) #10
  tail call void (%struct.TfLiteContext*, i8*, ...) %69(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.33, i64 0, i64 0), i8* %70) #10
  br label %86

71:                                               ; preds = %23
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %73 = load i32, i32* %72, align 8
  switch i32 %73, label %78 [
    i32 2, label %74
    i32 4, label %76
  ]

74:                                               ; preds = %71
  %75 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIhiEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1) #10
  br label %86

76:                                               ; preds = %71
  %77 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIhlEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1) #10
  br label %86

78:                                               ; preds = %71
  %79 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %80 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %79, align 8
  %81 = tail call i8* @TfLiteTypeGetName(i32 %73) #10
  tail call void (%struct.TfLiteContext*, i8*, ...) %80(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.33, i64 0, i64 0), i8* %81) #10
  br label %86

82:                                               ; preds = %23
  %83 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %84 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %83, align 8
  %85 = tail call i8* @TfLiteTypeGetName(i32 %26) #10
  tail call void (%struct.TfLiteContext*, i8*, ...) %84(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.31, i64 0, i64 0), i8* %85) #10
  br label %86

86:                                               ; preds = %78, %76, %74, %67, %65, %63, %56, %54, %52, %45, %43, %41, %34, %32, %30, %82
  %87 = phi i32 [ 1, %82 ], [ 1, %34 ], [ %33, %32 ], [ %31, %30 ], [ 1, %45 ], [ %44, %43 ], [ %42, %41 ], [ 1, %56 ], [ %55, %54 ], [ %53, %52 ], [ 1, %67 ], [ %66, %65 ], [ %64, %63 ], [ 1, %78 ], [ %77, %76 ], [ %75, %74 ]
  ret i32 %87
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin24Register_SPARSE_TO_DENSEEv() local_unnamed_addr #4 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin24Register_SPARSE_TO_DENSEEvE1r
}

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIfiEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %12 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 %13
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi %struct.TfLiteTensor* [ %14, %10 ], [ null, %2 ]
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %15, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %15 ]
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %25, %30
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %25 ]
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %35, %40
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %35 ]
  %47 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %54 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %53, align 8
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 %55
  br label %57

57:                                               ; preds = %45, %52
  %58 = phi %struct.TfLiteTensor* [ %56, %52 ], [ null, %45 ]
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 4
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %26, %struct.TfLiteTensor* %58)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %167

65:                                               ; preds = %62, %57
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 2
  %67 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %66, align 8
  %68 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %67, i64 0, i32 1, i64 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 2
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  %75 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false) #10
  %78 = sext i32 %69 to i64
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE7reserveEm(%"class.std::__1::vector"* nonnull %3, i64 %78)
  %79 = call i32 @_ZN6tflite3ops7builtin15sparse_to_dense16GetIndicesVectorIiEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensoriPNSt3__16vectorINSB_IT_NSA_9allocatorISC_EEEENSD_ISF_EEEE(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %16, i32 %69, %"class.std::__1::vector"* nonnull %3)
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %141

81:                                               ; preds = %65
  %82 = icmp eq %struct.TfLiteTensor* %36, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1
  %85 = bitcast %union.TfLitePtrUnion* %84 to float**
  %86 = load float*, float** %85, align 8
  br label %87

87:                                               ; preds = %81, %83
  %88 = phi float* [ %86, %83 ], [ null, %81 ]
  %89 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %92 = bitcast %union.TfLitePtrUnion* %91 to float**
  %93 = load float*, float** %92, align 8
  br label %94

94:                                               ; preds = %87, %90
  %95 = phi float* [ %93, %90 ], [ null, %87 ]
  %96 = load float, float* %95, align 4
  %97 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #10
  %98 = icmp eq %struct.TfLiteTensor* %58, null
  br i1 %98, label %99, label %101

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %100, align 8, !alias.scope !13
  br label %129

101:                                              ; preds = %94
  %102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 2
  %103 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %102, align 8, !noalias !13
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4, !noalias !13
  %106 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 1, i64 0
  %107 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %105, i32* %107, align 8, !alias.scope !13
  %108 = icmp sgt i32 %105, 5
  br i1 %108, label %109, label %116

109:                                              ; preds = %101
  %110 = sext i32 %105 to i64
  %111 = shl nsw i64 %110, 2
  %112 = call i8* @_Znam(i64 %111) #13, !noalias !13
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %114 = bitcast i32** %113 to i8**
  store i8* %112, i8** %114, align 8, !alias.scope !13
  %115 = bitcast i8* %112 to i32*
  br label %121

116:                                              ; preds = %101
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %118 = bitcast %union.anon* %117 to i32*
  %119 = sext i32 %105 to i64
  %120 = shl nsw i64 %119, 2
  br label %121

121:                                              ; preds = %116, %109
  %122 = phi i64 [ %111, %109 ], [ %120, %116 ]
  %123 = phi i32* [ %115, %109 ], [ %118, %116 ]
  %124 = bitcast i32* %123 to i8*
  %125 = bitcast i32* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 %122, i1 false) #10
  %126 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 1
  %127 = bitcast %union.TfLitePtrUnion* %126 to float**
  %128 = load float*, float** %127, align 8
  br label %129

129:                                              ; preds = %99, %121
  %130 = phi float* [ %128, %121 ], [ null, %99 ]
  call void @_ZN6tflite13reference_ops13SparseToDenseIfiEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector"* nonnull dereferenceable(24) %3, float* %88, float %96, i1 zeroext %74, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, float* %130)
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = icmp sgt i32 %132, 5
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast i32* %136 to i8*
  call void @_ZdaPv(i8* %139) #13
  br label %140

140:                                              ; preds = %129, %134, %138
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #10
  br label %141

141:                                              ; preds = %65, %140
  %142 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %76, align 8
  %143 = icmp eq %"class.std::__1::vector.1"* %142, null
  br i1 %143, label %166, label %144

144:                                              ; preds = %141
  %145 = bitcast %"class.std::__1::vector.1"* %142 to i8*
  %146 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %77, align 8
  %147 = icmp eq %"class.std::__1::vector.1"* %146, %142
  br i1 %147, label %164, label %148

148:                                              ; preds = %144, %159
  %149 = phi %"class.std::__1::vector.1"* [ %150, %159 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %149, i64 -1
  %151 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %150, i64 0, i32 0, i32 0
  %152 = load i32*, i32** %151, align 8
  %153 = icmp eq i32* %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %148
  %155 = ptrtoint i32* %152 to i64
  %156 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %149, i64 -1, i32 0, i32 1
  %157 = bitcast i32** %156 to i64*
  store i64 %155, i64* %157, align 8
  %158 = bitcast i32* %152 to i8*
  call void @_ZdlPv(i8* %158) #13
  br label %159

159:                                              ; preds = %154, %148
  %160 = icmp eq %"class.std::__1::vector.1"* %150, %142
  br i1 %160, label %161, label %148

161:                                              ; preds = %159
  %162 = bitcast %"class.std::__1::vector"* %3 to i8**
  %163 = load i8*, i8** %162, align 8
  br label %164

164:                                              ; preds = %161, %144
  %165 = phi i8* [ %163, %161 ], [ %145, %144 ]
  store %"class.std::__1::vector.1"* %142, %"class.std::__1::vector.1"** %77, align 8
  call void @_ZdlPv(i8* %165) #13
  br label %166

166:                                              ; preds = %141, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #10
  br label %167

167:                                              ; preds = %62, %166
  %168 = phi i32 [ %79, %166 ], [ %63, %62 ]
  ret i32 %168
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIflEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.std::__1::vector.14", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %12 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 %13
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi %struct.TfLiteTensor* [ %14, %10 ], [ null, %2 ]
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %15, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %15 ]
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %25, %30
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %25 ]
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %35, %40
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %35 ]
  %47 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %54 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %53, align 8
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 %55
  br label %57

57:                                               ; preds = %45, %52
  %58 = phi %struct.TfLiteTensor* [ %56, %52 ], [ null, %45 ]
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 4
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %26, %struct.TfLiteTensor* %58)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %167

65:                                               ; preds = %62, %57
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 2
  %67 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %66, align 8
  %68 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %67, i64 0, i32 1, i64 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 2
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  %75 = bitcast %"class.std::__1::vector.14"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false) #10
  %78 = sext i32 %69 to i64
  call void @_ZNSt3__16vectorINS0_IlNS_9allocatorIlEEEENS1_IS3_EEE7reserveEm(%"class.std::__1::vector.14"* nonnull %3, i64 %78)
  %79 = call i32 @_ZN6tflite3ops7builtin15sparse_to_dense16GetIndicesVectorIlEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensoriPNSt3__16vectorINSB_IT_NSA_9allocatorISC_EEEENSD_ISF_EEEE(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %16, i32 %69, %"class.std::__1::vector.14"* nonnull %3)
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %141

81:                                               ; preds = %65
  %82 = icmp eq %struct.TfLiteTensor* %36, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1
  %85 = bitcast %union.TfLitePtrUnion* %84 to float**
  %86 = load float*, float** %85, align 8
  br label %87

87:                                               ; preds = %81, %83
  %88 = phi float* [ %86, %83 ], [ null, %81 ]
  %89 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %92 = bitcast %union.TfLitePtrUnion* %91 to float**
  %93 = load float*, float** %92, align 8
  br label %94

94:                                               ; preds = %87, %90
  %95 = phi float* [ %93, %90 ], [ null, %87 ]
  %96 = load float, float* %95, align 4
  %97 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #10
  %98 = icmp eq %struct.TfLiteTensor* %58, null
  br i1 %98, label %99, label %101

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %100, align 8, !alias.scope !16
  br label %129

101:                                              ; preds = %94
  %102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 2
  %103 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %102, align 8, !noalias !16
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4, !noalias !16
  %106 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 1, i64 0
  %107 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %105, i32* %107, align 8, !alias.scope !16
  %108 = icmp sgt i32 %105, 5
  br i1 %108, label %109, label %116

109:                                              ; preds = %101
  %110 = sext i32 %105 to i64
  %111 = shl nsw i64 %110, 2
  %112 = call i8* @_Znam(i64 %111) #13, !noalias !16
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %114 = bitcast i32** %113 to i8**
  store i8* %112, i8** %114, align 8, !alias.scope !16
  %115 = bitcast i8* %112 to i32*
  br label %121

116:                                              ; preds = %101
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %118 = bitcast %union.anon* %117 to i32*
  %119 = sext i32 %105 to i64
  %120 = shl nsw i64 %119, 2
  br label %121

121:                                              ; preds = %116, %109
  %122 = phi i64 [ %111, %109 ], [ %120, %116 ]
  %123 = phi i32* [ %115, %109 ], [ %118, %116 ]
  %124 = bitcast i32* %123 to i8*
  %125 = bitcast i32* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 %122, i1 false) #10
  %126 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 1
  %127 = bitcast %union.TfLitePtrUnion* %126 to float**
  %128 = load float*, float** %127, align 8
  br label %129

129:                                              ; preds = %99, %121
  %130 = phi float* [ %128, %121 ], [ null, %99 ]
  call void @_ZN6tflite13reference_ops13SparseToDenseIflEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector.14"* nonnull dereferenceable(24) %3, float* %88, float %96, i1 zeroext %74, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, float* %130)
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = icmp sgt i32 %132, 5
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast i32* %136 to i8*
  call void @_ZdaPv(i8* %139) #13
  br label %140

140:                                              ; preds = %129, %134, %138
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #10
  br label %141

141:                                              ; preds = %65, %140
  %142 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %76, align 8
  %143 = icmp eq %"class.std::__1::vector.16"* %142, null
  br i1 %143, label %166, label %144

144:                                              ; preds = %141
  %145 = bitcast %"class.std::__1::vector.16"* %142 to i8*
  %146 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %77, align 8
  %147 = icmp eq %"class.std::__1::vector.16"* %146, %142
  br i1 %147, label %164, label %148

148:                                              ; preds = %144, %159
  %149 = phi %"class.std::__1::vector.16"* [ %150, %159 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %149, i64 -1
  %151 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %150, i64 0, i32 0, i32 0
  %152 = load i64*, i64** %151, align 8
  %153 = icmp eq i64* %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %148
  %155 = ptrtoint i64* %152 to i64
  %156 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %149, i64 -1, i32 0, i32 1
  %157 = bitcast i64** %156 to i64*
  store i64 %155, i64* %157, align 8
  %158 = bitcast i64* %152 to i8*
  call void @_ZdlPv(i8* %158) #13
  br label %159

159:                                              ; preds = %154, %148
  %160 = icmp eq %"class.std::__1::vector.16"* %150, %142
  br i1 %160, label %161, label %148

161:                                              ; preds = %159
  %162 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %163 = load i8*, i8** %162, align 8
  br label %164

164:                                              ; preds = %161, %144
  %165 = phi i8* [ %163, %161 ], [ %145, %144 ]
  store %"class.std::__1::vector.16"* %142, %"class.std::__1::vector.16"** %77, align 8
  call void @_ZdlPv(i8* %165) #13
  br label %166

166:                                              ; preds = %141, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #10
  br label %167

167:                                              ; preds = %62, %166
  %168 = phi i32 [ %79, %166 ], [ %63, %62 ]
  ret i32 %168
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::vector.1"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::vector.1"*
  br i1 %10, label %12, label %76

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::vector.1"** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #12
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #13
  %23 = bitcast i8* %22 to %"class.std::__1::vector.1"*
  %24 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::vector.1"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::vector.1"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::vector.1"*
  %29 = icmp eq %"class.std::__1::vector.1"* %28, %11
  br i1 %29, label %30, label %31

30:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %71

31:                                               ; preds = %17, %31
  %32 = phi %"class.std::__1::vector.1"* [ %34, %31 ], [ %24, %17 ]
  %33 = phi %"class.std::__1::vector.1"* [ %35, %31 ], [ %28, %17 ]
  %34 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %32, i64 -1
  %35 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %33, i64 -1
  %36 = bitcast %"class.std::__1::vector.1"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #10
  %37 = bitcast %"class.std::__1::vector.1"* %35 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector.1"* %34 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %33, i64 -1, i32 0, i32 1
  %41 = bitcast i32** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %32, i64 -1, i32 0, i32 1
  %44 = bitcast i32** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %33, i64 -1, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast i32** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %32, i64 -1, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast i32** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = bitcast %"class.std::__1::vector.1"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #10
  %51 = icmp eq %"class.std::__1::vector.1"* %35, %11
  br i1 %51, label %52, label %31

52:                                               ; preds = %31
  %53 = ptrtoint %"class.std::__1::vector.1"* %34 to i64
  %54 = load i64, i64* %6, align 8
  %55 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %13, align 8
  %56 = inttoptr i64 %54 to %"class.std::__1::vector.1"*
  store i64 %53, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %57 = icmp eq %"class.std::__1::vector.1"* %55, %56
  br i1 %57, label %71, label %58

58:                                               ; preds = %52, %69
  %59 = phi %"class.std::__1::vector.1"* [ %60, %69 ], [ %55, %52 ]
  %60 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %59, i64 -1
  %61 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %60, i64 0, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = icmp eq i32* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %58
  %65 = ptrtoint i32* %62 to i64
  %66 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %59, i64 -1, i32 0, i32 1
  %67 = bitcast i32** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = bitcast i32* %62 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %64, %58
  %70 = icmp eq %"class.std::__1::vector.1"* %60, %56
  br i1 %70, label %71, label %58

71:                                               ; preds = %69, %30, %52
  %72 = phi i64 [ %7, %30 ], [ %54, %52 ], [ %54, %69 ]
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %75) #13
  br label %76

76:                                               ; preds = %74, %71, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense16GetIndicesVectorIiEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensoriPNSt3__16vectorINSB_IT_NSA_9allocatorISC_EEEENSD_ISF_EEEE(%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, %"class.std::__1::vector"*) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.std::__1::vector.1", align 8
  %6 = alloca %"class.std::__1::vector.1", align 8
  %7 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %8 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %320 [
    i32 0, label %11
    i32 1, label %11
    i32 2, label %99
  ]

11:                                               ; preds = %4, %4
  %12 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1, i32 0
  %15 = load i32*, i32** %14, align 8
  br label %16

16:                                               ; preds = %11, %13
  %17 = phi i32* [ %15, %13 ], [ null, %11 ]
  %18 = icmp sgt i32 %2, 0
  br i1 %18, label %19, label %323

19:                                               ; preds = %16
  %20 = bitcast %"class.std::__1::vector.1"* %5 to i8*
  %21 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %5, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %5, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.std::__1::vector.1"* %5 to i8**
  %25 = bitcast i32** %23 to i8**
  %26 = bitcast i32** %22 to i64*
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast %"class.std::__1::vector.1"* %5 to i64*
  %30 = bitcast %"class.std::__1::vector.1"** %27 to i64*
  %31 = zext i32 %2 to i64
  %32 = bitcast %"class.std::__1::vector.1"* %5 to i8*
  br label %33

33:                                               ; preds = %96, %19
  %34 = phi i64 [ 0, %19 ], [ %97, %96 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  %35 = getelementptr inbounds i32, i32* %17, i64 %34
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  %36 = load i32, i32* %35, align 4
  %37 = call i8* @_Znwm(i64 16) #13
  %38 = bitcast i8* %37 to i32*
  store i8* %37, i8** %24, align 8
  %39 = getelementptr inbounds i8, i8* %37, i64 16
  store i8* %39, i8** %25, align 8
  store i32 0, i32* %38, align 4
  %40 = getelementptr inbounds i8, i8* %37, i64 4
  %41 = bitcast i8* %40 to i32*
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %37, i64 8
  %43 = bitcast i8* %42 to i32*
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %37, i64 12
  %45 = bitcast i8* %44 to i32*
  store i32 %36, i32* %45, align 4
  %46 = ptrtoint i8* %39 to i64
  store i64 %46, i64* %26, align 8
  %47 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %27, align 8
  %48 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %28, align 8
  %49 = icmp eq %"class.std::__1::vector.1"* %47, %48
  br i1 %49, label %88, label %50

50:                                               ; preds = %33
  %51 = bitcast %"class.std::__1::vector.1"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #10
  %52 = load i64, i64* %26, align 8
  %53 = load i64, i64* %29, align 8
  %54 = sub i64 %52, %53
  %55 = ashr exact i64 %54, 2
  %56 = icmp eq i64 %54, 0
  %57 = inttoptr i64 %53 to i32*
  br i1 %56, label %84, label %58

58:                                               ; preds = %50
  %59 = icmp ugt i64 %55, 4611686018427387903
  br i1 %59, label %60, label %62

60:                                               ; preds = %58
  %61 = bitcast %"class.std::__1::vector.1"* %47 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %61) #12
  unreachable

62:                                               ; preds = %58
  %63 = call i8* @_Znwm(i64 %54) #13
  %64 = bitcast i8* %63 to i32*
  %65 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %47, i64 0, i32 0, i32 1
  %66 = bitcast i32** %65 to i8**
  store i8* %63, i8** %66, align 8
  %67 = bitcast %"class.std::__1::vector.1"* %47 to i8**
  store i8* %63, i8** %67, align 8
  %68 = getelementptr inbounds i32, i32* %64, i64 %55
  %69 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %47, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %68, i32** %69, align 8
  %70 = load i32*, i32** %21, align 8
  %71 = load i64, i64* %26, align 8
  %72 = bitcast i32** %65 to i64*
  %73 = ptrtoint i8* %63 to i64
  %74 = ptrtoint i32* %70 to i64
  %75 = sub i64 %71, %74
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %77, label %82

77:                                               ; preds = %62
  %78 = lshr exact i64 %75, 2
  %79 = bitcast i32* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %63, i8* align 4 %79, i64 %75, i1 false) #10
  %80 = getelementptr inbounds i32, i32* %64, i64 %78
  %81 = ptrtoint i32* %80 to i64
  br label %82

82:                                               ; preds = %77, %62
  %83 = phi i64 [ %81, %77 ], [ %73, %62 ]
  store i64 %83, i64* %72, align 8
  br label %84

84:                                               ; preds = %82, %50
  %85 = phi i32* [ %70, %82 ], [ %57, %50 ]
  %86 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %47, i64 1
  %87 = ptrtoint %"class.std::__1::vector.1"* %86 to i64
  store i64 %87, i64* %30, align 8
  br label %90

88:                                               ; preds = %33
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* %3, %"class.std::__1::vector.1"* nonnull dereferenceable(24) %5) #10
  %89 = load i32*, i32** %21, align 8
  br label %90

90:                                               ; preds = %84, %88
  %91 = phi i32* [ %85, %84 ], [ %89, %88 ]
  %92 = icmp eq i32* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %90
  %94 = ptrtoint i32* %91 to i64
  store i64 %94, i64* %26, align 8
  %95 = bitcast i32* %91 to i8*
  call void @_ZdlPv(i8* %95) #13
  br label %96

96:                                               ; preds = %90, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  %97 = add nuw nsw i64 %34, 1
  %98 = icmp eq i64 %97, %31
  br i1 %98, label %323, label %33

99:                                               ; preds = %4
  %100 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 1
  %101 = load i32, i32* %100, align 4
  %102 = icmp slt i32 %101, 5
  br i1 %102, label %103, label %124

103:                                              ; preds = %99
  %104 = icmp sgt i32 %2, 0
  br i1 %104, label %105, label %323

105:                                              ; preds = %103
  %106 = bitcast %"class.std::__1::vector.1"* %6 to i8*
  %107 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %6, i64 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %6, i64 0, i32 0, i32 1
  %109 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %110 = bitcast i32** %109 to i64*
  %111 = bitcast %"class.std::__1::vector.1"* %6 to i64*
  %112 = bitcast i32** %108 to i64*
  %113 = sub nsw i32 4, %101
  %114 = icmp slt i32 %101, 4
  %115 = icmp sgt i32 %101, 0
  %116 = icmp eq %struct.TfLiteTensor* %1, null
  %117 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1, i32 0
  %118 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %119 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %120 = bitcast %"class.std::__1::vector.1"** %118 to i64*
  %121 = sext i32 %101 to i64
  %122 = zext i32 %2 to i64
  %123 = zext i32 %101 to i64
  br label %127

124:                                              ; preds = %99
  %125 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %126 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %125, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %126(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 102, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.35, i64 0, i64 0)) #10
  br label %323

127:                                              ; preds = %105, %254
  %128 = phi i64 [ 0, %105 ], [ %255, %254 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #10
  %129 = call i8* @_Znwm(i64 16) #13
  %130 = ptrtoint i8* %129 to i64
  %131 = getelementptr inbounds i8, i8* %129, i64 16
  %132 = ptrtoint i8* %131 to i64
  %133 = ptrtoint i8* %129 to i64
  store i64 %133, i64* %111, align 8
  store i64 %130, i64* %112, align 8
  store i64 %132, i64* %110, align 8
  br i1 %114, label %134, label %137

134:                                              ; preds = %127
  %135 = bitcast i8* %131 to i32*
  %136 = bitcast i8* %129 to i32*
  br label %140

137:                                              ; preds = %197, %127
  br i1 %115, label %138, label %204

138:                                              ; preds = %137
  %139 = mul nsw i64 %128, %121
  br label %257

140:                                              ; preds = %134, %200
  %141 = phi i64 [ %203, %200 ], [ %130, %134 ]
  %142 = phi i32* [ %202, %200 ], [ %135, %134 ]
  %143 = phi i32* [ %201, %200 ], [ %136, %134 ]
  %144 = phi i32 [ %198, %200 ], [ 0, %134 ]
  %145 = icmp ult i32* %143, %142
  %146 = ptrtoint i32* %142 to i64
  br i1 %145, label %147, label %150

147:                                              ; preds = %140
  store i32 0, i32* %143, align 4
  %148 = getelementptr inbounds i32, i32* %143, i64 1
  %149 = ptrtoint i32* %148 to i64
  store i64 %149, i64* %112, align 8
  br label %197

150:                                              ; preds = %140
  %151 = ptrtoint i32* %143 to i64
  %152 = load i64, i64* %111, align 8
  %153 = sub i64 %151, %152
  %154 = ashr exact i64 %153, 2
  %155 = add nsw i64 %154, 1
  %156 = icmp ugt i64 %155, 4611686018427387903
  br i1 %156, label %157, label %159

157:                                              ; preds = %150
  %158 = bitcast %"class.std::__1::vector.1"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %158) #12
  unreachable

159:                                              ; preds = %150
  %160 = sub i64 %146, %152
  %161 = ashr exact i64 %160, 2
  %162 = icmp ult i64 %161, 2305843009213693951
  br i1 %162, label %163, label %171

163:                                              ; preds = %159
  %164 = ashr exact i64 %160, 1
  %165 = icmp ult i64 %164, %155
  %166 = select i1 %165, i64 %155, i64 %164
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %176, label %168

168:                                              ; preds = %163
  %169 = icmp ugt i64 %166, 4611686018427387903
  br i1 %169, label %170, label %171

170:                                              ; preds = %168
  call void @abort() #12
  unreachable

171:                                              ; preds = %168, %159
  %172 = phi i64 [ %166, %168 ], [ 4611686018427387903, %159 ]
  %173 = shl i64 %172, 2
  %174 = call i8* @_Znwm(i64 %173) #13
  %175 = bitcast i8* %174 to i32*
  br label %176

176:                                              ; preds = %171, %163
  %177 = phi i64 [ %172, %171 ], [ 0, %163 ]
  %178 = phi i32* [ %175, %171 ], [ null, %163 ]
  %179 = getelementptr inbounds i32, i32* %178, i64 %154
  %180 = getelementptr inbounds i32, i32* %178, i64 %177
  %181 = ptrtoint i32* %180 to i64
  store i32 0, i32* %179, align 4
  %182 = getelementptr inbounds i32, i32* %179, i64 1
  %183 = ptrtoint i32* %182 to i64
  %184 = sub i64 %141, %152
  %185 = ashr exact i64 %184, 2
  %186 = sub nsw i64 0, %185
  %187 = getelementptr inbounds i32, i32* %179, i64 %186
  %188 = ptrtoint i32* %187 to i64
  %189 = icmp sgt i64 %184, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %176
  %191 = bitcast i32* %187 to i8*
  %192 = inttoptr i64 %152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %191, i8* align 4 %192, i64 %184, i1 false) #10
  br label %193

193:                                              ; preds = %190, %176
  store i64 %188, i64* %111, align 8
  store i64 %183, i64* %112, align 8
  store i64 %181, i64* %110, align 8
  %194 = icmp eq i64 %152, 0
  br i1 %194, label %197, label %195

195:                                              ; preds = %193
  %196 = inttoptr i64 %152 to i8*
  call void @_ZdlPv(i8* %196) #13
  br label %197

197:                                              ; preds = %147, %193, %195
  %198 = add nuw nsw i32 %144, 1
  %199 = icmp slt i32 %198, %113
  br i1 %199, label %200, label %137

200:                                              ; preds = %197
  %201 = load i32*, i32** %108, align 8
  %202 = load i32*, i32** %109, align 8
  %203 = ptrtoint i32* %201 to i64
  br label %140

204:                                              ; preds = %317, %137
  %205 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %118, align 8
  %206 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %119, align 8
  %207 = icmp eq %"class.std::__1::vector.1"* %205, %206
  br i1 %207, label %246, label %208

208:                                              ; preds = %204
  %209 = bitcast %"class.std::__1::vector.1"* %205 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 24, i1 false) #10
  %210 = load i64, i64* %112, align 8
  %211 = load i64, i64* %111, align 8
  %212 = sub i64 %210, %211
  %213 = ashr exact i64 %212, 2
  %214 = icmp eq i64 %212, 0
  %215 = inttoptr i64 %211 to i32*
  br i1 %214, label %242, label %216

216:                                              ; preds = %208
  %217 = icmp ugt i64 %213, 4611686018427387903
  br i1 %217, label %218, label %220

218:                                              ; preds = %216
  %219 = bitcast %"class.std::__1::vector.1"* %205 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %219) #12
  unreachable

220:                                              ; preds = %216
  %221 = call i8* @_Znwm(i64 %212) #13
  %222 = bitcast i8* %221 to i32*
  %223 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %205, i64 0, i32 0, i32 1
  %224 = bitcast i32** %223 to i8**
  store i8* %221, i8** %224, align 8
  %225 = bitcast %"class.std::__1::vector.1"* %205 to i8**
  store i8* %221, i8** %225, align 8
  %226 = getelementptr inbounds i32, i32* %222, i64 %213
  %227 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %205, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %226, i32** %227, align 8
  %228 = load i32*, i32** %107, align 8
  %229 = load i64, i64* %112, align 8
  %230 = bitcast i32** %223 to i64*
  %231 = ptrtoint i8* %221 to i64
  %232 = ptrtoint i32* %228 to i64
  %233 = sub i64 %229, %232
  %234 = icmp sgt i64 %233, 0
  br i1 %234, label %235, label %240

235:                                              ; preds = %220
  %236 = lshr exact i64 %233, 2
  %237 = bitcast i32* %228 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %221, i8* align 4 %237, i64 %233, i1 false) #10
  %238 = getelementptr inbounds i32, i32* %222, i64 %236
  %239 = ptrtoint i32* %238 to i64
  br label %240

240:                                              ; preds = %235, %220
  %241 = phi i64 [ %239, %235 ], [ %231, %220 ]
  store i64 %241, i64* %230, align 8
  br label %242

242:                                              ; preds = %240, %208
  %243 = phi i32* [ %228, %240 ], [ %215, %208 ]
  %244 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %205, i64 1
  %245 = ptrtoint %"class.std::__1::vector.1"* %244 to i64
  store i64 %245, i64* %120, align 8
  br label %248

246:                                              ; preds = %204
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* %3, %"class.std::__1::vector.1"* nonnull dereferenceable(24) %6) #10
  %247 = load i32*, i32** %107, align 8
  br label %248

248:                                              ; preds = %242, %246
  %249 = phi i32* [ %243, %242 ], [ %247, %246 ]
  %250 = icmp eq i32* %249, null
  br i1 %250, label %254, label %251

251:                                              ; preds = %248
  %252 = ptrtoint i32* %249 to i64
  store i64 %252, i64* %112, align 8
  %253 = bitcast i32* %249 to i8*
  call void @_ZdlPv(i8* %253) #13
  br label %254

254:                                              ; preds = %248, %251
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #10
  %255 = add nuw nsw i64 %128, 1
  %256 = icmp eq i64 %255, %122
  br i1 %256, label %323, label %127

257:                                              ; preds = %317, %138
  %258 = phi i64 [ 0, %138 ], [ %318, %317 ]
  br i1 %116, label %261, label %259

259:                                              ; preds = %257
  %260 = load i32*, i32** %117, align 8
  br label %261

261:                                              ; preds = %257, %259
  %262 = phi i32* [ %260, %259 ], [ null, %257 ]
  %263 = add nsw i64 %258, %139
  %264 = getelementptr inbounds i32, i32* %262, i64 %263
  %265 = load i32*, i32** %108, align 8
  %266 = load i32*, i32** %109, align 8
  %267 = icmp eq i32* %265, %266
  %268 = ptrtoint i32* %266 to i64
  br i1 %267, label %273, label %269

269:                                              ; preds = %261
  %270 = load i32, i32* %264, align 4
  store i32 %270, i32* %265, align 4
  %271 = getelementptr inbounds i32, i32* %265, i64 1
  %272 = ptrtoint i32* %271 to i64
  store i64 %272, i64* %112, align 8
  br label %317

273:                                              ; preds = %261
  %274 = ptrtoint i32* %265 to i64
  %275 = load i64, i64* %111, align 8
  %276 = sub i64 %274, %275
  %277 = ashr exact i64 %276, 2
  %278 = add nsw i64 %277, 1
  %279 = icmp ugt i64 %278, 4611686018427387903
  br i1 %279, label %280, label %282

280:                                              ; preds = %273
  %281 = bitcast %"class.std::__1::vector.1"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %281) #12
  unreachable

282:                                              ; preds = %273
  %283 = sub i64 %268, %275
  %284 = ashr exact i64 %283, 2
  %285 = icmp ult i64 %284, 2305843009213693951
  br i1 %285, label %286, label %294

286:                                              ; preds = %282
  %287 = ashr exact i64 %283, 1
  %288 = icmp ult i64 %287, %278
  %289 = select i1 %288, i64 %278, i64 %287
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %299, label %291

291:                                              ; preds = %286
  %292 = icmp ugt i64 %289, 4611686018427387903
  br i1 %292, label %293, label %294

293:                                              ; preds = %291
  call void @abort() #12
  unreachable

294:                                              ; preds = %291, %282
  %295 = phi i64 [ %289, %291 ], [ 4611686018427387903, %282 ]
  %296 = shl i64 %295, 2
  %297 = call i8* @_Znwm(i64 %296) #13
  %298 = bitcast i8* %297 to i32*
  br label %299

299:                                              ; preds = %294, %286
  %300 = phi i64 [ %295, %294 ], [ 0, %286 ]
  %301 = phi i8* [ %297, %294 ], [ null, %286 ]
  %302 = phi i32* [ %298, %294 ], [ null, %286 ]
  %303 = getelementptr inbounds i32, i32* %302, i64 %277
  %304 = getelementptr inbounds i32, i32* %302, i64 %300
  %305 = ptrtoint i32* %304 to i64
  %306 = load i32, i32* %264, align 4
  store i32 %306, i32* %303, align 4
  %307 = getelementptr inbounds i32, i32* %303, i64 1
  %308 = ptrtoint i32* %307 to i64
  %309 = ptrtoint i32* %302 to i64
  %310 = icmp sgt i64 %276, 0
  br i1 %310, label %311, label %313

311:                                              ; preds = %299
  %312 = inttoptr i64 %275 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %301, i8* align 4 %312, i64 %276, i1 false) #10
  br label %313

313:                                              ; preds = %311, %299
  store i64 %309, i64* %111, align 8
  store i64 %308, i64* %112, align 8
  store i64 %305, i64* %110, align 8
  %314 = icmp eq i64 %275, 0
  br i1 %314, label %317, label %315

315:                                              ; preds = %313
  %316 = inttoptr i64 %275 to i8*
  call void @_ZdlPv(i8* %316) #13
  br label %317

317:                                              ; preds = %269, %313, %315
  %318 = add nuw nsw i64 %258, 1
  %319 = icmp eq i64 %318, %123
  br i1 %319, label %204, label %257

320:                                              ; preds = %4
  %321 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %322 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %321, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %322(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.36, i64 0, i64 0), i32 %10) #10
  br label %323

323:                                              ; preds = %254, %96, %103, %16, %124, %320
  %324 = phi i32 [ 1, %320 ], [ 1, %124 ], [ 0, %16 ], [ 0, %103 ], [ 0, %96 ], [ 0, %254 ]
  ret i32 %324
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13SparseToDenseIfiEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector"* dereferenceable(24), float*, float, i1 zeroext, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #5 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !19
  %11 = load i32, i32* %8, align 8, !noalias !19
  %12 = icmp sgt i32 %11, 4
  br i1 %12, label %13, label %14

13:                                               ; preds = %6
  tail call void @abort() #12, !noalias !19
  unreachable

14:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !19
  %15 = sub i32 4, %11
  %16 = icmp sgt i32 %15, 0
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %16, label %18, label %98

18:                                               ; preds = %14
  %19 = bitcast %union.anon* %17 to [5 x i32]*
  %20 = zext i32 %15 to i64
  %21 = icmp ult i32 %15, 8
  br i1 %21, label %91, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967288
  %24 = add nsw i64 %23, -8
  %25 = lshr exact i64 %24, 3
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 7
  %28 = icmp ult i64 %24, 56
  br i1 %28, label %76, label %29

29:                                               ; preds = %22
  %30 = sub nsw i64 %26, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %73, %31 ]
  %33 = phi i64 [ %30, %29 ], [ %74, %31 ]
  %34 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %32
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !19
  %36 = getelementptr inbounds i32, i32* %34, i64 4
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %37, align 8, !alias.scope !19
  %38 = or i64 %32, 8
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %38
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !19
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !19
  %43 = or i64 %32, 16
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !19
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !19
  %48 = or i64 %32, 24
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !19
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !19
  %53 = or i64 %32, 32
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !19
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !19
  %58 = or i64 %32, 40
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !19
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !19
  %63 = or i64 %32, 48
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !19
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !19
  %68 = or i64 %32, 56
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !19
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !19
  %73 = add i64 %32, 64
  %74 = add i64 %33, -8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %31, !llvm.loop !22

76:                                               ; preds = %31, %22
  %77 = phi i64 [ 0, %22 ], [ %73, %31 ]
  %78 = icmp eq i64 %27, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %76, %79
  %80 = phi i64 [ %86, %79 ], [ %77, %76 ]
  %81 = phi i64 [ %87, %79 ], [ %27, %76 ]
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %80
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !19
  %84 = getelementptr inbounds i32, i32* %82, i64 4
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !19
  %86 = add i64 %80, 8
  %87 = add i64 %81, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %79, !llvm.loop !24

89:                                               ; preds = %79, %76
  %90 = icmp eq i64 %23, %20
  br i1 %90, label %98, label %91

91:                                               ; preds = %89, %18
  %92 = phi i64 [ 0, %18 ], [ %23, %89 ]
  br label %93

93:                                               ; preds = %91, %93
  %94 = phi i64 [ %96, %93 ], [ %92, %91 ]
  %95 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %94
  store i32 1, i32* %95, align 4, !alias.scope !19
  %96 = add nuw nsw i64 %94, 1
  %97 = icmp eq i64 %96, %20
  br i1 %97, label %98, label %93, !llvm.loop !25

98:                                               ; preds = %93, %89, %14
  %99 = bitcast %union.anon* %17 to i32*
  %100 = sext i32 %15 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %11, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !19
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %11 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #10
  %112 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::vector.1"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector"* %0 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = sdiv exact i64 %117, 24
  %119 = trunc i64 %118 to i32
  %120 = load i32, i32* %10, align 8
  %121 = icmp sgt i32 %120, 5
  br i1 %121, label %122, label %125

122:                                              ; preds = %98
  %123 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  br label %127

125:                                              ; preds = %98
  %126 = icmp sgt i32 %120, 0
  br i1 %126, label %127, label %230

127:                                              ; preds = %125, %122
  %128 = phi i32* [ %124, %122 ], [ %99, %125 ]
  %129 = zext i32 %120 to i64
  %130 = icmp ult i32 %120, 8
  br i1 %130, label %216, label %131

131:                                              ; preds = %127
  %132 = and i64 %129, 4294967288
  %133 = add nsw i64 %132, -8
  %134 = lshr exact i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 3
  %137 = icmp ult i64 %133, 24
  br i1 %137, label %183, label %138

138:                                              ; preds = %131
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %180, %140 ]
  %142 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %178, %140 ]
  %143 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %179, %140 ]
  %144 = phi i64 [ %139, %138 ], [ %181, %140 ]
  %145 = getelementptr inbounds i32, i32* %128, i64 %141
  %146 = bitcast i32* %145 to <4 x i32>*
  %147 = load <4 x i32>, <4 x i32>* %146, align 4
  %148 = getelementptr inbounds i32, i32* %145, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = mul nsw <4 x i32> %147, %142
  %152 = mul nsw <4 x i32> %150, %143
  %153 = or i64 %141, 8
  %154 = getelementptr inbounds i32, i32* %128, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4
  %157 = getelementptr inbounds i32, i32* %154, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = mul nsw <4 x i32> %156, %151
  %161 = mul nsw <4 x i32> %159, %152
  %162 = or i64 %141, 16
  %163 = getelementptr inbounds i32, i32* %128, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4
  %166 = getelementptr inbounds i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = mul nsw <4 x i32> %165, %160
  %170 = mul nsw <4 x i32> %168, %161
  %171 = or i64 %141, 24
  %172 = getelementptr inbounds i32, i32* %128, i64 %171
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4
  %175 = getelementptr inbounds i32, i32* %172, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = mul nsw <4 x i32> %174, %169
  %179 = mul nsw <4 x i32> %177, %170
  %180 = add i64 %141, 32
  %181 = add i64 %144, -4
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %140, !llvm.loop !27

183:                                              ; preds = %140, %131
  %184 = phi <4 x i32> [ undef, %131 ], [ %178, %140 ]
  %185 = phi <4 x i32> [ undef, %131 ], [ %179, %140 ]
  %186 = phi i64 [ 0, %131 ], [ %180, %140 ]
  %187 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %178, %140 ]
  %188 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %179, %140 ]
  %189 = icmp eq i64 %136, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %183, %190
  %191 = phi i64 [ %203, %190 ], [ %186, %183 ]
  %192 = phi <4 x i32> [ %201, %190 ], [ %187, %183 ]
  %193 = phi <4 x i32> [ %202, %190 ], [ %188, %183 ]
  %194 = phi i64 [ %204, %190 ], [ %136, %183 ]
  %195 = getelementptr inbounds i32, i32* %128, i64 %191
  %196 = bitcast i32* %195 to <4 x i32>*
  %197 = load <4 x i32>, <4 x i32>* %196, align 4
  %198 = getelementptr inbounds i32, i32* %195, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  %200 = load <4 x i32>, <4 x i32>* %199, align 4
  %201 = mul nsw <4 x i32> %197, %192
  %202 = mul nsw <4 x i32> %200, %193
  %203 = add i64 %191, 8
  %204 = add i64 %194, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %190, !llvm.loop !28

206:                                              ; preds = %190, %183
  %207 = phi <4 x i32> [ %184, %183 ], [ %201, %190 ]
  %208 = phi <4 x i32> [ %185, %183 ], [ %202, %190 ]
  %209 = mul <4 x i32> %208, %207
  %210 = shufflevector <4 x i32> %209, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %211 = mul <4 x i32> %209, %210
  %212 = shufflevector <4 x i32> %211, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %213 = mul <4 x i32> %211, %212
  %214 = extractelement <4 x i32> %213, i32 0
  %215 = icmp eq i64 %132, %129
  br i1 %215, label %227, label %216

216:                                              ; preds = %206, %127
  %217 = phi i64 [ 0, %127 ], [ %132, %206 ]
  %218 = phi i32 [ 1, %127 ], [ %214, %206 ]
  br label %219

219:                                              ; preds = %216, %219
  %220 = phi i64 [ %225, %219 ], [ %217, %216 ]
  %221 = phi i32 [ %224, %219 ], [ %218, %216 ]
  %222 = getelementptr inbounds i32, i32* %128, i64 %220
  %223 = load i32, i32* %222, align 4
  %224 = mul nsw i32 %223, %221
  %225 = add nuw nsw i64 %220, 1
  %226 = icmp eq i64 %225, %129
  br i1 %226, label %227, label %219, !llvm.loop !29

227:                                              ; preds = %219, %206
  %228 = phi i32 [ %214, %206 ], [ %224, %219 ]
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %309

230:                                              ; preds = %125, %227
  %231 = phi i32 [ %228, %227 ], [ 1, %125 ]
  %232 = zext i32 %231 to i64
  %233 = icmp ult i32 %231, 8
  br i1 %233, label %234, label %236

234:                                              ; preds = %307, %230
  %235 = phi i64 [ 0, %230 ], [ %237, %307 ]
  br label %336

236:                                              ; preds = %230
  %237 = and i64 %232, 4294967288
  %238 = insertelement <4 x float> undef, float %2, i32 0
  %239 = shufflevector <4 x float> %238, <4 x float> undef, <4 x i32> zeroinitializer
  %240 = insertelement <4 x float> undef, float %2, i32 0
  %241 = shufflevector <4 x float> %240, <4 x float> undef, <4 x i32> zeroinitializer
  %242 = add nsw i64 %237, -8
  %243 = lshr exact i64 %242, 3
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 7
  %246 = icmp ult i64 %242, 56
  br i1 %246, label %294, label %247

247:                                              ; preds = %236
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %291, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %292, %249 ]
  %252 = getelementptr inbounds float, float* %5, i64 %250
  %253 = bitcast float* %252 to <4 x float>*
  store <4 x float> %239, <4 x float>* %253, align 4
  %254 = getelementptr inbounds float, float* %252, i64 4
  %255 = bitcast float* %254 to <4 x float>*
  store <4 x float> %241, <4 x float>* %255, align 4
  %256 = or i64 %250, 8
  %257 = getelementptr inbounds float, float* %5, i64 %256
  %258 = bitcast float* %257 to <4 x float>*
  store <4 x float> %239, <4 x float>* %258, align 4
  %259 = getelementptr inbounds float, float* %257, i64 4
  %260 = bitcast float* %259 to <4 x float>*
  store <4 x float> %241, <4 x float>* %260, align 4
  %261 = or i64 %250, 16
  %262 = getelementptr inbounds float, float* %5, i64 %261
  %263 = bitcast float* %262 to <4 x float>*
  store <4 x float> %239, <4 x float>* %263, align 4
  %264 = getelementptr inbounds float, float* %262, i64 4
  %265 = bitcast float* %264 to <4 x float>*
  store <4 x float> %241, <4 x float>* %265, align 4
  %266 = or i64 %250, 24
  %267 = getelementptr inbounds float, float* %5, i64 %266
  %268 = bitcast float* %267 to <4 x float>*
  store <4 x float> %239, <4 x float>* %268, align 4
  %269 = getelementptr inbounds float, float* %267, i64 4
  %270 = bitcast float* %269 to <4 x float>*
  store <4 x float> %241, <4 x float>* %270, align 4
  %271 = or i64 %250, 32
  %272 = getelementptr inbounds float, float* %5, i64 %271
  %273 = bitcast float* %272 to <4 x float>*
  store <4 x float> %239, <4 x float>* %273, align 4
  %274 = getelementptr inbounds float, float* %272, i64 4
  %275 = bitcast float* %274 to <4 x float>*
  store <4 x float> %241, <4 x float>* %275, align 4
  %276 = or i64 %250, 40
  %277 = getelementptr inbounds float, float* %5, i64 %276
  %278 = bitcast float* %277 to <4 x float>*
  store <4 x float> %239, <4 x float>* %278, align 4
  %279 = getelementptr inbounds float, float* %277, i64 4
  %280 = bitcast float* %279 to <4 x float>*
  store <4 x float> %241, <4 x float>* %280, align 4
  %281 = or i64 %250, 48
  %282 = getelementptr inbounds float, float* %5, i64 %281
  %283 = bitcast float* %282 to <4 x float>*
  store <4 x float> %239, <4 x float>* %283, align 4
  %284 = getelementptr inbounds float, float* %282, i64 4
  %285 = bitcast float* %284 to <4 x float>*
  store <4 x float> %241, <4 x float>* %285, align 4
  %286 = or i64 %250, 56
  %287 = getelementptr inbounds float, float* %5, i64 %286
  %288 = bitcast float* %287 to <4 x float>*
  store <4 x float> %239, <4 x float>* %288, align 4
  %289 = getelementptr inbounds float, float* %287, i64 4
  %290 = bitcast float* %289 to <4 x float>*
  store <4 x float> %241, <4 x float>* %290, align 4
  %291 = add i64 %250, 64
  %292 = add i64 %251, -8
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %249, !llvm.loop !30

294:                                              ; preds = %249, %236
  %295 = phi i64 [ 0, %236 ], [ %291, %249 ]
  %296 = icmp eq i64 %245, 0
  br i1 %296, label %307, label %297

297:                                              ; preds = %294, %297
  %298 = phi i64 [ %304, %297 ], [ %295, %294 ]
  %299 = phi i64 [ %305, %297 ], [ %245, %294 ]
  %300 = getelementptr inbounds float, float* %5, i64 %298
  %301 = bitcast float* %300 to <4 x float>*
  store <4 x float> %239, <4 x float>* %301, align 4
  %302 = getelementptr inbounds float, float* %300, i64 4
  %303 = bitcast float* %302 to <4 x float>*
  store <4 x float> %241, <4 x float>* %303, align 4
  %304 = add i64 %298, 8
  %305 = add i64 %299, -1
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %307, label %297, !llvm.loop !31

307:                                              ; preds = %297, %294
  %308 = icmp eq i64 %237, %232
  br i1 %308, label %309, label %234

309:                                              ; preds = %336, %307, %227
  %310 = icmp sgt i32 %119, 0
  br i1 %3, label %323, label %311

311:                                              ; preds = %309
  br i1 %310, label %312, label %391

312:                                              ; preds = %311
  %313 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %314 = getelementptr inbounds i32, i32* %99, i64 1
  %315 = load i32, i32* %314, align 4
  %316 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %317 = bitcast [16 x i8]* %316 to i32*
  %318 = load i32, i32* %317, align 8
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %320 = bitcast i8* %319 to i32*
  %321 = load i32, i32* %320, align 4
  %322 = and i64 %118, 4294967295
  br label %365

323:                                              ; preds = %309
  br i1 %310, label %324, label %391

324:                                              ; preds = %323
  %325 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %326 = bitcast float* %1 to i32*
  %327 = getelementptr inbounds i32, i32* %99, i64 1
  %328 = load i32, i32* %327, align 4
  %329 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %330 = bitcast [16 x i8]* %329 to i32*
  %331 = load i32, i32* %330, align 8
  %332 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %333 = bitcast i8* %332 to i32*
  %334 = load i32, i32* %333, align 4
  %335 = and i64 %118, 4294967295
  br label %341

336:                                              ; preds = %234, %336
  %337 = phi i64 [ %339, %336 ], [ %235, %234 ]
  %338 = getelementptr inbounds float, float* %5, i64 %337
  store float %2, float* %338, align 4
  %339 = add nuw nsw i64 %337, 1
  %340 = icmp eq i64 %339, %232
  br i1 %340, label %309, label %336, !llvm.loop !32

341:                                              ; preds = %341, %324
  %342 = phi i64 [ 0, %324 ], [ %363, %341 ]
  %343 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %325, align 8
  %344 = load i32, i32* %326, align 4
  %345 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %343, i64 %342, i32 0, i32 0
  %346 = load i32*, i32** %345, align 8
  %347 = load i32, i32* %346, align 4
  %348 = getelementptr inbounds i32, i32* %346, i64 1
  %349 = load i32, i32* %348, align 4
  %350 = getelementptr inbounds i32, i32* %346, i64 2
  %351 = load i32, i32* %350, align 4
  %352 = getelementptr inbounds i32, i32* %346, i64 3
  %353 = load i32, i32* %352, align 4
  %354 = mul nsw i32 %328, %347
  %355 = add nsw i32 %354, %349
  %356 = mul nsw i32 %355, %331
  %357 = add nsw i32 %356, %351
  %358 = mul nsw i32 %357, %334
  %359 = add nsw i32 %358, %353
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds float, float* %5, i64 %360
  %362 = bitcast float* %361 to i32*
  store i32 %344, i32* %362, align 4
  %363 = add nuw nsw i64 %342, 1
  %364 = icmp eq i64 %363, %335
  br i1 %364, label %391, label %341

365:                                              ; preds = %365, %312
  %366 = phi i64 [ 0, %312 ], [ %389, %365 ]
  %367 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %313, align 8
  %368 = getelementptr inbounds float, float* %1, i64 %366
  %369 = bitcast float* %368 to i32*
  %370 = load i32, i32* %369, align 4
  %371 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %367, i64 %366, i32 0, i32 0
  %372 = load i32*, i32** %371, align 8
  %373 = load i32, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %372, i64 1
  %375 = load i32, i32* %374, align 4
  %376 = getelementptr inbounds i32, i32* %372, i64 2
  %377 = load i32, i32* %376, align 4
  %378 = getelementptr inbounds i32, i32* %372, i64 3
  %379 = load i32, i32* %378, align 4
  %380 = mul nsw i32 %315, %373
  %381 = add nsw i32 %380, %375
  %382 = mul nsw i32 %381, %318
  %383 = add nsw i32 %382, %377
  %384 = mul nsw i32 %383, %321
  %385 = add nsw i32 %384, %379
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds float, float* %5, i64 %386
  %388 = bitcast float* %387 to i32*
  store i32 %370, i32* %388, align 4
  %389 = add nuw nsw i64 %366, 1
  %390 = icmp eq i64 %389, %322
  br i1 %390, label %391, label %365

391:                                              ; preds = %365, %341, %311, %323
  br i1 %121, label %392, label %398

392:                                              ; preds = %391
  %393 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %394 = load i32*, i32** %393, align 8
  %395 = icmp eq i32* %394, null
  br i1 %395, label %398, label %396

396:                                              ; preds = %392
  %397 = bitcast i32* %394 to i8*
  tail call void @_ZdaPv(i8* %397) #13
  br label %398

398:                                              ; preds = %391, %392, %396
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::vector.1"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::vector.1"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::vector.1"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.std::__1::vector.1"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::vector.1"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::vector.1"* %35 to i64
  %37 = bitcast %"class.std::__1::vector.1"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #10
  %38 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %39 = bitcast i32** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.1"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 2
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %73, label %46

46:                                               ; preds = %31
  %47 = icmp ugt i64 %44, 4611686018427387903
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = bitcast %"class.std::__1::vector.1"* %34 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %49) #12
  unreachable

50:                                               ; preds = %46
  %51 = tail call i8* @_Znwm(i64 %43) #13
  %52 = bitcast i8* %51 to i32*
  %53 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %33, i64 %9, i32 0, i32 1
  %54 = bitcast i32** %53 to i8**
  store i8* %51, i8** %54, align 8
  %55 = bitcast %"class.std::__1::vector.1"* %34 to i8**
  store i8* %51, i8** %55, align 8
  %56 = getelementptr inbounds i32, i32* %52, i64 %44
  %57 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %33, i64 %9, i32 0, i32 2, i32 0, i32 0
  store i32* %56, i32** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = load i64, i64* %39, align 8
  %61 = bitcast i32** %53 to i64*
  %62 = ptrtoint i8* %51 to i64
  %63 = ptrtoint i32* %59 to i64
  %64 = sub i64 %60, %63
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %50
  %67 = lshr exact i64 %64, 2
  %68 = bitcast i32* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %51, i8* align 4 %68, i64 %64, i1 false) #10
  %69 = getelementptr inbounds i32, i32* %52, i64 %67
  %70 = ptrtoint i32* %69 to i64
  br label %71

71:                                               ; preds = %66, %50
  %72 = phi i64 [ %70, %66 ], [ %62, %50 ]
  store i64 %72, i64* %61, align 8
  br label %73

73:                                               ; preds = %31, %71
  %74 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %34, i64 1
  %75 = ptrtoint %"class.std::__1::vector.1"* %74 to i64
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %77 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %76, align 8
  %78 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %3, align 8
  %79 = icmp eq %"class.std::__1::vector.1"* %78, %77
  br i1 %79, label %80, label %82

80:                                               ; preds = %73
  %81 = ptrtoint %"class.std::__1::vector.1"* %77 to i64
  br label %106

82:                                               ; preds = %73, %82
  %83 = phi %"class.std::__1::vector.1"* [ %85, %82 ], [ %34, %73 ]
  %84 = phi %"class.std::__1::vector.1"* [ %86, %82 ], [ %78, %73 ]
  %85 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %83, i64 -1
  %86 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %84, i64 -1
  %87 = bitcast %"class.std::__1::vector.1"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #10
  %88 = bitcast %"class.std::__1::vector.1"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector.1"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %84, i64 -1, i32 0, i32 1
  %92 = bitcast i32** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %83, i64 -1, i32 0, i32 1
  %95 = bitcast i32** %94 to i64*
  store i64 %93, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %84, i64 -1, i32 0, i32 2, i32 0, i32 0
  %97 = bitcast i32** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %83, i64 -1, i32 0, i32 2, i32 0, i32 0
  %100 = bitcast i32** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast %"class.std::__1::vector.1"* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 24, i1 false) #10
  %102 = icmp eq %"class.std::__1::vector.1"* %86, %77
  br i1 %102, label %103, label %82

103:                                              ; preds = %82
  %104 = load i64, i64* %6, align 8
  %105 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %3, align 8
  br label %106

106:                                              ; preds = %80, %103
  %107 = phi %"class.std::__1::vector.1"* [ %77, %80 ], [ %105, %103 ]
  %108 = phi %"class.std::__1::vector.1"* [ %34, %80 ], [ %85, %103 ]
  %109 = phi i64 [ %81, %80 ], [ %104, %103 ]
  %110 = ptrtoint %"class.std::__1::vector.1"* %108 to i64
  store i64 %110, i64* %6, align 8
  store i64 %75, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %111 = inttoptr i64 %109 to %"class.std::__1::vector.1"*
  %112 = icmp eq %"class.std::__1::vector.1"* %107, %111
  br i1 %112, label %126, label %113

113:                                              ; preds = %106, %124
  %114 = phi %"class.std::__1::vector.1"* [ %115, %124 ], [ %107, %106 ]
  %115 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %114, i64 -1
  %116 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %115, i64 0, i32 0, i32 0
  %117 = load i32*, i32** %116, align 8
  %118 = icmp eq i32* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %113
  %120 = ptrtoint i32* %117 to i64
  %121 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %114, i64 -1, i32 0, i32 1
  %122 = bitcast i32** %121 to i64*
  store i64 %120, i64* %122, align 8
  %123 = bitcast i32* %117 to i8*
  tail call void @_ZdlPv(i8* %123) #13
  br label %124

124:                                              ; preds = %119, %113
  %125 = icmp eq %"class.std::__1::vector.1"* %115, %111
  br i1 %125, label %126, label %113

126:                                              ; preds = %124, %106
  %127 = icmp eq i64 %109, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = inttoptr i64 %109 to i8*
  tail call void @_ZdlPv(i8* %129) #13
  br label %130

130:                                              ; preds = %126, %128
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IlNS_9allocatorIlEEEENS1_IS3_EEE7reserveEm(%"class.std::__1::vector.14"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::vector.16"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::vector.16"*
  br i1 %10, label %12, label %76

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::vector.16"** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #12
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #13
  %23 = bitcast i8* %22 to %"class.std::__1::vector.16"*
  %24 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::vector.16"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::vector.16"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::vector.16"*
  %29 = icmp eq %"class.std::__1::vector.16"* %28, %11
  br i1 %29, label %30, label %31

30:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %71

31:                                               ; preds = %17, %31
  %32 = phi %"class.std::__1::vector.16"* [ %34, %31 ], [ %24, %17 ]
  %33 = phi %"class.std::__1::vector.16"* [ %35, %31 ], [ %28, %17 ]
  %34 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %32, i64 -1
  %35 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %33, i64 -1
  %36 = bitcast %"class.std::__1::vector.16"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #10
  %37 = bitcast %"class.std::__1::vector.16"* %35 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector.16"* %34 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %33, i64 -1, i32 0, i32 1
  %41 = bitcast i64** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %32, i64 -1, i32 0, i32 1
  %44 = bitcast i64** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %33, i64 -1, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast i64** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %32, i64 -1, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast i64** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = bitcast %"class.std::__1::vector.16"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #10
  %51 = icmp eq %"class.std::__1::vector.16"* %35, %11
  br i1 %51, label %52, label %31

52:                                               ; preds = %31
  %53 = ptrtoint %"class.std::__1::vector.16"* %34 to i64
  %54 = load i64, i64* %6, align 8
  %55 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %13, align 8
  %56 = inttoptr i64 %54 to %"class.std::__1::vector.16"*
  store i64 %53, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %57 = icmp eq %"class.std::__1::vector.16"* %55, %56
  br i1 %57, label %71, label %58

58:                                               ; preds = %52, %69
  %59 = phi %"class.std::__1::vector.16"* [ %60, %69 ], [ %55, %52 ]
  %60 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %59, i64 -1
  %61 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %60, i64 0, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = icmp eq i64* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %58
  %65 = ptrtoint i64* %62 to i64
  %66 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %59, i64 -1, i32 0, i32 1
  %67 = bitcast i64** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = bitcast i64* %62 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %64, %58
  %70 = icmp eq %"class.std::__1::vector.16"* %60, %56
  br i1 %70, label %71, label %58

71:                                               ; preds = %69, %30, %52
  %72 = phi i64 [ %7, %30 ], [ %54, %52 ], [ %54, %69 ]
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %75) #13
  br label %76

76:                                               ; preds = %74, %71, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense16GetIndicesVectorIlEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensoriPNSt3__16vectorINSB_IT_NSA_9allocatorISC_EEEENSD_ISF_EEEE(%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, %"class.std::__1::vector.14"*) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.std::__1::vector.16", align 8
  %6 = alloca %"class.std::__1::vector.16", align 8
  %7 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %8 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %317 [
    i32 0, label %11
    i32 1, label %11
    i32 2, label %95
  ]

11:                                               ; preds = %4, %4
  %12 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %15 = bitcast %union.TfLitePtrUnion* %14 to i64**
  %16 = load i64*, i64** %15, align 8
  br label %17

17:                                               ; preds = %11, %13
  %18 = phi i64* [ %16, %13 ], [ null, %11 ]
  %19 = icmp sgt i32 %2, 0
  br i1 %19, label %20, label %320

20:                                               ; preds = %17
  %21 = bitcast %"class.std::__1::vector.16"* %5 to i8*
  %22 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %5, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %5, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.std::__1::vector.16"* %5 to i8**
  %26 = bitcast i64** %24 to i8**
  %27 = bitcast i64** %23 to i64*
  %28 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.std::__1::vector.16"* %5 to i64*
  %31 = bitcast %"class.std::__1::vector.16"** %28 to i64*
  %32 = zext i32 %2 to i64
  %33 = bitcast %"class.std::__1::vector.16"* %5 to i8*
  br label %34

34:                                               ; preds = %92, %20
  %35 = phi i64 [ 0, %20 ], [ %93, %92 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #10
  %36 = getelementptr inbounds i64, i64* %18, i64 %35
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  %37 = load i64, i64* %36, align 8
  %38 = call i8* @_Znwm(i64 32) #13
  store i8* %38, i8** %25, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 32
  store i8* %39, i8** %26, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 24
  %41 = bitcast i8* %40 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false)
  store i64 %37, i64* %41, align 8
  %42 = ptrtoint i8* %39 to i64
  store i64 %42, i64* %27, align 8
  %43 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %28, align 8
  %44 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %29, align 8
  %45 = icmp eq %"class.std::__1::vector.16"* %43, %44
  br i1 %45, label %84, label %46

46:                                               ; preds = %34
  %47 = bitcast %"class.std::__1::vector.16"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #10
  %48 = load i64, i64* %27, align 8
  %49 = load i64, i64* %30, align 8
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 3
  %52 = icmp eq i64 %50, 0
  %53 = inttoptr i64 %49 to i64*
  br i1 %52, label %80, label %54

54:                                               ; preds = %46
  %55 = icmp ugt i64 %51, 2305843009213693951
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.16"* %43 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %57) #12
  unreachable

58:                                               ; preds = %54
  %59 = call i8* @_Znwm(i64 %50) #13
  %60 = bitcast i8* %59 to i64*
  %61 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %43, i64 0, i32 0, i32 1
  %62 = bitcast i64** %61 to i8**
  store i8* %59, i8** %62, align 8
  %63 = bitcast %"class.std::__1::vector.16"* %43 to i8**
  store i8* %59, i8** %63, align 8
  %64 = getelementptr inbounds i64, i64* %60, i64 %51
  %65 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %43, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %64, i64** %65, align 8
  %66 = load i64*, i64** %22, align 8
  %67 = load i64, i64* %27, align 8
  %68 = bitcast i64** %61 to i64*
  %69 = ptrtoint i8* %59 to i64
  %70 = ptrtoint i64* %66 to i64
  %71 = sub i64 %67, %70
  %72 = icmp sgt i64 %71, 0
  br i1 %72, label %73, label %78

73:                                               ; preds = %58
  %74 = lshr exact i64 %71, 3
  %75 = bitcast i64* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 %75, i64 %71, i1 false) #10
  %76 = getelementptr inbounds i64, i64* %60, i64 %74
  %77 = ptrtoint i64* %76 to i64
  br label %78

78:                                               ; preds = %73, %58
  %79 = phi i64 [ %77, %73 ], [ %69, %58 ]
  store i64 %79, i64* %68, align 8
  br label %80

80:                                               ; preds = %78, %46
  %81 = phi i64* [ %66, %78 ], [ %53, %46 ]
  %82 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %43, i64 1
  %83 = ptrtoint %"class.std::__1::vector.16"* %82 to i64
  store i64 %83, i64* %31, align 8
  br label %86

84:                                               ; preds = %34
  call void @_ZNSt3__16vectorINS0_IlNS_9allocatorIlEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.14"* %3, %"class.std::__1::vector.16"* nonnull dereferenceable(24) %5) #10
  %85 = load i64*, i64** %22, align 8
  br label %86

86:                                               ; preds = %80, %84
  %87 = phi i64* [ %81, %80 ], [ %85, %84 ]
  %88 = icmp eq i64* %87, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %86
  %90 = ptrtoint i64* %87 to i64
  store i64 %90, i64* %27, align 8
  %91 = bitcast i64* %87 to i8*
  call void @_ZdlPv(i8* %91) #13
  br label %92

92:                                               ; preds = %86, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #10
  %93 = add nuw nsw i64 %35, 1
  %94 = icmp eq i64 %93, %32
  br i1 %94, label %320, label %34

95:                                               ; preds = %4
  %96 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 1
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %97, 5
  br i1 %98, label %99, label %121

99:                                               ; preds = %95
  %100 = icmp sgt i32 %2, 0
  br i1 %100, label %101, label %320

101:                                              ; preds = %99
  %102 = bitcast %"class.std::__1::vector.16"* %6 to i8*
  %103 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %6, i64 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %6, i64 0, i32 0, i32 1
  %105 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %106 = bitcast i64** %105 to i64*
  %107 = bitcast %"class.std::__1::vector.16"* %6 to i64*
  %108 = bitcast i64** %104 to i64*
  %109 = sub nsw i32 4, %97
  %110 = icmp slt i32 %97, 4
  %111 = icmp sgt i32 %97, 0
  %112 = icmp eq %struct.TfLiteTensor* %1, null
  %113 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %114 = bitcast %union.TfLitePtrUnion* %113 to i64**
  %115 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 1
  %116 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %117 = bitcast %"class.std::__1::vector.16"** %115 to i64*
  %118 = sext i32 %97 to i64
  %119 = zext i32 %2 to i64
  %120 = zext i32 %97 to i64
  br label %124

121:                                              ; preds = %95
  %122 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %123 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %122, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %123(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 102, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.35, i64 0, i64 0)) #10
  br label %320

124:                                              ; preds = %101, %251
  %125 = phi i64 [ 0, %101 ], [ %252, %251 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #10
  %126 = call i8* @_Znwm(i64 32) #13
  %127 = ptrtoint i8* %126 to i64
  %128 = getelementptr inbounds i8, i8* %126, i64 32
  %129 = ptrtoint i8* %128 to i64
  %130 = ptrtoint i8* %126 to i64
  store i64 %130, i64* %107, align 8
  store i64 %127, i64* %108, align 8
  store i64 %129, i64* %106, align 8
  br i1 %110, label %131, label %134

131:                                              ; preds = %124
  %132 = bitcast i8* %128 to i64*
  %133 = bitcast i8* %126 to i64*
  br label %137

134:                                              ; preds = %194, %124
  br i1 %111, label %135, label %201

135:                                              ; preds = %134
  %136 = mul nsw i64 %125, %118
  br label %254

137:                                              ; preds = %131, %197
  %138 = phi i64 [ %200, %197 ], [ %127, %131 ]
  %139 = phi i64* [ %199, %197 ], [ %132, %131 ]
  %140 = phi i64* [ %198, %197 ], [ %133, %131 ]
  %141 = phi i32 [ %195, %197 ], [ 0, %131 ]
  %142 = icmp ult i64* %140, %139
  %143 = ptrtoint i64* %139 to i64
  br i1 %142, label %144, label %147

144:                                              ; preds = %137
  store i64 0, i64* %140, align 8
  %145 = getelementptr inbounds i64, i64* %140, i64 1
  %146 = ptrtoint i64* %145 to i64
  store i64 %146, i64* %108, align 8
  br label %194

147:                                              ; preds = %137
  %148 = ptrtoint i64* %140 to i64
  %149 = load i64, i64* %107, align 8
  %150 = sub i64 %148, %149
  %151 = ashr exact i64 %150, 3
  %152 = add nsw i64 %151, 1
  %153 = icmp ugt i64 %152, 2305843009213693951
  br i1 %153, label %154, label %156

154:                                              ; preds = %147
  %155 = bitcast %"class.std::__1::vector.16"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %155) #12
  unreachable

156:                                              ; preds = %147
  %157 = sub i64 %143, %149
  %158 = ashr exact i64 %157, 3
  %159 = icmp ult i64 %158, 1152921504606846975
  br i1 %159, label %160, label %168

160:                                              ; preds = %156
  %161 = ashr exact i64 %157, 2
  %162 = icmp ult i64 %161, %152
  %163 = select i1 %162, i64 %152, i64 %161
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %173, label %165

165:                                              ; preds = %160
  %166 = icmp ugt i64 %163, 2305843009213693951
  br i1 %166, label %167, label %168

167:                                              ; preds = %165
  call void @abort() #12
  unreachable

168:                                              ; preds = %165, %156
  %169 = phi i64 [ %163, %165 ], [ 2305843009213693951, %156 ]
  %170 = shl i64 %169, 3
  %171 = call i8* @_Znwm(i64 %170) #13
  %172 = bitcast i8* %171 to i64*
  br label %173

173:                                              ; preds = %168, %160
  %174 = phi i64 [ %169, %168 ], [ 0, %160 ]
  %175 = phi i64* [ %172, %168 ], [ null, %160 ]
  %176 = getelementptr inbounds i64, i64* %175, i64 %151
  %177 = getelementptr inbounds i64, i64* %175, i64 %174
  %178 = ptrtoint i64* %177 to i64
  store i64 0, i64* %176, align 8
  %179 = getelementptr inbounds i64, i64* %176, i64 1
  %180 = ptrtoint i64* %179 to i64
  %181 = sub i64 %138, %149
  %182 = ashr exact i64 %181, 3
  %183 = sub nsw i64 0, %182
  %184 = getelementptr inbounds i64, i64* %176, i64 %183
  %185 = ptrtoint i64* %184 to i64
  %186 = icmp sgt i64 %181, 0
  br i1 %186, label %187, label %190

187:                                              ; preds = %173
  %188 = bitcast i64* %184 to i8*
  %189 = inttoptr i64 %149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 8 %189, i64 %181, i1 false) #10
  br label %190

190:                                              ; preds = %187, %173
  store i64 %185, i64* %107, align 8
  store i64 %180, i64* %108, align 8
  store i64 %178, i64* %106, align 8
  %191 = icmp eq i64 %149, 0
  br i1 %191, label %194, label %192

192:                                              ; preds = %190
  %193 = inttoptr i64 %149 to i8*
  call void @_ZdlPv(i8* %193) #13
  br label %194

194:                                              ; preds = %144, %190, %192
  %195 = add nuw nsw i32 %141, 1
  %196 = icmp slt i32 %195, %109
  br i1 %196, label %197, label %134

197:                                              ; preds = %194
  %198 = load i64*, i64** %104, align 8
  %199 = load i64*, i64** %105, align 8
  %200 = ptrtoint i64* %198 to i64
  br label %137

201:                                              ; preds = %314, %134
  %202 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %115, align 8
  %203 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %116, align 8
  %204 = icmp eq %"class.std::__1::vector.16"* %202, %203
  br i1 %204, label %243, label %205

205:                                              ; preds = %201
  %206 = bitcast %"class.std::__1::vector.16"* %202 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %206, i8 0, i64 24, i1 false) #10
  %207 = load i64, i64* %108, align 8
  %208 = load i64, i64* %107, align 8
  %209 = sub i64 %207, %208
  %210 = ashr exact i64 %209, 3
  %211 = icmp eq i64 %209, 0
  %212 = inttoptr i64 %208 to i64*
  br i1 %211, label %239, label %213

213:                                              ; preds = %205
  %214 = icmp ugt i64 %210, 2305843009213693951
  br i1 %214, label %215, label %217

215:                                              ; preds = %213
  %216 = bitcast %"class.std::__1::vector.16"* %202 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %216) #12
  unreachable

217:                                              ; preds = %213
  %218 = call i8* @_Znwm(i64 %209) #13
  %219 = bitcast i8* %218 to i64*
  %220 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %202, i64 0, i32 0, i32 1
  %221 = bitcast i64** %220 to i8**
  store i8* %218, i8** %221, align 8
  %222 = bitcast %"class.std::__1::vector.16"* %202 to i8**
  store i8* %218, i8** %222, align 8
  %223 = getelementptr inbounds i64, i64* %219, i64 %210
  %224 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %202, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %223, i64** %224, align 8
  %225 = load i64*, i64** %103, align 8
  %226 = load i64, i64* %108, align 8
  %227 = bitcast i64** %220 to i64*
  %228 = ptrtoint i8* %218 to i64
  %229 = ptrtoint i64* %225 to i64
  %230 = sub i64 %226, %229
  %231 = icmp sgt i64 %230, 0
  br i1 %231, label %232, label %237

232:                                              ; preds = %217
  %233 = lshr exact i64 %230, 3
  %234 = bitcast i64* %225 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %218, i8* align 8 %234, i64 %230, i1 false) #10
  %235 = getelementptr inbounds i64, i64* %219, i64 %233
  %236 = ptrtoint i64* %235 to i64
  br label %237

237:                                              ; preds = %232, %217
  %238 = phi i64 [ %236, %232 ], [ %228, %217 ]
  store i64 %238, i64* %227, align 8
  br label %239

239:                                              ; preds = %237, %205
  %240 = phi i64* [ %225, %237 ], [ %212, %205 ]
  %241 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %202, i64 1
  %242 = ptrtoint %"class.std::__1::vector.16"* %241 to i64
  store i64 %242, i64* %117, align 8
  br label %245

243:                                              ; preds = %201
  call void @_ZNSt3__16vectorINS0_IlNS_9allocatorIlEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.14"* %3, %"class.std::__1::vector.16"* nonnull dereferenceable(24) %6) #10
  %244 = load i64*, i64** %103, align 8
  br label %245

245:                                              ; preds = %239, %243
  %246 = phi i64* [ %240, %239 ], [ %244, %243 ]
  %247 = icmp eq i64* %246, null
  br i1 %247, label %251, label %248

248:                                              ; preds = %245
  %249 = ptrtoint i64* %246 to i64
  store i64 %249, i64* %108, align 8
  %250 = bitcast i64* %246 to i8*
  call void @_ZdlPv(i8* %250) #13
  br label %251

251:                                              ; preds = %245, %248
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #10
  %252 = add nuw nsw i64 %125, 1
  %253 = icmp eq i64 %252, %119
  br i1 %253, label %320, label %124

254:                                              ; preds = %314, %135
  %255 = phi i64 [ 0, %135 ], [ %315, %314 ]
  br i1 %112, label %258, label %256

256:                                              ; preds = %254
  %257 = load i64*, i64** %114, align 8
  br label %258

258:                                              ; preds = %254, %256
  %259 = phi i64* [ %257, %256 ], [ null, %254 ]
  %260 = add nsw i64 %255, %136
  %261 = getelementptr inbounds i64, i64* %259, i64 %260
  %262 = load i64*, i64** %104, align 8
  %263 = load i64*, i64** %105, align 8
  %264 = icmp eq i64* %262, %263
  %265 = ptrtoint i64* %263 to i64
  br i1 %264, label %270, label %266

266:                                              ; preds = %258
  %267 = load i64, i64* %261, align 8
  store i64 %267, i64* %262, align 8
  %268 = getelementptr inbounds i64, i64* %262, i64 1
  %269 = ptrtoint i64* %268 to i64
  store i64 %269, i64* %108, align 8
  br label %314

270:                                              ; preds = %258
  %271 = ptrtoint i64* %262 to i64
  %272 = load i64, i64* %107, align 8
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = add nsw i64 %274, 1
  %276 = icmp ugt i64 %275, 2305843009213693951
  br i1 %276, label %277, label %279

277:                                              ; preds = %270
  %278 = bitcast %"class.std::__1::vector.16"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %278) #12
  unreachable

279:                                              ; preds = %270
  %280 = sub i64 %265, %272
  %281 = ashr exact i64 %280, 3
  %282 = icmp ult i64 %281, 1152921504606846975
  br i1 %282, label %283, label %291

283:                                              ; preds = %279
  %284 = ashr exact i64 %280, 2
  %285 = icmp ult i64 %284, %275
  %286 = select i1 %285, i64 %275, i64 %284
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %296, label %288

288:                                              ; preds = %283
  %289 = icmp ugt i64 %286, 2305843009213693951
  br i1 %289, label %290, label %291

290:                                              ; preds = %288
  call void @abort() #12
  unreachable

291:                                              ; preds = %288, %279
  %292 = phi i64 [ %286, %288 ], [ 2305843009213693951, %279 ]
  %293 = shl i64 %292, 3
  %294 = call i8* @_Znwm(i64 %293) #13
  %295 = bitcast i8* %294 to i64*
  br label %296

296:                                              ; preds = %291, %283
  %297 = phi i64 [ %292, %291 ], [ 0, %283 ]
  %298 = phi i8* [ %294, %291 ], [ null, %283 ]
  %299 = phi i64* [ %295, %291 ], [ null, %283 ]
  %300 = getelementptr inbounds i64, i64* %299, i64 %274
  %301 = getelementptr inbounds i64, i64* %299, i64 %297
  %302 = ptrtoint i64* %301 to i64
  %303 = load i64, i64* %261, align 8
  store i64 %303, i64* %300, align 8
  %304 = getelementptr inbounds i64, i64* %300, i64 1
  %305 = ptrtoint i64* %304 to i64
  %306 = ptrtoint i64* %299 to i64
  %307 = icmp sgt i64 %273, 0
  br i1 %307, label %308, label %310

308:                                              ; preds = %296
  %309 = inttoptr i64 %272 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %298, i8* align 8 %309, i64 %273, i1 false) #10
  br label %310

310:                                              ; preds = %308, %296
  store i64 %306, i64* %107, align 8
  store i64 %305, i64* %108, align 8
  store i64 %302, i64* %106, align 8
  %311 = icmp eq i64 %272, 0
  br i1 %311, label %314, label %312

312:                                              ; preds = %310
  %313 = inttoptr i64 %272 to i8*
  call void @_ZdlPv(i8* %313) #13
  br label %314

314:                                              ; preds = %266, %310, %312
  %315 = add nuw nsw i64 %255, 1
  %316 = icmp eq i64 %315, %120
  br i1 %316, label %201, label %254

317:                                              ; preds = %4
  %318 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %319 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %318, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %319(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.36, i64 0, i64 0), i32 %10) #10
  br label %320

320:                                              ; preds = %251, %92, %99, %17, %121, %317
  %321 = phi i32 [ 1, %317 ], [ 1, %121 ], [ 0, %17 ], [ 0, %99 ], [ 0, %92 ], [ 0, %251 ]
  ret i32 %321
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13SparseToDenseIflEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector.14"* dereferenceable(24), float*, float, i1 zeroext, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #5 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !33
  %11 = load i32, i32* %8, align 8, !noalias !33
  %12 = icmp sgt i32 %11, 4
  br i1 %12, label %13, label %14

13:                                               ; preds = %6
  tail call void @abort() #12, !noalias !33
  unreachable

14:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !33
  %15 = sub i32 4, %11
  %16 = icmp sgt i32 %15, 0
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %16, label %18, label %98

18:                                               ; preds = %14
  %19 = bitcast %union.anon* %17 to [5 x i32]*
  %20 = zext i32 %15 to i64
  %21 = icmp ult i32 %15, 8
  br i1 %21, label %91, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967288
  %24 = add nsw i64 %23, -8
  %25 = lshr exact i64 %24, 3
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 7
  %28 = icmp ult i64 %24, 56
  br i1 %28, label %76, label %29

29:                                               ; preds = %22
  %30 = sub nsw i64 %26, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %73, %31 ]
  %33 = phi i64 [ %30, %29 ], [ %74, %31 ]
  %34 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %32
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !33
  %36 = getelementptr inbounds i32, i32* %34, i64 4
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %37, align 8, !alias.scope !33
  %38 = or i64 %32, 8
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %38
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !33
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !33
  %43 = or i64 %32, 16
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !33
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !33
  %48 = or i64 %32, 24
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !33
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !33
  %53 = or i64 %32, 32
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !33
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !33
  %58 = or i64 %32, 40
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !33
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !33
  %63 = or i64 %32, 48
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !33
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !33
  %68 = or i64 %32, 56
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !33
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !33
  %73 = add i64 %32, 64
  %74 = add i64 %33, -8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %31, !llvm.loop !36

76:                                               ; preds = %31, %22
  %77 = phi i64 [ 0, %22 ], [ %73, %31 ]
  %78 = icmp eq i64 %27, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %76, %79
  %80 = phi i64 [ %86, %79 ], [ %77, %76 ]
  %81 = phi i64 [ %87, %79 ], [ %27, %76 ]
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %80
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !33
  %84 = getelementptr inbounds i32, i32* %82, i64 4
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !33
  %86 = add i64 %80, 8
  %87 = add i64 %81, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %79, !llvm.loop !37

89:                                               ; preds = %79, %76
  %90 = icmp eq i64 %23, %20
  br i1 %90, label %98, label %91

91:                                               ; preds = %89, %18
  %92 = phi i64 [ 0, %18 ], [ %23, %89 ]
  br label %93

93:                                               ; preds = %91, %93
  %94 = phi i64 [ %96, %93 ], [ %92, %91 ]
  %95 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %94
  store i32 1, i32* %95, align 4, !alias.scope !33
  %96 = add nuw nsw i64 %94, 1
  %97 = icmp eq i64 %96, %20
  br i1 %97, label %98, label %93, !llvm.loop !38

98:                                               ; preds = %93, %89, %14
  %99 = bitcast %union.anon* %17 to i32*
  %100 = sext i32 %15 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %11, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !33
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %11 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #10
  %112 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::vector.16"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = sdiv exact i64 %117, 24
  %119 = trunc i64 %118 to i32
  %120 = load i32, i32* %10, align 8
  %121 = icmp sgt i32 %120, 5
  br i1 %121, label %122, label %125

122:                                              ; preds = %98
  %123 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  br label %127

125:                                              ; preds = %98
  %126 = icmp sgt i32 %120, 0
  br i1 %126, label %127, label %230

127:                                              ; preds = %125, %122
  %128 = phi i32* [ %124, %122 ], [ %99, %125 ]
  %129 = zext i32 %120 to i64
  %130 = icmp ult i32 %120, 8
  br i1 %130, label %216, label %131

131:                                              ; preds = %127
  %132 = and i64 %129, 4294967288
  %133 = add nsw i64 %132, -8
  %134 = lshr exact i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 3
  %137 = icmp ult i64 %133, 24
  br i1 %137, label %183, label %138

138:                                              ; preds = %131
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %180, %140 ]
  %142 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %178, %140 ]
  %143 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %179, %140 ]
  %144 = phi i64 [ %139, %138 ], [ %181, %140 ]
  %145 = getelementptr inbounds i32, i32* %128, i64 %141
  %146 = bitcast i32* %145 to <4 x i32>*
  %147 = load <4 x i32>, <4 x i32>* %146, align 4
  %148 = getelementptr inbounds i32, i32* %145, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = mul nsw <4 x i32> %147, %142
  %152 = mul nsw <4 x i32> %150, %143
  %153 = or i64 %141, 8
  %154 = getelementptr inbounds i32, i32* %128, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4
  %157 = getelementptr inbounds i32, i32* %154, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = mul nsw <4 x i32> %156, %151
  %161 = mul nsw <4 x i32> %159, %152
  %162 = or i64 %141, 16
  %163 = getelementptr inbounds i32, i32* %128, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4
  %166 = getelementptr inbounds i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = mul nsw <4 x i32> %165, %160
  %170 = mul nsw <4 x i32> %168, %161
  %171 = or i64 %141, 24
  %172 = getelementptr inbounds i32, i32* %128, i64 %171
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4
  %175 = getelementptr inbounds i32, i32* %172, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = mul nsw <4 x i32> %174, %169
  %179 = mul nsw <4 x i32> %177, %170
  %180 = add i64 %141, 32
  %181 = add i64 %144, -4
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %140, !llvm.loop !39

183:                                              ; preds = %140, %131
  %184 = phi <4 x i32> [ undef, %131 ], [ %178, %140 ]
  %185 = phi <4 x i32> [ undef, %131 ], [ %179, %140 ]
  %186 = phi i64 [ 0, %131 ], [ %180, %140 ]
  %187 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %178, %140 ]
  %188 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %179, %140 ]
  %189 = icmp eq i64 %136, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %183, %190
  %191 = phi i64 [ %203, %190 ], [ %186, %183 ]
  %192 = phi <4 x i32> [ %201, %190 ], [ %187, %183 ]
  %193 = phi <4 x i32> [ %202, %190 ], [ %188, %183 ]
  %194 = phi i64 [ %204, %190 ], [ %136, %183 ]
  %195 = getelementptr inbounds i32, i32* %128, i64 %191
  %196 = bitcast i32* %195 to <4 x i32>*
  %197 = load <4 x i32>, <4 x i32>* %196, align 4
  %198 = getelementptr inbounds i32, i32* %195, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  %200 = load <4 x i32>, <4 x i32>* %199, align 4
  %201 = mul nsw <4 x i32> %197, %192
  %202 = mul nsw <4 x i32> %200, %193
  %203 = add i64 %191, 8
  %204 = add i64 %194, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %190, !llvm.loop !40

206:                                              ; preds = %190, %183
  %207 = phi <4 x i32> [ %184, %183 ], [ %201, %190 ]
  %208 = phi <4 x i32> [ %185, %183 ], [ %202, %190 ]
  %209 = mul <4 x i32> %208, %207
  %210 = shufflevector <4 x i32> %209, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %211 = mul <4 x i32> %209, %210
  %212 = shufflevector <4 x i32> %211, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %213 = mul <4 x i32> %211, %212
  %214 = extractelement <4 x i32> %213, i32 0
  %215 = icmp eq i64 %132, %129
  br i1 %215, label %227, label %216

216:                                              ; preds = %206, %127
  %217 = phi i64 [ 0, %127 ], [ %132, %206 ]
  %218 = phi i32 [ 1, %127 ], [ %214, %206 ]
  br label %219

219:                                              ; preds = %216, %219
  %220 = phi i64 [ %225, %219 ], [ %217, %216 ]
  %221 = phi i32 [ %224, %219 ], [ %218, %216 ]
  %222 = getelementptr inbounds i32, i32* %128, i64 %220
  %223 = load i32, i32* %222, align 4
  %224 = mul nsw i32 %223, %221
  %225 = add nuw nsw i64 %220, 1
  %226 = icmp eq i64 %225, %129
  br i1 %226, label %227, label %219, !llvm.loop !41

227:                                              ; preds = %219, %206
  %228 = phi i32 [ %214, %206 ], [ %224, %219 ]
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %309

230:                                              ; preds = %125, %227
  %231 = phi i32 [ %228, %227 ], [ 1, %125 ]
  %232 = zext i32 %231 to i64
  %233 = icmp ult i32 %231, 8
  br i1 %233, label %234, label %236

234:                                              ; preds = %307, %230
  %235 = phi i64 [ 0, %230 ], [ %237, %307 ]
  br label %336

236:                                              ; preds = %230
  %237 = and i64 %232, 4294967288
  %238 = insertelement <4 x float> undef, float %2, i32 0
  %239 = shufflevector <4 x float> %238, <4 x float> undef, <4 x i32> zeroinitializer
  %240 = insertelement <4 x float> undef, float %2, i32 0
  %241 = shufflevector <4 x float> %240, <4 x float> undef, <4 x i32> zeroinitializer
  %242 = add nsw i64 %237, -8
  %243 = lshr exact i64 %242, 3
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 7
  %246 = icmp ult i64 %242, 56
  br i1 %246, label %294, label %247

247:                                              ; preds = %236
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %291, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %292, %249 ]
  %252 = getelementptr inbounds float, float* %5, i64 %250
  %253 = bitcast float* %252 to <4 x float>*
  store <4 x float> %239, <4 x float>* %253, align 4
  %254 = getelementptr inbounds float, float* %252, i64 4
  %255 = bitcast float* %254 to <4 x float>*
  store <4 x float> %241, <4 x float>* %255, align 4
  %256 = or i64 %250, 8
  %257 = getelementptr inbounds float, float* %5, i64 %256
  %258 = bitcast float* %257 to <4 x float>*
  store <4 x float> %239, <4 x float>* %258, align 4
  %259 = getelementptr inbounds float, float* %257, i64 4
  %260 = bitcast float* %259 to <4 x float>*
  store <4 x float> %241, <4 x float>* %260, align 4
  %261 = or i64 %250, 16
  %262 = getelementptr inbounds float, float* %5, i64 %261
  %263 = bitcast float* %262 to <4 x float>*
  store <4 x float> %239, <4 x float>* %263, align 4
  %264 = getelementptr inbounds float, float* %262, i64 4
  %265 = bitcast float* %264 to <4 x float>*
  store <4 x float> %241, <4 x float>* %265, align 4
  %266 = or i64 %250, 24
  %267 = getelementptr inbounds float, float* %5, i64 %266
  %268 = bitcast float* %267 to <4 x float>*
  store <4 x float> %239, <4 x float>* %268, align 4
  %269 = getelementptr inbounds float, float* %267, i64 4
  %270 = bitcast float* %269 to <4 x float>*
  store <4 x float> %241, <4 x float>* %270, align 4
  %271 = or i64 %250, 32
  %272 = getelementptr inbounds float, float* %5, i64 %271
  %273 = bitcast float* %272 to <4 x float>*
  store <4 x float> %239, <4 x float>* %273, align 4
  %274 = getelementptr inbounds float, float* %272, i64 4
  %275 = bitcast float* %274 to <4 x float>*
  store <4 x float> %241, <4 x float>* %275, align 4
  %276 = or i64 %250, 40
  %277 = getelementptr inbounds float, float* %5, i64 %276
  %278 = bitcast float* %277 to <4 x float>*
  store <4 x float> %239, <4 x float>* %278, align 4
  %279 = getelementptr inbounds float, float* %277, i64 4
  %280 = bitcast float* %279 to <4 x float>*
  store <4 x float> %241, <4 x float>* %280, align 4
  %281 = or i64 %250, 48
  %282 = getelementptr inbounds float, float* %5, i64 %281
  %283 = bitcast float* %282 to <4 x float>*
  store <4 x float> %239, <4 x float>* %283, align 4
  %284 = getelementptr inbounds float, float* %282, i64 4
  %285 = bitcast float* %284 to <4 x float>*
  store <4 x float> %241, <4 x float>* %285, align 4
  %286 = or i64 %250, 56
  %287 = getelementptr inbounds float, float* %5, i64 %286
  %288 = bitcast float* %287 to <4 x float>*
  store <4 x float> %239, <4 x float>* %288, align 4
  %289 = getelementptr inbounds float, float* %287, i64 4
  %290 = bitcast float* %289 to <4 x float>*
  store <4 x float> %241, <4 x float>* %290, align 4
  %291 = add i64 %250, 64
  %292 = add i64 %251, -8
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %249, !llvm.loop !42

294:                                              ; preds = %249, %236
  %295 = phi i64 [ 0, %236 ], [ %291, %249 ]
  %296 = icmp eq i64 %245, 0
  br i1 %296, label %307, label %297

297:                                              ; preds = %294, %297
  %298 = phi i64 [ %304, %297 ], [ %295, %294 ]
  %299 = phi i64 [ %305, %297 ], [ %245, %294 ]
  %300 = getelementptr inbounds float, float* %5, i64 %298
  %301 = bitcast float* %300 to <4 x float>*
  store <4 x float> %239, <4 x float>* %301, align 4
  %302 = getelementptr inbounds float, float* %300, i64 4
  %303 = bitcast float* %302 to <4 x float>*
  store <4 x float> %241, <4 x float>* %303, align 4
  %304 = add i64 %298, 8
  %305 = add i64 %299, -1
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %307, label %297, !llvm.loop !43

307:                                              ; preds = %297, %294
  %308 = icmp eq i64 %237, %232
  br i1 %308, label %309, label %234

309:                                              ; preds = %336, %307, %227
  %310 = icmp sgt i32 %119, 0
  br i1 %3, label %323, label %311

311:                                              ; preds = %309
  br i1 %310, label %312, label %399

312:                                              ; preds = %311
  %313 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %314 = getelementptr inbounds i32, i32* %99, i64 1
  %315 = load i32, i32* %314, align 4
  %316 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %317 = bitcast [16 x i8]* %316 to i32*
  %318 = load i32, i32* %317, align 8
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %320 = bitcast i8* %319 to i32*
  %321 = load i32, i32* %320, align 4
  %322 = and i64 %118, 4294967295
  br label %369

323:                                              ; preds = %309
  br i1 %310, label %324, label %399

324:                                              ; preds = %323
  %325 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %326 = bitcast float* %1 to i32*
  %327 = getelementptr inbounds i32, i32* %99, i64 1
  %328 = load i32, i32* %327, align 4
  %329 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %330 = bitcast [16 x i8]* %329 to i32*
  %331 = load i32, i32* %330, align 8
  %332 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %333 = bitcast i8* %332 to i32*
  %334 = load i32, i32* %333, align 4
  %335 = and i64 %118, 4294967295
  br label %341

336:                                              ; preds = %234, %336
  %337 = phi i64 [ %339, %336 ], [ %235, %234 ]
  %338 = getelementptr inbounds float, float* %5, i64 %337
  store float %2, float* %338, align 4
  %339 = add nuw nsw i64 %337, 1
  %340 = icmp eq i64 %339, %232
  br i1 %340, label %309, label %336, !llvm.loop !44

341:                                              ; preds = %341, %324
  %342 = phi i64 [ 0, %324 ], [ %367, %341 ]
  %343 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %325, align 8
  %344 = load i32, i32* %326, align 4
  %345 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %343, i64 %342, i32 0, i32 0
  %346 = load i64*, i64** %345, align 8
  %347 = load i64, i64* %346, align 8
  %348 = trunc i64 %347 to i32
  %349 = getelementptr inbounds i64, i64* %346, i64 1
  %350 = load i64, i64* %349, align 8
  %351 = trunc i64 %350 to i32
  %352 = getelementptr inbounds i64, i64* %346, i64 2
  %353 = load i64, i64* %352, align 8
  %354 = trunc i64 %353 to i32
  %355 = getelementptr inbounds i64, i64* %346, i64 3
  %356 = load i64, i64* %355, align 8
  %357 = trunc i64 %356 to i32
  %358 = mul nsw i32 %328, %348
  %359 = add nsw i32 %358, %351
  %360 = mul nsw i32 %359, %331
  %361 = add nsw i32 %360, %354
  %362 = mul nsw i32 %361, %334
  %363 = add nsw i32 %362, %357
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds float, float* %5, i64 %364
  %366 = bitcast float* %365 to i32*
  store i32 %344, i32* %366, align 4
  %367 = add nuw nsw i64 %342, 1
  %368 = icmp eq i64 %367, %335
  br i1 %368, label %399, label %341

369:                                              ; preds = %369, %312
  %370 = phi i64 [ 0, %312 ], [ %397, %369 ]
  %371 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %313, align 8
  %372 = getelementptr inbounds float, float* %1, i64 %370
  %373 = bitcast float* %372 to i32*
  %374 = load i32, i32* %373, align 4
  %375 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %371, i64 %370, i32 0, i32 0
  %376 = load i64*, i64** %375, align 8
  %377 = load i64, i64* %376, align 8
  %378 = trunc i64 %377 to i32
  %379 = getelementptr inbounds i64, i64* %376, i64 1
  %380 = load i64, i64* %379, align 8
  %381 = trunc i64 %380 to i32
  %382 = getelementptr inbounds i64, i64* %376, i64 2
  %383 = load i64, i64* %382, align 8
  %384 = trunc i64 %383 to i32
  %385 = getelementptr inbounds i64, i64* %376, i64 3
  %386 = load i64, i64* %385, align 8
  %387 = trunc i64 %386 to i32
  %388 = mul nsw i32 %315, %378
  %389 = add nsw i32 %388, %381
  %390 = mul nsw i32 %389, %318
  %391 = add nsw i32 %390, %384
  %392 = mul nsw i32 %391, %321
  %393 = add nsw i32 %392, %387
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds float, float* %5, i64 %394
  %396 = bitcast float* %395 to i32*
  store i32 %374, i32* %396, align 4
  %397 = add nuw nsw i64 %370, 1
  %398 = icmp eq i64 %397, %322
  br i1 %398, label %399, label %369

399:                                              ; preds = %369, %341, %311, %323
  br i1 %121, label %400, label %406

400:                                              ; preds = %399
  %401 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %402 = load i32*, i32** %401, align 8
  %403 = icmp eq i32* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %400
  %405 = bitcast i32* %402 to i8*
  tail call void @_ZdaPv(i8* %405) #13
  br label %406

406:                                              ; preds = %399, %400, %404
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IlNS_9allocatorIlEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.14"*, %"class.std::__1::vector.16"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::vector.16"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::vector.16"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.std::__1::vector.16"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::vector.16"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::vector.16"* %35 to i64
  %37 = bitcast %"class.std::__1::vector.16"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #10
  %38 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %1, i64 0, i32 0, i32 1
  %39 = bitcast i64** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.16"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %73, label %46

46:                                               ; preds = %31
  %47 = icmp ugt i64 %44, 2305843009213693951
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = bitcast %"class.std::__1::vector.16"* %34 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %49) #12
  unreachable

50:                                               ; preds = %46
  %51 = tail call i8* @_Znwm(i64 %43) #13
  %52 = bitcast i8* %51 to i64*
  %53 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %33, i64 %9, i32 0, i32 1
  %54 = bitcast i64** %53 to i8**
  store i8* %51, i8** %54, align 8
  %55 = bitcast %"class.std::__1::vector.16"* %34 to i8**
  store i8* %51, i8** %55, align 8
  %56 = getelementptr inbounds i64, i64* %52, i64 %44
  %57 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %33, i64 %9, i32 0, i32 2, i32 0, i32 0
  store i64* %56, i64** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %1, i64 0, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = load i64, i64* %39, align 8
  %61 = bitcast i64** %53 to i64*
  %62 = ptrtoint i8* %51 to i64
  %63 = ptrtoint i64* %59 to i64
  %64 = sub i64 %60, %63
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %50
  %67 = lshr exact i64 %64, 3
  %68 = bitcast i64* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* align 8 %68, i64 %64, i1 false) #10
  %69 = getelementptr inbounds i64, i64* %52, i64 %67
  %70 = ptrtoint i64* %69 to i64
  br label %71

71:                                               ; preds = %66, %50
  %72 = phi i64 [ %70, %66 ], [ %62, %50 ]
  store i64 %72, i64* %61, align 8
  br label %73

73:                                               ; preds = %31, %71
  %74 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %34, i64 1
  %75 = ptrtoint %"class.std::__1::vector.16"* %74 to i64
  %76 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %77 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %76, align 8
  %78 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %3, align 8
  %79 = icmp eq %"class.std::__1::vector.16"* %78, %77
  br i1 %79, label %80, label %82

80:                                               ; preds = %73
  %81 = ptrtoint %"class.std::__1::vector.16"* %77 to i64
  br label %106

82:                                               ; preds = %73, %82
  %83 = phi %"class.std::__1::vector.16"* [ %85, %82 ], [ %34, %73 ]
  %84 = phi %"class.std::__1::vector.16"* [ %86, %82 ], [ %78, %73 ]
  %85 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %83, i64 -1
  %86 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %84, i64 -1
  %87 = bitcast %"class.std::__1::vector.16"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #10
  %88 = bitcast %"class.std::__1::vector.16"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector.16"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %84, i64 -1, i32 0, i32 1
  %92 = bitcast i64** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %83, i64 -1, i32 0, i32 1
  %95 = bitcast i64** %94 to i64*
  store i64 %93, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %84, i64 -1, i32 0, i32 2, i32 0, i32 0
  %97 = bitcast i64** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %83, i64 -1, i32 0, i32 2, i32 0, i32 0
  %100 = bitcast i64** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast %"class.std::__1::vector.16"* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 24, i1 false) #10
  %102 = icmp eq %"class.std::__1::vector.16"* %86, %77
  br i1 %102, label %103, label %82

103:                                              ; preds = %82
  %104 = load i64, i64* %6, align 8
  %105 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %3, align 8
  br label %106

106:                                              ; preds = %80, %103
  %107 = phi %"class.std::__1::vector.16"* [ %77, %80 ], [ %105, %103 ]
  %108 = phi %"class.std::__1::vector.16"* [ %34, %80 ], [ %85, %103 ]
  %109 = phi i64 [ %81, %80 ], [ %104, %103 ]
  %110 = ptrtoint %"class.std::__1::vector.16"* %108 to i64
  store i64 %110, i64* %6, align 8
  store i64 %75, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %111 = inttoptr i64 %109 to %"class.std::__1::vector.16"*
  %112 = icmp eq %"class.std::__1::vector.16"* %107, %111
  br i1 %112, label %126, label %113

113:                                              ; preds = %106, %124
  %114 = phi %"class.std::__1::vector.16"* [ %115, %124 ], [ %107, %106 ]
  %115 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %114, i64 -1
  %116 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %115, i64 0, i32 0, i32 0
  %117 = load i64*, i64** %116, align 8
  %118 = icmp eq i64* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %113
  %120 = ptrtoint i64* %117 to i64
  %121 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %114, i64 -1, i32 0, i32 1
  %122 = bitcast i64** %121 to i64*
  store i64 %120, i64* %122, align 8
  %123 = bitcast i64* %117 to i8*
  tail call void @_ZdlPv(i8* %123) #13
  br label %124

124:                                              ; preds = %119, %113
  %125 = icmp eq %"class.std::__1::vector.16"* %115, %111
  br i1 %125, label %126, label %113

126:                                              ; preds = %124, %106
  %127 = icmp eq i64 %109, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = inttoptr i64 %109 to i8*
  tail call void @_ZdlPv(i8* %129) #13
  br label %130

130:                                              ; preds = %126, %128
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIiiEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %12 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 %13
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi %struct.TfLiteTensor* [ %14, %10 ], [ null, %2 ]
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %15, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %15 ]
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %25, %30
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %25 ]
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %35, %40
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %35 ]
  %47 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %54 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %53, align 8
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 %55
  br label %57

57:                                               ; preds = %45, %52
  %58 = phi %struct.TfLiteTensor* [ %56, %52 ], [ null, %45 ]
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 4
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %26, %struct.TfLiteTensor* %58)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %164

65:                                               ; preds = %62, %57
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 2
  %67 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %66, align 8
  %68 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %67, i64 0, i32 1, i64 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 2
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  %75 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false) #10
  %78 = sext i32 %69 to i64
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE7reserveEm(%"class.std::__1::vector"* nonnull %3, i64 %78)
  %79 = call i32 @_ZN6tflite3ops7builtin15sparse_to_dense16GetIndicesVectorIiEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensoriPNSt3__16vectorINSB_IT_NSA_9allocatorISC_EEEENSD_ISF_EEEE(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %16, i32 %69, %"class.std::__1::vector"* nonnull %3)
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %138

81:                                               ; preds = %65
  %82 = icmp eq %struct.TfLiteTensor* %36, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1, i32 0
  %85 = load i32*, i32** %84, align 8
  br label %86

86:                                               ; preds = %81, %83
  %87 = phi i32* [ %85, %83 ], [ null, %81 ]
  %88 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1, i32 0
  %91 = load i32*, i32** %90, align 8
  br label %92

92:                                               ; preds = %86, %89
  %93 = phi i32* [ %91, %89 ], [ null, %86 ]
  %94 = load i32, i32* %93, align 4
  %95 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %95) #10
  %96 = icmp eq %struct.TfLiteTensor* %58, null
  br i1 %96, label %97, label %99

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %98, align 8, !alias.scope !45
  br label %126

99:                                               ; preds = %92
  %100 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 2
  %101 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %100, align 8, !noalias !45
  %102 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %101, i64 0, i32 0
  %103 = load i32, i32* %102, align 4, !noalias !45
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %101, i64 0, i32 1, i64 0
  %105 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %103, i32* %105, align 8, !alias.scope !45
  %106 = icmp sgt i32 %103, 5
  br i1 %106, label %107, label %114

107:                                              ; preds = %99
  %108 = sext i32 %103 to i64
  %109 = shl nsw i64 %108, 2
  %110 = call i8* @_Znam(i64 %109) #13, !noalias !45
  %111 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %112 = bitcast i32** %111 to i8**
  store i8* %110, i8** %112, align 8, !alias.scope !45
  %113 = bitcast i8* %110 to i32*
  br label %119

114:                                              ; preds = %99
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %116 = bitcast %union.anon* %115 to i32*
  %117 = sext i32 %103 to i64
  %118 = shl nsw i64 %117, 2
  br label %119

119:                                              ; preds = %114, %107
  %120 = phi i64 [ %109, %107 ], [ %118, %114 ]
  %121 = phi i32* [ %113, %107 ], [ %116, %114 ]
  %122 = bitcast i32* %121 to i8*
  %123 = bitcast i32* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %122, i8* align 4 %123, i64 %120, i1 false) #10
  %124 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 1, i32 0
  %125 = load i32*, i32** %124, align 8
  br label %126

126:                                              ; preds = %97, %119
  %127 = phi i32* [ %125, %119 ], [ null, %97 ]
  call void @_ZN6tflite13reference_ops13SparseToDenseIiiEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector"* nonnull dereferenceable(24) %3, i32* %87, i32 %94, i1 zeroext %74, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i32* %127)
  %128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = icmp sgt i32 %129, 5
  br i1 %130, label %131, label %137

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %133 = load i32*, i32** %132, align 8
  %134 = icmp eq i32* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %131
  %136 = bitcast i32* %133 to i8*
  call void @_ZdaPv(i8* %136) #13
  br label %137

137:                                              ; preds = %126, %131, %135
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %95) #10
  br label %138

138:                                              ; preds = %65, %137
  %139 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %76, align 8
  %140 = icmp eq %"class.std::__1::vector.1"* %139, null
  br i1 %140, label %163, label %141

141:                                              ; preds = %138
  %142 = bitcast %"class.std::__1::vector.1"* %139 to i8*
  %143 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %77, align 8
  %144 = icmp eq %"class.std::__1::vector.1"* %143, %139
  br i1 %144, label %161, label %145

145:                                              ; preds = %141, %156
  %146 = phi %"class.std::__1::vector.1"* [ %147, %156 ], [ %143, %141 ]
  %147 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %146, i64 -1
  %148 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %147, i64 0, i32 0, i32 0
  %149 = load i32*, i32** %148, align 8
  %150 = icmp eq i32* %149, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %145
  %152 = ptrtoint i32* %149 to i64
  %153 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %146, i64 -1, i32 0, i32 1
  %154 = bitcast i32** %153 to i64*
  store i64 %152, i64* %154, align 8
  %155 = bitcast i32* %149 to i8*
  call void @_ZdlPv(i8* %155) #13
  br label %156

156:                                              ; preds = %151, %145
  %157 = icmp eq %"class.std::__1::vector.1"* %147, %139
  br i1 %157, label %158, label %145

158:                                              ; preds = %156
  %159 = bitcast %"class.std::__1::vector"* %3 to i8**
  %160 = load i8*, i8** %159, align 8
  br label %161

161:                                              ; preds = %158, %141
  %162 = phi i8* [ %160, %158 ], [ %142, %141 ]
  store %"class.std::__1::vector.1"* %139, %"class.std::__1::vector.1"** %77, align 8
  call void @_ZdlPv(i8* %162) #13
  br label %163

163:                                              ; preds = %138, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #10
  br label %164

164:                                              ; preds = %62, %163
  %165 = phi i32 [ %79, %163 ], [ %63, %62 ]
  ret i32 %165
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIilEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.std::__1::vector.14", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %12 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 %13
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi %struct.TfLiteTensor* [ %14, %10 ], [ null, %2 ]
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %15, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %15 ]
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %25, %30
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %25 ]
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %35, %40
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %35 ]
  %47 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %54 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %53, align 8
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 %55
  br label %57

57:                                               ; preds = %45, %52
  %58 = phi %struct.TfLiteTensor* [ %56, %52 ], [ null, %45 ]
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 4
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %26, %struct.TfLiteTensor* %58)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %164

65:                                               ; preds = %62, %57
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 2
  %67 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %66, align 8
  %68 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %67, i64 0, i32 1, i64 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 2
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  %75 = bitcast %"class.std::__1::vector.14"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false) #10
  %78 = sext i32 %69 to i64
  call void @_ZNSt3__16vectorINS0_IlNS_9allocatorIlEEEENS1_IS3_EEE7reserveEm(%"class.std::__1::vector.14"* nonnull %3, i64 %78)
  %79 = call i32 @_ZN6tflite3ops7builtin15sparse_to_dense16GetIndicesVectorIlEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensoriPNSt3__16vectorINSB_IT_NSA_9allocatorISC_EEEENSD_ISF_EEEE(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %16, i32 %69, %"class.std::__1::vector.14"* nonnull %3)
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %138

81:                                               ; preds = %65
  %82 = icmp eq %struct.TfLiteTensor* %36, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1, i32 0
  %85 = load i32*, i32** %84, align 8
  br label %86

86:                                               ; preds = %81, %83
  %87 = phi i32* [ %85, %83 ], [ null, %81 ]
  %88 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1, i32 0
  %91 = load i32*, i32** %90, align 8
  br label %92

92:                                               ; preds = %86, %89
  %93 = phi i32* [ %91, %89 ], [ null, %86 ]
  %94 = load i32, i32* %93, align 4
  %95 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %95) #10
  %96 = icmp eq %struct.TfLiteTensor* %58, null
  br i1 %96, label %97, label %99

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %98, align 8, !alias.scope !48
  br label %126

99:                                               ; preds = %92
  %100 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 2
  %101 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %100, align 8, !noalias !48
  %102 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %101, i64 0, i32 0
  %103 = load i32, i32* %102, align 4, !noalias !48
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %101, i64 0, i32 1, i64 0
  %105 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %103, i32* %105, align 8, !alias.scope !48
  %106 = icmp sgt i32 %103, 5
  br i1 %106, label %107, label %114

107:                                              ; preds = %99
  %108 = sext i32 %103 to i64
  %109 = shl nsw i64 %108, 2
  %110 = call i8* @_Znam(i64 %109) #13, !noalias !48
  %111 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %112 = bitcast i32** %111 to i8**
  store i8* %110, i8** %112, align 8, !alias.scope !48
  %113 = bitcast i8* %110 to i32*
  br label %119

114:                                              ; preds = %99
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %116 = bitcast %union.anon* %115 to i32*
  %117 = sext i32 %103 to i64
  %118 = shl nsw i64 %117, 2
  br label %119

119:                                              ; preds = %114, %107
  %120 = phi i64 [ %109, %107 ], [ %118, %114 ]
  %121 = phi i32* [ %113, %107 ], [ %116, %114 ]
  %122 = bitcast i32* %121 to i8*
  %123 = bitcast i32* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %122, i8* align 4 %123, i64 %120, i1 false) #10
  %124 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 1, i32 0
  %125 = load i32*, i32** %124, align 8
  br label %126

126:                                              ; preds = %97, %119
  %127 = phi i32* [ %125, %119 ], [ null, %97 ]
  call void @_ZN6tflite13reference_ops13SparseToDenseIilEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector.14"* nonnull dereferenceable(24) %3, i32* %87, i32 %94, i1 zeroext %74, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i32* %127)
  %128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = icmp sgt i32 %129, 5
  br i1 %130, label %131, label %137

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %133 = load i32*, i32** %132, align 8
  %134 = icmp eq i32* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %131
  %136 = bitcast i32* %133 to i8*
  call void @_ZdaPv(i8* %136) #13
  br label %137

137:                                              ; preds = %126, %131, %135
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %95) #10
  br label %138

138:                                              ; preds = %65, %137
  %139 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %76, align 8
  %140 = icmp eq %"class.std::__1::vector.16"* %139, null
  br i1 %140, label %163, label %141

141:                                              ; preds = %138
  %142 = bitcast %"class.std::__1::vector.16"* %139 to i8*
  %143 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %77, align 8
  %144 = icmp eq %"class.std::__1::vector.16"* %143, %139
  br i1 %144, label %161, label %145

145:                                              ; preds = %141, %156
  %146 = phi %"class.std::__1::vector.16"* [ %147, %156 ], [ %143, %141 ]
  %147 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %146, i64 -1
  %148 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %147, i64 0, i32 0, i32 0
  %149 = load i64*, i64** %148, align 8
  %150 = icmp eq i64* %149, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %145
  %152 = ptrtoint i64* %149 to i64
  %153 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %146, i64 -1, i32 0, i32 1
  %154 = bitcast i64** %153 to i64*
  store i64 %152, i64* %154, align 8
  %155 = bitcast i64* %149 to i8*
  call void @_ZdlPv(i8* %155) #13
  br label %156

156:                                              ; preds = %151, %145
  %157 = icmp eq %"class.std::__1::vector.16"* %147, %139
  br i1 %157, label %158, label %145

158:                                              ; preds = %156
  %159 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %160 = load i8*, i8** %159, align 8
  br label %161

161:                                              ; preds = %158, %141
  %162 = phi i8* [ %160, %158 ], [ %142, %141 ]
  store %"class.std::__1::vector.16"* %139, %"class.std::__1::vector.16"** %77, align 8
  call void @_ZdlPv(i8* %162) #13
  br label %163

163:                                              ; preds = %138, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #10
  br label %164

164:                                              ; preds = %62, %163
  %165 = phi i32 [ %79, %163 ], [ %63, %62 ]
  ret i32 %165
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13SparseToDenseIiiEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector"* dereferenceable(24), i32*, i32, i1 zeroext, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #5 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !51
  %11 = load i32, i32* %8, align 8, !noalias !51
  %12 = icmp sgt i32 %11, 4
  br i1 %12, label %13, label %14

13:                                               ; preds = %6
  tail call void @abort() #12, !noalias !51
  unreachable

14:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !51
  %15 = sub i32 4, %11
  %16 = icmp sgt i32 %15, 0
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %16, label %18, label %98

18:                                               ; preds = %14
  %19 = bitcast %union.anon* %17 to [5 x i32]*
  %20 = zext i32 %15 to i64
  %21 = icmp ult i32 %15, 8
  br i1 %21, label %91, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967288
  %24 = add nsw i64 %23, -8
  %25 = lshr exact i64 %24, 3
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 7
  %28 = icmp ult i64 %24, 56
  br i1 %28, label %76, label %29

29:                                               ; preds = %22
  %30 = sub nsw i64 %26, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %73, %31 ]
  %33 = phi i64 [ %30, %29 ], [ %74, %31 ]
  %34 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %32
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !51
  %36 = getelementptr inbounds i32, i32* %34, i64 4
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %37, align 8, !alias.scope !51
  %38 = or i64 %32, 8
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %38
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !51
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !51
  %43 = or i64 %32, 16
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !51
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !51
  %48 = or i64 %32, 24
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !51
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !51
  %53 = or i64 %32, 32
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !51
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !51
  %58 = or i64 %32, 40
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !51
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !51
  %63 = or i64 %32, 48
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !51
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !51
  %68 = or i64 %32, 56
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !51
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !51
  %73 = add i64 %32, 64
  %74 = add i64 %33, -8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %31, !llvm.loop !54

76:                                               ; preds = %31, %22
  %77 = phi i64 [ 0, %22 ], [ %73, %31 ]
  %78 = icmp eq i64 %27, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %76, %79
  %80 = phi i64 [ %86, %79 ], [ %77, %76 ]
  %81 = phi i64 [ %87, %79 ], [ %27, %76 ]
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %80
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !51
  %84 = getelementptr inbounds i32, i32* %82, i64 4
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !51
  %86 = add i64 %80, 8
  %87 = add i64 %81, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %79, !llvm.loop !55

89:                                               ; preds = %79, %76
  %90 = icmp eq i64 %23, %20
  br i1 %90, label %98, label %91

91:                                               ; preds = %89, %18
  %92 = phi i64 [ 0, %18 ], [ %23, %89 ]
  br label %93

93:                                               ; preds = %91, %93
  %94 = phi i64 [ %96, %93 ], [ %92, %91 ]
  %95 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %94
  store i32 1, i32* %95, align 4, !alias.scope !51
  %96 = add nuw nsw i64 %94, 1
  %97 = icmp eq i64 %96, %20
  br i1 %97, label %98, label %93, !llvm.loop !56

98:                                               ; preds = %93, %89, %14
  %99 = bitcast %union.anon* %17 to i32*
  %100 = sext i32 %15 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %11, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !51
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %11 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #10
  %112 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::vector.1"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector"* %0 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = sdiv exact i64 %117, 24
  %119 = trunc i64 %118 to i32
  %120 = load i32, i32* %10, align 8
  %121 = icmp sgt i32 %120, 5
  br i1 %121, label %122, label %125

122:                                              ; preds = %98
  %123 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  br label %127

125:                                              ; preds = %98
  %126 = icmp sgt i32 %120, 0
  br i1 %126, label %127, label %230

127:                                              ; preds = %125, %122
  %128 = phi i32* [ %124, %122 ], [ %99, %125 ]
  %129 = zext i32 %120 to i64
  %130 = icmp ult i32 %120, 8
  br i1 %130, label %216, label %131

131:                                              ; preds = %127
  %132 = and i64 %129, 4294967288
  %133 = add nsw i64 %132, -8
  %134 = lshr exact i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 3
  %137 = icmp ult i64 %133, 24
  br i1 %137, label %183, label %138

138:                                              ; preds = %131
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %180, %140 ]
  %142 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %178, %140 ]
  %143 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %179, %140 ]
  %144 = phi i64 [ %139, %138 ], [ %181, %140 ]
  %145 = getelementptr inbounds i32, i32* %128, i64 %141
  %146 = bitcast i32* %145 to <4 x i32>*
  %147 = load <4 x i32>, <4 x i32>* %146, align 4
  %148 = getelementptr inbounds i32, i32* %145, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = mul nsw <4 x i32> %147, %142
  %152 = mul nsw <4 x i32> %150, %143
  %153 = or i64 %141, 8
  %154 = getelementptr inbounds i32, i32* %128, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4
  %157 = getelementptr inbounds i32, i32* %154, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = mul nsw <4 x i32> %156, %151
  %161 = mul nsw <4 x i32> %159, %152
  %162 = or i64 %141, 16
  %163 = getelementptr inbounds i32, i32* %128, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4
  %166 = getelementptr inbounds i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = mul nsw <4 x i32> %165, %160
  %170 = mul nsw <4 x i32> %168, %161
  %171 = or i64 %141, 24
  %172 = getelementptr inbounds i32, i32* %128, i64 %171
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4
  %175 = getelementptr inbounds i32, i32* %172, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = mul nsw <4 x i32> %174, %169
  %179 = mul nsw <4 x i32> %177, %170
  %180 = add i64 %141, 32
  %181 = add i64 %144, -4
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %140, !llvm.loop !57

183:                                              ; preds = %140, %131
  %184 = phi <4 x i32> [ undef, %131 ], [ %178, %140 ]
  %185 = phi <4 x i32> [ undef, %131 ], [ %179, %140 ]
  %186 = phi i64 [ 0, %131 ], [ %180, %140 ]
  %187 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %178, %140 ]
  %188 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %179, %140 ]
  %189 = icmp eq i64 %136, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %183, %190
  %191 = phi i64 [ %203, %190 ], [ %186, %183 ]
  %192 = phi <4 x i32> [ %201, %190 ], [ %187, %183 ]
  %193 = phi <4 x i32> [ %202, %190 ], [ %188, %183 ]
  %194 = phi i64 [ %204, %190 ], [ %136, %183 ]
  %195 = getelementptr inbounds i32, i32* %128, i64 %191
  %196 = bitcast i32* %195 to <4 x i32>*
  %197 = load <4 x i32>, <4 x i32>* %196, align 4
  %198 = getelementptr inbounds i32, i32* %195, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  %200 = load <4 x i32>, <4 x i32>* %199, align 4
  %201 = mul nsw <4 x i32> %197, %192
  %202 = mul nsw <4 x i32> %200, %193
  %203 = add i64 %191, 8
  %204 = add i64 %194, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %190, !llvm.loop !58

206:                                              ; preds = %190, %183
  %207 = phi <4 x i32> [ %184, %183 ], [ %201, %190 ]
  %208 = phi <4 x i32> [ %185, %183 ], [ %202, %190 ]
  %209 = mul <4 x i32> %208, %207
  %210 = shufflevector <4 x i32> %209, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %211 = mul <4 x i32> %209, %210
  %212 = shufflevector <4 x i32> %211, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %213 = mul <4 x i32> %211, %212
  %214 = extractelement <4 x i32> %213, i32 0
  %215 = icmp eq i64 %132, %129
  br i1 %215, label %227, label %216

216:                                              ; preds = %206, %127
  %217 = phi i64 [ 0, %127 ], [ %132, %206 ]
  %218 = phi i32 [ 1, %127 ], [ %214, %206 ]
  br label %219

219:                                              ; preds = %216, %219
  %220 = phi i64 [ %225, %219 ], [ %217, %216 ]
  %221 = phi i32 [ %224, %219 ], [ %218, %216 ]
  %222 = getelementptr inbounds i32, i32* %128, i64 %220
  %223 = load i32, i32* %222, align 4
  %224 = mul nsw i32 %223, %221
  %225 = add nuw nsw i64 %220, 1
  %226 = icmp eq i64 %225, %129
  br i1 %226, label %227, label %219, !llvm.loop !59

227:                                              ; preds = %219, %206
  %228 = phi i32 [ %214, %206 ], [ %224, %219 ]
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %309

230:                                              ; preds = %125, %227
  %231 = phi i32 [ %228, %227 ], [ 1, %125 ]
  %232 = zext i32 %231 to i64
  %233 = icmp ult i32 %231, 8
  br i1 %233, label %234, label %236

234:                                              ; preds = %307, %230
  %235 = phi i64 [ 0, %230 ], [ %237, %307 ]
  br label %335

236:                                              ; preds = %230
  %237 = and i64 %232, 4294967288
  %238 = insertelement <4 x i32> undef, i32 %2, i32 0
  %239 = shufflevector <4 x i32> %238, <4 x i32> undef, <4 x i32> zeroinitializer
  %240 = insertelement <4 x i32> undef, i32 %2, i32 0
  %241 = shufflevector <4 x i32> %240, <4 x i32> undef, <4 x i32> zeroinitializer
  %242 = add nsw i64 %237, -8
  %243 = lshr exact i64 %242, 3
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 7
  %246 = icmp ult i64 %242, 56
  br i1 %246, label %294, label %247

247:                                              ; preds = %236
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %291, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %292, %249 ]
  %252 = getelementptr inbounds i32, i32* %5, i64 %250
  %253 = bitcast i32* %252 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %253, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 4
  %255 = bitcast i32* %254 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %255, align 4
  %256 = or i64 %250, 8
  %257 = getelementptr inbounds i32, i32* %5, i64 %256
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %258, align 4
  %259 = getelementptr inbounds i32, i32* %257, i64 4
  %260 = bitcast i32* %259 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %260, align 4
  %261 = or i64 %250, 16
  %262 = getelementptr inbounds i32, i32* %5, i64 %261
  %263 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %263, align 4
  %264 = getelementptr inbounds i32, i32* %262, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %265, align 4
  %266 = or i64 %250, 24
  %267 = getelementptr inbounds i32, i32* %5, i64 %266
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %268, align 4
  %269 = getelementptr inbounds i32, i32* %267, i64 4
  %270 = bitcast i32* %269 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %270, align 4
  %271 = or i64 %250, 32
  %272 = getelementptr inbounds i32, i32* %5, i64 %271
  %273 = bitcast i32* %272 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %273, align 4
  %274 = getelementptr inbounds i32, i32* %272, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %275, align 4
  %276 = or i64 %250, 40
  %277 = getelementptr inbounds i32, i32* %5, i64 %276
  %278 = bitcast i32* %277 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %278, align 4
  %279 = getelementptr inbounds i32, i32* %277, i64 4
  %280 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %280, align 4
  %281 = or i64 %250, 48
  %282 = getelementptr inbounds i32, i32* %5, i64 %281
  %283 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %283, align 4
  %284 = getelementptr inbounds i32, i32* %282, i64 4
  %285 = bitcast i32* %284 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %285, align 4
  %286 = or i64 %250, 56
  %287 = getelementptr inbounds i32, i32* %5, i64 %286
  %288 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %288, align 4
  %289 = getelementptr inbounds i32, i32* %287, i64 4
  %290 = bitcast i32* %289 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %290, align 4
  %291 = add i64 %250, 64
  %292 = add i64 %251, -8
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %249, !llvm.loop !60

294:                                              ; preds = %249, %236
  %295 = phi i64 [ 0, %236 ], [ %291, %249 ]
  %296 = icmp eq i64 %245, 0
  br i1 %296, label %307, label %297

297:                                              ; preds = %294, %297
  %298 = phi i64 [ %304, %297 ], [ %295, %294 ]
  %299 = phi i64 [ %305, %297 ], [ %245, %294 ]
  %300 = getelementptr inbounds i32, i32* %5, i64 %298
  %301 = bitcast i32* %300 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %301, align 4
  %302 = getelementptr inbounds i32, i32* %300, i64 4
  %303 = bitcast i32* %302 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %303, align 4
  %304 = add i64 %298, 8
  %305 = add i64 %299, -1
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %307, label %297, !llvm.loop !61

307:                                              ; preds = %297, %294
  %308 = icmp eq i64 %237, %232
  br i1 %308, label %309, label %234

309:                                              ; preds = %335, %307, %227
  %310 = icmp sgt i32 %119, 0
  br i1 %3, label %323, label %311

311:                                              ; preds = %309
  br i1 %310, label %312, label %387

312:                                              ; preds = %311
  %313 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %314 = getelementptr inbounds i32, i32* %99, i64 1
  %315 = load i32, i32* %314, align 4
  %316 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %317 = bitcast [16 x i8]* %316 to i32*
  %318 = load i32, i32* %317, align 8
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %320 = bitcast i8* %319 to i32*
  %321 = load i32, i32* %320, align 4
  %322 = and i64 %118, 4294967295
  br label %363

323:                                              ; preds = %309
  br i1 %310, label %324, label %387

324:                                              ; preds = %323
  %325 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %326 = getelementptr inbounds i32, i32* %99, i64 1
  %327 = load i32, i32* %326, align 4
  %328 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %329 = bitcast [16 x i8]* %328 to i32*
  %330 = load i32, i32* %329, align 8
  %331 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %332 = bitcast i8* %331 to i32*
  %333 = load i32, i32* %332, align 4
  %334 = and i64 %118, 4294967295
  br label %340

335:                                              ; preds = %234, %335
  %336 = phi i64 [ %338, %335 ], [ %235, %234 ]
  %337 = getelementptr inbounds i32, i32* %5, i64 %336
  store i32 %2, i32* %337, align 4
  %338 = add nuw nsw i64 %336, 1
  %339 = icmp eq i64 %338, %232
  br i1 %339, label %309, label %335, !llvm.loop !62

340:                                              ; preds = %340, %324
  %341 = phi i64 [ 0, %324 ], [ %361, %340 ]
  %342 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %325, align 8
  %343 = load i32, i32* %1, align 4
  %344 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %342, i64 %341, i32 0, i32 0
  %345 = load i32*, i32** %344, align 8
  %346 = load i32, i32* %345, align 4
  %347 = getelementptr inbounds i32, i32* %345, i64 1
  %348 = load i32, i32* %347, align 4
  %349 = getelementptr inbounds i32, i32* %345, i64 2
  %350 = load i32, i32* %349, align 4
  %351 = getelementptr inbounds i32, i32* %345, i64 3
  %352 = load i32, i32* %351, align 4
  %353 = mul nsw i32 %327, %346
  %354 = add nsw i32 %353, %348
  %355 = mul nsw i32 %354, %330
  %356 = add nsw i32 %355, %350
  %357 = mul nsw i32 %356, %333
  %358 = add nsw i32 %357, %352
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds i32, i32* %5, i64 %359
  store i32 %343, i32* %360, align 4
  %361 = add nuw nsw i64 %341, 1
  %362 = icmp eq i64 %361, %334
  br i1 %362, label %387, label %340

363:                                              ; preds = %363, %312
  %364 = phi i64 [ 0, %312 ], [ %385, %363 ]
  %365 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %313, align 8
  %366 = getelementptr inbounds i32, i32* %1, i64 %364
  %367 = load i32, i32* %366, align 4
  %368 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %365, i64 %364, i32 0, i32 0
  %369 = load i32*, i32** %368, align 8
  %370 = load i32, i32* %369, align 4
  %371 = getelementptr inbounds i32, i32* %369, i64 1
  %372 = load i32, i32* %371, align 4
  %373 = getelementptr inbounds i32, i32* %369, i64 2
  %374 = load i32, i32* %373, align 4
  %375 = getelementptr inbounds i32, i32* %369, i64 3
  %376 = load i32, i32* %375, align 4
  %377 = mul nsw i32 %315, %370
  %378 = add nsw i32 %377, %372
  %379 = mul nsw i32 %378, %318
  %380 = add nsw i32 %379, %374
  %381 = mul nsw i32 %380, %321
  %382 = add nsw i32 %381, %376
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds i32, i32* %5, i64 %383
  store i32 %367, i32* %384, align 4
  %385 = add nuw nsw i64 %364, 1
  %386 = icmp eq i64 %385, %322
  br i1 %386, label %387, label %363

387:                                              ; preds = %363, %340, %311, %323
  br i1 %121, label %388, label %394

388:                                              ; preds = %387
  %389 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %390 = load i32*, i32** %389, align 8
  %391 = icmp eq i32* %390, null
  br i1 %391, label %394, label %392

392:                                              ; preds = %388
  %393 = bitcast i32* %390 to i8*
  tail call void @_ZdaPv(i8* %393) #13
  br label %394

394:                                              ; preds = %387, %388, %392
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13SparseToDenseIilEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector.14"* dereferenceable(24), i32*, i32, i1 zeroext, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #5 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !63
  %11 = load i32, i32* %8, align 8, !noalias !63
  %12 = icmp sgt i32 %11, 4
  br i1 %12, label %13, label %14

13:                                               ; preds = %6
  tail call void @abort() #12, !noalias !63
  unreachable

14:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !63
  %15 = sub i32 4, %11
  %16 = icmp sgt i32 %15, 0
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %16, label %18, label %98

18:                                               ; preds = %14
  %19 = bitcast %union.anon* %17 to [5 x i32]*
  %20 = zext i32 %15 to i64
  %21 = icmp ult i32 %15, 8
  br i1 %21, label %91, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967288
  %24 = add nsw i64 %23, -8
  %25 = lshr exact i64 %24, 3
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 7
  %28 = icmp ult i64 %24, 56
  br i1 %28, label %76, label %29

29:                                               ; preds = %22
  %30 = sub nsw i64 %26, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %73, %31 ]
  %33 = phi i64 [ %30, %29 ], [ %74, %31 ]
  %34 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %32
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !63
  %36 = getelementptr inbounds i32, i32* %34, i64 4
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %37, align 8, !alias.scope !63
  %38 = or i64 %32, 8
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %38
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !63
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !63
  %43 = or i64 %32, 16
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !63
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !63
  %48 = or i64 %32, 24
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !63
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !63
  %53 = or i64 %32, 32
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !63
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !63
  %58 = or i64 %32, 40
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !63
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !63
  %63 = or i64 %32, 48
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !63
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !63
  %68 = or i64 %32, 56
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !63
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !63
  %73 = add i64 %32, 64
  %74 = add i64 %33, -8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %31, !llvm.loop !66

76:                                               ; preds = %31, %22
  %77 = phi i64 [ 0, %22 ], [ %73, %31 ]
  %78 = icmp eq i64 %27, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %76, %79
  %80 = phi i64 [ %86, %79 ], [ %77, %76 ]
  %81 = phi i64 [ %87, %79 ], [ %27, %76 ]
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %80
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !63
  %84 = getelementptr inbounds i32, i32* %82, i64 4
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !63
  %86 = add i64 %80, 8
  %87 = add i64 %81, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %79, !llvm.loop !67

89:                                               ; preds = %79, %76
  %90 = icmp eq i64 %23, %20
  br i1 %90, label %98, label %91

91:                                               ; preds = %89, %18
  %92 = phi i64 [ 0, %18 ], [ %23, %89 ]
  br label %93

93:                                               ; preds = %91, %93
  %94 = phi i64 [ %96, %93 ], [ %92, %91 ]
  %95 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %94
  store i32 1, i32* %95, align 4, !alias.scope !63
  %96 = add nuw nsw i64 %94, 1
  %97 = icmp eq i64 %96, %20
  br i1 %97, label %98, label %93, !llvm.loop !68

98:                                               ; preds = %93, %89, %14
  %99 = bitcast %union.anon* %17 to i32*
  %100 = sext i32 %15 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %11, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !63
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %11 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #10
  %112 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::vector.16"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = sdiv exact i64 %117, 24
  %119 = trunc i64 %118 to i32
  %120 = load i32, i32* %10, align 8
  %121 = icmp sgt i32 %120, 5
  br i1 %121, label %122, label %125

122:                                              ; preds = %98
  %123 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  br label %127

125:                                              ; preds = %98
  %126 = icmp sgt i32 %120, 0
  br i1 %126, label %127, label %230

127:                                              ; preds = %125, %122
  %128 = phi i32* [ %124, %122 ], [ %99, %125 ]
  %129 = zext i32 %120 to i64
  %130 = icmp ult i32 %120, 8
  br i1 %130, label %216, label %131

131:                                              ; preds = %127
  %132 = and i64 %129, 4294967288
  %133 = add nsw i64 %132, -8
  %134 = lshr exact i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 3
  %137 = icmp ult i64 %133, 24
  br i1 %137, label %183, label %138

138:                                              ; preds = %131
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %180, %140 ]
  %142 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %178, %140 ]
  %143 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %179, %140 ]
  %144 = phi i64 [ %139, %138 ], [ %181, %140 ]
  %145 = getelementptr inbounds i32, i32* %128, i64 %141
  %146 = bitcast i32* %145 to <4 x i32>*
  %147 = load <4 x i32>, <4 x i32>* %146, align 4
  %148 = getelementptr inbounds i32, i32* %145, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = mul nsw <4 x i32> %147, %142
  %152 = mul nsw <4 x i32> %150, %143
  %153 = or i64 %141, 8
  %154 = getelementptr inbounds i32, i32* %128, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4
  %157 = getelementptr inbounds i32, i32* %154, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = mul nsw <4 x i32> %156, %151
  %161 = mul nsw <4 x i32> %159, %152
  %162 = or i64 %141, 16
  %163 = getelementptr inbounds i32, i32* %128, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4
  %166 = getelementptr inbounds i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = mul nsw <4 x i32> %165, %160
  %170 = mul nsw <4 x i32> %168, %161
  %171 = or i64 %141, 24
  %172 = getelementptr inbounds i32, i32* %128, i64 %171
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4
  %175 = getelementptr inbounds i32, i32* %172, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = mul nsw <4 x i32> %174, %169
  %179 = mul nsw <4 x i32> %177, %170
  %180 = add i64 %141, 32
  %181 = add i64 %144, -4
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %140, !llvm.loop !69

183:                                              ; preds = %140, %131
  %184 = phi <4 x i32> [ undef, %131 ], [ %178, %140 ]
  %185 = phi <4 x i32> [ undef, %131 ], [ %179, %140 ]
  %186 = phi i64 [ 0, %131 ], [ %180, %140 ]
  %187 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %178, %140 ]
  %188 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %179, %140 ]
  %189 = icmp eq i64 %136, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %183, %190
  %191 = phi i64 [ %203, %190 ], [ %186, %183 ]
  %192 = phi <4 x i32> [ %201, %190 ], [ %187, %183 ]
  %193 = phi <4 x i32> [ %202, %190 ], [ %188, %183 ]
  %194 = phi i64 [ %204, %190 ], [ %136, %183 ]
  %195 = getelementptr inbounds i32, i32* %128, i64 %191
  %196 = bitcast i32* %195 to <4 x i32>*
  %197 = load <4 x i32>, <4 x i32>* %196, align 4
  %198 = getelementptr inbounds i32, i32* %195, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  %200 = load <4 x i32>, <4 x i32>* %199, align 4
  %201 = mul nsw <4 x i32> %197, %192
  %202 = mul nsw <4 x i32> %200, %193
  %203 = add i64 %191, 8
  %204 = add i64 %194, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %190, !llvm.loop !70

206:                                              ; preds = %190, %183
  %207 = phi <4 x i32> [ %184, %183 ], [ %201, %190 ]
  %208 = phi <4 x i32> [ %185, %183 ], [ %202, %190 ]
  %209 = mul <4 x i32> %208, %207
  %210 = shufflevector <4 x i32> %209, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %211 = mul <4 x i32> %209, %210
  %212 = shufflevector <4 x i32> %211, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %213 = mul <4 x i32> %211, %212
  %214 = extractelement <4 x i32> %213, i32 0
  %215 = icmp eq i64 %132, %129
  br i1 %215, label %227, label %216

216:                                              ; preds = %206, %127
  %217 = phi i64 [ 0, %127 ], [ %132, %206 ]
  %218 = phi i32 [ 1, %127 ], [ %214, %206 ]
  br label %219

219:                                              ; preds = %216, %219
  %220 = phi i64 [ %225, %219 ], [ %217, %216 ]
  %221 = phi i32 [ %224, %219 ], [ %218, %216 ]
  %222 = getelementptr inbounds i32, i32* %128, i64 %220
  %223 = load i32, i32* %222, align 4
  %224 = mul nsw i32 %223, %221
  %225 = add nuw nsw i64 %220, 1
  %226 = icmp eq i64 %225, %129
  br i1 %226, label %227, label %219, !llvm.loop !71

227:                                              ; preds = %219, %206
  %228 = phi i32 [ %214, %206 ], [ %224, %219 ]
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %309

230:                                              ; preds = %125, %227
  %231 = phi i32 [ %228, %227 ], [ 1, %125 ]
  %232 = zext i32 %231 to i64
  %233 = icmp ult i32 %231, 8
  br i1 %233, label %234, label %236

234:                                              ; preds = %307, %230
  %235 = phi i64 [ 0, %230 ], [ %237, %307 ]
  br label %335

236:                                              ; preds = %230
  %237 = and i64 %232, 4294967288
  %238 = insertelement <4 x i32> undef, i32 %2, i32 0
  %239 = shufflevector <4 x i32> %238, <4 x i32> undef, <4 x i32> zeroinitializer
  %240 = insertelement <4 x i32> undef, i32 %2, i32 0
  %241 = shufflevector <4 x i32> %240, <4 x i32> undef, <4 x i32> zeroinitializer
  %242 = add nsw i64 %237, -8
  %243 = lshr exact i64 %242, 3
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 7
  %246 = icmp ult i64 %242, 56
  br i1 %246, label %294, label %247

247:                                              ; preds = %236
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %291, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %292, %249 ]
  %252 = getelementptr inbounds i32, i32* %5, i64 %250
  %253 = bitcast i32* %252 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %253, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 4
  %255 = bitcast i32* %254 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %255, align 4
  %256 = or i64 %250, 8
  %257 = getelementptr inbounds i32, i32* %5, i64 %256
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %258, align 4
  %259 = getelementptr inbounds i32, i32* %257, i64 4
  %260 = bitcast i32* %259 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %260, align 4
  %261 = or i64 %250, 16
  %262 = getelementptr inbounds i32, i32* %5, i64 %261
  %263 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %263, align 4
  %264 = getelementptr inbounds i32, i32* %262, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %265, align 4
  %266 = or i64 %250, 24
  %267 = getelementptr inbounds i32, i32* %5, i64 %266
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %268, align 4
  %269 = getelementptr inbounds i32, i32* %267, i64 4
  %270 = bitcast i32* %269 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %270, align 4
  %271 = or i64 %250, 32
  %272 = getelementptr inbounds i32, i32* %5, i64 %271
  %273 = bitcast i32* %272 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %273, align 4
  %274 = getelementptr inbounds i32, i32* %272, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %275, align 4
  %276 = or i64 %250, 40
  %277 = getelementptr inbounds i32, i32* %5, i64 %276
  %278 = bitcast i32* %277 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %278, align 4
  %279 = getelementptr inbounds i32, i32* %277, i64 4
  %280 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %280, align 4
  %281 = or i64 %250, 48
  %282 = getelementptr inbounds i32, i32* %5, i64 %281
  %283 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %283, align 4
  %284 = getelementptr inbounds i32, i32* %282, i64 4
  %285 = bitcast i32* %284 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %285, align 4
  %286 = or i64 %250, 56
  %287 = getelementptr inbounds i32, i32* %5, i64 %286
  %288 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %288, align 4
  %289 = getelementptr inbounds i32, i32* %287, i64 4
  %290 = bitcast i32* %289 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %290, align 4
  %291 = add i64 %250, 64
  %292 = add i64 %251, -8
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %249, !llvm.loop !72

294:                                              ; preds = %249, %236
  %295 = phi i64 [ 0, %236 ], [ %291, %249 ]
  %296 = icmp eq i64 %245, 0
  br i1 %296, label %307, label %297

297:                                              ; preds = %294, %297
  %298 = phi i64 [ %304, %297 ], [ %295, %294 ]
  %299 = phi i64 [ %305, %297 ], [ %245, %294 ]
  %300 = getelementptr inbounds i32, i32* %5, i64 %298
  %301 = bitcast i32* %300 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %301, align 4
  %302 = getelementptr inbounds i32, i32* %300, i64 4
  %303 = bitcast i32* %302 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %303, align 4
  %304 = add i64 %298, 8
  %305 = add i64 %299, -1
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %307, label %297, !llvm.loop !73

307:                                              ; preds = %297, %294
  %308 = icmp eq i64 %237, %232
  br i1 %308, label %309, label %234

309:                                              ; preds = %335, %307, %227
  %310 = icmp sgt i32 %119, 0
  br i1 %3, label %323, label %311

311:                                              ; preds = %309
  br i1 %310, label %312, label %395

312:                                              ; preds = %311
  %313 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %314 = getelementptr inbounds i32, i32* %99, i64 1
  %315 = load i32, i32* %314, align 4
  %316 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %317 = bitcast [16 x i8]* %316 to i32*
  %318 = load i32, i32* %317, align 8
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %320 = bitcast i8* %319 to i32*
  %321 = load i32, i32* %320, align 4
  %322 = and i64 %118, 4294967295
  br label %367

323:                                              ; preds = %309
  br i1 %310, label %324, label %395

324:                                              ; preds = %323
  %325 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %326 = getelementptr inbounds i32, i32* %99, i64 1
  %327 = load i32, i32* %326, align 4
  %328 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %329 = bitcast [16 x i8]* %328 to i32*
  %330 = load i32, i32* %329, align 8
  %331 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %332 = bitcast i8* %331 to i32*
  %333 = load i32, i32* %332, align 4
  %334 = and i64 %118, 4294967295
  br label %340

335:                                              ; preds = %234, %335
  %336 = phi i64 [ %338, %335 ], [ %235, %234 ]
  %337 = getelementptr inbounds i32, i32* %5, i64 %336
  store i32 %2, i32* %337, align 4
  %338 = add nuw nsw i64 %336, 1
  %339 = icmp eq i64 %338, %232
  br i1 %339, label %309, label %335, !llvm.loop !74

340:                                              ; preds = %340, %324
  %341 = phi i64 [ 0, %324 ], [ %365, %340 ]
  %342 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %325, align 8
  %343 = load i32, i32* %1, align 4
  %344 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %342, i64 %341, i32 0, i32 0
  %345 = load i64*, i64** %344, align 8
  %346 = load i64, i64* %345, align 8
  %347 = trunc i64 %346 to i32
  %348 = getelementptr inbounds i64, i64* %345, i64 1
  %349 = load i64, i64* %348, align 8
  %350 = trunc i64 %349 to i32
  %351 = getelementptr inbounds i64, i64* %345, i64 2
  %352 = load i64, i64* %351, align 8
  %353 = trunc i64 %352 to i32
  %354 = getelementptr inbounds i64, i64* %345, i64 3
  %355 = load i64, i64* %354, align 8
  %356 = trunc i64 %355 to i32
  %357 = mul nsw i32 %327, %347
  %358 = add nsw i32 %357, %350
  %359 = mul nsw i32 %358, %330
  %360 = add nsw i32 %359, %353
  %361 = mul nsw i32 %360, %333
  %362 = add nsw i32 %361, %356
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds i32, i32* %5, i64 %363
  store i32 %343, i32* %364, align 4
  %365 = add nuw nsw i64 %341, 1
  %366 = icmp eq i64 %365, %334
  br i1 %366, label %395, label %340

367:                                              ; preds = %367, %312
  %368 = phi i64 [ 0, %312 ], [ %393, %367 ]
  %369 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %313, align 8
  %370 = getelementptr inbounds i32, i32* %1, i64 %368
  %371 = load i32, i32* %370, align 4
  %372 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %369, i64 %368, i32 0, i32 0
  %373 = load i64*, i64** %372, align 8
  %374 = load i64, i64* %373, align 8
  %375 = trunc i64 %374 to i32
  %376 = getelementptr inbounds i64, i64* %373, i64 1
  %377 = load i64, i64* %376, align 8
  %378 = trunc i64 %377 to i32
  %379 = getelementptr inbounds i64, i64* %373, i64 2
  %380 = load i64, i64* %379, align 8
  %381 = trunc i64 %380 to i32
  %382 = getelementptr inbounds i64, i64* %373, i64 3
  %383 = load i64, i64* %382, align 8
  %384 = trunc i64 %383 to i32
  %385 = mul nsw i32 %315, %375
  %386 = add nsw i32 %385, %378
  %387 = mul nsw i32 %386, %318
  %388 = add nsw i32 %387, %381
  %389 = mul nsw i32 %388, %321
  %390 = add nsw i32 %389, %384
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds i32, i32* %5, i64 %391
  store i32 %371, i32* %392, align 4
  %393 = add nuw nsw i64 %368, 1
  %394 = icmp eq i64 %393, %322
  br i1 %394, label %395, label %367

395:                                              ; preds = %367, %340, %311, %323
  br i1 %121, label %396, label %402

396:                                              ; preds = %395
  %397 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %398 = load i32*, i32** %397, align 8
  %399 = icmp eq i32* %398, null
  br i1 %399, label %402, label %400

400:                                              ; preds = %396
  %401 = bitcast i32* %398 to i8*
  tail call void @_ZdaPv(i8* %401) #13
  br label %402

402:                                              ; preds = %395, %396, %400
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIliEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %12 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 %13
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi %struct.TfLiteTensor* [ %14, %10 ], [ null, %2 ]
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %15, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %15 ]
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %25, %30
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %25 ]
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %35, %40
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %35 ]
  %47 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %54 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %53, align 8
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 %55
  br label %57

57:                                               ; preds = %45, %52
  %58 = phi %struct.TfLiteTensor* [ %56, %52 ], [ null, %45 ]
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 4
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %26, %struct.TfLiteTensor* %58)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %167

65:                                               ; preds = %62, %57
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 2
  %67 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %66, align 8
  %68 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %67, i64 0, i32 1, i64 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 2
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  %75 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false) #10
  %78 = sext i32 %69 to i64
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE7reserveEm(%"class.std::__1::vector"* nonnull %3, i64 %78)
  %79 = call i32 @_ZN6tflite3ops7builtin15sparse_to_dense16GetIndicesVectorIiEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensoriPNSt3__16vectorINSB_IT_NSA_9allocatorISC_EEEENSD_ISF_EEEE(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %16, i32 %69, %"class.std::__1::vector"* nonnull %3)
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %141

81:                                               ; preds = %65
  %82 = icmp eq %struct.TfLiteTensor* %36, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1
  %85 = bitcast %union.TfLitePtrUnion* %84 to i64**
  %86 = load i64*, i64** %85, align 8
  br label %87

87:                                               ; preds = %81, %83
  %88 = phi i64* [ %86, %83 ], [ null, %81 ]
  %89 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %92 = bitcast %union.TfLitePtrUnion* %91 to i64**
  %93 = load i64*, i64** %92, align 8
  br label %94

94:                                               ; preds = %87, %90
  %95 = phi i64* [ %93, %90 ], [ null, %87 ]
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #10
  %98 = icmp eq %struct.TfLiteTensor* %58, null
  br i1 %98, label %99, label %101

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %100, align 8, !alias.scope !75
  br label %129

101:                                              ; preds = %94
  %102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 2
  %103 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %102, align 8, !noalias !75
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4, !noalias !75
  %106 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 1, i64 0
  %107 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %105, i32* %107, align 8, !alias.scope !75
  %108 = icmp sgt i32 %105, 5
  br i1 %108, label %109, label %116

109:                                              ; preds = %101
  %110 = sext i32 %105 to i64
  %111 = shl nsw i64 %110, 2
  %112 = call i8* @_Znam(i64 %111) #13, !noalias !75
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %114 = bitcast i32** %113 to i8**
  store i8* %112, i8** %114, align 8, !alias.scope !75
  %115 = bitcast i8* %112 to i32*
  br label %121

116:                                              ; preds = %101
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %118 = bitcast %union.anon* %117 to i32*
  %119 = sext i32 %105 to i64
  %120 = shl nsw i64 %119, 2
  br label %121

121:                                              ; preds = %116, %109
  %122 = phi i64 [ %111, %109 ], [ %120, %116 ]
  %123 = phi i32* [ %115, %109 ], [ %118, %116 ]
  %124 = bitcast i32* %123 to i8*
  %125 = bitcast i32* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 %122, i1 false) #10
  %126 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 1
  %127 = bitcast %union.TfLitePtrUnion* %126 to i64**
  %128 = load i64*, i64** %127, align 8
  br label %129

129:                                              ; preds = %99, %121
  %130 = phi i64* [ %128, %121 ], [ null, %99 ]
  call void @_ZN6tflite13reference_ops13SparseToDenseIliEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector"* nonnull dereferenceable(24) %3, i64* %88, i64 %96, i1 zeroext %74, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i64* %130)
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = icmp sgt i32 %132, 5
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast i32* %136 to i8*
  call void @_ZdaPv(i8* %139) #13
  br label %140

140:                                              ; preds = %129, %134, %138
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #10
  br label %141

141:                                              ; preds = %65, %140
  %142 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %76, align 8
  %143 = icmp eq %"class.std::__1::vector.1"* %142, null
  br i1 %143, label %166, label %144

144:                                              ; preds = %141
  %145 = bitcast %"class.std::__1::vector.1"* %142 to i8*
  %146 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %77, align 8
  %147 = icmp eq %"class.std::__1::vector.1"* %146, %142
  br i1 %147, label %164, label %148

148:                                              ; preds = %144, %159
  %149 = phi %"class.std::__1::vector.1"* [ %150, %159 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %149, i64 -1
  %151 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %150, i64 0, i32 0, i32 0
  %152 = load i32*, i32** %151, align 8
  %153 = icmp eq i32* %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %148
  %155 = ptrtoint i32* %152 to i64
  %156 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %149, i64 -1, i32 0, i32 1
  %157 = bitcast i32** %156 to i64*
  store i64 %155, i64* %157, align 8
  %158 = bitcast i32* %152 to i8*
  call void @_ZdlPv(i8* %158) #13
  br label %159

159:                                              ; preds = %154, %148
  %160 = icmp eq %"class.std::__1::vector.1"* %150, %142
  br i1 %160, label %161, label %148

161:                                              ; preds = %159
  %162 = bitcast %"class.std::__1::vector"* %3 to i8**
  %163 = load i8*, i8** %162, align 8
  br label %164

164:                                              ; preds = %161, %144
  %165 = phi i8* [ %163, %161 ], [ %145, %144 ]
  store %"class.std::__1::vector.1"* %142, %"class.std::__1::vector.1"** %77, align 8
  call void @_ZdlPv(i8* %165) #13
  br label %166

166:                                              ; preds = %141, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #10
  br label %167

167:                                              ; preds = %62, %166
  %168 = phi i32 [ %79, %166 ], [ %63, %62 ]
  ret i32 %168
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIllEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.std::__1::vector.14", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %12 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 %13
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi %struct.TfLiteTensor* [ %14, %10 ], [ null, %2 ]
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %15, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %15 ]
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %25, %30
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %25 ]
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %35, %40
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %35 ]
  %47 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %54 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %53, align 8
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 %55
  br label %57

57:                                               ; preds = %45, %52
  %58 = phi %struct.TfLiteTensor* [ %56, %52 ], [ null, %45 ]
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 4
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %26, %struct.TfLiteTensor* %58)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %167

65:                                               ; preds = %62, %57
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 2
  %67 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %66, align 8
  %68 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %67, i64 0, i32 1, i64 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 2
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  %75 = bitcast %"class.std::__1::vector.14"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false) #10
  %78 = sext i32 %69 to i64
  call void @_ZNSt3__16vectorINS0_IlNS_9allocatorIlEEEENS1_IS3_EEE7reserveEm(%"class.std::__1::vector.14"* nonnull %3, i64 %78)
  %79 = call i32 @_ZN6tflite3ops7builtin15sparse_to_dense16GetIndicesVectorIlEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensoriPNSt3__16vectorINSB_IT_NSA_9allocatorISC_EEEENSD_ISF_EEEE(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %16, i32 %69, %"class.std::__1::vector.14"* nonnull %3)
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %141

81:                                               ; preds = %65
  %82 = icmp eq %struct.TfLiteTensor* %36, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1
  %85 = bitcast %union.TfLitePtrUnion* %84 to i64**
  %86 = load i64*, i64** %85, align 8
  br label %87

87:                                               ; preds = %81, %83
  %88 = phi i64* [ %86, %83 ], [ null, %81 ]
  %89 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %92 = bitcast %union.TfLitePtrUnion* %91 to i64**
  %93 = load i64*, i64** %92, align 8
  br label %94

94:                                               ; preds = %87, %90
  %95 = phi i64* [ %93, %90 ], [ null, %87 ]
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #10
  %98 = icmp eq %struct.TfLiteTensor* %58, null
  br i1 %98, label %99, label %101

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %100, align 8, !alias.scope !78
  br label %129

101:                                              ; preds = %94
  %102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 2
  %103 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %102, align 8, !noalias !78
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4, !noalias !78
  %106 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 1, i64 0
  %107 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %105, i32* %107, align 8, !alias.scope !78
  %108 = icmp sgt i32 %105, 5
  br i1 %108, label %109, label %116

109:                                              ; preds = %101
  %110 = sext i32 %105 to i64
  %111 = shl nsw i64 %110, 2
  %112 = call i8* @_Znam(i64 %111) #13, !noalias !78
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %114 = bitcast i32** %113 to i8**
  store i8* %112, i8** %114, align 8, !alias.scope !78
  %115 = bitcast i8* %112 to i32*
  br label %121

116:                                              ; preds = %101
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %118 = bitcast %union.anon* %117 to i32*
  %119 = sext i32 %105 to i64
  %120 = shl nsw i64 %119, 2
  br label %121

121:                                              ; preds = %116, %109
  %122 = phi i64 [ %111, %109 ], [ %120, %116 ]
  %123 = phi i32* [ %115, %109 ], [ %118, %116 ]
  %124 = bitcast i32* %123 to i8*
  %125 = bitcast i32* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 %122, i1 false) #10
  %126 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 1
  %127 = bitcast %union.TfLitePtrUnion* %126 to i64**
  %128 = load i64*, i64** %127, align 8
  br label %129

129:                                              ; preds = %99, %121
  %130 = phi i64* [ %128, %121 ], [ null, %99 ]
  call void @_ZN6tflite13reference_ops13SparseToDenseIllEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector.14"* nonnull dereferenceable(24) %3, i64* %88, i64 %96, i1 zeroext %74, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i64* %130)
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = icmp sgt i32 %132, 5
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast i32* %136 to i8*
  call void @_ZdaPv(i8* %139) #13
  br label %140

140:                                              ; preds = %129, %134, %138
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #10
  br label %141

141:                                              ; preds = %65, %140
  %142 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %76, align 8
  %143 = icmp eq %"class.std::__1::vector.16"* %142, null
  br i1 %143, label %166, label %144

144:                                              ; preds = %141
  %145 = bitcast %"class.std::__1::vector.16"* %142 to i8*
  %146 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %77, align 8
  %147 = icmp eq %"class.std::__1::vector.16"* %146, %142
  br i1 %147, label %164, label %148

148:                                              ; preds = %144, %159
  %149 = phi %"class.std::__1::vector.16"* [ %150, %159 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %149, i64 -1
  %151 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %150, i64 0, i32 0, i32 0
  %152 = load i64*, i64** %151, align 8
  %153 = icmp eq i64* %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %148
  %155 = ptrtoint i64* %152 to i64
  %156 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %149, i64 -1, i32 0, i32 1
  %157 = bitcast i64** %156 to i64*
  store i64 %155, i64* %157, align 8
  %158 = bitcast i64* %152 to i8*
  call void @_ZdlPv(i8* %158) #13
  br label %159

159:                                              ; preds = %154, %148
  %160 = icmp eq %"class.std::__1::vector.16"* %150, %142
  br i1 %160, label %161, label %148

161:                                              ; preds = %159
  %162 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %163 = load i8*, i8** %162, align 8
  br label %164

164:                                              ; preds = %161, %144
  %165 = phi i8* [ %163, %161 ], [ %145, %144 ]
  store %"class.std::__1::vector.16"* %142, %"class.std::__1::vector.16"** %77, align 8
  call void @_ZdlPv(i8* %165) #13
  br label %166

166:                                              ; preds = %141, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #10
  br label %167

167:                                              ; preds = %62, %166
  %168 = phi i32 [ %79, %166 ], [ %63, %62 ]
  ret i32 %168
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13SparseToDenseIliEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector"* dereferenceable(24), i64*, i64, i1 zeroext, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*) local_unnamed_addr #5 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !81
  %11 = load i32, i32* %8, align 8, !noalias !81
  %12 = icmp sgt i32 %11, 4
  br i1 %12, label %13, label %14

13:                                               ; preds = %6
  tail call void @abort() #12, !noalias !81
  unreachable

14:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !81
  %15 = sub i32 4, %11
  %16 = icmp sgt i32 %15, 0
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %16, label %18, label %98

18:                                               ; preds = %14
  %19 = bitcast %union.anon* %17 to [5 x i32]*
  %20 = zext i32 %15 to i64
  %21 = icmp ult i32 %15, 8
  br i1 %21, label %91, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967288
  %24 = add nsw i64 %23, -8
  %25 = lshr exact i64 %24, 3
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 7
  %28 = icmp ult i64 %24, 56
  br i1 %28, label %76, label %29

29:                                               ; preds = %22
  %30 = sub nsw i64 %26, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %73, %31 ]
  %33 = phi i64 [ %30, %29 ], [ %74, %31 ]
  %34 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %32
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !81
  %36 = getelementptr inbounds i32, i32* %34, i64 4
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %37, align 8, !alias.scope !81
  %38 = or i64 %32, 8
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %38
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !81
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !81
  %43 = or i64 %32, 16
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !81
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !81
  %48 = or i64 %32, 24
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !81
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !81
  %53 = or i64 %32, 32
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !81
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !81
  %58 = or i64 %32, 40
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !81
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !81
  %63 = or i64 %32, 48
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !81
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !81
  %68 = or i64 %32, 56
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !81
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !81
  %73 = add i64 %32, 64
  %74 = add i64 %33, -8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %31, !llvm.loop !84

76:                                               ; preds = %31, %22
  %77 = phi i64 [ 0, %22 ], [ %73, %31 ]
  %78 = icmp eq i64 %27, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %76, %79
  %80 = phi i64 [ %86, %79 ], [ %77, %76 ]
  %81 = phi i64 [ %87, %79 ], [ %27, %76 ]
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %80
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !81
  %84 = getelementptr inbounds i32, i32* %82, i64 4
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !81
  %86 = add i64 %80, 8
  %87 = add i64 %81, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %79, !llvm.loop !85

89:                                               ; preds = %79, %76
  %90 = icmp eq i64 %23, %20
  br i1 %90, label %98, label %91

91:                                               ; preds = %89, %18
  %92 = phi i64 [ 0, %18 ], [ %23, %89 ]
  br label %93

93:                                               ; preds = %91, %93
  %94 = phi i64 [ %96, %93 ], [ %92, %91 ]
  %95 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %94
  store i32 1, i32* %95, align 4, !alias.scope !81
  %96 = add nuw nsw i64 %94, 1
  %97 = icmp eq i64 %96, %20
  br i1 %97, label %98, label %93, !llvm.loop !86

98:                                               ; preds = %93, %89, %14
  %99 = bitcast %union.anon* %17 to i32*
  %100 = sext i32 %15 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %11, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !81
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %11 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #10
  %112 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::vector.1"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector"* %0 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = sdiv exact i64 %117, 24
  %119 = trunc i64 %118 to i32
  %120 = load i32, i32* %10, align 8
  %121 = icmp sgt i32 %120, 5
  br i1 %121, label %122, label %125

122:                                              ; preds = %98
  %123 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  br label %127

125:                                              ; preds = %98
  %126 = icmp sgt i32 %120, 0
  br i1 %126, label %127, label %230

127:                                              ; preds = %125, %122
  %128 = phi i32* [ %124, %122 ], [ %99, %125 ]
  %129 = zext i32 %120 to i64
  %130 = icmp ult i32 %120, 8
  br i1 %130, label %216, label %131

131:                                              ; preds = %127
  %132 = and i64 %129, 4294967288
  %133 = add nsw i64 %132, -8
  %134 = lshr exact i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 3
  %137 = icmp ult i64 %133, 24
  br i1 %137, label %183, label %138

138:                                              ; preds = %131
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %180, %140 ]
  %142 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %178, %140 ]
  %143 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %179, %140 ]
  %144 = phi i64 [ %139, %138 ], [ %181, %140 ]
  %145 = getelementptr inbounds i32, i32* %128, i64 %141
  %146 = bitcast i32* %145 to <4 x i32>*
  %147 = load <4 x i32>, <4 x i32>* %146, align 4
  %148 = getelementptr inbounds i32, i32* %145, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = mul nsw <4 x i32> %147, %142
  %152 = mul nsw <4 x i32> %150, %143
  %153 = or i64 %141, 8
  %154 = getelementptr inbounds i32, i32* %128, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4
  %157 = getelementptr inbounds i32, i32* %154, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = mul nsw <4 x i32> %156, %151
  %161 = mul nsw <4 x i32> %159, %152
  %162 = or i64 %141, 16
  %163 = getelementptr inbounds i32, i32* %128, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4
  %166 = getelementptr inbounds i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = mul nsw <4 x i32> %165, %160
  %170 = mul nsw <4 x i32> %168, %161
  %171 = or i64 %141, 24
  %172 = getelementptr inbounds i32, i32* %128, i64 %171
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4
  %175 = getelementptr inbounds i32, i32* %172, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = mul nsw <4 x i32> %174, %169
  %179 = mul nsw <4 x i32> %177, %170
  %180 = add i64 %141, 32
  %181 = add i64 %144, -4
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %140, !llvm.loop !87

183:                                              ; preds = %140, %131
  %184 = phi <4 x i32> [ undef, %131 ], [ %178, %140 ]
  %185 = phi <4 x i32> [ undef, %131 ], [ %179, %140 ]
  %186 = phi i64 [ 0, %131 ], [ %180, %140 ]
  %187 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %178, %140 ]
  %188 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %179, %140 ]
  %189 = icmp eq i64 %136, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %183, %190
  %191 = phi i64 [ %203, %190 ], [ %186, %183 ]
  %192 = phi <4 x i32> [ %201, %190 ], [ %187, %183 ]
  %193 = phi <4 x i32> [ %202, %190 ], [ %188, %183 ]
  %194 = phi i64 [ %204, %190 ], [ %136, %183 ]
  %195 = getelementptr inbounds i32, i32* %128, i64 %191
  %196 = bitcast i32* %195 to <4 x i32>*
  %197 = load <4 x i32>, <4 x i32>* %196, align 4
  %198 = getelementptr inbounds i32, i32* %195, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  %200 = load <4 x i32>, <4 x i32>* %199, align 4
  %201 = mul nsw <4 x i32> %197, %192
  %202 = mul nsw <4 x i32> %200, %193
  %203 = add i64 %191, 8
  %204 = add i64 %194, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %190, !llvm.loop !88

206:                                              ; preds = %190, %183
  %207 = phi <4 x i32> [ %184, %183 ], [ %201, %190 ]
  %208 = phi <4 x i32> [ %185, %183 ], [ %202, %190 ]
  %209 = mul <4 x i32> %208, %207
  %210 = shufflevector <4 x i32> %209, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %211 = mul <4 x i32> %209, %210
  %212 = shufflevector <4 x i32> %211, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %213 = mul <4 x i32> %211, %212
  %214 = extractelement <4 x i32> %213, i32 0
  %215 = icmp eq i64 %132, %129
  br i1 %215, label %227, label %216

216:                                              ; preds = %206, %127
  %217 = phi i64 [ 0, %127 ], [ %132, %206 ]
  %218 = phi i32 [ 1, %127 ], [ %214, %206 ]
  br label %219

219:                                              ; preds = %216, %219
  %220 = phi i64 [ %225, %219 ], [ %217, %216 ]
  %221 = phi i32 [ %224, %219 ], [ %218, %216 ]
  %222 = getelementptr inbounds i32, i32* %128, i64 %220
  %223 = load i32, i32* %222, align 4
  %224 = mul nsw i32 %223, %221
  %225 = add nuw nsw i64 %220, 1
  %226 = icmp eq i64 %225, %129
  br i1 %226, label %227, label %219, !llvm.loop !89

227:                                              ; preds = %219, %206
  %228 = phi i32 [ %214, %206 ], [ %224, %219 ]
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %309

230:                                              ; preds = %125, %227
  %231 = phi i32 [ %228, %227 ], [ 1, %125 ]
  %232 = zext i32 %231 to i64
  %233 = icmp ult i32 %231, 4
  br i1 %233, label %234, label %236

234:                                              ; preds = %307, %230
  %235 = phi i64 [ 0, %230 ], [ %237, %307 ]
  br label %335

236:                                              ; preds = %230
  %237 = and i64 %232, 4294967292
  %238 = insertelement <2 x i64> undef, i64 %2, i32 0
  %239 = shufflevector <2 x i64> %238, <2 x i64> undef, <2 x i32> zeroinitializer
  %240 = insertelement <2 x i64> undef, i64 %2, i32 0
  %241 = shufflevector <2 x i64> %240, <2 x i64> undef, <2 x i32> zeroinitializer
  %242 = add nsw i64 %237, -4
  %243 = lshr exact i64 %242, 2
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 7
  %246 = icmp ult i64 %242, 28
  br i1 %246, label %294, label %247

247:                                              ; preds = %236
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %291, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %292, %249 ]
  %252 = getelementptr inbounds i64, i64* %5, i64 %250
  %253 = bitcast i64* %252 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %253, align 8
  %254 = getelementptr inbounds i64, i64* %252, i64 2
  %255 = bitcast i64* %254 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %255, align 8
  %256 = or i64 %250, 4
  %257 = getelementptr inbounds i64, i64* %5, i64 %256
  %258 = bitcast i64* %257 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %258, align 8
  %259 = getelementptr inbounds i64, i64* %257, i64 2
  %260 = bitcast i64* %259 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %260, align 8
  %261 = or i64 %250, 8
  %262 = getelementptr inbounds i64, i64* %5, i64 %261
  %263 = bitcast i64* %262 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %263, align 8
  %264 = getelementptr inbounds i64, i64* %262, i64 2
  %265 = bitcast i64* %264 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %265, align 8
  %266 = or i64 %250, 12
  %267 = getelementptr inbounds i64, i64* %5, i64 %266
  %268 = bitcast i64* %267 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %268, align 8
  %269 = getelementptr inbounds i64, i64* %267, i64 2
  %270 = bitcast i64* %269 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %270, align 8
  %271 = or i64 %250, 16
  %272 = getelementptr inbounds i64, i64* %5, i64 %271
  %273 = bitcast i64* %272 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %273, align 8
  %274 = getelementptr inbounds i64, i64* %272, i64 2
  %275 = bitcast i64* %274 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %275, align 8
  %276 = or i64 %250, 20
  %277 = getelementptr inbounds i64, i64* %5, i64 %276
  %278 = bitcast i64* %277 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %278, align 8
  %279 = getelementptr inbounds i64, i64* %277, i64 2
  %280 = bitcast i64* %279 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %280, align 8
  %281 = or i64 %250, 24
  %282 = getelementptr inbounds i64, i64* %5, i64 %281
  %283 = bitcast i64* %282 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %283, align 8
  %284 = getelementptr inbounds i64, i64* %282, i64 2
  %285 = bitcast i64* %284 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %285, align 8
  %286 = or i64 %250, 28
  %287 = getelementptr inbounds i64, i64* %5, i64 %286
  %288 = bitcast i64* %287 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %288, align 8
  %289 = getelementptr inbounds i64, i64* %287, i64 2
  %290 = bitcast i64* %289 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %290, align 8
  %291 = add i64 %250, 32
  %292 = add i64 %251, -8
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %249, !llvm.loop !90

294:                                              ; preds = %249, %236
  %295 = phi i64 [ 0, %236 ], [ %291, %249 ]
  %296 = icmp eq i64 %245, 0
  br i1 %296, label %307, label %297

297:                                              ; preds = %294, %297
  %298 = phi i64 [ %304, %297 ], [ %295, %294 ]
  %299 = phi i64 [ %305, %297 ], [ %245, %294 ]
  %300 = getelementptr inbounds i64, i64* %5, i64 %298
  %301 = bitcast i64* %300 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %301, align 8
  %302 = getelementptr inbounds i64, i64* %300, i64 2
  %303 = bitcast i64* %302 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %303, align 8
  %304 = add i64 %298, 4
  %305 = add i64 %299, -1
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %307, label %297, !llvm.loop !91

307:                                              ; preds = %297, %294
  %308 = icmp eq i64 %237, %232
  br i1 %308, label %309, label %234

309:                                              ; preds = %335, %307, %227
  %310 = icmp sgt i32 %119, 0
  br i1 %3, label %323, label %311

311:                                              ; preds = %309
  br i1 %310, label %312, label %387

312:                                              ; preds = %311
  %313 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %314 = getelementptr inbounds i32, i32* %99, i64 1
  %315 = load i32, i32* %314, align 4
  %316 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %317 = bitcast [16 x i8]* %316 to i32*
  %318 = load i32, i32* %317, align 8
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %320 = bitcast i8* %319 to i32*
  %321 = load i32, i32* %320, align 4
  %322 = and i64 %118, 4294967295
  br label %363

323:                                              ; preds = %309
  br i1 %310, label %324, label %387

324:                                              ; preds = %323
  %325 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %326 = getelementptr inbounds i32, i32* %99, i64 1
  %327 = load i32, i32* %326, align 4
  %328 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %329 = bitcast [16 x i8]* %328 to i32*
  %330 = load i32, i32* %329, align 8
  %331 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %332 = bitcast i8* %331 to i32*
  %333 = load i32, i32* %332, align 4
  %334 = and i64 %118, 4294967295
  br label %340

335:                                              ; preds = %234, %335
  %336 = phi i64 [ %338, %335 ], [ %235, %234 ]
  %337 = getelementptr inbounds i64, i64* %5, i64 %336
  store i64 %2, i64* %337, align 8
  %338 = add nuw nsw i64 %336, 1
  %339 = icmp eq i64 %338, %232
  br i1 %339, label %309, label %335, !llvm.loop !92

340:                                              ; preds = %340, %324
  %341 = phi i64 [ 0, %324 ], [ %361, %340 ]
  %342 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %325, align 8
  %343 = load i64, i64* %1, align 8
  %344 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %342, i64 %341, i32 0, i32 0
  %345 = load i32*, i32** %344, align 8
  %346 = load i32, i32* %345, align 4
  %347 = getelementptr inbounds i32, i32* %345, i64 1
  %348 = load i32, i32* %347, align 4
  %349 = getelementptr inbounds i32, i32* %345, i64 2
  %350 = load i32, i32* %349, align 4
  %351 = getelementptr inbounds i32, i32* %345, i64 3
  %352 = load i32, i32* %351, align 4
  %353 = mul nsw i32 %327, %346
  %354 = add nsw i32 %353, %348
  %355 = mul nsw i32 %354, %330
  %356 = add nsw i32 %355, %350
  %357 = mul nsw i32 %356, %333
  %358 = add nsw i32 %357, %352
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds i64, i64* %5, i64 %359
  store i64 %343, i64* %360, align 8
  %361 = add nuw nsw i64 %341, 1
  %362 = icmp eq i64 %361, %334
  br i1 %362, label %387, label %340

363:                                              ; preds = %363, %312
  %364 = phi i64 [ 0, %312 ], [ %385, %363 ]
  %365 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %313, align 8
  %366 = getelementptr inbounds i64, i64* %1, i64 %364
  %367 = load i64, i64* %366, align 8
  %368 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %365, i64 %364, i32 0, i32 0
  %369 = load i32*, i32** %368, align 8
  %370 = load i32, i32* %369, align 4
  %371 = getelementptr inbounds i32, i32* %369, i64 1
  %372 = load i32, i32* %371, align 4
  %373 = getelementptr inbounds i32, i32* %369, i64 2
  %374 = load i32, i32* %373, align 4
  %375 = getelementptr inbounds i32, i32* %369, i64 3
  %376 = load i32, i32* %375, align 4
  %377 = mul nsw i32 %315, %370
  %378 = add nsw i32 %377, %372
  %379 = mul nsw i32 %378, %318
  %380 = add nsw i32 %379, %374
  %381 = mul nsw i32 %380, %321
  %382 = add nsw i32 %381, %376
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds i64, i64* %5, i64 %383
  store i64 %367, i64* %384, align 8
  %385 = add nuw nsw i64 %364, 1
  %386 = icmp eq i64 %385, %322
  br i1 %386, label %387, label %363

387:                                              ; preds = %363, %340, %311, %323
  br i1 %121, label %388, label %394

388:                                              ; preds = %387
  %389 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %390 = load i32*, i32** %389, align 8
  %391 = icmp eq i32* %390, null
  br i1 %391, label %394, label %392

392:                                              ; preds = %388
  %393 = bitcast i32* %390 to i8*
  tail call void @_ZdaPv(i8* %393) #13
  br label %394

394:                                              ; preds = %387, %388, %392
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13SparseToDenseIllEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector.14"* dereferenceable(24), i64*, i64, i1 zeroext, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*) local_unnamed_addr #5 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !93
  %11 = load i32, i32* %8, align 8, !noalias !93
  %12 = icmp sgt i32 %11, 4
  br i1 %12, label %13, label %14

13:                                               ; preds = %6
  tail call void @abort() #12, !noalias !93
  unreachable

14:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !93
  %15 = sub i32 4, %11
  %16 = icmp sgt i32 %15, 0
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %16, label %18, label %98

18:                                               ; preds = %14
  %19 = bitcast %union.anon* %17 to [5 x i32]*
  %20 = zext i32 %15 to i64
  %21 = icmp ult i32 %15, 8
  br i1 %21, label %91, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967288
  %24 = add nsw i64 %23, -8
  %25 = lshr exact i64 %24, 3
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 7
  %28 = icmp ult i64 %24, 56
  br i1 %28, label %76, label %29

29:                                               ; preds = %22
  %30 = sub nsw i64 %26, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %73, %31 ]
  %33 = phi i64 [ %30, %29 ], [ %74, %31 ]
  %34 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %32
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !93
  %36 = getelementptr inbounds i32, i32* %34, i64 4
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %37, align 8, !alias.scope !93
  %38 = or i64 %32, 8
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %38
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !93
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !93
  %43 = or i64 %32, 16
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !93
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !93
  %48 = or i64 %32, 24
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !93
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !93
  %53 = or i64 %32, 32
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !93
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !93
  %58 = or i64 %32, 40
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !93
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !93
  %63 = or i64 %32, 48
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !93
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !93
  %68 = or i64 %32, 56
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !93
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !93
  %73 = add i64 %32, 64
  %74 = add i64 %33, -8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %31, !llvm.loop !96

76:                                               ; preds = %31, %22
  %77 = phi i64 [ 0, %22 ], [ %73, %31 ]
  %78 = icmp eq i64 %27, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %76, %79
  %80 = phi i64 [ %86, %79 ], [ %77, %76 ]
  %81 = phi i64 [ %87, %79 ], [ %27, %76 ]
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %80
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !93
  %84 = getelementptr inbounds i32, i32* %82, i64 4
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !93
  %86 = add i64 %80, 8
  %87 = add i64 %81, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %79, !llvm.loop !97

89:                                               ; preds = %79, %76
  %90 = icmp eq i64 %23, %20
  br i1 %90, label %98, label %91

91:                                               ; preds = %89, %18
  %92 = phi i64 [ 0, %18 ], [ %23, %89 ]
  br label %93

93:                                               ; preds = %91, %93
  %94 = phi i64 [ %96, %93 ], [ %92, %91 ]
  %95 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %94
  store i32 1, i32* %95, align 4, !alias.scope !93
  %96 = add nuw nsw i64 %94, 1
  %97 = icmp eq i64 %96, %20
  br i1 %97, label %98, label %93, !llvm.loop !98

98:                                               ; preds = %93, %89, %14
  %99 = bitcast %union.anon* %17 to i32*
  %100 = sext i32 %15 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %11, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !93
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %11 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #10
  %112 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::vector.16"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = sdiv exact i64 %117, 24
  %119 = trunc i64 %118 to i32
  %120 = load i32, i32* %10, align 8
  %121 = icmp sgt i32 %120, 5
  br i1 %121, label %122, label %125

122:                                              ; preds = %98
  %123 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  br label %127

125:                                              ; preds = %98
  %126 = icmp sgt i32 %120, 0
  br i1 %126, label %127, label %230

127:                                              ; preds = %125, %122
  %128 = phi i32* [ %124, %122 ], [ %99, %125 ]
  %129 = zext i32 %120 to i64
  %130 = icmp ult i32 %120, 8
  br i1 %130, label %216, label %131

131:                                              ; preds = %127
  %132 = and i64 %129, 4294967288
  %133 = add nsw i64 %132, -8
  %134 = lshr exact i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 3
  %137 = icmp ult i64 %133, 24
  br i1 %137, label %183, label %138

138:                                              ; preds = %131
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %180, %140 ]
  %142 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %178, %140 ]
  %143 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %179, %140 ]
  %144 = phi i64 [ %139, %138 ], [ %181, %140 ]
  %145 = getelementptr inbounds i32, i32* %128, i64 %141
  %146 = bitcast i32* %145 to <4 x i32>*
  %147 = load <4 x i32>, <4 x i32>* %146, align 4
  %148 = getelementptr inbounds i32, i32* %145, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = mul nsw <4 x i32> %147, %142
  %152 = mul nsw <4 x i32> %150, %143
  %153 = or i64 %141, 8
  %154 = getelementptr inbounds i32, i32* %128, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4
  %157 = getelementptr inbounds i32, i32* %154, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = mul nsw <4 x i32> %156, %151
  %161 = mul nsw <4 x i32> %159, %152
  %162 = or i64 %141, 16
  %163 = getelementptr inbounds i32, i32* %128, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4
  %166 = getelementptr inbounds i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = mul nsw <4 x i32> %165, %160
  %170 = mul nsw <4 x i32> %168, %161
  %171 = or i64 %141, 24
  %172 = getelementptr inbounds i32, i32* %128, i64 %171
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4
  %175 = getelementptr inbounds i32, i32* %172, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = mul nsw <4 x i32> %174, %169
  %179 = mul nsw <4 x i32> %177, %170
  %180 = add i64 %141, 32
  %181 = add i64 %144, -4
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %140, !llvm.loop !99

183:                                              ; preds = %140, %131
  %184 = phi <4 x i32> [ undef, %131 ], [ %178, %140 ]
  %185 = phi <4 x i32> [ undef, %131 ], [ %179, %140 ]
  %186 = phi i64 [ 0, %131 ], [ %180, %140 ]
  %187 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %178, %140 ]
  %188 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %179, %140 ]
  %189 = icmp eq i64 %136, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %183, %190
  %191 = phi i64 [ %203, %190 ], [ %186, %183 ]
  %192 = phi <4 x i32> [ %201, %190 ], [ %187, %183 ]
  %193 = phi <4 x i32> [ %202, %190 ], [ %188, %183 ]
  %194 = phi i64 [ %204, %190 ], [ %136, %183 ]
  %195 = getelementptr inbounds i32, i32* %128, i64 %191
  %196 = bitcast i32* %195 to <4 x i32>*
  %197 = load <4 x i32>, <4 x i32>* %196, align 4
  %198 = getelementptr inbounds i32, i32* %195, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  %200 = load <4 x i32>, <4 x i32>* %199, align 4
  %201 = mul nsw <4 x i32> %197, %192
  %202 = mul nsw <4 x i32> %200, %193
  %203 = add i64 %191, 8
  %204 = add i64 %194, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %190, !llvm.loop !100

206:                                              ; preds = %190, %183
  %207 = phi <4 x i32> [ %184, %183 ], [ %201, %190 ]
  %208 = phi <4 x i32> [ %185, %183 ], [ %202, %190 ]
  %209 = mul <4 x i32> %208, %207
  %210 = shufflevector <4 x i32> %209, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %211 = mul <4 x i32> %209, %210
  %212 = shufflevector <4 x i32> %211, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %213 = mul <4 x i32> %211, %212
  %214 = extractelement <4 x i32> %213, i32 0
  %215 = icmp eq i64 %132, %129
  br i1 %215, label %227, label %216

216:                                              ; preds = %206, %127
  %217 = phi i64 [ 0, %127 ], [ %132, %206 ]
  %218 = phi i32 [ 1, %127 ], [ %214, %206 ]
  br label %219

219:                                              ; preds = %216, %219
  %220 = phi i64 [ %225, %219 ], [ %217, %216 ]
  %221 = phi i32 [ %224, %219 ], [ %218, %216 ]
  %222 = getelementptr inbounds i32, i32* %128, i64 %220
  %223 = load i32, i32* %222, align 4
  %224 = mul nsw i32 %223, %221
  %225 = add nuw nsw i64 %220, 1
  %226 = icmp eq i64 %225, %129
  br i1 %226, label %227, label %219, !llvm.loop !101

227:                                              ; preds = %219, %206
  %228 = phi i32 [ %214, %206 ], [ %224, %219 ]
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %309

230:                                              ; preds = %125, %227
  %231 = phi i32 [ %228, %227 ], [ 1, %125 ]
  %232 = zext i32 %231 to i64
  %233 = icmp ult i32 %231, 4
  br i1 %233, label %234, label %236

234:                                              ; preds = %307, %230
  %235 = phi i64 [ 0, %230 ], [ %237, %307 ]
  br label %335

236:                                              ; preds = %230
  %237 = and i64 %232, 4294967292
  %238 = insertelement <2 x i64> undef, i64 %2, i32 0
  %239 = shufflevector <2 x i64> %238, <2 x i64> undef, <2 x i32> zeroinitializer
  %240 = insertelement <2 x i64> undef, i64 %2, i32 0
  %241 = shufflevector <2 x i64> %240, <2 x i64> undef, <2 x i32> zeroinitializer
  %242 = add nsw i64 %237, -4
  %243 = lshr exact i64 %242, 2
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 7
  %246 = icmp ult i64 %242, 28
  br i1 %246, label %294, label %247

247:                                              ; preds = %236
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %291, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %292, %249 ]
  %252 = getelementptr inbounds i64, i64* %5, i64 %250
  %253 = bitcast i64* %252 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %253, align 8
  %254 = getelementptr inbounds i64, i64* %252, i64 2
  %255 = bitcast i64* %254 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %255, align 8
  %256 = or i64 %250, 4
  %257 = getelementptr inbounds i64, i64* %5, i64 %256
  %258 = bitcast i64* %257 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %258, align 8
  %259 = getelementptr inbounds i64, i64* %257, i64 2
  %260 = bitcast i64* %259 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %260, align 8
  %261 = or i64 %250, 8
  %262 = getelementptr inbounds i64, i64* %5, i64 %261
  %263 = bitcast i64* %262 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %263, align 8
  %264 = getelementptr inbounds i64, i64* %262, i64 2
  %265 = bitcast i64* %264 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %265, align 8
  %266 = or i64 %250, 12
  %267 = getelementptr inbounds i64, i64* %5, i64 %266
  %268 = bitcast i64* %267 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %268, align 8
  %269 = getelementptr inbounds i64, i64* %267, i64 2
  %270 = bitcast i64* %269 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %270, align 8
  %271 = or i64 %250, 16
  %272 = getelementptr inbounds i64, i64* %5, i64 %271
  %273 = bitcast i64* %272 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %273, align 8
  %274 = getelementptr inbounds i64, i64* %272, i64 2
  %275 = bitcast i64* %274 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %275, align 8
  %276 = or i64 %250, 20
  %277 = getelementptr inbounds i64, i64* %5, i64 %276
  %278 = bitcast i64* %277 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %278, align 8
  %279 = getelementptr inbounds i64, i64* %277, i64 2
  %280 = bitcast i64* %279 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %280, align 8
  %281 = or i64 %250, 24
  %282 = getelementptr inbounds i64, i64* %5, i64 %281
  %283 = bitcast i64* %282 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %283, align 8
  %284 = getelementptr inbounds i64, i64* %282, i64 2
  %285 = bitcast i64* %284 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %285, align 8
  %286 = or i64 %250, 28
  %287 = getelementptr inbounds i64, i64* %5, i64 %286
  %288 = bitcast i64* %287 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %288, align 8
  %289 = getelementptr inbounds i64, i64* %287, i64 2
  %290 = bitcast i64* %289 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %290, align 8
  %291 = add i64 %250, 32
  %292 = add i64 %251, -8
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %249, !llvm.loop !102

294:                                              ; preds = %249, %236
  %295 = phi i64 [ 0, %236 ], [ %291, %249 ]
  %296 = icmp eq i64 %245, 0
  br i1 %296, label %307, label %297

297:                                              ; preds = %294, %297
  %298 = phi i64 [ %304, %297 ], [ %295, %294 ]
  %299 = phi i64 [ %305, %297 ], [ %245, %294 ]
  %300 = getelementptr inbounds i64, i64* %5, i64 %298
  %301 = bitcast i64* %300 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %301, align 8
  %302 = getelementptr inbounds i64, i64* %300, i64 2
  %303 = bitcast i64* %302 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %303, align 8
  %304 = add i64 %298, 4
  %305 = add i64 %299, -1
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %307, label %297, !llvm.loop !103

307:                                              ; preds = %297, %294
  %308 = icmp eq i64 %237, %232
  br i1 %308, label %309, label %234

309:                                              ; preds = %335, %307, %227
  %310 = icmp sgt i32 %119, 0
  br i1 %3, label %323, label %311

311:                                              ; preds = %309
  br i1 %310, label %312, label %395

312:                                              ; preds = %311
  %313 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %314 = getelementptr inbounds i32, i32* %99, i64 1
  %315 = load i32, i32* %314, align 4
  %316 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %317 = bitcast [16 x i8]* %316 to i32*
  %318 = load i32, i32* %317, align 8
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %320 = bitcast i8* %319 to i32*
  %321 = load i32, i32* %320, align 4
  %322 = and i64 %118, 4294967295
  br label %367

323:                                              ; preds = %309
  br i1 %310, label %324, label %395

324:                                              ; preds = %323
  %325 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %326 = getelementptr inbounds i32, i32* %99, i64 1
  %327 = load i32, i32* %326, align 4
  %328 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %329 = bitcast [16 x i8]* %328 to i32*
  %330 = load i32, i32* %329, align 8
  %331 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %332 = bitcast i8* %331 to i32*
  %333 = load i32, i32* %332, align 4
  %334 = and i64 %118, 4294967295
  br label %340

335:                                              ; preds = %234, %335
  %336 = phi i64 [ %338, %335 ], [ %235, %234 ]
  %337 = getelementptr inbounds i64, i64* %5, i64 %336
  store i64 %2, i64* %337, align 8
  %338 = add nuw nsw i64 %336, 1
  %339 = icmp eq i64 %338, %232
  br i1 %339, label %309, label %335, !llvm.loop !104

340:                                              ; preds = %340, %324
  %341 = phi i64 [ 0, %324 ], [ %365, %340 ]
  %342 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %325, align 8
  %343 = load i64, i64* %1, align 8
  %344 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %342, i64 %341, i32 0, i32 0
  %345 = load i64*, i64** %344, align 8
  %346 = load i64, i64* %345, align 8
  %347 = trunc i64 %346 to i32
  %348 = getelementptr inbounds i64, i64* %345, i64 1
  %349 = load i64, i64* %348, align 8
  %350 = trunc i64 %349 to i32
  %351 = getelementptr inbounds i64, i64* %345, i64 2
  %352 = load i64, i64* %351, align 8
  %353 = trunc i64 %352 to i32
  %354 = getelementptr inbounds i64, i64* %345, i64 3
  %355 = load i64, i64* %354, align 8
  %356 = trunc i64 %355 to i32
  %357 = mul nsw i32 %327, %347
  %358 = add nsw i32 %357, %350
  %359 = mul nsw i32 %358, %330
  %360 = add nsw i32 %359, %353
  %361 = mul nsw i32 %360, %333
  %362 = add nsw i32 %361, %356
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds i64, i64* %5, i64 %363
  store i64 %343, i64* %364, align 8
  %365 = add nuw nsw i64 %341, 1
  %366 = icmp eq i64 %365, %334
  br i1 %366, label %395, label %340

367:                                              ; preds = %367, %312
  %368 = phi i64 [ 0, %312 ], [ %393, %367 ]
  %369 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %313, align 8
  %370 = getelementptr inbounds i64, i64* %1, i64 %368
  %371 = load i64, i64* %370, align 8
  %372 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %369, i64 %368, i32 0, i32 0
  %373 = load i64*, i64** %372, align 8
  %374 = load i64, i64* %373, align 8
  %375 = trunc i64 %374 to i32
  %376 = getelementptr inbounds i64, i64* %373, i64 1
  %377 = load i64, i64* %376, align 8
  %378 = trunc i64 %377 to i32
  %379 = getelementptr inbounds i64, i64* %373, i64 2
  %380 = load i64, i64* %379, align 8
  %381 = trunc i64 %380 to i32
  %382 = getelementptr inbounds i64, i64* %373, i64 3
  %383 = load i64, i64* %382, align 8
  %384 = trunc i64 %383 to i32
  %385 = mul nsw i32 %315, %375
  %386 = add nsw i32 %385, %378
  %387 = mul nsw i32 %386, %318
  %388 = add nsw i32 %387, %381
  %389 = mul nsw i32 %388, %321
  %390 = add nsw i32 %389, %384
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds i64, i64* %5, i64 %391
  store i64 %371, i64* %392, align 8
  %393 = add nuw nsw i64 %368, 1
  %394 = icmp eq i64 %393, %322
  br i1 %394, label %395, label %367

395:                                              ; preds = %367, %340, %311, %323
  br i1 %121, label %396, label %402

396:                                              ; preds = %395
  %397 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %398 = load i32*, i32** %397, align 8
  %399 = icmp eq i32* %398, null
  br i1 %399, label %402, label %400

400:                                              ; preds = %396
  %401 = bitcast i32* %398 to i8*
  tail call void @_ZdaPv(i8* %401) #13
  br label %402

402:                                              ; preds = %395, %396, %400
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIaiEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %12 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 %13
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi %struct.TfLiteTensor* [ %14, %10 ], [ null, %2 ]
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %15, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %15 ]
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %25, %30
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %25 ]
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %35, %40
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %35 ]
  %47 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %54 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %53, align 8
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 %55
  br label %57

57:                                               ; preds = %45, %52
  %58 = phi %struct.TfLiteTensor* [ %56, %52 ], [ null, %45 ]
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 4
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %26, %struct.TfLiteTensor* %58)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %167

65:                                               ; preds = %62, %57
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 2
  %67 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %66, align 8
  %68 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %67, i64 0, i32 1, i64 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 2
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  %75 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false) #10
  %78 = sext i32 %69 to i64
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE7reserveEm(%"class.std::__1::vector"* nonnull %3, i64 %78)
  %79 = call i32 @_ZN6tflite3ops7builtin15sparse_to_dense16GetIndicesVectorIiEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensoriPNSt3__16vectorINSB_IT_NSA_9allocatorISC_EEEENSD_ISF_EEEE(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %16, i32 %69, %"class.std::__1::vector"* nonnull %3)
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %141

81:                                               ; preds = %65
  %82 = icmp eq %struct.TfLiteTensor* %36, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1
  %85 = bitcast %union.TfLitePtrUnion* %84 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %81, %83
  %88 = phi i8* [ %86, %83 ], [ null, %81 ]
  %89 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %92 = bitcast %union.TfLitePtrUnion* %91 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %87, %90
  %95 = phi i8* [ %93, %90 ], [ null, %87 ]
  %96 = load i8, i8* %95, align 1
  %97 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #10
  %98 = icmp eq %struct.TfLiteTensor* %58, null
  br i1 %98, label %99, label %101

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %100, align 8, !alias.scope !105
  br label %129

101:                                              ; preds = %94
  %102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 2
  %103 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %102, align 8, !noalias !105
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4, !noalias !105
  %106 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 1, i64 0
  %107 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %105, i32* %107, align 8, !alias.scope !105
  %108 = icmp sgt i32 %105, 5
  br i1 %108, label %109, label %116

109:                                              ; preds = %101
  %110 = sext i32 %105 to i64
  %111 = shl nsw i64 %110, 2
  %112 = call i8* @_Znam(i64 %111) #13, !noalias !105
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %114 = bitcast i32** %113 to i8**
  store i8* %112, i8** %114, align 8, !alias.scope !105
  %115 = bitcast i8* %112 to i32*
  br label %121

116:                                              ; preds = %101
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %118 = bitcast %union.anon* %117 to i32*
  %119 = sext i32 %105 to i64
  %120 = shl nsw i64 %119, 2
  br label %121

121:                                              ; preds = %116, %109
  %122 = phi i64 [ %111, %109 ], [ %120, %116 ]
  %123 = phi i32* [ %115, %109 ], [ %118, %116 ]
  %124 = bitcast i32* %123 to i8*
  %125 = bitcast i32* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 %122, i1 false) #10
  %126 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 1
  %127 = bitcast %union.TfLitePtrUnion* %126 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %99, %121
  %130 = phi i8* [ %128, %121 ], [ null, %99 ]
  call void @_ZN6tflite13reference_ops13SparseToDenseIaiEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector"* nonnull dereferenceable(24) %3, i8* %88, i8 signext %96, i1 zeroext %74, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i8* %130)
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = icmp sgt i32 %132, 5
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast i32* %136 to i8*
  call void @_ZdaPv(i8* %139) #13
  br label %140

140:                                              ; preds = %129, %134, %138
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #10
  br label %141

141:                                              ; preds = %65, %140
  %142 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %76, align 8
  %143 = icmp eq %"class.std::__1::vector.1"* %142, null
  br i1 %143, label %166, label %144

144:                                              ; preds = %141
  %145 = bitcast %"class.std::__1::vector.1"* %142 to i8*
  %146 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %77, align 8
  %147 = icmp eq %"class.std::__1::vector.1"* %146, %142
  br i1 %147, label %164, label %148

148:                                              ; preds = %144, %159
  %149 = phi %"class.std::__1::vector.1"* [ %150, %159 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %149, i64 -1
  %151 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %150, i64 0, i32 0, i32 0
  %152 = load i32*, i32** %151, align 8
  %153 = icmp eq i32* %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %148
  %155 = ptrtoint i32* %152 to i64
  %156 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %149, i64 -1, i32 0, i32 1
  %157 = bitcast i32** %156 to i64*
  store i64 %155, i64* %157, align 8
  %158 = bitcast i32* %152 to i8*
  call void @_ZdlPv(i8* %158) #13
  br label %159

159:                                              ; preds = %154, %148
  %160 = icmp eq %"class.std::__1::vector.1"* %150, %142
  br i1 %160, label %161, label %148

161:                                              ; preds = %159
  %162 = bitcast %"class.std::__1::vector"* %3 to i8**
  %163 = load i8*, i8** %162, align 8
  br label %164

164:                                              ; preds = %161, %144
  %165 = phi i8* [ %163, %161 ], [ %145, %144 ]
  store %"class.std::__1::vector.1"* %142, %"class.std::__1::vector.1"** %77, align 8
  call void @_ZdlPv(i8* %165) #13
  br label %166

166:                                              ; preds = %141, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #10
  br label %167

167:                                              ; preds = %62, %166
  %168 = phi i32 [ %79, %166 ], [ %63, %62 ]
  ret i32 %168
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIalEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.std::__1::vector.14", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %12 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 %13
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi %struct.TfLiteTensor* [ %14, %10 ], [ null, %2 ]
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %15, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %15 ]
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %25, %30
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %25 ]
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %35, %40
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %35 ]
  %47 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %54 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %53, align 8
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 %55
  br label %57

57:                                               ; preds = %45, %52
  %58 = phi %struct.TfLiteTensor* [ %56, %52 ], [ null, %45 ]
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 4
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %26, %struct.TfLiteTensor* %58)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %167

65:                                               ; preds = %62, %57
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 2
  %67 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %66, align 8
  %68 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %67, i64 0, i32 1, i64 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 2
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  %75 = bitcast %"class.std::__1::vector.14"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false) #10
  %78 = sext i32 %69 to i64
  call void @_ZNSt3__16vectorINS0_IlNS_9allocatorIlEEEENS1_IS3_EEE7reserveEm(%"class.std::__1::vector.14"* nonnull %3, i64 %78)
  %79 = call i32 @_ZN6tflite3ops7builtin15sparse_to_dense16GetIndicesVectorIlEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensoriPNSt3__16vectorINSB_IT_NSA_9allocatorISC_EEEENSD_ISF_EEEE(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %16, i32 %69, %"class.std::__1::vector.14"* nonnull %3)
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %141

81:                                               ; preds = %65
  %82 = icmp eq %struct.TfLiteTensor* %36, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1
  %85 = bitcast %union.TfLitePtrUnion* %84 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %81, %83
  %88 = phi i8* [ %86, %83 ], [ null, %81 ]
  %89 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %92 = bitcast %union.TfLitePtrUnion* %91 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %87, %90
  %95 = phi i8* [ %93, %90 ], [ null, %87 ]
  %96 = load i8, i8* %95, align 1
  %97 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #10
  %98 = icmp eq %struct.TfLiteTensor* %58, null
  br i1 %98, label %99, label %101

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %100, align 8, !alias.scope !108
  br label %129

101:                                              ; preds = %94
  %102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 2
  %103 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %102, align 8, !noalias !108
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4, !noalias !108
  %106 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 1, i64 0
  %107 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %105, i32* %107, align 8, !alias.scope !108
  %108 = icmp sgt i32 %105, 5
  br i1 %108, label %109, label %116

109:                                              ; preds = %101
  %110 = sext i32 %105 to i64
  %111 = shl nsw i64 %110, 2
  %112 = call i8* @_Znam(i64 %111) #13, !noalias !108
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %114 = bitcast i32** %113 to i8**
  store i8* %112, i8** %114, align 8, !alias.scope !108
  %115 = bitcast i8* %112 to i32*
  br label %121

116:                                              ; preds = %101
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %118 = bitcast %union.anon* %117 to i32*
  %119 = sext i32 %105 to i64
  %120 = shl nsw i64 %119, 2
  br label %121

121:                                              ; preds = %116, %109
  %122 = phi i64 [ %111, %109 ], [ %120, %116 ]
  %123 = phi i32* [ %115, %109 ], [ %118, %116 ]
  %124 = bitcast i32* %123 to i8*
  %125 = bitcast i32* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 %122, i1 false) #10
  %126 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 1
  %127 = bitcast %union.TfLitePtrUnion* %126 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %99, %121
  %130 = phi i8* [ %128, %121 ], [ null, %99 ]
  call void @_ZN6tflite13reference_ops13SparseToDenseIalEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector.14"* nonnull dereferenceable(24) %3, i8* %88, i8 signext %96, i1 zeroext %74, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i8* %130)
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = icmp sgt i32 %132, 5
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast i32* %136 to i8*
  call void @_ZdaPv(i8* %139) #13
  br label %140

140:                                              ; preds = %129, %134, %138
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #10
  br label %141

141:                                              ; preds = %65, %140
  %142 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %76, align 8
  %143 = icmp eq %"class.std::__1::vector.16"* %142, null
  br i1 %143, label %166, label %144

144:                                              ; preds = %141
  %145 = bitcast %"class.std::__1::vector.16"* %142 to i8*
  %146 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %77, align 8
  %147 = icmp eq %"class.std::__1::vector.16"* %146, %142
  br i1 %147, label %164, label %148

148:                                              ; preds = %144, %159
  %149 = phi %"class.std::__1::vector.16"* [ %150, %159 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %149, i64 -1
  %151 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %150, i64 0, i32 0, i32 0
  %152 = load i64*, i64** %151, align 8
  %153 = icmp eq i64* %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %148
  %155 = ptrtoint i64* %152 to i64
  %156 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %149, i64 -1, i32 0, i32 1
  %157 = bitcast i64** %156 to i64*
  store i64 %155, i64* %157, align 8
  %158 = bitcast i64* %152 to i8*
  call void @_ZdlPv(i8* %158) #13
  br label %159

159:                                              ; preds = %154, %148
  %160 = icmp eq %"class.std::__1::vector.16"* %150, %142
  br i1 %160, label %161, label %148

161:                                              ; preds = %159
  %162 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %163 = load i8*, i8** %162, align 8
  br label %164

164:                                              ; preds = %161, %144
  %165 = phi i8* [ %163, %161 ], [ %145, %144 ]
  store %"class.std::__1::vector.16"* %142, %"class.std::__1::vector.16"** %77, align 8
  call void @_ZdlPv(i8* %165) #13
  br label %166

166:                                              ; preds = %141, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #10
  br label %167

167:                                              ; preds = %62, %166
  %168 = phi i32 [ %79, %166 ], [ %63, %62 ]
  ret i32 %168
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13SparseToDenseIaiEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector"* dereferenceable(24), i8*, i8 signext, i1 zeroext, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #5 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !111
  %11 = load i32, i32* %8, align 8, !noalias !111
  %12 = icmp sgt i32 %11, 4
  br i1 %12, label %13, label %14

13:                                               ; preds = %6
  tail call void @abort() #12, !noalias !111
  unreachable

14:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !111
  %15 = sub i32 4, %11
  %16 = icmp sgt i32 %15, 0
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %16, label %18, label %98

18:                                               ; preds = %14
  %19 = bitcast %union.anon* %17 to [5 x i32]*
  %20 = zext i32 %15 to i64
  %21 = icmp ult i32 %15, 8
  br i1 %21, label %91, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967288
  %24 = add nsw i64 %23, -8
  %25 = lshr exact i64 %24, 3
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 7
  %28 = icmp ult i64 %24, 56
  br i1 %28, label %76, label %29

29:                                               ; preds = %22
  %30 = sub nsw i64 %26, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %73, %31 ]
  %33 = phi i64 [ %30, %29 ], [ %74, %31 ]
  %34 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %32
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !111
  %36 = getelementptr inbounds i32, i32* %34, i64 4
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %37, align 8, !alias.scope !111
  %38 = or i64 %32, 8
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %38
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !111
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !111
  %43 = or i64 %32, 16
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !111
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !111
  %48 = or i64 %32, 24
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !111
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !111
  %53 = or i64 %32, 32
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !111
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !111
  %58 = or i64 %32, 40
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !111
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !111
  %63 = or i64 %32, 48
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !111
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !111
  %68 = or i64 %32, 56
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !111
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !111
  %73 = add i64 %32, 64
  %74 = add i64 %33, -8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %31, !llvm.loop !114

76:                                               ; preds = %31, %22
  %77 = phi i64 [ 0, %22 ], [ %73, %31 ]
  %78 = icmp eq i64 %27, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %76, %79
  %80 = phi i64 [ %86, %79 ], [ %77, %76 ]
  %81 = phi i64 [ %87, %79 ], [ %27, %76 ]
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %80
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !111
  %84 = getelementptr inbounds i32, i32* %82, i64 4
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !111
  %86 = add i64 %80, 8
  %87 = add i64 %81, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %79, !llvm.loop !115

89:                                               ; preds = %79, %76
  %90 = icmp eq i64 %23, %20
  br i1 %90, label %98, label %91

91:                                               ; preds = %89, %18
  %92 = phi i64 [ 0, %18 ], [ %23, %89 ]
  br label %93

93:                                               ; preds = %91, %93
  %94 = phi i64 [ %96, %93 ], [ %92, %91 ]
  %95 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %94
  store i32 1, i32* %95, align 4, !alias.scope !111
  %96 = add nuw nsw i64 %94, 1
  %97 = icmp eq i64 %96, %20
  br i1 %97, label %98, label %93, !llvm.loop !116

98:                                               ; preds = %93, %89, %14
  %99 = bitcast %union.anon* %17 to i32*
  %100 = sext i32 %15 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %11, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !111
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %11 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #10
  %112 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::vector.1"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector"* %0 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = sdiv exact i64 %117, 24
  %119 = trunc i64 %118 to i32
  %120 = load i32, i32* %10, align 8
  %121 = icmp sgt i32 %120, 5
  br i1 %121, label %122, label %125

122:                                              ; preds = %98
  %123 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  br label %127

125:                                              ; preds = %98
  %126 = icmp sgt i32 %120, 0
  br i1 %126, label %127, label %230

127:                                              ; preds = %125, %122
  %128 = phi i32* [ %124, %122 ], [ %99, %125 ]
  %129 = zext i32 %120 to i64
  %130 = icmp ult i32 %120, 8
  br i1 %130, label %216, label %131

131:                                              ; preds = %127
  %132 = and i64 %129, 4294967288
  %133 = add nsw i64 %132, -8
  %134 = lshr exact i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 3
  %137 = icmp ult i64 %133, 24
  br i1 %137, label %183, label %138

138:                                              ; preds = %131
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %180, %140 ]
  %142 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %178, %140 ]
  %143 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %179, %140 ]
  %144 = phi i64 [ %139, %138 ], [ %181, %140 ]
  %145 = getelementptr inbounds i32, i32* %128, i64 %141
  %146 = bitcast i32* %145 to <4 x i32>*
  %147 = load <4 x i32>, <4 x i32>* %146, align 4
  %148 = getelementptr inbounds i32, i32* %145, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = mul nsw <4 x i32> %147, %142
  %152 = mul nsw <4 x i32> %150, %143
  %153 = or i64 %141, 8
  %154 = getelementptr inbounds i32, i32* %128, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4
  %157 = getelementptr inbounds i32, i32* %154, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = mul nsw <4 x i32> %156, %151
  %161 = mul nsw <4 x i32> %159, %152
  %162 = or i64 %141, 16
  %163 = getelementptr inbounds i32, i32* %128, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4
  %166 = getelementptr inbounds i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = mul nsw <4 x i32> %165, %160
  %170 = mul nsw <4 x i32> %168, %161
  %171 = or i64 %141, 24
  %172 = getelementptr inbounds i32, i32* %128, i64 %171
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4
  %175 = getelementptr inbounds i32, i32* %172, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = mul nsw <4 x i32> %174, %169
  %179 = mul nsw <4 x i32> %177, %170
  %180 = add i64 %141, 32
  %181 = add i64 %144, -4
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %140, !llvm.loop !117

183:                                              ; preds = %140, %131
  %184 = phi <4 x i32> [ undef, %131 ], [ %178, %140 ]
  %185 = phi <4 x i32> [ undef, %131 ], [ %179, %140 ]
  %186 = phi i64 [ 0, %131 ], [ %180, %140 ]
  %187 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %178, %140 ]
  %188 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %179, %140 ]
  %189 = icmp eq i64 %136, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %183, %190
  %191 = phi i64 [ %203, %190 ], [ %186, %183 ]
  %192 = phi <4 x i32> [ %201, %190 ], [ %187, %183 ]
  %193 = phi <4 x i32> [ %202, %190 ], [ %188, %183 ]
  %194 = phi i64 [ %204, %190 ], [ %136, %183 ]
  %195 = getelementptr inbounds i32, i32* %128, i64 %191
  %196 = bitcast i32* %195 to <4 x i32>*
  %197 = load <4 x i32>, <4 x i32>* %196, align 4
  %198 = getelementptr inbounds i32, i32* %195, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  %200 = load <4 x i32>, <4 x i32>* %199, align 4
  %201 = mul nsw <4 x i32> %197, %192
  %202 = mul nsw <4 x i32> %200, %193
  %203 = add i64 %191, 8
  %204 = add i64 %194, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %190, !llvm.loop !118

206:                                              ; preds = %190, %183
  %207 = phi <4 x i32> [ %184, %183 ], [ %201, %190 ]
  %208 = phi <4 x i32> [ %185, %183 ], [ %202, %190 ]
  %209 = mul <4 x i32> %208, %207
  %210 = shufflevector <4 x i32> %209, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %211 = mul <4 x i32> %209, %210
  %212 = shufflevector <4 x i32> %211, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %213 = mul <4 x i32> %211, %212
  %214 = extractelement <4 x i32> %213, i32 0
  %215 = icmp eq i64 %132, %129
  br i1 %215, label %227, label %216

216:                                              ; preds = %206, %127
  %217 = phi i64 [ 0, %127 ], [ %132, %206 ]
  %218 = phi i32 [ 1, %127 ], [ %214, %206 ]
  br label %219

219:                                              ; preds = %216, %219
  %220 = phi i64 [ %225, %219 ], [ %217, %216 ]
  %221 = phi i32 [ %224, %219 ], [ %218, %216 ]
  %222 = getelementptr inbounds i32, i32* %128, i64 %220
  %223 = load i32, i32* %222, align 4
  %224 = mul nsw i32 %223, %221
  %225 = add nuw nsw i64 %220, 1
  %226 = icmp eq i64 %225, %129
  br i1 %226, label %227, label %219, !llvm.loop !119

227:                                              ; preds = %219, %206
  %228 = phi i32 [ %214, %206 ], [ %224, %219 ]
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %233

230:                                              ; preds = %125, %227
  %231 = phi i32 [ %228, %227 ], [ 1, %125 ]
  %232 = zext i32 %231 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 %2, i64 %232, i1 false)
  br label %233

233:                                              ; preds = %230, %227
  %234 = icmp sgt i32 %119, 0
  br i1 %3, label %247, label %235

235:                                              ; preds = %233
  br i1 %234, label %236, label %306

236:                                              ; preds = %235
  %237 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %238 = getelementptr inbounds i32, i32* %99, i64 1
  %239 = load i32, i32* %238, align 4
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %241 = bitcast [16 x i8]* %240 to i32*
  %242 = load i32, i32* %241, align 8
  %243 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %244 = bitcast i8* %243 to i32*
  %245 = load i32, i32* %244, align 4
  %246 = and i64 %118, 4294967295
  br label %282

247:                                              ; preds = %233
  br i1 %234, label %248, label %306

248:                                              ; preds = %247
  %249 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %250 = getelementptr inbounds i32, i32* %99, i64 1
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %253 = bitcast [16 x i8]* %252 to i32*
  %254 = load i32, i32* %253, align 8
  %255 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %256 = bitcast i8* %255 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = and i64 %118, 4294967295
  br label %259

259:                                              ; preds = %259, %248
  %260 = phi i64 [ 0, %248 ], [ %280, %259 ]
  %261 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %249, align 8
  %262 = load i8, i8* %1, align 1
  %263 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %261, i64 %260, i32 0, i32 0
  %264 = load i32*, i32** %263, align 8
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %264, i64 1
  %267 = load i32, i32* %266, align 4
  %268 = getelementptr inbounds i32, i32* %264, i64 2
  %269 = load i32, i32* %268, align 4
  %270 = getelementptr inbounds i32, i32* %264, i64 3
  %271 = load i32, i32* %270, align 4
  %272 = mul nsw i32 %251, %265
  %273 = add nsw i32 %272, %267
  %274 = mul nsw i32 %273, %254
  %275 = add nsw i32 %274, %269
  %276 = mul nsw i32 %275, %257
  %277 = add nsw i32 %276, %271
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds i8, i8* %5, i64 %278
  store i8 %262, i8* %279, align 1
  %280 = add nuw nsw i64 %260, 1
  %281 = icmp eq i64 %280, %258
  br i1 %281, label %306, label %259

282:                                              ; preds = %282, %236
  %283 = phi i64 [ 0, %236 ], [ %304, %282 ]
  %284 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %237, align 8
  %285 = getelementptr inbounds i8, i8* %1, i64 %283
  %286 = load i8, i8* %285, align 1
  %287 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %284, i64 %283, i32 0, i32 0
  %288 = load i32*, i32** %287, align 8
  %289 = load i32, i32* %288, align 4
  %290 = getelementptr inbounds i32, i32* %288, i64 1
  %291 = load i32, i32* %290, align 4
  %292 = getelementptr inbounds i32, i32* %288, i64 2
  %293 = load i32, i32* %292, align 4
  %294 = getelementptr inbounds i32, i32* %288, i64 3
  %295 = load i32, i32* %294, align 4
  %296 = mul nsw i32 %239, %289
  %297 = add nsw i32 %296, %291
  %298 = mul nsw i32 %297, %242
  %299 = add nsw i32 %298, %293
  %300 = mul nsw i32 %299, %245
  %301 = add nsw i32 %300, %295
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds i8, i8* %5, i64 %302
  store i8 %286, i8* %303, align 1
  %304 = add nuw nsw i64 %283, 1
  %305 = icmp eq i64 %304, %246
  br i1 %305, label %306, label %282

306:                                              ; preds = %282, %259, %235, %247
  br i1 %121, label %307, label %313

307:                                              ; preds = %306
  %308 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %309 = load i32*, i32** %308, align 8
  %310 = icmp eq i32* %309, null
  br i1 %310, label %313, label %311

311:                                              ; preds = %307
  %312 = bitcast i32* %309 to i8*
  tail call void @_ZdaPv(i8* %312) #13
  br label %313

313:                                              ; preds = %306, %307, %311
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13SparseToDenseIalEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector.14"* dereferenceable(24), i8*, i8 signext, i1 zeroext, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #5 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !120
  %11 = load i32, i32* %8, align 8, !noalias !120
  %12 = icmp sgt i32 %11, 4
  br i1 %12, label %13, label %14

13:                                               ; preds = %6
  tail call void @abort() #12, !noalias !120
  unreachable

14:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !120
  %15 = sub i32 4, %11
  %16 = icmp sgt i32 %15, 0
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %16, label %18, label %98

18:                                               ; preds = %14
  %19 = bitcast %union.anon* %17 to [5 x i32]*
  %20 = zext i32 %15 to i64
  %21 = icmp ult i32 %15, 8
  br i1 %21, label %91, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967288
  %24 = add nsw i64 %23, -8
  %25 = lshr exact i64 %24, 3
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 7
  %28 = icmp ult i64 %24, 56
  br i1 %28, label %76, label %29

29:                                               ; preds = %22
  %30 = sub nsw i64 %26, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %73, %31 ]
  %33 = phi i64 [ %30, %29 ], [ %74, %31 ]
  %34 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %32
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !120
  %36 = getelementptr inbounds i32, i32* %34, i64 4
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %37, align 8, !alias.scope !120
  %38 = or i64 %32, 8
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %38
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !120
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !120
  %43 = or i64 %32, 16
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !120
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !120
  %48 = or i64 %32, 24
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !120
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !120
  %53 = or i64 %32, 32
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !120
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !120
  %58 = or i64 %32, 40
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !120
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !120
  %63 = or i64 %32, 48
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !120
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !120
  %68 = or i64 %32, 56
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !120
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !120
  %73 = add i64 %32, 64
  %74 = add i64 %33, -8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %31, !llvm.loop !123

76:                                               ; preds = %31, %22
  %77 = phi i64 [ 0, %22 ], [ %73, %31 ]
  %78 = icmp eq i64 %27, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %76, %79
  %80 = phi i64 [ %86, %79 ], [ %77, %76 ]
  %81 = phi i64 [ %87, %79 ], [ %27, %76 ]
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %80
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !120
  %84 = getelementptr inbounds i32, i32* %82, i64 4
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !120
  %86 = add i64 %80, 8
  %87 = add i64 %81, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %79, !llvm.loop !124

89:                                               ; preds = %79, %76
  %90 = icmp eq i64 %23, %20
  br i1 %90, label %98, label %91

91:                                               ; preds = %89, %18
  %92 = phi i64 [ 0, %18 ], [ %23, %89 ]
  br label %93

93:                                               ; preds = %91, %93
  %94 = phi i64 [ %96, %93 ], [ %92, %91 ]
  %95 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %94
  store i32 1, i32* %95, align 4, !alias.scope !120
  %96 = add nuw nsw i64 %94, 1
  %97 = icmp eq i64 %96, %20
  br i1 %97, label %98, label %93, !llvm.loop !125

98:                                               ; preds = %93, %89, %14
  %99 = bitcast %union.anon* %17 to i32*
  %100 = sext i32 %15 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %11, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !120
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %11 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #10
  %112 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::vector.16"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = sdiv exact i64 %117, 24
  %119 = trunc i64 %118 to i32
  %120 = load i32, i32* %10, align 8
  %121 = icmp sgt i32 %120, 5
  br i1 %121, label %122, label %125

122:                                              ; preds = %98
  %123 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  br label %127

125:                                              ; preds = %98
  %126 = icmp sgt i32 %120, 0
  br i1 %126, label %127, label %230

127:                                              ; preds = %125, %122
  %128 = phi i32* [ %124, %122 ], [ %99, %125 ]
  %129 = zext i32 %120 to i64
  %130 = icmp ult i32 %120, 8
  br i1 %130, label %216, label %131

131:                                              ; preds = %127
  %132 = and i64 %129, 4294967288
  %133 = add nsw i64 %132, -8
  %134 = lshr exact i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 3
  %137 = icmp ult i64 %133, 24
  br i1 %137, label %183, label %138

138:                                              ; preds = %131
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %180, %140 ]
  %142 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %178, %140 ]
  %143 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %179, %140 ]
  %144 = phi i64 [ %139, %138 ], [ %181, %140 ]
  %145 = getelementptr inbounds i32, i32* %128, i64 %141
  %146 = bitcast i32* %145 to <4 x i32>*
  %147 = load <4 x i32>, <4 x i32>* %146, align 4
  %148 = getelementptr inbounds i32, i32* %145, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = mul nsw <4 x i32> %147, %142
  %152 = mul nsw <4 x i32> %150, %143
  %153 = or i64 %141, 8
  %154 = getelementptr inbounds i32, i32* %128, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4
  %157 = getelementptr inbounds i32, i32* %154, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = mul nsw <4 x i32> %156, %151
  %161 = mul nsw <4 x i32> %159, %152
  %162 = or i64 %141, 16
  %163 = getelementptr inbounds i32, i32* %128, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4
  %166 = getelementptr inbounds i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = mul nsw <4 x i32> %165, %160
  %170 = mul nsw <4 x i32> %168, %161
  %171 = or i64 %141, 24
  %172 = getelementptr inbounds i32, i32* %128, i64 %171
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4
  %175 = getelementptr inbounds i32, i32* %172, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = mul nsw <4 x i32> %174, %169
  %179 = mul nsw <4 x i32> %177, %170
  %180 = add i64 %141, 32
  %181 = add i64 %144, -4
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %140, !llvm.loop !126

183:                                              ; preds = %140, %131
  %184 = phi <4 x i32> [ undef, %131 ], [ %178, %140 ]
  %185 = phi <4 x i32> [ undef, %131 ], [ %179, %140 ]
  %186 = phi i64 [ 0, %131 ], [ %180, %140 ]
  %187 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %178, %140 ]
  %188 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %179, %140 ]
  %189 = icmp eq i64 %136, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %183, %190
  %191 = phi i64 [ %203, %190 ], [ %186, %183 ]
  %192 = phi <4 x i32> [ %201, %190 ], [ %187, %183 ]
  %193 = phi <4 x i32> [ %202, %190 ], [ %188, %183 ]
  %194 = phi i64 [ %204, %190 ], [ %136, %183 ]
  %195 = getelementptr inbounds i32, i32* %128, i64 %191
  %196 = bitcast i32* %195 to <4 x i32>*
  %197 = load <4 x i32>, <4 x i32>* %196, align 4
  %198 = getelementptr inbounds i32, i32* %195, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  %200 = load <4 x i32>, <4 x i32>* %199, align 4
  %201 = mul nsw <4 x i32> %197, %192
  %202 = mul nsw <4 x i32> %200, %193
  %203 = add i64 %191, 8
  %204 = add i64 %194, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %190, !llvm.loop !127

206:                                              ; preds = %190, %183
  %207 = phi <4 x i32> [ %184, %183 ], [ %201, %190 ]
  %208 = phi <4 x i32> [ %185, %183 ], [ %202, %190 ]
  %209 = mul <4 x i32> %208, %207
  %210 = shufflevector <4 x i32> %209, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %211 = mul <4 x i32> %209, %210
  %212 = shufflevector <4 x i32> %211, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %213 = mul <4 x i32> %211, %212
  %214 = extractelement <4 x i32> %213, i32 0
  %215 = icmp eq i64 %132, %129
  br i1 %215, label %227, label %216

216:                                              ; preds = %206, %127
  %217 = phi i64 [ 0, %127 ], [ %132, %206 ]
  %218 = phi i32 [ 1, %127 ], [ %214, %206 ]
  br label %219

219:                                              ; preds = %216, %219
  %220 = phi i64 [ %225, %219 ], [ %217, %216 ]
  %221 = phi i32 [ %224, %219 ], [ %218, %216 ]
  %222 = getelementptr inbounds i32, i32* %128, i64 %220
  %223 = load i32, i32* %222, align 4
  %224 = mul nsw i32 %223, %221
  %225 = add nuw nsw i64 %220, 1
  %226 = icmp eq i64 %225, %129
  br i1 %226, label %227, label %219, !llvm.loop !128

227:                                              ; preds = %219, %206
  %228 = phi i32 [ %214, %206 ], [ %224, %219 ]
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %233

230:                                              ; preds = %125, %227
  %231 = phi i32 [ %228, %227 ], [ 1, %125 ]
  %232 = zext i32 %231 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 %2, i64 %232, i1 false)
  br label %233

233:                                              ; preds = %230, %227
  %234 = icmp sgt i32 %119, 0
  br i1 %3, label %247, label %235

235:                                              ; preds = %233
  br i1 %234, label %236, label %314

236:                                              ; preds = %235
  %237 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %238 = getelementptr inbounds i32, i32* %99, i64 1
  %239 = load i32, i32* %238, align 4
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %241 = bitcast [16 x i8]* %240 to i32*
  %242 = load i32, i32* %241, align 8
  %243 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %244 = bitcast i8* %243 to i32*
  %245 = load i32, i32* %244, align 4
  %246 = and i64 %118, 4294967295
  br label %286

247:                                              ; preds = %233
  br i1 %234, label %248, label %314

248:                                              ; preds = %247
  %249 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %250 = getelementptr inbounds i32, i32* %99, i64 1
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %253 = bitcast [16 x i8]* %252 to i32*
  %254 = load i32, i32* %253, align 8
  %255 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %256 = bitcast i8* %255 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = and i64 %118, 4294967295
  br label %259

259:                                              ; preds = %259, %248
  %260 = phi i64 [ 0, %248 ], [ %284, %259 ]
  %261 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %249, align 8
  %262 = load i8, i8* %1, align 1
  %263 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %261, i64 %260, i32 0, i32 0
  %264 = load i64*, i64** %263, align 8
  %265 = load i64, i64* %264, align 8
  %266 = trunc i64 %265 to i32
  %267 = getelementptr inbounds i64, i64* %264, i64 1
  %268 = load i64, i64* %267, align 8
  %269 = trunc i64 %268 to i32
  %270 = getelementptr inbounds i64, i64* %264, i64 2
  %271 = load i64, i64* %270, align 8
  %272 = trunc i64 %271 to i32
  %273 = getelementptr inbounds i64, i64* %264, i64 3
  %274 = load i64, i64* %273, align 8
  %275 = trunc i64 %274 to i32
  %276 = mul nsw i32 %251, %266
  %277 = add nsw i32 %276, %269
  %278 = mul nsw i32 %277, %254
  %279 = add nsw i32 %278, %272
  %280 = mul nsw i32 %279, %257
  %281 = add nsw i32 %280, %275
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds i8, i8* %5, i64 %282
  store i8 %262, i8* %283, align 1
  %284 = add nuw nsw i64 %260, 1
  %285 = icmp eq i64 %284, %258
  br i1 %285, label %314, label %259

286:                                              ; preds = %286, %236
  %287 = phi i64 [ 0, %236 ], [ %312, %286 ]
  %288 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %237, align 8
  %289 = getelementptr inbounds i8, i8* %1, i64 %287
  %290 = load i8, i8* %289, align 1
  %291 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %288, i64 %287, i32 0, i32 0
  %292 = load i64*, i64** %291, align 8
  %293 = load i64, i64* %292, align 8
  %294 = trunc i64 %293 to i32
  %295 = getelementptr inbounds i64, i64* %292, i64 1
  %296 = load i64, i64* %295, align 8
  %297 = trunc i64 %296 to i32
  %298 = getelementptr inbounds i64, i64* %292, i64 2
  %299 = load i64, i64* %298, align 8
  %300 = trunc i64 %299 to i32
  %301 = getelementptr inbounds i64, i64* %292, i64 3
  %302 = load i64, i64* %301, align 8
  %303 = trunc i64 %302 to i32
  %304 = mul nsw i32 %239, %294
  %305 = add nsw i32 %304, %297
  %306 = mul nsw i32 %305, %242
  %307 = add nsw i32 %306, %300
  %308 = mul nsw i32 %307, %245
  %309 = add nsw i32 %308, %303
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds i8, i8* %5, i64 %310
  store i8 %290, i8* %311, align 1
  %312 = add nuw nsw i64 %287, 1
  %313 = icmp eq i64 %312, %246
  br i1 %313, label %314, label %286

314:                                              ; preds = %286, %259, %235, %247
  br i1 %121, label %315, label %321

315:                                              ; preds = %314
  %316 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %317 = load i32*, i32** %316, align 8
  %318 = icmp eq i32* %317, null
  br i1 %318, label %321, label %319

319:                                              ; preds = %315
  %320 = bitcast i32* %317 to i8*
  tail call void @_ZdaPv(i8* %320) #13
  br label %321

321:                                              ; preds = %314, %315, %319
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIhiEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %12 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 %13
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi %struct.TfLiteTensor* [ %14, %10 ], [ null, %2 ]
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %15, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %15 ]
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %25, %30
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %25 ]
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %35, %40
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %35 ]
  %47 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %54 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %53, align 8
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 %55
  br label %57

57:                                               ; preds = %45, %52
  %58 = phi %struct.TfLiteTensor* [ %56, %52 ], [ null, %45 ]
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 4
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %26, %struct.TfLiteTensor* %58)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %167

65:                                               ; preds = %62, %57
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 2
  %67 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %66, align 8
  %68 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %67, i64 0, i32 1, i64 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 2
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  %75 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false) #10
  %78 = sext i32 %69 to i64
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE7reserveEm(%"class.std::__1::vector"* nonnull %3, i64 %78)
  %79 = call i32 @_ZN6tflite3ops7builtin15sparse_to_dense16GetIndicesVectorIiEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensoriPNSt3__16vectorINSB_IT_NSA_9allocatorISC_EEEENSD_ISF_EEEE(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %16, i32 %69, %"class.std::__1::vector"* nonnull %3)
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %141

81:                                               ; preds = %65
  %82 = icmp eq %struct.TfLiteTensor* %36, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1
  %85 = bitcast %union.TfLitePtrUnion* %84 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %81, %83
  %88 = phi i8* [ %86, %83 ], [ null, %81 ]
  %89 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %92 = bitcast %union.TfLitePtrUnion* %91 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %87, %90
  %95 = phi i8* [ %93, %90 ], [ null, %87 ]
  %96 = load i8, i8* %95, align 1
  %97 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #10
  %98 = icmp eq %struct.TfLiteTensor* %58, null
  br i1 %98, label %99, label %101

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %100, align 8, !alias.scope !129
  br label %129

101:                                              ; preds = %94
  %102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 2
  %103 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %102, align 8, !noalias !129
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4, !noalias !129
  %106 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 1, i64 0
  %107 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %105, i32* %107, align 8, !alias.scope !129
  %108 = icmp sgt i32 %105, 5
  br i1 %108, label %109, label %116

109:                                              ; preds = %101
  %110 = sext i32 %105 to i64
  %111 = shl nsw i64 %110, 2
  %112 = call i8* @_Znam(i64 %111) #13, !noalias !129
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %114 = bitcast i32** %113 to i8**
  store i8* %112, i8** %114, align 8, !alias.scope !129
  %115 = bitcast i8* %112 to i32*
  br label %121

116:                                              ; preds = %101
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %118 = bitcast %union.anon* %117 to i32*
  %119 = sext i32 %105 to i64
  %120 = shl nsw i64 %119, 2
  br label %121

121:                                              ; preds = %116, %109
  %122 = phi i64 [ %111, %109 ], [ %120, %116 ]
  %123 = phi i32* [ %115, %109 ], [ %118, %116 ]
  %124 = bitcast i32* %123 to i8*
  %125 = bitcast i32* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 %122, i1 false) #10
  %126 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 1
  %127 = bitcast %union.TfLitePtrUnion* %126 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %99, %121
  %130 = phi i8* [ %128, %121 ], [ null, %99 ]
  call void @_ZN6tflite13reference_ops13SparseToDenseIhiEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector"* nonnull dereferenceable(24) %3, i8* %88, i8 zeroext %96, i1 zeroext %74, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i8* %130)
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = icmp sgt i32 %132, 5
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast i32* %136 to i8*
  call void @_ZdaPv(i8* %139) #13
  br label %140

140:                                              ; preds = %129, %134, %138
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #10
  br label %141

141:                                              ; preds = %65, %140
  %142 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %76, align 8
  %143 = icmp eq %"class.std::__1::vector.1"* %142, null
  br i1 %143, label %166, label %144

144:                                              ; preds = %141
  %145 = bitcast %"class.std::__1::vector.1"* %142 to i8*
  %146 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %77, align 8
  %147 = icmp eq %"class.std::__1::vector.1"* %146, %142
  br i1 %147, label %164, label %148

148:                                              ; preds = %144, %159
  %149 = phi %"class.std::__1::vector.1"* [ %150, %159 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %149, i64 -1
  %151 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %150, i64 0, i32 0, i32 0
  %152 = load i32*, i32** %151, align 8
  %153 = icmp eq i32* %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %148
  %155 = ptrtoint i32* %152 to i64
  %156 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %149, i64 -1, i32 0, i32 1
  %157 = bitcast i32** %156 to i64*
  store i64 %155, i64* %157, align 8
  %158 = bitcast i32* %152 to i8*
  call void @_ZdlPv(i8* %158) #13
  br label %159

159:                                              ; preds = %154, %148
  %160 = icmp eq %"class.std::__1::vector.1"* %150, %142
  br i1 %160, label %161, label %148

161:                                              ; preds = %159
  %162 = bitcast %"class.std::__1::vector"* %3 to i8**
  %163 = load i8*, i8** %162, align 8
  br label %164

164:                                              ; preds = %161, %144
  %165 = phi i8* [ %163, %161 ], [ %145, %144 ]
  store %"class.std::__1::vector.1"* %142, %"class.std::__1::vector.1"** %77, align 8
  call void @_ZdlPv(i8* %165) #13
  br label %166

166:                                              ; preds = %141, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #10
  br label %167

167:                                              ; preds = %62, %166
  %168 = phi i32 [ %79, %166 ], [ %63, %62 ]
  ret i32 %168
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15sparse_to_dense17SparseToDenseImplIhlEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.std::__1::vector.14", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %12 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 %13
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi %struct.TfLiteTensor* [ %14, %10 ], [ null, %2 ]
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %15, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %15 ]
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %25, %30
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %25 ]
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %35, %40
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %35 ]
  %47 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %54 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %53, align 8
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 %55
  br label %57

57:                                               ; preds = %45, %52
  %58 = phi %struct.TfLiteTensor* [ %56, %52 ], [ null, %45 ]
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 4
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = tail call i32 @_ZN6tflite3ops7builtin15sparse_to_dense17ResizeOutputShapeEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %26, %struct.TfLiteTensor* %58)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %167

65:                                               ; preds = %62, %57
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 2
  %67 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %66, align 8
  %68 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %67, i64 0, i32 1, i64 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 2
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  %75 = bitcast %"class.std::__1::vector.14"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false) #10
  %78 = sext i32 %69 to i64
  call void @_ZNSt3__16vectorINS0_IlNS_9allocatorIlEEEENS1_IS3_EEE7reserveEm(%"class.std::__1::vector.14"* nonnull %3, i64 %78)
  %79 = call i32 @_ZN6tflite3ops7builtin15sparse_to_dense16GetIndicesVectorIlEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensoriPNSt3__16vectorINSB_IT_NSA_9allocatorISC_EEEENSD_ISF_EEEE(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %16, i32 %69, %"class.std::__1::vector.14"* nonnull %3)
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %141

81:                                               ; preds = %65
  %82 = icmp eq %struct.TfLiteTensor* %36, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1
  %85 = bitcast %union.TfLitePtrUnion* %84 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %81, %83
  %88 = phi i8* [ %86, %83 ], [ null, %81 ]
  %89 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1
  %92 = bitcast %union.TfLitePtrUnion* %91 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %87, %90
  %95 = phi i8* [ %93, %90 ], [ null, %87 ]
  %96 = load i8, i8* %95, align 1
  %97 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #10
  %98 = icmp eq %struct.TfLiteTensor* %58, null
  br i1 %98, label %99, label %101

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %100, align 8, !alias.scope !132
  br label %129

101:                                              ; preds = %94
  %102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 2
  %103 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %102, align 8, !noalias !132
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4, !noalias !132
  %106 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 1, i64 0
  %107 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %105, i32* %107, align 8, !alias.scope !132
  %108 = icmp sgt i32 %105, 5
  br i1 %108, label %109, label %116

109:                                              ; preds = %101
  %110 = sext i32 %105 to i64
  %111 = shl nsw i64 %110, 2
  %112 = call i8* @_Znam(i64 %111) #13, !noalias !132
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %114 = bitcast i32** %113 to i8**
  store i8* %112, i8** %114, align 8, !alias.scope !132
  %115 = bitcast i8* %112 to i32*
  br label %121

116:                                              ; preds = %101
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %118 = bitcast %union.anon* %117 to i32*
  %119 = sext i32 %105 to i64
  %120 = shl nsw i64 %119, 2
  br label %121

121:                                              ; preds = %116, %109
  %122 = phi i64 [ %111, %109 ], [ %120, %116 ]
  %123 = phi i32* [ %115, %109 ], [ %118, %116 ]
  %124 = bitcast i32* %123 to i8*
  %125 = bitcast i32* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 %122, i1 false) #10
  %126 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 1
  %127 = bitcast %union.TfLitePtrUnion* %126 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %99, %121
  %130 = phi i8* [ %128, %121 ], [ null, %99 ]
  call void @_ZN6tflite13reference_ops13SparseToDenseIhlEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector.14"* nonnull dereferenceable(24) %3, i8* %88, i8 zeroext %96, i1 zeroext %74, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i8* %130)
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = icmp sgt i32 %132, 5
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast i32* %136 to i8*
  call void @_ZdaPv(i8* %139) #13
  br label %140

140:                                              ; preds = %129, %134, %138
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #10
  br label %141

141:                                              ; preds = %65, %140
  %142 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %76, align 8
  %143 = icmp eq %"class.std::__1::vector.16"* %142, null
  br i1 %143, label %166, label %144

144:                                              ; preds = %141
  %145 = bitcast %"class.std::__1::vector.16"* %142 to i8*
  %146 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %77, align 8
  %147 = icmp eq %"class.std::__1::vector.16"* %146, %142
  br i1 %147, label %164, label %148

148:                                              ; preds = %144, %159
  %149 = phi %"class.std::__1::vector.16"* [ %150, %159 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %149, i64 -1
  %151 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %150, i64 0, i32 0, i32 0
  %152 = load i64*, i64** %151, align 8
  %153 = icmp eq i64* %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %148
  %155 = ptrtoint i64* %152 to i64
  %156 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %149, i64 -1, i32 0, i32 1
  %157 = bitcast i64** %156 to i64*
  store i64 %155, i64* %157, align 8
  %158 = bitcast i64* %152 to i8*
  call void @_ZdlPv(i8* %158) #13
  br label %159

159:                                              ; preds = %154, %148
  %160 = icmp eq %"class.std::__1::vector.16"* %150, %142
  br i1 %160, label %161, label %148

161:                                              ; preds = %159
  %162 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %163 = load i8*, i8** %162, align 8
  br label %164

164:                                              ; preds = %161, %144
  %165 = phi i8* [ %163, %161 ], [ %145, %144 ]
  store %"class.std::__1::vector.16"* %142, %"class.std::__1::vector.16"** %77, align 8
  call void @_ZdlPv(i8* %165) #13
  br label %166

166:                                              ; preds = %141, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #10
  br label %167

167:                                              ; preds = %62, %166
  %168 = phi i32 [ %79, %166 ], [ %63, %62 ]
  ret i32 %168
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13SparseToDenseIhiEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector"* dereferenceable(24), i8*, i8 zeroext, i1 zeroext, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #5 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !135
  %11 = load i32, i32* %8, align 8, !noalias !135
  %12 = icmp sgt i32 %11, 4
  br i1 %12, label %13, label %14

13:                                               ; preds = %6
  tail call void @abort() #12, !noalias !135
  unreachable

14:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !135
  %15 = sub i32 4, %11
  %16 = icmp sgt i32 %15, 0
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %16, label %18, label %98

18:                                               ; preds = %14
  %19 = bitcast %union.anon* %17 to [5 x i32]*
  %20 = zext i32 %15 to i64
  %21 = icmp ult i32 %15, 8
  br i1 %21, label %91, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967288
  %24 = add nsw i64 %23, -8
  %25 = lshr exact i64 %24, 3
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 7
  %28 = icmp ult i64 %24, 56
  br i1 %28, label %76, label %29

29:                                               ; preds = %22
  %30 = sub nsw i64 %26, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %73, %31 ]
  %33 = phi i64 [ %30, %29 ], [ %74, %31 ]
  %34 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %32
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !135
  %36 = getelementptr inbounds i32, i32* %34, i64 4
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %37, align 8, !alias.scope !135
  %38 = or i64 %32, 8
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %38
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !135
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !135
  %43 = or i64 %32, 16
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !135
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !135
  %48 = or i64 %32, 24
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !135
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !135
  %53 = or i64 %32, 32
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !135
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !135
  %58 = or i64 %32, 40
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !135
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !135
  %63 = or i64 %32, 48
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !135
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !135
  %68 = or i64 %32, 56
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !135
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !135
  %73 = add i64 %32, 64
  %74 = add i64 %33, -8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %31, !llvm.loop !138

76:                                               ; preds = %31, %22
  %77 = phi i64 [ 0, %22 ], [ %73, %31 ]
  %78 = icmp eq i64 %27, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %76, %79
  %80 = phi i64 [ %86, %79 ], [ %77, %76 ]
  %81 = phi i64 [ %87, %79 ], [ %27, %76 ]
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %80
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !135
  %84 = getelementptr inbounds i32, i32* %82, i64 4
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !135
  %86 = add i64 %80, 8
  %87 = add i64 %81, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %79, !llvm.loop !139

89:                                               ; preds = %79, %76
  %90 = icmp eq i64 %23, %20
  br i1 %90, label %98, label %91

91:                                               ; preds = %89, %18
  %92 = phi i64 [ 0, %18 ], [ %23, %89 ]
  br label %93

93:                                               ; preds = %91, %93
  %94 = phi i64 [ %96, %93 ], [ %92, %91 ]
  %95 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %94
  store i32 1, i32* %95, align 4, !alias.scope !135
  %96 = add nuw nsw i64 %94, 1
  %97 = icmp eq i64 %96, %20
  br i1 %97, label %98, label %93, !llvm.loop !140

98:                                               ; preds = %93, %89, %14
  %99 = bitcast %union.anon* %17 to i32*
  %100 = sext i32 %15 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %11, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !135
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %11 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #10
  %112 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::vector.1"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector"* %0 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = sdiv exact i64 %117, 24
  %119 = trunc i64 %118 to i32
  %120 = load i32, i32* %10, align 8
  %121 = icmp sgt i32 %120, 5
  br i1 %121, label %122, label %125

122:                                              ; preds = %98
  %123 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  br label %127

125:                                              ; preds = %98
  %126 = icmp sgt i32 %120, 0
  br i1 %126, label %127, label %230

127:                                              ; preds = %125, %122
  %128 = phi i32* [ %124, %122 ], [ %99, %125 ]
  %129 = zext i32 %120 to i64
  %130 = icmp ult i32 %120, 8
  br i1 %130, label %216, label %131

131:                                              ; preds = %127
  %132 = and i64 %129, 4294967288
  %133 = add nsw i64 %132, -8
  %134 = lshr exact i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 3
  %137 = icmp ult i64 %133, 24
  br i1 %137, label %183, label %138

138:                                              ; preds = %131
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %180, %140 ]
  %142 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %178, %140 ]
  %143 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %179, %140 ]
  %144 = phi i64 [ %139, %138 ], [ %181, %140 ]
  %145 = getelementptr inbounds i32, i32* %128, i64 %141
  %146 = bitcast i32* %145 to <4 x i32>*
  %147 = load <4 x i32>, <4 x i32>* %146, align 4
  %148 = getelementptr inbounds i32, i32* %145, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = mul nsw <4 x i32> %147, %142
  %152 = mul nsw <4 x i32> %150, %143
  %153 = or i64 %141, 8
  %154 = getelementptr inbounds i32, i32* %128, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4
  %157 = getelementptr inbounds i32, i32* %154, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = mul nsw <4 x i32> %156, %151
  %161 = mul nsw <4 x i32> %159, %152
  %162 = or i64 %141, 16
  %163 = getelementptr inbounds i32, i32* %128, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4
  %166 = getelementptr inbounds i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = mul nsw <4 x i32> %165, %160
  %170 = mul nsw <4 x i32> %168, %161
  %171 = or i64 %141, 24
  %172 = getelementptr inbounds i32, i32* %128, i64 %171
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4
  %175 = getelementptr inbounds i32, i32* %172, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = mul nsw <4 x i32> %174, %169
  %179 = mul nsw <4 x i32> %177, %170
  %180 = add i64 %141, 32
  %181 = add i64 %144, -4
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %140, !llvm.loop !141

183:                                              ; preds = %140, %131
  %184 = phi <4 x i32> [ undef, %131 ], [ %178, %140 ]
  %185 = phi <4 x i32> [ undef, %131 ], [ %179, %140 ]
  %186 = phi i64 [ 0, %131 ], [ %180, %140 ]
  %187 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %178, %140 ]
  %188 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %179, %140 ]
  %189 = icmp eq i64 %136, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %183, %190
  %191 = phi i64 [ %203, %190 ], [ %186, %183 ]
  %192 = phi <4 x i32> [ %201, %190 ], [ %187, %183 ]
  %193 = phi <4 x i32> [ %202, %190 ], [ %188, %183 ]
  %194 = phi i64 [ %204, %190 ], [ %136, %183 ]
  %195 = getelementptr inbounds i32, i32* %128, i64 %191
  %196 = bitcast i32* %195 to <4 x i32>*
  %197 = load <4 x i32>, <4 x i32>* %196, align 4
  %198 = getelementptr inbounds i32, i32* %195, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  %200 = load <4 x i32>, <4 x i32>* %199, align 4
  %201 = mul nsw <4 x i32> %197, %192
  %202 = mul nsw <4 x i32> %200, %193
  %203 = add i64 %191, 8
  %204 = add i64 %194, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %190, !llvm.loop !142

206:                                              ; preds = %190, %183
  %207 = phi <4 x i32> [ %184, %183 ], [ %201, %190 ]
  %208 = phi <4 x i32> [ %185, %183 ], [ %202, %190 ]
  %209 = mul <4 x i32> %208, %207
  %210 = shufflevector <4 x i32> %209, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %211 = mul <4 x i32> %209, %210
  %212 = shufflevector <4 x i32> %211, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %213 = mul <4 x i32> %211, %212
  %214 = extractelement <4 x i32> %213, i32 0
  %215 = icmp eq i64 %132, %129
  br i1 %215, label %227, label %216

216:                                              ; preds = %206, %127
  %217 = phi i64 [ 0, %127 ], [ %132, %206 ]
  %218 = phi i32 [ 1, %127 ], [ %214, %206 ]
  br label %219

219:                                              ; preds = %216, %219
  %220 = phi i64 [ %225, %219 ], [ %217, %216 ]
  %221 = phi i32 [ %224, %219 ], [ %218, %216 ]
  %222 = getelementptr inbounds i32, i32* %128, i64 %220
  %223 = load i32, i32* %222, align 4
  %224 = mul nsw i32 %223, %221
  %225 = add nuw nsw i64 %220, 1
  %226 = icmp eq i64 %225, %129
  br i1 %226, label %227, label %219, !llvm.loop !143

227:                                              ; preds = %219, %206
  %228 = phi i32 [ %214, %206 ], [ %224, %219 ]
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %233

230:                                              ; preds = %125, %227
  %231 = phi i32 [ %228, %227 ], [ 1, %125 ]
  %232 = zext i32 %231 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 %2, i64 %232, i1 false)
  br label %233

233:                                              ; preds = %230, %227
  %234 = icmp sgt i32 %119, 0
  br i1 %3, label %247, label %235

235:                                              ; preds = %233
  br i1 %234, label %236, label %306

236:                                              ; preds = %235
  %237 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %238 = getelementptr inbounds i32, i32* %99, i64 1
  %239 = load i32, i32* %238, align 4
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %241 = bitcast [16 x i8]* %240 to i32*
  %242 = load i32, i32* %241, align 8
  %243 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %244 = bitcast i8* %243 to i32*
  %245 = load i32, i32* %244, align 4
  %246 = and i64 %118, 4294967295
  br label %282

247:                                              ; preds = %233
  br i1 %234, label %248, label %306

248:                                              ; preds = %247
  %249 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %250 = getelementptr inbounds i32, i32* %99, i64 1
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %253 = bitcast [16 x i8]* %252 to i32*
  %254 = load i32, i32* %253, align 8
  %255 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %256 = bitcast i8* %255 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = and i64 %118, 4294967295
  br label %259

259:                                              ; preds = %259, %248
  %260 = phi i64 [ 0, %248 ], [ %280, %259 ]
  %261 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %249, align 8
  %262 = load i8, i8* %1, align 1
  %263 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %261, i64 %260, i32 0, i32 0
  %264 = load i32*, i32** %263, align 8
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %264, i64 1
  %267 = load i32, i32* %266, align 4
  %268 = getelementptr inbounds i32, i32* %264, i64 2
  %269 = load i32, i32* %268, align 4
  %270 = getelementptr inbounds i32, i32* %264, i64 3
  %271 = load i32, i32* %270, align 4
  %272 = mul nsw i32 %251, %265
  %273 = add nsw i32 %272, %267
  %274 = mul nsw i32 %273, %254
  %275 = add nsw i32 %274, %269
  %276 = mul nsw i32 %275, %257
  %277 = add nsw i32 %276, %271
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds i8, i8* %5, i64 %278
  store i8 %262, i8* %279, align 1
  %280 = add nuw nsw i64 %260, 1
  %281 = icmp eq i64 %280, %258
  br i1 %281, label %306, label %259

282:                                              ; preds = %282, %236
  %283 = phi i64 [ 0, %236 ], [ %304, %282 ]
  %284 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %237, align 8
  %285 = getelementptr inbounds i8, i8* %1, i64 %283
  %286 = load i8, i8* %285, align 1
  %287 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %284, i64 %283, i32 0, i32 0
  %288 = load i32*, i32** %287, align 8
  %289 = load i32, i32* %288, align 4
  %290 = getelementptr inbounds i32, i32* %288, i64 1
  %291 = load i32, i32* %290, align 4
  %292 = getelementptr inbounds i32, i32* %288, i64 2
  %293 = load i32, i32* %292, align 4
  %294 = getelementptr inbounds i32, i32* %288, i64 3
  %295 = load i32, i32* %294, align 4
  %296 = mul nsw i32 %239, %289
  %297 = add nsw i32 %296, %291
  %298 = mul nsw i32 %297, %242
  %299 = add nsw i32 %298, %293
  %300 = mul nsw i32 %299, %245
  %301 = add nsw i32 %300, %295
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds i8, i8* %5, i64 %302
  store i8 %286, i8* %303, align 1
  %304 = add nuw nsw i64 %283, 1
  %305 = icmp eq i64 %304, %246
  br i1 %305, label %306, label %282

306:                                              ; preds = %282, %259, %235, %247
  br i1 %121, label %307, label %313

307:                                              ; preds = %306
  %308 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %309 = load i32*, i32** %308, align 8
  %310 = icmp eq i32* %309, null
  br i1 %310, label %313, label %311

311:                                              ; preds = %307
  %312 = bitcast i32* %309 to i8*
  tail call void @_ZdaPv(i8* %312) #13
  br label %313

313:                                              ; preds = %306, %307, %311
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13SparseToDenseIhlEEvRKNSt3__16vectorINS3_IT0_NS2_9allocatorIS4_EEEENS5_IS7_EEEEPKT_SC_bRKNS_12RuntimeShapeEPSC_(%"class.std::__1::vector.14"* dereferenceable(24), i8*, i8 zeroext, i1 zeroext, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #5 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !144
  %11 = load i32, i32* %8, align 8, !noalias !144
  %12 = icmp sgt i32 %11, 4
  br i1 %12, label %13, label %14

13:                                               ; preds = %6
  tail call void @abort() #12, !noalias !144
  unreachable

14:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !144
  %15 = sub i32 4, %11
  %16 = icmp sgt i32 %15, 0
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %16, label %18, label %98

18:                                               ; preds = %14
  %19 = bitcast %union.anon* %17 to [5 x i32]*
  %20 = zext i32 %15 to i64
  %21 = icmp ult i32 %15, 8
  br i1 %21, label %91, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967288
  %24 = add nsw i64 %23, -8
  %25 = lshr exact i64 %24, 3
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 7
  %28 = icmp ult i64 %24, 56
  br i1 %28, label %76, label %29

29:                                               ; preds = %22
  %30 = sub nsw i64 %26, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %73, %31 ]
  %33 = phi i64 [ %30, %29 ], [ %74, %31 ]
  %34 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %32
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %35, align 8, !alias.scope !144
  %36 = getelementptr inbounds i32, i32* %34, i64 4
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %37, align 8, !alias.scope !144
  %38 = or i64 %32, 8
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %38
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !144
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !144
  %43 = or i64 %32, 16
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !144
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !144
  %48 = or i64 %32, 24
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !144
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !144
  %53 = or i64 %32, 32
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !144
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !144
  %58 = or i64 %32, 40
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !144
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !144
  %63 = or i64 %32, 48
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !144
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !144
  %68 = or i64 %32, 56
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !144
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !144
  %73 = add i64 %32, 64
  %74 = add i64 %33, -8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %31, !llvm.loop !147

76:                                               ; preds = %31, %22
  %77 = phi i64 [ 0, %22 ], [ %73, %31 ]
  %78 = icmp eq i64 %27, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %76, %79
  %80 = phi i64 [ %86, %79 ], [ %77, %76 ]
  %81 = phi i64 [ %87, %79 ], [ %27, %76 ]
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %80
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !144
  %84 = getelementptr inbounds i32, i32* %82, i64 4
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !144
  %86 = add i64 %80, 8
  %87 = add i64 %81, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %79, !llvm.loop !148

89:                                               ; preds = %79, %76
  %90 = icmp eq i64 %23, %20
  br i1 %90, label %98, label %91

91:                                               ; preds = %89, %18
  %92 = phi i64 [ 0, %18 ], [ %23, %89 ]
  br label %93

93:                                               ; preds = %91, %93
  %94 = phi i64 [ %96, %93 ], [ %92, %91 ]
  %95 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %94
  store i32 1, i32* %95, align 4, !alias.scope !144
  %96 = add nuw nsw i64 %94, 1
  %97 = icmp eq i64 %96, %20
  br i1 %97, label %98, label %93, !llvm.loop !149

98:                                               ; preds = %93, %89, %14
  %99 = bitcast %union.anon* %17 to i32*
  %100 = sext i32 %15 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %11, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !144
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %11 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #10
  %112 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::vector.16"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = sdiv exact i64 %117, 24
  %119 = trunc i64 %118 to i32
  %120 = load i32, i32* %10, align 8
  %121 = icmp sgt i32 %120, 5
  br i1 %121, label %122, label %125

122:                                              ; preds = %98
  %123 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  br label %127

125:                                              ; preds = %98
  %126 = icmp sgt i32 %120, 0
  br i1 %126, label %127, label %230

127:                                              ; preds = %125, %122
  %128 = phi i32* [ %124, %122 ], [ %99, %125 ]
  %129 = zext i32 %120 to i64
  %130 = icmp ult i32 %120, 8
  br i1 %130, label %216, label %131

131:                                              ; preds = %127
  %132 = and i64 %129, 4294967288
  %133 = add nsw i64 %132, -8
  %134 = lshr exact i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 3
  %137 = icmp ult i64 %133, 24
  br i1 %137, label %183, label %138

138:                                              ; preds = %131
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %180, %140 ]
  %142 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %178, %140 ]
  %143 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %138 ], [ %179, %140 ]
  %144 = phi i64 [ %139, %138 ], [ %181, %140 ]
  %145 = getelementptr inbounds i32, i32* %128, i64 %141
  %146 = bitcast i32* %145 to <4 x i32>*
  %147 = load <4 x i32>, <4 x i32>* %146, align 4
  %148 = getelementptr inbounds i32, i32* %145, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = mul nsw <4 x i32> %147, %142
  %152 = mul nsw <4 x i32> %150, %143
  %153 = or i64 %141, 8
  %154 = getelementptr inbounds i32, i32* %128, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4
  %157 = getelementptr inbounds i32, i32* %154, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = mul nsw <4 x i32> %156, %151
  %161 = mul nsw <4 x i32> %159, %152
  %162 = or i64 %141, 16
  %163 = getelementptr inbounds i32, i32* %128, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4
  %166 = getelementptr inbounds i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = mul nsw <4 x i32> %165, %160
  %170 = mul nsw <4 x i32> %168, %161
  %171 = or i64 %141, 24
  %172 = getelementptr inbounds i32, i32* %128, i64 %171
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4
  %175 = getelementptr inbounds i32, i32* %172, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = mul nsw <4 x i32> %174, %169
  %179 = mul nsw <4 x i32> %177, %170
  %180 = add i64 %141, 32
  %181 = add i64 %144, -4
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %140, !llvm.loop !150

183:                                              ; preds = %140, %131
  %184 = phi <4 x i32> [ undef, %131 ], [ %178, %140 ]
  %185 = phi <4 x i32> [ undef, %131 ], [ %179, %140 ]
  %186 = phi i64 [ 0, %131 ], [ %180, %140 ]
  %187 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %178, %140 ]
  %188 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %179, %140 ]
  %189 = icmp eq i64 %136, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %183, %190
  %191 = phi i64 [ %203, %190 ], [ %186, %183 ]
  %192 = phi <4 x i32> [ %201, %190 ], [ %187, %183 ]
  %193 = phi <4 x i32> [ %202, %190 ], [ %188, %183 ]
  %194 = phi i64 [ %204, %190 ], [ %136, %183 ]
  %195 = getelementptr inbounds i32, i32* %128, i64 %191
  %196 = bitcast i32* %195 to <4 x i32>*
  %197 = load <4 x i32>, <4 x i32>* %196, align 4
  %198 = getelementptr inbounds i32, i32* %195, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  %200 = load <4 x i32>, <4 x i32>* %199, align 4
  %201 = mul nsw <4 x i32> %197, %192
  %202 = mul nsw <4 x i32> %200, %193
  %203 = add i64 %191, 8
  %204 = add i64 %194, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %190, !llvm.loop !151

206:                                              ; preds = %190, %183
  %207 = phi <4 x i32> [ %184, %183 ], [ %201, %190 ]
  %208 = phi <4 x i32> [ %185, %183 ], [ %202, %190 ]
  %209 = mul <4 x i32> %208, %207
  %210 = shufflevector <4 x i32> %209, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %211 = mul <4 x i32> %209, %210
  %212 = shufflevector <4 x i32> %211, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %213 = mul <4 x i32> %211, %212
  %214 = extractelement <4 x i32> %213, i32 0
  %215 = icmp eq i64 %132, %129
  br i1 %215, label %227, label %216

216:                                              ; preds = %206, %127
  %217 = phi i64 [ 0, %127 ], [ %132, %206 ]
  %218 = phi i32 [ 1, %127 ], [ %214, %206 ]
  br label %219

219:                                              ; preds = %216, %219
  %220 = phi i64 [ %225, %219 ], [ %217, %216 ]
  %221 = phi i32 [ %224, %219 ], [ %218, %216 ]
  %222 = getelementptr inbounds i32, i32* %128, i64 %220
  %223 = load i32, i32* %222, align 4
  %224 = mul nsw i32 %223, %221
  %225 = add nuw nsw i64 %220, 1
  %226 = icmp eq i64 %225, %129
  br i1 %226, label %227, label %219, !llvm.loop !152

227:                                              ; preds = %219, %206
  %228 = phi i32 [ %214, %206 ], [ %224, %219 ]
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %233

230:                                              ; preds = %125, %227
  %231 = phi i32 [ %228, %227 ], [ 1, %125 ]
  %232 = zext i32 %231 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 %2, i64 %232, i1 false)
  br label %233

233:                                              ; preds = %230, %227
  %234 = icmp sgt i32 %119, 0
  br i1 %3, label %247, label %235

235:                                              ; preds = %233
  br i1 %234, label %236, label %314

236:                                              ; preds = %235
  %237 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %238 = getelementptr inbounds i32, i32* %99, i64 1
  %239 = load i32, i32* %238, align 4
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %241 = bitcast [16 x i8]* %240 to i32*
  %242 = load i32, i32* %241, align 8
  %243 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %244 = bitcast i8* %243 to i32*
  %245 = load i32, i32* %244, align 4
  %246 = and i64 %118, 4294967295
  br label %286

247:                                              ; preds = %233
  br i1 %234, label %248, label %314

248:                                              ; preds = %247
  %249 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %250 = getelementptr inbounds i32, i32* %99, i64 1
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %253 = bitcast [16 x i8]* %252 to i32*
  %254 = load i32, i32* %253, align 8
  %255 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %256 = bitcast i8* %255 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = and i64 %118, 4294967295
  br label %259

259:                                              ; preds = %259, %248
  %260 = phi i64 [ 0, %248 ], [ %284, %259 ]
  %261 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %249, align 8
  %262 = load i8, i8* %1, align 1
  %263 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %261, i64 %260, i32 0, i32 0
  %264 = load i64*, i64** %263, align 8
  %265 = load i64, i64* %264, align 8
  %266 = trunc i64 %265 to i32
  %267 = getelementptr inbounds i64, i64* %264, i64 1
  %268 = load i64, i64* %267, align 8
  %269 = trunc i64 %268 to i32
  %270 = getelementptr inbounds i64, i64* %264, i64 2
  %271 = load i64, i64* %270, align 8
  %272 = trunc i64 %271 to i32
  %273 = getelementptr inbounds i64, i64* %264, i64 3
  %274 = load i64, i64* %273, align 8
  %275 = trunc i64 %274 to i32
  %276 = mul nsw i32 %251, %266
  %277 = add nsw i32 %276, %269
  %278 = mul nsw i32 %277, %254
  %279 = add nsw i32 %278, %272
  %280 = mul nsw i32 %279, %257
  %281 = add nsw i32 %280, %275
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds i8, i8* %5, i64 %282
  store i8 %262, i8* %283, align 1
  %284 = add nuw nsw i64 %260, 1
  %285 = icmp eq i64 %284, %258
  br i1 %285, label %314, label %259

286:                                              ; preds = %286, %236
  %287 = phi i64 [ 0, %236 ], [ %312, %286 ]
  %288 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %237, align 8
  %289 = getelementptr inbounds i8, i8* %1, i64 %287
  %290 = load i8, i8* %289, align 1
  %291 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %288, i64 %287, i32 0, i32 0
  %292 = load i64*, i64** %291, align 8
  %293 = load i64, i64* %292, align 8
  %294 = trunc i64 %293 to i32
  %295 = getelementptr inbounds i64, i64* %292, i64 1
  %296 = load i64, i64* %295, align 8
  %297 = trunc i64 %296 to i32
  %298 = getelementptr inbounds i64, i64* %292, i64 2
  %299 = load i64, i64* %298, align 8
  %300 = trunc i64 %299 to i32
  %301 = getelementptr inbounds i64, i64* %292, i64 3
  %302 = load i64, i64* %301, align 8
  %303 = trunc i64 %302 to i32
  %304 = mul nsw i32 %239, %294
  %305 = add nsw i32 %304, %297
  %306 = mul nsw i32 %305, %242
  %307 = add nsw i32 %306, %300
  %308 = mul nsw i32 %307, %245
  %309 = add nsw i32 %308, %303
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds i8, i8* %5, i64 %310
  store i8 %290, i8* %311, align 1
  %312 = add nuw nsw i64 %287, 1
  %313 = icmp eq i64 %312, %246
  br i1 %313, label %314, label %286

314:                                              ; preds = %286, %259, %235, %247
  br i1 %121, label %315, label %321

315:                                              ; preds = %314
  %316 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %317 = load i32*, i32** %316, align 8
  %318 = icmp eq i32* %317, null
  br i1 %318, label %321, label %319

319:                                              ; preds = %315
  %320 = bitcast i32* %317 to i8*
  tail call void @_ZdaPv(i8* %320) #13
  br label %321

321:                                              ; preds = %314, %315, %319
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { nounwind }
attributes #11 = { cold }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !3}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!15 = distinct !{!15, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!18 = distinct !{!18, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!21 = distinct !{!21, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.isvectorized", i32 1}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !26, !23}
!26 = !{!"llvm.loop.unroll.runtime.disable"}
!27 = distinct !{!27, !23}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !26, !23}
!30 = distinct !{!30, !23}
!31 = distinct !{!31, !3}
!32 = distinct !{!32, !26, !23}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!35 = distinct !{!35, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!36 = distinct !{!36, !23}
!37 = distinct !{!37, !3}
!38 = distinct !{!38, !26, !23}
!39 = distinct !{!39, !23}
!40 = distinct !{!40, !3}
!41 = distinct !{!41, !26, !23}
!42 = distinct !{!42, !23}
!43 = distinct !{!43, !3}
!44 = distinct !{!44, !26, !23}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!47 = distinct !{!47, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!50 = distinct !{!50, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!53 = distinct !{!53, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!54 = distinct !{!54, !23}
!55 = distinct !{!55, !3}
!56 = distinct !{!56, !26, !23}
!57 = distinct !{!57, !23}
!58 = distinct !{!58, !3}
!59 = distinct !{!59, !26, !23}
!60 = distinct !{!60, !23}
!61 = distinct !{!61, !3}
!62 = distinct !{!62, !26, !23}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!65 = distinct !{!65, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!66 = distinct !{!66, !23}
!67 = distinct !{!67, !3}
!68 = distinct !{!68, !26, !23}
!69 = distinct !{!69, !23}
!70 = distinct !{!70, !3}
!71 = distinct !{!71, !26, !23}
!72 = distinct !{!72, !23}
!73 = distinct !{!73, !3}
!74 = distinct !{!74, !26, !23}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!77 = distinct !{!77, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!80 = distinct !{!80, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!83 = distinct !{!83, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!84 = distinct !{!84, !23}
!85 = distinct !{!85, !3}
!86 = distinct !{!86, !26, !23}
!87 = distinct !{!87, !23}
!88 = distinct !{!88, !3}
!89 = distinct !{!89, !26, !23}
!90 = distinct !{!90, !23}
!91 = distinct !{!91, !3}
!92 = distinct !{!92, !26, !23}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!95 = distinct !{!95, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!96 = distinct !{!96, !23}
!97 = distinct !{!97, !3}
!98 = distinct !{!98, !26, !23}
!99 = distinct !{!99, !23}
!100 = distinct !{!100, !3}
!101 = distinct !{!101, !26, !23}
!102 = distinct !{!102, !23}
!103 = distinct !{!103, !3}
!104 = distinct !{!104, !26, !23}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!107 = distinct !{!107, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!110 = distinct !{!110, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!113 = distinct !{!113, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!114 = distinct !{!114, !23}
!115 = distinct !{!115, !3}
!116 = distinct !{!116, !26, !23}
!117 = distinct !{!117, !23}
!118 = distinct !{!118, !3}
!119 = distinct !{!119, !26, !23}
!120 = !{!121}
!121 = distinct !{!121, !122, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!122 = distinct !{!122, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!123 = distinct !{!123, !23}
!124 = distinct !{!124, !3}
!125 = distinct !{!125, !26, !23}
!126 = distinct !{!126, !23}
!127 = distinct !{!127, !3}
!128 = distinct !{!128, !26, !23}
!129 = !{!130}
!130 = distinct !{!130, !131, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!131 = distinct !{!131, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!134 = distinct !{!134, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!135 = !{!136}
!136 = distinct !{!136, !137, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!137 = distinct !{!137, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!138 = distinct !{!138, !23}
!139 = distinct !{!139, !3}
!140 = distinct !{!140, !26, !23}
!141 = distinct !{!141, !23}
!142 = distinct !{!142, !3}
!143 = distinct !{!143, !26, !23}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!146 = distinct !{!146, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!147 = distinct !{!147, !23}
!148 = distinct !{!148, !3}
!149 = distinct !{!149, !26, !23}
!150 = distinct !{!150, !23}
!151 = distinct !{!151, !3}
!152 = distinct !{!152, !26, !23}
