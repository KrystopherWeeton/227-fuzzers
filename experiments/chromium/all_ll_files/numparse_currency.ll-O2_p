; ModuleID = '../../third_party/icu/source/i18n/numparse_currency.cpp'
source_filename = "../../third_party/icu/source/i18n/numparse_currency.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%"class.icu_69::numparse::impl::CombinedCurrencyMatcher" = type { %"class.icu_69::numparse::impl::NumberParseMatcher", [4 x i16], %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString", i8, [8 x %"class.icu_69::UnicodeString"], %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString", %"class.icu_69::CharString" }
%"class.icu_69::numparse::impl::NumberParseMatcher" = type { i32 (...)** }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.0, [32 x i8] }
%struct.anon.0 = type { i16, i32, i32, i16* }
%"class.icu_69::CharString" = type { %"class.icu_69::MaybeStackArray", i32, [4 x i8] }
%"class.icu_69::number::impl::CurrencySymbols" = type { [8 x i8], %"class.icu_69::CurrencyUnit", %"class.icu_69::CharString", %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString" }
%"class.icu_69::CurrencyUnit" = type { %"class.icu_69::MeasureUnit.base", [4 x i16], [4 x i8] }
%"class.icu_69::MeasureUnit.base" = type <{ %"class.icu_69::UObject", %"class.icu_69::MeasureUnitImpl"*, i16, i8 }>
%"class.icu_69::MeasureUnitImpl" = type opaque
%"class.icu_69::DecimalFormatSymbols" = type <{ %"class.icu_69::UObject", [28 x %"class.icu_69::UnicodeString"], %"class.icu_69::UnicodeString", i32, [4 x i8], %"class.icu_69::Locale", [157 x i8], [157 x i8], [6 x i8], i16*, [3 x %"class.icu_69::UnicodeString"], [3 x %"class.icu_69::UnicodeString"], i8, i8, [6 x i8] }>
%"class.icu_69::Locale" = type <{ %"class.icu_69::UObject", [12 x i8], [6 x i8], [4 x i8], [2 x i8], i32, [4 x i8], i8*, [157 x i8], [3 x i8], i8*, i8, [7 x i8] }>
%"class.icu_69::StringSegment" = type <{ %"class.icu_69::UnicodeString"*, i32, i32, i8, [7 x i8] }>
%"class.icu_69::numparse::impl::ParsedNumber" = type { %"class.icu_69::number::impl::DecimalQuantity", i32, i32, %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString", [4 x i16] }
%"class.icu_69::number::impl::DecimalQuantity" = type <{ %"class.icu_69::IFixedDecimal", i8, [3 x i8], i32, i32, i8, i8, [2 x i8], double, i32, i32, i32, i32, %union.anon, i8, i8, [6 x i8] }>
%"class.icu_69::IFixedDecimal" = type { i32 (...)** }
%union.anon = type { %struct.anon.1 }
%struct.anon.1 = type { i8*, i32 }
%"class.icu_69::ParsePosition" = type { %"class.icu_69::UObject", i32, i32 }

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

$_ZN6icu_698numparse4impl23CombinedCurrencyMatcherD2Ev = comdat any

$_ZN6icu_698numparse4impl23CombinedCurrencyMatcherD0Ev = comdat any

$_ZNK6icu_698numparse4impl18NumberParseMatcher10isFlexibleEv = comdat any

$_ZNK6icu_698numparse4impl18NumberParseMatcher11postProcessERNS1_12ParsedNumberE = comdat any

$_ZTSN6icu_697UMemoryE = comdat any

$_ZTIN6icu_697UMemoryE = comdat any

@_ZTVN6icu_698numparse4impl23CombinedCurrencyMatcherE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN6icu_698numparse4impl23CombinedCurrencyMatcherE to i8*), i8* bitcast (void (%"class.icu_69::numparse::impl::CombinedCurrencyMatcher"*)* @_ZN6icu_698numparse4impl23CombinedCurrencyMatcherD2Ev to i8*), i8* bitcast (void (%"class.icu_69::numparse::impl::CombinedCurrencyMatcher"*)* @_ZN6icu_698numparse4impl23CombinedCurrencyMatcherD0Ev to i8*), i8* bitcast (i1 (%"class.icu_69::numparse::impl::NumberParseMatcher"*)* @_ZNK6icu_698numparse4impl18NumberParseMatcher10isFlexibleEv to i8*), i8* bitcast (i1 (%"class.icu_69::numparse::impl::CombinedCurrencyMatcher"*, %"class.icu_69::StringSegment"*, %"class.icu_69::numparse::impl::ParsedNumber"*, i32*)* @_ZNK6icu_698numparse4impl23CombinedCurrencyMatcher5matchERNS_13StringSegmentERNS1_12ParsedNumberER10UErrorCode to i8*), i8* bitcast (i1 (%"class.icu_69::numparse::impl::CombinedCurrencyMatcher"*, %"class.icu_69::StringSegment"*)* @_ZNK6icu_698numparse4impl23CombinedCurrencyMatcher9smokeTestERKNS_13StringSegmentE to i8*), i8* bitcast (void (%"class.icu_69::numparse::impl::NumberParseMatcher"*, %"class.icu_69::numparse::impl::ParsedNumber"*)* @_ZNK6icu_698numparse4impl18NumberParseMatcher11postProcessERNS1_12ParsedNumberE to i8*), i8* bitcast (void (%"class.icu_69::UnicodeString"*, %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"*)* @_ZNK6icu_698numparse4impl23CombinedCurrencyMatcher8toStringEv to i8*)] }, align 8
@.str = private unnamed_addr constant [26 x i16] [i16 60, i16 67, i16 111, i16 109, i16 98, i16 105, i16 110, i16 101, i16 100, i16 67, i16 117, i16 114, i16 114, i16 101, i16 110, i16 99, i16 121, i16 77, i16 97, i16 116, i16 99, i16 104, i16 101, i16 114, i16 62, i16 0], align 2
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external global i8*
@_ZTSN6icu_698numparse4impl23CombinedCurrencyMatcherE = hidden constant [49 x i8] c"N6icu_698numparse4impl23CombinedCurrencyMatcherE\00", align 1
@_ZTIN6icu_698numparse4impl18NumberParseMatcherE = external constant i8*
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTSN6icu_697UMemoryE = linkonce_odr hidden constant [18 x i8] c"N6icu_697UMemoryE\00", comdat, align 1
@_ZTIN6icu_697UMemoryE = linkonce_odr hidden constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTSN6icu_697UMemoryE, i32 0, i32 0) }, comdat, align 8
@_ZTIN6icu_698numparse4impl23CombinedCurrencyMatcherE = hidden constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @_ZTSN6icu_698numparse4impl23CombinedCurrencyMatcherE, i32 0, i32 0), i32 0, i32 2, i8* bitcast (i8** @_ZTIN6icu_698numparse4impl18NumberParseMatcherE to i8*), i64 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6icu_697UMemoryE to i8*), i64 2 }, align 8
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN6icu_6913ParsePositionE = external unnamed_addr constant { [5 x i8*] }, align 8

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_
@_ZN6icu_698numparse4impl23CombinedCurrencyMatcherC1ERKNS_6number4impl15CurrencySymbolsERKNS_20DecimalFormatSymbolsEiR10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::numparse::impl::CombinedCurrencyMatcher"*, %"class.icu_69::number::impl::CurrencySymbols"*, %"class.icu_69::DecimalFormatSymbols"*, i32, i32*), void (%"class.icu_69::numparse::impl::CombinedCurrencyMatcher"*, %"class.icu_69::number::impl::CurrencySymbols"*, %"class.icu_69::DecimalFormatSymbols"*, i32, i32*)* @_ZN6icu_698numparse4impl23CombinedCurrencyMatcherC2ERKNS_6number4impl15CurrencySymbolsERKNS_20DecimalFormatSymbolsEiR10UErrorCode

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #7
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #8
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #8
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #8
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #8
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #7
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #7
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #8
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_698numparse4impl23CombinedCurrencyMatcherC2ERKNS_6number4impl15CurrencySymbolsERKNS_20DecimalFormatSymbolsEiR10UErrorCode(%"class.icu_69::numparse::impl::CombinedCurrencyMatcher"*, %"class.icu_69::number::impl::CurrencySymbols"* dereferenceable(232), %"class.icu_69::DecimalFormatSymbols"* dereferenceable(2816), i32, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.icu_69::Locale", align 8
  %7 = alloca %"class.icu_69::UnicodeString", align 8
  %8 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6icu_698numparse4impl23CombinedCurrencyMatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 2
  tail call void @_ZNK6icu_696number4impl15CurrencySymbols17getCurrencySymbolER10UErrorCode(%"class.icu_69::UnicodeString"* sret %9, %"class.icu_69::number::impl::CurrencySymbols"* %1, i32* dereferenceable(4) %4) #8
  %10 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 3
  tail call void @_ZNK6icu_696number4impl15CurrencySymbols21getIntlCurrencySymbolER10UErrorCode(%"class.icu_69::UnicodeString"* sret %10, %"class.icu_69::number::impl::CurrencySymbols"* %1, i32* dereferenceable(4) %4) #8
  %11 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 4
  %12 = lshr i32 %3, 13
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  store i8 %15, i8* %11, align 8
  %16 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 0
  %17 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %16, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %18, align 8
  %19 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 1, i32 1, i32 0, i32 0
  store i16 2, i16* %20, align 8
  %21 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 2, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 2, i32 1, i32 0, i32 0
  store i16 2, i16* %22, align 8
  %23 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 3, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 3, i32 1, i32 0, i32 0
  store i16 2, i16* %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 4, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 4, i32 1, i32 0, i32 0
  store i16 2, i16* %26, align 8
  %27 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 5, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 5, i32 1, i32 0, i32 0
  store i16 2, i16* %28, align 8
  %29 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 6, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 6, i32 1, i32 0, i32 0
  store i16 2, i16* %30, align 8
  %31 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 7, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 7, i32 1, i32 0, i32 0
  store i16 2, i16* %32, align 8
  %33 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 6
  %34 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6920DecimalFormatSymbols28getPatternForCurrencySpacingE16UCurrencySpacingaR10UErrorCode(%"class.icu_69::DecimalFormatSymbols"* %2, i32 2, i8 signext 0, i32* dereferenceable(4) %4) #8
  tail call void @_ZN6icu_6913UnicodeStringC1ERKS0_(%"class.icu_69::UnicodeString"* %33, %"class.icu_69::UnicodeString"* dereferenceable(64) %34) #8
  %35 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 7
  %36 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6920DecimalFormatSymbols28getPatternForCurrencySpacingE16UCurrencySpacingaR10UErrorCode(%"class.icu_69::DecimalFormatSymbols"* %2, i32 2, i8 signext 1, i32* dereferenceable(4) %4) #8
  tail call void @_ZN6icu_6913UnicodeStringC1ERKS0_(%"class.icu_69::UnicodeString"* %35, %"class.icu_69::UnicodeString"* dereferenceable(64) %36) #8
  %37 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 8
  %38 = bitcast %"class.icu_69::Locale"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %38) #8
  %39 = getelementptr inbounds %"class.icu_69::DecimalFormatSymbols", %"class.icu_69::DecimalFormatSymbols"* %2, i64 0, i32 5
  call void @_ZN6icu_696LocaleC1ERKS0_(%"class.icu_69::Locale"* nonnull %6, %"class.icu_69::Locale"* dereferenceable(224) %39) #8
  %40 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %6, i64 0, i32 7
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %37, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 8, i32 0, i32 3, i64 0
  store i8* %43, i8** %42, align 8
  %44 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 8, i32 0, i32 1
  store i32 40, i32* %44, align 8
  %45 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 8, i32 0, i32 2
  store i8 0, i8* %45, align 4
  %46 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 8, i32 1
  store i32 0, i32* %46, align 8
  store i8 0, i8* %43, align 1
  %47 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"* %37, i8* %41, i32 -1, i32* dereferenceable(4) %4) #8
  call void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %38) #8
  %48 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 1, i64 0
  %49 = call i16* @_ZNK6icu_696number4impl15CurrencySymbols10getIsoCodeEv(%"class.icu_69::number::impl::CurrencySymbols"* %1) #8
  %50 = bitcast i16* %48 to i8*
  %51 = bitcast i16* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %50, i8* align 2 %51, i64 6, i1 false) #8
  %52 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 1, i64 3
  store i16 0, i16* %52, align 2
  %53 = load i8, i8* %11, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %72

55:                                               ; preds = %5
  %56 = bitcast %"class.icu_69::UnicodeString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #8
  call void @_ZNK6icu_696number4impl15CurrencySymbols13getPluralNameENS_14StandardPlural4FormER10UErrorCode(%"class.icu_69::UnicodeString"* nonnull sret %7, %"class.icu_69::number::impl::CurrencySymbols"* %1, i32 0, i32* dereferenceable(4) %4) #8
  %57 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSEOS0_(%"class.icu_69::UnicodeString"* %16, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %7) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #8
  call void @_ZNK6icu_696number4impl15CurrencySymbols13getPluralNameENS_14StandardPlural4FormER10UErrorCode(%"class.icu_69::UnicodeString"* nonnull sret %7, %"class.icu_69::number::impl::CurrencySymbols"* %1, i32 1, i32* dereferenceable(4) %4) #8
  %58 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 1
  %59 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSEOS0_(%"class.icu_69::UnicodeString"* %58, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %7) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #8
  call void @_ZNK6icu_696number4impl15CurrencySymbols13getPluralNameENS_14StandardPlural4FormER10UErrorCode(%"class.icu_69::UnicodeString"* nonnull sret %7, %"class.icu_69::number::impl::CurrencySymbols"* %1, i32 2, i32* dereferenceable(4) %4) #8
  %60 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 2
  %61 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSEOS0_(%"class.icu_69::UnicodeString"* %60, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %7) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #8
  call void @_ZNK6icu_696number4impl15CurrencySymbols13getPluralNameENS_14StandardPlural4FormER10UErrorCode(%"class.icu_69::UnicodeString"* nonnull sret %7, %"class.icu_69::number::impl::CurrencySymbols"* %1, i32 3, i32* dereferenceable(4) %4) #8
  %62 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 3
  %63 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSEOS0_(%"class.icu_69::UnicodeString"* %62, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %7) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #8
  call void @_ZNK6icu_696number4impl15CurrencySymbols13getPluralNameENS_14StandardPlural4FormER10UErrorCode(%"class.icu_69::UnicodeString"* nonnull sret %7, %"class.icu_69::number::impl::CurrencySymbols"* %1, i32 4, i32* dereferenceable(4) %4) #8
  %64 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 4
  %65 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSEOS0_(%"class.icu_69::UnicodeString"* %64, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %7) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #8
  call void @_ZNK6icu_696number4impl15CurrencySymbols13getPluralNameENS_14StandardPlural4FormER10UErrorCode(%"class.icu_69::UnicodeString"* nonnull sret %7, %"class.icu_69::number::impl::CurrencySymbols"* %1, i32 5, i32* dereferenceable(4) %4) #8
  %66 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 5
  %67 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSEOS0_(%"class.icu_69::UnicodeString"* %66, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %7) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #8
  call void @_ZNK6icu_696number4impl15CurrencySymbols13getPluralNameENS_14StandardPlural4FormER10UErrorCode(%"class.icu_69::UnicodeString"* nonnull sret %7, %"class.icu_69::number::impl::CurrencySymbols"* %1, i32 6, i32* dereferenceable(4) %4) #8
  %68 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 6
  %69 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSEOS0_(%"class.icu_69::UnicodeString"* %68, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %7) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #8
  call void @_ZNK6icu_696number4impl15CurrencySymbols13getPluralNameENS_14StandardPlural4FormER10UErrorCode(%"class.icu_69::UnicodeString"* nonnull sret %7, %"class.icu_69::number::impl::CurrencySymbols"* %1, i32 7, i32* dereferenceable(4) %4) #8
  %70 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 7
  %71 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSEOS0_(%"class.icu_69::UnicodeString"* %70, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %7) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #8
  br label %72

72:                                               ; preds = %55, %5
  ret void
}

declare void @_ZNK6icu_696number4impl15CurrencySymbols17getCurrencySymbolER10UErrorCode(%"class.icu_69::UnicodeString"* sret, %"class.icu_69::number::impl::CurrencySymbols"*, i32* dereferenceable(4)) local_unnamed_addr #4

declare void @_ZNK6icu_696number4impl15CurrencySymbols21getIntlCurrencySymbolER10UErrorCode(%"class.icu_69::UnicodeString"* sret, %"class.icu_69::number::impl::CurrencySymbols"*, i32* dereferenceable(4)) local_unnamed_addr #4

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6920DecimalFormatSymbols28getPatternForCurrencySpacingE16UCurrencySpacingaR10UErrorCode(%"class.icu_69::DecimalFormatSymbols"*, i32, i8 signext, i32* dereferenceable(4)) local_unnamed_addr #4

declare void @_ZN6icu_6913UnicodeStringC1ERKS0_(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"*) unnamed_addr #5

declare i16* @_ZNK6icu_696number4impl15CurrencySymbols10getIsoCodeEv(%"class.icu_69::number::impl::CurrencySymbols"*) local_unnamed_addr #4

declare void @_ZNK6icu_696number4impl15CurrencySymbols13getPluralNameENS_14StandardPlural4FormER10UErrorCode(%"class.icu_69::UnicodeString"* sret, %"class.icu_69::number::impl::CurrencySymbols"*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSEOS0_(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6icu_698numparse4impl23CombinedCurrencyMatcher5matchERNS_13StringSegmentERNS1_12ParsedNumberER10UErrorCode(%"class.icu_69::numparse::impl::CombinedCurrencyMatcher"*, %"class.icu_69::StringSegment"* dereferenceable(24), %"class.icu_69::numparse::impl::ParsedNumber"* dereferenceable(216), i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::numparse::impl::ParsedNumber", %"class.icu_69::numparse::impl::ParsedNumber"* %2, i64 0, i32 5, i64 0
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %65

8:                                                ; preds = %4
  %9 = tail call i32 @_ZNK6icu_6913StringSegment9getOffsetEv(%"class.icu_69::StringSegment"* %1) #8
  %10 = tail call zeroext i1 @_ZNK6icu_698numparse4impl12ParsedNumber10seenNumberEv(%"class.icu_69::numparse::impl::ParsedNumber"* %2) #8
  br i1 %10, label %11, label %33

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  %13 = load i16, i16* %12, align 8
  %14 = icmp ugt i16 %13, 31
  br i1 %14, label %15, label %33

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 7
  %17 = tail call i32 @_ZN6icu_6913StringSegment21getCommonPrefixLengthERKNS_13UnicodeStringE(%"class.icu_69::StringSegment"* %1, %"class.icu_69::UnicodeString"* dereferenceable(64) %16) #8
  %18 = load i16, i16* %12, align 8
  %19 = icmp slt i16 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = lshr i16 %18, 5
  %22 = zext i16 %21 to i32
  br label %26

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 7, i32 1, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  br label %26

26:                                               ; preds = %20, %23
  %27 = phi i32 [ %22, %20 ], [ %25, %23 ]
  %28 = icmp eq i32 %17, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZN6icu_6913StringSegment12adjustOffsetEi(%"class.icu_69::StringSegment"* %1, i32 %17) #8
  br label %30

30:                                               ; preds = %26, %29
  %31 = tail call i32 @_ZNK6icu_6913StringSegment6lengthEv(%"class.icu_69::StringSegment"* %1) #8
  %32 = icmp eq i32 %17, %31
  br i1 %32, label %35, label %33

33:                                               ; preds = %8, %11, %30
  %34 = tail call zeroext i1 @_ZNK6icu_698numparse4impl23CombinedCurrencyMatcher13matchCurrencyERNS_13StringSegmentERNS1_12ParsedNumberER10UErrorCode(%"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, %"class.icu_69::StringSegment"* dereferenceable(24) %1, %"class.icu_69::numparse::impl::ParsedNumber"* dereferenceable(216) %2, i32* dereferenceable(4) %3)
  br label %35

35:                                               ; preds = %33, %30
  %36 = phi i1 [ true, %30 ], [ %34, %33 ]
  %37 = load i16, i16* %5, align 8
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN6icu_6913StringSegment9setOffsetEi(%"class.icu_69::StringSegment"* %1, i32 %9) #8
  br label %65

40:                                               ; preds = %35
  %41 = tail call zeroext i1 @_ZNK6icu_698numparse4impl12ParsedNumber10seenNumberEv(%"class.icu_69::numparse::impl::ParsedNumber"* %2) #8
  br i1 %41, label %65, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %44 = load i16, i16* %43, align 8
  %45 = icmp ugt i16 %44, 31
  br i1 %45, label %46, label %65

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 6
  %48 = tail call i32 @_ZN6icu_6913StringSegment21getCommonPrefixLengthERKNS_13UnicodeStringE(%"class.icu_69::StringSegment"* %1, %"class.icu_69::UnicodeString"* dereferenceable(64) %47) #8
  %49 = load i16, i16* %43, align 8
  %50 = icmp slt i16 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %46
  %52 = lshr i16 %49, 5
  %53 = zext i16 %52 to i32
  br label %57

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 6, i32 1, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  br label %57

57:                                               ; preds = %51, %54
  %58 = phi i32 [ %53, %51 ], [ %56, %54 ]
  %59 = icmp eq i32 %48, %58
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZN6icu_6913StringSegment12adjustOffsetEi(%"class.icu_69::StringSegment"* %1, i32 %48) #8
  br label %61

61:                                               ; preds = %60, %57
  br i1 %36, label %65, label %62

62:                                               ; preds = %61
  %63 = tail call i32 @_ZNK6icu_6913StringSegment6lengthEv(%"class.icu_69::StringSegment"* %1) #8
  %64 = icmp eq i32 %48, %63
  br label %65

65:                                               ; preds = %39, %61, %62, %42, %40, %4
  %66 = phi i1 [ false, %4 ], [ %36, %39 ], [ %36, %40 ], [ %36, %42 ], [ true, %61 ], [ %64, %62 ]
  ret i1 %66
}

declare i32 @_ZNK6icu_6913StringSegment9getOffsetEv(%"class.icu_69::StringSegment"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK6icu_698numparse4impl12ParsedNumber10seenNumberEv(%"class.icu_69::numparse::impl::ParsedNumber"*) local_unnamed_addr #4

declare i32 @_ZN6icu_6913StringSegment21getCommonPrefixLengthERKNS_13UnicodeStringE(%"class.icu_69::StringSegment"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #4

declare void @_ZN6icu_6913StringSegment12adjustOffsetEi(%"class.icu_69::StringSegment"*, i32) local_unnamed_addr #4

declare i32 @_ZNK6icu_6913StringSegment6lengthEv(%"class.icu_69::StringSegment"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6icu_698numparse4impl23CombinedCurrencyMatcher13matchCurrencyERNS_13StringSegmentERNS1_12ParsedNumberER10UErrorCode(%"class.icu_69::numparse::impl::CombinedCurrencyMatcher"*, %"class.icu_69::StringSegment"* dereferenceable(24), %"class.icu_69::numparse::impl::ParsedNumber"* dereferenceable(216), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = alloca %"class.icu_69::ParsePosition", align 8
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %9 = load i16, i16* %8, align 8
  %10 = icmp ugt i16 %9, 31
  br i1 %10, label %11, label %14

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 2
  %13 = tail call i32 @_ZN6icu_6913StringSegment28getCaseSensitivePrefixLengthERKNS_13UnicodeStringE(%"class.icu_69::StringSegment"* %1, %"class.icu_69::UnicodeString"* dereferenceable(64) %12) #8
  br label %14

14:                                               ; preds = %11, %4
  %15 = phi i32 [ %13, %11 ], [ -1, %4 ]
  %16 = tail call i32 @_ZNK6icu_6913StringSegment6lengthEv(%"class.icu_69::StringSegment"* %1) #8
  %17 = icmp eq i32 %15, %16
  %18 = load i16, i16* %8, align 8
  %19 = icmp slt i16 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = lshr i16 %18, 5
  %22 = zext i16 %21 to i32
  br label %26

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  br label %26

26:                                               ; preds = %20, %23
  %27 = phi i32 [ %22, %20 ], [ %25, %23 ]
  %28 = icmp eq i32 %15, %27
  br i1 %28, label %29, label %35

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.icu_69::numparse::impl::ParsedNumber", %"class.icu_69::numparse::impl::ParsedNumber"* %2, i64 0, i32 5, i64 0
  %31 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 1, i64 0
  %32 = bitcast i16* %30 to i8*
  %33 = bitcast i16* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %32, i8* align 2 %33, i64 6, i1 false) #8
  %34 = getelementptr inbounds %"class.icu_69::numparse::impl::ParsedNumber", %"class.icu_69::numparse::impl::ParsedNumber"* %2, i64 0, i32 5, i64 3
  store i16 0, i16* %34, align 2
  tail call void @_ZN6icu_6913StringSegment12adjustOffsetEi(%"class.icu_69::StringSegment"* %1, i32 %15) #8
  tail call void @_ZN6icu_698numparse4impl12ParsedNumber16setCharsConsumedERKNS_13StringSegmentE(%"class.icu_69::numparse::impl::ParsedNumber"* %2, %"class.icu_69::StringSegment"* dereferenceable(24) %1) #8
  br label %142

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %37 = load i16, i16* %36, align 8
  %38 = icmp ugt i16 %37, 31
  br i1 %38, label %39, label %42

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 3
  %41 = tail call i32 @_ZN6icu_6913StringSegment21getCommonPrefixLengthERKNS_13UnicodeStringE(%"class.icu_69::StringSegment"* %1, %"class.icu_69::UnicodeString"* dereferenceable(64) %40) #8
  br label %42

42:                                               ; preds = %35, %39
  %43 = phi i32 [ %41, %39 ], [ -1, %35 ]
  br i1 %17, label %47, label %44

44:                                               ; preds = %42
  %45 = tail call i32 @_ZNK6icu_6913StringSegment6lengthEv(%"class.icu_69::StringSegment"* %1) #8
  %46 = icmp eq i32 %43, %45
  br label %47

47:                                               ; preds = %44, %42
  %48 = phi i1 [ true, %42 ], [ %46, %44 ]
  %49 = load i16, i16* %36, align 8
  %50 = icmp slt i16 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = lshr i16 %49, 5
  %53 = zext i16 %52 to i32
  br label %57

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  br label %57

57:                                               ; preds = %51, %54
  %58 = phi i32 [ %53, %51 ], [ %56, %54 ]
  %59 = icmp eq i32 %43, %58
  br i1 %59, label %60, label %66

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.icu_69::numparse::impl::ParsedNumber", %"class.icu_69::numparse::impl::ParsedNumber"* %2, i64 0, i32 5, i64 0
  %62 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 1, i64 0
  %63 = bitcast i16* %61 to i8*
  %64 = bitcast i16* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %63, i8* align 2 %64, i64 6, i1 false) #8
  %65 = getelementptr inbounds %"class.icu_69::numparse::impl::ParsedNumber", %"class.icu_69::numparse::impl::ParsedNumber"* %2, i64 0, i32 5, i64 3
  store i16 0, i16* %65, align 2
  tail call void @_ZN6icu_6913StringSegment12adjustOffsetEi(%"class.icu_69::StringSegment"* %1, i32 %43) #8
  tail call void @_ZN6icu_698numparse4impl12ParsedNumber16setCharsConsumedERKNS_13StringSegmentE(%"class.icu_69::numparse::impl::ParsedNumber"* %2, %"class.icu_69::StringSegment"* dereferenceable(24) %1) #8
  br label %142

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 4
  %68 = load i8, i8* %67, align 8, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %95, label %70

70:                                               ; preds = %66
  %71 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %71) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 64, i1 false)
  call void @_ZNK6icu_6913StringSegment19toTempUnicodeStringEv(%"class.icu_69::UnicodeString"* nonnull sret %5, %"class.icu_69::StringSegment"* %1) #8
  %72 = bitcast %"class.icu_69::ParsePosition"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #8
  %73 = getelementptr inbounds %"class.icu_69::ParsePosition", %"class.icu_69::ParsePosition"* %6, i64 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.icu_69::ParsePosition", %"class.icu_69::ParsePosition"* %6, i64 0, i32 1
  %75 = getelementptr inbounds %"class.icu_69::ParsePosition", %"class.icu_69::ParsePosition"* %6, i64 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6913ParsePositionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  store i32 0, i32* %74, align 8
  store i32 -1, i32* %75, align 4
  %76 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #8
  store i32 0, i32* %7, align 4
  %77 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 8, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds %"class.icu_69::numparse::impl::ParsedNumber", %"class.icu_69::numparse::impl::ParsedNumber"* %2, i64 0, i32 5, i64 0
  call void @uprv_parseCurrency_69(i8* %78, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5, %"class.icu_69::ParsePosition"* nonnull dereferenceable(16) %6, i8 signext 0, i32* nonnull %7, i16* %79, i32* dereferenceable(4) %3) #8
  br i1 %48, label %84, label %80

80:                                               ; preds = %70
  %81 = load i32, i32* %7, align 4
  %82 = call i32 @_ZNK6icu_6913StringSegment6lengthEv(%"class.icu_69::StringSegment"* %1) #8
  %83 = icmp eq i32 %81, %82
  br label %84

84:                                               ; preds = %80, %70
  %85 = phi i1 [ true, %70 ], [ %83, %80 ]
  %86 = load i32, i32* %3, align 4
  %87 = icmp sgt i32 %86, 0
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = load i32, i32* %74, align 8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %92, label %91

91:                                               ; preds = %88
  call void @_ZN6icu_6913StringSegment12adjustOffsetEi(%"class.icu_69::StringSegment"* %1, i32 %89) #8
  call void @_ZN6icu_698numparse4impl12ParsedNumber16setCharsConsumedERKNS_13StringSegmentE(%"class.icu_69::numparse::impl::ParsedNumber"* %2, %"class.icu_69::StringSegment"* dereferenceable(24) %1) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #8
  call void @_ZN6icu_6913ParsePositionD1Ev(%"class.icu_69::ParsePosition"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %71) #8
  br label %142

92:                                               ; preds = %84, %88
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #8
  call void @_ZN6icu_6913ParsePositionD1Ev(%"class.icu_69::ParsePosition"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %71) #8
  br label %142

93:                                               ; preds = %130
  %94 = icmp sgt i32 %131, 0
  br i1 %94, label %136, label %142

95:                                               ; preds = %66, %130
  %96 = phi i64 [ %134, %130 ], [ 0, %66 ]
  %97 = phi i32 [ %131, %130 ], [ 0, %66 ]
  %98 = phi i1 [ %133, %130 ], [ %48, %66 ]
  %99 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 %96
  %100 = tail call i32 @_ZN6icu_6913StringSegment21getCommonPrefixLengthERKNS_13UnicodeStringE(%"class.icu_69::StringSegment"* %1, %"class.icu_69::UnicodeString"* dereferenceable(64) %99) #8
  %101 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 %96, i32 1, i32 0, i32 0
  %102 = load i16, i16* %101, align 8
  %103 = icmp slt i16 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %95
  %105 = lshr i16 %102, 5
  %106 = zext i16 %105 to i32
  br label %110

107:                                              ; preds = %95
  %108 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 %96, i32 1, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  br label %110

110:                                              ; preds = %104, %107
  %111 = phi i32 [ %106, %104 ], [ %109, %107 ]
  %112 = icmp eq i32 %100, %111
  br i1 %112, label %113, label %130

113:                                              ; preds = %110
  br i1 %103, label %117, label %114

114:                                              ; preds = %113
  %115 = lshr i16 %102, 5
  %116 = zext i16 %115 to i32
  br label %120

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 %96, i32 1, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  br label %120

120:                                              ; preds = %114, %117
  %121 = phi i32 [ %116, %114 ], [ %119, %117 ]
  %122 = icmp sgt i32 %121, %97
  br i1 %122, label %123, label %130

123:                                              ; preds = %120
  br i1 %103, label %127, label %124

124:                                              ; preds = %123
  %125 = lshr i16 %102, 5
  %126 = zext i16 %125 to i32
  br label %130

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 %96, i32 1, i32 0, i32 1
  %129 = load i32, i32* %128, align 4
  br label %130

130:                                              ; preds = %127, %124, %120, %110
  %131 = phi i32 [ %97, %120 ], [ %97, %110 ], [ %126, %124 ], [ %129, %127 ]
  %132 = icmp sgt i32 %100, 0
  %133 = or i1 %98, %132
  %134 = add nuw nsw i64 %96, 1
  %135 = icmp eq i64 %134, 8
  br i1 %135, label %93, label %95

136:                                              ; preds = %93
  %137 = getelementptr inbounds %"class.icu_69::numparse::impl::ParsedNumber", %"class.icu_69::numparse::impl::ParsedNumber"* %2, i64 0, i32 5, i64 0
  %138 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 1, i64 0
  %139 = bitcast i16* %137 to i8*
  %140 = bitcast i16* %138 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %139, i8* align 2 %140, i64 6, i1 false) #8
  %141 = getelementptr inbounds %"class.icu_69::numparse::impl::ParsedNumber", %"class.icu_69::numparse::impl::ParsedNumber"* %2, i64 0, i32 5, i64 3
  store i16 0, i16* %141, align 2
  tail call void @_ZN6icu_6913StringSegment12adjustOffsetEi(%"class.icu_69::StringSegment"* %1, i32 %131) #8
  tail call void @_ZN6icu_698numparse4impl12ParsedNumber16setCharsConsumedERKNS_13StringSegmentE(%"class.icu_69::numparse::impl::ParsedNumber"* %2, %"class.icu_69::StringSegment"* dereferenceable(24) %1) #8
  br label %142

142:                                              ; preds = %60, %91, %136, %93, %92, %29
  %143 = phi i1 [ %17, %29 ], [ %48, %60 ], [ %85, %91 ], [ %133, %136 ], [ %85, %92 ], [ %133, %93 ]
  ret i1 %143
}

declare void @_ZN6icu_6913StringSegment9setOffsetEi(%"class.icu_69::StringSegment"*, i32) local_unnamed_addr #4

declare i32 @_ZN6icu_6913StringSegment28getCaseSensitivePrefixLengthERKNS_13UnicodeStringE(%"class.icu_69::StringSegment"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #4

declare void @_ZN6icu_698numparse4impl12ParsedNumber16setCharsConsumedERKNS_13StringSegmentE(%"class.icu_69::numparse::impl::ParsedNumber"*, %"class.icu_69::StringSegment"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK6icu_6913StringSegment19toTempUnicodeStringEv(%"class.icu_69::UnicodeString"* sret, %"class.icu_69::StringSegment"*) local_unnamed_addr #4

declare void @uprv_parseCurrency_69(i8*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::ParsePosition"* dereferenceable(16), i8 signext, i32*, i16*, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6913ParsePositionD1Ev(%"class.icu_69::ParsePosition"*) unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK6icu_698numparse4impl23CombinedCurrencyMatcher9smokeTestERKNS_13StringSegmentE(%"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* nocapture readnone, %"class.icu_69::StringSegment"* nocapture readnone dereferenceable(24)) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_698numparse4impl23CombinedCurrencyMatcher8toStringEv(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN6icu_6913UnicodeStringC1EPKDs(%"class.icu_69::UnicodeString"* %0, i16* getelementptr inbounds ([26 x i16], [26 x i16]* @.str, i64 0, i64 0)) #8
  ret void
}

declare void @_ZN6icu_6913UnicodeStringC1EPKDs(%"class.icu_69::UnicodeString"*, i16*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6icu_698numparse4impl23CombinedCurrencyMatcherD2Ev(%"class.icu_69::numparse::impl::CombinedCurrencyMatcher"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6icu_698numparse4impl23CombinedCurrencyMatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 8, i32 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 8, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #8
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 7
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %10) #8
  %11 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 6
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %11) #8
  %12 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 7
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %12) #8
  %13 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 6
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %13) #8
  %14 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 5
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %14) #8
  %15 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 4
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %15) #8
  %16 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 3
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %16) #8
  %17 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 2
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %17) #8
  %18 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 1
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %18) #8
  %19 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 5, i64 0
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %19) #8
  %20 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 3
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %20) #8
  %21 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 2
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %21) #8
  %22 = getelementptr inbounds %"class.icu_69::numparse::impl::CombinedCurrencyMatcher", %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0, i64 0, i32 0
  tail call void @_ZN6icu_698numparse4impl18NumberParseMatcherD2Ev(%"class.icu_69::numparse::impl::NumberParseMatcher"* %22) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6icu_698numparse4impl23CombinedCurrencyMatcherD0Ev(%"class.icu_69::numparse::impl::CombinedCurrencyMatcher"*) unnamed_addr #1 comdat align 2 {
  tail call void @_ZN6icu_698numparse4impl23CombinedCurrencyMatcherD2Ev(%"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0) #8
  %2 = bitcast %"class.icu_69::numparse::impl::CombinedCurrencyMatcher"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6icu_698numparse4impl18NumberParseMatcher10isFlexibleEv(%"class.icu_69::numparse::impl::NumberParseMatcher"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6icu_698numparse4impl18NumberParseMatcher11postProcessERNS1_12ParsedNumberE(%"class.icu_69::numparse::impl::NumberParseMatcher"*, %"class.icu_69::numparse::impl::ParsedNumber"* dereferenceable(216)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN6icu_696LocaleC1ERKS0_(%"class.icu_69::Locale"*, %"class.icu_69::Locale"* dereferenceable(224)) unnamed_addr #4

declare dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"*, i8*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_698numparse4impl18NumberParseMatcherD2Ev(%"class.icu_69::numparse::impl::NumberParseMatcher"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind allocsize(0) }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
