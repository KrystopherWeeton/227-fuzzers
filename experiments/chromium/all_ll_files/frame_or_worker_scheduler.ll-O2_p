; ModuleID = '../../third_party/blink/renderer/platform/scheduler/common/frame_or_worker_scheduler.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/common/frame_or_worker_scheduler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::FrameScheduler" = type opaque
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink22FrameOrWorkerScheduler16ToFrameSchedulerEv = comdat any

$_ZNK5blink22FrameOrWorkerScheduler23CalculateLifecycleStateENS0_12ObserverTypeE = comdat any

$_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERS4_RS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_ = comdat any

$_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

@_ZTVN5blink22FrameOrWorkerSchedulerE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FrameOrWorkerScheduler"*)* @_ZN5blink22FrameOrWorkerSchedulerD2Ev to i8*), i8* bitcast (void (%"class.blink::FrameOrWorkerScheduler"*)* @_ZN5blink22FrameOrWorkerSchedulerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::FrameScheduler"* (%"class.blink::FrameOrWorkerScheduler"*)* @_ZN5blink22FrameOrWorkerScheduler16ToFrameSchedulerEv to i8*), i8* bitcast (i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)* @_ZNK5blink22FrameOrWorkerScheduler23CalculateLifecycleStateENS0_12ObserverTypeE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.base::WeakPtr"*, %"class.blink::FrameOrWorkerScheduler"*)* @_ZN5blink22FrameOrWorkerScheduler23GetDocumentBoundWeakPtrEv to i8*)] }, align 8
@.str = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink22FrameOrWorkerScheduler8ObserverENS3_12ObserverTypeEEEEEPKcv = private unnamed_addr constant [153 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::FrameOrWorkerScheduler::Observer *, blink::FrameOrWorkerScheduler::ObserverType>]\00", align 1

@_ZN5blink22FrameOrWorkerScheduler23LifecycleObserverHandleC1EPS0_PNS0_8ObserverE = hidden unnamed_addr alias void (%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"*, %"class.blink::FrameOrWorkerScheduler"*, %"class.blink::FrameOrWorkerScheduler::Observer"*), void (%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"*, %"class.blink::FrameOrWorkerScheduler"*, %"class.blink::FrameOrWorkerScheduler::Observer"*)* @_ZN5blink22FrameOrWorkerScheduler23LifecycleObserverHandleC2EPS0_PNS0_8ObserverE
@_ZN5blink22FrameOrWorkerScheduler23LifecycleObserverHandleD1Ev = hidden unnamed_addr alias void (%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"*), void (%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"*)* @_ZN5blink22FrameOrWorkerScheduler23LifecycleObserverHandleD2Ev
@_ZN5blink22FrameOrWorkerScheduler32SchedulingAffectingFeatureHandleC1ENS_9scheduler26WebSchedulerTrackedFeatureENS_16SchedulingPolicyEN4base7WeakPtrIS0_EE = hidden unnamed_addr alias void (%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"*, i32, i16, %"class.base::WeakPtr"*), void (%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"*, i32, i16, %"class.base::WeakPtr"*)* @_ZN5blink22FrameOrWorkerScheduler32SchedulingAffectingFeatureHandleC2ENS_9scheduler26WebSchedulerTrackedFeatureENS_16SchedulingPolicyEN4base7WeakPtrIS0_EE
@_ZN5blink22FrameOrWorkerScheduler32SchedulingAffectingFeatureHandleC1EOS1_ = hidden unnamed_addr alias void (%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"*, %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"*), void (%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"*, %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"*)* @_ZN5blink22FrameOrWorkerScheduler32SchedulingAffectingFeatureHandleC2EOS1_
@_ZN5blink22FrameOrWorkerSchedulerD1Ev = hidden unnamed_addr alias void (%"class.blink::FrameOrWorkerScheduler"*), void (%"class.blink::FrameOrWorkerScheduler"*)* @_ZN5blink22FrameOrWorkerSchedulerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FrameOrWorkerScheduler23LifecycleObserverHandleC2EPS0_PNS0_8ObserverE(%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"*, %"class.blink::FrameOrWorkerScheduler"*, %"class.blink::FrameOrWorkerScheduler::Observer"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !noalias !2
  %6 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %1, i64 0, i32 2, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %6) #8, !noalias !2
  %7 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %1, i64 0, i32 2, i32 0, i32 1
  %8 = load i64, i64* %7, align 8, !noalias !2
  %9 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle", %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %0, i64 0, i32 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* %9, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %8) #8
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !noalias !2
  %10 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle", %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %0, i64 0, i32 1
  store %"class.blink::FrameOrWorkerScheduler::Observer"* %2, %"class.blink::FrameOrWorkerScheduler::Observer"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FrameOrWorkerScheduler10GetWeakPtrEv(%"class.base::WeakPtr"* noalias sret, %"class.blink::FrameOrWorkerScheduler"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !noalias !7
  %5 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %1, i64 0, i32 2, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %5) #8, !noalias !7
  %6 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %1, i64 0, i32 2, i32 0, i32 1
  %7 = load i64, i64* %6, align 8, !noalias !7
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* %8, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %7) #8
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !noalias !7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FrameOrWorkerScheduler23LifecycleObserverHandleD2Ev(%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle", %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #8
  br i1 %4, label %5, label %23

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle", %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to %"class.blink::FrameOrWorkerScheduler"**
  %8 = load %"class.blink::FrameOrWorkerScheduler"*, %"class.blink::FrameOrWorkerScheduler"** %7, align 8
  %9 = icmp eq %"class.blink::FrameOrWorkerScheduler"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %5
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #8
  br i1 %11, label %15, label %12

12:                                               ; preds = %10
  %13 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #8
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  br label %15

15:                                               ; preds = %12, %10
  %16 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #8
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = load %"class.blink::FrameOrWorkerScheduler"*, %"class.blink::FrameOrWorkerScheduler"** %7, align 8
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi %"class.blink::FrameOrWorkerScheduler"* [ %18, %17 ], [ null, %15 ]
  %21 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle", %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %0, i64 0, i32 1
  %22 = load %"class.blink::FrameOrWorkerScheduler::Observer"*, %"class.blink::FrameOrWorkerScheduler::Observer"** %21, align 8
  call void @_ZN5blink22FrameOrWorkerScheduler23RemoveLifecycleObserverEPNS0_8ObserverE(%"class.blink::FrameOrWorkerScheduler"* %20, %"class.blink::FrameOrWorkerScheduler::Observer"* %22)
  br label %23

23:                                               ; preds = %5, %1, %19
  %24 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle", %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %0, i64 0, i32 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %24) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FrameOrWorkerScheduler23RemoveLifecycleObserverEPNS0_8ObserverE(%"class.blink::FrameOrWorkerScheduler"*, %"class.blink::FrameOrWorkerScheduler::Observer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FrameOrWorkerScheduler::Observer"*, align 8
  store %"class.blink::FrameOrWorkerScheduler::Observer"* %1, %"class.blink::FrameOrWorkerScheduler::Observer"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0
  %6 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %5, %"class.blink::FrameOrWorkerScheduler::Observer"** nonnull dereferenceable(8) %3) #8
  %7 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %12
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %13, %7
  br i1 %14, label %62, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 0
  store %"class.blink::FrameOrWorkerScheduler::Observer"* inttoptr (i64 -1 to %"class.blink::FrameOrWorkerScheduler::Observer"*), %"class.blink::FrameOrWorkerScheduler::Observer"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 1, i32 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, 1
  %20 = and i32 %19, 2147483647
  %21 = and i32 %18, -2147483648
  %22 = or i32 %20, %21
  store i32 %22, i32* %17, align 8
  %23 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 1, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = add i32 %24, -1
  store i32 %25, i32* %23, align 4
  %26 = mul i32 %25, 6
  %27 = load i32, i32* %10, align 8
  %28 = icmp ult i32 %26, %27
  %29 = icmp ugt i32 %27, 8
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %62

31:                                               ; preds = %15
  %32 = lshr i32 %27, 1
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink22FrameOrWorkerScheduler8ObserverENS3_12ObserverTypeEEEEEPKcv, i64 0, i64 0)) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %60, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %51, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %52, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 0
  store %"class.blink::FrameOrWorkerScheduler::Observer"* null, %"class.blink::FrameOrWorkerScheduler::Observer"** %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 1
  store i32 -128, i32* %47, align 8
  %48 = or i64 %44, 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %48, i32 0
  store %"class.blink::FrameOrWorkerScheduler::Observer"* null, %"class.blink::FrameOrWorkerScheduler::Observer"** %49, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %48, i32 1
  store i32 -128, i32* %50, align 8
  %51 = add nuw nsw i64 %44, 2
  %52 = add i64 %45, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %43

54:                                               ; preds = %43, %38
  %55 = phi i64 [ 0, %38 ], [ %51, %43 ]
  %56 = icmp eq i64 %39, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %55, i32 0
  store %"class.blink::FrameOrWorkerScheduler::Observer"* null, %"class.blink::FrameOrWorkerScheduler::Observer"** %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %55, i32 1
  store i32 -128, i32* %59, align 8
  br label %60

60:                                               ; preds = %57, %54, %31
  %61 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable"* %5, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* null) #8
  br label %62

62:                                               ; preds = %2, %15, %60
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FrameOrWorkerScheduler32SchedulingAffectingFeatureHandleC2ENS_9scheduler26WebSchedulerTrackedFeatureENS_16SchedulingPolicyEN4base7WeakPtrIS0_EE(%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"*, i32, i16, %"class.base::WeakPtr"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 1
  %8 = bitcast %"struct.blink::SchedulingPolicy"* %7 to i16*
  store i16 %2, i16* %8, align 4
  %9 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %9, %"class.base::internal::WeakReference"* dereferenceable(8) %10) #8
  %11 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %11, align 8
  %14 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #8
  br i1 %14, label %15, label %36

15:                                               ; preds = %4
  %16 = bitcast i64* %11 to %"class.blink::FrameOrWorkerScheduler"**
  %17 = load %"class.blink::FrameOrWorkerScheduler"*, %"class.blink::FrameOrWorkerScheduler"** %16, align 8
  %18 = icmp eq %"class.blink::FrameOrWorkerScheduler"* %17, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %15
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #8
  br i1 %20, label %24, label %21

21:                                               ; preds = %19
  %22 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #8
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  br label %24

24:                                               ; preds = %21, %19
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #8
  br i1 %25, label %26, label %29

26:                                               ; preds = %24
  %27 = load %"class.blink::FrameOrWorkerScheduler"*, %"class.blink::FrameOrWorkerScheduler"** %16, align 8
  %28 = bitcast %"class.blink::FrameOrWorkerScheduler"* %27 to void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)***
  br label %29

29:                                               ; preds = %24, %26
  %30 = phi void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)*** [ %28, %26 ], [ null, %24 ]
  %31 = phi %"class.blink::FrameOrWorkerScheduler"* [ %27, %26 ], [ null, %24 ]
  %32 = load i32, i32* %6, align 8
  %33 = load void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)**, void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)*** %30, align 8
  %34 = getelementptr inbounds void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)*, void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)** %33, i64 6
  %35 = load void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)*, void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)** %34, align 8
  call void %35(%"class.blink::FrameOrWorkerScheduler"* %31, i32 %32, %"struct.blink::SchedulingPolicy"* dereferenceable(2) %7) #8
  br label %36

36:                                               ; preds = %15, %4, %29
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FrameOrWorkerScheduler32SchedulingAffectingFeatureHandleC2EOS1_(%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"*, %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::WeakPtr", align 8
  %4 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 1, i32 0
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 1, i32 1
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %10, %"class.base::internal::WeakReference"* dereferenceable(8) %11) #8
  %12 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %1, i64 0, i32 2, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %12, align 8
  %15 = bitcast %"class.base::WeakPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* nonnull %16) #8
  %17 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.base::WeakPtr"* %3 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %17, align 8
  %20 = bitcast %"class.base::WeakPtr"* %9 to i64*
  %21 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %21, align 8
  store i64 %19, i64* %20, align 8
  %23 = icmp eq %"class.base::internal::WeakReference::Flag"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %22) #8
  %29 = bitcast %"class.base::internal::WeakReference::Flag"* %22 to i8*
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %2, %24, %28
  %31 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %13, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* @_ZN5blink22FrameOrWorkerScheduler32SchedulingAffectingFeatureHandleaSEOS1_(%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* returned, %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* nocapture dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::WeakPtr", align 8
  %4 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 0
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 1, i32 0
  %9 = bitcast %"struct.blink::SchedulingPolicy"* %7 to i16*
  %10 = bitcast i8* %8 to i16*
  %11 = load i16, i16* %9, align 1
  store i16 %11, i16* %10, align 4
  %12 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %1, i64 0, i32 2
  %13 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::WeakPtr"* %12 to i64*
  %16 = load i64, i64* %15, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %14, align 8
  %17 = bitcast %"class.base::WeakPtr"* %13 to i64*
  %18 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %18, align 8
  store i64 %16, i64* %17, align 8
  %20 = icmp eq %"class.base::internal::WeakReference::Flag"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  tail call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %19) #8
  %26 = bitcast %"class.base::internal::WeakReference::Flag"* %19 to i8*
  tail call void @_ZdlPv(i8* %26) #9
  br label %27

27:                                               ; preds = %2, %21, %25
  %28 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %1, i64 0, i32 2, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 2, i32 0, i32 1
  store i64 %29, i64* %30, align 8
  %31 = bitcast %"class.base::WeakPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* nonnull %32) #8
  %33 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.base::WeakPtr"* %3 to i64*
  %35 = load i64, i64* %34, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %33, align 8
  %36 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %14, align 8
  store i64 %35, i64* %15, align 8
  %37 = icmp eq %"class.base::internal::WeakReference::Flag"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %36) #8
  %43 = bitcast %"class.base::internal::WeakReference::Flag"* %36 to i8*
  call void @_ZdlPv(i8* %43) #9
  br label %44

44:                                               ; preds = %27, %38, %42
  %45 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %28, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %32) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #8
  ret %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FrameOrWorkerSchedulerC2Ev(%"class.blink::FrameOrWorkerScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink22FrameOrWorkerSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 1
  %4 = bitcast %"class.WTF::HashMap"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false) #8
  %5 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 2, i32 0
  %6 = ptrtoint %"class.blink::FrameOrWorkerScheduler"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %5, i64 %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FrameOrWorkerSchedulerD2Ev(%"class.blink::FrameOrWorkerScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink22FrameOrWorkerSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %4) #8
  %5 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %5) #8
  %6 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  br i1 %8, label %11, label %9, !prof !10

9:                                                ; preds = %1
  %10 = bitcast %"struct.WTF::KeyValuePair"* %7 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %6, align 8
  br label %11

11:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink22FrameOrWorkerSchedulerD0Ev(%"class.blink::FrameOrWorkerScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FrameOrWorkerScheduler15RegisterFeatureENS_9scheduler26WebSchedulerTrackedFeatureENS_16SchedulingPolicyE(%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* noalias sret, %"class.blink::FrameOrWorkerScheduler"*, i32, i16) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::WeakPtr", align 8
  %6 = bitcast %"class.blink::FrameOrWorkerScheduler"* %1 to void (%"class.base::WeakPtr"*, %"class.blink::FrameOrWorkerScheduler"*)***
  %7 = load void (%"class.base::WeakPtr"*, %"class.blink::FrameOrWorkerScheduler"*)**, void (%"class.base::WeakPtr"*, %"class.blink::FrameOrWorkerScheduler"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::WeakPtr"*, %"class.blink::FrameOrWorkerScheduler"*)*, void (%"class.base::WeakPtr"*, %"class.blink::FrameOrWorkerScheduler"*)** %7, i64 8
  %9 = load void (%"class.base::WeakPtr"*, %"class.blink::FrameOrWorkerScheduler"*)*, void (%"class.base::WeakPtr"*, %"class.blink::FrameOrWorkerScheduler"*)** %8, align 8
  call void %9(%"class.base::WeakPtr"* nonnull sret %5, %"class.blink::FrameOrWorkerScheduler"* %1) #8
  call void @_ZN5blink22FrameOrWorkerScheduler32SchedulingAffectingFeatureHandleC2ENS_9scheduler26WebSchedulerTrackedFeatureENS_16SchedulingPolicyEN4base7WeakPtrIS0_EE(%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i32 %2, i16 %3, %"class.base::WeakPtr"* nonnull %5)
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FrameOrWorkerScheduler21RegisterStickyFeatureENS_9scheduler26WebSchedulerTrackedFeatureENS_16SchedulingPolicyE(%"class.blink::FrameOrWorkerScheduler"*, i32, i16) local_unnamed_addr #0 align 2 {
  %4 = alloca i16, align 2
  %5 = bitcast i16* %4 to %"struct.blink::SchedulingPolicy"*
  store i16 %2, i16* %4, align 2
  %6 = bitcast %"class.blink::FrameOrWorkerScheduler"* %0 to void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)***
  %7 = load void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)**, void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)*, void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)** %7, i64 6
  %9 = load void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)*, void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)** %8, align 8
  call void %9(%"class.blink::FrameOrWorkerScheduler"* %0, i32 %1, %"struct.blink::SchedulingPolicy"* nonnull dereferenceable(2) %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* @_ZN5blink22FrameOrWorkerScheduler20AddLifecycleObserverENS0_12ObserverTypeEPNS0_8ObserverE(%"class.blink::FrameOrWorkerScheduler"*, i32, %"class.blink::FrameOrWorkerScheduler::Observer"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.blink::FrameOrWorkerScheduler::Observer"*, align 8
  store i32 %1, i32* %5, align 4
  store %"class.blink::FrameOrWorkerScheduler::Observer"* %2, %"class.blink::FrameOrWorkerScheduler::Observer"** %6, align 8
  %7 = bitcast %"class.blink::FrameOrWorkerScheduler"* %0 to i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)***
  %8 = load i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)**, i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)*, i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)** %8, i64 5
  %10 = load i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)*, i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)** %9, align 8
  %11 = tail call i32 %10(%"class.blink::FrameOrWorkerScheduler"* %0, i32 %1) #8
  %12 = bitcast %"class.blink::FrameOrWorkerScheduler::Observer"* %2 to void (%"class.blink::FrameOrWorkerScheduler::Observer"*, i32)***
  %13 = load void (%"class.blink::FrameOrWorkerScheduler::Observer"*, i32)**, void (%"class.blink::FrameOrWorkerScheduler::Observer"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::FrameOrWorkerScheduler::Observer"*, i32)*, void (%"class.blink::FrameOrWorkerScheduler::Observer"*, i32)** %13, i64 2
  %15 = load void (%"class.blink::FrameOrWorkerScheduler::Observer"*, i32)*, void (%"class.blink::FrameOrWorkerScheduler::Observer"*, i32)** %14, align 8
  tail call void %15(%"class.blink::FrameOrWorkerScheduler::Observer"* %2, i32 %11) #8
  %16 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 1, i32 0
  %17 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERS4_RS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable"* %16, %"class.blink::FrameOrWorkerScheduler::Observer"** nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %5) #8
  %18 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %17, 1
  %19 = and i8 %18, 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %3
  %22 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %17, 0
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 0, i32 1
  %24 = load i32, i32* %5, align 4
  store i32 %24, i32* %23, align 4
  br label %25

25:                                               ; preds = %3, %21
  %26 = call noalias i8* @malloc(i64 24) #8
  %27 = bitcast i8* %26 to %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"*
  %28 = bitcast %"class.blink::FrameOrWorkerScheduler::Observer"** %6 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8, !noalias !11
  %31 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 2, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %31) #8, !noalias !11
  %32 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 2, i32 0, i32 1
  %33 = load i64, i64* %32, align 8, !noalias !11
  %34 = bitcast i8* %26 to %"class.base::internal::WeakPtrBase"*
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* %34, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %33) #8
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8, !noalias !11
  %35 = getelementptr inbounds i8, i8* %26, i64 16
  %36 = bitcast i8* %35 to i64*
  store i64 %29, i64* %36, align 8
  ret %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FrameOrWorkerScheduler24NotifyLifecycleObserversEv(%"class.blink::FrameOrWorkerScheduler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 1, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  %5 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler", %"class.blink::FrameOrWorkerScheduler"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %9
  br i1 %4, label %25, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %8, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %11, %17
  %14 = phi %"struct.WTF::KeyValuePair"* [ %18, %17 ], [ %6, %11 ]
  %15 = bitcast %"struct.WTF::KeyValuePair"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  switch i64 %16, label %20 [
    i64 -1, label %17
    i64 0, label %17
  ]

17:                                               ; preds = %13, %13
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 1
  %19 = icmp eq %"struct.WTF::KeyValuePair"* %18, %10
  br i1 %19, label %25, label %13

20:                                               ; preds = %13, %11
  %21 = phi %"struct.WTF::KeyValuePair"* [ %6, %11 ], [ %14, %13 ]
  %22 = icmp eq %"struct.WTF::KeyValuePair"* %21, %10
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = bitcast %"class.blink::FrameOrWorkerScheduler"* %0 to i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)***
  br label %26

25:                                               ; preds = %17, %26, %49, %46, %1, %20
  ret void

26:                                               ; preds = %23, %49
  %27 = phi %"struct.WTF::KeyValuePair"* [ %21, %23 ], [ %43, %49 ]
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0
  %29 = load %"class.blink::FrameOrWorkerScheduler::Observer"*, %"class.blink::FrameOrWorkerScheduler::Observer"** %28, align 8
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = load i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)**, i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)*** %24, align 8
  %33 = getelementptr inbounds i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)*, i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)** %32, i64 5
  %34 = load i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)*, i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)** %33, align 8
  %35 = tail call i32 %34(%"class.blink::FrameOrWorkerScheduler"* %0, i32 %31) #8
  %36 = bitcast %"class.blink::FrameOrWorkerScheduler::Observer"* %29 to void (%"class.blink::FrameOrWorkerScheduler::Observer"*, i32)***
  %37 = load void (%"class.blink::FrameOrWorkerScheduler::Observer"*, i32)**, void (%"class.blink::FrameOrWorkerScheduler::Observer"*, i32)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::FrameOrWorkerScheduler::Observer"*, i32)*, void (%"class.blink::FrameOrWorkerScheduler::Observer"*, i32)** %37, i64 2
  %39 = load void (%"class.blink::FrameOrWorkerScheduler::Observer"*, i32)*, void (%"class.blink::FrameOrWorkerScheduler::Observer"*, i32)** %38, align 8
  tail call void %39(%"class.blink::FrameOrWorkerScheduler::Observer"* %29, i32 %35) #8
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 1
  %41 = icmp eq %"struct.WTF::KeyValuePair"* %40, %10
  br i1 %41, label %25, label %42

42:                                               ; preds = %26, %46
  %43 = phi %"struct.WTF::KeyValuePair"* [ %47, %46 ], [ %40, %26 ]
  %44 = bitcast %"struct.WTF::KeyValuePair"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %49 [
    i64 -1, label %46
    i64 0, label %46
  ]

46:                                               ; preds = %42, %42
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 1
  %48 = icmp eq %"struct.WTF::KeyValuePair"* %47, %10
  br i1 %48, label %25, label %42

49:                                               ; preds = %42
  %50 = icmp eq %"struct.WTF::KeyValuePair"* %43, %10
  br i1 %50, label %25, label %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FrameOrWorkerScheduler23GetDocumentBoundWeakPtrEv(%"class.base::WeakPtr"* noalias sret, %"class.blink::FrameOrWorkerScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %3) #8
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FrameScheduler"* @_ZN5blink22FrameOrWorkerScheduler16ToFrameSchedulerEv(%"class.blink::FrameOrWorkerScheduler"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::FrameScheduler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink22FrameOrWorkerScheduler23CalculateLifecycleStateENS0_12ObserverTypeE(%"class.blink::FrameOrWorkerScheduler"*, i32) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #6

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #6

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #6

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #6

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERS4_RS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::FrameOrWorkerScheduler::Observer"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::FrameOrWorkerScheduler::Observer"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0
  %41 = load %"class.blink::FrameOrWorkerScheduler::Observer"*, %"class.blink::FrameOrWorkerScheduler::Observer"** %40, align 8
  %42 = icmp eq %"class.blink::FrameOrWorkerScheduler::Observer"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::FrameOrWorkerScheduler::Observer"*
  br i1 %42, label %88, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::FrameOrWorkerScheduler::Observer"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::FrameOrWorkerScheduler::Observer"* %59, %43
  br i1 %64, label %105, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::FrameOrWorkerScheduler::Observer"* %59, inttoptr (i64 -1 to %"class.blink::FrameOrWorkerScheduler::Observer"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0
  %74 = load %"class.blink::FrameOrWorkerScheduler::Observer"*, %"class.blink::FrameOrWorkerScheduler::Observer"** %73, align 8
  %75 = icmp eq %"class.blink::FrameOrWorkerScheduler::Observer"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %77, label %88, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0
  store %"class.blink::FrameOrWorkerScheduler::Observer"* null, %"class.blink::FrameOrWorkerScheduler::Observer"** %79, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 1
  store i32 -128, i32* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  %87 = load i64, i64* %16, align 8
  br label %88

88:                                               ; preds = %10, %76, %78
  %89 = phi i64 [ %87, %78 ], [ %17, %76 ], [ %17, %10 ]
  %90 = phi %"struct.WTF::KeyValuePair"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %91 = bitcast %"struct.WTF::KeyValuePair"* %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 0, i32 1
  %93 = load i32, i32* %2, align 4
  store i32 %93, i32* %92, align 4
  %94 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, %96
  %100 = shl i32 %99, 1
  %101 = load i32, i32* %12, align 8
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %105, label %103

103:                                              ; preds = %88
  %104 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %90)
  br label %105

105:                                              ; preds = %58, %88, %103
  %106 = phi i8 [ 1, %88 ], [ 1, %103 ], [ 0, %58 ]
  %107 = phi %"struct.WTF::KeyValuePair"* [ %90, %88 ], [ %104, %103 ], [ %60, %58 ]
  %108 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %107, 0
  %109 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %108, i8 %106, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink22FrameOrWorkerScheduler8ObserverENS3_12ObserverTypeEEEEEPKcv, i64 0, i64 0)) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %60, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %51, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %52, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 0
  store %"class.blink::FrameOrWorkerScheduler::Observer"* null, %"class.blink::FrameOrWorkerScheduler::Observer"** %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 1
  store i32 -128, i32* %47, align 8
  %48 = or i64 %44, 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %48, i32 0
  store %"class.blink::FrameOrWorkerScheduler::Observer"* null, %"class.blink::FrameOrWorkerScheduler::Observer"** %49, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %48, i32 1
  store i32 -128, i32* %50, align 8
  %51 = add nuw nsw i64 %44, 2
  %52 = add i64 %45, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %43

54:                                               ; preds = %43, %38
  %55 = phi i64 [ 0, %38 ], [ %51, %43 ]
  %56 = icmp eq i64 %39, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %55, i32 0
  store %"class.blink::FrameOrWorkerScheduler::Observer"* null, %"class.blink::FrameOrWorkerScheduler::Observer"** %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %55, i32 1
  store i32 -128, i32* %59, align 8
  br label %60

60:                                               ; preds = %57, %54, %31
  %61 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #8
  ret %"struct.WTF::KeyValuePair"* %61
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #6

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::FrameOrWorkerScheduler::Observer"** dereferenceable(8) %53) #8
  %55 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #8
  %58 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair"* %55, %"struct.WTF::KeyValuePair"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"*, %"class.blink::FrameOrWorkerScheduler::Observer"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::FrameOrWorkerScheduler::Observer"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %35 = load %"class.blink::FrameOrWorkerScheduler::Observer"*, %"class.blink::FrameOrWorkerScheduler::Observer"** %34, align 8
  %36 = icmp eq %"class.blink::FrameOrWorkerScheduler::Observer"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::FrameOrWorkerScheduler::Observer"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::FrameOrWorkerScheduler::Observer"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::FrameOrWorkerScheduler::Observer"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::FrameOrWorkerScheduler::Observer"* %63, inttoptr (i64 -1 to %"class.blink::FrameOrWorkerScheduler::Observer"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0
  %78 = load %"class.blink::FrameOrWorkerScheduler::Observer"*, %"class.blink::FrameOrWorkerScheduler::Observer"** %77, align 8
  %79 = icmp eq %"class.blink::FrameOrWorkerScheduler::Observer"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %85
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN5blink22FrameOrWorkerScheduler8ObserverENS_12KeyValuePairIS4_NS2_12ObserverTypeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"*, %"class.blink::FrameOrWorkerScheduler::Observer"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::FrameOrWorkerScheduler::Observer"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 0
  %36 = load %"class.blink::FrameOrWorkerScheduler::Observer"*, %"class.blink::FrameOrWorkerScheduler::Observer"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::FrameOrWorkerScheduler::Observer"*
  %38 = icmp eq %"class.blink::FrameOrWorkerScheduler::Observer"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::FrameOrWorkerScheduler::Observer"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::FrameOrWorkerScheduler::Observer"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %65 = load %"class.blink::FrameOrWorkerScheduler::Observer"*, %"class.blink::FrameOrWorkerScheduler::Observer"** %64, align 8
  %66 = icmp eq %"class.blink::FrameOrWorkerScheduler::Observer"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79, %"struct.WTF::KeyValuePair"* %78, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %80
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN5blink22FrameOrWorkerSchedulerEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN5blink22FrameOrWorkerSchedulerEE10GetWeakPtrEv"}
!5 = distinct !{!5, !6, !"_ZN5blink22FrameOrWorkerScheduler10GetWeakPtrEv: argument 0"}
!6 = distinct !{!6, !"_ZN5blink22FrameOrWorkerScheduler10GetWeakPtrEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base14WeakPtrFactoryIN5blink22FrameOrWorkerSchedulerEE10GetWeakPtrEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base14WeakPtrFactoryIN5blink22FrameOrWorkerSchedulerEE10GetWeakPtrEv"}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZNK4base14WeakPtrFactoryIN5blink22FrameOrWorkerSchedulerEE10GetWeakPtrEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base14WeakPtrFactoryIN5blink22FrameOrWorkerSchedulerEE10GetWeakPtrEv"}
!14 = distinct !{!14, !15, !"_ZN5blink22FrameOrWorkerScheduler10GetWeakPtrEv: argument 0"}
!15 = distinct !{!15, !"_ZN5blink22FrameOrWorkerScheduler10GetWeakPtrEv"}
