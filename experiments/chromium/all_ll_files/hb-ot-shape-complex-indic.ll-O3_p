; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-ot-shape-complex-indic.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-ot-shape-complex-indic.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_ot_shape_planner_t = type { %struct.hb_face_t*, %struct.hb_segment_properties_t, %struct.hb_ot_map_builder_t, %struct.hb_aat_map_builder_t, i8, %struct.hb_ot_complex_shaper_t* }
%struct.hb_face_t = type { %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, %struct.hb_shaper_object_dataset_t, %struct.hb_ot_face_t, %struct.hb_atomic_ptr_t.126 }
%struct.hb_object_header_t = type { %struct.hb_reference_count_t, %struct.hb_atomic_int_t, %struct.hb_atomic_ptr_t }
%struct.hb_reference_count_t = type { %struct.hb_atomic_int_t }
%struct.hb_atomic_ptr_t = type { %struct.hb_user_data_array_t* }
%struct.hb_user_data_array_t = type { %struct.hb_mutex_t, %struct.hb_lockable_set_t }
%struct.hb_mutex_t = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.hb_lockable_set_t = type { %struct.hb_vector_t }
%struct.hb_vector_t = type { i32, i32, %"struct.hb_user_data_array_t::hb_user_data_item_t"* }
%"struct.hb_user_data_array_t::hb_user_data_item_t" = type { %struct.hb_user_data_key_t*, i8*, void (i8*)* }
%struct.hb_user_data_key_t = type { i8 }
%struct.hb_blob_t = type { %struct.hb_object_header_t, i8*, i32, i32, i8*, void (i8*)* }
%struct.hb_atomic_int_t = type { i32 }
%struct.hb_shaper_object_dataset_t = type { %struct.hb_face_t*, %struct.hb_shaper_lazy_loader_t }
%struct.hb_shaper_lazy_loader_t = type { %struct.hb_lazy_loader_t }
%struct.hb_lazy_loader_t = type { %struct.hb_atomic_ptr_t.0 }
%struct.hb_atomic_ptr_t.0 = type { %struct.hb_ot_face_data_t* }
%struct.hb_ot_face_data_t = type opaque
%struct.hb_ot_face_t = type { %struct.hb_face_t*, %struct.hb_table_lazy_loader_t, %struct.hb_face_lazy_loader_t, %struct.hb_table_lazy_loader_t.6, %struct.hb_face_lazy_loader_t.9, %struct.hb_table_lazy_loader_t.13, %struct.hb_face_lazy_loader_t.16, %struct.hb_face_lazy_loader_t.20, %struct.hb_table_lazy_loader_t.24, %struct.hb_face_lazy_loader_t.27, %struct.hb_table_lazy_loader_t.31, %struct.hb_face_lazy_loader_t.34, %struct.hb_face_lazy_loader_t.38, %struct.hb_face_lazy_loader_t.42, %struct.hb_face_lazy_loader_t.46, %struct.hb_table_lazy_loader_t.50, %struct.hb_table_lazy_loader_t.53, %struct.hb_table_lazy_loader_t.56, %struct.hb_face_lazy_loader_t.59, %struct.hb_table_lazy_loader_t.63, %struct.hb_table_lazy_loader_t.66, %struct.hb_face_lazy_loader_t.69, %struct.hb_face_lazy_loader_t.73, %struct.hb_face_lazy_loader_t.77, %struct.hb_table_lazy_loader_t.81, %struct.hb_table_lazy_loader_t.84, %struct.hb_table_lazy_loader_t.87, %struct.hb_table_lazy_loader_t.90, %struct.hb_table_lazy_loader_t.93, %struct.hb_table_lazy_loader_t.96, %struct.hb_table_lazy_loader_t.99, %struct.hb_table_lazy_loader_t.102, %struct.hb_table_lazy_loader_t.105, %struct.hb_table_lazy_loader_t.108, %struct.hb_face_lazy_loader_t.111, %struct.hb_face_lazy_loader_t.115, %struct.hb_face_lazy_loader_t.119, %struct.hb_table_lazy_loader_t.123 }
%struct.hb_table_lazy_loader_t = type { %struct.hb_lazy_loader_t.1 }
%struct.hb_lazy_loader_t.1 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.2 = type { %struct.hb_blob_t* }
%struct.hb_face_lazy_loader_t = type { %struct.hb_lazy_loader_t.3 }
%struct.hb_lazy_loader_t.3 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_atomic_ptr_t.5 = type { %"struct.OT::cmap_accelerator_t"* }
%"struct.OT::cmap_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.6 = type { %struct.hb_lazy_loader_t.7 }
%struct.hb_lazy_loader_t.7 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.9 = type { %struct.hb_lazy_loader_t.10 }
%struct.hb_lazy_loader_t.10 = type { %struct.hb_atomic_ptr_t.12 }
%struct.hb_atomic_ptr_t.12 = type { %"struct.OT::hmtx_accelerator_t"* }
%"struct.OT::hmtx_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.13 = type { %struct.hb_lazy_loader_t.14 }
%struct.hb_lazy_loader_t.14 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.16 = type { %struct.hb_lazy_loader_t.17 }
%struct.hb_lazy_loader_t.17 = type { %struct.hb_atomic_ptr_t.19 }
%struct.hb_atomic_ptr_t.19 = type { %"struct.OT::post_accelerator_t"* }
%"struct.OT::post_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.20 = type { %struct.hb_lazy_loader_t.21 }
%struct.hb_lazy_loader_t.21 = type { %struct.hb_atomic_ptr_t.23 }
%struct.hb_atomic_ptr_t.23 = type { %"struct.OT::name_accelerator_t"* }
%"struct.OT::name_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.24 = type { %struct.hb_lazy_loader_t.25 }
%struct.hb_lazy_loader_t.25 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.27 = type { %struct.hb_lazy_loader_t.28 }
%struct.hb_lazy_loader_t.28 = type { %struct.hb_atomic_ptr_t.30 }
%struct.hb_atomic_ptr_t.30 = type { %"struct.OT::meta_accelerator_t"* }
%"struct.OT::meta_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.31 = type { %struct.hb_lazy_loader_t.32 }
%struct.hb_lazy_loader_t.32 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.34 = type { %struct.hb_lazy_loader_t.35 }
%struct.hb_lazy_loader_t.35 = type { %struct.hb_atomic_ptr_t.37 }
%struct.hb_atomic_ptr_t.37 = type { %"struct.OT::vmtx_accelerator_t"* }
%"struct.OT::vmtx_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.38 = type { %struct.hb_lazy_loader_t.39 }
%struct.hb_lazy_loader_t.39 = type { %struct.hb_atomic_ptr_t.41 }
%struct.hb_atomic_ptr_t.41 = type { %"struct.OT::glyf_accelerator_t"* }
%"struct.OT::glyf_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.42 = type { %struct.hb_lazy_loader_t.43 }
%struct.hb_lazy_loader_t.43 = type { %struct.hb_atomic_ptr_t.45 }
%struct.hb_atomic_ptr_t.45 = type { %"struct.OT::cff1_accelerator_t"* }
%"struct.OT::cff1_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.46 = type { %struct.hb_lazy_loader_t.47 }
%struct.hb_lazy_loader_t.47 = type { %struct.hb_atomic_ptr_t.49 }
%struct.hb_atomic_ptr_t.49 = type { %"struct.OT::cff2_accelerator_t"* }
%"struct.OT::cff2_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.50 = type { %struct.hb_lazy_loader_t.51 }
%struct.hb_lazy_loader_t.51 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.53 = type { %struct.hb_lazy_loader_t.54 }
%struct.hb_lazy_loader_t.54 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.56 = type { %struct.hb_lazy_loader_t.57 }
%struct.hb_lazy_loader_t.57 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.59 = type { %struct.hb_lazy_loader_t.60 }
%struct.hb_lazy_loader_t.60 = type { %struct.hb_atomic_ptr_t.62 }
%struct.hb_atomic_ptr_t.62 = type { %"struct.OT::gvar_accelerator_t"* }
%"struct.OT::gvar_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.63 = type { %struct.hb_lazy_loader_t.64 }
%struct.hb_lazy_loader_t.64 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.66 = type { %struct.hb_lazy_loader_t.67 }
%struct.hb_lazy_loader_t.67 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.69 = type { %struct.hb_lazy_loader_t.70 }
%struct.hb_lazy_loader_t.70 = type { %struct.hb_atomic_ptr_t.72 }
%struct.hb_atomic_ptr_t.72 = type { %"struct.OT::GDEF_accelerator_t"* }
%"struct.OT::GDEF_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.73 = type { %struct.hb_lazy_loader_t.74 }
%struct.hb_lazy_loader_t.74 = type { %struct.hb_atomic_ptr_t.76 }
%struct.hb_atomic_ptr_t.76 = type { %"struct.OT::GSUB_accelerator_t"* }
%"struct.OT::GSUB_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.77 = type { %struct.hb_lazy_loader_t.78 }
%struct.hb_lazy_loader_t.78 = type { %struct.hb_atomic_ptr_t.80 }
%struct.hb_atomic_ptr_t.80 = type { %"struct.OT::GPOS_accelerator_t"* }
%"struct.OT::GPOS_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.81 = type { %struct.hb_lazy_loader_t.82 }
%struct.hb_lazy_loader_t.82 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.84 = type { %struct.hb_lazy_loader_t.85 }
%struct.hb_lazy_loader_t.85 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.87 = type { %struct.hb_lazy_loader_t.88 }
%struct.hb_lazy_loader_t.88 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.90 = type { %struct.hb_lazy_loader_t.91 }
%struct.hb_lazy_loader_t.91 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.93 = type { %struct.hb_lazy_loader_t.94 }
%struct.hb_lazy_loader_t.94 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.96 = type { %struct.hb_lazy_loader_t.97 }
%struct.hb_lazy_loader_t.97 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.99 = type { %struct.hb_lazy_loader_t.100 }
%struct.hb_lazy_loader_t.100 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.102 = type { %struct.hb_lazy_loader_t.103 }
%struct.hb_lazy_loader_t.103 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.105 = type { %struct.hb_lazy_loader_t.106 }
%struct.hb_lazy_loader_t.106 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.108 = type { %struct.hb_lazy_loader_t.109 }
%struct.hb_lazy_loader_t.109 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.111 = type { %struct.hb_lazy_loader_t.112 }
%struct.hb_lazy_loader_t.112 = type { %struct.hb_atomic_ptr_t.114 }
%struct.hb_atomic_ptr_t.114 = type { %"struct.OT::CBDT_accelerator_t"* }
%"struct.OT::CBDT_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.115 = type { %struct.hb_lazy_loader_t.116 }
%struct.hb_lazy_loader_t.116 = type { %struct.hb_atomic_ptr_t.118 }
%struct.hb_atomic_ptr_t.118 = type { %"struct.OT::sbix_accelerator_t"* }
%"struct.OT::sbix_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.119 = type { %struct.hb_lazy_loader_t.120 }
%struct.hb_lazy_loader_t.120 = type { %struct.hb_atomic_ptr_t.122 }
%struct.hb_atomic_ptr_t.122 = type { %"struct.OT::SVG_accelerator_t"* }
%"struct.OT::SVG_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.123 = type { %struct.hb_lazy_loader_t.124 }
%struct.hb_lazy_loader_t.124 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.126 = type { %"struct.hb_face_t::plan_node_t"* }
%"struct.hb_face_t::plan_node_t" = type { %struct.hb_shape_plan_t*, %"struct.hb_face_t::plan_node_t"* }
%struct.hb_shape_plan_t = type { %struct.hb_object_header_t, %struct.hb_face_t*, %struct.hb_shape_plan_key_t, %struct.hb_ot_shape_plan_t }
%struct.hb_shape_plan_key_t = type { %struct.hb_segment_properties_t, %struct.hb_feature_t*, i32, %struct.hb_ot_shape_plan_key_t, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)*, i8* }
%struct.hb_feature_t = type { i32, i32, i32, i32 }
%struct.hb_ot_shape_plan_key_t = type { [2 x i32] }
%struct.hb_font_t = type { %struct.hb_object_header_t, %struct.hb_font_t*, %struct.hb_face_t*, i32, i32, i64, i64, i32, i32, float, i32, i32*, float*, %struct.hb_font_funcs_t*, i8*, void (i8*)*, %struct.hb_shaper_object_dataset_t.128 }
%struct.hb_font_funcs_t = type { %struct.hb_object_header_t, %struct.anon, %struct.anon.127, %"union.hb_font_funcs_t::get_t" }
%struct.anon = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.127 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%"union.hb_font_funcs_t::get_t" = type { %"struct.hb_font_funcs_t::get_t::get_funcs_t" }
%"struct.hb_font_funcs_t::get_t::get_funcs_t" = type { i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i8*, i32, i32*, i8*)* }
%struct.hb_font_extents_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hb_glyph_extents_t = type { i32, i32, i32, i32 }
%struct.hb_shaper_object_dataset_t.128 = type { %struct.hb_font_t*, %struct.hb_shaper_lazy_loader_t.129 }
%struct.hb_shaper_lazy_loader_t.129 = type { %struct.hb_lazy_loader_t.130 }
%struct.hb_lazy_loader_t.130 = type { %struct.hb_atomic_ptr_t.132 }
%struct.hb_atomic_ptr_t.132 = type { %struct.hb_ot_font_data_t* }
%struct.hb_ot_font_data_t = type opaque
%struct.hb_buffer_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hb_segment_properties_t, i8, i8, i8, i32, i32, i32, i32, %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t*, %struct.hb_glyph_position_t*, i32, [2 x [5 x i32]], [2 x i32], i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i8*, void (i8*)* }
%struct.hb_unicode_funcs_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, %struct.anon.133, %struct.anon.134, %struct.anon.135 }
%struct.anon.133 = type { i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i8*)* }
%struct.anon.134 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.135 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%struct.hb_glyph_info_t = type { i32, i32, i32, %union._hb_var_int_t, %union._hb_var_int_t }
%union._hb_var_int_t = type { i32 }
%struct.hb_glyph_position_t = type { i32, i32, i32, i32, %union._hb_var_int_t }
%struct.hb_ot_shape_plan_t = type <{ %struct.hb_segment_properties_t, %struct.hb_ot_complex_shaper_t*, %struct.hb_ot_map_t, %struct.hb_aat_map_t, i8*, i32, i32, i32, i32, i32, i32, i16, [6 x i8] }>
%struct.hb_ot_map_t = type { [2 x i32], [2 x i8], i32, %struct.hb_sorted_vector_t, [2 x %struct.hb_vector_t.137], [2 x %struct.hb_vector_t.138] }
%struct.hb_sorted_vector_t = type { %struct.hb_vector_t.136 }
%struct.hb_vector_t.136 = type { i32, i32, %"struct.hb_ot_map_t::feature_map_t"* }
%"struct.hb_ot_map_t::feature_map_t" = type { i32, [2 x i32], [2 x i32], i32, i32, i32, i8 }
%struct.hb_vector_t.137 = type { i32, i32, %"struct.hb_ot_map_t::lookup_map_t"* }
%"struct.hb_ot_map_t::lookup_map_t" = type { i16, i8, i32 }
%struct.hb_vector_t.138 = type { i32, i32, %"struct.hb_ot_map_t::stage_map_t"* }
%"struct.hb_ot_map_t::stage_map_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_t = type { %struct.hb_vector_t.139 }
%struct.hb_vector_t.139 = type { i32, i32, i32* }
%struct.hb_segment_properties_t = type { i32, i32, %struct.hb_language_impl_t*, i8*, i8* }
%struct.hb_language_impl_t = type opaque
%struct.hb_ot_map_builder_t = type { %struct.hb_face_t*, %struct.hb_segment_properties_t, [2 x i32], [2 x i8], [2 x i32], [2 x i32], [2 x i32], %struct.hb_vector_t.140, [2 x %struct.hb_vector_t.141] }
%struct.hb_vector_t.140 = type { i32, i32, %"struct.hb_ot_map_builder_t::feature_info_t"* }
%"struct.hb_ot_map_builder_t::feature_info_t" = type { i32, i32, i32, i32, i32, [2 x i32] }
%struct.hb_vector_t.141 = type { i32, i32, %"struct.hb_ot_map_builder_t::stage_info_t"* }
%"struct.hb_ot_map_builder_t::stage_info_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_builder_t = type { %struct.hb_face_t*, %struct.hb_sorted_vector_t.142 }
%struct.hb_sorted_vector_t.142 = type { %struct.hb_vector_t.143 }
%struct.hb_vector_t.143 = type { i32, i32, %"struct.hb_aat_map_builder_t::feature_info_t"* }
%"struct.hb_aat_map_builder_t::feature_info_t" = type { i32, i32, i8, i32 }
%struct.hb_ot_complex_shaper_t = type { {}*, {}*, i8* (%struct.hb_ot_shape_plan_t*)*, void (i8*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)*, i32, i8 }
%struct.hb_ot_shape_normalize_context_t = type { %struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*, %struct.hb_unicode_funcs_t*, {}*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)* }
%struct.hb_ot_map_feature_t = type { i32, i32 }
%struct.indic_config_t = type { i32, i8, i32, i32, i32, i32, i32 }
%struct.indic_shape_plan_t = type <{ %struct.indic_config_t*, i8, i8, [2 x i8], %struct.hb_atomic_int_t, %struct.hb_indic_would_substitute_feature_t, %struct.hb_indic_would_substitute_feature_t, %struct.hb_indic_would_substitute_feature_t, %struct.hb_indic_would_substitute_feature_t, %struct.hb_indic_would_substitute_feature_t, [17 x i32], [4 x i8] }>
%struct.hb_indic_would_substitute_feature_t = type <{ %"struct.hb_ot_map_t::lookup_map_t"*, i32, i8, [3 x i8] }>
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN11hb_buffer_t7messageEP9hb_font_tPKcz = comdat any

@_hb_ot_complex_shaper_indic = hidden local_unnamed_addr constant { void (%struct.hb_ot_shape_planner_t*)*, void (%struct.hb_ot_shape_planner_t*)*, i8* (%struct.hb_ot_shape_plan_t*)*, void (i8*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)*, i32, i8 } { void (%struct.hb_ot_shape_planner_t*)* @_ZL22collect_features_indicP21hb_ot_shape_planner_t, void (%struct.hb_ot_shape_planner_t*)* @_ZL23override_features_indicP21hb_ot_shape_planner_t, i8* (%struct.hb_ot_shape_plan_t*)* @_ZL17data_create_indicPK18hb_ot_shape_plan_t, void (i8*)* @_ZL18data_destroy_indicPv, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)* @_ZL21preprocess_text_indicPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)* null, i32 3, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)* @_ZL15decompose_indicPK31hb_ot_shape_normalize_context_tjPjS2_, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)* @_ZL13compose_indicPK31hb_ot_shape_normalize_context_tjjPj, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)* @_ZL17setup_masks_indicPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)* null, i32 0, i8 0 }, align 8
@_ZL14indic_features = internal unnamed_addr constant [17 x %struct.hb_ot_map_feature_t] [%struct.hb_ot_map_feature_t { i32 1853188980, i32 13 }, %struct.hb_ot_map_feature_t { i32 1634429038, i32 13 }, %struct.hb_ot_map_feature_t { i32 1919969382, i32 12 }, %struct.hb_ot_map_feature_t { i32 1919644262, i32 13 }, %struct.hb_ot_map_feature_t { i32 1886545254, i32 12 }, %struct.hb_ot_map_feature_t { i32 1651275622, i32 12 }, %struct.hb_ot_map_feature_t { i32 1633842790, i32 12 }, %struct.hb_ot_map_feature_t { i32 1751215206, i32 12 }, %struct.hb_ot_map_feature_t { i32 1886614630, i32 12 }, %struct.hb_ot_map_feature_t { i32 1986098293, i32 13 }, %struct.hb_ot_map_feature_t { i32 1667916660, i32 13 }, %struct.hb_ot_map_feature_t { i32 1768843636, i32 12 }, %struct.hb_ot_map_feature_t { i32 1886545267, i32 13 }, %struct.hb_ot_map_feature_t { i32 1633842803, i32 13 }, %struct.hb_ot_map_feature_t { i32 1651275635, i32 13 }, %struct.hb_ot_map_feature_t { i32 1886614643, i32 13 }, %struct.hb_ot_map_feature_t { i32 1751215214, i32 13 }], align 16
@_ZL34_indic_syllable_machine_trans_keys = internal unnamed_addr constant [283 x i8] calign 16
@_ZL32_indic_syllable_machine_indicies = internal unnamed_addr constant [1346 x i8] c"\01\00\02\03\03\04\01\00\03\03\04\00\03\03\04\01\00\05\03\03\04\01\00\06\00\07\00\08\03\03\04\01\00\02\03\03\04\01\00\00\00\00\09\00\0B\0C\0C\0D\0E\0A\0E\0A\0C\0C\0D\0A\0C\0C\0D\0E\0A\0F\0C\0C\0D\0E\0A\10\0A\11\0A\12\0C\0C\0D\0E\0A\0B\0C\0C\0D\0E\0A\0A\0A\0A\13\0A\0B\0C\0C\0D\0E\0A\0A\0A\0A\14\0A\16\17\17\18\19\15\15\15\15\1A\15\19\15\17\17\18\1B\17\17\18\19\15\1C\17\17\18\19\15\1D\15\1E\15\16\17\17\18\19\15\1F\17\17\18\19\15!\22\22#$    % $ \22\22# \22\22#$ &\22\22#$ ' ( !\22\22#$ )\22\22#$ \17\17\18\01\00+*-./012\18\19,344\1A,56789,;<=>\04\01:?::\09:::@:A<BB\04\01:?::::::@:<BB\04\01:?::::::@:-:::CD:\01:?:::::-:EE:\01:?:?::F:?:?:?::::?:-:G:EE:\01:?:::::-:-:::EE:\01:?:::::-:-:::ED:\01:?:::::-:H\07IJ\04\01:?:\07IJ\04\01:?:II\04\01:?:KLL\04\01:?:CM:\01:?:C:EE:\01:?:EM:\01:?:;<BB\04\01:?::::::@:;<=B\04\01:?::\09:::@:OPQR\0D\0ENSNN\14NNNTNUPVR\0D\0ENSNNNNNNTNPVR\0D\0ENSNNNNNNTNWNNNXYN\0ENSNNNNNWNZP[\5C\0D\0ENSNN\13NNNTN]PVV\0D\0ENSNNNNNNTNPVV\0D\0ENSNNNNNNTNWNNN^YN\0ENSNNNNNWNSNN_NSNSNSNNNNSNWN`N^^N\0ENSNNNNNWNWNNN^^N\0ENSNNNNNWNa\11bc\0D\0ENSN\11bc\0D\0ENSNbb\0D\0ENSNdee\0D\0ENSNXfN\0ENSN^^N\0ENSNXN^^N\0ENSN^fN\0ENSNZPVV\0D\0ENSNNNNNNTNZP[V\0D\0ENSNN\13NNNTN\0B\0C\0C\0D\0ENOPVR\0D\0ENSNNNNNNTNh0ii\18\19g3gggggg7g0ii\18\19g3gggggg7gjgggklg\19g3gggggjg/0mn\18\19g3gg\1Aggg7gjgggolg\19g3gggggjg3ggpg3g3g3gggg3gjgqgoog\19g3gggggjgjgggoog\19g3gggggjgr\1Est\18\19g3g\1Est\18\19g3gss\18\19g3g/0ii\18\19g3gggggg7guvv\18\19g3gkwg\19g3goog\19g3gkgoog\19g3gowg\19g3g/0mi\18\19g3gg\1Aggg7g\16\17\17\18\19xxxx\1Ax\16\17\17\18\19xz{|}#$y~yy%yyy\7Fy\80{}}#$y~yyyyyy\7Fy{}}#$y~yyyyyy\7Fy\81yyy\82\83y$y~yyyyy\81yz{|4#$y~yy%yyy\7Fy\81yyy\84\83y$y~yyyyy\81y~yy\85y~y~y~yyyy~y\81y\86y\84\84y$y~yyyyy\81y\81yyy\84\84y$y~yyyyy\81y\87(\88\89#$y~y(\88\89#$y~y\88\88#$y~yz{}}#$y~yyyyyy\7Fy\8A\8B\8B#$y~y\82\8Cy$y~y\84\84y$y~y\82y\84\84y$y~y\84\8Cy$y~y-./0mi\18\19g344\1Agg-7g;\8D=>\04\01:?::\09:::@:-./0\8E\8F\18\90:\91:4\1A::-7:\16\92\92\18\90:?::\1A:\91::\93:\91:\91:\91::::\91:-:G\16\92\92\18\90:?:::::-:\95\94\96\96\94+\94\97\94\96\96\94+\94\97\94\97\94\94\98\94\97\94\97\94\97\94\94\94\94\97\94-xxxxxxxxx4xxxx-x\00", align 16
@_ZL37_indic_syllable_machine_index_offsets = internal unnamed_addr constant [141 x i16] [i16 0, i16 2, i16 8, i16 12, i16 17, i16 23, i16 25, i16 27, i16 33, i16 44, i16 50, i16 52, i16 56, i16 61, i16 67, i16 69, i16 71, i16 77, i16 88, i16 99, i16 110, i16 112, i16 116, i16 121, i16 127, i16 129, i16 131, i16 137, i16 143, i16 154, i16 156, i16 160, i16 165, i16 171, i16 173, i16 175, i16 181, i16 187, i16 192, i16 194, i16 214, i16 230, i16 246, i16 261, i16 278, i16 285, i16 292, i16 294, i16 301, i16 318, i16 335, i16 352, i16 361, i16 369, i16 376, i16 384, i16 391, i16 400, i16 407, i16 423, i16 439, i16 455, i16 471, i16 486, i16 503, i16 519, i16 535, i16 550, i16 567, i16 574, i16 576, i16 583, i16 600, i16 617, i16 626, i16 634, i16 641, i16 649, i16 656, i16 663, i16 672, i16 679, i16 695, i16 711, i16 717, i16 733, i16 749, i16 764, i16 781, i16 797, i16 814, i16 821, i16 823, i16 830, i16 847, i16 864, i16 873, i16 881, i16 888, i16 904, i16 912, i16 919, i16 926, i16 935, i16 942, i16 958, i16 969, i16 975, i16 991, i16 1007, i16 1022, i16 1039, i16 1055, i16 1072, i16 1079, i16 1081, i16 1088, i16 1105, i16 1122, i16 1131, i16 1139, i16 1146, i16 1162, i16 1170, i16 1177, i16 1184, i16 1193, i16 1200, i16 1218, i16 1234, i16 1252, i16 1263, i16 1270, i16 1272, i16 1279, i16 1296, i16 1305, i16 1312, i16 1319, i16 1321, i16 1328], align 16
@_ZL33_indic_syllable_machine_key_spans = internal unnamed_addr constant [141 x i8] c"\01\05\03\04\05\01\01\05\0A\05\01\03\04\05\01\01\05\0A\0A\0A\01\03\04\05\01\01\05\05\0A\01\03\04\05\01\01\05\05\04\01\13\0F\0F\0E\10\06\06\01\06\10\10\10\08\07\06\07\06\08\06\0F\0F\0F\0F\0E\10\0F\0F\0E\10\06\01\06\10\10\08\07\06\07\06\06\08\06\0F\0F\05\0F\0F\0E\10\0F\10\06\01\06\10\10\08\07\06\0F\07\06\06\08\06\0F\0A\05\0F\0F\0E\10\0F\10\06\01\06\10\10\08\07\06\0F\07\06\06\08\06\11\0F\11\0A\06\01\06\10\08\06\06\01\06\10", align 16
@_ZL35_indic_syllable_machine_trans_targs = internal unnamed_addr constant [153 x i8] c"'-2\023\05\0659:'C\0BID\0E\0FKPQT'Y\15_Zb'\18\19ag'p\1Evqy!\22x~'\89'(<UWij[k\7F\80c\87\8C')+\08;.6*\01,0\00/14\03\047\078'=?\12SEL>\09@NGA\11RB\0AFHJ\0C\0DM\10O'V\1AXe]\13h\14\5C^`\16\17d\1Bf''ln\1C#rzmo|t\1Dsuw\1F {$}\81\82\86\83\84%\85'\88&\8A\8B", align 16
@_ZL37_indic_syllable_machine_trans_actions = internal unnamed_addr constant [153 x i8] c"\01\00\02\00\02\00\00\02\02\02\03\02\00\02\00\00\00\02\02\02\02\04\02\00\05\00\05\06\00\00\05\02\07\02\00\02\00\02\00\00\02\02\08\00\0B\02\02\05\00\0C\0C\00\02\05\02\05\02\00\0D\02\00\00\02\00\02\02\00\02\02\00\00\02\02\00\00\00\00\02\0E\02\00\00\02\00\02\02\00\02\02\02\02\00\02\02\00\00\02\02\00\00\00\00\02\0F\05\00\05\02\02\00\05\00\00\02\05\00\00\00\00\02\10\11\02\00\00\00\00\02\02\02\02\02\00\00\02\02\00\00\00\00\02\00\12\12\00\00\00\00\13\02\00\00\00", align 16
@_ZL33_indic_syllable_machine_eof_trans = internal unnamed_addr constant [141 x i16] [i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 22, i16 22, i16 28, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 33, i16 33, i16 33, i16 33, i16 33, i16 33, i16 33, i16 33, i16 33, i16 1, i16 43, i16 0, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 79, i16 104, i16 104, i16 104, i16 104, i16 104, i16 104, i16 104, i16 104, i16 104, i16 104, i16 104, i16 104, i16 104, i16 104, i16 104, i16 104, i16 104, i16 104, i16 104, i16 104, i16 121, i16 121, i16 122, i16 122, i16 122, i16 122, i16 122, i16 122, i16 122, i16 122, i16 122, i16 122, i16 122, i16 122, i16 122, i16 122, i16 122, i16 122, i16 122, i16 122, i16 122, i16 122, i16 104, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 149, i16 149, i16 149, i16 149, i16 149, i16 121], align 16
@_ZL42_indic_syllable_machine_from_state_actions = internal unnamed_addr constant <{ [40 x i8], [101 x i8] }> <{ [40 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0A", [101 x i8] zeroinitializer }>, align 16
@_ZL40_indic_syllable_machine_to_state_actions = internal unnamed_addr constant <{ [40 x i8], [101 x i8] }> <{ [40 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\09", [101 x i8] zeroinitializer }>, align 16
@.str = private unnamed_addr constant [31 x i8] c"start reordering indic initial\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"end reordering indic initial\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"start reordering indic final\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"end reordering indic final\00", align 1
@_ZL13indic_configs = internal constant [11 x %struct.indic_config_t] [%struct.indic_config_t { i32 0, i8 0, i32 0, i32 1, i32 10, i32 0, i32 0 }, %struct.indic_config_t { i32 1147500129, i8 1, i32 2381, i32 1, i32 10, i32 0, i32 0 }, %struct.indic_config_t { i32 1113943655, i8 1, i32 2509, i32 1, i32 9, i32 0, i32 0 }, %struct.indic_config_t { i32 1198879349, i8 1, i32 2637, i32 1, i32 7, i32 0, i32 0 }, %struct.indic_config_t { i32 1198877298, i8 1, i32 2765, i32 1, i32 10, i32 0, i32 0 }, %struct.indic_config_t { i32 1332902241, i8 1, i32 2893, i32 1, i32 5, i32 0, i32 0 }, %struct.indic_config_t { i32 1415671148, i8 1, i32 3021, i32 1, i32 12, i32 0, i32 0 }, %struct.indic_config_t { i32 1415933045, i8 1, i32 3149, i32 1, i32 12, i32 1, i32 1 }, %struct.indic_config_t { i32 1265525857, i8 1, i32 3277, i32 1, i32 12, i32 0, i32 1 }, %struct.indic_config_t { i32 1298954605, i8 1, i32 3405, i32 1, i32 5, i32 2, i32 0 }, %struct.indic_config_t { i32 1399418472, i8 0, i32 3530, i32 0, i32 12, i32 1, i32 0 }], align 16
@_hb_options = external hidden local_unnamed_addr global %struct.hb_atomic_int_t, align 4
@_hb_NullPool = external hidden constant [48 x i64], align 16
@switch.table._ZL17setup_masks_indicPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t = private unnamed_addr constant [6 x i32] [i32 12, i32 9, i32 5, i32 9, i32 7, i32 7], align 4
@switch.table._ZL17setup_masks_indicPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t.10 = private unnamed_addr constant [7 x i32] [i32 12, i32 12, i32 9, i32 12, i32 7, i32 7, i32 12], align 4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL22collect_features_indicP21hb_ot_shape_planner_t(%struct.hb_ot_shape_planner_t*) #0 {
  %2 = getelementptr inbounds %struct.hb_ot_shape_planner_t, %struct.hb_ot_shape_planner_t* %0, i64 0, i32 2
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL21setup_syllables_indicPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1819239276, i32 1, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1667460464, i32 1, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL24initial_reordering_indicPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1853188980, i32 13, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1634429038, i32 13, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1919969382, i32 12, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1919644262, i32 13, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886545254, i32 12, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1651275622, i32 12, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1633842790, i32 12, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1751215206, i32 12, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886614630, i32 12, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1986098293, i32 13, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1667916660, i32 13, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL22final_reordering_indicPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1768843636, i32 12, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886545267, i32 13, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1633842803, i32 13, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1651275635, i32 13, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886614643, i32 13, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1751215214, i32 13, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1667329140, i32 1, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1668049255, i32 1, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL19_hb_clear_syllablesPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL23override_features_indicP21hb_ot_shape_planner_t(%struct.hb_ot_shape_planner_t*) #0 {
  %2 = getelementptr inbounds %struct.hb_ot_shape_planner_t, %struct.hb_ot_shape_planner_t* %0, i64 0, i32 2
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1818847073, i32 1, i32 0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias i8* @_ZL17data_create_indicPK18hb_ot_shape_plan_t(%struct.hb_ot_shape_plan_t* readonly) #0 {
  %2 = tail call noalias i8* @calloc(i64 1, i64 168) #4
  %3 = icmp eq i8* %2, null
  br i1 %3, label %499, label %4, !prof !2

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to %struct.indic_config_t**
  store %struct.indic_config_t* getelementptr inbounds ([11 x %struct.indic_config_t], [11 x %struct.indic_config_t]* @_ZL13indic_configs, i64 0, i64 0), %struct.indic_config_t** %5, align 8
  %6 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %19 [
    i32 1147500129, label %17
    i32 1113943655, label %8
    i32 1198879349, label %9
    i32 1198877298, label %10
    i32 1332902241, label %11
    i32 1415671148, label %12
    i32 1415933045, label %13
    i32 1265525857, label %14
    i32 1298954605, label %15
    i32 1399418472, label %16
  ]

8:                                                ; preds = %4
  br label %17

9:                                                ; preds = %4
  br label %17

10:                                               ; preds = %4
  br label %17

11:                                               ; preds = %4
  br label %17

12:                                               ; preds = %4
  br label %17

13:                                               ; preds = %4
  br label %17

14:                                               ; preds = %4
  br label %17

15:                                               ; preds = %4
  br label %17

16:                                               ; preds = %4
  br label %17

17:                                               ; preds = %4, %16, %15, %14, %13, %12, %11, %10, %9, %8
  %18 = phi %struct.indic_config_t* [ getelementptr inbounds ([11 x %struct.indic_config_t], [11 x %struct.indic_config_t]* @_ZL13indic_configs, i64 0, i64 1), %4 ], [ getelementptr inbounds ([11 x %struct.indic_config_t], [11 x %struct.indic_config_t]* @_ZL13indic_configs, i64 0, i64 2), %8 ], [ getelementptr inbounds ([11 x %struct.indic_config_t], [11 x %struct.indic_config_t]* @_ZL13indic_configs, i64 0, i64 3), %9 ], [ getelementptr inbounds ([11 x %struct.indic_config_t], [11 x %struct.indic_config_t]* @_ZL13indic_configs, i64 0, i64 4), %10 ], [ getelementptr inbounds ([11 x %struct.indic_config_t], [11 x %struct.indic_config_t]* @_ZL13indic_configs, i64 0, i64 5), %11 ], [ getelementptr inbounds ([11 x %struct.indic_config_t], [11 x %struct.indic_config_t]* @_ZL13indic_configs, i64 0, i64 6), %12 ], [ getelementptr inbounds ([11 x %struct.indic_config_t], [11 x %struct.indic_config_t]* @_ZL13indic_configs, i64 0, i64 7), %13 ], [ getelementptr inbounds ([11 x %struct.indic_config_t], [11 x %struct.indic_config_t]* @_ZL13indic_configs, i64 0, i64 8), %14 ], [ getelementptr inbounds ([11 x %struct.indic_config_t], [11 x %struct.indic_config_t]* @_ZL13indic_configs, i64 0, i64 9), %15 ], [ getelementptr inbounds ([11 x %struct.indic_config_t], [11 x %struct.indic_config_t]* @_ZL13indic_configs, i64 0, i64 10), %16 ]
  store %struct.indic_config_t* %18, %struct.indic_config_t** %5, align 8
  br label %19

19:                                               ; preds = %4, %17
  %20 = phi %struct.indic_config_t* [ %18, %17 ], [ getelementptr inbounds ([11 x %struct.indic_config_t], [11 x %struct.indic_config_t]* @_ZL13indic_configs, i64 0, i64 0), %4 ]
  %21 = getelementptr inbounds %struct.indic_config_t, %struct.indic_config_t* %20, i64 0, i32 1
  %22 = load i8, i8* %21, align 4, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 0, i64 0
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 255
  %28 = icmp ne i32 %27, 50
  %29 = zext i1 %28 to i8
  br label %30

30:                                               ; preds = %19, %24
  %31 = phi i8 [ 0, %19 ], [ %29, %24 ]
  %32 = getelementptr inbounds i8, i8* %2, i64 8
  store i8 %31, i8* %32, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%struct.hb_atomic_int_t, %struct.hb_atomic_int_t* @_hb_options, i64 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %38, !prof !2

35:                                               ; preds = %30
  tail call void @_Z16_hb_options_initv() #4
  %36 = load atomic i32, i32* getelementptr inbounds (%struct.hb_atomic_int_t, %struct.hb_atomic_int_t* @_hb_options, i64 0, i32 0) monotonic, align 4
  %37 = load i8, i8* %32, align 8, !range !3
  br label %38

38:                                               ; preds = %30, %35
  %39 = phi i8 [ %37, %35 ], [ %31, %30 ]
  %40 = phi i32 [ %36, %35 ], [ %33, %30 ]
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds i8, i8* %2, i64 9
  %43 = lshr i8 %41, 2
  %44 = and i8 %43, 1
  store i8 %44, i8* %42, align 1
  %45 = getelementptr inbounds i8, i8* %2, i64 12
  %46 = bitcast i8* %45 to i32*
  store atomic i32 -1, i32* %46 monotonic, align 4
  %47 = icmp eq i8 %39, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %38
  %49 = load i32, i32* %6, align 4
  %50 = icmp ne i32 %49, 1298954605
  br label %51

51:                                               ; preds = %38, %48
  %52 = phi i1 [ false, %38 ], [ %50, %48 ]
  %53 = getelementptr inbounds i8, i8* %2, i64 16
  %54 = zext i1 %52 to i8
  %55 = getelementptr inbounds i8, i8* %2, i64 28
  store i8 %54, i8* %55, align 4
  %56 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 3, i32 0, i32 2
  %57 = load %"struct.hb_ot_map_t::feature_map_t"*, %"struct.hb_ot_map_t::feature_map_t"** %56, align 8
  %58 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 3, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %59, 1
  br i1 %60, label %89, label %61

61:                                               ; preds = %51
  %62 = add nsw i32 %59, -1
  br label %63

63:                                               ; preds = %78, %61
  %64 = phi i32 [ %62, %61 ], [ %80, %78 ]
  %65 = phi i32 [ 0, %61 ], [ %79, %78 ]
  %66 = add i32 %65, %64
  %67 = lshr i32 %66, 1
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %68, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp ugt i32 %70, 1919969382
  br i1 %71, label %72, label %74

72:                                               ; preds = %63
  %73 = add nsw i32 %67, -1
  br label %78

74:                                               ; preds = %63
  %75 = icmp eq i32 %70, 1919969382
  br i1 %75, label %82, label %76

76:                                               ; preds = %74
  %77 = add nuw nsw i32 %67, 1
  br label %78

78:                                               ; preds = %76, %72
  %79 = phi i32 [ %65, %72 ], [ %77, %76 ]
  %80 = phi i32 [ %73, %72 ], [ %64, %76 ]
  %81 = icmp sgt i32 %79, %80
  br i1 %81, label %89, label %63

82:                                               ; preds = %74
  %83 = zext i32 %67 to i64
  %84 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %83
  %85 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %83, i32 2, i64 0
  %88 = load i32, i32* %87, align 4
  br label %89

89:                                               ; preds = %78, %86, %82, %51
  %90 = phi i32 [ %88, %86 ], [ -1, %82 ], [ -1, %51 ], [ -1, %78 ]
  %91 = bitcast i8* %53 to %"struct.hb_ot_map_t::lookup_map_t"**
  %92 = getelementptr inbounds i8, i8* %2, i64 24
  %93 = bitcast i8* %92 to i32*
  %94 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 5, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp ult i32 %95, %90
  br i1 %96, label %97, label %98, !prof !2

97:                                               ; preds = %89
  store %"struct.hb_ot_map_t::lookup_map_t"* null, %"struct.hb_ot_map_t::lookup_map_t"** %91, align 8
  br label %138

98:                                               ; preds = %89
  %99 = icmp eq i32 %90, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %98
  %101 = add i32 %90, -1
  %102 = icmp ugt i32 %95, %101
  br i1 %102, label %103, label %108, !prof !4

103:                                              ; preds = %100
  %104 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 5, i64 0, i32 2
  %105 = load %"struct.hb_ot_map_t::stage_map_t"*, %"struct.hb_ot_map_t::stage_map_t"** %104, align 8
  %106 = zext i32 %101 to i64
  %107 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %105, i64 %106
  br label %108

108:                                              ; preds = %103, %100
  %109 = phi %"struct.hb_ot_map_t::stage_map_t"* [ %107, %103 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.hb_ot_map_t::stage_map_t"*), %100 ]
  %110 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %109, i64 0, i32 0
  %111 = load i32, i32* %110, align 8
  br label %112

112:                                              ; preds = %108, %98
  %113 = phi i32 [ %111, %108 ], [ 0, %98 ]
  %114 = icmp ugt i32 %95, %90
  br i1 %114, label %115, label %120

115:                                              ; preds = %112
  %116 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 5, i64 0, i32 2
  %117 = load %"struct.hb_ot_map_t::stage_map_t"*, %"struct.hb_ot_map_t::stage_map_t"** %116, align 8
  %118 = zext i32 %90 to i64
  %119 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %117, i64 %118, i32 0
  br label %122

120:                                              ; preds = %112
  %121 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 4, i64 0, i32 1
  br label %122

122:                                              ; preds = %120, %115
  %123 = phi i32* [ %119, %115 ], [ %121, %120 ]
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, %113
  br i1 %125, label %135, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 4, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp ugt i32 %128, %113
  br i1 %129, label %130, label %135, !prof !4

130:                                              ; preds = %126
  %131 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 4, i64 0, i32 2
  %132 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %131, align 8
  %133 = zext i32 %113 to i64
  %134 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %132, i64 %133
  br label %135

135:                                              ; preds = %130, %126, %122
  %136 = phi %"struct.hb_ot_map_t::lookup_map_t"* [ null, %122 ], [ %134, %130 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.hb_ot_map_t::lookup_map_t"*), %126 ]
  store %"struct.hb_ot_map_t::lookup_map_t"* %136, %"struct.hb_ot_map_t::lookup_map_t"** %91, align 8
  %137 = sub i32 %124, %113
  br label %138

138:                                              ; preds = %97, %135
  %139 = phi i32 [ %137, %135 ], [ 0, %97 ]
  store i32 %139, i32* %93, align 4
  %140 = getelementptr inbounds i8, i8* %2, i64 32
  %141 = getelementptr inbounds i8, i8* %2, i64 44
  store i8 %54, i8* %141, align 4
  br i1 %60, label %170, label %142

142:                                              ; preds = %138
  %143 = add nsw i32 %59, -1
  br label %144

144:                                              ; preds = %159, %142
  %145 = phi i32 [ %143, %142 ], [ %161, %159 ]
  %146 = phi i32 [ 0, %142 ], [ %160, %159 ]
  %147 = add i32 %146, %145
  %148 = lshr i32 %147, 1
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %149, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp ugt i32 %151, 1886545254
  br i1 %152, label %153, label %155

153:                                              ; preds = %144
  %154 = add nsw i32 %148, -1
  br label %159

155:                                              ; preds = %144
  %156 = icmp eq i32 %151, 1886545254
  br i1 %156, label %163, label %157

157:                                              ; preds = %155
  %158 = add nuw nsw i32 %148, 1
  br label %159

159:                                              ; preds = %157, %153
  %160 = phi i32 [ %146, %153 ], [ %158, %157 ]
  %161 = phi i32 [ %154, %153 ], [ %145, %157 ]
  %162 = icmp sgt i32 %160, %161
  br i1 %162, label %170, label %144

163:                                              ; preds = %155
  %164 = zext i32 %148 to i64
  %165 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %164
  %166 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %165, null
  br i1 %166, label %170, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %164, i32 2, i64 0
  %169 = load i32, i32* %168, align 4
  br label %170

170:                                              ; preds = %159, %167, %163, %138
  %171 = phi i32 [ %169, %167 ], [ -1, %163 ], [ -1, %138 ], [ -1, %159 ]
  %172 = bitcast i8* %140 to %"struct.hb_ot_map_t::lookup_map_t"**
  %173 = getelementptr inbounds i8, i8* %2, i64 40
  %174 = bitcast i8* %173 to i32*
  %175 = icmp ult i32 %95, %171
  br i1 %175, label %176, label %177, !prof !2

176:                                              ; preds = %170
  store %"struct.hb_ot_map_t::lookup_map_t"* null, %"struct.hb_ot_map_t::lookup_map_t"** %172, align 8
  br label %217

177:                                              ; preds = %170
  %178 = icmp eq i32 %171, 0
  br i1 %178, label %191, label %179

179:                                              ; preds = %177
  %180 = add i32 %171, -1
  %181 = icmp ugt i32 %95, %180
  br i1 %181, label %182, label %187, !prof !4

182:                                              ; preds = %179
  %183 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 5, i64 0, i32 2
  %184 = load %"struct.hb_ot_map_t::stage_map_t"*, %"struct.hb_ot_map_t::stage_map_t"** %183, align 8
  %185 = zext i32 %180 to i64
  %186 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %184, i64 %185
  br label %187

187:                                              ; preds = %182, %179
  %188 = phi %"struct.hb_ot_map_t::stage_map_t"* [ %186, %182 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.hb_ot_map_t::stage_map_t"*), %179 ]
  %189 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %188, i64 0, i32 0
  %190 = load i32, i32* %189, align 8
  br label %191

191:                                              ; preds = %187, %177
  %192 = phi i32 [ %190, %187 ], [ 0, %177 ]
  %193 = icmp ugt i32 %95, %171
  br i1 %193, label %194, label %199

194:                                              ; preds = %191
  %195 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 5, i64 0, i32 2
  %196 = load %"struct.hb_ot_map_t::stage_map_t"*, %"struct.hb_ot_map_t::stage_map_t"** %195, align 8
  %197 = zext i32 %171 to i64
  %198 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %196, i64 %197, i32 0
  br label %201

199:                                              ; preds = %191
  %200 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 4, i64 0, i32 1
  br label %201

201:                                              ; preds = %199, %194
  %202 = phi i32* [ %198, %194 ], [ %200, %199 ]
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %203, %192
  br i1 %204, label %214, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 4, i64 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = icmp ugt i32 %207, %192
  br i1 %208, label %209, label %214, !prof !4

209:                                              ; preds = %205
  %210 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 4, i64 0, i32 2
  %211 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %210, align 8
  %212 = zext i32 %192 to i64
  %213 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %211, i64 %212
  br label %214

214:                                              ; preds = %209, %205, %201
  %215 = phi %"struct.hb_ot_map_t::lookup_map_t"* [ null, %201 ], [ %213, %209 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.hb_ot_map_t::lookup_map_t"*), %205 ]
  store %"struct.hb_ot_map_t::lookup_map_t"* %215, %"struct.hb_ot_map_t::lookup_map_t"** %172, align 8
  %216 = sub i32 %203, %192
  br label %217

217:                                              ; preds = %176, %214
  %218 = phi i32 [ %216, %214 ], [ 0, %176 ]
  store i32 %218, i32* %174, align 4
  %219 = getelementptr inbounds i8, i8* %2, i64 48
  %220 = getelementptr inbounds i8, i8* %2, i64 60
  store i8 %54, i8* %220, align 4
  br i1 %60, label %249, label %221

221:                                              ; preds = %217
  %222 = add nsw i32 %59, -1
  br label %223

223:                                              ; preds = %238, %221
  %224 = phi i32 [ %222, %221 ], [ %240, %238 ]
  %225 = phi i32 [ 0, %221 ], [ %239, %238 ]
  %226 = add i32 %225, %224
  %227 = lshr i32 %226, 1
  %228 = zext i32 %227 to i64
  %229 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %228, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = icmp ugt i32 %230, 1651275622
  br i1 %231, label %232, label %234

232:                                              ; preds = %223
  %233 = add nsw i32 %227, -1
  br label %238

234:                                              ; preds = %223
  %235 = icmp eq i32 %230, 1651275622
  br i1 %235, label %242, label %236

236:                                              ; preds = %234
  %237 = add nuw nsw i32 %227, 1
  br label %238

238:                                              ; preds = %236, %232
  %239 = phi i32 [ %225, %232 ], [ %237, %236 ]
  %240 = phi i32 [ %233, %232 ], [ %224, %236 ]
  %241 = icmp sgt i32 %239, %240
  br i1 %241, label %249, label %223

242:                                              ; preds = %234
  %243 = zext i32 %227 to i64
  %244 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %243
  %245 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %244, null
  br i1 %245, label %249, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %243, i32 2, i64 0
  %248 = load i32, i32* %247, align 4
  br label %249

249:                                              ; preds = %238, %246, %242, %217
  %250 = phi i32 [ %248, %246 ], [ -1, %242 ], [ -1, %217 ], [ -1, %238 ]
  %251 = bitcast i8* %219 to %"struct.hb_ot_map_t::lookup_map_t"**
  %252 = getelementptr inbounds i8, i8* %2, i64 56
  %253 = bitcast i8* %252 to i32*
  %254 = icmp ult i32 %95, %250
  br i1 %254, label %255, label %256, !prof !2

255:                                              ; preds = %249
  store %"struct.hb_ot_map_t::lookup_map_t"* null, %"struct.hb_ot_map_t::lookup_map_t"** %251, align 8
  br label %296

256:                                              ; preds = %249
  %257 = icmp eq i32 %250, 0
  br i1 %257, label %270, label %258

258:                                              ; preds = %256
  %259 = add i32 %250, -1
  %260 = icmp ugt i32 %95, %259
  br i1 %260, label %261, label %266, !prof !4

261:                                              ; preds = %258
  %262 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 5, i64 0, i32 2
  %263 = load %"struct.hb_ot_map_t::stage_map_t"*, %"struct.hb_ot_map_t::stage_map_t"** %262, align 8
  %264 = zext i32 %259 to i64
  %265 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %263, i64 %264
  br label %266

266:                                              ; preds = %261, %258
  %267 = phi %"struct.hb_ot_map_t::stage_map_t"* [ %265, %261 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.hb_ot_map_t::stage_map_t"*), %258 ]
  %268 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %267, i64 0, i32 0
  %269 = load i32, i32* %268, align 8
  br label %270

270:                                              ; preds = %266, %256
  %271 = phi i32 [ %269, %266 ], [ 0, %256 ]
  %272 = icmp ugt i32 %95, %250
  br i1 %272, label %273, label %278

273:                                              ; preds = %270
  %274 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 5, i64 0, i32 2
  %275 = load %"struct.hb_ot_map_t::stage_map_t"*, %"struct.hb_ot_map_t::stage_map_t"** %274, align 8
  %276 = zext i32 %250 to i64
  %277 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %275, i64 %276, i32 0
  br label %280

278:                                              ; preds = %270
  %279 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 4, i64 0, i32 1
  br label %280

280:                                              ; preds = %278, %273
  %281 = phi i32* [ %277, %273 ], [ %279, %278 ]
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, %271
  br i1 %283, label %293, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 4, i64 0, i32 1
  %286 = load i32, i32* %285, align 4
  %287 = icmp ugt i32 %286, %271
  br i1 %287, label %288, label %293, !prof !4

288:                                              ; preds = %284
  %289 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 4, i64 0, i32 2
  %290 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %289, align 8
  %291 = zext i32 %271 to i64
  %292 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %290, i64 %291
  br label %293

293:                                              ; preds = %288, %284, %280
  %294 = phi %"struct.hb_ot_map_t::lookup_map_t"* [ null, %280 ], [ %292, %288 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.hb_ot_map_t::lookup_map_t"*), %284 ]
  store %"struct.hb_ot_map_t::lookup_map_t"* %294, %"struct.hb_ot_map_t::lookup_map_t"** %251, align 8
  %295 = sub i32 %282, %271
  br label %296

296:                                              ; preds = %255, %293
  %297 = phi i32 [ %295, %293 ], [ 0, %255 ]
  store i32 %297, i32* %253, align 4
  %298 = getelementptr inbounds i8, i8* %2, i64 64
  %299 = getelementptr inbounds i8, i8* %2, i64 76
  store i8 %54, i8* %299, align 4
  br i1 %60, label %328, label %300

300:                                              ; preds = %296
  %301 = add nsw i32 %59, -1
  br label %302

302:                                              ; preds = %317, %300
  %303 = phi i32 [ %301, %300 ], [ %319, %317 ]
  %304 = phi i32 [ 0, %300 ], [ %318, %317 ]
  %305 = add i32 %304, %303
  %306 = lshr i32 %305, 1
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %307, i32 0
  %309 = load i32, i32* %308, align 4
  %310 = icmp ugt i32 %309, 1886614630
  br i1 %310, label %311, label %313

311:                                              ; preds = %302
  %312 = add nsw i32 %306, -1
  br label %317

313:                                              ; preds = %302
  %314 = icmp eq i32 %309, 1886614630
  br i1 %314, label %321, label %315

315:                                              ; preds = %313
  %316 = add nuw nsw i32 %306, 1
  br label %317

317:                                              ; preds = %315, %311
  %318 = phi i32 [ %304, %311 ], [ %316, %315 ]
  %319 = phi i32 [ %312, %311 ], [ %303, %315 ]
  %320 = icmp sgt i32 %318, %319
  br i1 %320, label %328, label %302

321:                                              ; preds = %313
  %322 = zext i32 %306 to i64
  %323 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %322
  %324 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %323, null
  br i1 %324, label %328, label %325

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %322, i32 2, i64 0
  %327 = load i32, i32* %326, align 4
  br label %328

328:                                              ; preds = %317, %325, %321, %296
  %329 = phi i32 [ %327, %325 ], [ -1, %321 ], [ -1, %296 ], [ -1, %317 ]
  %330 = bitcast i8* %298 to %"struct.hb_ot_map_t::lookup_map_t"**
  %331 = getelementptr inbounds i8, i8* %2, i64 72
  %332 = bitcast i8* %331 to i32*
  %333 = icmp ult i32 %95, %329
  br i1 %333, label %334, label %335, !prof !2

334:                                              ; preds = %328
  store %"struct.hb_ot_map_t::lookup_map_t"* null, %"struct.hb_ot_map_t::lookup_map_t"** %330, align 8
  br label %375

335:                                              ; preds = %328
  %336 = icmp eq i32 %329, 0
  br i1 %336, label %349, label %337

337:                                              ; preds = %335
  %338 = add i32 %329, -1
  %339 = icmp ugt i32 %95, %338
  br i1 %339, label %340, label %345, !prof !4

340:                                              ; preds = %337
  %341 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 5, i64 0, i32 2
  %342 = load %"struct.hb_ot_map_t::stage_map_t"*, %"struct.hb_ot_map_t::stage_map_t"** %341, align 8
  %343 = zext i32 %338 to i64
  %344 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %342, i64 %343
  br label %345

345:                                              ; preds = %340, %337
  %346 = phi %"struct.hb_ot_map_t::stage_map_t"* [ %344, %340 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.hb_ot_map_t::stage_map_t"*), %337 ]
  %347 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %346, i64 0, i32 0
  %348 = load i32, i32* %347, align 8
  br label %349

349:                                              ; preds = %345, %335
  %350 = phi i32 [ %348, %345 ], [ 0, %335 ]
  %351 = icmp ugt i32 %95, %329
  br i1 %351, label %352, label %357

352:                                              ; preds = %349
  %353 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 5, i64 0, i32 2
  %354 = load %"struct.hb_ot_map_t::stage_map_t"*, %"struct.hb_ot_map_t::stage_map_t"** %353, align 8
  %355 = zext i32 %329 to i64
  %356 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %354, i64 %355, i32 0
  br label %359

357:                                              ; preds = %349
  %358 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 4, i64 0, i32 1
  br label %359

359:                                              ; preds = %357, %352
  %360 = phi i32* [ %356, %352 ], [ %358, %357 ]
  %361 = load i32, i32* %360, align 4
  %362 = icmp eq i32 %361, %350
  br i1 %362, label %372, label %363

363:                                              ; preds = %359
  %364 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 4, i64 0, i32 1
  %365 = load i32, i32* %364, align 4
  %366 = icmp ugt i32 %365, %350
  br i1 %366, label %367, label %372, !prof !4

367:                                              ; preds = %363
  %368 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 4, i64 0, i32 2
  %369 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %368, align 8
  %370 = zext i32 %350 to i64
  %371 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %369, i64 %370
  br label %372

372:                                              ; preds = %367, %363, %359
  %373 = phi %"struct.hb_ot_map_t::lookup_map_t"* [ null, %359 ], [ %371, %367 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.hb_ot_map_t::lookup_map_t"*), %363 ]
  store %"struct.hb_ot_map_t::lookup_map_t"* %373, %"struct.hb_ot_map_t::lookup_map_t"** %330, align 8
  %374 = sub i32 %361, %350
  br label %375

375:                                              ; preds = %334, %372
  %376 = phi i32 [ %374, %372 ], [ 0, %334 ]
  store i32 %376, i32* %332, align 4
  %377 = getelementptr inbounds i8, i8* %2, i64 80
  %378 = getelementptr inbounds i8, i8* %2, i64 92
  store i8 %54, i8* %378, align 4
  br i1 %60, label %407, label %379

379:                                              ; preds = %375
  %380 = add nsw i32 %59, -1
  br label %381

381:                                              ; preds = %396, %379
  %382 = phi i32 [ %380, %379 ], [ %398, %396 ]
  %383 = phi i32 [ 0, %379 ], [ %397, %396 ]
  %384 = add i32 %383, %382
  %385 = lshr i32 %384, 1
  %386 = zext i32 %385 to i64
  %387 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %386, i32 0
  %388 = load i32, i32* %387, align 4
  %389 = icmp ugt i32 %388, 1986098293
  br i1 %389, label %390, label %392

390:                                              ; preds = %381
  %391 = add nsw i32 %385, -1
  br label %396

392:                                              ; preds = %381
  %393 = icmp eq i32 %388, 1986098293
  br i1 %393, label %400, label %394

394:                                              ; preds = %392
  %395 = add nuw nsw i32 %385, 1
  br label %396

396:                                              ; preds = %394, %390
  %397 = phi i32 [ %383, %390 ], [ %395, %394 ]
  %398 = phi i32 [ %391, %390 ], [ %382, %394 ]
  %399 = icmp sgt i32 %397, %398
  br i1 %399, label %407, label %381

400:                                              ; preds = %392
  %401 = zext i32 %385 to i64
  %402 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %401
  %403 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %402, null
  br i1 %403, label %407, label %404

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %401, i32 2, i64 0
  %406 = load i32, i32* %405, align 4
  br label %407

407:                                              ; preds = %396, %404, %400, %375
  %408 = phi i32 [ %406, %404 ], [ -1, %400 ], [ -1, %375 ], [ -1, %396 ]
  %409 = bitcast i8* %377 to %"struct.hb_ot_map_t::lookup_map_t"**
  %410 = getelementptr inbounds i8, i8* %2, i64 88
  %411 = bitcast i8* %410 to i32*
  %412 = icmp ult i32 %95, %408
  br i1 %412, label %413, label %414, !prof !2

413:                                              ; preds = %407
  store %"struct.hb_ot_map_t::lookup_map_t"* null, %"struct.hb_ot_map_t::lookup_map_t"** %409, align 8
  br label %454

414:                                              ; preds = %407
  %415 = icmp eq i32 %408, 0
  br i1 %415, label %428, label %416

416:                                              ; preds = %414
  %417 = add i32 %408, -1
  %418 = icmp ugt i32 %95, %417
  br i1 %418, label %419, label %424, !prof !4

419:                                              ; preds = %416
  %420 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 5, i64 0, i32 2
  %421 = load %"struct.hb_ot_map_t::stage_map_t"*, %"struct.hb_ot_map_t::stage_map_t"** %420, align 8
  %422 = zext i32 %417 to i64
  %423 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %421, i64 %422
  br label %424

424:                                              ; preds = %419, %416
  %425 = phi %"struct.hb_ot_map_t::stage_map_t"* [ %423, %419 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.hb_ot_map_t::stage_map_t"*), %416 ]
  %426 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %425, i64 0, i32 0
  %427 = load i32, i32* %426, align 8
  br label %428

428:                                              ; preds = %424, %414
  %429 = phi i32 [ %427, %424 ], [ 0, %414 ]
  %430 = icmp ugt i32 %95, %408
  br i1 %430, label %431, label %436

431:                                              ; preds = %428
  %432 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 5, i64 0, i32 2
  %433 = load %"struct.hb_ot_map_t::stage_map_t"*, %"struct.hb_ot_map_t::stage_map_t"** %432, align 8
  %434 = zext i32 %408 to i64
  %435 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %433, i64 %434, i32 0
  br label %438

436:                                              ; preds = %428
  %437 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 4, i64 0, i32 1
  br label %438

438:                                              ; preds = %436, %431
  %439 = phi i32* [ %435, %431 ], [ %437, %436 ]
  %440 = load i32, i32* %439, align 4
  %441 = icmp eq i32 %440, %429
  br i1 %441, label %451, label %442

442:                                              ; preds = %438
  %443 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 4, i64 0, i32 1
  %444 = load i32, i32* %443, align 4
  %445 = icmp ugt i32 %444, %429
  br i1 %445, label %446, label %451, !prof !4

446:                                              ; preds = %442
  %447 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 4, i64 0, i32 2
  %448 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %447, align 8
  %449 = zext i32 %429 to i64
  %450 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %448, i64 %449
  br label %451

451:                                              ; preds = %446, %442, %438
  %452 = phi %"struct.hb_ot_map_t::lookup_map_t"* [ null, %438 ], [ %450, %446 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.hb_ot_map_t::lookup_map_t"*), %442 ]
  store %"struct.hb_ot_map_t::lookup_map_t"* %452, %"struct.hb_ot_map_t::lookup_map_t"** %409, align 8
  %453 = sub i32 %440, %429
  br label %454

454:                                              ; preds = %413, %451
  %455 = phi i32 [ %453, %451 ], [ 0, %413 ]
  store i32 %455, i32* %411, align 4
  %456 = getelementptr inbounds i8, i8* %2, i64 96
  %457 = bitcast i8* %456 to [17 x i32]*
  %458 = add nsw i32 %59, -1
  br i1 %60, label %459, label %460

459:                                              ; preds = %454
  call void @llvm.memset.p0i8.i64(i8* align 4 %456, i8 0, i64 68, i1 false)
  br label %499

460:                                              ; preds = %454, %494
  %461 = phi i64 [ %497, %494 ], [ 0, %454 ]
  %462 = lshr i64 2548, %461
  %463 = and i64 %462, 1
  %464 = icmp eq i64 %463, 0
  br i1 %464, label %494, label %465

465:                                              ; preds = %460
  %466 = getelementptr inbounds [17 x %struct.hb_ot_map_feature_t], [17 x %struct.hb_ot_map_feature_t]* @_ZL14indic_features, i64 0, i64 %461, i32 0
  %467 = load i32, i32* %466, align 8
  br label %468

468:                                              ; preds = %483, %465
  %469 = phi i32 [ %458, %465 ], [ %485, %483 ]
  %470 = phi i32 [ 0, %465 ], [ %484, %483 ]
  %471 = add i32 %470, %469
  %472 = lshr i32 %471, 1
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %473, i32 0
  %475 = load i32, i32* %474, align 4
  %476 = icmp ugt i32 %475, %467
  br i1 %476, label %477, label %479

477:                                              ; preds = %468
  %478 = add nsw i32 %472, -1
  br label %483

479:                                              ; preds = %468
  %480 = icmp ult i32 %475, %467
  br i1 %480, label %481, label %487

481:                                              ; preds = %479
  %482 = add nuw nsw i32 %472, 1
  br label %483

483:                                              ; preds = %481, %477
  %484 = phi i32 [ %470, %477 ], [ %482, %481 ]
  %485 = phi i32 [ %478, %477 ], [ %469, %481 ]
  %486 = icmp sgt i32 %484, %485
  br i1 %486, label %494, label %468

487:                                              ; preds = %479
  %488 = zext i32 %472 to i64
  %489 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %488
  %490 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %489, null
  br i1 %490, label %494, label %491

491:                                              ; preds = %487
  %492 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %57, i64 %488, i32 5
  %493 = load i32, i32* %492, align 4
  br label %494

494:                                              ; preds = %483, %460, %491, %487
  %495 = phi i32 [ 0, %460 ], [ %493, %491 ], [ 0, %487 ], [ 0, %483 ]
  %496 = getelementptr inbounds [17 x i32], [17 x i32]* %457, i64 0, i64 %461
  store i32 %495, i32* %496, align 4
  %497 = add nuw nsw i64 %461, 1
  %498 = icmp eq i64 %497, 17
  br i1 %498, label %499, label %460

499:                                              ; preds = %494, %459, %1
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL18data_destroy_indicPv(i8* nocapture) #0 {
  tail call void @free(i8* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL21preprocess_text_indicPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t(%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*) #0 {
  tail call void @_Z37_hb_preprocess_text_vowel_constraintsPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t(%struct.hb_ot_shape_plan_t* %0, %struct.hb_buffer_t* %1, %struct.hb_font_t* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZL15decompose_indicPK31hb_ot_shape_normalize_context_tjPjS2_(%struct.hb_ot_shape_normalize_context_t* nocapture readonly, i32, i32*, i32*) #0 {
  %5 = alloca i32, align 4
  switch i32 %1, label %6 [
    i32 2353, label %77
    i32 2524, label %77
    i32 2525, label %77
    i32 2964, label %77
    i32 3546, label %17
  ]

6:                                                ; preds = %4
  %7 = add i32 %1, -3548
  %8 = icmp ult i32 %7, 3
  br i1 %8, label %17, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.hb_ot_shape_normalize_context_t, %struct.hb_ot_shape_normalize_context_t* %0, i64 0, i32 3
  %11 = load %struct.hb_unicode_funcs_t*, %struct.hb_unicode_funcs_t** %10, align 8
  store i32 %1, i32* %2, align 4
  store i32 0, i32* %3, align 4
  %12 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %11, i64 0, i32 2, i32 6
  %13 = load i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)** %12, align 8
  %14 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %11, i64 0, i32 3, i32 6
  %15 = load i8*, i8** %14, align 8
  %16 = tail call i32 %13(%struct.hb_unicode_funcs_t* %11, i32 %1, i32* %2, i32* %3, i8* %15) #4
  br label %74

17:                                               ; preds = %4, %6
  %18 = getelementptr inbounds %struct.hb_ot_shape_normalize_context_t, %struct.hb_ot_shape_normalize_context_t* %0, i64 0, i32 0
  %19 = load %struct.hb_ot_shape_plan_t*, %struct.hb_ot_shape_plan_t** %18, align 8
  %20 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %19, i64 0, i32 4
  %21 = bitcast i8** %20 to %struct.indic_shape_plan_t**
  %22 = load %struct.indic_shape_plan_t*, %struct.indic_shape_plan_t** %21, align 8
  %23 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #4
  store i32 -1431655766, i32* %5, align 4
  %24 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %22, i64 0, i32 2
  %25 = load i8, i8* %24, align 1, !range !3
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %65

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.hb_ot_shape_normalize_context_t, %struct.hb_ot_shape_normalize_context_t* %0, i64 0, i32 2
  %29 = load %struct.hb_font_t*, %struct.hb_font_t** %28, align 8
  store i32 0, i32* %5, align 4
  %30 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %29, i64 0, i32 13
  %31 = load %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t** %30, align 8
  %32 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %31, i64 0, i32 3, i32 0, i32 2
  %33 = load i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)** %32, align 8
  %34 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %29, i64 0, i32 14
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %31, i64 0, i32 1, i32 2
  %37 = load i8*, i8** %36, align 8
  %38 = call i32 %33(%struct.hb_font_t* %29, i8* %35, i32 %1, i32* nonnull %5, i8* %37) #4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %66, label %40

40:                                               ; preds = %27
  %41 = load %struct.hb_font_t*, %struct.hb_font_t** %28, align 8
  %42 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %41, i64 0, i32 2
  %43 = load %struct.hb_face_t*, %struct.hb_face_t** %42, align 8
  %44 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %22, i64 0, i32 8, i32 0
  %45 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %22, i64 0, i32 8, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %66, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %22, i64 0, i32 8, i32 2
  br label %54

50:                                               ; preds = %54
  %51 = load i32, i32* %45, align 8
  %52 = zext i32 %51 to i64
  %53 = icmp ult i64 %64, %52
  br i1 %53, label %54, label %66

54:                                               ; preds = %50, %48
  %55 = phi i64 [ 0, %48 ], [ %64, %50 ]
  %56 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %44, align 8
  %57 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %56, i64 %55, i32 0
  %58 = load i16, i16* %57, align 4
  %59 = zext i16 %58 to i32
  %60 = load i8, i8* %49, align 4, !range !3
  %61 = zext i8 %60 to i32
  %62 = call i32 @hb_ot_layout_lookup_would_substitute(%struct.hb_face_t* %43, i32 %59, i32* nonnull %5, i32 1, i32 %61) #4
  %63 = icmp eq i32 %62, 0
  %64 = add nuw nsw i64 %55, 1
  br i1 %63, label %50, label %65

65:                                               ; preds = %54, %17
  store i32 3545, i32* %2, align 4
  store i32 %1, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #4
  br label %77

66:                                               ; preds = %50, %40, %27
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #4
  %67 = getelementptr inbounds %struct.hb_ot_shape_normalize_context_t, %struct.hb_ot_shape_normalize_context_t* %0, i64 0, i32 3
  %68 = load %struct.hb_unicode_funcs_t*, %struct.hb_unicode_funcs_t** %67, align 8
  store i32 %1, i32* %2, align 4
  store i32 0, i32* %3, align 4
  %69 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %68, i64 0, i32 2, i32 6
  %70 = load i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)** %69, align 8
  %71 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %68, i64 0, i32 3, i32 6
  %72 = load i8*, i8** %71, align 8
  %73 = call i32 %70(%struct.hb_unicode_funcs_t* %68, i32 %1, i32* %2, i32* %3, i8* %72) #4
  br label %74

74:                                               ; preds = %66, %9
  %75 = phi i32 [ %16, %9 ], [ %73, %66 ]
  %76 = icmp ne i32 %75, 0
  br label %77

77:                                               ; preds = %65, %4, %4, %4, %4, %74
  %78 = phi i1 [ %76, %74 ], [ false, %4 ], [ false, %4 ], [ false, %4 ], [ false, %4 ], [ true, %65 ]
  ret i1 %78
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZL13compose_indicPK31hb_ot_shape_normalize_context_tjjPj(%struct.hb_ot_shape_normalize_context_t* nocapture readonly, i32, i32, i32*) #0 {
  %5 = getelementptr inbounds %struct.hb_ot_shape_normalize_context_t, %struct.hb_ot_shape_normalize_context_t* %0, i64 0, i32 3
  %6 = load %struct.hb_unicode_funcs_t*, %struct.hb_unicode_funcs_t** %5, align 8
  %7 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %6, i64 0, i32 2, i32 2
  %8 = load i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)** %7, align 8
  %9 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %6, i64 0, i32 3, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i32 %8(%struct.hb_unicode_funcs_t* %6, i32 %1, i8* %10) #4
  %12 = icmp ult i32 %11, 32
  br i1 %12, label %13, label %23

13:                                               ; preds = %4
  %14 = load %struct.hb_unicode_funcs_t*, %struct.hb_unicode_funcs_t** %5, align 8
  %15 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %14, i64 0, i32 2, i32 2
  %16 = load i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)** %15, align 8
  %17 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %14, i64 0, i32 3, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i32 %16(%struct.hb_unicode_funcs_t* %14, i32 %1, i8* %18) #4
  %20 = shl i32 1, %19
  %21 = and i32 %20, 7168
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %40

23:                                               ; preds = %13, %4
  %24 = icmp eq i32 %1, 2479
  %25 = icmp eq i32 %2, 2492
  %26 = and i1 %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  store i32 2527, i32* %3, align 4
  br label %40

28:                                               ; preds = %23
  %29 = load %struct.hb_unicode_funcs_t*, %struct.hb_unicode_funcs_t** %5, align 8
  store i32 0, i32* %3, align 4
  %30 = icmp eq i32 %1, 0
  %31 = icmp eq i32 %2, 0
  %32 = or i1 %30, %31
  br i1 %32, label %40, label %33, !prof !2

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %29, i64 0, i32 2, i32 5
  %35 = load i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)** %34, align 8
  %36 = getelementptr inbounds %struct.hb_unicode_funcs_t, %struct.hb_unicode_funcs_t* %29, i64 0, i32 3, i32 5
  %37 = load i8*, i8** %36, align 8
  %38 = tail call i32 %35(%struct.hb_unicode_funcs_t* %29, i32 %1, i32 %2, i32* %3, i8* %37) #4
  %39 = icmp ne i32 %38, 0
  br label %40

40:                                               ; preds = %33, %28, %13, %27
  %41 = phi i1 [ true, %27 ], [ false, %13 ], [ %39, %33 ], [ false, %28 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL17setup_masks_indicPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t(%struct.hb_ot_shape_plan_t* nocapture readnone, %struct.hb_buffer_t* nocapture readonly, %struct.hb_font_t* nocapture readnone) #0 {
  %4 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 15
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 18
  %7 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = zext i32 %5 to i64
  br label %12

11:                                               ; preds = %98, %3
  ret void

12:                                               ; preds = %98, %9
  %13 = phi i64 [ 0, %9 ], [ %109, %98 ]
  %14 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %13, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = tail call zeroext i16 @_Z23hb_indic_get_categoriesj(i32 %15) #4
  %17 = zext i16 %16 to i32
  %18 = and i32 %17, 255
  %19 = lshr i32 %17, 8
  %20 = add i32 %15, -2387
  %21 = icmp ult i32 %20, 2
  br i1 %21, label %47, label %22, !prof !2

22:                                               ; preds = %12
  switch i32 %15, label %23 [
    i32 7414, label %47
    i32 7413, label %47
    i32 2675, label %47
    i32 2674, label %47
    i32 7405, label %46
    i32 7400, label %46
    i32 7399, label %46
    i32 7398, label %46
    i32 7397, label %46
    i32 7396, label %46
    i32 7395, label %46
    i32 7394, label %46
    i32 43255, label %43
    i32 43254, label %43
    i32 43253, label %43
    i32 43252, label %43
    i32 43251, label %43
    i32 43250, label %43
    i32 7404, label %43
    i32 7403, label %43
    i32 7402, label %43
    i32 7401, label %43
  ]

23:                                               ; preds = %22
  %24 = add i32 %15, -7406
  %25 = icmp ult i32 %24, 4
  br i1 %25, label %47, label %26, !prof !2

26:                                               ; preds = %23
  %27 = icmp eq i32 %15, 2641
  br i1 %27, label %47, label %28, !prof !2

28:                                               ; preds = %26
  %29 = or i32 %15, 2
  %30 = icmp eq i32 %29, 70403
  br i1 %30, label %47, label %31, !prof !2

31:                                               ; preds = %28
  %32 = add i32 %15, -70459
  %33 = icmp ult i32 %32, 2
  br i1 %33, label %47, label %34, !prof !2

34:                                               ; preds = %31
  switch i32 %15, label %38 [
    i32 2811, label %47
    i32 2901, label %47
    i32 2432, label %35
    i32 2556, label %36
    i32 3200, label %37
  ], !prof !5

35:                                               ; preds = %34
  br label %47

36:                                               ; preds = %34
  br label %47

37:                                               ; preds = %34
  br label %47

38:                                               ; preds = %34
  %39 = and i32 %15, -2
  %40 = icmp eq i32 %39, 8208
  br i1 %40, label %47, label %41, !prof !2

41:                                               ; preds = %38
  %42 = icmp eq i32 %15, 9676
  br i1 %42, label %47, label %44

43:                                               ; preds = %22, %22, %22, %22, %22, %22, %22, %22, %22, %22
  br label %47

44:                                               ; preds = %41
  %45 = icmp ult i32 %18, 32
  br i1 %45, label %47, label %81

46:                                               ; preds = %22, %22, %22, %22, %22, %22, %22, %22
  br label %47

47:                                               ; preds = %46, %44, %43, %41, %38, %37, %36, %35, %34, %34, %31, %28, %26, %23, %22, %22, %22, %22, %12
  %48 = phi i32 [ %18, %44 ], [ 11, %38 ], [ 3, %34 ], [ 3, %34 ], [ 3, %31 ], [ 8, %28 ], [ 7, %26 ], [ 18, %23 ], [ 1, %22 ], [ 8, %12 ], [ 11, %37 ], [ 11, %36 ], [ 11, %35 ], [ 12, %41 ], [ 1, %22 ], [ 1, %22 ], [ 1, %22 ], [ 18, %43 ], [ 10, %46 ]
  %49 = phi i32 [ %19, %44 ], [ %19, %38 ], [ %19, %34 ], [ %19, %34 ], [ %19, %31 ], [ %19, %28 ], [ 8, %26 ], [ %19, %23 ], [ %19, %22 ], [ %19, %12 ], [ %19, %37 ], [ %19, %36 ], [ %19, %35 ], [ %19, %41 ], [ %19, %22 ], [ %19, %22 ], [ %19, %22 ], [ %19, %43 ], [ %19, %46 ]
  %50 = shl i32 1, %48
  %51 = and i32 %50, 727046
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %47
  switch i32 %15, label %98 [
    i32 2352, label %54
    i32 2480, label %54
    i32 2544, label %54
    i32 2608, label %54
    i32 2736, label %54
    i32 2864, label %54
    i32 2992, label %54
    i32 3120, label %54
    i32 3248, label %54
    i32 3376, label %54
    i32 3515, label %54
  ]

54:                                               ; preds = %53, %53, %53, %53, %53, %53, %53, %53, %53, %53, %53
  br label %98

55:                                               ; preds = %47
  %56 = icmp eq i32 %48, 7
  br i1 %56, label %57, label %81

57:                                               ; preds = %55
  switch i32 %49, label %80 [
    i32 3, label %98
    i32 11, label %58
    i32 6, label %74
    i32 8, label %77
  ]

58:                                               ; preds = %57
  %59 = add i32 %15, -2432
  %60 = lshr i32 %59, 7
  switch i32 %60, label %98 [
    i32 7, label %73
    i32 0, label %68
    i32 1, label %69
    i32 2, label %70
    i32 3, label %71
    i32 4, label %72
    i32 5, label %61
    i32 6, label %64
  ]

61:                                               ; preds = %58
  %62 = icmp ult i32 %15, 3139
  %63 = select i1 %62, i32 7, i32 9
  br label %98

64:                                               ; preds = %58
  %65 = add i32 %15, -3267
  %66 = icmp ugt i32 %65, 19
  %67 = select i1 %66, i32 7, i32 9
  br label %98

68:                                               ; preds = %58
  br label %98

69:                                               ; preds = %58
  br label %98

70:                                               ; preds = %58
  br label %98

71:                                               ; preds = %58
  br label %98

72:                                               ; preds = %58
  br label %98

73:                                               ; preds = %58
  br label %98

74:                                               ; preds = %57
  %75 = add i32 %15, -2560
  %76 = icmp ult i32 %75, 768
  br i1 %76, label %88, label %98

77:                                               ; preds = %57
  %78 = add i32 %15, -2560
  %79 = icmp ult i32 %78, 896
  br i1 %79, label %93, label %98

80:                                               ; preds = %57
  br label %98

81:                                               ; preds = %55, %44
  %82 = phi i32 [ %49, %55 ], [ %19, %44 ]
  %83 = phi i32 [ %48, %55 ], [ %18, %44 ]
  %84 = phi i32 [ %50, %55 ], [ 0, %44 ]
  %85 = and i32 %84, 263424
  %86 = icmp eq i32 %85, 0
  %87 = select i1 %86, i32 %82, i32 14
  br label %98

88:                                               ; preds = %74
  %89 = lshr i32 %75, 7
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZL17setup_masks_indicPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t, i64 0, i64 %90
  %92 = load i32, i32* %91, align 4
  br label %98

93:                                               ; preds = %77
  %94 = lshr i32 %78, 7
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZL17setup_masks_indicPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t.10, i64 0, i64 %95
  %97 = load i32, i32* %96, align 4
  br label %98

98:                                               ; preds = %93, %77, %88, %74, %53, %54, %57, %58, %61, %64, %68, %69, %70, %71, %72, %73, %80, %81
  %99 = phi i32 [ %83, %81 ], [ 16, %54 ], [ %48, %53 ], [ 7, %57 ], [ 7, %58 ], [ 7, %61 ], [ 7, %64 ], [ 7, %68 ], [ 7, %69 ], [ 7, %70 ], [ 7, %71 ], [ 7, %72 ], [ 7, %73 ], [ 7, %74 ], [ 7, %77 ], [ 7, %80 ], [ 7, %88 ], [ 7, %93 ]
  %100 = phi i32 [ %87, %81 ], [ 4, %54 ], [ 4, %53 ], [ 2, %57 ], [ 9, %58 ], [ %63, %61 ], [ %67, %64 ], [ 12, %68 ], [ 12, %69 ], [ 12, %70 ], [ 12, %71 ], [ 12, %72 ], [ 12, %73 ], [ 9, %74 ], [ 9, %77 ], [ %49, %80 ], [ %92, %88 ], [ %97, %93 ]
  %101 = icmp eq i32 %15, 2817
  %102 = select i1 %101, i32 7, i32 %100, !prof !2
  %103 = trunc i32 %99 to i8
  %104 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %13, i32 4
  %105 = bitcast %union._hb_var_int_t* %104 to [4 x i8]*
  %106 = getelementptr inbounds [4 x i8], [4 x i8]* %105, i64 0, i64 2
  store i8 %103, i8* %106, align 2
  %107 = trunc i32 %102 to i8
  %108 = getelementptr inbounds [4 x i8], [4 x i8]* %105, i64 0, i64 3
  store i8 %107, i8* %108, align 1
  %109 = add nuw nsw i64 %13, 1
  %110 = icmp eq i64 %109, %10
  br i1 %110, label %11, label %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL21setup_syllables_indicPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readnone, %struct.hb_font_t* nocapture readnone, %struct.hb_buffer_t*) #0 {
  %4 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %7 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %1059, label %9

9:                                                ; preds = %1047, %3
  %10 = phi i32 [ %1057, %1047 ], [ 0, %3 ]
  %11 = phi i32 [ %1056, %1047 ], [ 0, %3 ]
  %12 = phi i32 [ %1049, %1047 ], [ 0, %3 ]
  %13 = phi i32 [ %1050, %1047 ], [ 0, %3 ]
  %14 = phi i32 [ %60, %1047 ], [ 39, %3 ]
  %15 = phi i32 [ %1051, %1047 ], [ 1, %3 ]
  %16 = zext i32 %14 to i64
  %17 = getelementptr inbounds [141 x i8], [141 x i8]* bitcast (<{ [40 x i8], [101 x i8] }>* @_ZL42_indic_syllable_machine_from_state_actions to [141 x i8]*), i64 0, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 10
  %20 = select i1 %19, i32 %10, i32 %11
  %21 = shl nuw nsw i32 %14, 1
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [283 x i8], [283 x i8]* @_ZL34_indic_syllable_machine_trans_keys, i64 0, i64 %22
  %24 = getelementptr inbounds [141 x i16], [141 x i16]* @_ZL37_indic_syllable_machine_index_offsets, i64 0, i64 %16
  %25 = load i16, i16* %24, align 2
  %26 = sext i16 %25 to i64
  %27 = getelementptr inbounds [1346 x i8], [1346 x i8]* @_ZL32_indic_syllable_machine_indicies, i64 0, i64 %26
  %28 = getelementptr inbounds [141 x i8], [141 x i8]* @_ZL33_indic_syllable_machine_key_spans, i64 0, i64 %16
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i64
  %31 = load i8, i8* %23, align 2
  %32 = zext i32 %10 to i64
  %33 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %32, i32 4
  %34 = bitcast %union._hb_var_int_t* %33 to [4 x i8]*
  %35 = getelementptr inbounds [4 x i8], [4 x i8]* %34, i64 0, i64 2
  %36 = load i8, i8* %35, align 2
  %37 = icmp ult i8 %36, %31
  br i1 %37, label %46, label %38

38:                                               ; preds = %9
  %39 = zext i8 %36 to i64
  %40 = zext i8 %31 to i64
  %41 = getelementptr inbounds i8, i8* %23, i64 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp ugt i8 %36, %42
  %44 = sub nsw i64 %39, %40
  %45 = select i1 %43, i64 %30, i64 %44
  br label %46

46:                                               ; preds = %38, %9
  %47 = phi i64 [ %30, %9 ], [ %45, %38 ]
  %48 = getelementptr inbounds i8, i8* %27, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i64
  br label %51

51:                                               ; preds = %1066, %46
  %52 = phi i32 [ %5, %1066 ], [ %10, %46 ]
  %53 = phi i32 [ %1060, %1066 ], [ %20, %46 ]
  %54 = phi i32 [ %1061, %1066 ], [ %12, %46 ]
  %55 = phi i32 [ %1062, %1066 ], [ %13, %46 ]
  %56 = phi i32 [ %1064, %1066 ], [ %15, %46 ]
  %57 = phi i64 [ %1071, %1066 ], [ %50, %46 ]
  %58 = getelementptr inbounds [153 x i8], [153 x i8]* @_ZL35_indic_syllable_machine_trans_targs, i64 0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = getelementptr inbounds [153 x i8], [153 x i8]* @_ZL37_indic_syllable_machine_trans_actions, i64 0, i64 %57
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %1047, label %64

64:                                               ; preds = %51
  %65 = sext i8 %62 to i32
  switch i32 %65, label %1047 [
    i32 2, label %66
    i32 11, label %68
    i32 13, label %133
    i32 14, label %197
    i32 17, label %262
    i32 19, label %327
    i32 15, label %392
    i32 16, label %457
    i32 1, label %522
    i32 3, label %586
    i32 7, label %651
    i32 8, label %716
    i32 4, label %781
    i32 6, label %846
    i32 18, label %1041
    i32 5, label %1043
    i32 12, label %1045
  ]

66:                                               ; preds = %64
  %67 = add i32 %52, 1
  br label %1047

68:                                               ; preds = %64
  %69 = add i32 %52, 1
  %70 = icmp ult i32 %53, %69
  br i1 %70, label %71, label %94

71:                                               ; preds = %68
  %72 = trunc i32 %56 to i8
  %73 = shl i8 %72, 4
  %74 = or i8 %73, 5
  %75 = zext i32 %53 to i64
  %76 = zext i32 %69 to i64
  %77 = sub nsw i64 %76, %75
  %78 = xor i64 %75, -1
  %79 = add nsw i64 %78, %76
  %80 = and i64 %77, 7
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %91, label %82

82:                                               ; preds = %71, %82
  %83 = phi i64 [ %88, %82 ], [ %75, %71 ]
  %84 = phi i64 [ %89, %82 ], [ %80, %71 ]
  %85 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %83, i32 3
  %86 = bitcast %union._hb_var_int_t* %85 to [4 x i8]*
  %87 = getelementptr inbounds [4 x i8], [4 x i8]* %86, i64 0, i64 3
  store i8 %74, i8* %87, align 1
  %88 = add nuw nsw i64 %83, 1
  %89 = add i64 %84, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %82, !llvm.loop !6

91:                                               ; preds = %82, %71
  %92 = phi i64 [ %75, %71 ], [ %88, %82 ]
  %93 = icmp ult i64 %79, 7
  br i1 %93, label %94, label %98

94:                                               ; preds = %91, %98, %68
  %95 = add i32 %56, 1
  %96 = icmp eq i32 %95, 16
  %97 = select i1 %96, i32 1, i32 %95, !prof !2
  br label %1047

98:                                               ; preds = %91, %98
  %99 = phi i64 [ %131, %98 ], [ %92, %91 ]
  %100 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %99, i32 3
  %101 = bitcast %union._hb_var_int_t* %100 to [4 x i8]*
  %102 = getelementptr inbounds [4 x i8], [4 x i8]* %101, i64 0, i64 3
  store i8 %74, i8* %102, align 1
  %103 = add nuw nsw i64 %99, 1
  %104 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %103, i32 3
  %105 = bitcast %union._hb_var_int_t* %104 to [4 x i8]*
  %106 = getelementptr inbounds [4 x i8], [4 x i8]* %105, i64 0, i64 3
  store i8 %74, i8* %106, align 1
  %107 = add nuw nsw i64 %99, 2
  %108 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %107, i32 3
  %109 = bitcast %union._hb_var_int_t* %108 to [4 x i8]*
  %110 = getelementptr inbounds [4 x i8], [4 x i8]* %109, i64 0, i64 3
  store i8 %74, i8* %110, align 1
  %111 = add nuw nsw i64 %99, 3
  %112 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %111, i32 3
  %113 = bitcast %union._hb_var_int_t* %112 to [4 x i8]*
  %114 = getelementptr inbounds [4 x i8], [4 x i8]* %113, i64 0, i64 3
  store i8 %74, i8* %114, align 1
  %115 = add nuw nsw i64 %99, 4
  %116 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %115, i32 3
  %117 = bitcast %union._hb_var_int_t* %116 to [4 x i8]*
  %118 = getelementptr inbounds [4 x i8], [4 x i8]* %117, i64 0, i64 3
  store i8 %74, i8* %118, align 1
  %119 = add nuw nsw i64 %99, 5
  %120 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %119, i32 3
  %121 = bitcast %union._hb_var_int_t* %120 to [4 x i8]*
  %122 = getelementptr inbounds [4 x i8], [4 x i8]* %121, i64 0, i64 3
  store i8 %74, i8* %122, align 1
  %123 = add nuw nsw i64 %99, 6
  %124 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %123, i32 3
  %125 = bitcast %union._hb_var_int_t* %124 to [4 x i8]*
  %126 = getelementptr inbounds [4 x i8], [4 x i8]* %125, i64 0, i64 3
  store i8 %74, i8* %126, align 1
  %127 = add nuw nsw i64 %99, 7
  %128 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %127, i32 3
  %129 = bitcast %union._hb_var_int_t* %128 to [4 x i8]*
  %130 = getelementptr inbounds [4 x i8], [4 x i8]* %129, i64 0, i64 3
  store i8 %74, i8* %130, align 1
  %131 = add nuw nsw i64 %99, 8
  %132 = icmp eq i64 %131, %76
  br i1 %132, label %94, label %98

133:                                              ; preds = %64
  %134 = add i32 %52, -1
  %135 = icmp ult i32 %53, %52
  br i1 %135, label %136, label %158

136:                                              ; preds = %133
  %137 = trunc i32 %56 to i8
  %138 = shl i8 %137, 4
  %139 = zext i32 %53 to i64
  %140 = zext i32 %52 to i64
  %141 = sub nsw i64 %140, %139
  %142 = xor i64 %139, -1
  %143 = add nsw i64 %142, %140
  %144 = and i64 %141, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %155, label %146

146:                                              ; preds = %136, %146
  %147 = phi i64 [ %152, %146 ], [ %139, %136 ]
  %148 = phi i64 [ %153, %146 ], [ %144, %136 ]
  %149 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %147, i32 3
  %150 = bitcast %union._hb_var_int_t* %149 to [4 x i8]*
  %151 = getelementptr inbounds [4 x i8], [4 x i8]* %150, i64 0, i64 3
  store i8 %138, i8* %151, align 1
  %152 = add nuw nsw i64 %147, 1
  %153 = add i64 %148, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %146, !llvm.loop !8

155:                                              ; preds = %146, %136
  %156 = phi i64 [ %139, %136 ], [ %152, %146 ]
  %157 = icmp ult i64 %143, 7
  br i1 %157, label %158, label %162

158:                                              ; preds = %155, %162, %133
  %159 = add i32 %56, 1
  %160 = icmp eq i32 %159, 16
  %161 = select i1 %160, i32 1, i32 %159, !prof !2
  br label %1047

162:                                              ; preds = %155, %162
  %163 = phi i64 [ %195, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %163, i32 3
  %165 = bitcast %union._hb_var_int_t* %164 to [4 x i8]*
  %166 = getelementptr inbounds [4 x i8], [4 x i8]* %165, i64 0, i64 3
  store i8 %138, i8* %166, align 1
  %167 = add nuw nsw i64 %163, 1
  %168 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %167, i32 3
  %169 = bitcast %union._hb_var_int_t* %168 to [4 x i8]*
  %170 = getelementptr inbounds [4 x i8], [4 x i8]* %169, i64 0, i64 3
  store i8 %138, i8* %170, align 1
  %171 = add nuw nsw i64 %163, 2
  %172 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %171, i32 3
  %173 = bitcast %union._hb_var_int_t* %172 to [4 x i8]*
  %174 = getelementptr inbounds [4 x i8], [4 x i8]* %173, i64 0, i64 3
  store i8 %138, i8* %174, align 1
  %175 = add nuw nsw i64 %163, 3
  %176 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %175, i32 3
  %177 = bitcast %union._hb_var_int_t* %176 to [4 x i8]*
  %178 = getelementptr inbounds [4 x i8], [4 x i8]* %177, i64 0, i64 3
  store i8 %138, i8* %178, align 1
  %179 = add nuw nsw i64 %163, 4
  %180 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %179, i32 3
  %181 = bitcast %union._hb_var_int_t* %180 to [4 x i8]*
  %182 = getelementptr inbounds [4 x i8], [4 x i8]* %181, i64 0, i64 3
  store i8 %138, i8* %182, align 1
  %183 = add nuw nsw i64 %163, 5
  %184 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %183, i32 3
  %185 = bitcast %union._hb_var_int_t* %184 to [4 x i8]*
  %186 = getelementptr inbounds [4 x i8], [4 x i8]* %185, i64 0, i64 3
  store i8 %138, i8* %186, align 1
  %187 = add nuw nsw i64 %163, 6
  %188 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %187, i32 3
  %189 = bitcast %union._hb_var_int_t* %188 to [4 x i8]*
  %190 = getelementptr inbounds [4 x i8], [4 x i8]* %189, i64 0, i64 3
  store i8 %138, i8* %190, align 1
  %191 = add nuw nsw i64 %163, 7
  %192 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %191, i32 3
  %193 = bitcast %union._hb_var_int_t* %192 to [4 x i8]*
  %194 = getelementptr inbounds [4 x i8], [4 x i8]* %193, i64 0, i64 3
  store i8 %138, i8* %194, align 1
  %195 = add nuw nsw i64 %163, 8
  %196 = icmp eq i64 %195, %140
  br i1 %196, label %158, label %162

197:                                              ; preds = %64
  %198 = add i32 %52, -1
  %199 = icmp ult i32 %53, %52
  br i1 %199, label %200, label %223

200:                                              ; preds = %197
  %201 = trunc i32 %56 to i8
  %202 = shl i8 %201, 4
  %203 = or i8 %202, 1
  %204 = zext i32 %53 to i64
  %205 = zext i32 %52 to i64
  %206 = sub nsw i64 %205, %204
  %207 = xor i64 %204, -1
  %208 = add nsw i64 %207, %205
  %209 = and i64 %206, 7
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %220, label %211

211:                                              ; preds = %200, %211
  %212 = phi i64 [ %217, %211 ], [ %204, %200 ]
  %213 = phi i64 [ %218, %211 ], [ %209, %200 ]
  %214 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %212, i32 3
  %215 = bitcast %union._hb_var_int_t* %214 to [4 x i8]*
  %216 = getelementptr inbounds [4 x i8], [4 x i8]* %215, i64 0, i64 3
  store i8 %203, i8* %216, align 1
  %217 = add nuw nsw i64 %212, 1
  %218 = add i64 %213, -1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %211, !llvm.loop !9

220:                                              ; preds = %211, %200
  %221 = phi i64 [ %204, %200 ], [ %217, %211 ]
  %222 = icmp ult i64 %208, 7
  br i1 %222, label %223, label %227

223:                                              ; preds = %220, %227, %197
  %224 = add i32 %56, 1
  %225 = icmp eq i32 %224, 16
  %226 = select i1 %225, i32 1, i32 %224, !prof !2
  br label %1047

227:                                              ; preds = %220, %227
  %228 = phi i64 [ %260, %227 ], [ %221, %220 ]
  %229 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %228, i32 3
  %230 = bitcast %union._hb_var_int_t* %229 to [4 x i8]*
  %231 = getelementptr inbounds [4 x i8], [4 x i8]* %230, i64 0, i64 3
  store i8 %203, i8* %231, align 1
  %232 = add nuw nsw i64 %228, 1
  %233 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %232, i32 3
  %234 = bitcast %union._hb_var_int_t* %233 to [4 x i8]*
  %235 = getelementptr inbounds [4 x i8], [4 x i8]* %234, i64 0, i64 3
  store i8 %203, i8* %235, align 1
  %236 = add nuw nsw i64 %228, 2
  %237 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %236, i32 3
  %238 = bitcast %union._hb_var_int_t* %237 to [4 x i8]*
  %239 = getelementptr inbounds [4 x i8], [4 x i8]* %238, i64 0, i64 3
  store i8 %203, i8* %239, align 1
  %240 = add nuw nsw i64 %228, 3
  %241 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %240, i32 3
  %242 = bitcast %union._hb_var_int_t* %241 to [4 x i8]*
  %243 = getelementptr inbounds [4 x i8], [4 x i8]* %242, i64 0, i64 3
  store i8 %203, i8* %243, align 1
  %244 = add nuw nsw i64 %228, 4
  %245 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %244, i32 3
  %246 = bitcast %union._hb_var_int_t* %245 to [4 x i8]*
  %247 = getelementptr inbounds [4 x i8], [4 x i8]* %246, i64 0, i64 3
  store i8 %203, i8* %247, align 1
  %248 = add nuw nsw i64 %228, 5
  %249 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %248, i32 3
  %250 = bitcast %union._hb_var_int_t* %249 to [4 x i8]*
  %251 = getelementptr inbounds [4 x i8], [4 x i8]* %250, i64 0, i64 3
  store i8 %203, i8* %251, align 1
  %252 = add nuw nsw i64 %228, 6
  %253 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %252, i32 3
  %254 = bitcast %union._hb_var_int_t* %253 to [4 x i8]*
  %255 = getelementptr inbounds [4 x i8], [4 x i8]* %254, i64 0, i64 3
  store i8 %203, i8* %255, align 1
  %256 = add nuw nsw i64 %228, 7
  %257 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %256, i32 3
  %258 = bitcast %union._hb_var_int_t* %257 to [4 x i8]*
  %259 = getelementptr inbounds [4 x i8], [4 x i8]* %258, i64 0, i64 3
  store i8 %203, i8* %259, align 1
  %260 = add nuw nsw i64 %228, 8
  %261 = icmp eq i64 %260, %205
  br i1 %261, label %223, label %227

262:                                              ; preds = %64
  %263 = add i32 %52, -1
  %264 = icmp ult i32 %53, %52
  br i1 %264, label %265, label %288

265:                                              ; preds = %262
  %266 = trunc i32 %56 to i8
  %267 = shl i8 %266, 4
  %268 = or i8 %267, 2
  %269 = zext i32 %53 to i64
  %270 = zext i32 %52 to i64
  %271 = sub nsw i64 %270, %269
  %272 = xor i64 %269, -1
  %273 = add nsw i64 %272, %270
  %274 = and i64 %271, 7
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %285, label %276

276:                                              ; preds = %265, %276
  %277 = phi i64 [ %282, %276 ], [ %269, %265 ]
  %278 = phi i64 [ %283, %276 ], [ %274, %265 ]
  %279 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %277, i32 3
  %280 = bitcast %union._hb_var_int_t* %279 to [4 x i8]*
  %281 = getelementptr inbounds [4 x i8], [4 x i8]* %280, i64 0, i64 3
  store i8 %268, i8* %281, align 1
  %282 = add nuw nsw i64 %277, 1
  %283 = add i64 %278, -1
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %285, label %276, !llvm.loop !10

285:                                              ; preds = %276, %265
  %286 = phi i64 [ %269, %265 ], [ %282, %276 ]
  %287 = icmp ult i64 %273, 7
  br i1 %287, label %288, label %292

288:                                              ; preds = %285, %292, %262
  %289 = add i32 %56, 1
  %290 = icmp eq i32 %289, 16
  %291 = select i1 %290, i32 1, i32 %289, !prof !2
  br label %1047

292:                                              ; preds = %285, %292
  %293 = phi i64 [ %325, %292 ], [ %286, %285 ]
  %294 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %293, i32 3
  %295 = bitcast %union._hb_var_int_t* %294 to [4 x i8]*
  %296 = getelementptr inbounds [4 x i8], [4 x i8]* %295, i64 0, i64 3
  store i8 %268, i8* %296, align 1
  %297 = add nuw nsw i64 %293, 1
  %298 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %297, i32 3
  %299 = bitcast %union._hb_var_int_t* %298 to [4 x i8]*
  %300 = getelementptr inbounds [4 x i8], [4 x i8]* %299, i64 0, i64 3
  store i8 %268, i8* %300, align 1
  %301 = add nuw nsw i64 %293, 2
  %302 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %301, i32 3
  %303 = bitcast %union._hb_var_int_t* %302 to [4 x i8]*
  %304 = getelementptr inbounds [4 x i8], [4 x i8]* %303, i64 0, i64 3
  store i8 %268, i8* %304, align 1
  %305 = add nuw nsw i64 %293, 3
  %306 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %305, i32 3
  %307 = bitcast %union._hb_var_int_t* %306 to [4 x i8]*
  %308 = getelementptr inbounds [4 x i8], [4 x i8]* %307, i64 0, i64 3
  store i8 %268, i8* %308, align 1
  %309 = add nuw nsw i64 %293, 4
  %310 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %309, i32 3
  %311 = bitcast %union._hb_var_int_t* %310 to [4 x i8]*
  %312 = getelementptr inbounds [4 x i8], [4 x i8]* %311, i64 0, i64 3
  store i8 %268, i8* %312, align 1
  %313 = add nuw nsw i64 %293, 5
  %314 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %313, i32 3
  %315 = bitcast %union._hb_var_int_t* %314 to [4 x i8]*
  %316 = getelementptr inbounds [4 x i8], [4 x i8]* %315, i64 0, i64 3
  store i8 %268, i8* %316, align 1
  %317 = add nuw nsw i64 %293, 6
  %318 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %317, i32 3
  %319 = bitcast %union._hb_var_int_t* %318 to [4 x i8]*
  %320 = getelementptr inbounds [4 x i8], [4 x i8]* %319, i64 0, i64 3
  store i8 %268, i8* %320, align 1
  %321 = add nuw nsw i64 %293, 7
  %322 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %321, i32 3
  %323 = bitcast %union._hb_var_int_t* %322 to [4 x i8]*
  %324 = getelementptr inbounds [4 x i8], [4 x i8]* %323, i64 0, i64 3
  store i8 %268, i8* %324, align 1
  %325 = add nuw nsw i64 %293, 8
  %326 = icmp eq i64 %325, %270
  br i1 %326, label %288, label %292

327:                                              ; preds = %64
  %328 = add i32 %52, -1
  %329 = icmp ult i32 %53, %52
  br i1 %329, label %330, label %353

330:                                              ; preds = %327
  %331 = trunc i32 %56 to i8
  %332 = shl i8 %331, 4
  %333 = or i8 %332, 3
  %334 = zext i32 %53 to i64
  %335 = zext i32 %52 to i64
  %336 = sub nsw i64 %335, %334
  %337 = xor i64 %334, -1
  %338 = add nsw i64 %337, %335
  %339 = and i64 %336, 7
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %350, label %341

341:                                              ; preds = %330, %341
  %342 = phi i64 [ %347, %341 ], [ %334, %330 ]
  %343 = phi i64 [ %348, %341 ], [ %339, %330 ]
  %344 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %342, i32 3
  %345 = bitcast %union._hb_var_int_t* %344 to [4 x i8]*
  %346 = getelementptr inbounds [4 x i8], [4 x i8]* %345, i64 0, i64 3
  store i8 %333, i8* %346, align 1
  %347 = add nuw nsw i64 %342, 1
  %348 = add i64 %343, -1
  %349 = icmp eq i64 %348, 0
  br i1 %349, label %350, label %341, !llvm.loop !11

350:                                              ; preds = %341, %330
  %351 = phi i64 [ %334, %330 ], [ %347, %341 ]
  %352 = icmp ult i64 %338, 7
  br i1 %352, label %353, label %357

353:                                              ; preds = %350, %357, %327
  %354 = add i32 %56, 1
  %355 = icmp eq i32 %354, 16
  %356 = select i1 %355, i32 1, i32 %354, !prof !2
  br label %1047

357:                                              ; preds = %350, %357
  %358 = phi i64 [ %390, %357 ], [ %351, %350 ]
  %359 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %358, i32 3
  %360 = bitcast %union._hb_var_int_t* %359 to [4 x i8]*
  %361 = getelementptr inbounds [4 x i8], [4 x i8]* %360, i64 0, i64 3
  store i8 %333, i8* %361, align 1
  %362 = add nuw nsw i64 %358, 1
  %363 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %362, i32 3
  %364 = bitcast %union._hb_var_int_t* %363 to [4 x i8]*
  %365 = getelementptr inbounds [4 x i8], [4 x i8]* %364, i64 0, i64 3
  store i8 %333, i8* %365, align 1
  %366 = add nuw nsw i64 %358, 2
  %367 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %366, i32 3
  %368 = bitcast %union._hb_var_int_t* %367 to [4 x i8]*
  %369 = getelementptr inbounds [4 x i8], [4 x i8]* %368, i64 0, i64 3
  store i8 %333, i8* %369, align 1
  %370 = add nuw nsw i64 %358, 3
  %371 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %370, i32 3
  %372 = bitcast %union._hb_var_int_t* %371 to [4 x i8]*
  %373 = getelementptr inbounds [4 x i8], [4 x i8]* %372, i64 0, i64 3
  store i8 %333, i8* %373, align 1
  %374 = add nuw nsw i64 %358, 4
  %375 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %374, i32 3
  %376 = bitcast %union._hb_var_int_t* %375 to [4 x i8]*
  %377 = getelementptr inbounds [4 x i8], [4 x i8]* %376, i64 0, i64 3
  store i8 %333, i8* %377, align 1
  %378 = add nuw nsw i64 %358, 5
  %379 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %378, i32 3
  %380 = bitcast %union._hb_var_int_t* %379 to [4 x i8]*
  %381 = getelementptr inbounds [4 x i8], [4 x i8]* %380, i64 0, i64 3
  store i8 %333, i8* %381, align 1
  %382 = add nuw nsw i64 %358, 6
  %383 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %382, i32 3
  %384 = bitcast %union._hb_var_int_t* %383 to [4 x i8]*
  %385 = getelementptr inbounds [4 x i8], [4 x i8]* %384, i64 0, i64 3
  store i8 %333, i8* %385, align 1
  %386 = add nuw nsw i64 %358, 7
  %387 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %386, i32 3
  %388 = bitcast %union._hb_var_int_t* %387 to [4 x i8]*
  %389 = getelementptr inbounds [4 x i8], [4 x i8]* %388, i64 0, i64 3
  store i8 %333, i8* %389, align 1
  %390 = add nuw nsw i64 %358, 8
  %391 = icmp eq i64 %390, %335
  br i1 %391, label %353, label %357

392:                                              ; preds = %64
  %393 = add i32 %52, -1
  %394 = icmp ult i32 %53, %52
  br i1 %394, label %395, label %418

395:                                              ; preds = %392
  %396 = trunc i32 %56 to i8
  %397 = shl i8 %396, 4
  %398 = or i8 %397, 4
  %399 = zext i32 %53 to i64
  %400 = zext i32 %52 to i64
  %401 = sub nsw i64 %400, %399
  %402 = xor i64 %399, -1
  %403 = add nsw i64 %402, %400
  %404 = and i64 %401, 7
  %405 = icmp eq i64 %404, 0
  br i1 %405, label %415, label %406

406:                                              ; preds = %395, %406
  %407 = phi i64 [ %412, %406 ], [ %399, %395 ]
  %408 = phi i64 [ %413, %406 ], [ %404, %395 ]
  %409 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %407, i32 3
  %410 = bitcast %union._hb_var_int_t* %409 to [4 x i8]*
  %411 = getelementptr inbounds [4 x i8], [4 x i8]* %410, i64 0, i64 3
  store i8 %398, i8* %411, align 1
  %412 = add nuw nsw i64 %407, 1
  %413 = add i64 %408, -1
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %415, label %406, !llvm.loop !12

415:                                              ; preds = %406, %395
  %416 = phi i64 [ %399, %395 ], [ %412, %406 ]
  %417 = icmp ult i64 %403, 7
  br i1 %417, label %418, label %422

418:                                              ; preds = %415, %422, %392
  %419 = add i32 %56, 1
  %420 = icmp eq i32 %419, 16
  %421 = select i1 %420, i32 1, i32 %419, !prof !2
  br label %1047

422:                                              ; preds = %415, %422
  %423 = phi i64 [ %455, %422 ], [ %416, %415 ]
  %424 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %423, i32 3
  %425 = bitcast %union._hb_var_int_t* %424 to [4 x i8]*
  %426 = getelementptr inbounds [4 x i8], [4 x i8]* %425, i64 0, i64 3
  store i8 %398, i8* %426, align 1
  %427 = add nuw nsw i64 %423, 1
  %428 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %427, i32 3
  %429 = bitcast %union._hb_var_int_t* %428 to [4 x i8]*
  %430 = getelementptr inbounds [4 x i8], [4 x i8]* %429, i64 0, i64 3
  store i8 %398, i8* %430, align 1
  %431 = add nuw nsw i64 %423, 2
  %432 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %431, i32 3
  %433 = bitcast %union._hb_var_int_t* %432 to [4 x i8]*
  %434 = getelementptr inbounds [4 x i8], [4 x i8]* %433, i64 0, i64 3
  store i8 %398, i8* %434, align 1
  %435 = add nuw nsw i64 %423, 3
  %436 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %435, i32 3
  %437 = bitcast %union._hb_var_int_t* %436 to [4 x i8]*
  %438 = getelementptr inbounds [4 x i8], [4 x i8]* %437, i64 0, i64 3
  store i8 %398, i8* %438, align 1
  %439 = add nuw nsw i64 %423, 4
  %440 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %439, i32 3
  %441 = bitcast %union._hb_var_int_t* %440 to [4 x i8]*
  %442 = getelementptr inbounds [4 x i8], [4 x i8]* %441, i64 0, i64 3
  store i8 %398, i8* %442, align 1
  %443 = add nuw nsw i64 %423, 5
  %444 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %443, i32 3
  %445 = bitcast %union._hb_var_int_t* %444 to [4 x i8]*
  %446 = getelementptr inbounds [4 x i8], [4 x i8]* %445, i64 0, i64 3
  store i8 %398, i8* %446, align 1
  %447 = add nuw nsw i64 %423, 6
  %448 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %447, i32 3
  %449 = bitcast %union._hb_var_int_t* %448 to [4 x i8]*
  %450 = getelementptr inbounds [4 x i8], [4 x i8]* %449, i64 0, i64 3
  store i8 %398, i8* %450, align 1
  %451 = add nuw nsw i64 %423, 7
  %452 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %451, i32 3
  %453 = bitcast %union._hb_var_int_t* %452 to [4 x i8]*
  %454 = getelementptr inbounds [4 x i8], [4 x i8]* %453, i64 0, i64 3
  store i8 %398, i8* %454, align 1
  %455 = add nuw nsw i64 %423, 8
  %456 = icmp eq i64 %455, %400
  br i1 %456, label %418, label %422

457:                                              ; preds = %64
  %458 = add i32 %52, -1
  %459 = icmp ult i32 %53, %52
  br i1 %459, label %460, label %483

460:                                              ; preds = %457
  %461 = trunc i32 %56 to i8
  %462 = shl i8 %461, 4
  %463 = or i8 %462, 5
  %464 = zext i32 %53 to i64
  %465 = zext i32 %52 to i64
  %466 = sub nsw i64 %465, %464
  %467 = xor i64 %464, -1
  %468 = add nsw i64 %467, %465
  %469 = and i64 %466, 7
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %480, label %471

471:                                              ; preds = %460, %471
  %472 = phi i64 [ %477, %471 ], [ %464, %460 ]
  %473 = phi i64 [ %478, %471 ], [ %469, %460 ]
  %474 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %472, i32 3
  %475 = bitcast %union._hb_var_int_t* %474 to [4 x i8]*
  %476 = getelementptr inbounds [4 x i8], [4 x i8]* %475, i64 0, i64 3
  store i8 %463, i8* %476, align 1
  %477 = add nuw nsw i64 %472, 1
  %478 = add i64 %473, -1
  %479 = icmp eq i64 %478, 0
  br i1 %479, label %480, label %471, !llvm.loop !13

480:                                              ; preds = %471, %460
  %481 = phi i64 [ %464, %460 ], [ %477, %471 ]
  %482 = icmp ult i64 %468, 7
  br i1 %482, label %483, label %487

483:                                              ; preds = %480, %487, %457
  %484 = add i32 %56, 1
  %485 = icmp eq i32 %484, 16
  %486 = select i1 %485, i32 1, i32 %484, !prof !2
  br label %1047

487:                                              ; preds = %480, %487
  %488 = phi i64 [ %520, %487 ], [ %481, %480 ]
  %489 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %488, i32 3
  %490 = bitcast %union._hb_var_int_t* %489 to [4 x i8]*
  %491 = getelementptr inbounds [4 x i8], [4 x i8]* %490, i64 0, i64 3
  store i8 %463, i8* %491, align 1
  %492 = add nuw nsw i64 %488, 1
  %493 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %492, i32 3
  %494 = bitcast %union._hb_var_int_t* %493 to [4 x i8]*
  %495 = getelementptr inbounds [4 x i8], [4 x i8]* %494, i64 0, i64 3
  store i8 %463, i8* %495, align 1
  %496 = add nuw nsw i64 %488, 2
  %497 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %496, i32 3
  %498 = bitcast %union._hb_var_int_t* %497 to [4 x i8]*
  %499 = getelementptr inbounds [4 x i8], [4 x i8]* %498, i64 0, i64 3
  store i8 %463, i8* %499, align 1
  %500 = add nuw nsw i64 %488, 3
  %501 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %500, i32 3
  %502 = bitcast %union._hb_var_int_t* %501 to [4 x i8]*
  %503 = getelementptr inbounds [4 x i8], [4 x i8]* %502, i64 0, i64 3
  store i8 %463, i8* %503, align 1
  %504 = add nuw nsw i64 %488, 4
  %505 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %504, i32 3
  %506 = bitcast %union._hb_var_int_t* %505 to [4 x i8]*
  %507 = getelementptr inbounds [4 x i8], [4 x i8]* %506, i64 0, i64 3
  store i8 %463, i8* %507, align 1
  %508 = add nuw nsw i64 %488, 5
  %509 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %508, i32 3
  %510 = bitcast %union._hb_var_int_t* %509 to [4 x i8]*
  %511 = getelementptr inbounds [4 x i8], [4 x i8]* %510, i64 0, i64 3
  store i8 %463, i8* %511, align 1
  %512 = add nuw nsw i64 %488, 6
  %513 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %512, i32 3
  %514 = bitcast %union._hb_var_int_t* %513 to [4 x i8]*
  %515 = getelementptr inbounds [4 x i8], [4 x i8]* %514, i64 0, i64 3
  store i8 %463, i8* %515, align 1
  %516 = add nuw nsw i64 %488, 7
  %517 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %516, i32 3
  %518 = bitcast %union._hb_var_int_t* %517 to [4 x i8]*
  %519 = getelementptr inbounds [4 x i8], [4 x i8]* %518, i64 0, i64 3
  store i8 %463, i8* %519, align 1
  %520 = add nuw nsw i64 %488, 8
  %521 = icmp eq i64 %520, %465
  br i1 %521, label %483, label %487

522:                                              ; preds = %64
  %523 = add i32 %54, -1
  %524 = icmp ult i32 %53, %54
  br i1 %524, label %525, label %547

525:                                              ; preds = %522
  %526 = trunc i32 %56 to i8
  %527 = shl i8 %526, 4
  %528 = zext i32 %53 to i64
  %529 = zext i32 %54 to i64
  %530 = sub nsw i64 %529, %528
  %531 = xor i64 %528, -1
  %532 = add nsw i64 %531, %529
  %533 = and i64 %530, 7
  %534 = icmp eq i64 %533, 0
  br i1 %534, label %544, label %535

535:                                              ; preds = %525, %535
  %536 = phi i64 [ %541, %535 ], [ %528, %525 ]
  %537 = phi i64 [ %542, %535 ], [ %533, %525 ]
  %538 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %536, i32 3
  %539 = bitcast %union._hb_var_int_t* %538 to [4 x i8]*
  %540 = getelementptr inbounds [4 x i8], [4 x i8]* %539, i64 0, i64 3
  store i8 %527, i8* %540, align 1
  %541 = add nuw nsw i64 %536, 1
  %542 = add i64 %537, -1
  %543 = icmp eq i64 %542, 0
  br i1 %543, label %544, label %535, !llvm.loop !14

544:                                              ; preds = %535, %525
  %545 = phi i64 [ %528, %525 ], [ %541, %535 ]
  %546 = icmp ult i64 %532, 7
  br i1 %546, label %547, label %551

547:                                              ; preds = %544, %551, %522
  %548 = add i32 %56, 1
  %549 = icmp eq i32 %548, 16
  %550 = select i1 %549, i32 1, i32 %548, !prof !2
  br label %1047

551:                                              ; preds = %544, %551
  %552 = phi i64 [ %584, %551 ], [ %545, %544 ]
  %553 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %552, i32 3
  %554 = bitcast %union._hb_var_int_t* %553 to [4 x i8]*
  %555 = getelementptr inbounds [4 x i8], [4 x i8]* %554, i64 0, i64 3
  store i8 %527, i8* %555, align 1
  %556 = add nuw nsw i64 %552, 1
  %557 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %556, i32 3
  %558 = bitcast %union._hb_var_int_t* %557 to [4 x i8]*
  %559 = getelementptr inbounds [4 x i8], [4 x i8]* %558, i64 0, i64 3
  store i8 %527, i8* %559, align 1
  %560 = add nuw nsw i64 %552, 2
  %561 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %560, i32 3
  %562 = bitcast %union._hb_var_int_t* %561 to [4 x i8]*
  %563 = getelementptr inbounds [4 x i8], [4 x i8]* %562, i64 0, i64 3
  store i8 %527, i8* %563, align 1
  %564 = add nuw nsw i64 %552, 3
  %565 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %564, i32 3
  %566 = bitcast %union._hb_var_int_t* %565 to [4 x i8]*
  %567 = getelementptr inbounds [4 x i8], [4 x i8]* %566, i64 0, i64 3
  store i8 %527, i8* %567, align 1
  %568 = add nuw nsw i64 %552, 4
  %569 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %568, i32 3
  %570 = bitcast %union._hb_var_int_t* %569 to [4 x i8]*
  %571 = getelementptr inbounds [4 x i8], [4 x i8]* %570, i64 0, i64 3
  store i8 %527, i8* %571, align 1
  %572 = add nuw nsw i64 %552, 5
  %573 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %572, i32 3
  %574 = bitcast %union._hb_var_int_t* %573 to [4 x i8]*
  %575 = getelementptr inbounds [4 x i8], [4 x i8]* %574, i64 0, i64 3
  store i8 %527, i8* %575, align 1
  %576 = add nuw nsw i64 %552, 6
  %577 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %576, i32 3
  %578 = bitcast %union._hb_var_int_t* %577 to [4 x i8]*
  %579 = getelementptr inbounds [4 x i8], [4 x i8]* %578, i64 0, i64 3
  store i8 %527, i8* %579, align 1
  %580 = add nuw nsw i64 %552, 7
  %581 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %580, i32 3
  %582 = bitcast %union._hb_var_int_t* %581 to [4 x i8]*
  %583 = getelementptr inbounds [4 x i8], [4 x i8]* %582, i64 0, i64 3
  store i8 %527, i8* %583, align 1
  %584 = add nuw nsw i64 %552, 8
  %585 = icmp eq i64 %584, %529
  br i1 %585, label %547, label %551

586:                                              ; preds = %64
  %587 = add i32 %54, -1
  %588 = icmp ult i32 %53, %54
  br i1 %588, label %589, label %612

589:                                              ; preds = %586
  %590 = trunc i32 %56 to i8
  %591 = shl i8 %590, 4
  %592 = or i8 %591, 1
  %593 = zext i32 %53 to i64
  %594 = zext i32 %54 to i64
  %595 = sub nsw i64 %594, %593
  %596 = xor i64 %593, -1
  %597 = add nsw i64 %596, %594
  %598 = and i64 %595, 7
  %599 = icmp eq i64 %598, 0
  br i1 %599, label %609, label %600

600:                                              ; preds = %589, %600
  %601 = phi i64 [ %606, %600 ], [ %593, %589 ]
  %602 = phi i64 [ %607, %600 ], [ %598, %589 ]
  %603 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %601, i32 3
  %604 = bitcast %union._hb_var_int_t* %603 to [4 x i8]*
  %605 = getelementptr inbounds [4 x i8], [4 x i8]* %604, i64 0, i64 3
  store i8 %592, i8* %605, align 1
  %606 = add nuw nsw i64 %601, 1
  %607 = add i64 %602, -1
  %608 = icmp eq i64 %607, 0
  br i1 %608, label %609, label %600, !llvm.loop !15

609:                                              ; preds = %600, %589
  %610 = phi i64 [ %593, %589 ], [ %606, %600 ]
  %611 = icmp ult i64 %597, 7
  br i1 %611, label %612, label %616

612:                                              ; preds = %609, %616, %586
  %613 = add i32 %56, 1
  %614 = icmp eq i32 %613, 16
  %615 = select i1 %614, i32 1, i32 %613, !prof !2
  br label %1047

616:                                              ; preds = %609, %616
  %617 = phi i64 [ %649, %616 ], [ %610, %609 ]
  %618 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %617, i32 3
  %619 = bitcast %union._hb_var_int_t* %618 to [4 x i8]*
  %620 = getelementptr inbounds [4 x i8], [4 x i8]* %619, i64 0, i64 3
  store i8 %592, i8* %620, align 1
  %621 = add nuw nsw i64 %617, 1
  %622 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %621, i32 3
  %623 = bitcast %union._hb_var_int_t* %622 to [4 x i8]*
  %624 = getelementptr inbounds [4 x i8], [4 x i8]* %623, i64 0, i64 3
  store i8 %592, i8* %624, align 1
  %625 = add nuw nsw i64 %617, 2
  %626 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %625, i32 3
  %627 = bitcast %union._hb_var_int_t* %626 to [4 x i8]*
  %628 = getelementptr inbounds [4 x i8], [4 x i8]* %627, i64 0, i64 3
  store i8 %592, i8* %628, align 1
  %629 = add nuw nsw i64 %617, 3
  %630 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %629, i32 3
  %631 = bitcast %union._hb_var_int_t* %630 to [4 x i8]*
  %632 = getelementptr inbounds [4 x i8], [4 x i8]* %631, i64 0, i64 3
  store i8 %592, i8* %632, align 1
  %633 = add nuw nsw i64 %617, 4
  %634 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %633, i32 3
  %635 = bitcast %union._hb_var_int_t* %634 to [4 x i8]*
  %636 = getelementptr inbounds [4 x i8], [4 x i8]* %635, i64 0, i64 3
  store i8 %592, i8* %636, align 1
  %637 = add nuw nsw i64 %617, 5
  %638 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %637, i32 3
  %639 = bitcast %union._hb_var_int_t* %638 to [4 x i8]*
  %640 = getelementptr inbounds [4 x i8], [4 x i8]* %639, i64 0, i64 3
  store i8 %592, i8* %640, align 1
  %641 = add nuw nsw i64 %617, 6
  %642 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %641, i32 3
  %643 = bitcast %union._hb_var_int_t* %642 to [4 x i8]*
  %644 = getelementptr inbounds [4 x i8], [4 x i8]* %643, i64 0, i64 3
  store i8 %592, i8* %644, align 1
  %645 = add nuw nsw i64 %617, 7
  %646 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %645, i32 3
  %647 = bitcast %union._hb_var_int_t* %646 to [4 x i8]*
  %648 = getelementptr inbounds [4 x i8], [4 x i8]* %647, i64 0, i64 3
  store i8 %592, i8* %648, align 1
  %649 = add nuw nsw i64 %617, 8
  %650 = icmp eq i64 %649, %594
  br i1 %650, label %612, label %616

651:                                              ; preds = %64
  %652 = add i32 %54, -1
  %653 = icmp ult i32 %53, %54
  br i1 %653, label %654, label %677

654:                                              ; preds = %651
  %655 = trunc i32 %56 to i8
  %656 = shl i8 %655, 4
  %657 = or i8 %656, 2
  %658 = zext i32 %53 to i64
  %659 = zext i32 %54 to i64
  %660 = sub nsw i64 %659, %658
  %661 = xor i64 %658, -1
  %662 = add nsw i64 %661, %659
  %663 = and i64 %660, 7
  %664 = icmp eq i64 %663, 0
  br i1 %664, label %674, label %665

665:                                              ; preds = %654, %665
  %666 = phi i64 [ %671, %665 ], [ %658, %654 ]
  %667 = phi i64 [ %672, %665 ], [ %663, %654 ]
  %668 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %666, i32 3
  %669 = bitcast %union._hb_var_int_t* %668 to [4 x i8]*
  %670 = getelementptr inbounds [4 x i8], [4 x i8]* %669, i64 0, i64 3
  store i8 %657, i8* %670, align 1
  %671 = add nuw nsw i64 %666, 1
  %672 = add i64 %667, -1
  %673 = icmp eq i64 %672, 0
  br i1 %673, label %674, label %665, !llvm.loop !16

674:                                              ; preds = %665, %654
  %675 = phi i64 [ %658, %654 ], [ %671, %665 ]
  %676 = icmp ult i64 %662, 7
  br i1 %676, label %677, label %681

677:                                              ; preds = %674, %681, %651
  %678 = add i32 %56, 1
  %679 = icmp eq i32 %678, 16
  %680 = select i1 %679, i32 1, i32 %678, !prof !2
  br label %1047

681:                                              ; preds = %674, %681
  %682 = phi i64 [ %714, %681 ], [ %675, %674 ]
  %683 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %682, i32 3
  %684 = bitcast %union._hb_var_int_t* %683 to [4 x i8]*
  %685 = getelementptr inbounds [4 x i8], [4 x i8]* %684, i64 0, i64 3
  store i8 %657, i8* %685, align 1
  %686 = add nuw nsw i64 %682, 1
  %687 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %686, i32 3
  %688 = bitcast %union._hb_var_int_t* %687 to [4 x i8]*
  %689 = getelementptr inbounds [4 x i8], [4 x i8]* %688, i64 0, i64 3
  store i8 %657, i8* %689, align 1
  %690 = add nuw nsw i64 %682, 2
  %691 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %690, i32 3
  %692 = bitcast %union._hb_var_int_t* %691 to [4 x i8]*
  %693 = getelementptr inbounds [4 x i8], [4 x i8]* %692, i64 0, i64 3
  store i8 %657, i8* %693, align 1
  %694 = add nuw nsw i64 %682, 3
  %695 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %694, i32 3
  %696 = bitcast %union._hb_var_int_t* %695 to [4 x i8]*
  %697 = getelementptr inbounds [4 x i8], [4 x i8]* %696, i64 0, i64 3
  store i8 %657, i8* %697, align 1
  %698 = add nuw nsw i64 %682, 4
  %699 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %698, i32 3
  %700 = bitcast %union._hb_var_int_t* %699 to [4 x i8]*
  %701 = getelementptr inbounds [4 x i8], [4 x i8]* %700, i64 0, i64 3
  store i8 %657, i8* %701, align 1
  %702 = add nuw nsw i64 %682, 5
  %703 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %702, i32 3
  %704 = bitcast %union._hb_var_int_t* %703 to [4 x i8]*
  %705 = getelementptr inbounds [4 x i8], [4 x i8]* %704, i64 0, i64 3
  store i8 %657, i8* %705, align 1
  %706 = add nuw nsw i64 %682, 6
  %707 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %706, i32 3
  %708 = bitcast %union._hb_var_int_t* %707 to [4 x i8]*
  %709 = getelementptr inbounds [4 x i8], [4 x i8]* %708, i64 0, i64 3
  store i8 %657, i8* %709, align 1
  %710 = add nuw nsw i64 %682, 7
  %711 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %710, i32 3
  %712 = bitcast %union._hb_var_int_t* %711 to [4 x i8]*
  %713 = getelementptr inbounds [4 x i8], [4 x i8]* %712, i64 0, i64 3
  store i8 %657, i8* %713, align 1
  %714 = add nuw nsw i64 %682, 8
  %715 = icmp eq i64 %714, %659
  br i1 %715, label %677, label %681

716:                                              ; preds = %64
  %717 = add i32 %54, -1
  %718 = icmp ult i32 %53, %54
  br i1 %718, label %719, label %742

719:                                              ; preds = %716
  %720 = trunc i32 %56 to i8
  %721 = shl i8 %720, 4
  %722 = or i8 %721, 3
  %723 = zext i32 %53 to i64
  %724 = zext i32 %54 to i64
  %725 = sub nsw i64 %724, %723
  %726 = xor i64 %723, -1
  %727 = add nsw i64 %726, %724
  %728 = and i64 %725, 7
  %729 = icmp eq i64 %728, 0
  br i1 %729, label %739, label %730

730:                                              ; preds = %719, %730
  %731 = phi i64 [ %736, %730 ], [ %723, %719 ]
  %732 = phi i64 [ %737, %730 ], [ %728, %719 ]
  %733 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %731, i32 3
  %734 = bitcast %union._hb_var_int_t* %733 to [4 x i8]*
  %735 = getelementptr inbounds [4 x i8], [4 x i8]* %734, i64 0, i64 3
  store i8 %722, i8* %735, align 1
  %736 = add nuw nsw i64 %731, 1
  %737 = add i64 %732, -1
  %738 = icmp eq i64 %737, 0
  br i1 %738, label %739, label %730, !llvm.loop !17

739:                                              ; preds = %730, %719
  %740 = phi i64 [ %723, %719 ], [ %736, %730 ]
  %741 = icmp ult i64 %727, 7
  br i1 %741, label %742, label %746

742:                                              ; preds = %739, %746, %716
  %743 = add i32 %56, 1
  %744 = icmp eq i32 %743, 16
  %745 = select i1 %744, i32 1, i32 %743, !prof !2
  br label %1047

746:                                              ; preds = %739, %746
  %747 = phi i64 [ %779, %746 ], [ %740, %739 ]
  %748 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %747, i32 3
  %749 = bitcast %union._hb_var_int_t* %748 to [4 x i8]*
  %750 = getelementptr inbounds [4 x i8], [4 x i8]* %749, i64 0, i64 3
  store i8 %722, i8* %750, align 1
  %751 = add nuw nsw i64 %747, 1
  %752 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %751, i32 3
  %753 = bitcast %union._hb_var_int_t* %752 to [4 x i8]*
  %754 = getelementptr inbounds [4 x i8], [4 x i8]* %753, i64 0, i64 3
  store i8 %722, i8* %754, align 1
  %755 = add nuw nsw i64 %747, 2
  %756 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %755, i32 3
  %757 = bitcast %union._hb_var_int_t* %756 to [4 x i8]*
  %758 = getelementptr inbounds [4 x i8], [4 x i8]* %757, i64 0, i64 3
  store i8 %722, i8* %758, align 1
  %759 = add nuw nsw i64 %747, 3
  %760 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %759, i32 3
  %761 = bitcast %union._hb_var_int_t* %760 to [4 x i8]*
  %762 = getelementptr inbounds [4 x i8], [4 x i8]* %761, i64 0, i64 3
  store i8 %722, i8* %762, align 1
  %763 = add nuw nsw i64 %747, 4
  %764 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %763, i32 3
  %765 = bitcast %union._hb_var_int_t* %764 to [4 x i8]*
  %766 = getelementptr inbounds [4 x i8], [4 x i8]* %765, i64 0, i64 3
  store i8 %722, i8* %766, align 1
  %767 = add nuw nsw i64 %747, 5
  %768 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %767, i32 3
  %769 = bitcast %union._hb_var_int_t* %768 to [4 x i8]*
  %770 = getelementptr inbounds [4 x i8], [4 x i8]* %769, i64 0, i64 3
  store i8 %722, i8* %770, align 1
  %771 = add nuw nsw i64 %747, 6
  %772 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %771, i32 3
  %773 = bitcast %union._hb_var_int_t* %772 to [4 x i8]*
  %774 = getelementptr inbounds [4 x i8], [4 x i8]* %773, i64 0, i64 3
  store i8 %722, i8* %774, align 1
  %775 = add nuw nsw i64 %747, 7
  %776 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %775, i32 3
  %777 = bitcast %union._hb_var_int_t* %776 to [4 x i8]*
  %778 = getelementptr inbounds [4 x i8], [4 x i8]* %777, i64 0, i64 3
  store i8 %722, i8* %778, align 1
  %779 = add nuw nsw i64 %747, 8
  %780 = icmp eq i64 %779, %724
  br i1 %780, label %742, label %746

781:                                              ; preds = %64
  %782 = add i32 %54, -1
  %783 = icmp ult i32 %53, %54
  br i1 %783, label %784, label %807

784:                                              ; preds = %781
  %785 = trunc i32 %56 to i8
  %786 = shl i8 %785, 4
  %787 = or i8 %786, 4
  %788 = zext i32 %53 to i64
  %789 = zext i32 %54 to i64
  %790 = sub nsw i64 %789, %788
  %791 = xor i64 %788, -1
  %792 = add nsw i64 %791, %789
  %793 = and i64 %790, 7
  %794 = icmp eq i64 %793, 0
  br i1 %794, label %804, label %795

795:                                              ; preds = %784, %795
  %796 = phi i64 [ %801, %795 ], [ %788, %784 ]
  %797 = phi i64 [ %802, %795 ], [ %793, %784 ]
  %798 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %796, i32 3
  %799 = bitcast %union._hb_var_int_t* %798 to [4 x i8]*
  %800 = getelementptr inbounds [4 x i8], [4 x i8]* %799, i64 0, i64 3
  store i8 %787, i8* %800, align 1
  %801 = add nuw nsw i64 %796, 1
  %802 = add i64 %797, -1
  %803 = icmp eq i64 %802, 0
  br i1 %803, label %804, label %795, !llvm.loop !18

804:                                              ; preds = %795, %784
  %805 = phi i64 [ %788, %784 ], [ %801, %795 ]
  %806 = icmp ult i64 %792, 7
  br i1 %806, label %807, label %811

807:                                              ; preds = %804, %811, %781
  %808 = add i32 %56, 1
  %809 = icmp eq i32 %808, 16
  %810 = select i1 %809, i32 1, i32 %808, !prof !2
  br label %1047

811:                                              ; preds = %804, %811
  %812 = phi i64 [ %844, %811 ], [ %805, %804 ]
  %813 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %812, i32 3
  %814 = bitcast %union._hb_var_int_t* %813 to [4 x i8]*
  %815 = getelementptr inbounds [4 x i8], [4 x i8]* %814, i64 0, i64 3
  store i8 %787, i8* %815, align 1
  %816 = add nuw nsw i64 %812, 1
  %817 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %816, i32 3
  %818 = bitcast %union._hb_var_int_t* %817 to [4 x i8]*
  %819 = getelementptr inbounds [4 x i8], [4 x i8]* %818, i64 0, i64 3
  store i8 %787, i8* %819, align 1
  %820 = add nuw nsw i64 %812, 2
  %821 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %820, i32 3
  %822 = bitcast %union._hb_var_int_t* %821 to [4 x i8]*
  %823 = getelementptr inbounds [4 x i8], [4 x i8]* %822, i64 0, i64 3
  store i8 %787, i8* %823, align 1
  %824 = add nuw nsw i64 %812, 3
  %825 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %824, i32 3
  %826 = bitcast %union._hb_var_int_t* %825 to [4 x i8]*
  %827 = getelementptr inbounds [4 x i8], [4 x i8]* %826, i64 0, i64 3
  store i8 %787, i8* %827, align 1
  %828 = add nuw nsw i64 %812, 4
  %829 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %828, i32 3
  %830 = bitcast %union._hb_var_int_t* %829 to [4 x i8]*
  %831 = getelementptr inbounds [4 x i8], [4 x i8]* %830, i64 0, i64 3
  store i8 %787, i8* %831, align 1
  %832 = add nuw nsw i64 %812, 5
  %833 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %832, i32 3
  %834 = bitcast %union._hb_var_int_t* %833 to [4 x i8]*
  %835 = getelementptr inbounds [4 x i8], [4 x i8]* %834, i64 0, i64 3
  store i8 %787, i8* %835, align 1
  %836 = add nuw nsw i64 %812, 6
  %837 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %836, i32 3
  %838 = bitcast %union._hb_var_int_t* %837 to [4 x i8]*
  %839 = getelementptr inbounds [4 x i8], [4 x i8]* %838, i64 0, i64 3
  store i8 %787, i8* %839, align 1
  %840 = add nuw nsw i64 %812, 7
  %841 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %840, i32 3
  %842 = bitcast %union._hb_var_int_t* %841 to [4 x i8]*
  %843 = getelementptr inbounds [4 x i8], [4 x i8]* %842, i64 0, i64 3
  store i8 %787, i8* %843, align 1
  %844 = add nuw nsw i64 %812, 8
  %845 = icmp eq i64 %844, %789
  br i1 %845, label %807, label %811

846:                                              ; preds = %64
  switch i32 %55, label %1047 [
    i32 1, label %847
    i32 5, label %911
    i32 6, label %976
  ]

847:                                              ; preds = %846
  %848 = add i32 %54, -1
  %849 = icmp ult i32 %53, %54
  br i1 %849, label %850, label %872

850:                                              ; preds = %847
  %851 = trunc i32 %56 to i8
  %852 = shl i8 %851, 4
  %853 = zext i32 %53 to i64
  %854 = zext i32 %54 to i64
  %855 = sub nsw i64 %854, %853
  %856 = xor i64 %853, -1
  %857 = add nsw i64 %856, %854
  %858 = and i64 %855, 7
  %859 = icmp eq i64 %858, 0
  br i1 %859, label %869, label %860

860:                                              ; preds = %850, %860
  %861 = phi i64 [ %866, %860 ], [ %853, %850 ]
  %862 = phi i64 [ %867, %860 ], [ %858, %850 ]
  %863 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %861, i32 3
  %864 = bitcast %union._hb_var_int_t* %863 to [4 x i8]*
  %865 = getelementptr inbounds [4 x i8], [4 x i8]* %864, i64 0, i64 3
  store i8 %852, i8* %865, align 1
  %866 = add nuw nsw i64 %861, 1
  %867 = add i64 %862, -1
  %868 = icmp eq i64 %867, 0
  br i1 %868, label %869, label %860, !llvm.loop !19

869:                                              ; preds = %860, %850
  %870 = phi i64 [ %853, %850 ], [ %866, %860 ]
  %871 = icmp ult i64 %857, 7
  br i1 %871, label %872, label %876

872:                                              ; preds = %869, %876, %847
  %873 = add i32 %56, 1
  %874 = icmp eq i32 %873, 16
  %875 = select i1 %874, i32 1, i32 %873, !prof !2
  br label %1047

876:                                              ; preds = %869, %876
  %877 = phi i64 [ %909, %876 ], [ %870, %869 ]
  %878 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %877, i32 3
  %879 = bitcast %union._hb_var_int_t* %878 to [4 x i8]*
  %880 = getelementptr inbounds [4 x i8], [4 x i8]* %879, i64 0, i64 3
  store i8 %852, i8* %880, align 1
  %881 = add nuw nsw i64 %877, 1
  %882 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %881, i32 3
  %883 = bitcast %union._hb_var_int_t* %882 to [4 x i8]*
  %884 = getelementptr inbounds [4 x i8], [4 x i8]* %883, i64 0, i64 3
  store i8 %852, i8* %884, align 1
  %885 = add nuw nsw i64 %877, 2
  %886 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %885, i32 3
  %887 = bitcast %union._hb_var_int_t* %886 to [4 x i8]*
  %888 = getelementptr inbounds [4 x i8], [4 x i8]* %887, i64 0, i64 3
  store i8 %852, i8* %888, align 1
  %889 = add nuw nsw i64 %877, 3
  %890 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %889, i32 3
  %891 = bitcast %union._hb_var_int_t* %890 to [4 x i8]*
  %892 = getelementptr inbounds [4 x i8], [4 x i8]* %891, i64 0, i64 3
  store i8 %852, i8* %892, align 1
  %893 = add nuw nsw i64 %877, 4
  %894 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %893, i32 3
  %895 = bitcast %union._hb_var_int_t* %894 to [4 x i8]*
  %896 = getelementptr inbounds [4 x i8], [4 x i8]* %895, i64 0, i64 3
  store i8 %852, i8* %896, align 1
  %897 = add nuw nsw i64 %877, 5
  %898 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %897, i32 3
  %899 = bitcast %union._hb_var_int_t* %898 to [4 x i8]*
  %900 = getelementptr inbounds [4 x i8], [4 x i8]* %899, i64 0, i64 3
  store i8 %852, i8* %900, align 1
  %901 = add nuw nsw i64 %877, 6
  %902 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %901, i32 3
  %903 = bitcast %union._hb_var_int_t* %902 to [4 x i8]*
  %904 = getelementptr inbounds [4 x i8], [4 x i8]* %903, i64 0, i64 3
  store i8 %852, i8* %904, align 1
  %905 = add nuw nsw i64 %877, 7
  %906 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %905, i32 3
  %907 = bitcast %union._hb_var_int_t* %906 to [4 x i8]*
  %908 = getelementptr inbounds [4 x i8], [4 x i8]* %907, i64 0, i64 3
  store i8 %852, i8* %908, align 1
  %909 = add nuw nsw i64 %877, 8
  %910 = icmp eq i64 %909, %854
  br i1 %910, label %872, label %876

911:                                              ; preds = %846
  %912 = add i32 %54, -1
  %913 = icmp ult i32 %53, %54
  br i1 %913, label %914, label %937

914:                                              ; preds = %911
  %915 = trunc i32 %56 to i8
  %916 = shl i8 %915, 4
  %917 = or i8 %916, 4
  %918 = zext i32 %53 to i64
  %919 = zext i32 %54 to i64
  %920 = sub nsw i64 %919, %918
  %921 = xor i64 %918, -1
  %922 = add nsw i64 %921, %919
  %923 = and i64 %920, 7
  %924 = icmp eq i64 %923, 0
  br i1 %924, label %934, label %925

925:                                              ; preds = %914, %925
  %926 = phi i64 [ %931, %925 ], [ %918, %914 ]
  %927 = phi i64 [ %932, %925 ], [ %923, %914 ]
  %928 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %926, i32 3
  %929 = bitcast %union._hb_var_int_t* %928 to [4 x i8]*
  %930 = getelementptr inbounds [4 x i8], [4 x i8]* %929, i64 0, i64 3
  store i8 %917, i8* %930, align 1
  %931 = add nuw nsw i64 %926, 1
  %932 = add i64 %927, -1
  %933 = icmp eq i64 %932, 0
  br i1 %933, label %934, label %925, !llvm.loop !20

934:                                              ; preds = %925, %914
  %935 = phi i64 [ %918, %914 ], [ %931, %925 ]
  %936 = icmp ult i64 %922, 7
  br i1 %936, label %937, label %941

937:                                              ; preds = %934, %941, %911
  %938 = add i32 %56, 1
  %939 = icmp eq i32 %938, 16
  %940 = select i1 %939, i32 1, i32 %938, !prof !2
  br label %1047

941:                                              ; preds = %934, %941
  %942 = phi i64 [ %974, %941 ], [ %935, %934 ]
  %943 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %942, i32 3
  %944 = bitcast %union._hb_var_int_t* %943 to [4 x i8]*
  %945 = getelementptr inbounds [4 x i8], [4 x i8]* %944, i64 0, i64 3
  store i8 %917, i8* %945, align 1
  %946 = add nuw nsw i64 %942, 1
  %947 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %946, i32 3
  %948 = bitcast %union._hb_var_int_t* %947 to [4 x i8]*
  %949 = getelementptr inbounds [4 x i8], [4 x i8]* %948, i64 0, i64 3
  store i8 %917, i8* %949, align 1
  %950 = add nuw nsw i64 %942, 2
  %951 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %950, i32 3
  %952 = bitcast %union._hb_var_int_t* %951 to [4 x i8]*
  %953 = getelementptr inbounds [4 x i8], [4 x i8]* %952, i64 0, i64 3
  store i8 %917, i8* %953, align 1
  %954 = add nuw nsw i64 %942, 3
  %955 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %954, i32 3
  %956 = bitcast %union._hb_var_int_t* %955 to [4 x i8]*
  %957 = getelementptr inbounds [4 x i8], [4 x i8]* %956, i64 0, i64 3
  store i8 %917, i8* %957, align 1
  %958 = add nuw nsw i64 %942, 4
  %959 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %958, i32 3
  %960 = bitcast %union._hb_var_int_t* %959 to [4 x i8]*
  %961 = getelementptr inbounds [4 x i8], [4 x i8]* %960, i64 0, i64 3
  store i8 %917, i8* %961, align 1
  %962 = add nuw nsw i64 %942, 5
  %963 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %962, i32 3
  %964 = bitcast %union._hb_var_int_t* %963 to [4 x i8]*
  %965 = getelementptr inbounds [4 x i8], [4 x i8]* %964, i64 0, i64 3
  store i8 %917, i8* %965, align 1
  %966 = add nuw nsw i64 %942, 6
  %967 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %966, i32 3
  %968 = bitcast %union._hb_var_int_t* %967 to [4 x i8]*
  %969 = getelementptr inbounds [4 x i8], [4 x i8]* %968, i64 0, i64 3
  store i8 %917, i8* %969, align 1
  %970 = add nuw nsw i64 %942, 7
  %971 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %970, i32 3
  %972 = bitcast %union._hb_var_int_t* %971 to [4 x i8]*
  %973 = getelementptr inbounds [4 x i8], [4 x i8]* %972, i64 0, i64 3
  store i8 %917, i8* %973, align 1
  %974 = add nuw nsw i64 %942, 8
  %975 = icmp eq i64 %974, %919
  br i1 %975, label %937, label %941

976:                                              ; preds = %846
  %977 = add i32 %54, -1
  %978 = icmp ult i32 %53, %54
  br i1 %978, label %979, label %1002

979:                                              ; preds = %976
  %980 = trunc i32 %56 to i8
  %981 = shl i8 %980, 4
  %982 = or i8 %981, 5
  %983 = zext i32 %53 to i64
  %984 = zext i32 %54 to i64
  %985 = sub nsw i64 %984, %983
  %986 = xor i64 %983, -1
  %987 = add nsw i64 %986, %984
  %988 = and i64 %985, 7
  %989 = icmp eq i64 %988, 0
  br i1 %989, label %999, label %990

990:                                              ; preds = %979, %990
  %991 = phi i64 [ %996, %990 ], [ %983, %979 ]
  %992 = phi i64 [ %997, %990 ], [ %988, %979 ]
  %993 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %991, i32 3
  %994 = bitcast %union._hb_var_int_t* %993 to [4 x i8]*
  %995 = getelementptr inbounds [4 x i8], [4 x i8]* %994, i64 0, i64 3
  store i8 %982, i8* %995, align 1
  %996 = add nuw nsw i64 %991, 1
  %997 = add i64 %992, -1
  %998 = icmp eq i64 %997, 0
  br i1 %998, label %999, label %990, !llvm.loop !21

999:                                              ; preds = %990, %979
  %1000 = phi i64 [ %983, %979 ], [ %996, %990 ]
  %1001 = icmp ult i64 %987, 7
  br i1 %1001, label %1002, label %1006

1002:                                             ; preds = %999, %1006, %976
  %1003 = add i32 %56, 1
  %1004 = icmp eq i32 %1003, 16
  %1005 = select i1 %1004, i32 1, i32 %1003, !prof !2
  br label %1047

1006:                                             ; preds = %999, %1006
  %1007 = phi i64 [ %1039, %1006 ], [ %1000, %999 ]
  %1008 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %1007, i32 3
  %1009 = bitcast %union._hb_var_int_t* %1008 to [4 x i8]*
  %1010 = getelementptr inbounds [4 x i8], [4 x i8]* %1009, i64 0, i64 3
  store i8 %982, i8* %1010, align 1
  %1011 = add nuw nsw i64 %1007, 1
  %1012 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %1011, i32 3
  %1013 = bitcast %union._hb_var_int_t* %1012 to [4 x i8]*
  %1014 = getelementptr inbounds [4 x i8], [4 x i8]* %1013, i64 0, i64 3
  store i8 %982, i8* %1014, align 1
  %1015 = add nuw nsw i64 %1007, 2
  %1016 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %1015, i32 3
  %1017 = bitcast %union._hb_var_int_t* %1016 to [4 x i8]*
  %1018 = getelementptr inbounds [4 x i8], [4 x i8]* %1017, i64 0, i64 3
  store i8 %982, i8* %1018, align 1
  %1019 = add nuw nsw i64 %1007, 3
  %1020 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %1019, i32 3
  %1021 = bitcast %union._hb_var_int_t* %1020 to [4 x i8]*
  %1022 = getelementptr inbounds [4 x i8], [4 x i8]* %1021, i64 0, i64 3
  store i8 %982, i8* %1022, align 1
  %1023 = add nuw nsw i64 %1007, 4
  %1024 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %1023, i32 3
  %1025 = bitcast %union._hb_var_int_t* %1024 to [4 x i8]*
  %1026 = getelementptr inbounds [4 x i8], [4 x i8]* %1025, i64 0, i64 3
  store i8 %982, i8* %1026, align 1
  %1027 = add nuw nsw i64 %1007, 5
  %1028 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %1027, i32 3
  %1029 = bitcast %union._hb_var_int_t* %1028 to [4 x i8]*
  %1030 = getelementptr inbounds [4 x i8], [4 x i8]* %1029, i64 0, i64 3
  store i8 %982, i8* %1030, align 1
  %1031 = add nuw nsw i64 %1007, 6
  %1032 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %1031, i32 3
  %1033 = bitcast %union._hb_var_int_t* %1032 to [4 x i8]*
  %1034 = getelementptr inbounds [4 x i8], [4 x i8]* %1033, i64 0, i64 3
  store i8 %982, i8* %1034, align 1
  %1035 = add nuw nsw i64 %1007, 7
  %1036 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %1035, i32 3
  %1037 = bitcast %union._hb_var_int_t* %1036 to [4 x i8]*
  %1038 = getelementptr inbounds [4 x i8], [4 x i8]* %1037, i64 0, i64 3
  store i8 %982, i8* %1038, align 1
  %1039 = add nuw nsw i64 %1007, 8
  %1040 = icmp eq i64 %1039, %984
  br i1 %1040, label %1002, label %1006

1041:                                             ; preds = %64
  %1042 = add i32 %52, 1
  br label %1047

1043:                                             ; preds = %64
  %1044 = add i32 %52, 1
  br label %1047

1045:                                             ; preds = %64
  %1046 = add i32 %52, 1
  br label %1047

1047:                                             ; preds = %1045, %1043, %1041, %1002, %937, %872, %846, %807, %742, %677, %612, %547, %483, %418, %353, %288, %223, %158, %94, %66, %64, %51
  %1048 = phi i32 [ %52, %51 ], [ %52, %64 ], [ %52, %1045 ], [ %52, %1043 ], [ %52, %1041 ], [ %52, %846 ], [ %977, %1002 ], [ %912, %937 ], [ %848, %872 ], [ %782, %807 ], [ %717, %742 ], [ %652, %677 ], [ %587, %612 ], [ %523, %547 ], [ %458, %483 ], [ %393, %418 ], [ %328, %353 ], [ %263, %288 ], [ %198, %223 ], [ %134, %158 ], [ %52, %94 ], [ %52, %66 ]
  %1049 = phi i32 [ %54, %51 ], [ %54, %64 ], [ %1046, %1045 ], [ %1044, %1043 ], [ %1042, %1041 ], [ %54, %846 ], [ %54, %1002 ], [ %54, %937 ], [ %54, %872 ], [ %54, %807 ], [ %54, %742 ], [ %54, %677 ], [ %54, %612 ], [ %54, %547 ], [ %52, %483 ], [ %52, %418 ], [ %52, %353 ], [ %52, %288 ], [ %52, %223 ], [ %52, %158 ], [ %69, %94 ], [ %67, %66 ]
  %1050 = phi i32 [ %55, %51 ], [ %55, %64 ], [ 6, %1045 ], [ 5, %1043 ], [ 1, %1041 ], [ %55, %846 ], [ 6, %1002 ], [ 5, %937 ], [ 1, %872 ], [ %55, %807 ], [ %55, %742 ], [ %55, %677 ], [ %55, %612 ], [ %55, %547 ], [ %55, %483 ], [ %55, %418 ], [ %55, %353 ], [ %55, %288 ], [ %55, %223 ], [ %55, %158 ], [ %55, %94 ], [ %55, %66 ]
  %1051 = phi i32 [ %56, %51 ], [ %56, %64 ], [ %56, %1045 ], [ %56, %1043 ], [ %56, %1041 ], [ %56, %846 ], [ %1005, %1002 ], [ %940, %937 ], [ %875, %872 ], [ %810, %807 ], [ %745, %742 ], [ %680, %677 ], [ %615, %612 ], [ %550, %547 ], [ %486, %483 ], [ %421, %418 ], [ %356, %353 ], [ %291, %288 ], [ %226, %223 ], [ %161, %158 ], [ %97, %94 ], [ %56, %66 ]
  %1052 = zext i8 %59 to i64
  %1053 = getelementptr inbounds [141 x i8], [141 x i8]* bitcast (<{ [40 x i8], [101 x i8] }>* @_ZL40_indic_syllable_machine_to_state_actions to [141 x i8]*), i64 0, i64 %1052
  %1054 = load i8, i8* %1053, align 1
  %1055 = icmp eq i8 %1054, 9
  %1056 = select i1 %1055, i32 0, i32 %53
  %1057 = add i32 %1048, 1
  %1058 = icmp eq i32 %1057, %5
  br i1 %1058, label %1059, label %9

1059:                                             ; preds = %1047, %3
  %1060 = phi i32 [ 0, %3 ], [ %1056, %1047 ]
  %1061 = phi i32 [ 0, %3 ], [ %1049, %1047 ]
  %1062 = phi i32 [ 0, %3 ], [ %1050, %1047 ]
  %1063 = phi i32 [ 39, %3 ], [ %60, %1047 ]
  %1064 = phi i32 [ 1, %3 ], [ %1051, %1047 ]
  %1065 = icmp eq i32 %1063, 39
  br i1 %1065, label %1072, label %1066

1066:                                             ; preds = %1059
  %1067 = zext i32 %1063 to i64
  %1068 = getelementptr inbounds [141 x i16], [141 x i16]* @_ZL33_indic_syllable_machine_eof_trans, i64 0, i64 %1067
  %1069 = load i16, i16* %1068, align 2
  %1070 = sext i16 %1069 to i64
  %1071 = add nsw i64 %1070, -1
  br label %51

1072:                                             ; preds = %1059
  %1073 = load i32, i32* %4, align 8
  %1074 = icmp eq i32 %1073, 0
  br i1 %1074, label %1096, label %1075

1075:                                             ; preds = %1072
  %1076 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %1077 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1076, i64 0, i32 3
  %1078 = bitcast %union._hb_var_int_t* %1077 to [4 x i8]*
  %1079 = getelementptr inbounds [4 x i8], [4 x i8]* %1078, i64 0, i64 3
  %1080 = load i8, i8* %1079, align 1
  %1081 = add i32 %1073, -1
  %1082 = zext i32 %1081 to i64
  br label %1083

1083:                                             ; preds = %1087, %1075
  %1084 = phi i64 [ %1085, %1087 ], [ 0, %1075 ]
  %1085 = add nuw nsw i64 %1084, 1
  %1086 = icmp eq i64 %1084, %1082
  br i1 %1086, label %1093, label %1087

1087:                                             ; preds = %1083
  %1088 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1076, i64 %1085, i32 3
  %1089 = bitcast %union._hb_var_int_t* %1088 to [4 x i8]*
  %1090 = getelementptr inbounds [4 x i8], [4 x i8]* %1089, i64 0, i64 3
  %1091 = load i8, i8* %1090, align 1
  %1092 = icmp eq i8 %1080, %1091
  br i1 %1092, label %1083, label %1093

1093:                                             ; preds = %1087, %1083
  br i1 %1074, label %1096, label %1094

1094:                                             ; preds = %1093
  %1095 = trunc i64 %1085 to i32
  br label %1097

1096:                                             ; preds = %1124, %1072, %1093
  ret void

1097:                                             ; preds = %1094, %1124
  %1098 = phi i32 [ %1106, %1124 ], [ %1073, %1094 ]
  %1099 = phi i32 [ %1115, %1124 ], [ %1095, %1094 ]
  %1100 = phi i32 [ %1099, %1124 ], [ 0, %1094 ]
  %1101 = sub i32 %1099, %1100
  %1102 = icmp ult i32 %1101, 2
  br i1 %1102, label %1105, label %1103

1103:                                             ; preds = %1097
  tail call void @_ZN11hb_buffer_t20unsafe_to_break_implEjj(%struct.hb_buffer_t* %2, i32 %1100, i32 %1099) #4
  %1104 = load i32, i32* %4, align 8
  br label %1105

1105:                                             ; preds = %1097, %1103
  %1106 = phi i32 [ %1098, %1097 ], [ %1104, %1103 ]
  %1107 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %1108 = zext i32 %1099 to i64
  %1109 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1107, i64 %1108, i32 3
  %1110 = bitcast %union._hb_var_int_t* %1109 to [4 x i8]*
  %1111 = getelementptr inbounds [4 x i8], [4 x i8]* %1110, i64 0, i64 3
  %1112 = load i8, i8* %1111, align 1
  br label %1113

1113:                                             ; preds = %1117, %1105
  %1114 = phi i32 [ %1099, %1105 ], [ %1115, %1117 ]
  %1115 = add i32 %1114, 1
  %1116 = icmp ult i32 %1115, %1106
  br i1 %1116, label %1117, label %1124

1117:                                             ; preds = %1113
  %1118 = zext i32 %1115 to i64
  %1119 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1107, i64 %1118, i32 3
  %1120 = bitcast %union._hb_var_int_t* %1119 to [4 x i8]*
  %1121 = getelementptr inbounds [4 x i8], [4 x i8]* %1120, i64 0, i64 3
  %1122 = load i8, i8* %1121, align 1
  %1123 = icmp eq i8 %1112, %1122
  br i1 %1123, label %1113, label %1124

1124:                                             ; preds = %1113, %1117
  %1125 = icmp ult i32 %1099, %1073
  br i1 %1125, label %1097, label %1096
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL24initial_reordering_indicPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readonly, %struct.hb_font_t*, %struct.hb_buffer_t*) #0 {
  %4 = alloca [3 x i32], align 4
  %5 = alloca i32, align 4
  %6 = tail call zeroext i1 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, ...) @_ZN11hb_buffer_t7messageEP9hb_font_tPKcz(%struct.hb_buffer_t* %2, %struct.hb_font_t* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0))
  br i1 %6, label %7, label %303

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 4
  %9 = bitcast i8** %8 to %struct.indic_shape_plan_t**
  %10 = load %struct.indic_shape_plan_t*, %struct.indic_shape_plan_t** %9, align 8
  %11 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 0
  %12 = load %struct.indic_config_t*, %struct.indic_config_t** %11, align 8
  %13 = getelementptr inbounds %struct.indic_config_t, %struct.indic_config_t* %12, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %224

16:                                               ; preds = %7
  %17 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #4
  %18 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 4, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  store i32 %19, i32* %5, align 4
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %21, label %41, !prof !2

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.indic_config_t, %struct.indic_config_t* %12, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  store i32 0, i32* %5, align 4
  %26 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 13
  %27 = load %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t** %26, align 8
  %28 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %27, i64 0, i32 3, i32 0, i32 2
  %29 = load i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)** %28, align 8
  %30 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 14
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %27, i64 0, i32 1, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = call i32 %29(%struct.hb_font_t* %1, i8* %31, i32 %23, i32* nonnull %5, i8* %33) #4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %25
  %37 = load i32, i32* %5, align 4
  br label %39

38:                                               ; preds = %25, %21
  store i32 0, i32* %5, align 4
  br label %39

39:                                               ; preds = %38, %36
  %40 = phi i32 [ %37, %36 ], [ 0, %38 ]
  store atomic i32 %40, i32* %18 monotonic, align 4
  br label %41

41:                                               ; preds = %39, %16
  %42 = phi i32 [ %40, %39 ], [ %19, %16 ]
  %43 = icmp eq i32 %42, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #4
  br i1 %43, label %224, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 2
  %46 = load %struct.hb_face_t*, %struct.hb_face_t** %45, align 8
  %47 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %50 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %49, align 8
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %224, label %52

52:                                               ; preds = %44
  %53 = bitcast [3 x i32]* %4 to i8*
  %54 = getelementptr inbounds [3 x i32], [3 x i32]* %4, i64 0, i64 0
  %55 = getelementptr inbounds [3 x i32], [3 x i32]* %4, i64 0, i64 1
  %56 = getelementptr inbounds [3 x i32], [3 x i32]* %4, i64 0, i64 2
  %57 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 7, i32 0
  %58 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 7, i32 1
  %59 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 7, i32 2
  %60 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 9, i32 0
  %61 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 9, i32 1
  %62 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 9, i32 2
  %63 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 8, i32 0
  %64 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 8, i32 1
  %65 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 8, i32 2
  %66 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 6, i32 0
  %67 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 6, i32 1
  %68 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 6, i32 2
  %69 = zext i32 %48 to i64
  br label %70

70:                                               ; preds = %221, %52
  %71 = phi i64 [ 0, %52 ], [ %222, %221 ]
  %72 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %50, i64 %71, i32 4
  %73 = bitcast %union._hb_var_int_t* %72 to [4 x i8]*
  %74 = getelementptr inbounds [4 x i8], [4 x i8]* %73, i64 0, i64 3
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 4
  br i1 %76, label %77, label %221

77:                                               ; preds = %70
  %78 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %50, i64 %71, i32 0
  %79 = load i32, i32* %78, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %53) #4
  store i32 %42, i32* %54, align 4
  store i32 %79, i32* %55, align 4
  store i32 %42, i32* %56, align 4
  %80 = load i32, i32* %58, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %114, label %86

82:                                               ; preds = %86
  %83 = load i32, i32* %58, align 8
  %84 = zext i32 %83 to i64
  %85 = icmp ult i64 %96, %84
  br i1 %85, label %86, label %97

86:                                               ; preds = %77, %82
  %87 = phi i64 [ %96, %82 ], [ 0, %77 ]
  %88 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %57, align 8
  %89 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %88, i64 %87, i32 0
  %90 = load i16, i16* %89, align 4
  %91 = zext i16 %90 to i32
  %92 = load i8, i8* %59, align 4, !range !3
  %93 = zext i8 %92 to i32
  %94 = call i32 @hb_ot_layout_lookup_would_substitute(%struct.hb_face_t* %46, i32 %91, i32* nonnull %54, i32 2, i32 %93) #4
  %95 = icmp eq i32 %94, 0
  %96 = add nuw nsw i64 %87, 1
  br i1 %95, label %82, label %219

97:                                               ; preds = %82
  %98 = icmp eq i32 %83, 0
  br i1 %98, label %114, label %103

99:                                               ; preds = %103
  %100 = load i32, i32* %58, align 8
  %101 = zext i32 %100 to i64
  %102 = icmp ult i64 %113, %101
  br i1 %102, label %103, label %114

103:                                              ; preds = %97, %99
  %104 = phi i64 [ %113, %99 ], [ 0, %97 ]
  %105 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %57, align 8
  %106 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %105, i64 %104, i32 0
  %107 = load i16, i16* %106, align 4
  %108 = zext i16 %107 to i32
  %109 = load i8, i8* %59, align 4, !range !3
  %110 = zext i8 %109 to i32
  %111 = call i32 @hb_ot_layout_lookup_would_substitute(%struct.hb_face_t* %46, i32 %108, i32* %55, i32 2, i32 %110) #4
  %112 = icmp eq i32 %111, 0
  %113 = add nuw nsw i64 %104, 1
  br i1 %112, label %99, label %219

114:                                              ; preds = %99, %97, %77
  %115 = load i32, i32* %61, align 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %149, label %121

117:                                              ; preds = %121
  %118 = load i32, i32* %61, align 8
  %119 = zext i32 %118 to i64
  %120 = icmp ult i64 %131, %119
  br i1 %120, label %121, label %132

121:                                              ; preds = %114, %117
  %122 = phi i64 [ %131, %117 ], [ 0, %114 ]
  %123 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %60, align 8
  %124 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %123, i64 %122, i32 0
  %125 = load i16, i16* %124, align 4
  %126 = zext i16 %125 to i32
  %127 = load i8, i8* %62, align 4, !range !3
  %128 = zext i8 %127 to i32
  %129 = call i32 @hb_ot_layout_lookup_would_substitute(%struct.hb_face_t* %46, i32 %126, i32* nonnull %54, i32 2, i32 %128) #4
  %130 = icmp eq i32 %129, 0
  %131 = add nuw nsw i64 %122, 1
  br i1 %130, label %117, label %219

132:                                              ; preds = %117
  %133 = icmp eq i32 %118, 0
  br i1 %133, label %149, label %138

134:                                              ; preds = %138
  %135 = load i32, i32* %61, align 8
  %136 = zext i32 %135 to i64
  %137 = icmp ult i64 %148, %136
  br i1 %137, label %138, label %149

138:                                              ; preds = %132, %134
  %139 = phi i64 [ %148, %134 ], [ 0, %132 ]
  %140 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %60, align 8
  %141 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %140, i64 %139, i32 0
  %142 = load i16, i16* %141, align 4
  %143 = zext i16 %142 to i32
  %144 = load i8, i8* %62, align 4, !range !3
  %145 = zext i8 %144 to i32
  %146 = call i32 @hb_ot_layout_lookup_would_substitute(%struct.hb_face_t* %46, i32 %143, i32* %55, i32 2, i32 %145) #4
  %147 = icmp eq i32 %146, 0
  %148 = add nuw nsw i64 %139, 1
  br i1 %147, label %134, label %219

149:                                              ; preds = %134, %132, %114
  %150 = load i32, i32* %64, align 8
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %184, label %156

152:                                              ; preds = %156
  %153 = load i32, i32* %64, align 8
  %154 = zext i32 %153 to i64
  %155 = icmp ult i64 %166, %154
  br i1 %155, label %156, label %167

156:                                              ; preds = %149, %152
  %157 = phi i64 [ %166, %152 ], [ 0, %149 ]
  %158 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %63, align 8
  %159 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %158, i64 %157, i32 0
  %160 = load i16, i16* %159, align 4
  %161 = zext i16 %160 to i32
  %162 = load i8, i8* %65, align 4, !range !3
  %163 = zext i8 %162 to i32
  %164 = call i32 @hb_ot_layout_lookup_would_substitute(%struct.hb_face_t* %46, i32 %161, i32* nonnull %54, i32 2, i32 %163) #4
  %165 = icmp eq i32 %164, 0
  %166 = add nuw nsw i64 %157, 1
  br i1 %165, label %152, label %219

167:                                              ; preds = %152
  %168 = icmp eq i32 %153, 0
  br i1 %168, label %184, label %173

169:                                              ; preds = %173
  %170 = load i32, i32* %64, align 8
  %171 = zext i32 %170 to i64
  %172 = icmp ult i64 %183, %171
  br i1 %172, label %173, label %184

173:                                              ; preds = %167, %169
  %174 = phi i64 [ %183, %169 ], [ 0, %167 ]
  %175 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %63, align 8
  %176 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %175, i64 %174, i32 0
  %177 = load i16, i16* %176, align 4
  %178 = zext i16 %177 to i32
  %179 = load i8, i8* %65, align 4, !range !3
  %180 = zext i8 %179 to i32
  %181 = call i32 @hb_ot_layout_lookup_would_substitute(%struct.hb_face_t* %46, i32 %178, i32* %55, i32 2, i32 %180) #4
  %182 = icmp eq i32 %181, 0
  %183 = add nuw nsw i64 %174, 1
  br i1 %182, label %169, label %219

184:                                              ; preds = %169, %167, %149
  %185 = load i32, i32* %67, align 8
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %219, label %191

187:                                              ; preds = %191
  %188 = load i32, i32* %67, align 8
  %189 = zext i32 %188 to i64
  %190 = icmp ult i64 %201, %189
  br i1 %190, label %191, label %202

191:                                              ; preds = %184, %187
  %192 = phi i64 [ %201, %187 ], [ 0, %184 ]
  %193 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %66, align 8
  %194 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %193, i64 %192, i32 0
  %195 = load i16, i16* %194, align 4
  %196 = zext i16 %195 to i32
  %197 = load i8, i8* %68, align 4, !range !3
  %198 = zext i8 %197 to i32
  %199 = call i32 @hb_ot_layout_lookup_would_substitute(%struct.hb_face_t* %46, i32 %196, i32* nonnull %54, i32 2, i32 %198) #4
  %200 = icmp eq i32 %199, 0
  %201 = add nuw nsw i64 %192, 1
  br i1 %200, label %187, label %219

202:                                              ; preds = %187
  %203 = icmp eq i32 %188, 0
  br i1 %203, label %219, label %208

204:                                              ; preds = %208
  %205 = load i32, i32* %67, align 8
  %206 = zext i32 %205 to i64
  %207 = icmp ult i64 %218, %206
  br i1 %207, label %208, label %219

208:                                              ; preds = %202, %204
  %209 = phi i64 [ %218, %204 ], [ 0, %202 ]
  %210 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %66, align 8
  %211 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %210, i64 %209, i32 0
  %212 = load i16, i16* %211, align 4
  %213 = zext i16 %212 to i32
  %214 = load i8, i8* %68, align 4, !range !3
  %215 = zext i8 %214 to i32
  %216 = call i32 @hb_ot_layout_lookup_would_substitute(%struct.hb_face_t* %46, i32 %213, i32* %55, i32 2, i32 %215) #4
  %217 = icmp eq i32 %216, 0
  %218 = add nuw nsw i64 %209, 1
  br i1 %217, label %204, label %219

219:                                              ; preds = %86, %103, %121, %138, %156, %173, %191, %208, %204, %202, %184
  %220 = phi i8 [ 4, %202 ], [ 4, %184 ], [ 4, %204 ], [ 11, %208 ], [ 11, %191 ], [ 11, %173 ], [ 11, %156 ], [ 8, %138 ], [ 8, %121 ], [ 8, %103 ], [ 8, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %53) #4
  store i8 %220, i8* %74, align 1
  br label %221

221:                                              ; preds = %219, %70
  %222 = add nuw nsw i64 %71, 1
  %223 = icmp eq i64 %222, %69
  br i1 %223, label %224, label %70

224:                                              ; preds = %221, %7, %41, %44
  call void @_Z33hb_syllabic_insert_dotted_circlesP9hb_font_tP11hb_buffer_tjji(%struct.hb_font_t* %1, %struct.hb_buffer_t* %2, i32 4, i32 12, i32 15) #4
  %225 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %226 = load i32, i32* %225, align 8
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %257, label %228

228:                                              ; preds = %224
  %229 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %230 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %229, align 8
  %231 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %230, i64 0, i32 3
  %232 = bitcast %union._hb_var_int_t* %231 to [4 x i8]*
  %233 = getelementptr inbounds [4 x i8], [4 x i8]* %232, i64 0, i64 3
  %234 = load i8, i8* %233, align 1
  %235 = add i32 %226, -1
  %236 = zext i32 %235 to i64
  br label %237

237:                                              ; preds = %241, %228
  %238 = phi i64 [ %239, %241 ], [ 0, %228 ]
  %239 = add nuw nsw i64 %238, 1
  %240 = icmp eq i64 %238, %236
  br i1 %240, label %247, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %230, i64 %239, i32 3
  %243 = bitcast %union._hb_var_int_t* %242 to [4 x i8]*
  %244 = getelementptr inbounds [4 x i8], [4 x i8]* %243, i64 0, i64 3
  %245 = load i8, i8* %244, align 1
  %246 = icmp eq i8 %234, %245
  br i1 %246, label %237, label %247

247:                                              ; preds = %241, %237
  br i1 %227, label %257, label %248

248:                                              ; preds = %247
  %249 = trunc i64 %239 to i32
  %250 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 2
  %251 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %252 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %251, align 8
  %253 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %252, i64 0, i32 3
  %254 = bitcast %union._hb_var_int_t* %253 to [4 x i8]*
  %255 = getelementptr inbounds [4 x i8], [4 x i8]* %254, i64 0, i64 3
  %256 = load i8, i8* %255, align 1
  br label %259

257:                                              ; preds = %301, %224, %247
  %258 = call zeroext i1 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, ...) @_ZN11hb_buffer_t7messageEP9hb_font_tPKcz(%struct.hb_buffer_t* %2, %struct.hb_font_t* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0))
  br label %303

259:                                              ; preds = %248, %301
  %260 = phi i8 [ %256, %248 ], [ %289, %301 ]
  %261 = phi %struct.hb_glyph_info_t* [ %252, %248 ], [ %284, %301 ]
  %262 = phi i32 [ %249, %248 ], [ %292, %301 ]
  %263 = phi i32 [ 0, %248 ], [ %262, %301 ]
  %264 = load %struct.hb_face_t*, %struct.hb_face_t** %250, align 8
  %265 = and i8 %260, 15
  %266 = zext i8 %265 to i32
  switch i32 %266, label %282 [
    i32 1, label %267
    i32 0, label %267
    i32 4, label %268
    i32 2, label %268
  ]

267:                                              ; preds = %259, %259
  call fastcc void @_ZL37initial_reordering_consonant_syllablePK18hb_ot_shape_plan_tP9hb_face_tP11hb_buffer_tjj(%struct.hb_ot_shape_plan_t* %0, %struct.hb_face_t* %264, %struct.hb_buffer_t* %2, i32 %263, i32 %262) #4
  br label %282

268:                                              ; preds = %259, %259
  %269 = load %struct.indic_shape_plan_t*, %struct.indic_shape_plan_t** %9, align 8
  %270 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %269, i64 0, i32 2
  %271 = load i8, i8* %270, align 1, !range !3
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %281, label %273

273:                                              ; preds = %268
  %274 = add i32 %262, -1
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %261, i64 %275, i32 4
  %277 = bitcast %union._hb_var_int_t* %276 to [4 x i8]*
  %278 = getelementptr inbounds [4 x i8], [4 x i8]* %277, i64 0, i64 2
  %279 = load i8, i8* %278, align 2
  %280 = icmp eq i8 %279, 12
  br i1 %280, label %282, label %281

281:                                              ; preds = %273, %268
  call fastcc void @_ZL37initial_reordering_consonant_syllablePK18hb_ot_shape_plan_tP9hb_face_tP11hb_buffer_tjj(%struct.hb_ot_shape_plan_t* %0, %struct.hb_face_t* %264, %struct.hb_buffer_t* %2, i32 %263, i32 %262) #4
  br label %282

282:                                              ; preds = %259, %267, %273, %281
  %283 = load i32, i32* %225, align 8
  %284 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %251, align 8
  %285 = zext i32 %262 to i64
  %286 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %284, i64 %285, i32 3
  %287 = bitcast %union._hb_var_int_t* %286 to [4 x i8]*
  %288 = getelementptr inbounds [4 x i8], [4 x i8]* %287, i64 0, i64 3
  %289 = load i8, i8* %288, align 1
  br label %290

290:                                              ; preds = %294, %282
  %291 = phi i32 [ %262, %282 ], [ %292, %294 ]
  %292 = add i32 %291, 1
  %293 = icmp ult i32 %292, %283
  br i1 %293, label %294, label %301

294:                                              ; preds = %290
  %295 = zext i32 %292 to i64
  %296 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %284, i64 %295, i32 3
  %297 = bitcast %union._hb_var_int_t* %296 to [4 x i8]*
  %298 = getelementptr inbounds [4 x i8], [4 x i8]* %297, i64 0, i64 3
  %299 = load i8, i8* %298, align 1
  %300 = icmp eq i8 %289, %299
  br i1 %300, label %290, label %301

301:                                              ; preds = %290, %294
  %302 = icmp ult i32 %262, %226
  br i1 %302, label %259, label %257

303:                                              ; preds = %3, %257
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL22final_reordering_indicPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readonly, %struct.hb_font_t*, %struct.hb_buffer_t*) #0 {
  %4 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %870, label %7, !prof !2

7:                                                ; preds = %3
  %8 = tail call zeroext i1 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, ...) @_ZN11hb_buffer_t7messageEP9hb_font_tPKcz(%struct.hb_buffer_t* %2, %struct.hb_font_t* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0))
  br i1 %8, label %9, label %870

9:                                                ; preds = %7
  %10 = load i32, i32* %4, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %40, label %12

12:                                               ; preds = %9
  %13 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %14 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %13, align 8
  %15 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %14, i64 0, i32 3
  %16 = bitcast %union._hb_var_int_t* %15 to [4 x i8]*
  %17 = getelementptr inbounds [4 x i8], [4 x i8]* %16, i64 0, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = add i32 %10, -1
  %20 = zext i32 %19 to i64
  br label %21

21:                                               ; preds = %25, %12
  %22 = phi i64 [ %23, %25 ], [ 0, %12 ]
  %23 = add nuw nsw i64 %22, 1
  %24 = icmp eq i64 %22, %20
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %14, i64 %23, i32 3
  %27 = bitcast %union._hb_var_int_t* %26 to [4 x i8]*
  %28 = getelementptr inbounds [4 x i8], [4 x i8]* %27, i64 0, i64 3
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %18, %29
  br i1 %30, label %21, label %31

31:                                               ; preds = %25, %21
  br i1 %11, label %40, label %32

32:                                               ; preds = %31
  %33 = trunc i64 %23 to i32
  %34 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 4
  %35 = bitcast i8** %34 to %struct.indic_shape_plan_t**
  %36 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %37 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 10, i32 1
  %38 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 0, i32 1
  %39 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %36, align 8
  br label %42

40:                                               ; preds = %868, %9, %31
  %41 = tail call zeroext i1 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, ...) @_ZN11hb_buffer_t7messageEP9hb_font_tPKcz(%struct.hb_buffer_t* %2, %struct.hb_font_t* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0))
  br label %870

42:                                               ; preds = %32, %868
  %43 = phi %struct.hb_glyph_info_t* [ %39, %32 ], [ %851, %868 ]
  %44 = phi i32 [ %33, %32 ], [ %859, %868 ]
  %45 = phi i32 [ 0, %32 ], [ %44, %868 ]
  %46 = load %struct.indic_shape_plan_t*, %struct.indic_shape_plan_t** %35, align 8
  %47 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %46, i64 0, i32 4, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = icmp ne i32 %48, 0
  %50 = icmp ugt i32 %44, %45
  %51 = and i1 %50, %49
  br i1 %51, label %52, label %74

52:                                               ; preds = %42
  %53 = zext i32 %45 to i64
  %54 = zext i32 %44 to i64
  br label %55

55:                                               ; preds = %71, %52
  %56 = phi i64 [ %53, %52 ], [ %72, %71 ]
  %57 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %56, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %48
  br i1 %59, label %60, label %71

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %56, i32 3
  %62 = bitcast %union._hb_var_int_t* %61 to i16*
  %63 = load i16, i16* %62, align 4
  %64 = and i16 %63, 96
  %65 = icmp eq i16 %64, 96
  br i1 %65, label %66, label %71

66:                                               ; preds = %60
  %67 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %56, i32 4
  %68 = bitcast %union._hb_var_int_t* %67 to [4 x i8]*
  %69 = getelementptr inbounds [4 x i8], [4 x i8]* %68, i64 0, i64 2
  store i8 4, i8* %69, align 2
  %70 = and i16 %63, -97
  store i16 %70, i16* %62, align 4
  br label %71

71:                                               ; preds = %66, %60, %55
  %72 = add nuw nsw i64 %56, 1
  %73 = icmp eq i64 %72, %54
  br i1 %73, label %74, label %55

74:                                               ; preds = %71, %42
  %75 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %46, i64 0, i32 10, i64 4
  %76 = load i32, i32* %75, align 8
  %77 = icmp ne i32 %76, 0
  %78 = zext i1 %77 to i8
  br i1 %50, label %84, label %79

79:                                               ; preds = %74
  %80 = add i32 %45, 1
  %81 = icmp ult i32 %80, %44
  br i1 %81, label %82, label %679

82:                                               ; preds = %79
  %83 = zext i32 %45 to i64
  br label %462

84:                                               ; preds = %74
  %85 = zext i32 %45 to i64
  br label %86

86:                                               ; preds = %259, %84
  %87 = phi i64 [ %85, %84 ], [ %260, %259 ]
  %88 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %87, i32 4
  %89 = bitcast %union._hb_var_int_t* %88 to [4 x i8]*
  %90 = getelementptr inbounds [4 x i8], [4 x i8]* %89, i64 0, i64 3
  %91 = load i8, i8* %90, align 1
  %92 = icmp ugt i8 %91, 3
  br i1 %92, label %93, label %259

93:                                               ; preds = %86
  %94 = trunc i64 %87 to i32
  br i1 %77, label %95, label %161

95:                                               ; preds = %93
  %96 = add i32 %94, 1
  %97 = icmp ult i32 %96, %44
  br i1 %97, label %98, label %161

98:                                               ; preds = %95
  %99 = zext i32 %96 to i64
  br label %100

100:                                              ; preds = %157, %98
  %101 = phi i64 [ %99, %98 ], [ %158, %157 ]
  %102 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %101, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, %76
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %157, label %106

106:                                              ; preds = %100
  %107 = trunc i64 %101 to i32
  %108 = and i64 %101, 4294967295
  %109 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %108, i32 3
  %110 = bitcast %union._hb_var_int_t* %109 to i16*
  %111 = load i16, i16* %110, align 4
  %112 = and i16 %111, 112
  %113 = icmp eq i16 %112, 48
  br i1 %113, label %161, label %114

114:                                              ; preds = %106
  %115 = icmp ugt i32 %44, %107
  br i1 %115, label %116, label %151

116:                                              ; preds = %114
  %117 = and i16 %111, 32
  %118 = icmp eq i16 %117, 0
  %119 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %108, i32 4
  %120 = bitcast %union._hb_var_int_t* %119 to [4 x i8]*
  %121 = getelementptr inbounds [4 x i8], [4 x i8]* %120, i64 0, i64 2
  %122 = load i8, i8* %121, align 2
  %123 = icmp eq i8 %122, 4
  %124 = and i1 %118, %123
  br i1 %124, label %127, label %125

125:                                              ; preds = %116
  %126 = trunc i64 %101 to i32
  br label %148

127:                                              ; preds = %116, %134
  %128 = phi i32 [ %131, %134 ], [ %107, %116 ]
  %129 = phi i64 [ %130, %134 ], [ %108, %116 ]
  %130 = add nuw nsw i64 %129, 1
  %131 = add nuw i32 %128, 1
  %132 = trunc i64 %130 to i32
  %133 = icmp eq i32 %44, %132
  br i1 %133, label %148, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %130, i32 3
  %136 = bitcast %union._hb_var_int_t* %135 to i16*
  %137 = load i16, i16* %136, align 4
  %138 = and i16 %137, 32
  %139 = icmp eq i16 %138, 0
  %140 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %130, i32 4
  %141 = bitcast %union._hb_var_int_t* %140 to [4 x i8]*
  %142 = getelementptr inbounds [4 x i8], [4 x i8]* %141, i64 0, i64 2
  %143 = load i8, i8* %142, align 2
  %144 = icmp eq i8 %143, 4
  %145 = and i1 %139, %144
  br i1 %145, label %127, label %146

146:                                              ; preds = %134
  %147 = trunc i64 %130 to i32
  br label %148

148:                                              ; preds = %127, %146, %125
  %149 = phi i32 [ %126, %125 ], [ %147, %146 ], [ %131, %127 ]
  %150 = zext i32 %149 to i64
  br label %151

151:                                              ; preds = %148, %114
  %152 = phi i64 [ %150, %148 ], [ %108, %114 ]
  %153 = phi i32 [ %149, %148 ], [ %107, %114 ]
  %154 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %152, i32 4
  %155 = bitcast %union._hb_var_int_t* %154 to [4 x i8]*
  %156 = getelementptr inbounds [4 x i8], [4 x i8]* %155, i64 0, i64 3
  store i8 4, i8* %156, align 1
  br label %161

157:                                              ; preds = %100
  %158 = add nuw nsw i64 %101, 1
  %159 = trunc i64 %158 to i32
  %160 = icmp eq i32 %44, %159
  br i1 %160, label %161, label %100

161:                                              ; preds = %157, %151, %106, %95, %93
  %162 = phi i32 [ %94, %95 ], [ %94, %93 ], [ %153, %151 ], [ %94, %106 ], [ %94, %157 ]
  %163 = phi i8 [ 1, %95 ], [ 0, %93 ], [ 0, %151 ], [ %78, %106 ], [ %78, %157 ]
  %164 = load i32, i32* %37, align 4
  %165 = icmp eq i32 %164, 1298954605
  br i1 %165, label %166, label %247

166:                                              ; preds = %161
  %167 = add i32 %162, 1
  %168 = icmp ult i32 %167, %44
  br i1 %168, label %169, label %247

169:                                              ; preds = %166, %243
  %170 = phi i32 [ %245, %243 ], [ %167, %166 ]
  %171 = phi i32 [ %244, %243 ], [ %162, %166 ]
  %172 = icmp ult i32 %170, %44
  br i1 %172, label %173, label %195

173:                                              ; preds = %169, %192
  %174 = phi i32 [ %193, %192 ], [ %170, %169 ]
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %175, i32 3
  %177 = bitcast %union._hb_var_int_t* %176 to i16*
  %178 = load i16, i16* %177, align 4
  %179 = and i16 %178, 32
  %180 = icmp eq i16 %179, 0
  br i1 %180, label %181, label %195

181:                                              ; preds = %173
  %182 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %175, i32 4
  %183 = bitcast %union._hb_var_int_t* %182 to [4 x i8]*
  %184 = getelementptr inbounds [4 x i8], [4 x i8]* %183, i64 0, i64 2
  %185 = load i8, i8* %184, align 2
  %186 = icmp ult i8 %185, 32
  %187 = zext i8 %185 to i32
  %188 = shl i32 1, %187
  %189 = and i32 %188, 96
  %190 = icmp ne i32 %189, 0
  %191 = and i1 %186, %190
  br i1 %191, label %192, label %195

192:                                              ; preds = %181
  %193 = add i32 %174, 1
  %194 = icmp eq i32 %193, %44
  br i1 %194, label %247, label %173

195:                                              ; preds = %181, %173, %169
  %196 = phi i32 [ %170, %169 ], [ %174, %173 ], [ %174, %181 ]
  %197 = icmp eq i32 %196, %44
  br i1 %197, label %247, label %198

198:                                              ; preds = %195
  %199 = zext i32 %196 to i64
  %200 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %199, i32 3
  %201 = bitcast %union._hb_var_int_t* %200 to i16*
  %202 = load i16, i16* %201, align 4
  %203 = and i16 %202, 32
  %204 = icmp eq i16 %203, 0
  %205 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %199, i32 4
  %206 = bitcast %union._hb_var_int_t* %205 to [4 x i8]*
  %207 = getelementptr inbounds [4 x i8], [4 x i8]* %206, i64 0, i64 2
  %208 = load i8, i8* %207, align 2
  %209 = icmp eq i8 %208, 4
  %210 = and i1 %204, %209
  br i1 %210, label %211, label %247

211:                                              ; preds = %198, %222
  %212 = phi i32 [ %213, %222 ], [ %196, %198 ]
  %213 = add i32 %212, 1
  %214 = icmp ult i32 %213, %44
  br i1 %214, label %215, label %243

215:                                              ; preds = %211
  %216 = zext i32 %213 to i64
  %217 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %216, i32 3
  %218 = bitcast %union._hb_var_int_t* %217 to i16*
  %219 = load i16, i16* %218, align 4
  %220 = and i16 %219, 32
  %221 = icmp eq i16 %220, 0
  br i1 %221, label %222, label %243

222:                                              ; preds = %215
  %223 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %216, i32 4
  %224 = bitcast %union._hb_var_int_t* %223 to [4 x i8]*
  %225 = getelementptr inbounds [4 x i8], [4 x i8]* %224, i64 0, i64 2
  %226 = load i8, i8* %225, align 2
  %227 = icmp ult i8 %226, 32
  %228 = zext i8 %226 to i32
  %229 = shl i32 1, %228
  %230 = and i32 %229, 96
  %231 = icmp ne i32 %230, 0
  %232 = and i1 %227, %231
  br i1 %232, label %211, label %233

233:                                              ; preds = %222
  %234 = and i32 %229, 727046
  %235 = icmp ne i32 %234, 0
  %236 = and i1 %227, %235
  br i1 %236, label %237, label %243

237:                                              ; preds = %233
  %238 = bitcast %union._hb_var_int_t* %223 to [4 x i8]*
  %239 = getelementptr inbounds [4 x i8], [4 x i8]* %238, i64 0, i64 3
  %240 = load i8, i8* %239, align 1
  %241 = icmp eq i8 %240, 8
  br i1 %241, label %242, label %243

242:                                              ; preds = %237
  store i8 4, i8* %239, align 1
  br label %243

243:                                              ; preds = %215, %211, %242, %237, %233
  %244 = phi i32 [ %213, %242 ], [ %171, %237 ], [ %171, %233 ], [ %171, %211 ], [ %171, %215 ]
  %245 = add i32 %212, 2
  %246 = icmp ult i32 %245, %44
  br i1 %246, label %169, label %247

247:                                              ; preds = %243, %198, %195, %192, %166, %161
  %248 = phi i32 [ %162, %161 ], [ %162, %166 ], [ %171, %192 ], [ %244, %243 ], [ %171, %198 ], [ %171, %195 ]
  %249 = icmp ugt i32 %248, %45
  br i1 %249, label %250, label %263

250:                                              ; preds = %247
  %251 = zext i32 %248 to i64
  %252 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %251, i32 4
  %253 = bitcast %union._hb_var_int_t* %252 to [4 x i8]*
  %254 = getelementptr inbounds [4 x i8], [4 x i8]* %253, i64 0, i64 3
  %255 = load i8, i8* %254, align 1
  %256 = icmp ugt i8 %255, 4
  %257 = zext i1 %256 to i32
  %258 = sub nuw i32 %248, %257
  br label %263

259:                                              ; preds = %86
  %260 = add nuw nsw i64 %87, 1
  %261 = trunc i64 %260 to i32
  %262 = icmp eq i32 %44, %261
  br i1 %262, label %263, label %86

263:                                              ; preds = %259, %250, %247
  %264 = phi i32 [ %248, %247 ], [ %258, %250 ], [ %44, %259 ]
  %265 = phi i8 [ %163, %247 ], [ %163, %250 ], [ %78, %259 ]
  %266 = icmp eq i32 %264, %44
  %267 = icmp ugt i32 %264, %45
  %268 = and i1 %266, %267
  br i1 %268, label %269, label %284

269:                                              ; preds = %263
  %270 = add i32 %44, -1
  %271 = zext i32 %270 to i64
  %272 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %271, i32 3
  %273 = bitcast %union._hb_var_int_t* %272 to i16*
  %274 = load i16, i16* %273, align 4
  %275 = and i16 %274, 32
  %276 = icmp eq i16 %275, 0
  br i1 %276, label %277, label %311

277:                                              ; preds = %269
  %278 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %271, i32 4
  %279 = bitcast %union._hb_var_int_t* %278 to [4 x i8]*
  %280 = getelementptr inbounds [4 x i8], [4 x i8]* %279, i64 0, i64 2
  %281 = load i8, i8* %280, align 2
  %282 = icmp eq i8 %281, 6
  %283 = select i1 %282, i32 %270, i32 %44
  br label %284

284:                                              ; preds = %277, %263
  %285 = phi i32 [ %264, %263 ], [ %283, %277 ]
  %286 = icmp ult i32 %285, %44
  %287 = icmp ugt i32 %285, %45
  %288 = and i1 %286, %287
  br i1 %288, label %289, label %311

289:                                              ; preds = %284, %308
  %290 = phi i32 [ %309, %308 ], [ %285, %284 ]
  %291 = zext i32 %290 to i64
  %292 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %291, i32 3
  %293 = bitcast %union._hb_var_int_t* %292 to i16*
  %294 = load i16, i16* %293, align 4
  %295 = and i16 %294, 32
  %296 = icmp eq i16 %295, 0
  br i1 %296, label %297, label %311

297:                                              ; preds = %289
  %298 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %291, i32 4
  %299 = bitcast %union._hb_var_int_t* %298 to [4 x i8]*
  %300 = getelementptr inbounds [4 x i8], [4 x i8]* %299, i64 0, i64 2
  %301 = load i8, i8* %300, align 2
  %302 = icmp ult i8 %301, 32
  %303 = zext i8 %301 to i32
  %304 = shl i32 1, %303
  %305 = and i32 %304, 24
  %306 = icmp ne i32 %305, 0
  %307 = and i1 %302, %306
  br i1 %307, label %308, label %311

308:                                              ; preds = %297
  %309 = add i32 %290, -1
  %310 = icmp ugt i32 %309, %45
  br i1 %310, label %289, label %311

311:                                              ; preds = %308, %297, %289, %284, %269
  %312 = phi i32 [ %285, %284 ], [ %44, %269 ], [ %290, %289 ], [ %290, %297 ], [ %309, %308 ]
  %313 = add i32 %45, 1
  %314 = icmp ult i32 %313, %44
  %315 = icmp ugt i32 %312, %45
  %316 = and i1 %314, %315
  br i1 %316, label %317, label %460

317:                                              ; preds = %311
  %318 = icmp eq i32 %312, %44
  %319 = select i1 %318, i32 -2, i32 -1
  %320 = add i32 %319, %312
  %321 = load i32, i32* %37, align 4
  switch i32 %321, label %322 [
    i32 1298954605, label %384
    i32 1415671148, label %384
  ]

322:                                              ; preds = %317, %382
  %323 = phi i32 [ %383, %382 ], [ %320, %317 ]
  %324 = icmp ugt i32 %323, %45
  br i1 %324, label %325, label %352

325:                                              ; preds = %322
  %326 = zext i32 %323 to i64
  br label %327

327:                                              ; preds = %345, %325
  %328 = phi i64 [ %326, %325 ], [ %349, %345 ]
  %329 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %328, i32 3
  %330 = bitcast %union._hb_var_int_t* %329 to i16*
  %331 = load i16, i16* %330, align 4
  %332 = and i16 %331, 32
  %333 = icmp eq i16 %332, 0
  br i1 %333, label %334, label %345

334:                                              ; preds = %327
  %335 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %328, i32 4
  %336 = bitcast %union._hb_var_int_t* %335 to [4 x i8]*
  %337 = getelementptr inbounds [4 x i8], [4 x i8]* %336, i64 0, i64 2
  %338 = load i8, i8* %337, align 2
  %339 = icmp ult i8 %338, 32
  %340 = zext i8 %338 to i32
  %341 = shl i32 1, %340
  %342 = and i32 %341, 144
  %343 = icmp ne i32 %342, 0
  %344 = and i1 %339, %343
  br i1 %344, label %350, label %345

345:                                              ; preds = %327, %334
  %346 = trunc i64 %328 to i32
  %347 = add i32 %346, -1
  %348 = icmp ugt i32 %347, %45
  %349 = add nsw i64 %328, -1
  br i1 %348, label %327, label %352

350:                                              ; preds = %334
  %351 = trunc i64 %328 to i32
  br label %352

352:                                              ; preds = %345, %350, %322
  %353 = phi i32 [ %323, %322 ], [ %351, %350 ], [ %347, %345 ]
  %354 = phi i1 [ true, %322 ], [ false, %350 ], [ true, %345 ]
  %355 = zext i32 %353 to i64
  %356 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %355, i32 3
  %357 = bitcast %union._hb_var_int_t* %356 to i16*
  %358 = load i16, i16* %357, align 4
  %359 = and i16 %358, 32
  %360 = icmp eq i16 %359, 0
  %361 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %355, i32 4
  %362 = bitcast %union._hb_var_int_t* %361 to [4 x i8]*
  %363 = getelementptr inbounds [4 x i8], [4 x i8]* %362, i64 0, i64 2
  %364 = load i8, i8* %363, align 2
  %365 = icmp eq i8 %364, 4
  %366 = and i1 %360, %365
  br i1 %366, label %367, label %387

367:                                              ; preds = %352
  %368 = getelementptr inbounds [4 x i8], [4 x i8]* %362, i64 0, i64 3
  %369 = load i8, i8* %368, align 1
  %370 = icmp eq i8 %369, 2
  br i1 %370, label %387, label %371

371:                                              ; preds = %367
  %372 = add i32 %353, 1
  %373 = icmp ult i32 %372, %44
  br i1 %373, label %374, label %384

374:                                              ; preds = %371
  %375 = zext i32 %372 to i64
  %376 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %375, i32 4
  %377 = bitcast %union._hb_var_int_t* %376 to [4 x i8]*
  %378 = getelementptr inbounds [4 x i8], [4 x i8]* %377, i64 0, i64 2
  %379 = load i8, i8* %378, align 2
  %380 = icmp ne i8 %379, 6
  %381 = or i1 %354, %380
  br i1 %381, label %384, label %382

382:                                              ; preds = %374
  %383 = add i32 %353, -1
  br label %322

384:                                              ; preds = %374, %371, %317, %317
  %385 = phi i32 [ %320, %317 ], [ %320, %317 ], [ %353, %371 ], [ %353, %374 ]
  %386 = icmp ugt i32 %385, %45
  br i1 %386, label %388, label %387

387:                                              ; preds = %367, %352, %388, %384
  br label %441

388:                                              ; preds = %384
  %389 = zext i32 %385 to i64
  %390 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %389, i32 4
  %391 = bitcast %union._hb_var_int_t* %390 to [4 x i8]*
  %392 = getelementptr inbounds [4 x i8], [4 x i8]* %391, i64 0, i64 3
  %393 = load i8, i8* %392, align 1
  %394 = icmp eq i8 %393, 2
  br i1 %394, label %387, label %395

395:                                              ; preds = %388, %436
  %396 = phi i64 [ %440, %436 ], [ %389, %388 ]
  %397 = phi i32 [ %438, %436 ], [ %312, %388 ]
  %398 = phi i32 [ %437, %436 ], [ %385, %388 ]
  %399 = trunc i64 %396 to i32
  %400 = add i32 %399, -1
  %401 = zext i32 %400 to i64
  %402 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %401
  %403 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %401, i32 4
  %404 = bitcast %union._hb_var_int_t* %403 to [4 x i8]*
  %405 = getelementptr inbounds [4 x i8], [4 x i8]* %404, i64 0, i64 3
  %406 = load i8, i8* %405, align 1
  %407 = icmp eq i8 %406, 2
  br i1 %407, label %408, label %436

408:                                              ; preds = %395
  %409 = icmp ult i32 %400, %397
  %410 = icmp ule i32 %397, %398
  %411 = and i1 %410, %409
  %412 = zext i1 %411 to i32
  %413 = sub i32 %397, %412
  %414 = bitcast %struct.hb_glyph_info_t* %402 to <4 x i32>*
  %415 = load <4 x i32>, <4 x i32>* %414, align 4
  %416 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %401, i32 4, i32 0
  %417 = load i32, i32* %416, align 4
  %418 = bitcast %struct.hb_glyph_info_t* %402 to i8*
  %419 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %396
  %420 = bitcast %struct.hb_glyph_info_t* %419 to i8*
  %421 = sub i32 %398, %400
  %422 = zext i32 %421 to i64
  %423 = mul nuw nsw i64 %422, 20
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %418, i8* align 4 %420, i64 %423, i1 false) #4
  %424 = zext i32 %398 to i64
  %425 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %424, i32 0
  %426 = bitcast i32* %425 to <4 x i32>*
  store <4 x i32> %415, <4 x i32>* %426, align 4
  %427 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %424, i32 4, i32 0
  store i32 %417, i32* %427, align 4
  %428 = add i32 %413, 1
  %429 = icmp ult i32 %428, %44
  %430 = select i1 %429, i32 %428, i32 %44
  %431 = sub i32 %430, %398
  %432 = icmp ult i32 %431, 2
  br i1 %432, label %434, label %433

433:                                              ; preds = %408
  tail call void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t* %2, i32 %398, i32 %430) #4
  br label %434

434:                                              ; preds = %433, %408
  %435 = add i32 %398, -1
  br label %436

436:                                              ; preds = %434, %395
  %437 = phi i32 [ %435, %434 ], [ %398, %395 ]
  %438 = phi i32 [ %413, %434 ], [ %397, %395 ]
  %439 = icmp ugt i32 %400, %45
  %440 = add nsw i64 %396, -1
  br i1 %439, label %395, label %460

441:                                              ; preds = %387, %456
  %442 = phi i64 [ %457, %456 ], [ %85, %387 ]
  %443 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %442, i32 4
  %444 = bitcast %union._hb_var_int_t* %443 to [4 x i8]*
  %445 = getelementptr inbounds [4 x i8], [4 x i8]* %444, i64 0, i64 3
  %446 = load i8, i8* %445, align 1
  %447 = icmp eq i8 %446, 2
  br i1 %447, label %448, label %456

448:                                              ; preds = %441
  %449 = trunc i64 %442 to i32
  %450 = add i32 %312, 1
  %451 = icmp ult i32 %450, %44
  %452 = select i1 %451, i32 %450, i32 %44
  %453 = sub i32 %452, %449
  %454 = icmp ult i32 %453, 2
  br i1 %454, label %460, label %455

455:                                              ; preds = %448
  tail call void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t* %2, i32 %449, i32 %452) #4
  br label %462

456:                                              ; preds = %441
  %457 = add nuw nsw i64 %442, 1
  %458 = trunc i64 %457 to i32
  %459 = icmp eq i32 %312, %458
  br i1 %459, label %460, label %441

460:                                              ; preds = %436, %456, %448, %311
  %461 = phi i32 [ %312, %311 ], [ %312, %448 ], [ %312, %456 ], [ %438, %436 ]
  br i1 %314, label %462, label %679

462:                                              ; preds = %82, %455, %460
  %463 = phi i64 [ %83, %82 ], [ %85, %455 ], [ %85, %460 ]
  %464 = phi i32 [ %45, %82 ], [ %312, %455 ], [ %461, %460 ]
  %465 = phi i8 [ %78, %82 ], [ %265, %455 ], [ %265, %460 ]
  %466 = phi i32 [ %80, %82 ], [ %313, %455 ], [ %313, %460 ]
  %467 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %463
  %468 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %463, i32 4
  %469 = bitcast %union._hb_var_int_t* %468 to [4 x i8]*
  %470 = getelementptr inbounds [4 x i8], [4 x i8]* %469, i64 0, i64 3
  %471 = load i8, i8* %470, align 1
  %472 = icmp eq i8 %471, 1
  br i1 %472, label %473, label %679

473:                                              ; preds = %462
  %474 = getelementptr inbounds [4 x i8], [4 x i8]* %469, i64 0, i64 2
  %475 = load i8, i8* %474, align 2
  %476 = icmp eq i8 %475, 15
  %477 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %463, i32 3
  %478 = bitcast %union._hb_var_int_t* %477 to i16*
  %479 = load i16, i16* %478, align 4
  %480 = and i16 %479, 96
  %481 = icmp eq i16 %480, 32
  %482 = xor i1 %476, %481
  br i1 %482, label %483, label %679

483:                                              ; preds = %473
  %484 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %46, i64 0, i32 0
  %485 = load %struct.indic_config_t*, %struct.indic_config_t** %484, align 8
  %486 = getelementptr inbounds %struct.indic_config_t, %struct.indic_config_t* %485, i64 0, i32 4
  %487 = load i32, i32* %486, align 4
  %488 = icmp eq i32 %487, 12
  br i1 %488, label %561, label %489

489:                                              ; preds = %483
  %490 = icmp ult i32 %466, %464
  br i1 %490, label %491, label %529

491:                                              ; preds = %489, %506
  %492 = phi i32 [ %505, %506 ], [ %466, %489 ]
  %493 = zext i32 %492 to i64
  %494 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %493, i32 3
  %495 = bitcast %union._hb_var_int_t* %494 to i16*
  %496 = load i16, i16* %495, align 4
  %497 = and i16 %496, 32
  %498 = icmp eq i16 %497, 0
  %499 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %493, i32 4
  %500 = bitcast %union._hb_var_int_t* %499 to [4 x i8]*
  %501 = getelementptr inbounds [4 x i8], [4 x i8]* %500, i64 0, i64 2
  %502 = load i8, i8* %501, align 2
  %503 = icmp eq i8 %502, 4
  %504 = and i1 %498, %503
  %505 = add i32 %492, 1
  br i1 %504, label %508, label %506

506:                                              ; preds = %491
  %507 = icmp eq i32 %505, %464
  br i1 %507, label %529, label %491

508:                                              ; preds = %491
  %509 = icmp ult i32 %505, %464
  br i1 %509, label %510, label %652

510:                                              ; preds = %508
  %511 = zext i32 %505 to i64
  %512 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %511, i32 3
  %513 = bitcast %union._hb_var_int_t* %512 to i16*
  %514 = load i16, i16* %513, align 4
  %515 = and i16 %514, 32
  %516 = icmp eq i16 %515, 0
  br i1 %516, label %517, label %652

517:                                              ; preds = %510
  %518 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %511, i32 4
  %519 = bitcast %union._hb_var_int_t* %518 to [4 x i8]*
  %520 = getelementptr inbounds [4 x i8], [4 x i8]* %519, i64 0, i64 2
  %521 = load i8, i8* %520, align 2
  %522 = icmp ult i8 %521, 32
  %523 = zext i8 %521 to i32
  %524 = shl i32 1, %523
  %525 = and i32 %524, 96
  %526 = icmp ne i32 %525, 0
  %527 = and i1 %522, %526
  %528 = select i1 %527, i32 %505, i32 %492
  br label %652

529:                                              ; preds = %506, %489
  switch i32 %487, label %561 [
    i32 5, label %530
    i32 9, label %543
  ]

530:                                              ; preds = %529, %534
  %531 = phi i32 [ %532, %534 ], [ %464, %529 ]
  %532 = add i32 %531, 1
  %533 = icmp ult i32 %532, %44
  br i1 %533, label %534, label %541

534:                                              ; preds = %530
  %535 = zext i32 %532 to i64
  %536 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %535, i32 4
  %537 = bitcast %union._hb_var_int_t* %536 to [4 x i8]*
  %538 = getelementptr inbounds [4 x i8], [4 x i8]* %537, i64 0, i64 3
  %539 = load i8, i8* %538, align 1
  %540 = icmp ult i8 %539, 6
  br i1 %540, label %530, label %541

541:                                              ; preds = %534, %530
  %542 = icmp ult i32 %531, %44
  br i1 %542, label %652, label %561

543:                                              ; preds = %529, %547
  %544 = phi i32 [ %545, %547 ], [ %464, %529 ]
  %545 = add i32 %544, 1
  %546 = icmp ult i32 %545, %44
  br i1 %546, label %547, label %559

547:                                              ; preds = %543
  %548 = zext i32 %545 to i64
  %549 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %548, i32 4
  %550 = bitcast %union._hb_var_int_t* %549 to [4 x i8]*
  %551 = getelementptr inbounds [4 x i8], [4 x i8]* %550, i64 0, i64 3
  %552 = load i8, i8* %551, align 1
  %553 = icmp ugt i8 %552, 31
  %554 = zext i8 %552 to i32
  %555 = shl i32 1, %554
  %556 = and i32 %555, 22528
  %557 = icmp eq i32 %556, 0
  %558 = or i1 %553, %557
  br i1 %558, label %543, label %559

559:                                              ; preds = %547, %543
  %560 = icmp ult i32 %544, %44
  br i1 %560, label %652, label %561

561:                                              ; preds = %559, %541, %529, %483
  %562 = icmp ult i32 %466, %464
  br i1 %562, label %564, label %563

563:                                              ; preds = %579, %561
  br label %606

564:                                              ; preds = %561
  %565 = zext i32 %466 to i64
  br label %566

566:                                              ; preds = %579, %564
  %567 = phi i64 [ %565, %564 ], [ %580, %579 ]
  %568 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %567, i32 3
  %569 = bitcast %union._hb_var_int_t* %568 to i16*
  %570 = load i16, i16* %569, align 4
  %571 = and i16 %570, 32
  %572 = icmp eq i16 %571, 0
  %573 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %567, i32 4
  %574 = bitcast %union._hb_var_int_t* %573 to [4 x i8]*
  %575 = getelementptr inbounds [4 x i8], [4 x i8]* %574, i64 0, i64 2
  %576 = load i8, i8* %575, align 2
  %577 = icmp eq i8 %576, 4
  %578 = and i1 %572, %577
  br i1 %578, label %583, label %579

579:                                              ; preds = %566
  %580 = add nuw nsw i64 %567, 1
  %581 = trunc i64 %580 to i32
  %582 = icmp eq i32 %464, %581
  br i1 %582, label %563, label %566

583:                                              ; preds = %566
  %584 = trunc i64 %567 to i32
  %585 = add nuw i32 %584, 1
  %586 = icmp ult i32 %585, %464
  br i1 %586, label %587, label %652

587:                                              ; preds = %583
  %588 = zext i32 %585 to i64
  %589 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %588, i32 3
  %590 = bitcast %union._hb_var_int_t* %589 to i16*
  %591 = load i16, i16* %590, align 4
  %592 = and i16 %591, 32
  %593 = icmp eq i16 %592, 0
  br i1 %593, label %594, label %652

594:                                              ; preds = %587
  %595 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %588, i32 4
  %596 = bitcast %union._hb_var_int_t* %595 to [4 x i8]*
  %597 = getelementptr inbounds [4 x i8], [4 x i8]* %596, i64 0, i64 2
  %598 = load i8, i8* %597, align 2
  %599 = icmp ult i8 %598, 32
  %600 = zext i8 %598 to i32
  %601 = shl i32 1, %600
  %602 = and i32 %601, 96
  %603 = icmp ne i32 %602, 0
  %604 = and i1 %599, %603
  %605 = select i1 %604, i32 %585, i32 %584
  br label %652

606:                                              ; preds = %563, %610
  %607 = phi i32 [ %608, %610 ], [ %44, %563 ]
  %608 = add i32 %607, -1
  %609 = icmp ugt i32 %608, %45
  br i1 %609, label %610, label %617

610:                                              ; preds = %606
  %611 = zext i32 %608 to i64
  %612 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %611, i32 4
  %613 = bitcast %union._hb_var_int_t* %612 to [4 x i8]*
  %614 = getelementptr inbounds [4 x i8], [4 x i8]* %613, i64 0, i64 3
  %615 = load i8, i8* %614, align 1
  %616 = icmp eq i8 %615, 14
  br i1 %616, label %606, label %617

617:                                              ; preds = %610, %606
  %618 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %46, i64 0, i32 2
  %619 = load i8, i8* %618, align 1, !range !3
  %620 = icmp eq i8 %619, 0
  br i1 %620, label %621, label %652

621:                                              ; preds = %617
  %622 = zext i32 %608 to i64
  %623 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %622, i32 3
  %624 = bitcast %union._hb_var_int_t* %623 to i16*
  %625 = load i16, i16* %624, align 4
  %626 = and i16 %625, 32
  %627 = icmp eq i16 %626, 0
  %628 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %622, i32 4
  %629 = bitcast %union._hb_var_int_t* %628 to [4 x i8]*
  %630 = getelementptr inbounds [4 x i8], [4 x i8]* %629, i64 0, i64 2
  %631 = load i8, i8* %630, align 2
  %632 = icmp eq i8 %631, 4
  %633 = and i1 %627, %632
  br i1 %633, label %634, label %652, !prof !2

634:                                              ; preds = %621
  %635 = add i32 %464, 1
  %636 = icmp ult i32 %635, %608
  br i1 %636, label %637, label %652

637:                                              ; preds = %634
  %638 = zext i32 %635 to i64
  br label %639

639:                                              ; preds = %637, %639
  %640 = phi i64 [ %638, %637 ], [ %649, %639 ]
  %641 = phi i32 [ %608, %637 ], [ %648, %639 ]
  %642 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %640, i32 4
  %643 = bitcast %union._hb_var_int_t* %642 to [4 x i8]*
  %644 = getelementptr inbounds [4 x i8], [4 x i8]* %643, i64 0, i64 2
  %645 = load i8, i8* %644, align 2
  %646 = icmp eq i8 %645, 7
  %647 = zext i1 %646 to i32
  %648 = sub nuw i32 %641, %647
  %649 = add nuw nsw i64 %640, 1
  %650 = zext i32 %648 to i64
  %651 = icmp ult i64 %649, %650
  br i1 %651, label %639, label %652

652:                                              ; preds = %639, %634, %621, %617, %594, %587, %583, %559, %541, %517, %510, %508
  %653 = phi i32 [ %584, %583 ], [ %608, %617 ], [ %608, %621 ], [ %492, %508 ], [ %531, %541 ], [ %544, %559 ], [ %492, %510 ], [ %584, %587 ], [ %528, %517 ], [ %605, %594 ], [ %608, %634 ], [ %648, %639 ]
  %654 = add i32 %653, 1
  %655 = sub i32 %654, %45
  %656 = icmp ult i32 %655, 2
  br i1 %656, label %658, label %657

657:                                              ; preds = %652
  tail call void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t* %2, i32 %45, i32 %654) #4
  br label %658

658:                                              ; preds = %657, %652
  %659 = bitcast %struct.hb_glyph_info_t* %467 to <4 x i32>*
  %660 = load <4 x i32>, <4 x i32>* %659, align 4
  %661 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %463, i32 4, i32 0
  %662 = load i32, i32* %661, align 4
  %663 = bitcast %struct.hb_glyph_info_t* %467 to i8*
  %664 = zext i32 %466 to i64
  %665 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %664
  %666 = bitcast %struct.hb_glyph_info_t* %665 to i8*
  %667 = sub i32 %653, %45
  %668 = zext i32 %667 to i64
  %669 = mul nuw nsw i64 %668, 20
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %663, i8* align 4 %666, i64 %669, i1 false) #4
  %670 = zext i32 %653 to i64
  %671 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %670, i32 0
  %672 = bitcast i32* %671 to <4 x i32>*
  store <4 x i32> %660, <4 x i32>* %672, align 4
  %673 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %670, i32 4, i32 0
  store i32 %662, i32* %673, align 4
  %674 = icmp ugt i32 %464, %45
  %675 = icmp ule i32 %464, %653
  %676 = and i1 %674, %675
  %677 = zext i1 %676 to i32
  %678 = sub i32 %464, %677
  br label %679

679:                                              ; preds = %658, %473, %462, %460, %79
  %680 = phi i8 [ %465, %473 ], [ %465, %462 ], [ %265, %460 ], [ %465, %658 ], [ %78, %79 ]
  %681 = phi i32 [ %466, %473 ], [ %466, %462 ], [ %313, %460 ], [ %466, %658 ], [ %80, %79 ]
  %682 = phi i32 [ %464, %473 ], [ %464, %462 ], [ %461, %460 ], [ %678, %658 ], [ %45, %79 ]
  %683 = and i8 %680, 1
  %684 = icmp eq i8 %683, 0
  br i1 %684, label %812, label %685

685:                                              ; preds = %679
  %686 = add i32 %682, 1
  %687 = icmp ult i32 %686, %44
  br i1 %687, label %688, label %812

688:                                              ; preds = %685
  %689 = load i32, i32* %75, align 8
  %690 = zext i32 %686 to i64
  br label %691

691:                                              ; preds = %808, %688
  %692 = phi i64 [ %690, %688 ], [ %809, %808 ]
  %693 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %692, i32 1
  %694 = load i32, i32* %693, align 4
  %695 = and i32 %694, %689
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %808, label %697

697:                                              ; preds = %691
  %698 = trunc i64 %692 to i32
  %699 = and i64 %692, 4294967295
  %700 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %699, i32 3
  %701 = bitcast %union._hb_var_int_t* %700 to i16*
  %702 = load i16, i16* %701, align 4
  %703 = and i16 %702, 96
  %704 = icmp eq i16 %703, 32
  br i1 %704, label %705, label %812

705:                                              ; preds = %697
  %706 = load i32, i32* %37, align 4
  switch i32 %706, label %707 [
    i32 1298954605, label %737
    i32 1415671148, label %737
  ]

707:                                              ; preds = %705
  %708 = icmp ugt i32 %682, %45
  br i1 %708, label %709, label %737

709:                                              ; preds = %707
  %710 = zext i32 %682 to i64
  br label %711

711:                                              ; preds = %732, %709
  %712 = phi i64 [ %710, %709 ], [ %734, %732 ]
  %713 = trunc i64 %712 to i32
  %714 = add i32 %713, -1
  %715 = zext i32 %714 to i64
  %716 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %715, i32 3
  %717 = bitcast %union._hb_var_int_t* %716 to i16*
  %718 = load i16, i16* %717, align 4
  %719 = and i16 %718, 32
  %720 = icmp eq i16 %719, 0
  br i1 %720, label %721, label %732

721:                                              ; preds = %711
  %722 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %715, i32 4
  %723 = bitcast %union._hb_var_int_t* %722 to [4 x i8]*
  %724 = getelementptr inbounds [4 x i8], [4 x i8]* %723, i64 0, i64 2
  %725 = load i8, i8* %724, align 2
  %726 = icmp ult i8 %725, 32
  %727 = zext i8 %725 to i32
  %728 = shl i32 1, %727
  %729 = and i32 %728, 144
  %730 = icmp ne i32 %729, 0
  %731 = and i1 %726, %730
  br i1 %731, label %735, label %732

732:                                              ; preds = %721, %711
  %733 = icmp ugt i32 %714, %45
  %734 = add nsw i64 %712, -1
  br i1 %733, label %711, label %737

735:                                              ; preds = %721
  %736 = trunc i64 %712 to i32
  br label %737

737:                                              ; preds = %732, %735, %707, %705, %705
  %738 = phi i32 [ %682, %705 ], [ %682, %705 ], [ %682, %707 ], [ %736, %735 ], [ %714, %732 ]
  %739 = icmp ugt i32 %738, %45
  br i1 %739, label %740, label %776

740:                                              ; preds = %737
  %741 = add i32 %738, -1
  %742 = zext i32 %741 to i64
  %743 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %742, i32 3
  %744 = bitcast %union._hb_var_int_t* %743 to i16*
  %745 = load i16, i16* %744, align 4
  %746 = and i16 %745, 32
  %747 = icmp eq i16 %746, 0
  %748 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %742, i32 4
  %749 = bitcast %union._hb_var_int_t* %748 to [4 x i8]*
  %750 = getelementptr inbounds [4 x i8], [4 x i8]* %749, i64 0, i64 2
  %751 = load i8, i8* %750, align 2
  %752 = icmp eq i8 %751, 4
  %753 = and i1 %747, %752
  %754 = icmp ult i32 %738, %44
  %755 = and i1 %754, %753
  br i1 %755, label %756, label %776

756:                                              ; preds = %740
  %757 = zext i32 %738 to i64
  %758 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %757, i32 3
  %759 = bitcast %union._hb_var_int_t* %758 to i16*
  %760 = load i16, i16* %759, align 4
  %761 = and i16 %760, 32
  %762 = icmp eq i16 %761, 0
  br i1 %762, label %763, label %776

763:                                              ; preds = %756
  %764 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %757, i32 4
  %765 = bitcast %union._hb_var_int_t* %764 to [4 x i8]*
  %766 = getelementptr inbounds [4 x i8], [4 x i8]* %765, i64 0, i64 2
  %767 = load i8, i8* %766, align 2
  %768 = icmp ult i8 %767, 32
  %769 = zext i8 %767 to i32
  %770 = shl i32 1, %769
  %771 = and i32 %770, 96
  %772 = icmp ne i32 %771, 0
  %773 = and i1 %768, %772
  %774 = zext i1 %773 to i32
  %775 = add nuw i32 %738, %774
  br label %776

776:                                              ; preds = %763, %756, %740, %737
  %777 = phi i32 [ %738, %740 ], [ %738, %737 ], [ %738, %756 ], [ %775, %763 ]
  %778 = add i32 %698, 1
  %779 = sub i32 %778, %777
  %780 = icmp ult i32 %779, 2
  br i1 %780, label %783, label %781

781:                                              ; preds = %776
  tail call void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t* %2, i32 %777, i32 %778) #4
  %782 = load i32, i32* %693, align 4
  br label %783

783:                                              ; preds = %781, %776
  %784 = phi i32 [ %694, %776 ], [ %782, %781 ]
  %785 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %699, i32 0
  %786 = load i32, i32* %785, align 4
  %787 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %699, i32 2
  %788 = load i32, i32* %787, align 4
  %789 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %699, i32 3, i32 0
  %790 = load i32, i32* %789, align 4
  %791 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %699, i32 4, i32 0
  %792 = load i32, i32* %791, align 4
  %793 = add i32 %777, 1
  %794 = zext i32 %793 to i64
  %795 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %794
  %796 = bitcast %struct.hb_glyph_info_t* %795 to i8*
  %797 = zext i32 %777 to i64
  %798 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %797
  %799 = bitcast %struct.hb_glyph_info_t* %798 to i8*
  %800 = sub i32 %698, %777
  %801 = zext i32 %800 to i64
  %802 = mul nuw nsw i64 %801, 20
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %796, i8* align 4 %799, i64 %802, i1 false) #4
  %803 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %798, i64 0, i32 0
  store i32 %786, i32* %803, align 4
  %804 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %797, i32 1
  store i32 %784, i32* %804, align 4
  %805 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %797, i32 2
  store i32 %788, i32* %805, align 4
  %806 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %797, i32 3, i32 0
  store i32 %790, i32* %806, align 4
  %807 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %797, i32 4, i32 0
  store i32 %792, i32* %807, align 4
  br label %812

808:                                              ; preds = %691
  %809 = add nuw nsw i64 %692, 1
  %810 = trunc i64 %809 to i32
  %811 = icmp eq i32 %44, %810
  br i1 %811, label %812, label %691

812:                                              ; preds = %808, %783, %697, %685, %679
  %813 = zext i32 %45 to i64
  %814 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %813, i32 4
  %815 = bitcast %union._hb_var_int_t* %814 to [4 x i8]*
  %816 = getelementptr inbounds [4 x i8], [4 x i8]* %815, i64 0, i64 3
  %817 = load i8, i8* %816, align 1
  %818 = icmp eq i8 %817, 2
  br i1 %818, label %819, label %839

819:                                              ; preds = %812
  %820 = icmp eq i32 %45, 0
  br i1 %820, label %832, label %821

821:                                              ; preds = %819
  %822 = add i32 %45, -1
  %823 = zext i32 %822 to i64
  %824 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %823, i32 4
  %825 = bitcast %union._hb_var_int_t* %824 to i16*
  %826 = load i16, i16* %825, align 4
  %827 = and i16 %826, 31
  %828 = zext i16 %827 to i32
  %829 = shl i32 1, %828
  %830 = and i32 %829, 8190
  %831 = icmp eq i32 %830, 0
  br i1 %831, label %832, label %838

832:                                              ; preds = %821, %819
  %833 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %46, i64 0, i32 10, i64 11
  %834 = load i32, i32* %833, align 4
  %835 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %43, i64 %813, i32 1
  %836 = load i32, i32* %835, align 4
  %837 = or i32 %836, %834
  store i32 %837, i32* %835, align 4
  br label %839

838:                                              ; preds = %821
  tail call void @_ZN11hb_buffer_t20unsafe_to_break_implEjj(%struct.hb_buffer_t* %2, i32 %822, i32 %681) #4
  br label %839

839:                                              ; preds = %838, %832, %812
  %840 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %46, i64 0, i32 2
  %841 = load i8, i8* %840, align 1, !range !3
  %842 = icmp eq i8 %841, 0
  br i1 %842, label %849, label %843

843:                                              ; preds = %839
  %844 = load i32, i32* %38, align 4
  switch i32 %844, label %845 [
    i32 1415671148, label %849
    i32 1399418472, label %849
  ]

845:                                              ; preds = %843
  %846 = sub i32 %44, %45
  %847 = icmp ult i32 %846, 2
  br i1 %847, label %849, label %848

848:                                              ; preds = %845
  tail call void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t* %2, i32 %45, i32 %44) #4
  br label %849

849:                                              ; preds = %839, %843, %843, %845, %848
  %850 = load i32, i32* %4, align 8
  %851 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %36, align 8
  %852 = zext i32 %44 to i64
  %853 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %851, i64 %852, i32 3
  %854 = bitcast %union._hb_var_int_t* %853 to [4 x i8]*
  %855 = getelementptr inbounds [4 x i8], [4 x i8]* %854, i64 0, i64 3
  %856 = load i8, i8* %855, align 1
  br label %857

857:                                              ; preds = %861, %849
  %858 = phi i32 [ %44, %849 ], [ %859, %861 ]
  %859 = add i32 %858, 1
  %860 = icmp ult i32 %859, %850
  br i1 %860, label %861, label %868

861:                                              ; preds = %857
  %862 = zext i32 %859 to i64
  %863 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %851, i64 %862, i32 3
  %864 = bitcast %union._hb_var_int_t* %863 to [4 x i8]*
  %865 = getelementptr inbounds [4 x i8], [4 x i8]* %864, i64 0, i64 3
  %866 = load i8, i8* %865, align 1
  %867 = icmp eq i8 %856, %866
  br i1 %867, label %857, label %868

868:                                              ; preds = %857, %861
  %869 = icmp ult i32 %44, %10
  br i1 %869, label %42, label %40

870:                                              ; preds = %7, %40, %3
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @_ZL19_hb_clear_syllablesPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readnone, %struct.hb_font_t* nocapture readnone, %struct.hb_buffer_t* nocapture readonly) #2 {
  %4 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %5 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %4, align 8
  %6 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %28, label %9

9:                                                ; preds = %3
  %10 = zext i32 %7 to i64
  %11 = add nsw i64 %10, -1
  %12 = and i64 %10, 7
  %13 = icmp ult i64 %11, 7
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = sub nsw i64 %10, %12
  br label %29

16:                                               ; preds = %29, %9
  %17 = phi i64 [ 0, %9 ], [ %63, %29 ]
  %18 = icmp eq i64 %12, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %16, %19
  %20 = phi i64 [ %25, %19 ], [ %17, %16 ]
  %21 = phi i64 [ %26, %19 ], [ %12, %16 ]
  %22 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %20, i32 3
  %23 = bitcast %union._hb_var_int_t* %22 to [4 x i8]*
  %24 = getelementptr inbounds [4 x i8], [4 x i8]* %23, i64 0, i64 3
  store i8 0, i8* %24, align 1
  %25 = add nuw nsw i64 %20, 1
  %26 = add i64 %21, -1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %19, !llvm.loop !22

28:                                               ; preds = %16, %19, %3
  ret void

29:                                               ; preds = %29, %14
  %30 = phi i64 [ 0, %14 ], [ %63, %29 ]
  %31 = phi i64 [ %15, %14 ], [ %64, %29 ]
  %32 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %30, i32 3
  %33 = bitcast %union._hb_var_int_t* %32 to [4 x i8]*
  %34 = getelementptr inbounds [4 x i8], [4 x i8]* %33, i64 0, i64 3
  store i8 0, i8* %34, align 1
  %35 = or i64 %30, 1
  %36 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %35, i32 3
  %37 = bitcast %union._hb_var_int_t* %36 to [4 x i8]*
  %38 = getelementptr inbounds [4 x i8], [4 x i8]* %37, i64 0, i64 3
  store i8 0, i8* %38, align 1
  %39 = or i64 %30, 2
  %40 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %39, i32 3
  %41 = bitcast %union._hb_var_int_t* %40 to [4 x i8]*
  %42 = getelementptr inbounds [4 x i8], [4 x i8]* %41, i64 0, i64 3
  store i8 0, i8* %42, align 1
  %43 = or i64 %30, 3
  %44 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %43, i32 3
  %45 = bitcast %union._hb_var_int_t* %44 to [4 x i8]*
  %46 = getelementptr inbounds [4 x i8], [4 x i8]* %45, i64 0, i64 3
  store i8 0, i8* %46, align 1
  %47 = or i64 %30, 4
  %48 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %47, i32 3
  %49 = bitcast %union._hb_var_int_t* %48 to [4 x i8]*
  %50 = getelementptr inbounds [4 x i8], [4 x i8]* %49, i64 0, i64 3
  store i8 0, i8* %50, align 1
  %51 = or i64 %30, 5
  %52 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %51, i32 3
  %53 = bitcast %union._hb_var_int_t* %52 to [4 x i8]*
  %54 = getelementptr inbounds [4 x i8], [4 x i8]* %53, i64 0, i64 3
  store i8 0, i8* %54, align 1
  %55 = or i64 %30, 6
  %56 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %55, i32 3
  %57 = bitcast %union._hb_var_int_t* %56 to [4 x i8]*
  %58 = getelementptr inbounds [4 x i8], [4 x i8]* %57, i64 0, i64 3
  store i8 0, i8* %58, align 1
  %59 = or i64 %30, 7
  %60 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %59, i32 3
  %61 = bitcast %union._hb_var_int_t* %60 to [4 x i8]*
  %62 = getelementptr inbounds [4 x i8], [4 x i8]* %61, i64 0, i64 3
  store i8 0, i8* %62, align 1
  %63 = add nuw nsw i64 %30, 8
  %64 = add i64 %31, -8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %16, label %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare hidden void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t*, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)*) local_unnamed_addr #3

declare hidden void @_ZN11hb_buffer_t20unsafe_to_break_implEjj(%struct.hb_buffer_t*, i32, i32) local_unnamed_addr #3

declare hidden void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN11hb_buffer_t7messageEP9hb_font_tPKcz(%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %0, i64 0, i32 24
  %6 = load i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)** %5, align 8
  %7 = icmp eq i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #4
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %11 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %9)
  %12 = call zeroext i1 @_ZN11hb_buffer_t12message_implEP9hb_font_tPKcP13__va_list_tag(%struct.hb_buffer_t* %0, %struct.hb_font_t* %1, i8* %2, %struct.__va_list_tag* nonnull %10) #4
  call void @llvm.va_end(i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #4
  br label %13

13:                                               ; preds = %3, %8
  %14 = phi i1 [ %12, %8 ], [ true, %3 ]
  ret i1 %14
}

declare hidden void @_Z33hb_syllabic_insert_dotted_circlesP9hb_font_tP11hb_buffer_tjji(%struct.hb_font_t*, %struct.hb_buffer_t*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #4

declare hidden zeroext i1 @_ZN11hb_buffer_t12message_implEP9hb_font_tPKcP13__va_list_tag(%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #4

declare i32 @hb_ot_layout_lookup_would_substitute(%struct.hb_face_t*, i32, i32*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL37initial_reordering_consonant_syllablePK18hb_ot_shape_plan_tP9hb_face_tP11hb_buffer_tjj(%struct.hb_ot_shape_plan_t* nocapture readonly, %struct.hb_face_t*, %struct.hb_buffer_t*, i32, i32) unnamed_addr #0 {
  %6 = alloca [3 x i32], align 4
  %7 = alloca [2 x i32], align 4
  %8 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 4
  %9 = bitcast i8** %8 to %struct.indic_shape_plan_t**
  %10 = load %struct.indic_shape_plan_t*, %struct.indic_shape_plan_t** %9, align 8
  %11 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %12 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %11, align 8
  %13 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 10, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp ne i32 %14, 1265525857
  %16 = add i32 %3, 3
  %17 = icmp ugt i32 %16, %4
  %18 = or i1 %15, %17
  br i1 %18, label %71, label %19

19:                                               ; preds = %5
  %20 = zext i32 %3 to i64
  %21 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %20, i32 3
  %22 = bitcast %union._hb_var_int_t* %21 to i16*
  %23 = load i16, i16* %22, align 4
  %24 = and i16 %23, 32
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %26, label %71

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %20, i32 4
  %28 = bitcast %union._hb_var_int_t* %27 to [4 x i8]*
  %29 = getelementptr inbounds [4 x i8], [4 x i8]* %28, i64 0, i64 2
  %30 = load i8, i8* %29, align 2
  %31 = icmp eq i8 %30, 16
  br i1 %31, label %32, label %71

32:                                               ; preds = %26
  %33 = add i32 %3, 1
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %34
  %36 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %34, i32 3
  %37 = bitcast %union._hb_var_int_t* %36 to i16*
  %38 = load i16, i16* %37, align 4
  %39 = and i16 %38, 32
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %41, label %71

41:                                               ; preds = %32
  %42 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %34, i32 4
  %43 = bitcast %union._hb_var_int_t* %42 to [4 x i8]*
  %44 = getelementptr inbounds [4 x i8], [4 x i8]* %43, i64 0, i64 2
  %45 = load i8, i8* %44, align 2
  %46 = icmp eq i8 %45, 4
  br i1 %46, label %47, label %71

47:                                               ; preds = %41
  %48 = add i32 %3, 2
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %49
  %51 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %49, i32 3
  %52 = bitcast %union._hb_var_int_t* %51 to i16*
  %53 = load i16, i16* %52, align 4
  %54 = and i16 %53, 32
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %71

56:                                               ; preds = %47
  %57 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %49, i32 4
  %58 = bitcast %union._hb_var_int_t* %57 to [4 x i8]*
  %59 = getelementptr inbounds [4 x i8], [4 x i8]* %58, i64 0, i64 2
  %60 = load i8, i8* %59, align 2
  %61 = icmp eq i8 %60, 6
  br i1 %61, label %62, label %71

62:                                               ; preds = %56
  tail call void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t* %2, i32 %33, i32 %16) #4
  %63 = bitcast %struct.hb_glyph_info_t* %35 to <4 x i32>*
  %64 = load <4 x i32>, <4 x i32>* %63, align 4
  %65 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %34, i32 4, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = bitcast %struct.hb_glyph_info_t* %35 to i8*
  %68 = bitcast %struct.hb_glyph_info_t* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 20, i1 false)
  %69 = bitcast %struct.hb_glyph_info_t* %50 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %49, i32 4, i32 0
  store i32 %66, i32* %70, align 4
  br label %71

71:                                               ; preds = %5, %47, %32, %19, %62, %56, %41, %26
  %72 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 10, i64 2
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  %75 = icmp ugt i32 %16, %4
  %76 = or i1 %75, %74
  %77 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 0
  %78 = load %struct.indic_config_t*, %struct.indic_config_t** %77, align 8
  %79 = getelementptr inbounds %struct.indic_config_t, %struct.indic_config_t* %78, i64 0, i32 5
  %80 = load i32, i32* %79, align 4
  br i1 %76, label %216, label %81

81:                                               ; preds = %71
  switch i32 %80, label %247 [
    i32 0, label %82
    i32 1, label %101
    i32 2, label %218
  ]

82:                                               ; preds = %81
  %83 = add i32 %3, 2
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %84, i32 3
  %86 = bitcast %union._hb_var_int_t* %85 to i16*
  %87 = load i16, i16* %86, align 4
  %88 = and i16 %87, 32
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %109

90:                                               ; preds = %82
  %91 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %84, i32 4
  %92 = bitcast %union._hb_var_int_t* %91 to [4 x i8]*
  %93 = getelementptr inbounds [4 x i8], [4 x i8]* %92, i64 0, i64 2
  %94 = load i8, i8* %93, align 2
  %95 = icmp ult i8 %94, 32
  %96 = zext i8 %94 to i32
  %97 = shl i32 1, %96
  %98 = and i32 %97, 96
  %99 = icmp ne i32 %98, 0
  %100 = and i1 %95, %99
  br i1 %100, label %247, label %109

101:                                              ; preds = %81
  %102 = add i32 %3, 2
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %103, i32 4
  %105 = bitcast %union._hb_var_int_t* %104 to [4 x i8]*
  %106 = getelementptr inbounds [4 x i8], [4 x i8]* %105, i64 0, i64 2
  %107 = load i8, i8* %106, align 2
  %108 = icmp eq i8 %107, 6
  br i1 %108, label %109, label %247

109:                                              ; preds = %82, %101, %90
  %110 = bitcast [3 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %110) #4
  %111 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 0
  store i32 -1431655766, i32* %111, align 4
  %112 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 1
  store i32 -1431655766, i32* %112, align 4
  %113 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 2
  store i32 -1431655766, i32* %113, align 4
  %114 = zext i32 %3 to i64
  %115 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %114, i32 0
  %116 = load i32, i32* %115, align 4
  store i32 %116, i32* %111, align 4
  %117 = add i32 %3, 1
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %118, i32 0
  %120 = load i32, i32* %119, align 4
  store i32 %120, i32* %112, align 4
  %121 = load %struct.indic_config_t*, %struct.indic_config_t** %77, align 8
  %122 = getelementptr inbounds %struct.indic_config_t, %struct.indic_config_t* %121, i64 0, i32 5
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %130

125:                                              ; preds = %109
  %126 = add i32 %3, 2
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %127, i32 0
  %129 = load i32, i32* %128, align 4
  br label %130

130:                                              ; preds = %109, %125
  %131 = phi i32 [ %129, %125 ], [ 0, %109 ]
  store i32 %131, i32* %113, align 4
  %132 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 5, i32 0
  %133 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 5, i32 1
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %153, label %136

136:                                              ; preds = %130
  %137 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 5, i32 2
  br label %142

138:                                              ; preds = %142
  %139 = load i32, i32* %133, align 8
  %140 = zext i32 %139 to i64
  %141 = icmp ult i64 %152, %140
  br i1 %141, label %142, label %153

142:                                              ; preds = %138, %136
  %143 = phi i64 [ 0, %136 ], [ %152, %138 ]
  %144 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %132, align 8
  %145 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %144, i64 %143, i32 0
  %146 = load i16, i16* %145, align 4
  %147 = zext i16 %146 to i32
  %148 = load i8, i8* %137, align 4, !range !3
  %149 = zext i8 %148 to i32
  %150 = call i32 @hb_ot_layout_lookup_would_substitute(%struct.hb_face_t* %1, i32 %147, i32* nonnull %111, i32 2, i32 %149) #4
  %151 = icmp eq i32 %150, 0
  %152 = add nuw nsw i64 %143, 1
  br i1 %151, label %138, label %178

153:                                              ; preds = %138, %130
  %154 = phi i32 [ 0, %130 ], [ %139, %138 ]
  %155 = load %struct.indic_config_t*, %struct.indic_config_t** %77, align 8
  %156 = getelementptr inbounds %struct.indic_config_t, %struct.indic_config_t* %155, i64 0, i32 5
  %157 = load i32, i32* %156, align 4
  %158 = icmp ne i32 %157, 1
  %159 = icmp eq i32 %154, 0
  %160 = or i1 %158, %159
  br i1 %160, label %211, label %161

161:                                              ; preds = %153
  %162 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 5, i32 2
  br label %167

163:                                              ; preds = %167
  %164 = load i32, i32* %133, align 8
  %165 = zext i32 %164 to i64
  %166 = icmp ult i64 %177, %165
  br i1 %166, label %167, label %211

167:                                              ; preds = %163, %161
  %168 = phi i64 [ 0, %161 ], [ %177, %163 ]
  %169 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %132, align 8
  %170 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %169, i64 %168, i32 0
  %171 = load i16, i16* %170, align 4
  %172 = zext i16 %171 to i32
  %173 = load i8, i8* %162, align 4, !range !3
  %174 = zext i8 %173 to i32
  %175 = call i32 @hb_ot_layout_lookup_would_substitute(%struct.hb_face_t* %1, i32 %172, i32* nonnull %111, i32 3, i32 %174) #4
  %176 = icmp eq i32 %175, 0
  %177 = add nuw nsw i64 %168, 1
  br i1 %176, label %163, label %178

178:                                              ; preds = %142, %167
  %179 = add i32 %3, 2
  %180 = icmp ult i32 %179, %4
  br i1 %180, label %181, label %211

181:                                              ; preds = %178
  %182 = zext i32 %179 to i64
  br label %183

183:                                              ; preds = %202, %181
  %184 = phi i64 [ %182, %181 ], [ %203, %202 ]
  %185 = phi i32 [ %179, %181 ], [ %204, %202 ]
  %186 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %184, i32 3
  %187 = bitcast %union._hb_var_int_t* %186 to i16*
  %188 = load i16, i16* %187, align 4
  %189 = and i16 %188, 32
  %190 = icmp eq i16 %189, 0
  br i1 %190, label %191, label %207

191:                                              ; preds = %183
  %192 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %184, i32 4
  %193 = bitcast %union._hb_var_int_t* %192 to [4 x i8]*
  %194 = getelementptr inbounds [4 x i8], [4 x i8]* %193, i64 0, i64 2
  %195 = load i8, i8* %194, align 2
  %196 = icmp ult i8 %195, 32
  %197 = zext i8 %195 to i32
  %198 = shl i32 1, %197
  %199 = and i32 %198, 96
  %200 = icmp ne i32 %199, 0
  %201 = and i1 %196, %200
  br i1 %201, label %202, label %209

202:                                              ; preds = %191
  %203 = add nuw nsw i64 %184, 1
  %204 = add nuw i32 %185, 1
  %205 = trunc i64 %203 to i32
  %206 = icmp eq i32 %205, %4
  br i1 %206, label %211, label %183

207:                                              ; preds = %183
  %208 = trunc i64 %184 to i32
  br label %211

209:                                              ; preds = %191
  %210 = trunc i64 %184 to i32
  br label %211

211:                                              ; preds = %163, %202, %207, %209, %153, %178
  %212 = phi i32 [ %4, %153 ], [ %3, %178 ], [ %3, %209 ], [ %3, %207 ], [ %3, %202 ], [ %4, %163 ]
  %213 = phi i32 [ %3, %153 ], [ %179, %178 ], [ %210, %209 ], [ %208, %207 ], [ %204, %202 ], [ %3, %163 ]
  %214 = phi i8 [ 0, %153 ], [ 1, %178 ], [ 1, %209 ], [ 1, %207 ], [ 1, %202 ], [ 0, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %110) #4
  %215 = load %struct.indic_config_t*, %struct.indic_config_t** %77, align 8
  br label %247

216:                                              ; preds = %71
  %217 = icmp eq i32 %80, 2
  br i1 %217, label %218, label %247

218:                                              ; preds = %81, %216
  %219 = zext i32 %3 to i64
  %220 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %219, i32 4
  %221 = bitcast %union._hb_var_int_t* %220 to [4 x i8]*
  %222 = getelementptr inbounds [4 x i8], [4 x i8]* %221, i64 0, i64 2
  %223 = load i8, i8* %222, align 2
  %224 = icmp eq i8 %223, 15
  br i1 %224, label %225, label %247

225:                                              ; preds = %218, %236
  %226 = phi i32 [ %227, %236 ], [ %3, %218 ]
  %227 = add i32 %226, 1
  %228 = icmp ult i32 %227, %4
  br i1 %228, label %229, label %247

229:                                              ; preds = %225
  %230 = zext i32 %227 to i64
  %231 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %230, i32 3
  %232 = bitcast %union._hb_var_int_t* %231 to i16*
  %233 = load i16, i16* %232, align 4
  %234 = and i16 %233, 32
  %235 = icmp eq i16 %234, 0
  br i1 %235, label %236, label %247

236:                                              ; preds = %229
  %237 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %230, i32 4
  %238 = bitcast %union._hb_var_int_t* %237 to [4 x i8]*
  %239 = getelementptr inbounds [4 x i8], [4 x i8]* %238, i64 0, i64 2
  %240 = load i8, i8* %239, align 2
  %241 = icmp ult i8 %240, 32
  %242 = zext i8 %240 to i32
  %243 = shl i32 1, %242
  %244 = and i32 %243, 96
  %245 = icmp ne i32 %244, 0
  %246 = and i1 %241, %245
  br i1 %246, label %225, label %247

247:                                              ; preds = %229, %236, %225, %81, %101, %90, %216, %218, %211
  %248 = phi %struct.indic_config_t* [ %78, %218 ], [ %78, %216 ], [ %215, %211 ], [ %78, %90 ], [ %78, %101 ], [ %78, %81 ], [ %78, %225 ], [ %78, %236 ], [ %78, %229 ]
  %249 = phi i32 [ %4, %218 ], [ %4, %216 ], [ %212, %211 ], [ %4, %90 ], [ %4, %101 ], [ %4, %81 ], [ %3, %225 ], [ %3, %236 ], [ %3, %229 ]
  %250 = phi i32 [ %3, %218 ], [ %3, %216 ], [ %213, %211 ], [ %3, %90 ], [ %3, %101 ], [ %3, %81 ], [ %227, %225 ], [ %227, %236 ], [ %227, %229 ]
  %251 = phi i8 [ 0, %218 ], [ 0, %216 ], [ %214, %211 ], [ 0, %90 ], [ 0, %101 ], [ 0, %81 ], [ 1, %225 ], [ 1, %236 ], [ 1, %229 ]
  %252 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 0
  %253 = getelementptr inbounds %struct.indic_config_t, %struct.indic_config_t* %248, i64 0, i32 3
  %254 = load i32, i32* %253, align 4
  switch i32 %254, label %379 [
    i32 1, label %255
    i32 0, label %306
  ]

255:                                              ; preds = %247, %302
  %256 = phi i32 [ %303, %302 ], [ %249, %247 ]
  %257 = phi i8 [ %304, %302 ], [ 0, %247 ]
  %258 = phi i32 [ %259, %302 ], [ %4, %247 ]
  %259 = add i32 %258, -1
  %260 = zext i32 %259 to i64
  %261 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %260, i32 3
  %262 = bitcast %union._hb_var_int_t* %261 to i16*
  %263 = load i16, i16* %262, align 4
  %264 = and i16 %263, 32
  %265 = icmp eq i16 %264, 0
  br i1 %265, label %266, label %286

266:                                              ; preds = %255
  %267 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %260, i32 4
  %268 = bitcast %union._hb_var_int_t* %267 to [4 x i8]*
  %269 = getelementptr inbounds [4 x i8], [4 x i8]* %268, i64 0, i64 2
  %270 = load i8, i8* %269, align 2
  %271 = icmp ult i8 %270, 32
  %272 = zext i8 %270 to i32
  %273 = shl i32 1, %272
  %274 = and i32 %273, 727046
  %275 = icmp ne i32 %274, 0
  %276 = and i1 %271, %275
  br i1 %276, label %277, label %286

277:                                              ; preds = %266
  %278 = getelementptr inbounds [4 x i8], [4 x i8]* %268, i64 0, i64 3
  %279 = load i8, i8* %278, align 1
  switch i8 %279, label %379 [
    i8 8, label %283
    i8 11, label %280
  ]

280:                                              ; preds = %277
  %281 = and i8 %257, 1
  %282 = icmp eq i8 %281, 0
  br i1 %282, label %283, label %379

283:                                              ; preds = %277, %280
  %284 = icmp eq i8 %279, 8
  %285 = select i1 %284, i8 1, i8 %257
  br label %302

286:                                              ; preds = %255, %266
  %287 = icmp ugt i32 %259, %3
  br i1 %287, label %288, label %302

288:                                              ; preds = %286
  %289 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %260, i32 4
  %290 = bitcast %union._hb_var_int_t* %289 to [4 x i8]*
  %291 = getelementptr inbounds [4 x i8], [4 x i8]* %290, i64 0, i64 2
  %292 = load i8, i8* %291, align 2
  %293 = icmp eq i8 %292, 6
  br i1 %293, label %294, label %302

294:                                              ; preds = %288
  %295 = add i32 %258, -2
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %296, i32 4
  %298 = bitcast %union._hb_var_int_t* %297 to [4 x i8]*
  %299 = getelementptr inbounds [4 x i8], [4 x i8]* %298, i64 0, i64 2
  %300 = load i8, i8* %299, align 2
  %301 = icmp eq i8 %300, 4
  br i1 %301, label %379, label %302

302:                                              ; preds = %283, %294, %288, %286
  %303 = phi i32 [ %259, %283 ], [ %256, %294 ], [ %256, %288 ], [ %256, %286 ]
  %304 = phi i8 [ %285, %283 ], [ %257, %294 ], [ %257, %288 ], [ %257, %286 ]
  %305 = icmp ugt i32 %259, %250
  br i1 %305, label %255, label %379

306:                                              ; preds = %247
  %307 = and i8 %251, 1
  %308 = icmp eq i8 %307, 0
  %309 = select i1 %308, i32 %250, i32 %249
  %310 = icmp ult i32 %250, %4
  br i1 %310, label %311, label %348

311:                                              ; preds = %306
  %312 = zext i32 %250 to i64
  br label %313

313:                                              ; preds = %343, %311
  %314 = phi i64 [ %312, %311 ], [ %345, %343 ]
  %315 = phi i32 [ %309, %311 ], [ %344, %343 ]
  %316 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %314, i32 3
  %317 = bitcast %union._hb_var_int_t* %316 to i16*
  %318 = load i16, i16* %317, align 4
  %319 = and i16 %318, 32
  %320 = icmp eq i16 %319, 0
  br i1 %320, label %321, label %343

321:                                              ; preds = %313
  %322 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %314, i32 4
  %323 = bitcast %union._hb_var_int_t* %322 to [4 x i8]*
  %324 = getelementptr inbounds [4 x i8], [4 x i8]* %323, i64 0, i64 2
  %325 = load i8, i8* %324, align 2
  %326 = icmp ult i8 %325, 32
  %327 = zext i8 %325 to i32
  %328 = shl i32 1, %327
  %329 = and i32 %328, 727046
  %330 = icmp ne i32 %329, 0
  %331 = and i1 %326, %330
  br i1 %331, label %332, label %343

332:                                              ; preds = %321
  %333 = icmp ugt i64 %314, %312
  %334 = trunc i64 %314 to i32
  br i1 %333, label %335, label %343

335:                                              ; preds = %332
  %336 = add nuw i64 %314, 4294967295
  %337 = and i64 %336, 4294967295
  %338 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %337, i32 4
  %339 = bitcast %union._hb_var_int_t* %338 to [4 x i8]*
  %340 = getelementptr inbounds [4 x i8], [4 x i8]* %339, i64 0, i64 2
  %341 = load i8, i8* %340, align 2
  %342 = icmp eq i8 %341, 6
  br i1 %342, label %348, label %343

343:                                              ; preds = %313, %332, %335, %321
  %344 = phi i32 [ %315, %321 ], [ %334, %335 ], [ %334, %332 ], [ %315, %313 ]
  %345 = add nuw nsw i64 %314, 1
  %346 = trunc i64 %345 to i32
  %347 = icmp eq i32 %346, %4
  br i1 %347, label %348, label %313

348:                                              ; preds = %335, %343, %306
  %349 = phi i32 [ %309, %306 ], [ %315, %335 ], [ %344, %343 ]
  %350 = add i32 %349, 1
  %351 = icmp ult i32 %350, %4
  br i1 %351, label %352, label %379

352:                                              ; preds = %348
  %353 = zext i32 %350 to i64
  br label %354

354:                                              ; preds = %375, %352
  %355 = phi i64 [ %353, %352 ], [ %377, %375 ]
  %356 = phi i32 [ %350, %352 ], [ %376, %375 ]
  %357 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %355, i32 3
  %358 = bitcast %union._hb_var_int_t* %357 to i16*
  %359 = load i16, i16* %358, align 4
  %360 = and i16 %359, 32
  %361 = icmp eq i16 %360, 0
  br i1 %361, label %362, label %375

362:                                              ; preds = %354
  %363 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %355, i32 4
  %364 = bitcast %union._hb_var_int_t* %363 to [4 x i8]*
  %365 = getelementptr inbounds [4 x i8], [4 x i8]* %364, i64 0, i64 2
  %366 = load i8, i8* %365, align 2
  %367 = icmp ult i8 %366, 32
  %368 = zext i8 %366 to i32
  %369 = shl i32 1, %368
  %370 = and i32 %369, 727046
  %371 = icmp ne i32 %370, 0
  %372 = and i1 %367, %371
  br i1 %372, label %373, label %375

373:                                              ; preds = %362
  %374 = getelementptr inbounds [4 x i8], [4 x i8]* %364, i64 0, i64 3
  store i8 8, i8* %374, align 1
  br label %375

375:                                              ; preds = %354, %362, %373
  %376 = add i32 %356, 1
  %377 = add nuw nsw i64 %355, 1
  %378 = icmp eq i32 %376, %4
  br i1 %378, label %379, label %354

379:                                              ; preds = %375, %280, %277, %302, %294, %348, %247
  %380 = phi i32 [ %249, %247 ], [ %349, %348 ], [ %259, %280 ], [ %259, %277 ], [ %256, %294 ], [ %303, %302 ], [ %349, %375 ]
  %381 = and i8 %251, 1
  %382 = icmp eq i8 %381, 0
  br i1 %382, label %389, label %383

383:                                              ; preds = %379
  %384 = icmp eq i32 %380, %3
  %385 = sub i32 %250, %380
  %386 = icmp ult i32 %385, 3
  %387 = and i1 %384, %386
  %388 = select i1 %387, i8 0, i8 %251
  br label %389

389:                                              ; preds = %383, %379
  %390 = phi i8 [ %251, %379 ], [ %388, %383 ]
  %391 = icmp ugt i32 %380, %3
  br i1 %391, label %392, label %415

392:                                              ; preds = %389
  %393 = zext i32 %3 to i64
  %394 = zext i32 %380 to i64
  %395 = sub nsw i64 %394, %393
  %396 = xor i64 %393, -1
  %397 = add nsw i64 %396, %394
  %398 = and i64 %395, 3
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %412, label %400

400:                                              ; preds = %392, %400
  %401 = phi i64 [ %409, %400 ], [ %393, %392 ]
  %402 = phi i64 [ %410, %400 ], [ %398, %392 ]
  %403 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %401, i32 4
  %404 = bitcast %union._hb_var_int_t* %403 to [4 x i8]*
  %405 = getelementptr inbounds [4 x i8], [4 x i8]* %404, i64 0, i64 3
  %406 = load i8, i8* %405, align 1
  %407 = icmp ult i8 %406, 3
  %408 = select i1 %407, i8 %406, i8 3
  store i8 %408, i8* %405, align 1
  %409 = add nuw nsw i64 %401, 1
  %410 = add i64 %402, -1
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %412, label %400, !llvm.loop !23

412:                                              ; preds = %400, %392
  %413 = phi i64 [ %393, %392 ], [ %409, %400 ]
  %414 = icmp ult i64 %397, 3
  br i1 %414, label %415, label %417

415:                                              ; preds = %412, %417, %389
  %416 = icmp ult i32 %380, %4
  br i1 %416, label %448, label %453

417:                                              ; preds = %412, %417
  %418 = phi i64 [ %446, %417 ], [ %413, %412 ]
  %419 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %418, i32 4
  %420 = bitcast %union._hb_var_int_t* %419 to [4 x i8]*
  %421 = getelementptr inbounds [4 x i8], [4 x i8]* %420, i64 0, i64 3
  %422 = load i8, i8* %421, align 1
  %423 = icmp ult i8 %422, 3
  %424 = select i1 %423, i8 %422, i8 3
  store i8 %424, i8* %421, align 1
  %425 = add nuw nsw i64 %418, 1
  %426 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %425, i32 4
  %427 = bitcast %union._hb_var_int_t* %426 to [4 x i8]*
  %428 = getelementptr inbounds [4 x i8], [4 x i8]* %427, i64 0, i64 3
  %429 = load i8, i8* %428, align 1
  %430 = icmp ult i8 %429, 3
  %431 = select i1 %430, i8 %429, i8 3
  store i8 %431, i8* %428, align 1
  %432 = add nuw nsw i64 %418, 2
  %433 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %432, i32 4
  %434 = bitcast %union._hb_var_int_t* %433 to [4 x i8]*
  %435 = getelementptr inbounds [4 x i8], [4 x i8]* %434, i64 0, i64 3
  %436 = load i8, i8* %435, align 1
  %437 = icmp ult i8 %436, 3
  %438 = select i1 %437, i8 %436, i8 3
  store i8 %438, i8* %435, align 1
  %439 = add nuw nsw i64 %418, 3
  %440 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %439, i32 4
  %441 = bitcast %union._hb_var_int_t* %440 to [4 x i8]*
  %442 = getelementptr inbounds [4 x i8], [4 x i8]* %441, i64 0, i64 3
  %443 = load i8, i8* %442, align 1
  %444 = icmp ult i8 %443, 3
  %445 = select i1 %444, i8 %443, i8 3
  store i8 %445, i8* %442, align 1
  %446 = add nuw nsw i64 %418, 4
  %447 = icmp eq i64 %446, %394
  br i1 %447, label %415, label %417

448:                                              ; preds = %415
  %449 = zext i32 %380 to i64
  %450 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %449, i32 4
  %451 = bitcast %union._hb_var_int_t* %450 to [4 x i8]*
  %452 = getelementptr inbounds [4 x i8], [4 x i8]* %451, i64 0, i64 3
  store i8 4, i8* %452, align 1
  br label %453

453:                                              ; preds = %448, %415
  br label %454

454:                                              ; preds = %453, %458
  %455 = phi i32 [ %456, %458 ], [ %380, %453 ]
  %456 = add i32 %455, 1
  %457 = icmp ult i32 %456, %4
  br i1 %457, label %458, label %497

458:                                              ; preds = %454
  %459 = zext i32 %456 to i64
  %460 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %459, i32 4
  %461 = bitcast %union._hb_var_int_t* %460 to [4 x i8]*
  %462 = getelementptr inbounds [4 x i8], [4 x i8]* %461, i64 0, i64 2
  %463 = load i8, i8* %462, align 2
  %464 = icmp eq i8 %463, 7
  br i1 %464, label %465, label %454

465:                                              ; preds = %458
  %466 = add i32 %455, 2
  %467 = icmp ult i32 %466, %4
  br i1 %467, label %468, label %497

468:                                              ; preds = %465
  %469 = zext i32 %466 to i64
  br label %470

470:                                              ; preds = %493, %468
  %471 = phi i64 [ %469, %468 ], [ %494, %493 ]
  %472 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %471, i32 3
  %473 = bitcast %union._hb_var_int_t* %472 to i16*
  %474 = load i16, i16* %473, align 4
  %475 = and i16 %474, 32
  %476 = icmp eq i16 %475, 0
  br i1 %476, label %477, label %493

477:                                              ; preds = %470
  %478 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %471, i32 4
  %479 = bitcast %union._hb_var_int_t* %478 to [4 x i8]*
  %480 = getelementptr inbounds [4 x i8], [4 x i8]* %479, i64 0, i64 2
  %481 = load i8, i8* %480, align 2
  %482 = icmp ult i8 %481, 32
  %483 = zext i8 %481 to i32
  %484 = shl i32 1, %483
  %485 = and i32 %484, 727046
  %486 = icmp ne i32 %485, 0
  %487 = and i1 %482, %486
  br i1 %487, label %488, label %493

488:                                              ; preds = %477
  %489 = and i64 %471, 4294967295
  %490 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %489, i32 4
  %491 = bitcast %union._hb_var_int_t* %490 to [4 x i8]*
  %492 = getelementptr inbounds [4 x i8], [4 x i8]* %491, i64 0, i64 3
  store i8 13, i8* %492, align 1
  br label %497

493:                                              ; preds = %470, %477
  %494 = add nuw nsw i64 %471, 1
  %495 = trunc i64 %494 to i32
  %496 = icmp eq i32 %495, %4
  br i1 %496, label %497, label %470

497:                                              ; preds = %454, %493, %465, %488
  %498 = and i8 %390, 1
  %499 = icmp eq i8 %498, 0
  br i1 %499, label %505, label %500

500:                                              ; preds = %497
  %501 = zext i32 %3 to i64
  %502 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %501, i32 4
  %503 = bitcast %union._hb_var_int_t* %502 to [4 x i8]*
  %504 = getelementptr inbounds [4 x i8], [4 x i8]* %503, i64 0, i64 3
  store i8 1, i8* %504, align 1
  br label %505

505:                                              ; preds = %497, %500
  %506 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 1
  %507 = load i8, i8* %506, align 8, !range !3
  %508 = icmp eq i8 %507, 0
  br i1 %508, label %608, label %509

509:                                              ; preds = %505
  %510 = load i32, i32* %13, align 4
  %511 = icmp eq i32 %510, 1265525857
  br label %512

512:                                              ; preds = %516, %509
  %513 = phi i32 [ %380, %509 ], [ %514, %516 ]
  %514 = add i32 %513, 1
  %515 = icmp ult i32 %514, %4
  br i1 %515, label %516, label %608

516:                                              ; preds = %512
  %517 = zext i32 %514 to i64
  %518 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %517, i32 4
  %519 = bitcast %union._hb_var_int_t* %518 to [4 x i8]*
  %520 = getelementptr inbounds [4 x i8], [4 x i8]* %519, i64 0, i64 2
  %521 = load i8, i8* %520, align 2
  %522 = icmp eq i8 %521, 4
  br i1 %522, label %523, label %512

523:                                              ; preds = %516
  %524 = zext i32 %514 to i64
  %525 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %524
  %526 = add i32 %4, -1
  %527 = icmp ugt i32 %526, %514
  br i1 %527, label %528, label %582

528:                                              ; preds = %523
  br i1 %511, label %531, label %529

529:                                              ; preds = %528
  %530 = zext i32 %526 to i64
  br label %557

531:                                              ; preds = %528, %554
  %532 = phi i32 [ %555, %554 ], [ %526, %528 ]
  %533 = zext i32 %532 to i64
  %534 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %533, i32 3
  %535 = bitcast %union._hb_var_int_t* %534 to i16*
  %536 = load i16, i16* %535, align 4
  %537 = and i16 %536, 32
  %538 = icmp eq i16 %537, 0
  %539 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %533, i32 4
  %540 = bitcast %union._hb_var_int_t* %539 to [4 x i8]*
  %541 = getelementptr inbounds [4 x i8], [4 x i8]* %540, i64 0, i64 2
  %542 = load i8, i8* %541, align 2
  br i1 %538, label %543, label %552

543:                                              ; preds = %531
  %544 = icmp ult i8 %542, 32
  %545 = zext i8 %542 to i32
  %546 = shl i32 1, %545
  %547 = and i32 %546, 727046
  %548 = icmp ne i32 %547, 0
  %549 = and i1 %544, %548
  %550 = icmp eq i8 %542, 4
  %551 = or i1 %549, %550
  br i1 %551, label %582, label %554

552:                                              ; preds = %531
  %553 = icmp eq i8 %542, 4
  br i1 %553, label %582, label %554

554:                                              ; preds = %543, %552
  %555 = add i32 %532, -1
  %556 = icmp ugt i32 %555, %514
  br i1 %556, label %531, label %582

557:                                              ; preds = %529, %575
  %558 = phi i64 [ %530, %529 ], [ %579, %575 ]
  %559 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %558, i32 3
  %560 = bitcast %union._hb_var_int_t* %559 to i16*
  %561 = load i16, i16* %560, align 4
  %562 = and i16 %561, 32
  %563 = icmp eq i16 %562, 0
  br i1 %563, label %564, label %575

564:                                              ; preds = %557
  %565 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %558, i32 4
  %566 = bitcast %union._hb_var_int_t* %565 to [4 x i8]*
  %567 = getelementptr inbounds [4 x i8], [4 x i8]* %566, i64 0, i64 2
  %568 = load i8, i8* %567, align 2
  %569 = icmp ult i8 %568, 32
  %570 = zext i8 %568 to i32
  %571 = shl i32 1, %570
  %572 = and i32 %571, 727046
  %573 = icmp ne i32 %572, 0
  %574 = and i1 %569, %573
  br i1 %574, label %580, label %575

575:                                              ; preds = %557, %564
  %576 = trunc i64 %558 to i32
  %577 = add i32 %576, -1
  %578 = icmp ugt i32 %577, %514
  %579 = add nsw i64 %558, -1
  br i1 %578, label %557, label %582

580:                                              ; preds = %564
  %581 = trunc i64 %558 to i32
  br label %582

582:                                              ; preds = %575, %554, %552, %543, %580, %523
  %583 = phi i32 [ %526, %523 ], [ %581, %580 ], [ %532, %543 ], [ %532, %552 ], [ %555, %554 ], [ %577, %575 ]
  %584 = phi i1 [ true, %523 ], [ false, %580 ], [ false, %543 ], [ false, %552 ], [ true, %554 ], [ true, %575 ]
  %585 = zext i32 %583 to i64
  %586 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %585, i32 4
  %587 = bitcast %union._hb_var_int_t* %586 to [4 x i8]*
  %588 = getelementptr inbounds [4 x i8], [4 x i8]* %587, i64 0, i64 2
  %589 = load i8, i8* %588, align 2
  %590 = icmp eq i8 %589, 4
  %591 = or i1 %590, %584
  br i1 %591, label %608, label %592

592:                                              ; preds = %582
  %593 = bitcast %struct.hb_glyph_info_t* %525 to <4 x i32>*
  %594 = load <4 x i32>, <4 x i32>* %593, align 4
  %595 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %524, i32 4, i32 0
  %596 = load i32, i32* %595, align 4
  %597 = bitcast %struct.hb_glyph_info_t* %525 to i8*
  %598 = add i32 %513, 2
  %599 = zext i32 %598 to i64
  %600 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %599
  %601 = bitcast %struct.hb_glyph_info_t* %600 to i8*
  %602 = sub i32 %583, %514
  %603 = zext i32 %602 to i64
  %604 = mul nuw nsw i64 %603, 20
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %597, i8* align 4 %601, i64 %604, i1 false)
  %605 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %585, i32 0
  %606 = bitcast i32* %605 to <4 x i32>*
  store <4 x i32> %594, <4 x i32>* %606, align 4
  %607 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %585, i32 4, i32 0
  store i32 %596, i32* %607, align 4
  br label %608

608:                                              ; preds = %512, %582, %592, %505
  %609 = icmp ugt i32 %4, %3
  br i1 %609, label %610, label %613

610:                                              ; preds = %608
  %611 = zext i32 %3 to i64
  %612 = zext i32 %4 to i64
  br label %618

613:                                              ; preds = %657, %608
  %614 = add i32 %380, 1
  %615 = icmp ult i32 %614, %4
  br i1 %615, label %616, label %661

616:                                              ; preds = %613
  %617 = zext i32 %614 to i64
  br label %690

618:                                              ; preds = %657, %610
  %619 = phi i64 [ %611, %610 ], [ %659, %657 ]
  %620 = phi i32 [ 0, %610 ], [ %658, %657 ]
  %621 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %619, i32 4
  %622 = bitcast %union._hb_var_int_t* %621 to [4 x i8]*
  %623 = getelementptr inbounds [4 x i8], [4 x i8]* %622, i64 0, i64 2
  %624 = load i8, i8* %623, align 2
  %625 = icmp ugt i8 %624, 31
  %626 = zext i8 %624 to i32
  %627 = shl i32 1, %626
  %628 = and i32 %627, 139384
  %629 = icmp eq i32 %628, 0
  %630 = or i1 %625, %629
  br i1 %630, label %651, label %631

631:                                              ; preds = %618
  %632 = trunc i32 %620 to i8
  %633 = getelementptr inbounds [4 x i8], [4 x i8]* %622, i64 0, i64 3
  store i8 %632, i8* %633, align 1
  %634 = icmp eq i8 %624, 4
  %635 = and i32 %620, 255
  %636 = icmp eq i32 %635, 2
  %637 = and i1 %636, %634
  br i1 %637, label %638, label %657, !prof !2

638:                                              ; preds = %631, %641
  %639 = phi i64 [ %649, %641 ], [ %619, %631 ]
  %640 = icmp ugt i64 %639, %611
  br i1 %640, label %641, label %657

641:                                              ; preds = %638
  %642 = add i64 %639, 4294967295
  %643 = and i64 %642, 4294967295
  %644 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %643, i32 4
  %645 = bitcast %union._hb_var_int_t* %644 to [4 x i8]*
  %646 = getelementptr inbounds [4 x i8], [4 x i8]* %645, i64 0, i64 3
  %647 = load i8, i8* %646, align 1
  %648 = icmp eq i8 %647, 2
  %649 = add nsw i64 %639, -1
  br i1 %648, label %638, label %650

650:                                              ; preds = %641
  store i8 %647, i8* %633, align 1
  br label %657

651:                                              ; preds = %618
  %652 = getelementptr inbounds [4 x i8], [4 x i8]* %622, i64 0, i64 3
  %653 = load i8, i8* %652, align 1
  %654 = icmp eq i8 %653, 14
  %655 = zext i8 %653 to i32
  %656 = select i1 %654, i32 %620, i32 %655
  br label %657

657:                                              ; preds = %638, %651, %650, %631
  %658 = phi i32 [ %620, %631 ], [ %620, %650 ], [ %656, %651 ], [ %620, %638 ]
  %659 = add nuw nsw i64 %619, 1
  %660 = icmp eq i64 %659, %612
  br i1 %660, label %613, label %618

661:                                              ; preds = %736, %613
  %662 = zext i32 %3 to i64
  %663 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %662
  %664 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %662, i32 3
  %665 = bitcast %union._hb_var_int_t* %664 to [4 x i8]*
  %666 = getelementptr inbounds [4 x i8], [4 x i8]* %665, i64 0, i64 3
  %667 = load i8, i8* %666, align 1
  br i1 %609, label %668, label %741

668:                                              ; preds = %661
  %669 = zext i32 %4 to i64
  %670 = sub nsw i64 %669, %662
  %671 = xor i64 %662, -1
  %672 = add nsw i64 %671, %669
  %673 = and i64 %670, 3
  %674 = icmp eq i64 %673, 0
  br i1 %674, label %687, label %675

675:                                              ; preds = %668, %675
  %676 = phi i64 [ %684, %675 ], [ %662, %668 ]
  %677 = phi i64 [ %685, %675 ], [ %673, %668 ]
  %678 = trunc i64 %676 to i32
  %679 = sub i32 %678, %3
  %680 = trunc i32 %679 to i8
  %681 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %676, i32 3
  %682 = bitcast %union._hb_var_int_t* %681 to [4 x i8]*
  %683 = getelementptr inbounds [4 x i8], [4 x i8]* %682, i64 0, i64 3
  store i8 %680, i8* %683, align 1
  %684 = add nuw nsw i64 %676, 1
  %685 = add i64 %677, -1
  %686 = icmp eq i64 %685, 0
  br i1 %686, label %687, label %675, !llvm.loop !24

687:                                              ; preds = %675, %668
  %688 = phi i64 [ %662, %668 ], [ %684, %675 ]
  %689 = icmp ult i64 %672, 3
  br i1 %689, label %741, label %788

690:                                              ; preds = %736, %616
  %691 = phi i64 [ %617, %616 ], [ %739, %736 ]
  %692 = phi i32 [ %614, %616 ], [ %738, %736 ]
  %693 = phi i32 [ %380, %616 ], [ %737, %736 ]
  %694 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %691, i32 3
  %695 = bitcast %union._hb_var_int_t* %694 to i16*
  %696 = load i16, i16* %695, align 4
  %697 = and i16 %696, 32
  %698 = icmp eq i16 %697, 0
  %699 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %691, i32 4
  %700 = bitcast %union._hb_var_int_t* %699 to [4 x i8]*
  %701 = getelementptr inbounds [4 x i8], [4 x i8]* %700, i64 0, i64 2
  %702 = load i8, i8* %701, align 2
  br i1 %698, label %703, label %732

703:                                              ; preds = %690
  %704 = icmp ult i8 %702, 32
  %705 = zext i8 %702 to i32
  %706 = shl i32 1, %705
  %707 = and i32 %706, 727046
  %708 = icmp ne i32 %707, 0
  %709 = and i1 %704, %708
  br i1 %709, label %710, label %732

710:                                              ; preds = %703
  %711 = add i32 %693, 1
  %712 = zext i32 %711 to i64
  %713 = icmp ugt i64 %691, %712
  %714 = trunc i64 %691 to i32
  br i1 %713, label %715, label %736

715:                                              ; preds = %710
  %716 = getelementptr inbounds [4 x i8], [4 x i8]* %700, i64 0, i64 3
  br label %717

717:                                              ; preds = %727, %715
  %718 = phi i64 [ %712, %715 ], [ %729, %727 ]
  %719 = phi i32 [ %711, %715 ], [ %728, %727 ]
  %720 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %718, i32 4
  %721 = bitcast %union._hb_var_int_t* %720 to [4 x i8]*
  %722 = getelementptr inbounds [4 x i8], [4 x i8]* %721, i64 0, i64 3
  %723 = load i8, i8* %722, align 1
  %724 = icmp ult i8 %723, 14
  br i1 %724, label %725, label %727

725:                                              ; preds = %717
  %726 = load i8, i8* %716, align 1
  store i8 %726, i8* %722, align 1
  br label %727

727:                                              ; preds = %717, %725
  %728 = add i32 %719, 1
  %729 = add nuw nsw i64 %718, 1
  %730 = zext i32 %728 to i64
  %731 = icmp eq i64 %691, %730
  br i1 %731, label %736, label %717

732:                                              ; preds = %690, %703
  %733 = icmp eq i8 %702, 7
  %734 = trunc i64 %691 to i32
  %735 = select i1 %733, i32 %734, i32 %693
  br label %736

736:                                              ; preds = %727, %710, %732
  %737 = phi i32 [ %735, %732 ], [ %714, %710 ], [ %714, %727 ]
  %738 = add i32 %692, 1
  %739 = add nuw nsw i64 %691, 1
  %740 = icmp eq i32 %738, %4
  br i1 %740, label %661, label %690

741:                                              ; preds = %687, %788, %661
  %742 = sub i32 %4, %3
  %743 = icmp ugt i32 %742, 1
  br i1 %743, label %744, label %787

744:                                              ; preds = %741
  %745 = zext i32 %742 to i64
  br label %746

746:                                              ; preds = %784, %744
  %747 = phi i64 [ 1, %744 ], [ %785, %784 ]
  %748 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %663, i64 %747, i32 4
  %749 = bitcast %union._hb_var_int_t* %748 to [4 x i8]*
  %750 = getelementptr inbounds [4 x i8], [4 x i8]* %749, i64 0, i64 3
  br label %751

751:                                              ; preds = %754, %746
  %752 = phi i64 [ %747, %746 ], [ %763, %754 ]
  %753 = icmp eq i64 %752, 0
  br i1 %753, label %764, label %754

754:                                              ; preds = %751
  %755 = add i64 %752, 4294967295
  %756 = and i64 %755, 4294967295
  %757 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %663, i64 %756, i32 4
  %758 = bitcast %union._hb_var_int_t* %757 to [4 x i8]*
  %759 = getelementptr inbounds [4 x i8], [4 x i8]* %758, i64 0, i64 3
  %760 = load i8, i8* %759, align 1
  %761 = load i8, i8* %750, align 1
  %762 = icmp ugt i8 %760, %761
  %763 = add nsw i64 %752, -1
  br i1 %762, label %751, label %764

764:                                              ; preds = %754, %751
  %765 = and i64 %752, 4294967295
  %766 = icmp eq i64 %747, %765
  br i1 %766, label %784, label %767

767:                                              ; preds = %764
  %768 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %663, i64 %747, i32 0
  %769 = bitcast i32* %768 to <4 x i32>*
  %770 = load <4 x i32>, <4 x i32>* %769, align 4
  %771 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %663, i64 %747, i32 4, i32 0
  %772 = load i32, i32* %771, align 4
  %773 = add i64 %752, 1
  %774 = and i64 %773, 4294967295
  %775 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %663, i64 %774
  %776 = bitcast %struct.hb_glyph_info_t* %775 to i8*
  %777 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %663, i64 %765
  %778 = bitcast %struct.hb_glyph_info_t* %777 to i8*
  %779 = sub i64 %747, %752
  %780 = and i64 %779, 4294967295
  %781 = mul nuw nsw i64 %780, 20
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %776, i8* align 4 %778, i64 %781, i1 false) #4
  %782 = bitcast %struct.hb_glyph_info_t* %777 to <4 x i32>*
  store <4 x i32> %770, <4 x i32>* %782, align 4
  %783 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %663, i64 %765, i32 4, i32 0
  store i32 %772, i32* %783, align 4
  br label %784

784:                                              ; preds = %767, %764
  %785 = add nuw nsw i64 %747, 1
  %786 = icmp eq i64 %785, %745
  br i1 %786, label %787, label %746

787:                                              ; preds = %784, %741
  br i1 %609, label %819, label %832

788:                                              ; preds = %687, %788
  %789 = phi i64 [ %817, %788 ], [ %688, %687 ]
  %790 = trunc i64 %789 to i32
  %791 = sub i32 %790, %3
  %792 = trunc i32 %791 to i8
  %793 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %789, i32 3
  %794 = bitcast %union._hb_var_int_t* %793 to [4 x i8]*
  %795 = getelementptr inbounds [4 x i8], [4 x i8]* %794, i64 0, i64 3
  store i8 %792, i8* %795, align 1
  %796 = add nuw nsw i64 %789, 1
  %797 = trunc i64 %796 to i32
  %798 = sub i32 %797, %3
  %799 = trunc i32 %798 to i8
  %800 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %796, i32 3
  %801 = bitcast %union._hb_var_int_t* %800 to [4 x i8]*
  %802 = getelementptr inbounds [4 x i8], [4 x i8]* %801, i64 0, i64 3
  store i8 %799, i8* %802, align 1
  %803 = add nuw nsw i64 %789, 2
  %804 = trunc i64 %803 to i32
  %805 = sub i32 %804, %3
  %806 = trunc i32 %805 to i8
  %807 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %803, i32 3
  %808 = bitcast %union._hb_var_int_t* %807 to [4 x i8]*
  %809 = getelementptr inbounds [4 x i8], [4 x i8]* %808, i64 0, i64 3
  store i8 %806, i8* %809, align 1
  %810 = add nuw nsw i64 %789, 3
  %811 = trunc i64 %810 to i32
  %812 = sub i32 %811, %3
  %813 = trunc i32 %812 to i8
  %814 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %810, i32 3
  %815 = bitcast %union._hb_var_int_t* %814 to [4 x i8]*
  %816 = getelementptr inbounds [4 x i8], [4 x i8]* %815, i64 0, i64 3
  store i8 %813, i8* %816, align 1
  %817 = add nuw nsw i64 %789, 4
  %818 = icmp eq i64 %817, %669
  br i1 %818, label %741, label %788

819:                                              ; preds = %787, %826
  %820 = phi i64 [ %827, %826 ], [ %662, %787 ]
  %821 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %820, i32 4
  %822 = bitcast %union._hb_var_int_t* %821 to [4 x i8]*
  %823 = getelementptr inbounds [4 x i8], [4 x i8]* %822, i64 0, i64 3
  %824 = load i8, i8* %823, align 1
  %825 = icmp eq i8 %824, 4
  br i1 %825, label %830, label %826

826:                                              ; preds = %819
  %827 = add nuw nsw i64 %820, 1
  %828 = trunc i64 %827 to i32
  %829 = icmp eq i32 %828, %4
  br i1 %829, label %832, label %819

830:                                              ; preds = %819
  %831 = trunc i64 %820 to i32
  br label %832

832:                                              ; preds = %826, %830, %787
  %833 = phi i32 [ %4, %787 ], [ %831, %830 ], [ %4, %826 ]
  %834 = load i8, i8* %506, align 8, !range !3
  %835 = icmp ne i8 %834, 0
  %836 = icmp ugt i32 %742, 127
  %837 = or i1 %836, %835
  br i1 %837, label %843, label %838

838:                                              ; preds = %832
  %839 = icmp ult i32 %833, %4
  br i1 %839, label %840, label %889

840:                                              ; preds = %838
  %841 = zext i32 %833 to i64
  %842 = zext i32 %4 to i64
  br label %847

843:                                              ; preds = %832
  %844 = sub i32 %4, %833
  %845 = icmp ult i32 %844, 2
  br i1 %845, label %889, label %846

846:                                              ; preds = %843
  call void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t* %2, i32 %833, i32 %4) #4
  br label %889

847:                                              ; preds = %886, %840
  %848 = phi i64 [ %841, %840 ], [ %887, %886 ]
  %849 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %848, i32 3
  %850 = bitcast %union._hb_var_int_t* %849 to [4 x i8]*
  %851 = getelementptr inbounds [4 x i8], [4 x i8]* %850, i64 0, i64 3
  %852 = load i8, i8* %851, align 1
  %853 = icmp eq i8 %852, -1
  br i1 %853, label %886, label %854

854:                                              ; preds = %847
  %855 = zext i8 %852 to i32
  %856 = add i32 %855, %3
  %857 = zext i32 %856 to i64
  %858 = icmp eq i64 %848, %857
  %859 = trunc i64 %848 to i32
  br i1 %858, label %877, label %860

860:                                              ; preds = %854, %860
  %861 = phi i32 [ %874, %860 ], [ %856, %854 ]
  %862 = phi i32 [ %867, %860 ], [ %859, %854 ]
  %863 = phi i32 [ %865, %860 ], [ %859, %854 ]
  %864 = icmp ugt i32 %863, %861
  %865 = select i1 %864, i32 %861, i32 %863
  %866 = icmp ult i32 %862, %861
  %867 = select i1 %866, i32 %861, i32 %862
  %868 = zext i32 %861 to i64
  %869 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %868, i32 3
  %870 = bitcast %union._hb_var_int_t* %869 to [4 x i8]*
  %871 = getelementptr inbounds [4 x i8], [4 x i8]* %870, i64 0, i64 3
  %872 = load i8, i8* %871, align 1
  store i8 -1, i8* %871, align 1
  %873 = zext i8 %872 to i32
  %874 = add i32 %873, %3
  %875 = zext i32 %874 to i64
  %876 = icmp eq i64 %848, %875
  br i1 %876, label %877, label %860

877:                                              ; preds = %860, %854
  %878 = phi i32 [ %859, %854 ], [ %865, %860 ]
  %879 = phi i32 [ %859, %854 ], [ %867, %860 ]
  %880 = icmp ult i32 %833, %878
  %881 = select i1 %880, i32 %878, i32 %833
  %882 = add i32 %879, 1
  %883 = sub i32 %882, %881
  %884 = icmp ult i32 %883, 2
  br i1 %884, label %886, label %885

885:                                              ; preds = %877
  call void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t* %2, i32 %881, i32 %882) #4
  br label %886

886:                                              ; preds = %885, %877, %847
  %887 = add nuw nsw i64 %848, 1
  %888 = icmp eq i64 %887, %842
  br i1 %888, label %889, label %847

889:                                              ; preds = %886, %838, %846, %843
  br i1 %609, label %890, label %952

890:                                              ; preds = %889
  %891 = zext i32 %4 to i64
  %892 = sub nsw i64 %891, %662
  %893 = xor i64 %662, -1
  %894 = add nsw i64 %893, %891
  %895 = and i64 %892, 7
  %896 = icmp eq i64 %895, 0
  br i1 %896, label %906, label %897

897:                                              ; preds = %890, %897
  %898 = phi i64 [ %903, %897 ], [ %662, %890 ]
  %899 = phi i64 [ %904, %897 ], [ %895, %890 ]
  %900 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %898, i32 3
  %901 = bitcast %union._hb_var_int_t* %900 to [4 x i8]*
  %902 = getelementptr inbounds [4 x i8], [4 x i8]* %901, i64 0, i64 3
  store i8 %667, i8* %902, align 1
  %903 = add nuw nsw i64 %898, 1
  %904 = add i64 %899, -1
  %905 = icmp eq i64 %904, 0
  br i1 %905, label %906, label %897, !llvm.loop !25

906:                                              ; preds = %897, %890
  %907 = phi i64 [ %662, %890 ], [ %903, %897 ]
  %908 = icmp ult i64 %894, 7
  br i1 %908, label %909, label %910

909:                                              ; preds = %910, %906
  br i1 %609, label %945, label %952

910:                                              ; preds = %906, %910
  %911 = phi i64 [ %943, %910 ], [ %907, %906 ]
  %912 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %911, i32 3
  %913 = bitcast %union._hb_var_int_t* %912 to [4 x i8]*
  %914 = getelementptr inbounds [4 x i8], [4 x i8]* %913, i64 0, i64 3
  store i8 %667, i8* %914, align 1
  %915 = add nuw nsw i64 %911, 1
  %916 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %915, i32 3
  %917 = bitcast %union._hb_var_int_t* %916 to [4 x i8]*
  %918 = getelementptr inbounds [4 x i8], [4 x i8]* %917, i64 0, i64 3
  store i8 %667, i8* %918, align 1
  %919 = add nuw nsw i64 %911, 2
  %920 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %919, i32 3
  %921 = bitcast %union._hb_var_int_t* %920 to [4 x i8]*
  %922 = getelementptr inbounds [4 x i8], [4 x i8]* %921, i64 0, i64 3
  store i8 %667, i8* %922, align 1
  %923 = add nuw nsw i64 %911, 3
  %924 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %923, i32 3
  %925 = bitcast %union._hb_var_int_t* %924 to [4 x i8]*
  %926 = getelementptr inbounds [4 x i8], [4 x i8]* %925, i64 0, i64 3
  store i8 %667, i8* %926, align 1
  %927 = add nuw nsw i64 %911, 4
  %928 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %927, i32 3
  %929 = bitcast %union._hb_var_int_t* %928 to [4 x i8]*
  %930 = getelementptr inbounds [4 x i8], [4 x i8]* %929, i64 0, i64 3
  store i8 %667, i8* %930, align 1
  %931 = add nuw nsw i64 %911, 5
  %932 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %931, i32 3
  %933 = bitcast %union._hb_var_int_t* %932 to [4 x i8]*
  %934 = getelementptr inbounds [4 x i8], [4 x i8]* %933, i64 0, i64 3
  store i8 %667, i8* %934, align 1
  %935 = add nuw nsw i64 %911, 6
  %936 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %935, i32 3
  %937 = bitcast %union._hb_var_int_t* %936 to [4 x i8]*
  %938 = getelementptr inbounds [4 x i8], [4 x i8]* %937, i64 0, i64 3
  store i8 %667, i8* %938, align 1
  %939 = add nuw nsw i64 %911, 7
  %940 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %939, i32 3
  %941 = bitcast %union._hb_var_int_t* %940 to [4 x i8]*
  %942 = getelementptr inbounds [4 x i8], [4 x i8]* %941, i64 0, i64 3
  store i8 %667, i8* %942, align 1
  %943 = add nuw nsw i64 %911, 8
  %944 = icmp eq i64 %943, %891
  br i1 %944, label %909, label %910

945:                                              ; preds = %909, %957
  %946 = phi i64 [ %962, %957 ], [ %662, %909 ]
  %947 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %946, i32 4
  %948 = bitcast %union._hb_var_int_t* %947 to [4 x i8]*
  %949 = getelementptr inbounds [4 x i8], [4 x i8]* %948, i64 0, i64 3
  %950 = load i8, i8* %949, align 1
  %951 = icmp eq i8 %950, 1
  br i1 %951, label %957, label %952

952:                                              ; preds = %945, %957, %889, %909
  %953 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 10, i64 7
  %954 = load i32, i32* %953, align 4
  %955 = load i8, i8* %506, align 8, !range !3
  %956 = icmp eq i8 %955, 0
  br i1 %956, label %965, label %974

957:                                              ; preds = %945
  %958 = load i32, i32* %72, align 8
  %959 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %946, i32 1
  %960 = load i32, i32* %959, align 4
  %961 = or i32 %960, %958
  store i32 %961, i32* %959, align 4
  %962 = add nuw nsw i64 %946, 1
  %963 = trunc i64 %962 to i32
  %964 = icmp eq i32 %963, %4
  br i1 %964, label %952, label %945

965:                                              ; preds = %952
  %966 = load %struct.indic_config_t*, %struct.indic_config_t** %252, align 8
  %967 = getelementptr inbounds %struct.indic_config_t, %struct.indic_config_t* %966, i64 0, i32 6
  %968 = load i32, i32* %967, align 4
  %969 = icmp eq i32 %968, 0
  br i1 %969, label %970, label %974

970:                                              ; preds = %965
  %971 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 10, i64 5
  %972 = load i32, i32* %971, align 4
  %973 = or i32 %972, %954
  br label %974

974:                                              ; preds = %952, %970, %965
  %975 = phi i32 [ %954, %952 ], [ %973, %970 ], [ %954, %965 ]
  %976 = icmp ugt i32 %833, %3
  br i1 %976, label %977, label %996

977:                                              ; preds = %974
  %978 = zext i32 %833 to i64
  %979 = sub nsw i64 %978, %662
  %980 = xor i64 %662, -1
  %981 = add nsw i64 %980, %978
  %982 = and i64 %979, 3
  %983 = icmp eq i64 %982, 0
  br i1 %983, label %993, label %984

984:                                              ; preds = %977, %984
  %985 = phi i64 [ %990, %984 ], [ %662, %977 ]
  %986 = phi i64 [ %991, %984 ], [ %982, %977 ]
  %987 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %985, i32 1
  %988 = load i32, i32* %987, align 4
  %989 = or i32 %988, %975
  store i32 %989, i32* %987, align 4
  %990 = add nuw nsw i64 %985, 1
  %991 = add i64 %986, -1
  %992 = icmp eq i64 %991, 0
  br i1 %992, label %993, label %984, !llvm.loop !26

993:                                              ; preds = %984, %977
  %994 = phi i64 [ %662, %977 ], [ %990, %984 ]
  %995 = icmp ult i64 %981, 3
  br i1 %995, label %996, label %1024

996:                                              ; preds = %993, %1024, %974
  %997 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 10, i64 5
  %998 = load i32, i32* %997, align 4
  %999 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 10, i64 6
  %1000 = load i32, i32* %999, align 8
  %1001 = or i32 %1000, %998
  %1002 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 10, i64 8
  %1003 = load i32, i32* %1002, align 8
  %1004 = or i32 %1001, %1003
  %1005 = add i32 %833, 1
  %1006 = icmp ult i32 %1005, %4
  br i1 %1006, label %1007, label %1043

1007:                                             ; preds = %996
  %1008 = zext i32 %1005 to i64
  %1009 = xor i32 %833, 1
  %1010 = add i32 %1009, %4
  %1011 = add i32 %4, -2
  %1012 = and i32 %1010, 1
  %1013 = icmp eq i32 %1012, 0
  br i1 %1013, label %1020, label %1014

1014:                                             ; preds = %1007
  %1015 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1008, i32 1
  %1016 = load i32, i32* %1015, align 4
  %1017 = or i32 %1004, %1016
  store i32 %1017, i32* %1015, align 4
  %1018 = add i32 %833, 2
  %1019 = add nuw nsw i64 %1008, 1
  br label %1020

1020:                                             ; preds = %1007, %1014
  %1021 = phi i64 [ %1008, %1007 ], [ %1019, %1014 ]
  %1022 = phi i32 [ %1005, %1007 ], [ %1018, %1014 ]
  %1023 = icmp eq i32 %1011, %833
  br i1 %1023, label %1043, label %1046

1024:                                             ; preds = %993, %1024
  %1025 = phi i64 [ %1041, %1024 ], [ %994, %993 ]
  %1026 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1025, i32 1
  %1027 = load i32, i32* %1026, align 4
  %1028 = or i32 %1027, %975
  store i32 %1028, i32* %1026, align 4
  %1029 = add nuw nsw i64 %1025, 1
  %1030 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1029, i32 1
  %1031 = load i32, i32* %1030, align 4
  %1032 = or i32 %1031, %975
  store i32 %1032, i32* %1030, align 4
  %1033 = add nuw nsw i64 %1025, 2
  %1034 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1033, i32 1
  %1035 = load i32, i32* %1034, align 4
  %1036 = or i32 %1035, %975
  store i32 %1036, i32* %1034, align 4
  %1037 = add nuw nsw i64 %1025, 3
  %1038 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1037, i32 1
  %1039 = load i32, i32* %1038, align 4
  %1040 = or i32 %1039, %975
  store i32 %1040, i32* %1038, align 4
  %1041 = add nuw nsw i64 %1025, 4
  %1042 = icmp eq i64 %1041, %978
  br i1 %1042, label %996, label %1024

1043:                                             ; preds = %1020, %1046, %996
  %1044 = load i8, i8* %506, align 8, !range !3
  %1045 = icmp eq i8 %1044, 0
  br i1 %1045, label %1107, label %1059

1046:                                             ; preds = %1020, %1046
  %1047 = phi i64 [ %1057, %1046 ], [ %1021, %1020 ]
  %1048 = phi i32 [ %1056, %1046 ], [ %1022, %1020 ]
  %1049 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1047, i32 1
  %1050 = load i32, i32* %1049, align 4
  %1051 = or i32 %1004, %1050
  store i32 %1051, i32* %1049, align 4
  %1052 = add nuw nsw i64 %1047, 1
  %1053 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1052, i32 1
  %1054 = load i32, i32* %1053, align 4
  %1055 = or i32 %1004, %1054
  store i32 %1055, i32* %1053, align 4
  %1056 = add i32 %1048, 2
  %1057 = add nuw nsw i64 %1047, 2
  %1058 = icmp eq i32 %1056, %4
  br i1 %1058, label %1043, label %1046

1059:                                             ; preds = %1043
  %1060 = load i32, i32* %13, align 4
  %1061 = icmp eq i32 %1060, 1147500129
  br i1 %1061, label %1062, label %1107

1062:                                             ; preds = %1059
  %1063 = add i32 %3, 1
  %1064 = icmp ult i32 %1063, %833
  br i1 %1064, label %1065, label %1107

1065:                                             ; preds = %1062
  %1066 = zext i32 %1063 to i64
  br label %1067

1067:                                             ; preds = %1102, %1065
  %1068 = phi i64 [ %1066, %1065 ], [ %1104, %1102 ]
  %1069 = phi i32 [ %1063, %1065 ], [ %1103, %1102 ]
  %1070 = phi i32 [ %3, %1065 ], [ %1105, %1102 ]
  %1071 = zext i32 %1070 to i64
  %1072 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1071, i32 4
  %1073 = bitcast %union._hb_var_int_t* %1072 to [4 x i8]*
  %1074 = getelementptr inbounds [4 x i8], [4 x i8]* %1073, i64 0, i64 2
  %1075 = load i8, i8* %1074, align 2
  %1076 = icmp eq i8 %1075, 16
  br i1 %1076, label %1077, label %1102

1077:                                             ; preds = %1067
  %1078 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1068, i32 4
  %1079 = bitcast %union._hb_var_int_t* %1078 to [4 x i8]*
  %1080 = getelementptr inbounds [4 x i8], [4 x i8]* %1079, i64 0, i64 2
  %1081 = load i8, i8* %1080, align 2
  %1082 = icmp eq i8 %1081, 4
  br i1 %1082, label %1083, label %1102

1083:                                             ; preds = %1077
  %1084 = add i32 %1070, 2
  %1085 = icmp eq i32 %1084, %833
  br i1 %1085, label %1093, label %1086

1086:                                             ; preds = %1083
  %1087 = zext i32 %1084 to i64
  %1088 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1087, i32 4
  %1089 = bitcast %union._hb_var_int_t* %1088 to [4 x i8]*
  %1090 = getelementptr inbounds [4 x i8], [4 x i8]* %1089, i64 0, i64 2
  %1091 = load i8, i8* %1090, align 2
  %1092 = icmp eq i8 %1091, 6
  br i1 %1092, label %1102, label %1093

1093:                                             ; preds = %1086, %1083
  %1094 = load i32, i32* %997, align 4
  %1095 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1071, i32 1
  %1096 = load i32, i32* %1095, align 4
  %1097 = or i32 %1096, %1094
  store i32 %1097, i32* %1095, align 4
  %1098 = load i32, i32* %997, align 4
  %1099 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1068, i32 1
  %1100 = load i32, i32* %1099, align 4
  %1101 = or i32 %1100, %1098
  store i32 %1101, i32* %1099, align 4
  br label %1102

1102:                                             ; preds = %1086, %1067, %1077, %1093
  %1103 = add i32 %1069, 1
  %1104 = add nuw nsw i64 %1068, 1
  %1105 = trunc i64 %1068 to i32
  %1106 = icmp eq i32 %1103, %833
  br i1 %1106, label %1107, label %1067

1107:                                             ; preds = %1102, %1062, %1043, %1059
  %1108 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 10, i64 4
  %1109 = load i32, i32* %1108, align 8
  %1110 = icmp ne i32 %1109, 0
  %1111 = add i32 %833, 2
  %1112 = icmp ult i32 %1111, %4
  %1113 = and i1 %1112, %1110
  br i1 %1113, label %1114, label %1164

1114:                                             ; preds = %1107
  %1115 = bitcast [2 x i32]* %7 to i8*
  %1116 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 0
  %1117 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 1
  %1118 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 6, i32 0
  %1119 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 6, i32 1
  %1120 = getelementptr inbounds %struct.indic_shape_plan_t, %struct.indic_shape_plan_t* %10, i64 0, i32 6, i32 2
  %1121 = load i32, i32* %1119, align 8
  br label %1122

1122:                                             ; preds = %1114, %1160
  %1123 = phi i32 [ %1121, %1114 ], [ %1161, %1160 ]
  %1124 = phi i32 [ %833, %1114 ], [ %1125, %1160 ]
  %1125 = add i32 %1124, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1115) #4
  store i32 -1431655766, i32* %1116, align 4
  store i32 -1431655766, i32* %1117, align 4
  %1126 = zext i32 %1125 to i64
  %1127 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1126, i32 0
  %1128 = load i32, i32* %1127, align 4
  store i32 %1128, i32* %1116, align 4
  %1129 = add i32 %1124, 2
  %1130 = zext i32 %1129 to i64
  %1131 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1130, i32 0
  %1132 = load i32, i32* %1131, align 4
  store i32 %1132, i32* %1117, align 4
  %1133 = icmp eq i32 %1123, 0
  br i1 %1133, label %1160, label %1138

1134:                                             ; preds = %1138
  %1135 = load i32, i32* %1119, align 8
  %1136 = zext i32 %1135 to i64
  %1137 = icmp ult i64 %1148, %1136
  br i1 %1137, label %1138, label %1160

1138:                                             ; preds = %1122, %1134
  %1139 = phi i64 [ %1148, %1134 ], [ 0, %1122 ]
  %1140 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %1118, align 8
  %1141 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %1140, i64 %1139, i32 0
  %1142 = load i16, i16* %1141, align 4
  %1143 = zext i16 %1142 to i32
  %1144 = load i8, i8* %1120, align 4, !range !3
  %1145 = zext i8 %1144 to i32
  %1146 = call i32 @hb_ot_layout_lookup_would_substitute(%struct.hb_face_t* %1, i32 %1143, i32* nonnull %1116, i32 2, i32 %1145) #4
  %1147 = icmp eq i32 %1146, 0
  %1148 = add nuw nsw i64 %1139, 1
  br i1 %1147, label %1134, label %1149

1149:                                             ; preds = %1138
  %1150 = zext i32 %1125 to i64
  %1151 = zext i32 %1129 to i64
  %1152 = load i32, i32* %1108, align 8
  %1153 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1150, i32 1
  %1154 = load i32, i32* %1153, align 4
  %1155 = or i32 %1154, %1152
  store i32 %1155, i32* %1153, align 4
  %1156 = load i32, i32* %1108, align 8
  %1157 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1151, i32 1
  %1158 = load i32, i32* %1157, align 4
  %1159 = or i32 %1158, %1156
  store i32 %1159, i32* %1157, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1115) #4
  br label %1164

1160:                                             ; preds = %1134, %1122
  %1161 = phi i32 [ 0, %1122 ], [ %1135, %1134 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1115) #4
  %1162 = add i32 %1124, 3
  %1163 = icmp ult i32 %1162, %4
  br i1 %1163, label %1122, label %1164

1164:                                             ; preds = %1160, %1107, %1149
  %1165 = add i32 %3, 1
  %1166 = icmp ult i32 %1165, %4
  br i1 %1166, label %1167, label %1169

1167:                                             ; preds = %1164
  %1168 = zext i32 %1165 to i64
  br label %1170

1169:                                             ; preds = %1227, %1164
  ret void

1170:                                             ; preds = %1227, %1167
  %1171 = phi i64 [ %1168, %1167 ], [ %1229, %1227 ]
  %1172 = phi i32 [ %1165, %1167 ], [ %1228, %1227 ]
  %1173 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1171, i32 3
  %1174 = bitcast %union._hb_var_int_t* %1173 to i16*
  %1175 = load i16, i16* %1174, align 4
  %1176 = and i16 %1175, 32
  %1177 = icmp eq i16 %1176, 0
  br i1 %1177, label %1178, label %1227

1178:                                             ; preds = %1170
  %1179 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1171, i32 4
  %1180 = bitcast %union._hb_var_int_t* %1179 to [4 x i8]*
  %1181 = getelementptr inbounds [4 x i8], [4 x i8]* %1180, i64 0, i64 2
  %1182 = load i8, i8* %1181, align 2
  %1183 = zext i8 %1182 to i32
  %1184 = shl i32 1, %1183
  %1185 = and i32 %1184, 96
  %1186 = icmp ne i32 %1185, 0
  %1187 = icmp eq i8 %1182, 5
  %1188 = and i1 %1187, %1186
  br i1 %1188, label %1189, label %1227

1189:                                             ; preds = %1178
  %1190 = trunc i64 %1171 to i32
  %1191 = add i32 %1190, -1
  %1192 = load i32, i32* %953, align 4
  %1193 = xor i32 %1192, -1
  %1194 = zext i32 %1191 to i64
  %1195 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1194, i32 1
  %1196 = load i32, i32* %1195, align 4
  %1197 = and i32 %1196, %1193
  store i32 %1197, i32* %1195, align 4
  %1198 = icmp ugt i32 %1191, %3
  br i1 %1198, label %1199, label %1227

1199:                                             ; preds = %1189, %1218
  %1200 = phi i64 [ %1222, %1218 ], [ %1194, %1189 ]
  %1201 = phi i32 [ %1219, %1218 ], [ %1191, %1189 ]
  %1202 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1200, i32 3
  %1203 = bitcast %union._hb_var_int_t* %1202 to i16*
  %1204 = load i16, i16* %1203, align 4
  %1205 = and i16 %1204, 32
  %1206 = icmp eq i16 %1205, 0
  br i1 %1206, label %1207, label %1218

1207:                                             ; preds = %1199
  %1208 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1200, i32 4
  %1209 = bitcast %union._hb_var_int_t* %1208 to [4 x i8]*
  %1210 = getelementptr inbounds [4 x i8], [4 x i8]* %1209, i64 0, i64 2
  %1211 = load i8, i8* %1210, align 2
  %1212 = icmp ult i8 %1211, 32
  %1213 = zext i8 %1211 to i32
  %1214 = shl i32 1, %1213
  %1215 = and i32 %1214, 727046
  %1216 = icmp ne i32 %1215, 0
  %1217 = and i1 %1212, %1216
  br i1 %1217, label %1227, label %1218

1218:                                             ; preds = %1207, %1199
  %1219 = add i32 %1201, -1
  %1220 = load i32, i32* %953, align 4
  %1221 = xor i32 %1220, -1
  %1222 = zext i32 %1219 to i64
  %1223 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %12, i64 %1222, i32 1
  %1224 = load i32, i32* %1223, align 4
  %1225 = and i32 %1224, %1221
  store i32 %1225, i32* %1223, align 4
  %1226 = icmp ugt i32 %1219, %3
  br i1 %1226, label %1199, label %1227

1227:                                             ; preds = %1218, %1207, %1189, %1170, %1178
  %1228 = add i32 %1172, 1
  %1229 = add nuw nsw i64 %1171, 1
  %1230 = icmp eq i32 %1228, %4
  br i1 %1230, label %1169, label %1170
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare hidden void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t*, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #5

declare hidden void @_Z16_hb_options_initv() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare hidden void @_Z37_hb_preprocess_text_vowel_constraintsPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t(%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*) local_unnamed_addr #3

declare hidden zeroext i16 @_Z23hb_indic_get_categoriesj(i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 -480270031, i32 1911165, i32 1910210, i32 1909255, i32 1908302, i32 1907348}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !7}
!11 = distinct !{!11, !7}
!12 = distinct !{!12, !7}
!13 = distinct !{!13, !7}
!14 = distinct !{!14, !7}
!15 = distinct !{!15, !7}
!16 = distinct !{!16, !7}
!17 = distinct !{!17, !7}
!18 = distinct !{!18, !7}
!19 = distinct !{!19, !7}
!20 = distinct !{!20, !7}
!21 = distinct !{!21, !7}
!22 = distinct !{!22, !7}
!23 = distinct !{!23, !7}
!24 = distinct !{!24, !7}
!25 = distinct !{!25, !7}
!26 = distinct !{!26, !7}
