; ModuleID = '../../ui/gl/init/gl_factory_linux_x11.cc'
source_filename = "../../ui/gl/init/gl_factory_linux_x11.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.gl::GLVersionInfo" = type opaque
%"struct.gl::GLWindowSystemBindingInfo" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.40", %"class.gl::RealGLApi"*, %class.scoped_refptr.46, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type opaque
%"class.gl::GLApi" = type { i32 (...)** }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type { %"class.gl::GLApi"*, %"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"* }
%"class.gl::RealGLApi" = type opaque
%class.scoped_refptr.46 = type { %"class.gl::GLShareGroup"* }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.gl::GLVersionInfo"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.47", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.47" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i64 }
%"class.gl::GLSurface" = type { i32 (...)**, %"class.base::RefCounted.68", %"class.base::SupportsWeakPtr.69" }
%"class.base::RefCounted.68" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr.69" = type { %"class.base::internal::WeakReferenceOwner" }
%"struct.gl::GLContextAttribs" = type { i32, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.gl::GLContextGLX" = type <{ %"class.gl::GLContextReal.base", [7 x i8], i8*, %"class.x11::Connection"*, i32, [4 x i8] }>
%"class.gl::GLContextReal.base" = type <{ %"class.gl::GLContext.base", [7 x i8], %"class.std::__1::unique_ptr.70", %"class.std::__1::basic_string", %"class.base::internal::flat_tree", i8 }>
%"class.gl::GLContext.base" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.40", %"class.gl::RealGLApi"*, %class.scoped_refptr.46, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", i8 }>
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.gl::GPUTiming"* }
%"class.gl::GPUTiming" = type opaque
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.76" }
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.78" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.base::BasicStringPiece"* }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.263", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.280", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.322", %"class.base::circular_deque", %"class.base::ObserverList.328", %"class.x11::Event"*, %"class.base::circular_deque.332", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.345" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.257" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.273" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.266", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.266" = type { %"class.std::__1::__vector_base.267" }
%"class.std::__1::__vector_base.267" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.268" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.273" = type <{ %"class.std::__1::vector.266", %"class.base::LinkedList.274", i64, i32, [4 x i8] }>
%"class.base::LinkedList.274" = type { %"class.base::LinkNode.275" }
%"class.base::LinkNode.275" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.286", %"class.std::__1::vector.293" }
%"class.std::__1::vector.286" = type { %"class.std::__1::__vector_base.287" }
%"class.std::__1::__vector_base.287" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.288" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.293" = type { %"class.std::__1::__vector_base.294" }
%"class.std::__1::__vector_base.294" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.295" }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.297" }
%"class.std::__1::vector.297" = type { %"class.std::__1::__vector_base.298" }
%"class.std::__1::__vector_base.298" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.314" }
%"class.base::internal::flat_tree.314" = type { %"class.std::__1::vector.315" }
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.317" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.328" = type <{ %"class.std::__1::vector.266", %"class.base::LinkedList.329", i64, i32, [4 x i8] }>
%"class.base::LinkedList.329" = type { %"class.base::LinkNode.330" }
%"class.base::LinkNode.330" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.332" = type { %"class.base::internal::VectorBuffer.333", i64, i64 }
%"class.base::internal::VectorBuffer.333" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.336, %"class.std::__1::unique_ptr.338" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.334 }
%class.scoped_refptr.334 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.335", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.335" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.336 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.337", [4 x i8] }>
%"class.base::RefCountedThreadSafe.337" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.344 }
%union.anon.344 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.345" = type { %"class.base::internal::CallbackBase" }
%"class.gl::GLContextEGL" = type { %"class.gl::GLContextReal.base", i8*, i8*, i8*, i32, i8, i8, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.346" }
%"class.std::__1::__tree.346" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.gl::GLContextStub" = type <{ %"class.gl::GLContextReal.base", i8, [6 x i8], %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.gl::GLSurfaceGLXX11" = type { %"class.gl::NativeViewGLSurfaceGLX", %"class.x11::EventObserver" }
%"class.gl::NativeViewGLSurfaceGLX" = type { %"class.gl::GLSurfaceGLX", i32, i32, i32, %struct.__GLXFBConfigRec*, %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.357", %"class.std::__1::unique_ptr.363" }
%"class.gl::GLSurfaceGLX" = type { %"class.gl::GLSurface" }
%struct.__GLXFBConfigRec = type opaque
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.gfx::VSyncProvider"* }
%"class.gfx::VSyncProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.gl::GLSurfacePresentationHelper"* }
%"class.gl::GLSurfacePresentationHelper" = type opaque
%"class.x11::EventObserver" = type { i32 (...)** }
%"class.gl::NativeViewGLSurfaceEGLX11GLES2" = type { %"class.gl::NativeViewGLSurfaceEGLX11.base", i32 }
%"class.gl::NativeViewGLSurfaceEGLX11.base" = type <{ %"class.gl::NativeViewGLSurfaceEGL", %"class.x11::EventObserver", %"class.std::__1::vector.400", i8, i8 }>
%"class.gl::NativeViewGLSurfaceEGL" = type { %"class.gl::GLSurfaceEGL", %"class.gl::EGLTimestampClient", i64, %"class.gfx::Size", i8, i8*, i8, i8, i32, %"class.std::__1::unique_ptr.357", %"class.std::__1::unique_ptr.357", %"class.std::__1::vector.369", i8, %"class.std::__1::vector.384", %"class.std::__1::vector.391", i32, i32, i32, i32, %"class.std::__1::queue", i8, %"class.std::__1::unique_ptr.363" }
%"class.gl::GLSurfaceEGL" = type { %"class.gl::GLSurface", i8*, %"class.gl::GLSurfaceFormat" }
%"class.gl::GLSurfaceFormat" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.gl::EGLTimestampClient" = type { i32 (...)** }
%"class.std::__1::vector.369" = type { %"class.std::__1::__vector_base.370" }
%"class.std::__1::__vector_base.370" = type { %"class.gl::GLSurfaceOverlay"*, %"class.gl::GLSurfaceOverlay"*, %"class.std::__1::__compressed_pair.379" }
%"class.gl::GLSurfaceOverlay" = type { i32, i32, %class.scoped_refptr.371, %"class.gfx::Rect", %"class.gfx::RectF", i8, %"class.std::__1::unique_ptr.373" }
%class.scoped_refptr.371 = type { %"class.gl::GLImage"* }
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted.372", %"class.gfx::ColorSpace" }
%"class.base::RefCounted.372" = type { %"class.base::subtle::RefCountedBase" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.gfx::GpuFence"* }
%"class.gfx::GpuFence" = type { %"struct.gfx::GpuFenceHandle" }
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.gl::GLSurfaceOverlay"* }
%"class.std::__1::vector.384" = type { %"class.std::__1::__vector_base.385" }
%"class.std::__1::__vector_base.385" = type { i32*, i32*, %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { i32* }
%"class.std::__1::vector.391" = type { %"class.std::__1::__vector_base.392" }
%"class.std::__1::__vector_base.392" = type { i8**, i8**, %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { i8** }
%"class.std::__1::queue" = type { %"class.base::circular_deque.398" }
%"class.base::circular_deque.398" = type { %"class.base::internal::VectorBuffer.399", i64, i64 }
%"class.base::internal::VectorBuffer.399" = type { %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"*, i64 }
%"struct.gl::NativeViewGLSurfaceEGL::SwapInfo" = type { i8, i64 }
%"class.std::__1::vector.400" = type { %"class.std::__1::__vector_base.401" }
%"class.std::__1::__vector_base.401" = type { i32*, i32*, %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { i32* }
%"class.gl::NativeViewGLSurfaceEGLX11" = type <{ %"class.gl::NativeViewGLSurfaceEGL", %"class.x11::EventObserver", %"class.std::__1::vector.400", i8, i8, [6 x i8] }>
%"class.gl::UnmappedNativeViewGLSurfaceGLX" = type { %"class.gl::GLSurfaceGLX", %"class.gfx::Size", %struct.__GLXFBConfigRec*, i32, i32 }
%"class.gl::SurfacelessEGL" = type { %"class.gl::GLSurfaceEGL", %"class.gfx::Size" }
%"class.gl::PbufferGLSurfaceEGL" = type { %"class.gl::GLSurfaceEGL", %"class.gfx::Size", i8* }

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [26 x i8] c"gl::init::CreateGLContext\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"gl::init::CreateViewGLSurface\00", align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"gl::init::CreateOffscreenGLSurface\00", align 1
@_ZTVN2gl13GLSurfaceStubE = external unnamed_addr constant { [65 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl4init30GetAllowedGLImplementationsX11Ev(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %2 to i64*
  %5 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6 = bitcast i32** %3 to i64*
  %7 = tail call i8* @_Znwm(i64 4) #8
  %8 = bitcast i8* %7 to i32*
  %9 = getelementptr inbounds i8, i8* %7, i64 4
  %10 = ptrtoint i8* %9 to i64
  store i32 1, i32* %8, align 4
  %11 = ptrtoint i8* %7 to i64
  store i64 %11, i64* %5, align 8
  store i64 %10, i64* %4, align 8
  store i64 %10, i64* %6, align 8
  %12 = bitcast %"class.std::__1::vector"* %0 to i64*
  %13 = tail call i8* @_Znwm(i64 8) #8
  %14 = bitcast i8* %13 to i32*
  %15 = getelementptr inbounds i8, i8* %13, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 5, i32* %16, align 4
  %17 = insertelement <2 x i8*> undef, i8* %13, i32 0
  %18 = shufflevector <2 x i8*> %17, <2 x i8*> undef, <2 x i32> zeroinitializer
  %19 = getelementptr i8, <2 x i8*> %18, <2 x i64> <i64 8, i64 8>
  %20 = ptrtoint <2 x i8*> %19 to <2 x i64>
  %21 = ptrtoint i8* %13 to i64
  %22 = bitcast i8* %7 to i32*
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %14, align 4
  store i64 %21, i64* %12, align 8
  %24 = bitcast i32** %2 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %24, align 8
  tail call void @_ZdlPv(i8* nonnull %7) #8
  %25 = load i32*, i32** %2, align 8
  %26 = ptrtoint i32* %25 to i64
  %27 = load i32*, i32** %3, align 8
  %28 = icmp ult i32* %25, %27
  %29 = ptrtoint i32* %27 to i64
  br i1 %28, label %30, label %34

30:                                               ; preds = %1
  store i32 9, i32* %25, align 4
  %31 = getelementptr inbounds i32, i32* %25, i64 1
  %32 = ptrtoint i32* %31 to i64
  %33 = bitcast i32** %2 to i64*
  store i64 %32, i64* %33, align 8
  br label %86

34:                                               ; preds = %1
  %35 = ptrtoint i32* %25 to i64
  %36 = bitcast i32** %2 to i64*
  %37 = bitcast %"class.std::__1::vector"* %0 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %35, %38
  %40 = ashr exact i64 %39, 2
  %41 = add nsw i64 %40, 1
  %42 = icmp ugt i64 %41, 4611686018427387903
  br i1 %42, label %43, label %45

43:                                               ; preds = %34
  %44 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %44) #9
  unreachable

45:                                               ; preds = %34
  %46 = bitcast i32** %3 to i64*
  %47 = sub i64 %29, %38
  %48 = ashr exact i64 %47, 2
  %49 = icmp ult i64 %48, 2305843009213693951
  br i1 %49, label %50, label %58

50:                                               ; preds = %45
  %51 = ashr exact i64 %47, 1
  %52 = icmp ult i64 %51, %41
  %53 = select i1 %52, i64 %41, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %50
  %56 = icmp ugt i64 %53, 4611686018427387903
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  tail call void @abort() #9
  unreachable

58:                                               ; preds = %55, %45
  %59 = phi i64 [ %53, %55 ], [ 4611686018427387903, %45 ]
  %60 = shl i64 %59, 2
  %61 = tail call i8* @_Znwm(i64 %60) #8
  %62 = bitcast i8* %61 to i32*
  br label %63

63:                                               ; preds = %58, %50
  %64 = phi i64 [ %59, %58 ], [ 0, %50 ]
  %65 = phi i32* [ %62, %58 ], [ null, %50 ]
  %66 = getelementptr inbounds i32, i32* %65, i64 %40
  %67 = getelementptr inbounds i32, i32* %65, i64 %64
  %68 = ptrtoint i32* %67 to i64
  store i32 9, i32* %66, align 4
  %69 = getelementptr inbounds i32, i32* %66, i64 1
  %70 = ptrtoint i32* %69 to i64
  %71 = sub i64 %26, %38
  %72 = ashr exact i64 %71, 2
  %73 = sub nsw i64 0, %72
  %74 = getelementptr inbounds i32, i32* %66, i64 %73
  %75 = ptrtoint i32* %74 to i64
  %76 = icmp sgt i64 %71, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %63
  %78 = bitcast i32* %74 to i8*
  %79 = inttoptr i64 %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 %71, i1 false) #10
  br label %80

80:                                               ; preds = %77, %63
  store i64 %75, i64* %37, align 8
  store i64 %70, i64* %36, align 8
  store i64 %68, i64* %46, align 8
  %81 = icmp eq i64 %38, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %80
  %83 = inttoptr i64 %38 to i8*
  tail call void @_ZdlPv(i8* %83) #8
  %84 = load i32*, i32** %2, align 8
  %85 = ptrtoint i32* %84 to i64
  br label %86

86:                                               ; preds = %30, %80, %82
  %87 = phi i64 [ %32, %30 ], [ %70, %80 ], [ %85, %82 ]
  %88 = phi i32* [ %31, %30 ], [ %69, %80 ], [ %84, %82 ]
  %89 = load i32*, i32** %3, align 8
  %90 = icmp ult i32* %88, %89
  %91 = ptrtoint i32* %89 to i64
  br i1 %90, label %92, label %96

92:                                               ; preds = %86
  store i32 3, i32* %88, align 4
  %93 = getelementptr inbounds i32, i32* %88, i64 1
  %94 = ptrtoint i32* %93 to i64
  %95 = bitcast i32** %2 to i64*
  store i64 %94, i64* %95, align 8
  br label %146

96:                                               ; preds = %86
  %97 = ptrtoint i32* %88 to i64
  %98 = bitcast i32** %2 to i64*
  %99 = bitcast %"class.std::__1::vector"* %0 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %97, %100
  %102 = ashr exact i64 %101, 2
  %103 = add nsw i64 %102, 1
  %104 = icmp ugt i64 %103, 4611686018427387903
  br i1 %104, label %105, label %107

105:                                              ; preds = %96
  %106 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %106) #9
  unreachable

107:                                              ; preds = %96
  %108 = bitcast i32** %3 to i64*
  %109 = sub i64 %91, %100
  %110 = ashr exact i64 %109, 2
  %111 = icmp ult i64 %110, 2305843009213693951
  br i1 %111, label %112, label %120

112:                                              ; preds = %107
  %113 = ashr exact i64 %109, 1
  %114 = icmp ult i64 %113, %103
  %115 = select i1 %114, i64 %103, i64 %113
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %112
  %118 = icmp ugt i64 %115, 4611686018427387903
  br i1 %118, label %119, label %120

119:                                              ; preds = %117
  tail call void @abort() #9
  unreachable

120:                                              ; preds = %117, %107
  %121 = phi i64 [ %115, %117 ], [ 4611686018427387903, %107 ]
  %122 = shl i64 %121, 2
  %123 = tail call i8* @_Znwm(i64 %122) #8
  %124 = bitcast i8* %123 to i32*
  br label %125

125:                                              ; preds = %120, %112
  %126 = phi i64 [ %121, %120 ], [ 0, %112 ]
  %127 = phi i32* [ %124, %120 ], [ null, %112 ]
  %128 = getelementptr inbounds i32, i32* %127, i64 %102
  %129 = getelementptr inbounds i32, i32* %127, i64 %126
  %130 = ptrtoint i32* %129 to i64
  store i32 3, i32* %128, align 4
  %131 = getelementptr inbounds i32, i32* %128, i64 1
  %132 = ptrtoint i32* %131 to i64
  %133 = sub i64 %87, %100
  %134 = ashr exact i64 %133, 2
  %135 = sub nsw i64 0, %134
  %136 = getelementptr inbounds i32, i32* %128, i64 %135
  %137 = ptrtoint i32* %136 to i64
  %138 = icmp sgt i64 %133, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %125
  %140 = bitcast i32* %136 to i8*
  %141 = inttoptr i64 %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %140, i8* align 4 %141, i64 %133, i1 false) #10
  br label %142

142:                                              ; preds = %139, %125
  store i64 %137, i64* %99, align 8
  store i64 %132, i64* %98, align 8
  store i64 %130, i64* %108, align 8
  %143 = icmp eq i64 %100, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %142
  %145 = inttoptr i64 %100 to i8*
  tail call void @_ZdlPv(i8* %145) #8
  br label %146

146:                                              ; preds = %92, %142, %144
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl4init31GetGLWindowSystemBindingInfoX11ERKNS_13GLVersionInfoEPNS_25GLWindowSystemBindingInfoE(%"struct.gl::GLVersionInfo"*, %"struct.gl::GLWindowSystemBindingInfo"*) local_unnamed_addr #0 {
  %3 = tail call i32 @_ZN2gl19GetGLImplementationEv() #10
  switch i32 %3, label %8 [
    i32 1, label %4
    i32 5, label %6
    i32 9, label %6
  ]

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZN2gl31GetGLWindowSystemBindingInfoGLXERKNS_13GLVersionInfoEPNS_25GLWindowSystemBindingInfoE(%"struct.gl::GLVersionInfo"* %0, %"struct.gl::GLWindowSystemBindingInfo"* %1) #10
  br label %8

6:                                                ; preds = %2, %2
  %7 = tail call zeroext i1 @_ZN2gl31GetGLWindowSystemBindingInfoEGLEPNS_25GLWindowSystemBindingInfoE(%"struct.gl::GLWindowSystemBindingInfo"* %1) #10
  br label %8

8:                                                ; preds = %2, %6, %4
  %9 = phi i1 [ %7, %6 ], [ %5, %4 ], [ false, %2 ]
  ret i1 %9
}

declare i32 @_ZN2gl19GetGLImplementationEv() local_unnamed_addr #2

declare zeroext i1 @_ZN2gl31GetGLWindowSystemBindingInfoGLXERKNS_13GLVersionInfoEPNS_25GLWindowSystemBindingInfoE(%"struct.gl::GLVersionInfo"*, %"struct.gl::GLWindowSystemBindingInfo"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2gl31GetGLWindowSystemBindingInfoEGLEPNS_25GLWindowSystemBindingInfoE(%"struct.gl::GLWindowSystemBindingInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::GLContext"* @_ZN2gl4init18CreateGLContextX11EPNS_12GLShareGroupEPNS_9GLSurfaceERKNS_16GLContextAttribsE(%"class.gl::GLShareGroup"*, %"class.gl::GLSurface"*, %"struct.gl::GLContextAttribs"* dereferenceable(28)) local_unnamed_addr #0 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !2

8:                                                ; preds = %3
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %10 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  br label %14

14:                                               ; preds = %3, %8
  %15 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), %8 ]
  %17 = phi i64 [ -6148914691236517206, %3 ], [ %13, %8 ]
  %18 = call i32 @_ZN2gl19GetGLImplementationEv() #10
  switch i32 %18, label %47 [
    i32 1, label %19
    i32 3, label %27
    i32 5, label %27
    i32 9, label %27
    i32 6, label %35
    i32 7, label %41
  ]

19:                                               ; preds = %14
  %20 = call i8* @_Znwm(i64 232) #8
  %21 = bitcast i8* %20 to %"class.gl::GLContextGLX"*
  call void @_ZN2gl12GLContextGLXC1EPNS_12GLShareGroupE(%"class.gl::GLContextGLX"* nonnull %21, %"class.gl::GLShareGroup"* %0) #10
  %22 = bitcast i8* %20 to %"class.gl::GLContext"*
  %23 = getelementptr inbounds i8, i8* %20, i64 8
  %24 = bitcast i8* %23 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %24) #10
  %25 = call %"class.gl::GLContext"* @_ZN2gl19InitializeGLContextE13scoped_refptrINS_9GLContextEEPNS_9GLSurfaceERKNS_16GLContextAttribsE(%"class.gl::GLContext"* nonnull %22, %"class.gl::GLSurface"* %1, %"struct.gl::GLContextAttribs"* dereferenceable(28) %2) #10
  %26 = ptrtoint %"class.gl::GLContext"* %25 to i64
  br label %47

27:                                               ; preds = %14, %14, %14
  %28 = call i8* @_Znwm(i64 264) #8
  %29 = bitcast i8* %28 to %"class.gl::GLContextEGL"*
  call void @_ZN2gl12GLContextEGLC1EPNS_12GLShareGroupE(%"class.gl::GLContextEGL"* nonnull %29, %"class.gl::GLShareGroup"* %0) #10
  %30 = bitcast i8* %28 to %"class.gl::GLContext"*
  %31 = getelementptr inbounds i8, i8* %28, i64 8
  %32 = bitcast i8* %31 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %32) #10
  %33 = call %"class.gl::GLContext"* @_ZN2gl19InitializeGLContextE13scoped_refptrINS_9GLContextEEPNS_9GLSurfaceERKNS_16GLContextAttribsE(%"class.gl::GLContext"* nonnull %30, %"class.gl::GLSurface"* %1, %"struct.gl::GLContextAttribs"* dereferenceable(28) %2) #10
  %34 = ptrtoint %"class.gl::GLContext"* %33 to i64
  br label %47

35:                                               ; preds = %14
  %36 = call i8* @_Znwm(i64 240) #8
  %37 = bitcast i8* %36 to %"class.gl::GLContextStub"*
  call void @_ZN2gl13GLContextStubC1EPNS_12GLShareGroupE(%"class.gl::GLContextStub"* nonnull %37, %"class.gl::GLShareGroup"* %0) #10
  %38 = ptrtoint i8* %36 to i64
  %39 = getelementptr inbounds i8, i8* %36, i64 8
  %40 = bitcast i8* %39 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %40) #10
  br label %47

41:                                               ; preds = %14
  %42 = call i8* @_Znwm(i64 240) #8
  %43 = bitcast i8* %42 to %"class.gl::GLContextStub"*
  call void @_ZN2gl13GLContextStubC1EPNS_12GLShareGroupE(%"class.gl::GLContextStub"* nonnull %43, %"class.gl::GLShareGroup"* %0) #10
  %44 = ptrtoint i8* %42 to i64
  %45 = getelementptr inbounds i8, i8* %42, i64 8
  %46 = bitcast i8* %45 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %46) #10
  call void @_ZN2gl13GLContextStub13SetUseStubApiEb(%"class.gl::GLContextStub"* nonnull %43, i1 zeroext true) #10
  br label %47

47:                                               ; preds = %14, %41, %35, %27, %19
  %48 = phi i64 [ %44, %41 ], [ %38, %35 ], [ %34, %27 ], [ %26, %19 ], [ 0, %14 ]
  %49 = icmp eq i8* %15, null
  br i1 %49, label %54, label %50

50:                                               ; preds = %47
  %51 = load i8, i8* %15, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %16, i64 %17) #10
  br label %54

54:                                               ; preds = %47, %50, %53
  %55 = inttoptr i64 %48 to %"class.gl::GLContext"*
  ret %"class.gl::GLContext"* %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.gl::GLContext"* @_ZN2gl19InitializeGLContextE13scoped_refptrINS_9GLContextEEPNS_9GLSurfaceERKNS_16GLContextAttribsE(%"class.gl::GLContext"*, %"class.gl::GLSurface"*, %"struct.gl::GLContextAttribs"* dereferenceable(28)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN2gl12GLContextGLXC1EPNS_12GLShareGroupE(%"class.gl::GLContextGLX"*, %"class.gl::GLShareGroup"*) unnamed_addr #2

declare void @_ZN2gl12GLContextEGLC1EPNS_12GLShareGroupE(%"class.gl::GLContextEGL"*, %"class.gl::GLShareGroup"*) unnamed_addr #2

declare void @_ZN2gl13GLContextStubC1EPNS_12GLShareGroupE(%"class.gl::GLContextStub"*, %"class.gl::GLShareGroup"*) unnamed_addr #2

declare void @_ZN2gl13GLContextStub13SetUseStubApiEb(%"class.gl::GLContextStub"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::GLSurface"* @_ZN2gl4init22CreateViewGLSurfaceX11Ej(i32) local_unnamed_addr #0 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), %6 ]
  %15 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %16 = call i32 @_ZN2gl19GetGLImplementationEv() #10
  switch i32 %16, label %45 [
    i32 1, label %17
    i32 3, label %24
    i32 5, label %24
    i32 9, label %31
    i32 6, label %38
    i32 7, label %38
  ]

17:                                               ; preds = %12
  %18 = call i8* @_Znwm(i64 88) #8
  %19 = bitcast i8* %18 to %"class.gl::GLSurfaceGLXX11"*
  call void @_ZN2gl15GLSurfaceGLXX11C1Ej(%"class.gl::GLSurfaceGLXX11"* nonnull %19, i32 %0) #10
  %20 = bitcast i8* %18 to %"class.gl::GLSurface"*
  %21 = getelementptr inbounds i8, i8* %18, i64 8
  %22 = bitcast i8* %21 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #10
  %23 = call %"class.gl::GLSurface"* @_ZN2gl19InitializeGLSurfaceE13scoped_refptrINS_9GLSurfaceEE(%"class.gl::GLSurface"* nonnull %20) #10
  br label %45

24:                                               ; preds = %12, %12
  %25 = call i8* @_Znwm(i64 312) #8
  %26 = bitcast i8* %25 to %"class.gl::NativeViewGLSurfaceEGLX11GLES2"*
  call void @_ZN2gl30NativeViewGLSurfaceEGLX11GLES2C1EN3x116WindowE(%"class.gl::NativeViewGLSurfaceEGLX11GLES2"* nonnull %26, i32 %0) #10
  %27 = bitcast i8* %25 to %"class.gl::GLSurface"*
  %28 = getelementptr inbounds i8, i8* %25, i64 8
  %29 = bitcast i8* %28 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %29) #10
  %30 = call %"class.gl::GLSurface"* @_ZN2gl19InitializeGLSurfaceE13scoped_refptrINS_9GLSurfaceEE(%"class.gl::GLSurface"* nonnull %27) #10
  br label %45

31:                                               ; preds = %12
  %32 = call i8* @_Znwm(i64 312) #8
  %33 = bitcast i8* %32 to %"class.gl::NativeViewGLSurfaceEGLX11"*
  call void @_ZN2gl25NativeViewGLSurfaceEGLX11C1EN3x116WindowE(%"class.gl::NativeViewGLSurfaceEGLX11"* nonnull %33, i32 %0) #10
  %34 = bitcast i8* %32 to %"class.gl::GLSurface"*
  %35 = getelementptr inbounds i8, i8* %32, i64 8
  %36 = bitcast i8* %35 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %36) #10
  %37 = call %"class.gl::GLSurface"* @_ZN2gl19InitializeGLSurfaceE13scoped_refptrINS_9GLSurfaceEE(%"class.gl::GLSurface"* nonnull %34) #10
  br label %45

38:                                               ; preds = %12, %12
  %39 = call i8* @_Znwm(i64 40) #8
  %40 = bitcast i8* %39 to %"class.gl::GLSurface"*
  call void @_ZN2gl9GLSurfaceC2Ev(%"class.gl::GLSurface"* nonnull %40) #10
  %41 = bitcast i8* %39 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl13GLSurfaceStubE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds i8, i8* %39, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 10, i1 false) #10
  %43 = getelementptr inbounds i8, i8* %39, i64 8
  %44 = bitcast i8* %43 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %44) #10
  br label %45

45:                                               ; preds = %12, %38, %31, %24, %17
  %46 = phi %"class.gl::GLSurface"* [ %40, %38 ], [ %37, %31 ], [ %30, %24 ], [ %23, %17 ], [ null, %12 ]
  %47 = icmp eq i8* %13, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %45
  %49 = load i8, i8* %13, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %48
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %13, i8* %14, i64 %15) #10
  br label %52

52:                                               ; preds = %45, %48, %51
  ret %"class.gl::GLSurface"* %46
}

declare %"class.gl::GLSurface"* @_ZN2gl19InitializeGLSurfaceE13scoped_refptrINS_9GLSurfaceEE(%"class.gl::GLSurface"*) local_unnamed_addr #2

declare void @_ZN2gl15GLSurfaceGLXX11C1Ej(%"class.gl::GLSurfaceGLXX11"*, i32) unnamed_addr #2

declare void @_ZN2gl30NativeViewGLSurfaceEGLX11GLES2C1EN3x116WindowE(%"class.gl::NativeViewGLSurfaceEGLX11GLES2"*, i32) unnamed_addr #2

declare void @_ZN2gl25NativeViewGLSurfaceEGLX11C1EN3x116WindowE(%"class.gl::NativeViewGLSurfaceEGLX11"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::GLSurface"* @_ZN2gl4init37CreateOffscreenGLSurfaceWithFormatX11ERKN3gfx4SizeENS_15GLSurfaceFormatE(%"class.gfx::Size"* dereferenceable(8), %"class.gl::GLSurfaceFormat"*) local_unnamed_addr #0 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.gl::GLSurfaceFormat", align 4
  %5 = alloca %"class.gl::GLSurfaceFormat", align 4
  %6 = alloca %"class.gl::GLSurfaceFormat", align 4
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %2
  %11 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %12 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %14 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %14, i64* %13, align 8
  %15 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %11, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  br label %16

16:                                               ; preds = %2, %10
  %17 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %10 ]
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0), %10 ]
  %19 = phi i64 [ -6148914691236517206, %2 ], [ %15, %10 ]
  %20 = call i32 @_ZN2gl19GetGLImplementationEv() #10
  switch i32 %20, label %59 [
    i32 1, label %21
    i32 3, label %28
    i32 5, label %28
    i32 9, label %28
    i32 6, label %52
    i32 7, label %52
  ]

21:                                               ; preds = %16
  %22 = call i8* @_Znwm(i64 48) #8
  %23 = bitcast i8* %22 to %"class.gl::UnmappedNativeViewGLSurfaceGLX"*
  call void @_ZN2gl30UnmappedNativeViewGLSurfaceGLXC1ERKN3gfx4SizeE(%"class.gl::UnmappedNativeViewGLSurfaceGLX"* nonnull %23, %"class.gfx::Size"* dereferenceable(8) %0) #10
  %24 = bitcast i8* %22 to %"class.gl::GLSurface"*
  %25 = getelementptr inbounds i8, i8* %22, i64 8
  %26 = bitcast i8* %25 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %26) #10
  call void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"* nonnull %4, %"class.gl::GLSurfaceFormat"* dereferenceable(32) %1) #10
  %27 = call %"class.gl::GLSurface"* @_ZN2gl29InitializeGLSurfaceWithFormatE13scoped_refptrINS_9GLSurfaceEENS_15GLSurfaceFormatE(%"class.gl::GLSurface"* nonnull %24, %"class.gl::GLSurfaceFormat"* nonnull %4) #10
  call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* nonnull %4) #10
  br label %59

28:                                               ; preds = %16, %16, %16
  %29 = call zeroext i1 @_ZN2gl12GLSurfaceEGL32IsEGLSurfacelessContextSupportedEv() #10
  br i1 %29, label %30, label %45

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %45

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = call i8* @_Znwm(i64 72) #8
  %40 = bitcast i8* %39 to %"class.gl::SurfacelessEGL"*
  call void @_ZN2gl14SurfacelessEGLC1ERKN3gfx4SizeE(%"class.gl::SurfacelessEGL"* nonnull %40, %"class.gfx::Size"* dereferenceable(8) %0) #10
  %41 = bitcast i8* %39 to %"class.gl::GLSurface"*
  %42 = getelementptr inbounds i8, i8* %39, i64 8
  %43 = bitcast i8* %42 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %43) #10
  call void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"* nonnull %5, %"class.gl::GLSurfaceFormat"* dereferenceable(32) %1) #10
  %44 = call %"class.gl::GLSurface"* @_ZN2gl29InitializeGLSurfaceWithFormatE13scoped_refptrINS_9GLSurfaceEENS_15GLSurfaceFormatE(%"class.gl::GLSurface"* nonnull %41, %"class.gl::GLSurfaceFormat"* nonnull %5) #10
  call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* nonnull %5) #10
  br label %59

45:                                               ; preds = %34, %30, %28
  %46 = call i8* @_Znwm(i64 80) #8
  %47 = bitcast i8* %46 to %"class.gl::PbufferGLSurfaceEGL"*
  call void @_ZN2gl19PbufferGLSurfaceEGLC1ERKN3gfx4SizeE(%"class.gl::PbufferGLSurfaceEGL"* nonnull %47, %"class.gfx::Size"* dereferenceable(8) %0) #10
  %48 = bitcast i8* %46 to %"class.gl::GLSurface"*
  %49 = getelementptr inbounds i8, i8* %46, i64 8
  %50 = bitcast i8* %49 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %50) #10
  call void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"* nonnull %6, %"class.gl::GLSurfaceFormat"* dereferenceable(32) %1) #10
  %51 = call %"class.gl::GLSurface"* @_ZN2gl29InitializeGLSurfaceWithFormatE13scoped_refptrINS_9GLSurfaceEENS_15GLSurfaceFormatE(%"class.gl::GLSurface"* nonnull %48, %"class.gl::GLSurfaceFormat"* nonnull %6) #10
  call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* nonnull %6) #10
  br label %59

52:                                               ; preds = %16, %16
  %53 = call i8* @_Znwm(i64 40) #8
  %54 = bitcast i8* %53 to %"class.gl::GLSurface"*
  call void @_ZN2gl9GLSurfaceC2Ev(%"class.gl::GLSurface"* nonnull %54) #10
  %55 = bitcast i8* %53 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl13GLSurfaceStubE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds i8, i8* %53, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 4 %56, i8 0, i64 10, i1 false) #10
  %57 = getelementptr inbounds i8, i8* %53, i64 8
  %58 = bitcast i8* %57 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %58) #10
  br label %59

59:                                               ; preds = %16, %52, %45, %38, %21
  %60 = phi %"class.gl::GLSurface"* [ %54, %52 ], [ %44, %38 ], [ %51, %45 ], [ %27, %21 ], [ null, %16 ]
  %61 = icmp eq i8* %17, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = load i8, i8* %17, align 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %62
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %18, i64 %19) #10
  br label %66

66:                                               ; preds = %59, %62, %65
  ret %"class.gl::GLSurface"* %60
}

declare %"class.gl::GLSurface"* @_ZN2gl29InitializeGLSurfaceWithFormatE13scoped_refptrINS_9GLSurfaceEENS_15GLSurfaceFormatE(%"class.gl::GLSurface"*, %"class.gl::GLSurfaceFormat"*) local_unnamed_addr #2

declare void @_ZN2gl30UnmappedNativeViewGLSurfaceGLXC1ERKN3gfx4SizeE(%"class.gl::UnmappedNativeViewGLSurfaceGLX"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"*, %"class.gl::GLSurfaceFormat"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"*) unnamed_addr #4

declare zeroext i1 @_ZN2gl12GLSurfaceEGL32IsEGLSurfacelessContextSupportedEv() local_unnamed_addr #2

declare void @_ZN2gl14SurfacelessEGLC1ERKN3gfx4SizeE(%"class.gl::SurfacelessEGL"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN2gl19PbufferGLSurfaceEGLC1ERKN3gfx4SizeE(%"class.gl::PbufferGLSurfaceEGL"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl4init32SetDisabledExtensionsPlatformX11ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = tail call i32 @_ZN2gl19GetGLImplementationEv() #10
  switch i32 %2, label %5 [
    i32 1, label %3
    i32 5, label %4
    i32 9, label %4
  ]

3:                                                ; preds = %1
  tail call void @_ZN2gl24SetDisabledExtensionsGLXERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %0) #10
  br label %5

4:                                                ; preds = %1, %1
  tail call void @_ZN2gl24SetDisabledExtensionsEGLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %0) #10
  br label %5

5:                                                ; preds = %1, %4, %3
  ret void
}

declare void @_ZN2gl24SetDisabledExtensionsGLXERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN2gl24SetDisabledExtensionsEGLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl4init44InitializeExtensionSettingsOneOffPlatformX11Ev() local_unnamed_addr #0 {
  %1 = tail call i32 @_ZN2gl19GetGLImplementationEv() #10
  switch i32 %1, label %6 [
    i32 1, label %2
    i32 5, label %4
    i32 9, label %4
    i32 3, label %7
    i32 6, label %7
    i32 7, label %7
  ]

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @_ZN2gl36InitializeExtensionSettingsOneOffGLXEv() #10
  br label %7

4:                                                ; preds = %0, %0
  %5 = tail call zeroext i1 @_ZN2gl36InitializeExtensionSettingsOneOffEGLEv() #10
  br label %7

6:                                                ; preds = %0
  br label %7

7:                                                ; preds = %0, %0, %0, %6, %4, %2
  %8 = phi i1 [ false, %6 ], [ %5, %4 ], [ %3, %2 ], [ true, %0 ], [ true, %0 ], [ true, %0 ]
  ret i1 %8
}

declare zeroext i1 @_ZN2gl36InitializeExtensionSettingsOneOffGLXEv() local_unnamed_addr #2

declare zeroext i1 @_ZN2gl36InitializeExtensionSettingsOneOffEGLEv() local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN2gl9GLSurfaceC2Ev(%"class.gl::GLSurface"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
