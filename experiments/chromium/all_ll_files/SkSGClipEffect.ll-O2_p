; ModuleID = '../../third_party/skia/modules/sksg/src/SkSGClipEffect.cpp'
source_filename = "../../third_party/skia/modules/sksg/src/SkSGClipEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sksg::ClipEffect" = type <{ %"class.sksg::EffectNode", %class.sk_sp.1, i8, i8, [6 x i8] }>
%"class.sksg::EffectNode" = type { %"class.sksg::RenderNode.base", %class.sk_sp }
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.sk_sp = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%class.sk_sp.1 = type { %"class.sksg::GeometryNode"* }
%"class.sksg::GeometryNode" = type { %"class.sksg::Node.base", [6 x i8] }
%class.sk_sp.2 = type { %"class.sksg::Node"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.3, [384 x i64], %class.sk_sp.4, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.6" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.3 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.4 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"struct.sksg::RenderNode::RenderContext" = type { %class.sk_sp.12, %class.sk_sp.13, %class.sk_sp.13, %class.SkMatrix, %class.SkMatrix, float, i32 }
%class.sk_sp.12 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.13 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkPoint = type { float, float }
%"class.sksg::InvalidationController" = type opaque
%class.SkPath = type <{ %class.sk_sp.14, i32, %"struct.std::__1::atomic.17", %"struct.std::__1::atomic.17", i8, i8 }>
%class.sk_sp.14 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.15, %class.SkTDArray.16, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.15 = type { i8*, i32, i32 }
%class.SkTDArray.16 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.22 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.17" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.22 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.23", [3 x i8] }
%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i8 }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i8 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

@_ZTVN4sksg10ClipEffectE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::ClipEffect"*)* @_ZN4sksg10ClipEffectD2Ev to i8*), i8* bitcast (void (%"class.sksg::ClipEffect"*)* @_ZN4sksg10ClipEffectD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::ClipEffect"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg10ClipEffect12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::ClipEffect"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)* @_ZNK4sksg10ClipEffect8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE to i8*), i8* bitcast (%"class.sksg::RenderNode"* (%"class.sksg::ClipEffect"*, %struct.SkPoint*)* @_ZNK4sksg10ClipEffect8onNodeAtERK7SkPoint to i8*)] }, align 8

@_ZN4sksg10ClipEffectC1E5sk_spINS_10RenderNodeEES1_INS_12GeometryNodeEEb = hidden unnamed_addr alias void (%"class.sksg::ClipEffect"*, %class.sk_sp*, %class.sk_sp.1*, i1), void (%"class.sksg::ClipEffect"*, %class.sk_sp*, %class.sk_sp.1*, i1)* @_ZN4sksg10ClipEffectC2E5sk_spINS_10RenderNodeEES1_INS_12GeometryNodeEEb
@_ZN4sksg10ClipEffectD1Ev = hidden unnamed_addr alias void (%"class.sksg::ClipEffect"*), void (%"class.sksg::ClipEffect"*)* @_ZN4sksg10ClipEffectD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg10ClipEffectC2E5sk_spINS_10RenderNodeEES1_INS_12GeometryNodeEEb(%"class.sksg::ClipEffect"*, %class.sk_sp* nocapture, %class.sk_sp.1* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %class.sk_sp.2, align 8
  %7 = zext i1 %3 to i8
  %8 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %10 = bitcast %class.sk_sp* %1 to i64*
  %11 = load i64, i64* %10, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %9, align 8
  %12 = bitcast %class.sk_sp* %5 to i64*
  store i64 %11, i64* %12, align 8
  call void @_ZN4sksg10EffectNodeC2E5sk_spINS_10RenderNodeEEj(%"class.sksg::EffectNode"* %8, %class.sk_sp* nonnull %5, i32 0) #5
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %14 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %13, align 8
  %15 = icmp eq %"class.sksg::RenderNode"* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %"class.sksg::RenderNode"* %14 to %class.SkRefCntBase*
  %22 = bitcast %"class.sksg::RenderNode"* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  call void %25(%class.SkRefCntBase* nonnull %21) #5
  br label %26

26:                                               ; preds = %4, %16, %20
  %27 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg10ClipEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 1
  %29 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %2, i64 0, i32 0
  %30 = bitcast %class.sk_sp.1* %2 to i64*
  %31 = load i64, i64* %30, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %29, align 8
  %32 = bitcast %class.sk_sp.1* %28 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 2
  store i8 %7, i8* %33, align 8
  %34 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 3
  store i8 0, i8* %34, align 1
  %35 = bitcast %"class.sksg::ClipEffect"* %0 to %"class.sksg::Node"*
  %36 = bitcast %class.sk_sp.2* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #5
  %37 = inttoptr i64 %31 to %"class.sksg::GeometryNode"*
  %38 = icmp eq i64 %31, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %26
  %40 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic
  br label %42

42:                                               ; preds = %26, %39
  %43 = bitcast %class.sk_sp.2* %6 to %"class.sksg::GeometryNode"**
  store %"class.sksg::GeometryNode"* %37, %"class.sksg::GeometryNode"** %43, align 8
  call void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"* %35, %class.sk_sp.2* nonnull dereferenceable(8) %6) #5
  %44 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %6, i64 0, i32 0
  %45 = load %"class.sksg::Node"*, %"class.sksg::Node"** %44, align 8
  %46 = icmp eq %"class.sksg::Node"* %45, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %45, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 -1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = bitcast %"class.sksg::Node"* %45 to %class.SkRefCntBase*
  %53 = bitcast %"class.sksg::Node"* %45 to void (%class.SkRefCntBase*)***
  %54 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, i64 2
  %56 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, align 8
  call void %56(%class.SkRefCntBase* nonnull %52) #5
  br label %57

57:                                               ; preds = %42, %47, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #5
  ret void
}

declare void @_ZN4sksg10EffectNodeC2E5sk_spINS_10RenderNodeEEj(%"class.sksg::EffectNode"*, %class.sk_sp*, i32) unnamed_addr #1

declare void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.2* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg10ClipEffectD2Ev(%"class.sksg::ClipEffect"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.2, align 8
  %3 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg10ClipEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast %"class.sksg::ClipEffect"* %0 to %"class.sksg::Node"*
  %5 = bitcast %class.sk_sp.2* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %6, align 8
  %8 = icmp eq %"class.sksg::GeometryNode"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %1, %9
  %13 = bitcast %class.sk_sp.2* %2 to %"class.sksg::GeometryNode"**
  store %"class.sksg::GeometryNode"* %7, %"class.sksg::GeometryNode"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %4, %class.sk_sp.2* nonnull dereferenceable(8) %2) #5
  %14 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %2, i64 0, i32 0
  %15 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %16 = icmp eq %"class.sksg::Node"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %"class.sksg::Node"* %15 to %class.SkRefCntBase*
  %23 = bitcast %"class.sksg::Node"* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  call void %26(%class.SkRefCntBase* nonnull %22) #5
  br label %27

27:                                               ; preds = %12, %17, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %28 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %6, align 8
  %29 = icmp eq %"class.sksg::GeometryNode"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %"class.sksg::GeometryNode"* %28 to %class.SkRefCntBase*
  %36 = bitcast %"class.sksg::GeometryNode"* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  call void %39(%class.SkRefCntBase* nonnull %35) #5
  br label %40

40:                                               ; preds = %27, %30, %34
  %41 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 0
  call void @_ZN4sksg10EffectNodeD2Ev(%"class.sksg::EffectNode"* %41) #5
  ret void
}

declare void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.2* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4sksg10EffectNodeD2Ev(%"class.sksg::EffectNode"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg10ClipEffectD0Ev(%"class.sksg::ClipEffect"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.2, align 8
  %3 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg10ClipEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast %"class.sksg::ClipEffect"* %0 to %"class.sksg::Node"*
  %5 = bitcast %class.sk_sp.2* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %6, align 8
  %8 = icmp eq %"class.sksg::GeometryNode"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %9, %1
  %13 = bitcast %class.sk_sp.2* %2 to %"class.sksg::GeometryNode"**
  store %"class.sksg::GeometryNode"* %7, %"class.sksg::GeometryNode"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %4, %class.sk_sp.2* nonnull dereferenceable(8) %2) #5
  %14 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %2, i64 0, i32 0
  %15 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %16 = icmp eq %"class.sksg::Node"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %"class.sksg::Node"* %15 to %class.SkRefCntBase*
  %23 = bitcast %"class.sksg::Node"* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  call void %26(%class.SkRefCntBase* nonnull %22) #5
  br label %27

27:                                               ; preds = %21, %17, %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %28 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %6, align 8
  %29 = icmp eq %"class.sksg::GeometryNode"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %"class.sksg::GeometryNode"* %28 to %class.SkRefCntBase*
  %36 = bitcast %"class.sksg::GeometryNode"* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  call void %39(%class.SkRefCntBase* nonnull %35) #5
  br label %40

40:                                               ; preds = %27, %30, %34
  %41 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 0
  call void @_ZN4sksg10EffectNodeD2Ev(%"class.sksg::EffectNode"* %41) #5
  %42 = bitcast %"class.sksg::ClipEffect"* %0 to i8*
  call void @_ZdlPv(i8* %42) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg10ClipEffect8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE(%"class.sksg::ClipEffect"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq %class.SkCanvas* %1, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = icmp eq i8 %5, 0
  %9 = tail call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* nonnull %1) #5
  br i1 %8, label %10, label %12

10:                                               ; preds = %7
  %11 = tail call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* nonnull %1) #5
  br label %12

12:                                               ; preds = %10, %7
  %13 = load i8, i8* %4, align 1
  br label %14

14:                                               ; preds = %12, %3
  %15 = phi i8 [ %13, %12 ], [ %5, %3 ]
  %16 = phi i32 [ %9, %12 ], [ 0, %3 ]
  %17 = icmp eq i8 %15, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 1, i32 0
  %20 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %19, align 8
  %21 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 2
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp ne i8 %22, 0
  tail call void @_ZNK4sksg12GeometryNode4clipEP8SkCanvasb(%"class.sksg::GeometryNode"* %20, %class.SkCanvas* %1, i1 zeroext %23) #5
  br label %24

24:                                               ; preds = %14, %18
  %25 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 0
  tail call void @_ZNK4sksg10EffectNode8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE(%"class.sksg::EffectNode"* %25, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %2) #5
  br i1 %6, label %27, label %26

26:                                               ; preds = %24
  tail call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* nonnull %1, i32 %16) #5
  br label %27

27:                                               ; preds = %24, %26
  ret void
}

declare void @_ZNK4sksg12GeometryNode4clipEP8SkCanvasb(%"class.sksg::GeometryNode"*, %class.SkCanvas*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK4sksg10EffectNode8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE(%"class.sksg::EffectNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sksg::RenderNode"* @_ZNK4sksg10ClipEffect8onNodeAtERK7SkPoint(%"class.sksg::ClipEffect"*, %struct.SkPoint* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK4sksg12GeometryNode8containsERK7SkPoint(%"class.sksg::GeometryNode"* %4, %struct.SkPoint* dereferenceable(8) %1) #5
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 0
  %8 = tail call %"class.sksg::RenderNode"* @_ZNK4sksg10EffectNode8onNodeAtERK7SkPoint(%"class.sksg::EffectNode"* %7, %struct.SkPoint* dereferenceable(8) %1) #5
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.sksg::RenderNode"* [ %8, %6 ], [ null, %2 ]
  ret %"class.sksg::RenderNode"* %10
}

declare zeroext i1 @_ZNK4sksg12GeometryNode8containsERK7SkPoint(%"class.sksg::GeometryNode"*, %struct.SkPoint* dereferenceable(8)) local_unnamed_addr #1

declare %"class.sksg::RenderNode"* @_ZNK4sksg10EffectNode8onNodeAtERK7SkPoint(%"class.sksg::EffectNode"*, %struct.SkPoint* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN4sksg10ClipEffect12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::ClipEffect"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkRect, align 4
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = alloca %class.SkPath, align 8
  %8 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #5
  %9 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 1, i32 0
  %10 = bitcast %"class.sksg::GeometryNode"** %9 to %"class.sksg::Node"**
  %11 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -1, i64 16, i1 false)
  %12 = load %"class.sksg::Node"*, %"class.sksg::Node"** %10, align 8
  %13 = tail call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %12, %"class.sksg::InvalidationController"* %1, %class.SkMatrix* dereferenceable(40) %2) #5
  %14 = bitcast %struct.SkRect* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* align 4 %14, i64 16, i1 false)
  %15 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #5
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1, i64 0
  %17 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 0
  %18 = tail call { <2 x float>, <2 x float> } @_ZN4sksg10EffectNode12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::EffectNode"* %17, %"class.sksg::InvalidationController"* %1, %class.SkMatrix* dereferenceable(40) %2) #5
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %20 = extractvalue { <2 x float>, <2 x float> } %18, 0
  store <2 x float> %20, <2 x float>* %19, align 8
  %21 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %22 = extractvalue { <2 x float>, <2 x float> } %18, 1
  store <2 x float> %22, <2 x float>* %21, align 8
  %23 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #5
  %24 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %9, align 8
  call void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* nonnull sret %7, %"class.sksg::GeometryNode"* %24) #5
  %25 = call zeroext i1 @_ZNK6SkPath26conservativelyContainsRectERK6SkRect(%class.SkPath* nonnull %7, %struct.SkRect* nonnull dereferenceable(16) %6) #5
  %26 = getelementptr inbounds %"class.sksg::ClipEffect", %"class.sksg::ClipEffect"* %0, i64 0, i32 3
  %27 = zext i1 %25 to i8
  store i8 %27, i8* %26, align 1
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #5
  %28 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %6, %struct.SkRect* nonnull dereferenceable(16) %4) #5
  %29 = load <2 x float>, <2 x float>* %19, align 8
  %30 = bitcast float* %16 to <2 x float>*
  %31 = load <2 x float>, <2 x float>* %30, align 8
  %32 = select i1 %28, <2 x float> %29, <2 x float> zeroinitializer
  %33 = select i1 %28, <2 x float> %31, <2 x float> zeroinitializer
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #5
  %34 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %32, 0
  %35 = insertvalue { <2 x float>, <2 x float> } %34, <2 x float> %33, 1
  ret { <2 x float>, <2 x float> } %35
}

declare dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare { <2 x float>, <2 x float> } @_ZN4sksg10EffectNode12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::EffectNode"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #1

declare void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* sret, %"class.sksg::GeometryNode"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK6SkPath26conservativelyContainsRectERK6SkRect(%class.SkPath*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #5
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas*) local_unnamed_addr #1

declare i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas*) local_unnamed_addr #1

declare void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
