; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/script_source_code.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/script_source_code.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ScriptSourceCode" = type <{ %"class.blink::ParkableString", %"class.blink::Member", %"class.blink::Member.19", i32, [4 x i8], %"class.blink::KURL", %"class.WTF::String", %"class.WTF::TextPosition", i32, [4 x i8] }>
%"class.blink::ParkableString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.6", %"class.WTF::Vector.12", i8, i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SingleCachedMetadataHandler"* }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::ScriptStreamer"* }
%"class.blink::ScriptStreamer" = type { %"class.blink::ThreadState::PrefinalizerRegistration", i32, %"class.blink::Member.23", %"class.blink::Member.25", %"class.mojo::ScopedHandleBase", %"class.std::__1::unique_ptr.27", %"class.blink::SourceStream"*, %"class.std::__1::unique_ptr.50", i32, %"class.WTF::String", i64, i32, i32, %class.scoped_refptr.62 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::ScriptResource"* }
%"class.blink::ScriptResource" = type <{ %"class.blink::TextResource", %"class.blink::ParkableString", %"class.blink::Member.19", i32, i32, %"class.blink::Member.436", i32, [4 x i8] }>
%"class.blink::TextResource" = type { %"class.blink::Resource", %"class.std::__1::unique_ptr.418" }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.95", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.394", %"class.blink::ResourceResponse", %class.scoped_refptr.396, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.71", i8, %"class.absl::optional.80", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.71" = type { %"class.absl::optional_internal::optional_data.72" }
%"class.absl::optional_internal::optional_data.72" = type { %"class.absl::optional_internal::optional_data_base.73" }
%"class.absl::optional_internal::optional_data_base.73" = type { %"class.absl::optional_internal::optional_data_dtor_base.74" }
%"class.absl::optional_internal::optional_data_dtor_base.74" = type { i8, [7 x i8], %union.anon.75 }
%union.anon.75 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.78 }
%union.anon.78 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.80" = type { %"class.absl::optional_internal::optional_data.81" }
%"class.absl::optional_internal::optional_data.81" = type { %"class.absl::optional_internal::optional_data_base.82" }
%"class.absl::optional_internal::optional_data_base.82" = type { %"class.absl::optional_internal::optional_data_dtor_base.83" }
%"class.absl::optional_internal::optional_data_dtor_base.83" = type { i8, %union.anon.84 }
%union.anon.84 = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.85", %"class.WTF::Vector.90" }
%"class.WTF::Vector.85" = type { %"class.WTF::VectorBuffer.86" }
%"class.WTF::VectorBuffer.86" = type { %"class.WTF::VectorBufferBase.87" }
%"class.WTF::VectorBufferBase.87" = type { i32*, i32, i32 }
%"class.WTF::Vector.90" = type { %"class.WTF::VectorBuffer.91" }
%"class.WTF::VectorBuffer.91" = type { %"class.WTF::VectorBufferBase.92" }
%"class.WTF::VectorBufferBase.92" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.95" = type { %"class.WTF::VectorBuffer.96" }
%"class.WTF::VectorBuffer.96" = type { %"class.WTF::VectorBufferBase.97" }
%"class.WTF::VectorBufferBase.97" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.190" }
%"class.WTF::HashMap.190" = type { %"class.WTF::HashTable.191" }
%"class.WTF::HashTable.191" = type <{ %"struct.WTF::KeyValuePair.193"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.193" = type <{ %"class.blink::WeakMember.460", i32, [4 x i8] }>
%"class.blink::WeakMember.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.462", [7 x i8], %"class.blink::Member.463", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.462" = type { i8 }
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::Resource"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.196" }
%"class.WTF::HashTable.196" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.198", i8, i8, %class.scoped_refptr.202, %class.scoped_refptr.389, %class.scoped_refptr.391 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.198" = type { %"class.WTF::HashTable.199" }
%"class.WTF::HashTable.199" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type opaque
%class.scoped_refptr.202 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.203", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.203" = type { %"class.base::RefCounted.204" }
%"class.base::RefCounted.204" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.205", i32, [4 x i8], %"class.std::__1::unique_ptr.343", %"class.std::__1::unique_ptr.343", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.354", %"class.std::__1::unique_ptr.360", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.372", %"class.std::__1::unique_ptr.378", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.385", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.291", %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.323", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.241" = type { %"struct.std::__1::__atomic_base.242" }
%"struct.std::__1::__atomic_base.242" = type { %"struct.std::__1::__atomic_base.243" }
%"struct.std::__1::__atomic_base.243" = type { %"struct.std::__1::__cxx_atomic_impl.244" }
%"struct.std::__1::__cxx_atomic_impl.244" = type { %"struct.std::__1::__cxx_atomic_base_impl.245" }
%"struct.std::__1::__cxx_atomic_base_impl.245" = type { i64 }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::Worklist.252"* }
%"class.blink::Worklist.252" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::Worklist.259"* }
%"class.blink::Worklist.259" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::Worklist.266"* }
%"class.blink::Worklist.266" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::Worklist.273"* }
%"class.blink::Worklist.273" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.blink::Worklist.280"* }
%"class.blink::Worklist.280" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::Worklist.287"* }
%"class.blink::Worklist.287" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::Worklist.294"* }
%"class.blink::Worklist.294" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.301", %"class.std::__1::__compressed_pair.310", %"class.std::__1::__compressed_pair.315", %"class.std::__1::__compressed_pair.317", [4 x i8] }>
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303", %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { i64 }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { float }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.326", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.335" }
%"class.WTF::Vector.335" = type { %"class.WTF::VectorBuffer.336" }
%"class.WTF::VectorBuffer.336" = type { %"class.WTF::VectorBufferBase.337" }
%"class.WTF::VectorBufferBase.337" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.351" }
%"class.WTF::VectorBuffer.351" = type { %"class.WTF::VectorBufferBase.352" }
%"class.WTF::VectorBufferBase.352" = type { %"struct.std::__1::pair.353"*, i32, i32 }
%"struct.std::__1::pair.353" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.366" }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.252"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.259"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.266"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.273"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.280"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.438", i64 }
%"class.std::__1::vector.438" = type { %"class.std::__1::__vector_base.439" }
%"class.std::__1::__vector_base.439" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.440" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.384 }
%class.scoped_refptr.384 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.385" = type { %"struct.std::__1::__atomic_base.386" }
%"struct.std::__1::__atomic_base.386" = type { %"struct.std::__1::__cxx_atomic_impl.387" }
%"struct.std::__1::__cxx_atomic_impl.387" = type { %"struct.std::__1::__cxx_atomic_base_impl.388" }
%"struct.std::__1::__cxx_atomic_base_impl.388" = type { i8 }
%class.scoped_refptr.389 = type { %"class.base::RefCountedData.390"* }
%"class.base::RefCountedData.390" = type opaque
%class.scoped_refptr.391 = type { %"class.base::RefCountedData.392"* }
%"class.base::RefCountedData.392" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.153" }
%"class.base::time_internal::TimeBase.153" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.393 }
%class.scoped_refptr.393 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.103, %class.scoped_refptr.103, %class.scoped_refptr.103, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.106, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.116", %"class.absl::optional.121", %"class.absl::optional.131", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.141", %"class.absl::optional.131", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.131", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.141", %"class.absl::optional.146", i8, %class.scoped_refptr.152 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.98" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.98" = type { %"class.absl::optional_internal::optional_data.99" }
%"class.absl::optional_internal::optional_data.99" = type { %"class.absl::optional_internal::optional_data_base.100" }
%"class.absl::optional_internal::optional_data_base.100" = type { %"class.absl::optional_internal::optional_data_dtor_base.101" }
%"class.absl::optional_internal::optional_data_dtor_base.101" = type { i8, %union.anon.102 }
%union.anon.102 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.103 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.445", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.98", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.103 }
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.106 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.107", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.114, i8, %"class.url::Origin" }
%"class.base::RefCounted.107" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.0 }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.108"*, %"class.std::__1::unique_ptr.108"*, %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::unique_ptr.108"* }
%class.scoped_refptr.114 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.115", [4 x i8] }>
%"class.base::RefCountedThreadSafe.115" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.31" }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl.34" }
%"struct.std::__1::__cxx_atomic_impl.34" = type { %"struct.std::__1::__cxx_atomic_base_impl.35" }
%"struct.std::__1::__cxx_atomic_base_impl.35" = type { i32 }
%"class.absl::optional.116" = type { %"class.absl::optional_internal::optional_data.117" }
%"class.absl::optional_internal::optional_data.117" = type { %"class.absl::optional_internal::optional_data_base.118" }
%"class.absl::optional_internal::optional_data_base.118" = type { %"class.absl::optional_internal::optional_data_dtor_base.119" }
%"class.absl::optional_internal::optional_data_dtor_base.119" = type { i8, %union.anon.120 }
%union.anon.120 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.121" = type { %"class.absl::optional_internal::optional_data.122" }
%"class.absl::optional_internal::optional_data.122" = type { %"class.absl::optional_internal::optional_data_base.123" }
%"class.absl::optional_internal::optional_data_base.123" = type { %"class.absl::optional_internal::optional_data_dtor_base.124" }
%"class.absl::optional_internal::optional_data_dtor_base.124" = type { i8, %union.anon.125 }
%union.anon.125 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.126", %"class.WTF::Vector.90", %"class.WTF::String" }
%"class.WTF::Vector.126" = type { %"class.WTF::VectorBuffer.127" }
%"class.WTF::VectorBuffer.127" = type { %"class.WTF::VectorBufferBase.128" }
%"class.WTF::VectorBufferBase.128" = type { %class.scoped_refptr.103*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.136", %"class.absl::optional.136" }
%"class.absl::optional.136" = type { %"class.absl::optional_internal::optional_data.137" }
%"class.absl::optional_internal::optional_data.137" = type { %"class.absl::optional_internal::optional_data_base.138" }
%"class.absl::optional_internal::optional_data_base.138" = type { %"class.absl::optional_internal::optional_data_dtor_base.139" }
%"class.absl::optional_internal::optional_data_dtor_base.139" = type { i8, %union.anon.140 }
%union.anon.140 = type { %"class.base::TimeDelta" }
%"class.absl::optional.131" = type { %"class.absl::optional_internal::optional_data.132" }
%"class.absl::optional_internal::optional_data.132" = type { %"class.absl::optional_internal::optional_data_base.133" }
%"class.absl::optional_internal::optional_data_base.133" = type { %"class.absl::optional_internal::optional_data_dtor_base.134" }
%"class.absl::optional_internal::optional_data_dtor_base.134" = type { i8, %union.anon.135 }
%union.anon.135 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.141" = type { %"class.absl::optional_internal::optional_data.142" }
%"class.absl::optional_internal::optional_data.142" = type { %"class.absl::optional_internal::optional_data_base.143" }
%"class.absl::optional_internal::optional_data_base.143" = type { %"class.absl::optional_internal::optional_data_dtor_base.144" }
%"class.absl::optional_internal::optional_data_dtor_base.144" = type { i8, %union.anon.145 }
%union.anon.145 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.146" = type { %"class.absl::optional_internal::optional_data.147" }
%"class.absl::optional_internal::optional_data.147" = type { %"class.absl::optional_internal::optional_data_base.148" }
%"class.absl::optional_internal::optional_data_base.148" = type { %"class.absl::optional_internal::optional_data_dtor_base.149" }
%"class.absl::optional_internal::optional_data_dtor_base.149" = type { i8, %union.anon.150 }
%union.anon.150 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.151", i32 }
%"class.mojo::ScopedHandleBase.151" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.152 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.452", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.452" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.453" }
%"class.std::__1::vector.453" = type { %"class.std::__1::__vector_base.454" }
%"class.std::__1::__vector_base.454" = type { i32*, i32*, %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { i32* }
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.154", %class.scoped_refptr.169, %class.scoped_refptr.170, %"struct.blink::CacheControlHeader", %"class.absl::optional.136", %"class.absl::optional.171", %"class.absl::optional.171", %"class.absl::optional.171", i64, %"class.blink::KURL", %"class.WTF::Vector.176", %"class.WTF::String", %"class.WTF::Vector.90", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.141", %"class.WTF::Vector.90", %"class.blink::KURL", %"class.absl::optional.181" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.154" = type { %"class.absl::optional_internal::optional_data.155" }
%"class.absl::optional_internal::optional_data.155" = type { %"class.absl::optional_internal::optional_data_base.156" }
%"class.absl::optional_internal::optional_data_base.156" = type { %"class.absl::optional_internal::optional_data_dtor_base.157" }
%"class.absl::optional_internal::optional_data_dtor_base.157" = type { i8, %union.anon.158 }
%union.anon.158 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.90", %"class.WTF::String", i64, i64, %"class.WTF::Vector.159", %"class.WTF::Vector.164" }
%"class.WTF::Vector.159" = type { %"class.WTF::VectorBuffer.160" }
%"class.WTF::VectorBuffer.160" = type { %"class.WTF::VectorBufferBase.161" }
%"class.WTF::VectorBufferBase.161" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.164" = type { %"class.WTF::VectorBuffer.165" }
%"class.WTF::VectorBuffer.165" = type { %"class.WTF::VectorBufferBase.166" }
%"class.WTF::VectorBufferBase.166" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.169 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.170 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.171" = type { %"class.absl::optional_internal::optional_data.172" }
%"class.absl::optional_internal::optional_data.172" = type { %"class.absl::optional_internal::optional_data_base.173" }
%"class.absl::optional_internal::optional_data_base.173" = type { %"class.absl::optional_internal::optional_data_dtor_base.174" }
%"class.absl::optional_internal::optional_data_dtor_base.174" = type { i8, %union.anon.175 }
%union.anon.175 = type { %"class.base::Time" }
%"class.WTF::Vector.176" = type { %"class.WTF::VectorBuffer.177" }
%"class.WTF::VectorBuffer.177" = type { %"class.WTF::VectorBufferBase.178" }
%"class.WTF::VectorBufferBase.178" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.181" = type { %"class.absl::optional_internal::optional_data.182" }
%"class.absl::optional_internal::optional_data.182" = type { %"class.absl::optional_internal::optional_data_base.183" }
%"class.absl::optional_internal::optional_data_base.183" = type { %"class.absl::optional_internal::optional_data_dtor_base.184" }
%"class.absl::optional_internal::optional_data_dtor_base.184" = type { i8, %union.anon.185 }
%union.anon.185 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.396 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.397", i64, %"class.WTF::Vector.399", %"class.WTF::Vector.404" }
%"class.WTF::RefCounted.397" = type { %"class.base::RefCounted.398" }
%"class.base::RefCounted.398" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.399" = type { %"class.WTF::VectorBuffer.400" }
%"class.WTF::VectorBuffer.400" = type { %"class.WTF::VectorBufferBase.401" }
%"class.WTF::VectorBufferBase.401" = type { i8*, i32, i32 }
%"class.WTF::Vector.404" = type { %"class.WTF::VectorBuffer.405" }
%"class.WTF::VectorBuffer.405" = type { %"class.WTF::VectorBufferBase.406" }
%"class.WTF::VectorBufferBase.406" = type { %"class.std::__1::unique_ptr.407"*, i32, i32 }
%"class.std::__1::unique_ptr.407" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.410", %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.421", i32, %"class.WTF::Vector.399", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.427" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::ScriptCachedMetadataHandler"* }
%"class.blink::ScriptCachedMetadataHandler" = type opaque
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::ResponseBodyLoaderClient"* }
%"class.blink::ResponseBodyLoaderClient" = type opaque
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.30, i8, %"class.mojo::ScopedHandleBase.36", %class.scoped_refptr.37, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.30 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedHandleBase.36" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.37 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.38 }
%class.scoped_refptr.38 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.39", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.39" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.40 }
%class.scoped_refptr.40 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.41", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.41" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.42" }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i8 }
%"class.blink::SourceStream" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.v8::ScriptCompiler::StreamedSource"* }
%"class.v8::ScriptCompiler::StreamedSource" = type { %"class.std::__1::unique_ptr.53" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.v8::internal::ScriptStreamingData"* }
%"struct.v8::internal::ScriptStreamingData" = type opaque
%class.scoped_refptr.62 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.63" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::KURL"* }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::SingleCachedMetadataHandler" = type <{ %"class.blink::CachedMetadataHandler", i8, [7 x i8] }>
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }

$_ZN5blink10TraceTraitINS_27SingleCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14ScriptStreamerEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZN5blink12_GLOBAL__N_134kUnsafeScriptReportPostRedirectURLE = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i32 0, i32 0), i32 0 }, align 8
@.str = private unnamed_addr constant [34 x i8] c"UnsafeScriptReportPostRedirectURL\00", align 1
@_ZN5blink10http_names10kSourceMapE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10http_names11kXSourceMapE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8

@_ZN5blink16ScriptSourceCodeC1ERKNS_14ParkableStringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKN3WTF12TextPositionE = hidden unnamed_addr alias void (%"class.blink::ScriptSourceCode"*, %"class.blink::ParkableString"*, i32, %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::KURL"*, %"class.WTF::TextPosition"*), void (%"class.blink::ScriptSourceCode"*, %"class.blink::ParkableString"*, i32, %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::KURL"*, %"class.WTF::TextPosition"*)* @_ZN5blink16ScriptSourceCodeC2ERKNS_14ParkableStringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKN3WTF12TextPositionE
@_ZN5blink16ScriptSourceCodeC1ERKN3WTF6StringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKNS1_12TextPositionE = hidden unnamed_addr alias void (%"class.blink::ScriptSourceCode"*, %"class.WTF::String"*, i32, %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::KURL"*, %"class.WTF::TextPosition"*), void (%"class.blink::ScriptSourceCode"*, %"class.WTF::String"*, i32, %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::KURL"*, %"class.WTF::TextPosition"*)* @_ZN5blink16ScriptSourceCodeC2ERKN3WTF6StringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKNS1_12TextPositionE
@_ZN5blink16ScriptSourceCodeC1EPNS_14ScriptStreamerEPNS_14ScriptResourceENS1_18NotStreamingReasonE = hidden unnamed_addr alias void (%"class.blink::ScriptSourceCode"*, %"class.blink::ScriptStreamer"*, %"class.blink::ScriptResource"*, i32), void (%"class.blink::ScriptSourceCode"*, %"class.blink::ScriptStreamer"*, %"class.blink::ScriptResource"*, i32)* @_ZN5blink16ScriptSourceCodeC2EPNS_14ScriptStreamerEPNS_14ScriptResourceENS1_18NotStreamingReasonE
@_ZN5blink16ScriptSourceCodeC1ERKN3WTF6StringEPNS_27SingleCachedMetadataHandlerERKNS_4KURLE = hidden unnamed_addr alias void (%"class.blink::ScriptSourceCode"*, %"class.WTF::String"*, %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::KURL"*), void (%"class.blink::ScriptSourceCode"*, %"class.WTF::String"*, %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::KURL"*)* @_ZN5blink16ScriptSourceCodeC2ERKN3WTF6StringEPNS_27SingleCachedMetadataHandlerERKNS_4KURLE
@_ZN5blink16ScriptSourceCodeD1Ev = hidden unnamed_addr alias void (%"class.blink::ScriptSourceCode"*), void (%"class.blink::ScriptSourceCode"*)* @_ZN5blink16ScriptSourceCodeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16ScriptSourceCode18UsePostRedirectURLEv() local_unnamed_addr #0 align 2 {
  %1 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink12_GLOBAL__N_134kUnsafeScriptReportPostRedirectURLE) #6
  ret i1 %1
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ScriptSourceCodeC2ERKNS_14ParkableStringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKN3WTF12TextPositionE(%"class.blink::ScriptSourceCode"*, %"class.blink::ParkableString"* nocapture readonly dereferenceable(8), i32, %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::TextPosition"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %7, align 8, !noalias !2
  %9 = icmp eq %"class.blink::ParkableStringImpl"* %8, null
  %10 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 0, i32 0, i32 0
  br i1 %9, label %11, label %12

11:                                               ; preds = %6
  store %"class.blink::ParkableStringImpl"* null, %"class.blink::ParkableStringImpl"** %10, align 8, !alias.scope !2
  br label %14

12:                                               ; preds = %6
  store %"class.blink::ParkableStringImpl"* %8, %"class.blink::ParkableStringImpl"** %10, align 8, !alias.scope !2
  %13 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %8, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %13) #6, !noalias !2
  br label %14

14:                                               ; preds = %11, %12
  %15 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::SingleCachedMetadataHandler"* %3, %"class.blink::SingleCachedMetadataHandler"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::ScriptStreamer"* null, %"class.blink::ScriptStreamer"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 3
  store i32 11, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 5
  tail call fastcc void @_ZN5blink12_GLOBAL__N_123StripFragmentIdentifierERKNS_4KURLE(%"class.blink::KURL"* sret %18, %"class.blink::KURL"* dereferenceable(112) %4)
  %19 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 7
  %21 = bitcast %"class.WTF::TextPosition"* %5 to i64*
  %22 = bitcast %"class.WTF::TextPosition"* %20 to i64*
  %23 = load i64, i64* %21, align 4
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 8
  store i32 %2, i32* %24, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_123StripFragmentIdentifierERKNS_4KURLE(%"class.blink::KURL"* noalias sret, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = tail call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %1) #6
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #6
  br label %11

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"* %1) #6
  br i1 %7, label %9, label %8

8:                                                ; preds = %6
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* dereferenceable(112) %1) #6
  br label %11

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %3, %"class.blink::KURL"* dereferenceable(112) %1) #6
  call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* nonnull %3) #6
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #6
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %10) #6
  br label %11

11:                                               ; preds = %9, %8, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ScriptSourceCodeC2ERKN3WTF6StringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKNS1_12TextPositionE(%"class.blink::ScriptSourceCode"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32, %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::TextPosition"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::ParkableString", align 8
  %8 = alloca %class.scoped_refptr.0, align 8
  %9 = bitcast %"class.blink::ParkableString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  %10 = bitcast %class.scoped_refptr.0* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #6
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !5

29:                                               ; preds = %20
  tail call void @llvm.trap() #6
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %6, %15, %30
  call void @_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"* nonnull %7, %class.scoped_refptr.0* nonnull dereferenceable(8) %8) #6
  %33 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %7, i64 0, i32 0, i32 0
  %34 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %33, align 8, !noalias !6
  %35 = icmp eq %"class.blink::ParkableStringImpl"* %34, null
  %36 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 0, i32 0, i32 0
  br i1 %35, label %37, label %38

37:                                               ; preds = %32
  store %"class.blink::ParkableStringImpl"* null, %"class.blink::ParkableStringImpl"** %36, align 8, !alias.scope !6
  br label %40

38:                                               ; preds = %32
  store %"class.blink::ParkableStringImpl"* %34, %"class.blink::ParkableStringImpl"** %36, align 8, !alias.scope !6
  %39 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %34, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %39) #6, !noalias !6
  br label %40

40:                                               ; preds = %37, %38
  %41 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::SingleCachedMetadataHandler"* %3, %"class.blink::SingleCachedMetadataHandler"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::ScriptStreamer"* null, %"class.blink::ScriptStreamer"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 3
  store i32 11, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 5
  call fastcc void @_ZN5blink12_GLOBAL__N_123StripFragmentIdentifierERKNS_4KURLE(%"class.blink::KURL"* sret %44, %"class.blink::KURL"* dereferenceable(112) %4) #6
  %45 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 7
  %47 = bitcast %"class.WTF::TextPosition"* %5 to i64*
  %48 = bitcast %"class.WTF::TextPosition"* %46 to i64*
  %49 = load i64, i64* %47, align 4
  store i64 %49, i64* %48, align 8
  %50 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 8
  store i32 %2, i32* %50, align 8
  call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* nonnull %7) #6
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %40
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #6
  br label %66

66:                                               ; preds = %40, %62, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"*, %class.scoped_refptr.0* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ScriptSourceCodeC2EPNS_14ScriptStreamerEPNS_14ScriptResourceENS1_18NotStreamingReasonE(%"class.blink::ScriptSourceCode"*, %"class.blink::ScriptStreamer"*, %"class.blink::ScriptResource"*, i32) unnamed_addr #0 align 2 {
  %5 = tail call dereferenceable(8) %"class.blink::ParkableString"* @_ZN5blink14ScriptResource10SourceTextEv(%"class.blink::ScriptResource"* %2) #6
  %6 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %6, align 8, !noalias !9
  %8 = icmp eq %"class.blink::ParkableStringImpl"* %7, null
  %9 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 0, i32 0, i32 0
  br i1 %8, label %10, label %11

10:                                               ; preds = %4
  store %"class.blink::ParkableStringImpl"* null, %"class.blink::ParkableStringImpl"** %9, align 8, !alias.scope !9
  br label %13

11:                                               ; preds = %4
  store %"class.blink::ParkableStringImpl"* %7, %"class.blink::ParkableStringImpl"** %9, align 8, !alias.scope !9
  %12 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %7, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %12) #6, !noalias !9
  br label %13

13:                                               ; preds = %10, %11
  %14 = tail call %"class.blink::SingleCachedMetadataHandler"* @_ZN5blink14ScriptResource12CacheHandlerEv(%"class.blink::ScriptResource"* %2) #6
  %15 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::SingleCachedMetadataHandler"* %14, %"class.blink::SingleCachedMetadataHandler"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::ScriptStreamer"* %1, %"class.blink::ScriptStreamer"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 3
  store i32 %3, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 5
  %19 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink12_GLOBAL__N_134kUnsafeScriptReportPostRedirectURLE) #6
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::ScriptResource", %"class.blink::ScriptResource"* %2, i64 0, i32 0, i32 0, i32 29
  %22 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %21) #6
  br label %26

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::ScriptResource", %"class.blink::ScriptResource"* %2, i64 0, i32 0, i32 0, i32 26
  %25 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %24) #6
  br label %26

26:                                               ; preds = %23, %20
  %27 = phi %"class.blink::KURL"* [ %22, %20 ], [ %25, %23 ]
  tail call fastcc void @_ZN5blink12_GLOBAL__N_123StripFragmentIdentifierERKNS_4KURLE(%"class.blink::KURL"* sret %18, %"class.blink::KURL"* dereferenceable(112) %27)
  %28 = getelementptr inbounds %"class.blink::ScriptResource", %"class.blink::ScriptResource"* %2, i64 0, i32 0, i32 0, i32 29
  %29 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names10kSourceMapE, align 8
  %30 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"* %28, %"class.WTF::AtomicString"* dereferenceable(8) %29) #6
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %56, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #6
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !5

49:                                               ; preds = %40
  tail call void @llvm.trap() #6
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %94

56:                                               ; preds = %52, %26
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names11kXSourceMapE, align 8
  %58 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"* %28, %"class.WTF::AtomicString"* dereferenceable(8) %57) #6
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #6
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !5

77:                                               ; preds = %68
  tail call void @llvm.trap() #6
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %80

80:                                               ; preds = %78, %63, %56
  br i1 %34, label %94, label %81

81:                                               ; preds = %80
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #6
  br label %94

94:                                               ; preds = %52, %80, %90, %93
  %95 = phi i64 [ %61, %80 ], [ %61, %90 ], [ %61, %93 ], [ %33, %52 ]
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  %97 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.WTF::StringImpl"* %96, %"class.WTF::StringImpl"** %97, align 8
  %98 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 7
  %99 = bitcast %"class.WTF::TextPosition"* %98 to i64*
  store i64 0, i64* %99, align 8
  %100 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 8
  store i32 1, i32* %100, align 8
  ret void
}

declare dereferenceable(8) %"class.blink::ParkableString"* @_ZN5blink14ScriptResource10SourceTextEv(%"class.blink::ScriptResource"*) local_unnamed_addr #1

declare %"class.blink::SingleCachedMetadataHandler"* @_ZN5blink14ScriptResource12CacheHandlerEv(%"class.blink::ScriptResource"*) local_unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ScriptSourceCodeC2ERKN3WTF6StringEPNS_27SingleCachedMetadataHandlerERKNS_4KURLE(%"class.blink::ScriptSourceCode"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::ParkableString", align 8
  %6 = alloca %class.scoped_refptr.0, align 8
  %7 = bitcast %"class.blink::ParkableString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6
  %8 = bitcast %class.scoped_refptr.0* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #6
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !5

27:                                               ; preds = %18
  tail call void @llvm.trap() #6
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %4, %13, %28
  call void @_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"* nonnull %5, %class.scoped_refptr.0* nonnull dereferenceable(8) %6) #6
  %31 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %5, i64 0, i32 0, i32 0
  %32 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %31, align 8, !noalias !12
  %33 = icmp eq %"class.blink::ParkableStringImpl"* %32, null
  %34 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 0, i32 0, i32 0
  br i1 %33, label %35, label %36

35:                                               ; preds = %30
  store %"class.blink::ParkableStringImpl"* null, %"class.blink::ParkableStringImpl"** %34, align 8, !alias.scope !12
  br label %38

36:                                               ; preds = %30
  store %"class.blink::ParkableStringImpl"* %32, %"class.blink::ParkableStringImpl"** %34, align 8, !alias.scope !12
  %37 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %32, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %37) #6, !noalias !12
  br label %38

38:                                               ; preds = %35, %36
  call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* nonnull %5) #6
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #6
  br label %54

54:                                               ; preds = %38, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6
  %55 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::SingleCachedMetadataHandler"* %2, %"class.blink::SingleCachedMetadataHandler"** %55, align 8
  %56 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::ScriptStreamer"* null, %"class.blink::ScriptStreamer"** %56, align 8
  %57 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 3
  store i32 16, i32* %57, align 8
  %58 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 5
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %58, %"class.blink::KURL"* dereferenceable(112) %3) #6
  %59 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 6, i32 0, i32 0
  %60 = bitcast %"class.WTF::StringImpl"** %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 20, i1 false)
  ret void
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ScriptSourceCodeD2Ev(%"class.blink::ScriptSourceCode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #6
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 5
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %19) #6
  %20 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* %20) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16ScriptSourceCode5TraceEPNS_7VisitorE(%"class.blink::ScriptSourceCode"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_27SingleCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv) #6
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.19"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to %"class.blink::ScriptStreamer"*
  %20 = getelementptr inbounds %"class.blink::ScriptStreamer", %"class.blink::ScriptStreamer"* %19, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* %20, i8* %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14ScriptStreamerEE5TraceEPNS_7VisitorEPKv) #6
  br label %25

25:                                               ; preds = %13, %18
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_27SingleCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CachedMetadataHandler"*
  %4 = bitcast i8* %1 to void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)**, void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)*, void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)*, void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CachedMetadataHandler"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ScriptStreamerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptStreamer"*
  tail call void @_ZNK5blink14ScriptStreamer5TraceEPNS_7VisitorE(%"class.blink::ScriptStreamer"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZNK5blink14ScriptStreamer5TraceEPNS_7VisitorE(%"class.blink::ScriptStreamer"*, %"class.blink::Visitor"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink12_GLOBAL__N_122TreatNullSourceAsEmptyERKNS_14ParkableStringE: argument 0"}
!4 = distinct !{!4, !"_ZN5blink12_GLOBAL__N_122TreatNullSourceAsEmptyERKNS_14ParkableStringE"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink12_GLOBAL__N_122TreatNullSourceAsEmptyERKNS_14ParkableStringE: argument 0"}
!8 = distinct !{!8, !"_ZN5blink12_GLOBAL__N_122TreatNullSourceAsEmptyERKNS_14ParkableStringE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN5blink12_GLOBAL__N_122TreatNullSourceAsEmptyERKNS_14ParkableStringE: argument 0"}
!11 = distinct !{!11, !"_ZN5blink12_GLOBAL__N_122TreatNullSourceAsEmptyERKNS_14ParkableStringE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN5blink12_GLOBAL__N_122TreatNullSourceAsEmptyERKNS_14ParkableStringE: argument 0"}
!14 = distinct !{!14, !"_ZN5blink12_GLOBAL__N_122TreatNullSourceAsEmptyERKNS_14ParkableStringE"}
