; ModuleID = '../../third_party/webrtc/modules/audio_processing/echo_control_mobile_impl.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/echo_control_mobile_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::EchoControlMobileImpl" = type <{ i32, i8, [3 x i8], %"class.std::__1::vector", %"class.std::__1::unique_ptr.4", %"class.std::__1::vector.10", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::EchoControlMobileImpl::Canceller"* }
%"class.webrtc::EchoControlMobileImpl::Canceller" = type { i8* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.webrtc::EchoControlMobileImpl::StreamProperties"* }
%"struct.webrtc::EchoControlMobileImpl::StreamProperties" = type { i32, i64, i64 }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"struct.std::__1::array"*, %"struct.std::__1::array"*, %"class.std::__1::__compressed_pair.12" }
%"struct.std::__1::array" = type { [160 x i16] }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::array"* }
%"class.webrtc::AudioBuffer" = type { i32 (...)**, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.43", %"class.std::__1::vector.49", %"class.std::__1::vector.49", i8, i64 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.webrtc::ChannelBuffer"* }
%"class.webrtc::ChannelBuffer" = type { %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26", i64, i64, i64, i64, i64, %"class.std::__1::vector.32", %"class.std::__1::vector.32" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { float* }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { float** }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.std::__1::vector.34"*, %"class.std::__1::vector.34"*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::vector.34" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::vector.34"* }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.webrtc::SplittingFilter"* }
%"class.webrtc::SplittingFilter" = type opaque
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.std::__1::unique_ptr.51"*, %"class.std::__1::unique_ptr.51"*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::unique_ptr.51" = type opaque
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::unique_ptr.51"* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { i16*, i16*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i16* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIsNS_9allocatorIsEEE6insertIPsEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIsNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKsEES7_S7_ = comdat any

$_ZNSt3__16vectorINS_5arrayIsLm160EEENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN6webrtc21EchoControlMobileImpl9CancellerENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE8__appendEm = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = comdat any

@.str = private unnamed_addr constant [78 x i8] c"../../third_party/webrtc/modules/audio_processing/echo_control_mobile_impl.cc\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"state_\00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = linkonce_odr hidden constant [1 x i8] zeroinitializer, comdat, align 1

@_ZN6webrtc21EchoControlMobileImplC1Ev = hidden unnamed_addr alias void (%"class.webrtc::EchoControlMobileImpl"*), void (%"class.webrtc::EchoControlMobileImpl"*)* @_ZN6webrtc21EchoControlMobileImplC2Ev
@_ZN6webrtc21EchoControlMobileImplD1Ev = hidden unnamed_addr alias void (%"class.webrtc::EchoControlMobileImpl"*), void (%"class.webrtc::EchoControlMobileImpl"*)* @_ZN6webrtc21EchoControlMobileImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21EchoControlMobileImplC2Ev(%"class.webrtc::EchoControlMobileImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 0
  store i32 3, i32* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 3
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 57, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21EchoControlMobileImplD2Ev(%"class.webrtc::EchoControlMobileImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %2, align 8
  %4 = icmp eq %"struct.std::__1::array"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.std::__1::array"* %3 to i64
  %7 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 5, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::array"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.std::__1::array"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"struct.webrtc::EchoControlMobileImpl::StreamProperties"*, %"struct.webrtc::EchoControlMobileImpl::StreamProperties"** %11, align 8
  store %"struct.webrtc::EchoControlMobileImpl::StreamProperties"* null, %"struct.webrtc::EchoControlMobileImpl::StreamProperties"** %11, align 8
  %13 = icmp eq %"struct.webrtc::EchoControlMobileImpl::StreamProperties"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = bitcast %"struct.webrtc::EchoControlMobileImpl::StreamProperties"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #9
  br label %16

16:                                               ; preds = %10, %14
  %17 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %18, align 8
  %20 = icmp eq %"class.std::__1::unique_ptr"* %19, null
  br i1 %20, label %43, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.std::__1::unique_ptr"* %19 to i8*
  %23 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = icmp eq %"class.std::__1::unique_ptr"* %24, %19
  br i1 %25, label %41, label %26

26:                                               ; preds = %21, %36
  %27 = phi %"class.std::__1::unique_ptr"* [ %28, %36 ], [ %24, %21 ]
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 -1
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.webrtc::EchoControlMobileImpl::Canceller"*, %"class.webrtc::EchoControlMobileImpl::Canceller"** %29, align 8
  store %"class.webrtc::EchoControlMobileImpl::Canceller"* null, %"class.webrtc::EchoControlMobileImpl::Canceller"** %29, align 8
  %31 = icmp eq %"class.webrtc::EchoControlMobileImpl::Canceller"* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl::Canceller", %"class.webrtc::EchoControlMobileImpl::Canceller"* %30, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  tail call void @WebRtcAecm_Free(i8* %34) #10
  %35 = bitcast %"class.webrtc::EchoControlMobileImpl::Canceller"* %30 to i8*
  tail call void @_ZdlPv(i8* %35) #9
  br label %36

36:                                               ; preds = %32, %26
  %37 = icmp eq %"class.std::__1::unique_ptr"* %28, %19
  br i1 %37, label %38, label %26

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::vector"* %17 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %21
  %42 = phi i8* [ %40, %38 ], [ %22, %21 ]
  store %"class.std::__1::unique_ptr"* %19, %"class.std::__1::unique_ptr"** %23, align 8
  tail call void @_ZdlPv(i8* %42) #9
  br label %43

43:                                               ; preds = %16, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21EchoControlMobileImpl18ProcessRenderAudioEN3rtc9ArrayViewIKsLln4711EEE(%"class.webrtc::EchoControlMobileImpl"* nocapture readonly, i16*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"struct.webrtc::EchoControlMobileImpl::StreamProperties"*, %"struct.webrtc::EchoControlMobileImpl::StreamProperties"** %4, align 8
  %6 = getelementptr inbounds %"struct.webrtc::EchoControlMobileImpl::StreamProperties", %"struct.webrtc::EchoControlMobileImpl::StreamProperties"* %5, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.webrtc::EchoControlMobileImpl::StreamProperties", %"struct.webrtc::EchoControlMobileImpl::StreamProperties"* %5, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = mul i64 %9, %7
  %11 = udiv i64 %2, %10
  %12 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %14 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %14, align 8
  %16 = icmp eq %"class.std::__1::unique_ptr"* %13, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %18, %3
  ret void

18:                                               ; preds = %3, %18
  %19 = phi i64 [ %27, %18 ], [ 0, %3 ]
  %20 = phi %"class.std::__1::unique_ptr"* [ %28, %18 ], [ %13, %3 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.webrtc::EchoControlMobileImpl::Canceller"*, %"class.webrtc::EchoControlMobileImpl::Canceller"** %21, align 8
  %23 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl::Canceller", %"class.webrtc::EchoControlMobileImpl::Canceller"* %22, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds i16, i16* %1, i64 %19
  %26 = tail call i32 @WebRtcAecm_BufferFarend(i8* %24, i16* %25, i64 %11) #10
  %27 = add i64 %19, %11
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 1
  %29 = icmp eq %"class.std::__1::unique_ptr"* %28, %15
  br i1 %29, label %17, label %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @WebRtcAecm_BufferFarend(i8*, i16*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21EchoControlMobileImpl21PackRenderAudioBufferEPKNS_11AudioBufferEmmPNSt3__16vectorIsNS4_9allocatorIsEEEE(%"class.webrtc::AudioBuffer"* nocapture readonly, i64, i64, %"class.std::__1::vector.57"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.std::__1::array", align 2
  %6 = bitcast %"class.std::__1::vector.57"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %3, i64 0, i32 0, i32 1
  %9 = bitcast i16** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = icmp eq i64 %1, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %0, i64 0, i32 7
  %13 = bitcast %"struct.std::__1::array"* %5 to i8*
  %14 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %0, i64 0, i32 9
  %17 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %5, i64 0, i32 0, i64 0
  %18 = load i64, i64* %12, align 8
  br label %19

19:                                               ; preds = %27, %11
  %20 = phi i64 [ %18, %11 ], [ %28, %27 ]
  %21 = phi i32 [ 0, %11 ], [ %29, %27 ]
  %22 = phi i64 [ 0, %11 ], [ %30, %27 ]
  %23 = icmp eq i64 %20, 0
  br i1 %23, label %27, label %32

24:                                               ; preds = %27, %4
  ret void

25:                                               ; preds = %40
  %26 = trunc i64 %57 to i32
  br label %27

27:                                               ; preds = %25, %19
  %28 = phi i64 [ 0, %19 ], [ %56, %25 ]
  %29 = phi i32 [ %21, %19 ], [ %26, %25 ]
  %30 = add nuw i64 %22, 1
  %31 = icmp eq i64 %30, %1
  br i1 %31, label %24, label %19

32:                                               ; preds = %19, %40
  %33 = phi i32 [ %58, %40 ], [ %21, %19 ]
  %34 = phi i64 [ %59, %40 ], [ 0, %19 ]
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %13, i8 -86, i64 320, i1 false)
  %35 = sext i32 %33 to i64
  %36 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %14, align 8
  %37 = icmp eq %"class.webrtc::ChannelBuffer"* %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %15, align 8
  br label %40

40:                                               ; preds = %32, %38
  %41 = phi %"class.webrtc::ChannelBuffer"* [ %39, %38 ], [ %36, %32 ]
  %42 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %41, i64 0, i32 7
  %43 = load i64, i64* %42, align 8
  %44 = mul i64 %43, %35
  %45 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %41, i64 0, i32 2, i32 0, i32 0, i32 0
  %46 = load float**, float*** %45, align 8
  %47 = getelementptr inbounds float*, float** %46, i64 %44
  %48 = load float*, float** %47, align 8
  %49 = load i64, i64* %16, align 8
  call void @_ZN6webrtc13FloatS16ToS16EPKfmPs(float* %48, i64 %49, i16* nonnull %17) #10
  %50 = load i16*, i16** %8, align 8
  %51 = load i64, i64* %16, align 8
  %52 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %5, i64 0, i32 0, i64 %51
  %53 = call i16* @_ZNSt3__16vectorIsNS_9allocatorIsEEE6insertIPsEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIsNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKsEES7_S7_(%"class.std::__1::vector.57"* %3, i16* %50, i16* nonnull %17, i16* %52)
  %54 = add nsw i32 %33, 1
  %55 = sext i32 %54 to i64
  %56 = load i64, i64* %12, align 8
  %57 = urem i64 %55, %56
  %58 = trunc i64 %57 to i32
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %13) #10
  %59 = add nuw i64 %34, 1
  %60 = icmp ult i64 %59, %56
  br i1 %60, label %32, label %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN6webrtc13FloatS16ToS16EPKfmPs(float*, i64, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16* @_ZNSt3__16vectorIsNS_9allocatorIsEEE6insertIPsEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIsNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKsEES7_S7_(%"class.std::__1::vector.57"*, i16*, i16*, i16*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast i16* %2 to i8*
  %6 = bitcast i16* %1 to i8*
  %7 = ptrtoint i16* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 0
  %9 = ptrtoint i16* %3 to i64
  %10 = ptrtoint i16* %2 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 1
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %547

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i16** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 1
  %19 = load i16*, i16** %18, align 8
  %20 = ptrtoint i16* %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 1
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast i16** %18 to i64*
  br i1 %23, label %188, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 1
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %45

29:                                               ; preds = %25
  %30 = getelementptr inbounds i16, i16* %2, i64 %27
  %31 = ptrtoint i16* %30 to i64
  %32 = sub i64 %9, %31
  %33 = icmp sgt i64 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = lshr exact i64 %32, 1
  %36 = bitcast i16* %19 to i8*
  %37 = bitcast i16* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %36, i8* align 2 %37, i64 %32, i1 false) #10
  %38 = getelementptr inbounds i16, i16* %19, i64 %35
  %39 = ptrtoint i16* %38 to i64
  br label %40

40:                                               ; preds = %34, %29
  %41 = phi i64 [ %39, %34 ], [ %20, %29 ]
  store i64 %41, i64* %24, align 8
  %42 = icmp sgt i64 %26, 0
  br i1 %42, label %43, label %547

43:                                               ; preds = %40
  %44 = inttoptr i64 %41 to i16*
  br label %45

45:                                               ; preds = %43, %25
  %46 = phi i64 [ %41, %43 ], [ %20, %25 ]
  %47 = phi i16* [ %44, %43 ], [ %19, %25 ]
  %48 = phi i16* [ %30, %43 ], [ %3, %25 ]
  %49 = getelementptr inbounds i16, i16* %1, i64 %12
  %50 = ptrtoint i16* %49 to i64
  %51 = sub i64 %46, %50
  %52 = ashr exact i64 %51, 1
  %53 = getelementptr inbounds i16, i16* %1, i64 %52
  %54 = icmp ult i16* %53, %19
  br i1 %54, label %55, label %168

55:                                               ; preds = %45
  %56 = sub nsw i64 0, %52
  %57 = getelementptr i16, i16* %19, i64 %56
  %58 = bitcast i16* %57 to i8*
  %59 = xor i64 %7, -1
  %60 = getelementptr i8, i8* %58, i64 %59
  %61 = ptrtoint i8* %60 to i64
  %62 = lshr i64 %61, 1
  %63 = add nuw i64 %62, 1
  %64 = icmp ult i64 %63, 16
  br i1 %64, label %65, label %68

65:                                               ; preds = %163, %68, %55
  %66 = phi i16* [ %47, %68 ], [ %47, %55 ], [ %86, %163 ]
  %67 = phi i16* [ %53, %68 ], [ %53, %55 ], [ %87, %163 ]
  br label %176

68:                                               ; preds = %55
  %69 = sub nsw i64 0, %52
  %70 = getelementptr i16, i16* %19, i64 %69
  %71 = bitcast i16* %70 to i8*
  %72 = xor i64 %7, -1
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = lshr i64 %74, 1
  %76 = add nuw i64 %75, 1
  %77 = getelementptr i16, i16* %47, i64 %76
  %78 = add i64 %52, %75
  %79 = add i64 %78, 1
  %80 = getelementptr i16, i16* %1, i64 %79
  %81 = icmp ult i16* %47, %80
  %82 = icmp ult i16* %53, %77
  %83 = and i1 %81, %82
  br i1 %83, label %65, label %84

84:                                               ; preds = %68
  %85 = and i64 %63, -16
  %86 = getelementptr i16, i16* %47, i64 %85
  %87 = getelementptr i16, i16* %53, i64 %85
  %88 = add i64 %85, -16
  %89 = lshr exact i64 %88, 4
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 48
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i16, i16* %47, i64 %96
  %99 = getelementptr i16, i16* %53, i64 %96
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !2
  %102 = getelementptr i16, i16* %99, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !5, !noalias !2
  %106 = getelementptr i16, i16* %98, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !5, !noalias !2
  %108 = or i64 %96, 16
  %109 = getelementptr i16, i16* %47, i64 %108
  %110 = getelementptr i16, i16* %53, i64 %108
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !2
  %113 = getelementptr i16, i16* %110, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !2
  %116 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !5, !noalias !2
  %117 = getelementptr i16, i16* %109, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !5, !noalias !2
  %119 = or i64 %96, 32
  %120 = getelementptr i16, i16* %47, i64 %119
  %121 = getelementptr i16, i16* %53, i64 %119
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = getelementptr i16, i16* %121, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !2
  %127 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !5, !noalias !2
  %128 = getelementptr i16, i16* %120, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = or i64 %96, 48
  %131 = getelementptr i16, i16* %47, i64 %130
  %132 = getelementptr i16, i16* %53, i64 %130
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !2
  %135 = getelementptr i16, i16* %132, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !2
  %138 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !5, !noalias !2
  %139 = getelementptr i16, i16* %131, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !5, !noalias !2
  %141 = add i64 %96, 64
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !7

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i16, i16* %47, i64 %148
  %151 = getelementptr i16, i16* %53, i64 %148
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !2
  %154 = getelementptr i16, i16* %151, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !2
  %157 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %157, align 2, !alias.scope !5, !noalias !2
  %158 = getelementptr i16, i16* %150, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %156, <8 x i16>* %159, align 2, !alias.scope !5, !noalias !2
  %160 = add i64 %148, 16
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !9

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %63, %85
  br i1 %164, label %165, label %65

165:                                              ; preds = %176, %163
  %166 = phi i16* [ %86, %163 ], [ %181, %176 ]
  %167 = ptrtoint i16* %166 to i64
  br label %168

168:                                              ; preds = %165, %45
  %169 = phi i64 [ %167, %165 ], [ %46, %45 ]
  store i64 %169, i64* %24, align 8
  %170 = icmp eq i64 %51, 0
  br i1 %170, label %183, label %171

171:                                              ; preds = %168
  %172 = sub nsw i64 0, %52
  %173 = getelementptr inbounds i16, i16* %47, i64 %172
  %174 = bitcast i16* %173 to i8*
  %175 = bitcast i16* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %174, i8* align 2 %175, i64 %51, i1 false) #10
  br label %183

176:                                              ; preds = %65, %176
  %177 = phi i16* [ %181, %176 ], [ %66, %65 ]
  %178 = phi i16* [ %180, %176 ], [ %67, %65 ]
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = icmp ult i16* %180, %19
  br i1 %182, label %176, label %165, !llvm.loop !11

183:                                              ; preds = %168, %171
  %184 = ptrtoint i16* %48 to i64
  %185 = sub i64 %184, %10
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %547, label %187

187:                                              ; preds = %183
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %6, i8* align 2 %5, i64 %185, i1 false) #10
  br label %547

188:                                              ; preds = %14
  %189 = bitcast %"class.std::__1::vector.57"* %0 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = sub i64 %20, %190
  %192 = ashr exact i64 %191, 1
  %193 = add nsw i64 %192, %12
  %194 = icmp slt i64 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %188
  %196 = bitcast %"class.std::__1::vector.57"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %196) #11
  unreachable

197:                                              ; preds = %188
  %198 = sub i64 %17, %190
  %199 = ashr exact i64 %198, 1
  %200 = icmp ult i64 %199, 4611686018427387903
  %201 = icmp ult i64 %198, %193
  %202 = select i1 %201, i64 %193, i64 %198
  %203 = select i1 %200, i64 %202, i64 9223372036854775807
  %204 = sub i64 %7, %190
  %205 = ashr exact i64 %204, 1
  %206 = icmp eq i64 %203, 0
  br i1 %206, label %214, label %207

207:                                              ; preds = %197
  %208 = icmp slt i64 %203, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %207
  tail call void @abort() #11
  unreachable

210:                                              ; preds = %207
  %211 = shl i64 %203, 1
  %212 = tail call i8* @_Znwm(i64 %211) #9
  %213 = bitcast i8* %212 to i16*
  br label %214

214:                                              ; preds = %210, %197
  %215 = phi i16* [ %213, %210 ], [ null, %197 ]
  %216 = getelementptr inbounds i16, i16* %215, i64 %205
  %217 = getelementptr inbounds i16, i16* %215, i64 %203
  %218 = ptrtoint i16* %217 to i64
  %219 = getelementptr inbounds i16, i16* %216, i64 %12
  %220 = add i64 %11, -2
  %221 = lshr i64 %220, 1
  %222 = add nuw i64 %221, 1
  %223 = icmp ult i64 %222, 16
  br i1 %223, label %316, label %224

224:                                              ; preds = %214
  %225 = add i64 %11, -2
  %226 = lshr i64 %225, 1
  %227 = add i64 %205, %226
  %228 = add i64 %227, 1
  %229 = getelementptr i16, i16* %215, i64 %228
  %230 = add nuw i64 %226, 1
  %231 = getelementptr i16, i16* %2, i64 %230
  %232 = icmp ult i16* %216, %231
  %233 = icmp ugt i16* %229, %2
  %234 = and i1 %232, %233
  br i1 %234, label %316, label %235

235:                                              ; preds = %224
  %236 = and i64 %222, -16
  %237 = getelementptr i16, i16* %216, i64 %236
  %238 = getelementptr i16, i16* %2, i64 %236
  %239 = add i64 %236, -16
  %240 = lshr exact i64 %239, 4
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 3
  %243 = icmp ult i64 %239, 48
  br i1 %243, label %295, label %244

244:                                              ; preds = %235
  %245 = sub nsw i64 %241, %242
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ 0, %244 ], [ %292, %246 ]
  %248 = phi i64 [ %245, %244 ], [ %293, %246 ]
  %249 = getelementptr i16, i16* %216, i64 %247
  %250 = getelementptr i16, i16* %2, i64 %247
  %251 = bitcast i16* %250 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !12
  %253 = getelementptr i16, i16* %250, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !12
  %256 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !15, !noalias !12
  %257 = getelementptr i16, i16* %249, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !15, !noalias !12
  %259 = or i64 %247, 16
  %260 = getelementptr i16, i16* %216, i64 %259
  %261 = getelementptr i16, i16* %2, i64 %259
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !12
  %264 = getelementptr i16, i16* %261, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !12
  %267 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !15, !noalias !12
  %268 = getelementptr i16, i16* %260, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !15, !noalias !12
  %270 = or i64 %247, 32
  %271 = getelementptr i16, i16* %216, i64 %270
  %272 = getelementptr i16, i16* %2, i64 %270
  %273 = bitcast i16* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !12
  %275 = getelementptr i16, i16* %272, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !12
  %278 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %278, align 2, !alias.scope !15, !noalias !12
  %279 = getelementptr i16, i16* %271, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %280, align 2, !alias.scope !15, !noalias !12
  %281 = or i64 %247, 48
  %282 = getelementptr i16, i16* %216, i64 %281
  %283 = getelementptr i16, i16* %2, i64 %281
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !12
  %286 = getelementptr i16, i16* %283, i64 8
  %287 = bitcast i16* %286 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !12
  %289 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %289, align 2, !alias.scope !15, !noalias !12
  %290 = getelementptr i16, i16* %282, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %291, align 2, !alias.scope !15, !noalias !12
  %292 = add i64 %247, 64
  %293 = add i64 %248, -4
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %246, !llvm.loop !17

295:                                              ; preds = %246, %235
  %296 = phi i64 [ 0, %235 ], [ %292, %246 ]
  %297 = icmp eq i64 %242, 0
  br i1 %297, label %314, label %298

298:                                              ; preds = %295, %298
  %299 = phi i64 [ %311, %298 ], [ %296, %295 ]
  %300 = phi i64 [ %312, %298 ], [ %242, %295 ]
  %301 = getelementptr i16, i16* %216, i64 %299
  %302 = getelementptr i16, i16* %2, i64 %299
  %303 = bitcast i16* %302 to <8 x i16>*
  %304 = load <8 x i16>, <8 x i16>* %303, align 2, !alias.scope !12
  %305 = getelementptr i16, i16* %302, i64 8
  %306 = bitcast i16* %305 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !12
  %308 = bitcast i16* %301 to <8 x i16>*
  store <8 x i16> %304, <8 x i16>* %308, align 2, !alias.scope !15, !noalias !12
  %309 = getelementptr i16, i16* %301, i64 8
  %310 = bitcast i16* %309 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %310, align 2, !alias.scope !15, !noalias !12
  %311 = add i64 %299, 16
  %312 = add i64 %300, -1
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %314, label %298, !llvm.loop !18

314:                                              ; preds = %298, %295
  %315 = icmp eq i64 %222, %236
  br i1 %315, label %370, label %316

316:                                              ; preds = %314, %224, %214
  %317 = phi i16* [ %216, %224 ], [ %216, %214 ], [ %237, %314 ]
  %318 = phi i16* [ %2, %224 ], [ %2, %214 ], [ %238, %314 ]
  %319 = ptrtoint i16* %317 to i64
  %320 = add nsw i64 %12, %205
  %321 = add i64 %320, -1
  %322 = getelementptr i16, i16* %215, i64 %321
  %323 = ptrtoint i16* %322 to i64
  %324 = sub i64 %323, %319
  %325 = lshr i64 %324, 1
  %326 = add nuw i64 %325, 1
  %327 = and i64 %326, 7
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %338, label %329

329:                                              ; preds = %316, %329
  %330 = phi i16* [ %334, %329 ], [ %317, %316 ]
  %331 = phi i16* [ %335, %329 ], [ %318, %316 ]
  %332 = phi i64 [ %336, %329 ], [ %327, %316 ]
  %333 = load i16, i16* %331, align 2
  store i16 %333, i16* %330, align 2
  %334 = getelementptr inbounds i16, i16* %330, i64 1
  %335 = getelementptr inbounds i16, i16* %331, i64 1
  %336 = add i64 %332, -1
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %329, !llvm.loop !19

338:                                              ; preds = %329, %316
  %339 = phi i16* [ %317, %316 ], [ %334, %329 ]
  %340 = phi i16* [ %318, %316 ], [ %335, %329 ]
  %341 = icmp ult i64 %324, 14
  br i1 %341, label %370, label %342

342:                                              ; preds = %338, %342
  %343 = phi i16* [ %367, %342 ], [ %339, %338 ]
  %344 = phi i16* [ %368, %342 ], [ %340, %338 ]
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %343, align 2
  %346 = getelementptr inbounds i16, i16* %343, i64 1
  %347 = getelementptr inbounds i16, i16* %344, i64 1
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %346, align 2
  %349 = getelementptr inbounds i16, i16* %343, i64 2
  %350 = getelementptr inbounds i16, i16* %344, i64 2
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %349, align 2
  %352 = getelementptr inbounds i16, i16* %343, i64 3
  %353 = getelementptr inbounds i16, i16* %344, i64 3
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = getelementptr inbounds i16, i16* %343, i64 4
  %356 = getelementptr inbounds i16, i16* %344, i64 4
  %357 = load i16, i16* %356, align 2
  store i16 %357, i16* %355, align 2
  %358 = getelementptr inbounds i16, i16* %343, i64 5
  %359 = getelementptr inbounds i16, i16* %344, i64 5
  %360 = load i16, i16* %359, align 2
  store i16 %360, i16* %358, align 2
  %361 = getelementptr inbounds i16, i16* %343, i64 6
  %362 = getelementptr inbounds i16, i16* %344, i64 6
  %363 = load i16, i16* %362, align 2
  store i16 %363, i16* %361, align 2
  %364 = getelementptr inbounds i16, i16* %343, i64 7
  %365 = getelementptr inbounds i16, i16* %344, i64 7
  %366 = load i16, i16* %365, align 2
  store i16 %366, i16* %364, align 2
  %367 = getelementptr inbounds i16, i16* %343, i64 8
  %368 = getelementptr inbounds i16, i16* %344, i64 8
  %369 = icmp eq i16* %219, %367
  br i1 %369, label %370, label %342, !llvm.loop !20

370:                                              ; preds = %338, %342, %314
  %371 = load i16*, i16** %8, align 8
  %372 = ptrtoint i16* %371 to i64
  %373 = sub i64 %7, %372
  %374 = ashr exact i64 %373, 1
  %375 = sub nsw i64 0, %374
  %376 = getelementptr inbounds i16, i16* %216, i64 %375
  %377 = ptrtoint i16* %376 to i64
  %378 = icmp sgt i64 %373, 0
  br i1 %378, label %379, label %382

379:                                              ; preds = %370
  %380 = bitcast i16* %376 to i8*
  %381 = bitcast i16* %371 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %380, i8* align 2 %381, i64 %373, i1 false) #10
  br label %382

382:                                              ; preds = %379, %370
  %383 = load i16*, i16** %18, align 8
  %384 = icmp eq i16* %383, %1
  br i1 %384, label %540, label %385

385:                                              ; preds = %382
  %386 = getelementptr i16, i16* %383, i64 -1
  %387 = ptrtoint i16* %386 to i64
  %388 = sub i64 %387, %7
  %389 = lshr i64 %388, 1
  %390 = add nuw i64 %389, 1
  %391 = icmp ult i64 %390, 16
  br i1 %391, label %487, label %392

392:                                              ; preds = %385
  %393 = add nsw i64 %12, %205
  %394 = getelementptr i16, i16* %383, i64 -1
  %395 = ptrtoint i16* %394 to i64
  %396 = sub i64 %395, %7
  %397 = lshr i64 %396, 1
  %398 = add i64 %393, %397
  %399 = add i64 %398, 1
  %400 = getelementptr i16, i16* %215, i64 %399
  %401 = add nuw i64 %397, 1
  %402 = getelementptr i16, i16* %1, i64 %401
  %403 = icmp ult i16* %219, %402
  %404 = icmp ugt i16* %400, %1
  %405 = and i1 %403, %404
  br i1 %405, label %487, label %406

406:                                              ; preds = %392
  %407 = and i64 %390, -16
  %408 = getelementptr i16, i16* %219, i64 %407
  %409 = getelementptr i16, i16* %1, i64 %407
  %410 = add i64 %407, -16
  %411 = lshr exact i64 %410, 4
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 3
  %414 = icmp ult i64 %410, 48
  br i1 %414, label %466, label %415

415:                                              ; preds = %406
  %416 = sub nsw i64 %412, %413
  br label %417

417:                                              ; preds = %417, %415
  %418 = phi i64 [ 0, %415 ], [ %463, %417 ]
  %419 = phi i64 [ %416, %415 ], [ %464, %417 ]
  %420 = getelementptr i16, i16* %219, i64 %418
  %421 = getelementptr i16, i16* %1, i64 %418
  %422 = bitcast i16* %421 to <8 x i16>*
  %423 = load <8 x i16>, <8 x i16>* %422, align 2, !alias.scope !21
  %424 = getelementptr i16, i16* %421, i64 8
  %425 = bitcast i16* %424 to <8 x i16>*
  %426 = load <8 x i16>, <8 x i16>* %425, align 2, !alias.scope !21
  %427 = bitcast i16* %420 to <8 x i16>*
  store <8 x i16> %423, <8 x i16>* %427, align 2, !alias.scope !24, !noalias !21
  %428 = getelementptr i16, i16* %420, i64 8
  %429 = bitcast i16* %428 to <8 x i16>*
  store <8 x i16> %426, <8 x i16>* %429, align 2, !alias.scope !24, !noalias !21
  %430 = or i64 %418, 16
  %431 = getelementptr i16, i16* %219, i64 %430
  %432 = getelementptr i16, i16* %1, i64 %430
  %433 = bitcast i16* %432 to <8 x i16>*
  %434 = load <8 x i16>, <8 x i16>* %433, align 2, !alias.scope !21
  %435 = getelementptr i16, i16* %432, i64 8
  %436 = bitcast i16* %435 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !21
  %438 = bitcast i16* %431 to <8 x i16>*
  store <8 x i16> %434, <8 x i16>* %438, align 2, !alias.scope !24, !noalias !21
  %439 = getelementptr i16, i16* %431, i64 8
  %440 = bitcast i16* %439 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %440, align 2, !alias.scope !24, !noalias !21
  %441 = or i64 %418, 32
  %442 = getelementptr i16, i16* %219, i64 %441
  %443 = getelementptr i16, i16* %1, i64 %441
  %444 = bitcast i16* %443 to <8 x i16>*
  %445 = load <8 x i16>, <8 x i16>* %444, align 2, !alias.scope !21
  %446 = getelementptr i16, i16* %443, i64 8
  %447 = bitcast i16* %446 to <8 x i16>*
  %448 = load <8 x i16>, <8 x i16>* %447, align 2, !alias.scope !21
  %449 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %445, <8 x i16>* %449, align 2, !alias.scope !24, !noalias !21
  %450 = getelementptr i16, i16* %442, i64 8
  %451 = bitcast i16* %450 to <8 x i16>*
  store <8 x i16> %448, <8 x i16>* %451, align 2, !alias.scope !24, !noalias !21
  %452 = or i64 %418, 48
  %453 = getelementptr i16, i16* %219, i64 %452
  %454 = getelementptr i16, i16* %1, i64 %452
  %455 = bitcast i16* %454 to <8 x i16>*
  %456 = load <8 x i16>, <8 x i16>* %455, align 2, !alias.scope !21
  %457 = getelementptr i16, i16* %454, i64 8
  %458 = bitcast i16* %457 to <8 x i16>*
  %459 = load <8 x i16>, <8 x i16>* %458, align 2, !alias.scope !21
  %460 = bitcast i16* %453 to <8 x i16>*
  store <8 x i16> %456, <8 x i16>* %460, align 2, !alias.scope !24, !noalias !21
  %461 = getelementptr i16, i16* %453, i64 8
  %462 = bitcast i16* %461 to <8 x i16>*
  store <8 x i16> %459, <8 x i16>* %462, align 2, !alias.scope !24, !noalias !21
  %463 = add i64 %418, 64
  %464 = add i64 %419, -4
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %466, label %417, !llvm.loop !26

466:                                              ; preds = %417, %406
  %467 = phi i64 [ 0, %406 ], [ %463, %417 ]
  %468 = icmp eq i64 %413, 0
  br i1 %468, label %485, label %469

469:                                              ; preds = %466, %469
  %470 = phi i64 [ %482, %469 ], [ %467, %466 ]
  %471 = phi i64 [ %483, %469 ], [ %413, %466 ]
  %472 = getelementptr i16, i16* %219, i64 %470
  %473 = getelementptr i16, i16* %1, i64 %470
  %474 = bitcast i16* %473 to <8 x i16>*
  %475 = load <8 x i16>, <8 x i16>* %474, align 2, !alias.scope !21
  %476 = getelementptr i16, i16* %473, i64 8
  %477 = bitcast i16* %476 to <8 x i16>*
  %478 = load <8 x i16>, <8 x i16>* %477, align 2, !alias.scope !21
  %479 = bitcast i16* %472 to <8 x i16>*
  store <8 x i16> %475, <8 x i16>* %479, align 2, !alias.scope !24, !noalias !21
  %480 = getelementptr i16, i16* %472, i64 8
  %481 = bitcast i16* %480 to <8 x i16>*
  store <8 x i16> %478, <8 x i16>* %481, align 2, !alias.scope !24, !noalias !21
  %482 = add i64 %470, 16
  %483 = add i64 %471, -1
  %484 = icmp eq i64 %483, 0
  br i1 %484, label %485, label %469, !llvm.loop !27

485:                                              ; preds = %469, %466
  %486 = icmp eq i64 %390, %407
  br i1 %486, label %540, label %487

487:                                              ; preds = %485, %392, %385
  %488 = phi i16* [ %219, %392 ], [ %219, %385 ], [ %408, %485 ]
  %489 = phi i16* [ %1, %392 ], [ %1, %385 ], [ %409, %485 ]
  %490 = ptrtoint i16* %489 to i64
  %491 = getelementptr i16, i16* %383, i64 -1
  %492 = ptrtoint i16* %491 to i64
  %493 = sub i64 %492, %490
  %494 = lshr i64 %493, 1
  %495 = add nuw i64 %494, 1
  %496 = and i64 %495, 7
  %497 = icmp eq i64 %496, 0
  br i1 %497, label %507, label %498

498:                                              ; preds = %487, %498
  %499 = phi i16* [ %504, %498 ], [ %488, %487 ]
  %500 = phi i16* [ %503, %498 ], [ %489, %487 ]
  %501 = phi i64 [ %505, %498 ], [ %496, %487 ]
  %502 = load i16, i16* %500, align 2
  store i16 %502, i16* %499, align 2
  %503 = getelementptr inbounds i16, i16* %500, i64 1
  %504 = getelementptr inbounds i16, i16* %499, i64 1
  %505 = add i64 %501, -1
  %506 = icmp eq i64 %505, 0
  br i1 %506, label %507, label %498, !llvm.loop !28

507:                                              ; preds = %498, %487
  %508 = phi i16* [ undef, %487 ], [ %504, %498 ]
  %509 = phi i16* [ %488, %487 ], [ %504, %498 ]
  %510 = phi i16* [ %489, %487 ], [ %503, %498 ]
  %511 = icmp ult i64 %493, 14
  br i1 %511, label %540, label %512

512:                                              ; preds = %507, %512
  %513 = phi i16* [ %538, %512 ], [ %509, %507 ]
  %514 = phi i16* [ %537, %512 ], [ %510, %507 ]
  %515 = load i16, i16* %514, align 2
  store i16 %515, i16* %513, align 2
  %516 = getelementptr inbounds i16, i16* %514, i64 1
  %517 = getelementptr inbounds i16, i16* %513, i64 1
  %518 = load i16, i16* %516, align 2
  store i16 %518, i16* %517, align 2
  %519 = getelementptr inbounds i16, i16* %514, i64 2
  %520 = getelementptr inbounds i16, i16* %513, i64 2
  %521 = load i16, i16* %519, align 2
  store i16 %521, i16* %520, align 2
  %522 = getelementptr inbounds i16, i16* %514, i64 3
  %523 = getelementptr inbounds i16, i16* %513, i64 3
  %524 = load i16, i16* %522, align 2
  store i16 %524, i16* %523, align 2
  %525 = getelementptr inbounds i16, i16* %514, i64 4
  %526 = getelementptr inbounds i16, i16* %513, i64 4
  %527 = load i16, i16* %525, align 2
  store i16 %527, i16* %526, align 2
  %528 = getelementptr inbounds i16, i16* %514, i64 5
  %529 = getelementptr inbounds i16, i16* %513, i64 5
  %530 = load i16, i16* %528, align 2
  store i16 %530, i16* %529, align 2
  %531 = getelementptr inbounds i16, i16* %514, i64 6
  %532 = getelementptr inbounds i16, i16* %513, i64 6
  %533 = load i16, i16* %531, align 2
  store i16 %533, i16* %532, align 2
  %534 = getelementptr inbounds i16, i16* %514, i64 7
  %535 = getelementptr inbounds i16, i16* %513, i64 7
  %536 = load i16, i16* %534, align 2
  store i16 %536, i16* %535, align 2
  %537 = getelementptr inbounds i16, i16* %514, i64 8
  %538 = getelementptr inbounds i16, i16* %513, i64 8
  %539 = icmp eq i16* %537, %383
  br i1 %539, label %540, label %512, !llvm.loop !29

540:                                              ; preds = %507, %512, %485, %382
  %541 = phi i16* [ %219, %382 ], [ %408, %485 ], [ %508, %507 ], [ %538, %512 ]
  %542 = ptrtoint i16* %541 to i64
  %543 = load i16*, i16** %8, align 8
  store i64 %377, i64* %189, align 8
  store i64 %542, i64* %24, align 8
  store i64 %218, i64* %16, align 8
  %544 = icmp eq i16* %543, null
  br i1 %544, label %547, label %545

545:                                              ; preds = %540
  %546 = bitcast i16* %543 to i8*
  tail call void @_ZdlPv(i8* %546) #9
  br label %547

547:                                              ; preds = %545, %540, %40, %183, %187, %4
  %548 = phi i16* [ %1, %4 ], [ %1, %187 ], [ %1, %183 ], [ %1, %40 ], [ %216, %540 ], [ %216, %545 ]
  ret i16* %548
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN6webrtc21EchoControlMobileImpl21NumCancellersRequiredEmm(i64, i64) local_unnamed_addr #3 align 2 {
  %3 = mul i64 %1, %0
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc21EchoControlMobileImpl19ProcessCaptureAudioEPNS_11AudioBufferEi(%"class.webrtc::EchoControlMobileImpl"* nocapture readonly, %"class.webrtc::AudioBuffer"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::array", align 2
  %5 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 7
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %137, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 5, i32 0, i32 0
  %11 = bitcast %"struct.std::__1::array"* %4 to i8*
  %12 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 0
  %13 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 9
  %16 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %18 = trunc i32 %2 to i16
  %19 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 8
  br label %20

20:                                               ; preds = %8, %127
  %21 = phi i64 [ 0, %8 ], [ %128, %127 ]
  %22 = phi i64 [ 0, %8 ], [ %69, %127 ]
  %23 = load i8, i8* %9, align 8, !range !30
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %10, align 8
  %27 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %26, i64 %21, i32 0, i64 0
  br label %28

28:                                               ; preds = %20, %25
  %29 = phi i16* [ %27, %25 ], [ null, %20 ]
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %11, i8 -86, i64 320, i1 false)
  %30 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %13, align 8
  %31 = icmp eq %"class.webrtc::ChannelBuffer"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %14, align 8
  br label %34

34:                                               ; preds = %28, %32
  %35 = phi %"class.webrtc::ChannelBuffer"* [ %33, %32 ], [ %30, %28 ]
  %36 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %35, i64 0, i32 7
  %37 = load i64, i64* %36, align 8
  %38 = mul i64 %37, %21
  %39 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %35, i64 0, i32 2, i32 0, i32 0, i32 0
  %40 = load float**, float*** %39, align 8
  %41 = getelementptr inbounds float*, float** %40, i64 %38
  %42 = load float*, float** %41, align 8
  %43 = icmp eq float* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %34
  br i1 %31, label %45, label %47

45:                                               ; preds = %44
  %46 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %14, align 8
  br label %47

47:                                               ; preds = %44, %45
  %48 = phi %"class.webrtc::ChannelBuffer"* [ %46, %45 ], [ %30, %44 ]
  %49 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %48, i64 0, i32 7
  %50 = load i64, i64* %49, align 8
  %51 = mul i64 %50, %21
  %52 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %48, i64 0, i32 2, i32 0, i32 0, i32 0
  %53 = load float**, float*** %52, align 8
  %54 = getelementptr inbounds float*, float** %53, i64 %51
  %55 = load float*, float** %54, align 8
  %56 = load i64, i64* %15, align 8
  call void @_ZN6webrtc13FloatS16ToS16EPKfmPs(float* %55, i64 %56, i16* nonnull %12) #10
  br label %57

57:                                               ; preds = %34, %47
  %58 = phi i16* [ %12, %47 ], [ null, %34 ]
  %59 = icmp eq i16* %29, null
  %60 = select i1 %59, i16* %58, i16* %29
  %61 = select i1 %59, i16* null, i16* %58
  %62 = load %"struct.webrtc::EchoControlMobileImpl::StreamProperties"*, %"struct.webrtc::EchoControlMobileImpl::StreamProperties"** %16, align 8
  %63 = getelementptr inbounds %"struct.webrtc::EchoControlMobileImpl::StreamProperties", %"struct.webrtc::EchoControlMobileImpl::StreamProperties"* %62, i64 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %57
  %67 = icmp eq i16* %58, null
  br label %72

68:                                               ; preds = %98, %57
  %69 = phi i64 [ %22, %57 ], [ %99, %98 ]
  %70 = load i64, i64* %19, align 8
  %71 = icmp ugt i64 %70, 1
  br i1 %71, label %105, label %127

72:                                               ; preds = %66, %98
  %73 = phi i64 [ 0, %66 ], [ %100, %98 ]
  %74 = phi i64 [ %22, %66 ], [ %99, %98 ]
  %75 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 %74, i32 0, i32 0, i32 0
  %77 = load %"class.webrtc::EchoControlMobileImpl::Canceller"*, %"class.webrtc::EchoControlMobileImpl::Canceller"** %76, align 8
  %78 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl::Canceller", %"class.webrtc::EchoControlMobileImpl::Canceller"* %77, i64 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = load i64, i64* %15, align 8
  %81 = call i32 @WebRtcAecm_Process(i8* %79, i16* %60, i16* %61, i16* %58, i64 %80, i16 signext %18) #10
  br i1 %67, label %97, label %82

82:                                               ; preds = %72
  %83 = load i64, i64* %15, align 8
  %84 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %13, align 8
  %85 = icmp eq %"class.webrtc::ChannelBuffer"* %84, null
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  %87 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %14, align 8
  br label %88

88:                                               ; preds = %82, %86
  %89 = phi %"class.webrtc::ChannelBuffer"* [ %87, %86 ], [ %84, %82 ]
  %90 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %89, i64 0, i32 7
  %91 = load i64, i64* %90, align 8
  %92 = mul i64 %91, %21
  %93 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %89, i64 0, i32 2, i32 0, i32 0, i32 0
  %94 = load float**, float*** %93, align 8
  %95 = getelementptr inbounds float*, float** %94, i64 %92
  %96 = load float*, float** %95, align 8
  call void @_ZN6webrtc13S16ToFloatS16EPKsmPf(i16* nonnull %58, i64 %83, float* %96) #10
  br label %97

97:                                               ; preds = %72, %88
  switch i32 %81, label %135 [
    i32 0, label %98
    i32 12001, label %131
    i32 12003, label %132
    i32 12004, label %133
    i32 12100, label %134
  ]

98:                                               ; preds = %97
  %99 = add i64 %74, 1
  %100 = add nuw i64 %73, 1
  %101 = load %"struct.webrtc::EchoControlMobileImpl::StreamProperties"*, %"struct.webrtc::EchoControlMobileImpl::StreamProperties"** %16, align 8
  %102 = getelementptr inbounds %"struct.webrtc::EchoControlMobileImpl::StreamProperties", %"struct.webrtc::EchoControlMobileImpl::StreamProperties"* %101, i64 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = icmp ult i64 %100, %103
  br i1 %104, label %72, label %68

105:                                              ; preds = %68, %111
  %106 = phi i64 [ %124, %111 ], [ 1, %68 ]
  %107 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %13, align 8
  %108 = icmp eq %"class.webrtc::ChannelBuffer"* %107, null
  br i1 %108, label %109, label %111

109:                                              ; preds = %105
  %110 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %14, align 8
  br label %111

111:                                              ; preds = %105, %109
  %112 = phi %"class.webrtc::ChannelBuffer"* [ %110, %109 ], [ %107, %105 ]
  %113 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %112, i64 0, i32 7
  %114 = load i64, i64* %113, align 8
  %115 = mul i64 %114, %21
  %116 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %112, i64 0, i32 2, i32 0, i32 0, i32 0
  %117 = load float**, float*** %116, align 8
  %118 = getelementptr inbounds float*, float** %117, i64 %115
  %119 = getelementptr inbounds float*, float** %118, i64 %106
  %120 = bitcast float** %119 to i8**
  %121 = load i8*, i8** %120, align 8
  %122 = load i64, i64* %15, align 8
  %123 = shl i64 %122, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %121, i8 0, i64 %123, i1 false)
  %124 = add nuw i64 %106, 1
  %125 = load i64, i64* %19, align 8
  %126 = icmp ult i64 %124, %125
  br i1 %126, label %105, label %127

127:                                              ; preds = %111, %68
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %11) #10
  %128 = add nuw i64 %21, 1
  %129 = load i64, i64* %5, align 8
  %130 = icmp ult i64 %128, %129
  br i1 %130, label %20, label %137

131:                                              ; preds = %97
  br label %135

132:                                              ; preds = %97
  br label %135

133:                                              ; preds = %97
  br label %135

134:                                              ; preds = %97
  br label %135

135:                                              ; preds = %97, %134, %133, %132, %131
  %136 = phi i32 [ -4, %131 ], [ -5, %132 ], [ -6, %133 ], [ -13, %134 ], [ -1, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %11) #10
  br label %137

137:                                              ; preds = %127, %3, %135
  %138 = phi i32 [ %136, %135 ], [ 0, %3 ], [ 0, %127 ]
  ret i32 %138
}

declare i32 @WebRtcAecm_Process(i8*, i16*, i16*, i16*, i64, i16 signext) local_unnamed_addr #2

declare void @_ZN6webrtc13S16ToFloatS16EPKsmPf(i16*, i64, float*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc21EchoControlMobileImpl16set_routing_modeENS0_11RoutingModeE(%"class.webrtc::EchoControlMobileImpl"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %7, %9
  br i1 %10, label %29, label %11

11:                                               ; preds = %4
  %12 = shl i32 %1, 16
  %13 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 1
  %14 = load i8, i8* %13, align 4, !range !30
  %15 = zext i8 %14 to i32
  %16 = or i32 %12, %15
  br label %17

17:                                               ; preds = %17, %11
  %18 = phi i32 [ 0, %11 ], [ %26, %17 ]
  %19 = phi %"class.std::__1::unique_ptr"* [ %7, %11 ], [ %27, %17 ]
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.webrtc::EchoControlMobileImpl::Canceller"*, %"class.webrtc::EchoControlMobileImpl::Canceller"** %20, align 8
  %22 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl::Canceller", %"class.webrtc::EchoControlMobileImpl::Canceller"* %21, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = tail call i32 @WebRtcAecm_set_config(i8* %23, i32 %16) #10
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %25, i32 %18, i32 %24
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 1
  %28 = icmp eq %"class.std::__1::unique_ptr"* %27, %9
  br i1 %28, label %29, label %17

29:                                               ; preds = %17, %2, %4
  %30 = phi i32 [ -6, %2 ], [ 0, %4 ], [ %26, %17 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc21EchoControlMobileImpl9ConfigureEv(%"class.webrtc::EchoControlMobileImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr"* %5, %7
  br i1 %8, label %17, label %9

9:                                                ; preds = %1
  %10 = icmp ult i32 %3, 5
  %11 = shl i32 %3, 16
  %12 = select i1 %10, i32 %11, i32 -65536
  %13 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 1
  %14 = load i8, i8* %13, align 4, !range !30
  %15 = zext i8 %14 to i32
  %16 = or i32 %12, %15
  br label %19

17:                                               ; preds = %19, %1
  %18 = phi i32 [ 0, %1 ], [ %28, %19 ]
  ret i32 %18

19:                                               ; preds = %9, %19
  %20 = phi i32 [ 0, %9 ], [ %28, %19 ]
  %21 = phi %"class.std::__1::unique_ptr"* [ %5, %9 ], [ %29, %19 ]
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.webrtc::EchoControlMobileImpl::Canceller"*, %"class.webrtc::EchoControlMobileImpl::Canceller"** %22, align 8
  %24 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl::Canceller", %"class.webrtc::EchoControlMobileImpl::Canceller"* %23, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = tail call i32 @WebRtcAecm_set_config(i8* %25, i32 %16) #10
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i32 %20, i32 %26
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 1
  %30 = icmp eq %"class.std::__1::unique_ptr"* %29, %7
  br i1 %30, label %17, label %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6webrtc21EchoControlMobileImpl12routing_modeEv(%"class.webrtc::EchoControlMobileImpl"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc21EchoControlMobileImpl20enable_comfort_noiseEb(%"class.webrtc::EchoControlMobileImpl"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 1
  store i8 %3, i8* %4, align 4
  %5 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %8, %10
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = icmp ult i32 %6, 5
  %14 = shl i32 %6, 16
  %15 = select i1 %13, i32 %14, i32 -65536
  %16 = zext i1 %1 to i32
  %17 = or i32 %15, %16
  br label %18

18:                                               ; preds = %18, %12
  %19 = phi i32 [ 0, %12 ], [ %27, %18 ]
  %20 = phi %"class.std::__1::unique_ptr"* [ %8, %12 ], [ %28, %18 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.webrtc::EchoControlMobileImpl::Canceller"*, %"class.webrtc::EchoControlMobileImpl::Canceller"** %21, align 8
  %23 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl::Canceller", %"class.webrtc::EchoControlMobileImpl::Canceller"* %22, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = tail call i32 @WebRtcAecm_set_config(i8* %24, i32 %17) #10
  %26 = icmp eq i32 %25, 0
  %27 = select i1 %26, i32 %19, i32 %25
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 1
  %29 = icmp eq %"class.std::__1::unique_ptr"* %28, %10
  br i1 %29, label %30, label %18

30:                                               ; preds = %18, %2
  %31 = phi i32 [ 0, %2 ], [ %27, %18 ]
  ret i32 %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc21EchoControlMobileImpl24is_comfort_noise_enabledEv(%"class.webrtc::EchoControlMobileImpl"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4, !range !30
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21EchoControlMobileImpl10InitializeEimm(%"class.webrtc::EchoControlMobileImpl"*, i32, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 5, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::array"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.10"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 320
  %13 = icmp ult i64 %12, %3
  %14 = inttoptr i64 %10 to %"struct.std::__1::array"*
  br i1 %13, label %15, label %20

15:                                               ; preds = %4
  %16 = sub i64 %3, %12
  tail call void @_ZNSt3__16vectorINS_5arrayIsLm160EEENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.10"* %5, i64 %16) #10
  %17 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %5, i64 0, i32 0, i32 0
  %18 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %17, align 8
  %19 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %6, align 8
  br label %25

20:                                               ; preds = %4
  %21 = inttoptr i64 %8 to %"struct.std::__1::array"*
  %22 = icmp ugt i64 %12, %3
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 %3
  store %"struct.std::__1::array"* %24, %"struct.std::__1::array"** %6, align 8
  br label %25

25:                                               ; preds = %15, %20, %23
  %26 = phi %"struct.std::__1::array"* [ %19, %15 ], [ %21, %20 ], [ %24, %23 ]
  %27 = phi %"struct.std::__1::array"* [ %18, %15 ], [ %14, %20 ], [ %14, %23 ]
  %28 = icmp eq %"struct.std::__1::array"* %27, %26
  br i1 %28, label %38, label %29

29:                                               ; preds = %25
  %30 = bitcast %"struct.std::__1::array"* %27 to i8*
  %31 = ptrtoint %"struct.std::__1::array"* %27 to i64
  %32 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %26, i64 -1, i32 0, i64 0
  %33 = ptrtoint i16* %32 to i64
  %34 = sub i64 %33, %31
  %35 = urem i64 %34, 320
  %36 = sub i64 %34, %35
  %37 = add i64 %36, 320
  call void @llvm.memset.p0i8.i64(i8* align 2 %30, i8 0, i64 %37, i1 false)
  br label %38

38:                                               ; preds = %29, %25
  %39 = tail call i8* @_Znwm(i64 24) #9
  %40 = bitcast i8* %39 to i32*
  store i32 %1, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %39, i64 8
  %42 = bitcast i8* %41 to i64*
  store i64 %2, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %39, i64 16
  %44 = bitcast i8* %43 to i64*
  store i64 %3, i64* %44, align 8
  %45 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"struct.webrtc::EchoControlMobileImpl::StreamProperties"*, %"struct.webrtc::EchoControlMobileImpl::StreamProperties"** %45, align 8
  %47 = bitcast %"struct.webrtc::EchoControlMobileImpl::StreamProperties"** %45 to i8**
  store i8* %39, i8** %47, align 8
  %48 = icmp eq %"struct.webrtc::EchoControlMobileImpl::StreamProperties"* %46, null
  %49 = bitcast i8* %39 to %"struct.webrtc::EchoControlMobileImpl::StreamProperties"*
  br i1 %48, label %53, label %50

50:                                               ; preds = %38
  %51 = bitcast %"struct.webrtc::EchoControlMobileImpl::StreamProperties"* %46 to i8*
  tail call void @_ZdlPv(i8* %51) #9
  %52 = load %"struct.webrtc::EchoControlMobileImpl::StreamProperties"*, %"struct.webrtc::EchoControlMobileImpl::StreamProperties"** %45, align 8
  br label %53

53:                                               ; preds = %38, %50
  %54 = phi %"struct.webrtc::EchoControlMobileImpl::StreamProperties"* [ %49, %38 ], [ %52, %50 ]
  %55 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 3
  %56 = getelementptr inbounds %"struct.webrtc::EchoControlMobileImpl::StreamProperties", %"struct.webrtc::EchoControlMobileImpl::StreamProperties"* %54, i64 0, i32 2
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.webrtc::EchoControlMobileImpl::StreamProperties", %"struct.webrtc::EchoControlMobileImpl::StreamProperties"* %54, i64 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = mul i64 %59, %57
  %61 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %62 = bitcast %"class.std::__1::unique_ptr"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.std::__1::vector"* %55 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = ashr exact i64 %66, 3
  %68 = icmp ugt i64 %60, %67
  %69 = inttoptr i64 %65 to %"class.std::__1::unique_ptr"*
  %70 = inttoptr i64 %63 to %"class.std::__1::unique_ptr"*
  br i1 %68, label %71, label %74

71:                                               ; preds = %53
  %72 = sub i64 %60, %67
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN6webrtc21EchoControlMobileImpl9CancellerENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE8__appendEm(%"class.std::__1::vector"* %55, i64 %72) #10
  %73 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %61, align 8
  br label %92

74:                                               ; preds = %53
  %75 = icmp ult i64 %60, %67
  br i1 %75, label %76, label %92

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 %60
  %78 = icmp eq %"class.std::__1::unique_ptr"* %77, %70
  br i1 %78, label %91, label %79

79:                                               ; preds = %76, %89
  %80 = phi %"class.std::__1::unique_ptr"* [ %81, %89 ], [ %70, %76 ]
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 -1
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.webrtc::EchoControlMobileImpl::Canceller"*, %"class.webrtc::EchoControlMobileImpl::Canceller"** %82, align 8
  store %"class.webrtc::EchoControlMobileImpl::Canceller"* null, %"class.webrtc::EchoControlMobileImpl::Canceller"** %82, align 8
  %84 = icmp eq %"class.webrtc::EchoControlMobileImpl::Canceller"* %83, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl::Canceller", %"class.webrtc::EchoControlMobileImpl::Canceller"* %83, i64 0, i32 0
  %87 = load i8*, i8** %86, align 8
  tail call void @WebRtcAecm_Free(i8* %87) #10
  %88 = bitcast %"class.webrtc::EchoControlMobileImpl::Canceller"* %83 to i8*
  tail call void @_ZdlPv(i8* %88) #9
  br label %89

89:                                               ; preds = %85, %79
  %90 = icmp eq %"class.std::__1::unique_ptr"* %81, %77
  br i1 %90, label %91, label %79

91:                                               ; preds = %89, %76
  store %"class.std::__1::unique_ptr"* %77, %"class.std::__1::unique_ptr"** %61, align 8
  br label %92

92:                                               ; preds = %71, %74, %91
  %93 = phi %"class.std::__1::unique_ptr"* [ %73, %71 ], [ %70, %74 ], [ %77, %91 ]
  %94 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %55, i64 0, i32 0, i32 0
  %95 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %94, align 8
  %96 = icmp eq %"class.std::__1::unique_ptr"* %95, %93
  br i1 %96, label %97, label %122

97:                                               ; preds = %143, %92
  %98 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %101 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %100, align 8
  %102 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %61, align 8
  %103 = icmp eq %"class.std::__1::unique_ptr"* %101, %102
  br i1 %103, label %121, label %104

104:                                              ; preds = %97
  %105 = icmp ult i32 %99, 5
  %106 = shl i32 %99, 16
  %107 = select i1 %105, i32 %106, i32 -65536
  %108 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl", %"class.webrtc::EchoControlMobileImpl"* %0, i64 0, i32 1
  %109 = load i8, i8* %108, align 4, !range !30
  %110 = zext i8 %109 to i32
  %111 = or i32 %107, %110
  br label %112

112:                                              ; preds = %112, %104
  %113 = phi %"class.std::__1::unique_ptr"* [ %101, %104 ], [ %119, %112 ]
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.webrtc::EchoControlMobileImpl::Canceller"*, %"class.webrtc::EchoControlMobileImpl::Canceller"** %114, align 8
  %116 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl::Canceller", %"class.webrtc::EchoControlMobileImpl::Canceller"* %115, i64 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = tail call i32 @WebRtcAecm_set_config(i8* %117, i32 %111) #10
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %113, i64 1
  %120 = icmp eq %"class.std::__1::unique_ptr"* %119, %102
  br i1 %120, label %121, label %112

121:                                              ; preds = %112, %97
  ret void

122:                                              ; preds = %92, %143
  %123 = phi %"class.std::__1::unique_ptr"* [ %148, %143 ], [ %95, %92 ]
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %123, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.webrtc::EchoControlMobileImpl::Canceller"*, %"class.webrtc::EchoControlMobileImpl::Canceller"** %124, align 8
  %126 = icmp eq %"class.webrtc::EchoControlMobileImpl::Canceller"* %125, null
  br i1 %126, label %127, label %143

127:                                              ; preds = %122
  %128 = tail call i8* @_Znwm(i64 8) #9
  %129 = tail call i8* @WebRtcAecm_Create() #10
  %130 = bitcast i8* %128 to i8**
  store i8* %129, i8** %130, align 8
  %131 = icmp eq i8* %129, null
  br i1 %131, label %132, label %133

132:                                              ; preds = %127
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t, i64 0, i64 0)) #11
  unreachable

133:                                              ; preds = %127
  %134 = load %"class.webrtc::EchoControlMobileImpl::Canceller"*, %"class.webrtc::EchoControlMobileImpl::Canceller"** %124, align 8
  %135 = bitcast %"class.std::__1::unique_ptr"* %123 to i8**
  store i8* %128, i8** %135, align 8
  %136 = icmp eq %"class.webrtc::EchoControlMobileImpl::Canceller"* %134, null
  %137 = bitcast i8* %128 to %"class.webrtc::EchoControlMobileImpl::Canceller"*
  br i1 %136, label %143, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl::Canceller", %"class.webrtc::EchoControlMobileImpl::Canceller"* %134, i64 0, i32 0
  %140 = load i8*, i8** %139, align 8
  tail call void @WebRtcAecm_Free(i8* %140) #10
  %141 = bitcast %"class.webrtc::EchoControlMobileImpl::Canceller"* %134 to i8*
  tail call void @_ZdlPv(i8* %141) #9
  %142 = load %"class.webrtc::EchoControlMobileImpl::Canceller"*, %"class.webrtc::EchoControlMobileImpl::Canceller"** %124, align 8
  br label %143

143:                                              ; preds = %122, %138, %133
  %144 = phi %"class.webrtc::EchoControlMobileImpl::Canceller"* [ %125, %122 ], [ %142, %138 ], [ %137, %133 ]
  %145 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl::Canceller", %"class.webrtc::EchoControlMobileImpl::Canceller"* %144, i64 0, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = tail call i32 @WebRtcAecm_Init(i8* %146, i32 %1) #10
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %123, i64 1
  %149 = icmp eq %"class.std::__1::unique_ptr"* %148, %93
  br i1 %149, label %97, label %122
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare i32 @WebRtcAecm_set_config(i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i8* @WebRtcAecm_Create() local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #6

declare i32 @WebRtcAecm_Init(i8*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_5arrayIsLm160EEENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.10"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::array"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::array"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 320
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.std::__1::array"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %13, i64 %18, i32 0, i64 0
  %20 = bitcast i16* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 320
  %25 = add i64 %23, 320
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %17, i8 0, i64 %26, i1 false) #10
  %27 = ptrtoint %"struct.std::__1::array"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %85

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.10"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 320
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 57646075230342348
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.10"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #11
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 320
  %42 = icmp ult i64 %41, 28823037615171174
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 57646075230342348, %39 ]
  %50 = mul i64 %49, 320
  %51 = tail call i8* @_Znwm(i64 %50) #9
  %52 = bitcast i8* %51 to %"struct.std::__1::array"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"struct.std::__1::array"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %55, i64 %34
  %57 = bitcast %"struct.std::__1::array"* %56 to i8*
  %58 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %56, i64 %1
  %60 = mul nsw i64 %1, 320
  %61 = add i64 %60, -320
  %62 = urem i64 %61, 320
  %63 = sub i64 %61, %62
  %64 = add i64 %63, 320
  call void @llvm.memset.p0i8.i64(i8* align 2 %57, i8 0, i64 %64, i1 false)
  %65 = ptrtoint %"struct.std::__1::array"* %58 to i64
  %66 = ptrtoint %"struct.std::__1::array"* %59 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 0
  %68 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %67, align 8
  %69 = load i64, i64* %7, align 8
  %70 = ptrtoint %"struct.std::__1::array"* %68 to i64
  %71 = sub i64 %69, %70
  %72 = sdiv exact i64 %71, -320
  %73 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %56, i64 %72
  %74 = ptrtoint %"struct.std::__1::array"* %73 to i64
  %75 = icmp sgt i64 %71, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %53
  %77 = bitcast %"struct.std::__1::array"* %73 to i8*
  %78 = bitcast %"struct.std::__1::array"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %77, i8* align 2 %78, i64 %71, i1 false) #10
  %79 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %67, align 8
  br label %80

80:                                               ; preds = %53, %76
  %81 = phi %"struct.std::__1::array"* [ %68, %53 ], [ %79, %76 ]
  store i64 %74, i64* %31, align 8
  store i64 %66, i64* %7, align 8
  store i64 %65, i64* %4, align 8
  %82 = icmp eq %"struct.std::__1::array"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = bitcast %"struct.std::__1::array"* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #9
  br label %85

85:                                               ; preds = %83, %80, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN6webrtc21EchoControlMobileImpl9CancellerENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::unique_ptr"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 %18, i32 0, i32 0, i32 0
  %20 = bitcast %"class.webrtc::EchoControlMobileImpl::Canceller"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #10
  %26 = ptrtoint %"class.std::__1::unique_ptr"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %216

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #11
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to %"class.std::__1::unique_ptr"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.std::__1::unique_ptr"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 %33
  %59 = ptrtoint %"class.std::__1::unique_ptr"* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 %56
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  %63 = add i64 %62, -8
  %64 = lshr exact i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"class.std::__1::unique_ptr"* [ %73, %68 ], [ %58, %55 ]
  %70 = phi i64 [ %74, %68 ], [ %59, %55 ]
  %71 = phi i64 [ %75, %68 ], [ %66, %55 ]
  %72 = inttoptr i64 %70 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 1
  %74 = ptrtoint %"class.std::__1::unique_ptr"* %73 to i64
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !31

77:                                               ; preds = %68
  %78 = ptrtoint %"class.std::__1::unique_ptr"* %73 to i64
  br label %79

79:                                               ; preds = %55, %77
  %80 = phi %"class.std::__1::unique_ptr"* [ %58, %55 ], [ %73, %77 ]
  %81 = phi i64 [ %59, %55 ], [ %78, %77 ]
  %82 = icmp ult i64 %63, 56
  br i1 %82, label %104, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"class.std::__1::unique_ptr"* [ %101, %83 ], [ %80, %79 ]
  %85 = phi i64 [ %102, %83 ], [ %81, %79 ]
  %86 = inttoptr i64 %85 to i64*
  store i64 0, i64* %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 1
  %88 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  store i64 0, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 2
  %90 = bitcast %"class.std::__1::unique_ptr"* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 3
  %92 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 4
  %94 = bitcast %"class.std::__1::unique_ptr"* %93 to i64*
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 5
  %96 = bitcast %"class.std::__1::unique_ptr"* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 6
  %98 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 7
  %100 = bitcast %"class.std::__1::unique_ptr"* %99 to i64*
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 8
  %102 = ptrtoint %"class.std::__1::unique_ptr"* %101 to i64
  %103 = icmp eq %"class.std::__1::unique_ptr"* %61, %101
  br i1 %103, label %104, label %83

104:                                              ; preds = %83, %79
  %105 = ptrtoint %"class.std::__1::unique_ptr"* %60 to i64
  %106 = ptrtoint %"class.std::__1::unique_ptr"* %61 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %108 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %107, align 8
  %109 = ptrtoint %"class.std::__1::unique_ptr"* %108 to i64
  %110 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %111 = icmp eq %"class.std::__1::unique_ptr"* %110, %108
  br i1 %111, label %194, label %112

112:                                              ; preds = %104
  %113 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 -1, i32 0, i32 0, i32 0
  %114 = ptrtoint %"class.webrtc::EchoControlMobileImpl::Canceller"** %113 to i64
  %115 = sub i64 %114, %109
  %116 = lshr i64 %115, 3
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 7
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %132, label %120

120:                                              ; preds = %112, %120
  %121 = phi %"class.std::__1::unique_ptr"* [ %124, %120 ], [ %58, %112 ]
  %122 = phi %"class.std::__1::unique_ptr"* [ %125, %120 ], [ %110, %112 ]
  %123 = phi i64 [ %130, %120 ], [ %118, %112 ]
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %121, i64 -1
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 -1
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  store %"class.webrtc::EchoControlMobileImpl::Canceller"* null, %"class.webrtc::EchoControlMobileImpl::Canceller"** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = add i64 %123, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !32

132:                                              ; preds = %120, %112
  %133 = phi %"class.std::__1::unique_ptr"* [ undef, %112 ], [ %124, %120 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %58, %112 ], [ %124, %120 ]
  %135 = phi %"class.std::__1::unique_ptr"* [ %110, %112 ], [ %125, %120 ]
  %136 = icmp ult i64 %115, 56
  br i1 %136, label %189, label %137

137:                                              ; preds = %132, %137
  %138 = phi %"class.std::__1::unique_ptr"* [ %182, %137 ], [ %134, %132 ]
  %139 = phi %"class.std::__1::unique_ptr"* [ %183, %137 ], [ %135, %132 ]
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %138, i64 -1
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %139, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::unique_ptr"* %141 to i64*
  %144 = load i64, i64* %143, align 8
  store %"class.webrtc::EchoControlMobileImpl::Canceller"* null, %"class.webrtc::EchoControlMobileImpl::Canceller"** %142, align 8
  %145 = bitcast %"class.std::__1::unique_ptr"* %140 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %138, i64 -2
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %139, i64 -2
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = bitcast %"class.std::__1::unique_ptr"* %147 to i64*
  %150 = load i64, i64* %149, align 8
  store %"class.webrtc::EchoControlMobileImpl::Canceller"* null, %"class.webrtc::EchoControlMobileImpl::Canceller"** %148, align 8
  %151 = bitcast %"class.std::__1::unique_ptr"* %146 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %138, i64 -3
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %139, i64 -3
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = bitcast %"class.std::__1::unique_ptr"* %153 to i64*
  %156 = load i64, i64* %155, align 8
  store %"class.webrtc::EchoControlMobileImpl::Canceller"* null, %"class.webrtc::EchoControlMobileImpl::Canceller"** %154, align 8
  %157 = bitcast %"class.std::__1::unique_ptr"* %152 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %138, i64 -4
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %139, i64 -4
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.std::__1::unique_ptr"* %159 to i64*
  %162 = load i64, i64* %161, align 8
  store %"class.webrtc::EchoControlMobileImpl::Canceller"* null, %"class.webrtc::EchoControlMobileImpl::Canceller"** %160, align 8
  %163 = bitcast %"class.std::__1::unique_ptr"* %158 to i64*
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %138, i64 -5
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %139, i64 -5
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %165, i64 0, i32 0, i32 0, i32 0
  %167 = bitcast %"class.std::__1::unique_ptr"* %165 to i64*
  %168 = load i64, i64* %167, align 8
  store %"class.webrtc::EchoControlMobileImpl::Canceller"* null, %"class.webrtc::EchoControlMobileImpl::Canceller"** %166, align 8
  %169 = bitcast %"class.std::__1::unique_ptr"* %164 to i64*
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %138, i64 -6
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %139, i64 -6
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %171, i64 0, i32 0, i32 0, i32 0
  %173 = bitcast %"class.std::__1::unique_ptr"* %171 to i64*
  %174 = load i64, i64* %173, align 8
  store %"class.webrtc::EchoControlMobileImpl::Canceller"* null, %"class.webrtc::EchoControlMobileImpl::Canceller"** %172, align 8
  %175 = bitcast %"class.std::__1::unique_ptr"* %170 to i64*
  store i64 %174, i64* %175, align 8
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %138, i64 -7
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %139, i64 -7
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = bitcast %"class.std::__1::unique_ptr"* %177 to i64*
  %180 = load i64, i64* %179, align 8
  store %"class.webrtc::EchoControlMobileImpl::Canceller"* null, %"class.webrtc::EchoControlMobileImpl::Canceller"** %178, align 8
  %181 = bitcast %"class.std::__1::unique_ptr"* %176 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %138, i64 -8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %139, i64 -8
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.std::__1::unique_ptr"* %183 to i64*
  %186 = load i64, i64* %185, align 8
  store %"class.webrtc::EchoControlMobileImpl::Canceller"* null, %"class.webrtc::EchoControlMobileImpl::Canceller"** %184, align 8
  %187 = bitcast %"class.std::__1::unique_ptr"* %182 to i64*
  store i64 %186, i64* %187, align 8
  %188 = icmp eq %"class.std::__1::unique_ptr"* %183, %108
  br i1 %188, label %189, label %137

189:                                              ; preds = %137, %132
  %190 = phi %"class.std::__1::unique_ptr"* [ %133, %132 ], [ %182, %137 ]
  %191 = ptrtoint %"class.std::__1::unique_ptr"* %190 to i64
  %192 = load i64, i64* %30, align 8
  %193 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  br label %194

194:                                              ; preds = %104, %189
  %195 = phi %"class.std::__1::unique_ptr"* [ %193, %189 ], [ %108, %104 ]
  %196 = phi i64 [ %191, %189 ], [ %59, %104 ]
  %197 = phi i64 [ %192, %189 ], [ %109, %104 ]
  store i64 %196, i64* %30, align 8
  store i64 %106, i64* %7, align 8
  store i64 %105, i64* %4, align 8
  %198 = inttoptr i64 %197 to %"class.std::__1::unique_ptr"*
  %199 = icmp eq %"class.std::__1::unique_ptr"* %195, %198
  br i1 %199, label %212, label %200

200:                                              ; preds = %194, %210
  %201 = phi %"class.std::__1::unique_ptr"* [ %202, %210 ], [ %195, %194 ]
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %201, i64 -1
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %202, i64 0, i32 0, i32 0, i32 0
  %204 = load %"class.webrtc::EchoControlMobileImpl::Canceller"*, %"class.webrtc::EchoControlMobileImpl::Canceller"** %203, align 8
  store %"class.webrtc::EchoControlMobileImpl::Canceller"* null, %"class.webrtc::EchoControlMobileImpl::Canceller"** %203, align 8
  %205 = icmp eq %"class.webrtc::EchoControlMobileImpl::Canceller"* %204, null
  br i1 %205, label %210, label %206

206:                                              ; preds = %200
  %207 = getelementptr inbounds %"class.webrtc::EchoControlMobileImpl::Canceller", %"class.webrtc::EchoControlMobileImpl::Canceller"* %204, i64 0, i32 0
  %208 = load i8*, i8** %207, align 8
  tail call void @WebRtcAecm_Free(i8* %208) #10
  %209 = bitcast %"class.webrtc::EchoControlMobileImpl::Canceller"* %204 to i8*
  tail call void @_ZdlPv(i8* %209) #9
  br label %210

210:                                              ; preds = %206, %200
  %211 = icmp eq %"class.std::__1::unique_ptr"* %202, %198
  br i1 %211, label %212, label %200

212:                                              ; preds = %210, %194
  %213 = icmp eq i64 %197, 0
  br i1 %213, label %216, label %214

214:                                              ; preds = %212
  %215 = inttoptr i64 %197 to i8*
  tail call void @_ZdlPv(i8* %215) #9
  br label %216

216:                                              ; preds = %214, %212, %27
  ret void
}

declare void @WebRtcAecm_Free(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !8}
!18 = distinct !{!18, !10}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !8}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !8}
!27 = distinct !{!27, !10}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !8}
!30 = !{i8 0, i8 2}
!31 = distinct !{!31, !10}
!32 = distinct !{!32, !10}
