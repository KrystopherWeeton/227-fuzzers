; ModuleID = '../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/regexec.c'
source_filename = "../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/regexec.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.llvm_regex = type { i32, i64, i8*, %struct.re_guts* }
%struct.re_guts = type { i32, i64*, i32, i32, %struct.cset*, i8*, i32, i64, i64, i64, i32, i32, i32, i32, i8*, i8*, i32, i64, i32, i64, [1 x i8] }
%struct.cset = type { i8*, i8, i8, i64, i8* }
%struct.llvm_regmatch_t = type { i64, i64 }
%struct.lmat = type { %struct.re_guts*, i32, %struct.llvm_regmatch_t*, i8*, i8*, i8*, i8*, i8**, i64, i8*, i8*, i8*, i8*, i8* }
%struct.smat = type { %struct.re_guts*, i32, %struct.llvm_regmatch_t*, i8*, i8*, i8*, i8*, i8**, i64, i64, i64, i64, i64 }

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @llvm_regexec(%struct.llvm_regex* nocapture readonly, i8*, i64, %struct.llvm_regmatch_t* nocapture, i32) local_unnamed_addr #0 {
  %6 = alloca %struct.lmat, align 8
  %7 = alloca %struct.smat, align 8
  %8 = getelementptr inbounds %struct.llvm_regex, %struct.llvm_regex* %0, i64 0, i32 3
  %9 = load %struct.re_guts*, %struct.re_guts** %8, align 8
  %10 = getelementptr inbounds %struct.llvm_regex, %struct.llvm_regex* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 62053
  br i1 %12, label %13, label %811

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 53829
  br i1 %16, label %17, label %811

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 10
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %811

22:                                               ; preds = %17
  %23 = and i32 %4, 7
  %24 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 7
  %25 = load i64, i64* %24, align 8
  %26 = icmp slt i64 %25, 65
  br i1 %26, label %27, label %392

27:                                               ; preds = %22
  %28 = bitcast %struct.smat* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 104, i1 false) #11
  %29 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 8
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i64 %30, 1
  %32 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 9
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 6
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 4
  %37 = icmp eq i32 %36, 0
  %38 = select i1 %37, i64 %2, i64 0
  %39 = and i32 %4, 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %27
  %42 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %3, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds i8, i8* %1, i64 %43
  %45 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %3, i64 0, i32 1
  %46 = load i64, i64* %45, align 8
  br label %49

47:                                               ; preds = %27
  %48 = tail call i64 @strlen(i8* %1) #12
  br label %49

49:                                               ; preds = %47, %41
  %50 = phi i8* [ %44, %41 ], [ %1, %47 ]
  %51 = phi i64 [ %46, %41 ], [ %48, %47 ]
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = icmp ult i8* %52, %50
  br i1 %53, label %390, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 15
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %83, label %58

58:                                               ; preds = %54
  %59 = icmp ult i8* %50, %52
  br i1 %59, label %60, label %80

60:                                               ; preds = %58
  %61 = load i8, i8* %56, align 1
  %62 = ptrtoint i8* %52 to i64
  %63 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 16
  br label %64

64:                                               ; preds = %77, %60
  %65 = phi i8* [ %50, %60 ], [ %78, %77 ]
  %66 = load i8, i8* %65, align 1
  %67 = icmp eq i8 %66, %61
  br i1 %67, label %68, label %77

68:                                               ; preds = %64
  %69 = ptrtoint i8* %65 to i64
  %70 = sub i64 %62, %69
  %71 = load i32, i32* %63, align 8
  %72 = sext i32 %71 to i64
  %73 = icmp slt i64 %70, %72
  br i1 %73, label %77, label %74

74:                                               ; preds = %68
  %75 = tail call i32 @bcmp(i8* %65, i8* nonnull %56, i64 %72) #11
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %74, %68, %64
  %78 = getelementptr inbounds i8, i8* %65, i64 1
  %79 = icmp eq i8* %78, %52
  br i1 %79, label %390, label %64

80:                                               ; preds = %74, %58
  %81 = phi i8* [ %50, %58 ], [ %65, %74 ]
  %82 = icmp eq i8* %81, %52
  br i1 %82, label %390, label %83

83:                                               ; preds = %80, %54
  %84 = getelementptr inbounds %struct.smat, %struct.smat* %7, i64 0, i32 0
  store %struct.re_guts* %9, %struct.re_guts** %84, align 8
  %85 = getelementptr inbounds %struct.smat, %struct.smat* %7, i64 0, i32 1
  store i32 %23, i32* %85, align 8
  %86 = getelementptr inbounds %struct.smat, %struct.smat* %7, i64 0, i32 2
  store %struct.llvm_regmatch_t* null, %struct.llvm_regmatch_t** %86, align 8
  %87 = getelementptr inbounds %struct.smat, %struct.smat* %7, i64 0, i32 7
  store i8** null, i8*** %87, align 8
  %88 = getelementptr inbounds %struct.smat, %struct.smat* %7, i64 0, i32 3
  store i8* %1, i8** %88, align 8
  %89 = getelementptr inbounds %struct.smat, %struct.smat* %7, i64 0, i32 4
  store i8* %50, i8** %89, align 8
  %90 = getelementptr inbounds %struct.smat, %struct.smat* %7, i64 0, i32 5
  store i8* %52, i8** %90, align 8
  %91 = getelementptr inbounds %struct.smat, %struct.smat* %7, i64 0, i32 9
  %92 = shl i64 1, %31
  %93 = shl i64 1, %33
  %94 = getelementptr inbounds %struct.smat, %struct.smat* %7, i64 0, i32 6
  %95 = icmp eq i64 %38, 0
  %96 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 18
  %97 = icmp eq i64 %38, 1
  %98 = bitcast %struct.llvm_regmatch_t** %86 to i8**
  %99 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 19
  %100 = bitcast i8*** %87 to i8**
  %101 = bitcast i64* %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 32, i1 false) #11
  br label %102

102:                                              ; preds = %347, %83
  %103 = phi i8* [ %50, %83 ], [ %349, %347 ]
  %104 = phi i8* [ %50, %83 ], [ %348, %347 ]
  %105 = icmp eq i8* %103, %104
  br i1 %105, label %110, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds i8, i8* %104, i64 -1
  %108 = load i8, i8* %107, align 1
  %109 = sext i8 %108 to i32
  br label %110

110:                                              ; preds = %106, %102
  %111 = phi i32 [ %109, %106 ], [ 128, %102 ]
  %112 = load %struct.re_guts*, %struct.re_guts** %84, align 8
  %113 = call fastcc i64 @sstep(%struct.re_guts* %112, i64 %31, i64 %33, i64 %92, i32 132, i64 %92) #13
  %114 = load i8*, i8** %90, align 8
  %115 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %112, i64 0, i32 6
  %116 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %112, i64 0, i32 11
  %117 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %112, i64 0, i32 12
  %118 = load i32, i32* %85, align 8
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = and i32 %118, 2
  %122 = icmp eq i32 %121, 0
  br label %123

123:                                              ; preds = %244, %110
  %124 = phi i64 [ %113, %110 ], [ %245, %244 ]
  %125 = phi i8* [ %104, %110 ], [ %246, %244 ]
  %126 = phi i32 [ %111, %110 ], [ %133, %244 ]
  %127 = phi i8* [ null, %110 ], [ %135, %244 ]
  %128 = icmp eq i8* %125, %114
  br i1 %128, label %132, label %129

129:                                              ; preds = %123
  %130 = load i8, i8* %125, align 1
  %131 = sext i8 %130 to i32
  br label %132

132:                                              ; preds = %129, %123
  %133 = phi i32 [ %131, %129 ], [ 128, %123 ]
  %134 = icmp eq i64 %124, %113
  %135 = select i1 %134, i8* %125, i8* %127
  switch i32 %126, label %143 [
    i32 10, label %136
    i32 128, label %140
  ]

136:                                              ; preds = %132
  %137 = load i32, i32* %115, align 8
  %138 = and i32 %137, 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %143, label %141

140:                                              ; preds = %132
  br i1 %120, label %141, label %143

141:                                              ; preds = %140, %136
  %142 = load i32, i32* %116, align 4
  br label %143

143:                                              ; preds = %141, %140, %136, %132
  %144 = phi i32 [ 129, %141 ], [ 0, %140 ], [ 0, %132 ], [ 0, %136 ]
  %145 = phi i32 [ %142, %141 ], [ 0, %140 ], [ 0, %132 ], [ 0, %136 ]
  switch i32 %133, label %156 [
    i32 10, label %146
    i32 128, label %150
  ]

146:                                              ; preds = %143
  %147 = load i32, i32* %115, align 8
  %148 = and i32 %147, 8
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %156, label %151

150:                                              ; preds = %143
  br i1 %122, label %151, label %156

151:                                              ; preds = %150, %146
  %152 = icmp eq i32 %144, 129
  %153 = select i1 %152, i32 131, i32 130
  %154 = load i32, i32* %117, align 8
  %155 = add nsw i32 %154, %145
  br label %156

156:                                              ; preds = %151, %150, %146, %143
  %157 = phi i32 [ %153, %151 ], [ %144, %150 ], [ %144, %143 ], [ %144, %146 ]
  %158 = phi i32 [ %155, %151 ], [ %145, %150 ], [ %145, %143 ], [ %145, %146 ]
  %159 = icmp sgt i32 %158, 0
  br i1 %159, label %160, label %166

160:                                              ; preds = %156, %160
  %161 = phi i32 [ %164, %160 ], [ %158, %156 ]
  %162 = phi i64 [ %163, %160 ], [ %124, %156 ]
  %163 = call fastcc i64 @sstep(%struct.re_guts* %112, i64 %31, i64 %33, i64 %162, i32 %157, i64 %162) #13
  %164 = add nsw i32 %161, -1
  %165 = icmp sgt i32 %164, 0
  br i1 %165, label %160, label %166

166:                                              ; preds = %160, %156
  %167 = phi i64 [ %124, %156 ], [ %163, %160 ]
  %168 = icmp eq i32 %157, 129
  br i1 %168, label %184, label %169

169:                                              ; preds = %166
  %170 = icmp eq i32 %126, 128
  br i1 %170, label %231, label %171

171:                                              ; preds = %169
  %172 = tail call i16** @__ctype_b_loc() #14
  %173 = load i16*, i16** %172, align 8
  %174 = and i32 %126, 255
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds i16, i16* %173, i64 %175
  %177 = load i16, i16* %176, align 2
  %178 = and i16 %177, 8
  %179 = icmp ne i16 %178, 0
  %180 = icmp eq i32 %126, 95
  %181 = or i1 %180, %179
  %182 = icmp eq i32 %133, 128
  %183 = or i1 %182, %181
  br i1 %183, label %211, label %189

184:                                              ; preds = %166
  %185 = icmp eq i32 %133, 128
  br i1 %185, label %200, label %186

186:                                              ; preds = %184
  %187 = tail call i16** @__ctype_b_loc() #14
  %188 = load i16*, i16** %187, align 8
  br label %189

189:                                              ; preds = %186, %171
  %190 = phi i16* [ %188, %186 ], [ %173, %171 ]
  %191 = and i32 %133, 255
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds i16, i16* %190, i64 %192
  %194 = load i16, i16* %193, align 2
  %195 = and i16 %194, 8
  %196 = icmp ne i16 %195, 0
  %197 = icmp eq i32 %133, 95
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 133, i32 %157
  br label %200

200:                                              ; preds = %189, %184
  %201 = phi i32 [ 129, %184 ], [ %199, %189 ]
  %202 = icmp eq i32 %126, 128
  br i1 %202, label %231, label %203

203:                                              ; preds = %200
  %204 = tail call i16** @__ctype_b_loc() #14
  %205 = and i32 %126, 255
  %206 = zext i32 %205 to i64
  %207 = load i16*, i16** %204, align 8
  %208 = getelementptr inbounds i16, i16* %207, i64 %206
  %209 = load i16, i16* %208, align 2
  %210 = and i16 %209, 8
  br label %211

211:                                              ; preds = %203, %171
  %212 = phi i16 [ %210, %203 ], [ %178, %171 ]
  %213 = phi i16* [ %207, %203 ], [ %173, %171 ]
  %214 = phi i32 [ %201, %203 ], [ %157, %171 ]
  %215 = icmp ne i16 %212, 0
  %216 = icmp eq i32 %126, 95
  %217 = or i1 %216, %215
  br i1 %217, label %218, label %231

218:                                              ; preds = %211
  %219 = icmp eq i32 %214, 130
  br i1 %219, label %235, label %220

220:                                              ; preds = %218
  %221 = icmp eq i32 %133, 128
  br i1 %221, label %231, label %222

222:                                              ; preds = %220
  %223 = and i32 %133, 255
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds i16, i16* %213, i64 %224
  %226 = load i16, i16* %225, align 2
  %227 = and i16 %226, 8
  %228 = icmp ne i16 %227, 0
  %229 = icmp eq i32 %133, 95
  %230 = or i1 %229, %228
  br i1 %230, label %231, label %235

231:                                              ; preds = %222, %220, %211, %200, %169
  %232 = phi i32 [ %214, %222 ], [ %214, %220 ], [ %214, %211 ], [ %201, %200 ], [ %157, %169 ]
  %233 = add i32 %232, -133
  %234 = icmp ult i32 %233, 2
  br i1 %234, label %235, label %238

235:                                              ; preds = %231, %222, %218
  %236 = phi i32 [ %232, %231 ], [ 134, %218 ], [ 134, %222 ]
  %237 = call fastcc i64 @sstep(%struct.re_guts* %112, i64 %31, i64 %33, i64 %167, i32 %236, i64 %167) #13
  br label %238

238:                                              ; preds = %235, %231
  %239 = phi i64 [ %237, %235 ], [ %167, %231 ]
  %240 = and i64 %239, %93
  %241 = icmp ne i64 %240, 0
  %242 = icmp eq i8* %125, %52
  %243 = or i1 %242, %241
  br i1 %243, label %247, label %244

244:                                              ; preds = %238
  %245 = call fastcc i64 @sstep(%struct.re_guts* %112, i64 %31, i64 %33, i64 %239, i32 %133, i64 %113) #13
  %246 = getelementptr inbounds i8, i8* %125, i64 1
  br label %123

247:                                              ; preds = %238
  store i8* %135, i8** %94, align 8
  br i1 %241, label %251, label %248

248:                                              ; preds = %247
  %249 = load i8*, i8** %98, align 8
  call void @free(i8* %249) #13
  %250 = load i8*, i8** %100, align 8
  call void @free(i8* %250) #13
  br label %390

251:                                              ; preds = %247
  br i1 %95, label %252, label %255

252:                                              ; preds = %251
  %253 = load i32, i32* %96, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %380, label %255

255:                                              ; preds = %252, %251
  %256 = call fastcc i8* @sslow(%struct.smat* nonnull %7, i8* %135, i8* %52, i64 %31, i64 %33) #13
  %257 = icmp eq i8* %256, null
  br i1 %257, label %258, label %263

258:                                              ; preds = %255, %258
  %259 = phi i8* [ %260, %258 ], [ %135, %255 ]
  %260 = getelementptr inbounds i8, i8* %259, i64 1
  store i8* %260, i8** %94, align 8
  %261 = call fastcc i8* @sslow(%struct.smat* nonnull %7, i8* %260, i8* %52, i64 %31, i64 %33) #13
  %262 = icmp eq i8* %261, null
  br i1 %262, label %258, label %263

263:                                              ; preds = %258, %255
  %264 = phi i8* [ %256, %255 ], [ %261, %258 ]
  br i1 %97, label %265, label %268

265:                                              ; preds = %263
  %266 = load i32, i32* %96, align 8
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %350, label %268

268:                                              ; preds = %265, %263
  %269 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %86, align 8
  %270 = icmp eq %struct.llvm_regmatch_t* %269, null
  br i1 %270, label %271, label %279

271:                                              ; preds = %268
  %272 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %112, i64 0, i32 17
  %273 = load i64, i64* %272, align 8
  %274 = shl i64 %273, 4
  %275 = add i64 %274, 16
  %276 = call noalias i8* @malloc(i64 %275) #13
  store i8* %276, i8** %98, align 8
  %277 = bitcast i8* %276 to %struct.llvm_regmatch_t*
  %278 = icmp eq i8* %276, null
  br i1 %278, label %390, label %279

279:                                              ; preds = %271, %268
  %280 = phi %struct.llvm_regmatch_t* [ %277, %271 ], [ %269, %268 ]
  %281 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %112, i64 0, i32 17
  %282 = load i64, i64* %281, align 8
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %300, label %284

284:                                              ; preds = %279
  %285 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %280, i64 1, i32 0
  %286 = bitcast i64* %285 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 -1>, <2 x i64>* %286, align 8
  %287 = load i64, i64* %281, align 8
  %288 = icmp ult i64 %287, 2
  br i1 %288, label %300, label %289

289:                                              ; preds = %284, %289
  %290 = phi i64 [ %295, %289 ], [ 2, %284 ]
  %291 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %86, align 8
  %292 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %291, i64 %290, i32 1
  store i64 -1, i64* %292, align 8
  %293 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %86, align 8
  %294 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %293, i64 %290, i32 0
  store i64 -1, i64* %294, align 8
  %295 = add i64 %290, 1
  %296 = load %struct.re_guts*, %struct.re_guts** %84, align 8
  %297 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %296, i64 0, i32 17
  %298 = load i64, i64* %297, align 8
  %299 = icmp ugt i64 %295, %298
  br i1 %299, label %300, label %289

300:                                              ; preds = %289, %284, %279
  %301 = load i32, i32* %96, align 8
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %310

303:                                              ; preds = %300
  %304 = load i32, i32* %85, align 8
  %305 = and i32 %304, 1024
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %303
  %308 = load i8*, i8** %94, align 8
  %309 = call fastcc i8* @sdissect(%struct.smat* nonnull %7, i8* %308, i8* nonnull %264, i64 %31, i64 %33) #13
  br label %330

310:                                              ; preds = %303, %300
  %311 = load i64, i64* %99, align 8
  %312 = icmp sgt i64 %311, 0
  %313 = load i8**, i8*** %87, align 8
  %314 = icmp eq i8** %313, null
  %315 = and i1 %312, %314
  br i1 %315, label %316, label %321

316:                                              ; preds = %310
  %317 = shl i64 %311, 3
  %318 = add i64 %317, 8
  %319 = call noalias i8* @malloc(i64 %318) #13
  store i8* %319, i8** %100, align 8
  %320 = bitcast i8* %319 to i8**
  br label %321

321:                                              ; preds = %316, %310
  %322 = phi i8** [ %320, %316 ], [ %313, %310 ]
  %323 = icmp eq i8** %322, null
  %324 = and i1 %312, %323
  br i1 %324, label %325, label %327

325:                                              ; preds = %321
  %326 = load i8*, i8** %98, align 8
  call void @free(i8* %326) #13
  br label %390

327:                                              ; preds = %321
  %328 = load i8*, i8** %94, align 8
  %329 = call fastcc i8* @sbackref(%struct.smat* nonnull %7, i8* %328, i8* nonnull %264, i64 %31, i64 %33, i64 0, i32 0) #13
  br label %330

330:                                              ; preds = %327, %307
  %331 = phi i8* [ %329, %327 ], [ %309, %307 ]
  %332 = icmp eq i8* %331, null
  br i1 %332, label %333, label %350

333:                                              ; preds = %330, %341
  %334 = phi i8* [ %339, %341 ], [ %264, %330 ]
  %335 = load i8*, i8** %94, align 8
  %336 = icmp ugt i8* %334, %335
  br i1 %336, label %337, label %344

337:                                              ; preds = %333
  %338 = getelementptr inbounds i8, i8* %334, i64 -1
  %339 = call fastcc i8* @sslow(%struct.smat* nonnull %7, i8* %335, i8* %338, i64 %31, i64 %33) #13
  %340 = icmp eq i8* %339, null
  br i1 %340, label %344, label %341

341:                                              ; preds = %337
  %342 = call fastcc i8* @sbackref(%struct.smat* nonnull %7, i8* %335, i8* nonnull %339, i64 %31, i64 %33, i64 0, i32 0) #13
  %343 = icmp eq i8* %342, null
  br i1 %343, label %333, label %350

344:                                              ; preds = %337, %333
  %345 = phi i8* [ null, %337 ], [ %334, %333 ]
  %346 = icmp eq i8* %335, %52
  br i1 %346, label %350, label %347

347:                                              ; preds = %344
  %348 = getelementptr inbounds i8, i8* %335, i64 1
  %349 = load i8*, i8** %89, align 8
  br label %102

350:                                              ; preds = %344, %330, %265, %341
  %351 = phi i8* [ %339, %341 ], [ %264, %330 ], [ %345, %344 ], [ %264, %265 ]
  br i1 %95, label %380, label %352

352:                                              ; preds = %350
  %353 = bitcast i8** %94 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = bitcast i8** %88 to i64*
  %356 = load i64, i64* %355, align 8
  %357 = sub i64 %354, %356
  %358 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %3, i64 0, i32 0
  store i64 %357, i64* %358, align 8
  %359 = ptrtoint i8* %351 to i64
  %360 = sub i64 %359, %356
  %361 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %3, i64 0, i32 1
  store i64 %360, i64* %361, align 8
  br i1 %97, label %380, label %362

362:                                              ; preds = %352
  %363 = load %struct.re_guts*, %struct.re_guts** %84, align 8
  %364 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %363, i64 0, i32 17
  br label %365

365:                                              ; preds = %377, %362
  %366 = phi i64 [ %378, %377 ], [ 1, %362 ]
  %367 = load i64, i64* %364, align 8
  %368 = icmp ugt i64 %366, %367
  %369 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %3, i64 %366
  br i1 %368, label %375, label %370

370:                                              ; preds = %365
  %371 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %86, align 8
  %372 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %371, i64 %366
  %373 = bitcast %struct.llvm_regmatch_t* %369 to i8*
  %374 = bitcast %struct.llvm_regmatch_t* %372 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %373, i8* align 8 %374, i64 16, i1 false) #11
  br label %377

375:                                              ; preds = %365
  %376 = bitcast %struct.llvm_regmatch_t* %369 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %376, i8 -1, i64 16, i1 false) #11
  br label %377

377:                                              ; preds = %375, %370
  %378 = add nuw i64 %366, 1
  %379 = icmp eq i64 %378, %38
  br i1 %379, label %380, label %365

380:                                              ; preds = %252, %377, %352, %350
  %381 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %86, align 8
  %382 = icmp eq %struct.llvm_regmatch_t* %381, null
  br i1 %382, label %385, label %383

383:                                              ; preds = %380
  %384 = bitcast %struct.llvm_regmatch_t* %381 to i8*
  call void @free(i8* %384) #13
  br label %385

385:                                              ; preds = %383, %380
  %386 = load i8**, i8*** %87, align 8
  %387 = icmp eq i8** %386, null
  br i1 %387, label %390, label %388

388:                                              ; preds = %385
  %389 = bitcast i8** %386 to i8*
  call void @free(i8* %389) #13
  br label %390

390:                                              ; preds = %77, %271, %49, %80, %248, %325, %385, %388
  %391 = phi i32 [ 1, %248 ], [ 12, %325 ], [ 16, %49 ], [ 1, %80 ], [ 0, %385 ], [ 0, %388 ], [ 12, %271 ], [ 1, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %28) #11
  br label %811

392:                                              ; preds = %22
  %393 = bitcast %struct.lmat* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %393) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %393, i8 -86, i64 112, i1 false) #11
  %394 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 8
  %395 = load i64, i64* %394, align 8
  %396 = add nsw i64 %395, 1
  %397 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 9
  %398 = load i64, i64* %397, align 8
  %399 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 6
  %400 = load i32, i32* %399, align 8
  %401 = and i32 %400, 4
  %402 = icmp eq i32 %401, 0
  %403 = select i1 %402, i64 %2, i64 0
  %404 = and i32 %4, 4
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %412, label %406

406:                                              ; preds = %392
  %407 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %3, i64 0, i32 0
  %408 = load i64, i64* %407, align 8
  %409 = getelementptr inbounds i8, i8* %1, i64 %408
  %410 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %3, i64 0, i32 1
  %411 = load i64, i64* %410, align 8
  br label %414

412:                                              ; preds = %392
  %413 = tail call i64 @strlen(i8* %1) #12
  br label %414

414:                                              ; preds = %412, %406
  %415 = phi i8* [ %409, %406 ], [ %1, %412 ]
  %416 = phi i64 [ %411, %406 ], [ %413, %412 ]
  %417 = getelementptr inbounds i8, i8* %1, i64 %416
  %418 = icmp ult i8* %417, %415
  br i1 %418, label %809, label %419

419:                                              ; preds = %414
  %420 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 15
  %421 = load i8*, i8** %420, align 8
  %422 = icmp eq i8* %421, null
  br i1 %422, label %448, label %423

423:                                              ; preds = %419
  %424 = icmp ult i8* %415, %417
  br i1 %424, label %425, label %445

425:                                              ; preds = %423
  %426 = load i8, i8* %421, align 1
  %427 = ptrtoint i8* %417 to i64
  %428 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 16
  br label %429

429:                                              ; preds = %442, %425
  %430 = phi i8* [ %415, %425 ], [ %443, %442 ]
  %431 = load i8, i8* %430, align 1
  %432 = icmp eq i8 %431, %426
  br i1 %432, label %433, label %442

433:                                              ; preds = %429
  %434 = ptrtoint i8* %430 to i64
  %435 = sub i64 %427, %434
  %436 = load i32, i32* %428, align 8
  %437 = sext i32 %436 to i64
  %438 = icmp slt i64 %435, %437
  br i1 %438, label %442, label %439

439:                                              ; preds = %433
  %440 = tail call i32 @bcmp(i8* %430, i8* nonnull %421, i64 %437) #11
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %445, label %442

442:                                              ; preds = %439, %433, %429
  %443 = getelementptr inbounds i8, i8* %430, i64 1
  %444 = icmp eq i8* %443, %417
  br i1 %444, label %809, label %429

445:                                              ; preds = %439, %423
  %446 = phi i8* [ %415, %423 ], [ %430, %439 ]
  %447 = icmp eq i8* %446, %417
  br i1 %447, label %809, label %448

448:                                              ; preds = %445, %419
  %449 = getelementptr inbounds %struct.lmat, %struct.lmat* %6, i64 0, i32 0
  store %struct.re_guts* %9, %struct.re_guts** %449, align 8
  %450 = getelementptr inbounds %struct.lmat, %struct.lmat* %6, i64 0, i32 1
  store i32 %23, i32* %450, align 8
  %451 = getelementptr inbounds %struct.lmat, %struct.lmat* %6, i64 0, i32 2
  store %struct.llvm_regmatch_t* null, %struct.llvm_regmatch_t** %451, align 8
  %452 = getelementptr inbounds %struct.lmat, %struct.lmat* %6, i64 0, i32 7
  store i8** null, i8*** %452, align 8
  %453 = getelementptr inbounds %struct.lmat, %struct.lmat* %6, i64 0, i32 3
  store i8* %1, i8** %453, align 8
  %454 = getelementptr inbounds %struct.lmat, %struct.lmat* %6, i64 0, i32 4
  store i8* %415, i8** %454, align 8
  %455 = getelementptr inbounds %struct.lmat, %struct.lmat* %6, i64 0, i32 5
  store i8* %417, i8** %455, align 8
  %456 = load i64, i64* %24, align 8
  %457 = shl nsw i64 %456, 2
  %458 = tail call noalias i8* @malloc(i64 %457) #13
  %459 = getelementptr inbounds %struct.lmat, %struct.lmat* %6, i64 0, i32 9
  store i8* %458, i8** %459, align 8
  %460 = icmp eq i8* %458, null
  br i1 %460, label %809, label %461

461:                                              ; preds = %448
  %462 = ptrtoint i8* %458 to i64
  %463 = getelementptr inbounds %struct.lmat, %struct.lmat* %6, i64 0, i32 8
  %464 = getelementptr inbounds %struct.lmat, %struct.lmat* %6, i64 0, i32 10
  %465 = bitcast i8** %464 to i64*
  store i64 %462, i64* %465, align 8
  %466 = getelementptr inbounds i8, i8* %458, i64 %456
  %467 = getelementptr inbounds %struct.lmat, %struct.lmat* %6, i64 0, i32 11
  store i8* %466, i8** %467, align 8
  %468 = shl nsw i64 %456, 1
  %469 = getelementptr inbounds i8, i8* %458, i64 %468
  %470 = getelementptr inbounds %struct.lmat, %struct.lmat* %6, i64 0, i32 12
  store i8* %469, i8** %470, align 8
  store i64 4, i64* %463, align 8
  %471 = mul nsw i64 %456, 3
  %472 = getelementptr inbounds i8, i8* %458, i64 %471
  %473 = getelementptr inbounds %struct.lmat, %struct.lmat* %6, i64 0, i32 13
  store i8* %472, i8** %473, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %472, i8 0, i64 %456, i1 false) #11
  %474 = getelementptr inbounds %struct.lmat, %struct.lmat* %6, i64 0, i32 6
  %475 = icmp eq i64 %403, 0
  %476 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 18
  %477 = icmp eq i64 %403, 1
  %478 = bitcast %struct.llvm_regmatch_t** %451 to i8**
  %479 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %9, i64 0, i32 19
  %480 = bitcast i8*** %452 to i8**
  br label %481

481:                                              ; preds = %761, %461
  %482 = phi i8* [ %415, %461 ], [ %766, %761 ]
  %483 = phi i8* [ %469, %461 ], [ %765, %761 ]
  %484 = phi i8* [ %466, %461 ], [ %764, %761 ]
  %485 = phi i8* [ %458, %461 ], [ %763, %761 ]
  %486 = phi i8* [ %415, %461 ], [ %762, %761 ]
  %487 = icmp eq i8* %482, %486
  br i1 %487, label %492, label %488

488:                                              ; preds = %481
  %489 = getelementptr inbounds i8, i8* %486, i64 -1
  %490 = load i8, i8* %489, align 1
  %491 = sext i8 %490 to i32
  br label %492

492:                                              ; preds = %488, %481
  %493 = phi i32 [ %491, %488 ], [ 128, %481 ]
  %494 = load %struct.re_guts*, %struct.re_guts** %449, align 8
  %495 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %494, i64 0, i32 7
  %496 = load i64, i64* %495, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %485, i8 0, i64 %496, i1 false) #11
  %497 = getelementptr inbounds i8, i8* %485, i64 %396
  store i8 1, i8* %497, align 1
  %498 = load %struct.re_guts*, %struct.re_guts** %449, align 8
  %499 = call fastcc i8* @lstep(%struct.re_guts* %498, i64 %396, i64 %398, i8* %485, i32 132, i8* %485) #13
  %500 = load %struct.re_guts*, %struct.re_guts** %449, align 8
  %501 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %500, i64 0, i32 7
  %502 = load i64, i64* %501, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %484, i8* align 1 %485, i64 %502, i1 false) #11
  %503 = getelementptr i8, i8* %485, i64 %398
  br label %504

504:                                              ; preds = %642, %492
  %505 = phi i8* [ %486, %492 ], [ %651, %642 ]
  %506 = phi i32 [ %493, %492 ], [ %514, %642 ]
  %507 = phi i8* [ null, %492 ], [ %520, %642 ]
  %508 = load i8*, i8** %455, align 8
  %509 = icmp eq i8* %505, %508
  br i1 %509, label %513, label %510

510:                                              ; preds = %504
  %511 = load i8, i8* %505, align 1
  %512 = sext i8 %511 to i32
  br label %513

513:                                              ; preds = %510, %504
  %514 = phi i32 [ %512, %510 ], [ 128, %504 ]
  %515 = load %struct.re_guts*, %struct.re_guts** %449, align 8
  %516 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %515, i64 0, i32 7
  %517 = load i64, i64* %516, align 8
  %518 = call i32 @bcmp(i8* %485, i8* %484, i64 %517) #11
  %519 = icmp eq i32 %518, 0
  %520 = select i1 %519, i8* %505, i8* %507
  switch i32 %506, label %533 [
    i32 10, label %521
    i32 128, label %526
  ]

521:                                              ; preds = %513
  %522 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %515, i64 0, i32 6
  %523 = load i32, i32* %522, align 8
  %524 = and i32 %523, 8
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %533, label %530

526:                                              ; preds = %513
  %527 = load i32, i32* %450, align 8
  %528 = and i32 %527, 1
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %530, label %533

530:                                              ; preds = %526, %521
  %531 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %515, i64 0, i32 11
  %532 = load i32, i32* %531, align 4
  br label %533

533:                                              ; preds = %530, %526, %521, %513
  %534 = phi i32 [ 129, %530 ], [ 0, %526 ], [ 0, %513 ], [ 0, %521 ]
  %535 = phi i32 [ %532, %530 ], [ 0, %526 ], [ 0, %513 ], [ 0, %521 ]
  switch i32 %514, label %551 [
    i32 10, label %536
    i32 128, label %541
  ]

536:                                              ; preds = %533
  %537 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %515, i64 0, i32 6
  %538 = load i32, i32* %537, align 8
  %539 = and i32 %538, 8
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %551, label %545

541:                                              ; preds = %533
  %542 = load i32, i32* %450, align 8
  %543 = and i32 %542, 2
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %545, label %551

545:                                              ; preds = %541, %536
  %546 = icmp eq i32 %534, 129
  %547 = select i1 %546, i32 131, i32 130
  %548 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %515, i64 0, i32 12
  %549 = load i32, i32* %548, align 8
  %550 = add nsw i32 %549, %535
  br label %551

551:                                              ; preds = %545, %541, %536, %533
  %552 = phi i32 [ %547, %545 ], [ %534, %541 ], [ %534, %533 ], [ %534, %536 ]
  %553 = phi i32 [ %550, %545 ], [ %535, %541 ], [ %535, %533 ], [ %535, %536 ]
  %554 = icmp sgt i32 %553, 0
  br i1 %554, label %555, label %565

555:                                              ; preds = %551
  %556 = call fastcc i8* @lstep(%struct.re_guts* %515, i64 %396, i64 %398, i8* %485, i32 %552, i8* %485) #13
  %557 = add nsw i32 %553, -1
  %558 = icmp sgt i32 %557, 0
  br i1 %558, label %559, label %565

559:                                              ; preds = %555, %559
  %560 = phi i32 [ %563, %559 ], [ %557, %555 ]
  %561 = load %struct.re_guts*, %struct.re_guts** %449, align 8
  %562 = call fastcc i8* @lstep(%struct.re_guts* %561, i64 %396, i64 %398, i8* %485, i32 %552, i8* %485) #13
  %563 = add nsw i32 %560, -1
  %564 = icmp sgt i32 %563, 0
  br i1 %564, label %559, label %565

565:                                              ; preds = %559, %555, %551
  %566 = icmp eq i32 %552, 129
  br i1 %566, label %582, label %567

567:                                              ; preds = %565
  %568 = icmp eq i32 %506, 128
  br i1 %568, label %629, label %569

569:                                              ; preds = %567
  %570 = tail call i16** @__ctype_b_loc() #14
  %571 = load i16*, i16** %570, align 8
  %572 = and i32 %506, 255
  %573 = zext i32 %572 to i64
  %574 = getelementptr inbounds i16, i16* %571, i64 %573
  %575 = load i16, i16* %574, align 2
  %576 = and i16 %575, 8
  %577 = icmp ne i16 %576, 0
  %578 = icmp eq i32 %506, 95
  %579 = or i1 %578, %577
  %580 = icmp eq i32 %514, 128
  %581 = or i1 %580, %579
  br i1 %581, label %609, label %587

582:                                              ; preds = %565
  %583 = icmp eq i32 %514, 128
  br i1 %583, label %598, label %584

584:                                              ; preds = %582
  %585 = tail call i16** @__ctype_b_loc() #14
  %586 = load i16*, i16** %585, align 8
  br label %587

587:                                              ; preds = %584, %569
  %588 = phi i16* [ %586, %584 ], [ %571, %569 ]
  %589 = and i32 %514, 255
  %590 = zext i32 %589 to i64
  %591 = getelementptr inbounds i16, i16* %588, i64 %590
  %592 = load i16, i16* %591, align 2
  %593 = and i16 %592, 8
  %594 = icmp ne i16 %593, 0
  %595 = icmp eq i32 %514, 95
  %596 = or i1 %595, %594
  %597 = select i1 %596, i32 133, i32 %552
  br label %598

598:                                              ; preds = %587, %582
  %599 = phi i32 [ 129, %582 ], [ %597, %587 ]
  %600 = icmp eq i32 %506, 128
  br i1 %600, label %629, label %601

601:                                              ; preds = %598
  %602 = tail call i16** @__ctype_b_loc() #14
  %603 = and i32 %506, 255
  %604 = zext i32 %603 to i64
  %605 = load i16*, i16** %602, align 8
  %606 = getelementptr inbounds i16, i16* %605, i64 %604
  %607 = load i16, i16* %606, align 2
  %608 = and i16 %607, 8
  br label %609

609:                                              ; preds = %601, %569
  %610 = phi i16 [ %608, %601 ], [ %576, %569 ]
  %611 = phi i16* [ %605, %601 ], [ %571, %569 ]
  %612 = phi i32 [ %599, %601 ], [ %552, %569 ]
  %613 = icmp ne i16 %610, 0
  %614 = icmp eq i32 %506, 95
  %615 = or i1 %614, %613
  br i1 %615, label %616, label %629

616:                                              ; preds = %609
  %617 = icmp eq i32 %612, 130
  br i1 %617, label %633, label %618

618:                                              ; preds = %616
  %619 = icmp eq i32 %514, 128
  br i1 %619, label %629, label %620

620:                                              ; preds = %618
  %621 = and i32 %514, 255
  %622 = zext i32 %621 to i64
  %623 = getelementptr inbounds i16, i16* %611, i64 %622
  %624 = load i16, i16* %623, align 2
  %625 = and i16 %624, 8
  %626 = icmp ne i16 %625, 0
  %627 = icmp eq i32 %514, 95
  %628 = or i1 %627, %626
  br i1 %628, label %629, label %633

629:                                              ; preds = %620, %618, %609, %598, %567
  %630 = phi i32 [ %612, %620 ], [ %612, %618 ], [ %612, %609 ], [ %599, %598 ], [ %552, %567 ]
  %631 = add i32 %630, -133
  %632 = icmp ult i32 %631, 2
  br i1 %632, label %633, label %637

633:                                              ; preds = %629, %620, %616
  %634 = phi i32 [ %630, %629 ], [ 134, %616 ], [ 134, %620 ]
  %635 = load %struct.re_guts*, %struct.re_guts** %449, align 8
  %636 = call fastcc i8* @lstep(%struct.re_guts* %635, i64 %396, i64 %398, i8* %485, i32 %634, i8* %485) #13
  br label %637

637:                                              ; preds = %633, %629
  %638 = load i8, i8* %503, align 1
  %639 = icmp ne i8 %638, 0
  %640 = icmp eq i8* %505, %417
  %641 = or i1 %640, %639
  br i1 %641, label %652, label %642

642:                                              ; preds = %637
  %643 = load %struct.re_guts*, %struct.re_guts** %449, align 8
  %644 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %643, i64 0, i32 7
  %645 = load i64, i64* %644, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %483, i8* align 1 %485, i64 %645, i1 false) #11
  %646 = load %struct.re_guts*, %struct.re_guts** %449, align 8
  %647 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %646, i64 0, i32 7
  %648 = load i64, i64* %647, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %485, i8* align 1 %484, i64 %648, i1 false) #11
  %649 = load %struct.re_guts*, %struct.re_guts** %449, align 8
  %650 = call fastcc i8* @lstep(%struct.re_guts* %649, i64 %396, i64 %398, i8* %483, i32 %514, i8* %485) #13
  %651 = getelementptr inbounds i8, i8* %505, i64 1
  br label %504

652:                                              ; preds = %637
  store i8* %520, i8** %474, align 8
  %653 = load i8, i8* %503, align 1
  %654 = icmp eq i8 %653, 0
  br i1 %654, label %655, label %659

655:                                              ; preds = %652
  %656 = load i8*, i8** %478, align 8
  call void @free(i8* %656) #13
  %657 = load i8*, i8** %480, align 8
  call void @free(i8* %657) #13
  %658 = load i8*, i8** %459, align 8
  call void @free(i8* %658) #13
  br label %809

659:                                              ; preds = %652
  br i1 %475, label %660, label %663

660:                                              ; preds = %659
  %661 = load i32, i32* %476, align 8
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %797, label %663

663:                                              ; preds = %660, %659
  %664 = call fastcc i8* @lslow(%struct.lmat* nonnull %6, i8* %520, i8* %417, i64 %396, i64 %398) #13
  %665 = icmp eq i8* %664, null
  br i1 %665, label %666, label %671

666:                                              ; preds = %663, %666
  %667 = load i8*, i8** %474, align 8
  %668 = getelementptr inbounds i8, i8* %667, i64 1
  store i8* %668, i8** %474, align 8
  %669 = call fastcc i8* @lslow(%struct.lmat* nonnull %6, i8* %668, i8* %417, i64 %396, i64 %398) #13
  %670 = icmp eq i8* %669, null
  br i1 %670, label %666, label %671

671:                                              ; preds = %666, %663
  %672 = phi i8* [ %664, %663 ], [ %669, %666 ]
  br i1 %477, label %673, label %676

673:                                              ; preds = %671
  %674 = load i32, i32* %476, align 8
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %767, label %676

676:                                              ; preds = %673, %671
  %677 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %451, align 8
  %678 = icmp eq %struct.llvm_regmatch_t* %677, null
  %679 = load %struct.re_guts*, %struct.re_guts** %449, align 8
  br i1 %678, label %680, label %688

680:                                              ; preds = %676
  %681 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %679, i64 0, i32 17
  %682 = load i64, i64* %681, align 8
  %683 = shl i64 %682, 4
  %684 = add i64 %683, 16
  %685 = call noalias i8* @malloc(i64 %684) #13
  store i8* %685, i8** %478, align 8
  %686 = bitcast i8* %685 to %struct.llvm_regmatch_t*
  %687 = icmp eq i8* %685, null
  br i1 %687, label %698, label %688

688:                                              ; preds = %676, %680
  %689 = phi %struct.llvm_regmatch_t* [ %686, %680 ], [ %677, %676 ]
  %690 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %679, i64 0, i32 17
  %691 = load i64, i64* %690, align 8
  %692 = icmp eq i64 %691, 0
  br i1 %692, label %711, label %693

693:                                              ; preds = %688
  %694 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %689, i64 1, i32 0
  %695 = bitcast i64* %694 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 -1>, <2 x i64>* %695, align 8
  %696 = load i64, i64* %690, align 8
  %697 = icmp ult i64 %696, 2
  br i1 %697, label %711, label %700

698:                                              ; preds = %680
  %699 = load i8*, i8** %459, align 8
  call void @free(i8* %699) #13
  br label %809

700:                                              ; preds = %693, %700
  %701 = phi i64 [ %706, %700 ], [ 2, %693 ]
  %702 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %451, align 8
  %703 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %702, i64 %701, i32 1
  store i64 -1, i64* %703, align 8
  %704 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %451, align 8
  %705 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %704, i64 %701, i32 0
  store i64 -1, i64* %705, align 8
  %706 = add i64 %701, 1
  %707 = load %struct.re_guts*, %struct.re_guts** %449, align 8
  %708 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %707, i64 0, i32 17
  %709 = load i64, i64* %708, align 8
  %710 = icmp ugt i64 %706, %709
  br i1 %710, label %711, label %700

711:                                              ; preds = %700, %693, %688
  %712 = load i32, i32* %476, align 8
  %713 = icmp eq i32 %712, 0
  br i1 %713, label %714, label %721

714:                                              ; preds = %711
  %715 = load i32, i32* %450, align 8
  %716 = and i32 %715, 1024
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %718, label %721

718:                                              ; preds = %714
  %719 = load i8*, i8** %474, align 8
  %720 = call fastcc i8* @ldissect(%struct.lmat* nonnull %6, i8* %719, i8* nonnull %672, i64 %396, i64 %398) #13
  br label %742

721:                                              ; preds = %714, %711
  %722 = load i64, i64* %479, align 8
  %723 = icmp sgt i64 %722, 0
  %724 = load i8**, i8*** %452, align 8
  %725 = icmp eq i8** %724, null
  %726 = and i1 %723, %725
  br i1 %726, label %727, label %732

727:                                              ; preds = %721
  %728 = shl i64 %722, 3
  %729 = add i64 %728, 8
  %730 = call noalias i8* @malloc(i64 %729) #13
  store i8* %730, i8** %480, align 8
  %731 = bitcast i8* %730 to i8**
  br label %732

732:                                              ; preds = %727, %721
  %733 = phi i8** [ %731, %727 ], [ %724, %721 ]
  %734 = icmp eq i8** %733, null
  %735 = and i1 %723, %734
  br i1 %735, label %736, label %739

736:                                              ; preds = %732
  %737 = load i8*, i8** %478, align 8
  call void @free(i8* %737) #13
  %738 = load i8*, i8** %459, align 8
  call void @free(i8* %738) #13
  br label %809

739:                                              ; preds = %732
  %740 = load i8*, i8** %474, align 8
  %741 = call fastcc i8* @lbackref(%struct.lmat* nonnull %6, i8* %740, i8* nonnull %672, i64 %396, i64 %398, i64 0, i32 0) #13
  br label %742

742:                                              ; preds = %739, %718
  %743 = phi i8* [ %741, %739 ], [ %720, %718 ]
  %744 = icmp eq i8* %743, null
  br i1 %744, label %745, label %767

745:                                              ; preds = %742, %754
  %746 = phi i8* [ %751, %754 ], [ %672, %742 ]
  %747 = load i8*, i8** %474, align 8
  %748 = icmp ugt i8* %746, %747
  br i1 %748, label %749, label %757

749:                                              ; preds = %745
  %750 = getelementptr inbounds i8, i8* %746, i64 -1
  %751 = call fastcc i8* @lslow(%struct.lmat* nonnull %6, i8* %747, i8* %750, i64 %396, i64 %398) #13
  %752 = icmp eq i8* %751, null
  %753 = load i8*, i8** %474, align 8
  br i1 %752, label %757, label %754

754:                                              ; preds = %749
  %755 = call fastcc i8* @lbackref(%struct.lmat* nonnull %6, i8* %753, i8* nonnull %751, i64 %396, i64 %398, i64 0, i32 0) #13
  %756 = icmp eq i8* %755, null
  br i1 %756, label %745, label %767

757:                                              ; preds = %749, %745
  %758 = phi i8* [ %753, %749 ], [ %747, %745 ]
  %759 = phi i8* [ null, %749 ], [ %746, %745 ]
  %760 = icmp eq i8* %758, %417
  br i1 %760, label %767, label %761

761:                                              ; preds = %757
  %762 = getelementptr inbounds i8, i8* %758, i64 1
  %763 = load i8*, i8** %464, align 8
  %764 = load i8*, i8** %467, align 8
  %765 = load i8*, i8** %470, align 8
  %766 = load i8*, i8** %454, align 8
  br label %481

767:                                              ; preds = %757, %742, %673, %754
  %768 = phi i8* [ %751, %754 ], [ %672, %742 ], [ %759, %757 ], [ %672, %673 ]
  br i1 %475, label %797, label %769

769:                                              ; preds = %767
  %770 = bitcast i8** %474 to i64*
  %771 = load i64, i64* %770, align 8
  %772 = bitcast i8** %453 to i64*
  %773 = load i64, i64* %772, align 8
  %774 = sub i64 %771, %773
  %775 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %3, i64 0, i32 0
  store i64 %774, i64* %775, align 8
  %776 = ptrtoint i8* %768 to i64
  %777 = sub i64 %776, %773
  %778 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %3, i64 0, i32 1
  store i64 %777, i64* %778, align 8
  br i1 %477, label %797, label %779

779:                                              ; preds = %769
  %780 = load %struct.re_guts*, %struct.re_guts** %449, align 8
  %781 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %780, i64 0, i32 17
  br label %782

782:                                              ; preds = %794, %779
  %783 = phi i64 [ %795, %794 ], [ 1, %779 ]
  %784 = load i64, i64* %781, align 8
  %785 = icmp ugt i64 %783, %784
  %786 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %3, i64 %783
  br i1 %785, label %792, label %787

787:                                              ; preds = %782
  %788 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %451, align 8
  %789 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %788, i64 %783
  %790 = bitcast %struct.llvm_regmatch_t* %786 to i8*
  %791 = bitcast %struct.llvm_regmatch_t* %789 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %790, i8* align 8 %791, i64 16, i1 false) #11
  br label %794

792:                                              ; preds = %782
  %793 = bitcast %struct.llvm_regmatch_t* %786 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %793, i8 -1, i64 16, i1 false) #11
  br label %794

794:                                              ; preds = %792, %787
  %795 = add nuw i64 %783, 1
  %796 = icmp eq i64 %795, %403
  br i1 %796, label %797, label %782

797:                                              ; preds = %660, %794, %769, %767
  %798 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %451, align 8
  %799 = icmp eq %struct.llvm_regmatch_t* %798, null
  br i1 %799, label %802, label %800

800:                                              ; preds = %797
  %801 = bitcast %struct.llvm_regmatch_t* %798 to i8*
  call void @free(i8* %801) #13
  br label %802

802:                                              ; preds = %800, %797
  %803 = load i8**, i8*** %452, align 8
  %804 = icmp eq i8** %803, null
  br i1 %804, label %807, label %805

805:                                              ; preds = %802
  %806 = bitcast i8** %803 to i8*
  call void @free(i8* %806) #13
  br label %807

807:                                              ; preds = %805, %802
  %808 = load i8*, i8** %459, align 8
  call void @free(i8* %808) #13
  br label %809

809:                                              ; preds = %442, %414, %445, %448, %655, %698, %736, %807
  %810 = phi i32 [ 1, %655 ], [ 12, %698 ], [ 12, %736 ], [ 0, %807 ], [ 16, %414 ], [ 1, %445 ], [ 12, %448 ], [ 1, %442 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %393) #11
  br label %811

811:                                              ; preds = %17, %5, %13, %809, %390
  %812 = phi i32 [ %810, %809 ], [ %391, %390 ], [ 2, %13 ], [ 2, %5 ], [ 2, %17 ]
  ret i32 %812
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind optsize readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind optsize readonly ssp uwtable
define internal fastcc i8* @sslow(%struct.smat* nocapture readonly, i8* readonly, i8* readnone, i64, i64) unnamed_addr #4 {
  %6 = getelementptr inbounds %struct.smat, %struct.smat* %0, i64 0, i32 12
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.smat, %struct.smat* %0, i64 0, i32 4
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, %1
  br i1 %10, label %15, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds i8, i8* %1, i64 -1
  %13 = load i8, i8* %12, align 1
  %14 = sext i8 %13 to i32
  br label %15

15:                                               ; preds = %5, %11
  %16 = phi i32 [ %14, %11 ], [ 128, %5 ]
  %17 = shl i64 1, %3
  %18 = getelementptr inbounds %struct.smat, %struct.smat* %0, i64 0, i32 0
  %19 = load %struct.re_guts*, %struct.re_guts** %18, align 8
  %20 = tail call fastcc i64 @sstep(%struct.re_guts* %19, i64 %3, i64 %4, i64 %17, i32 132, i64 %17) #15
  %21 = getelementptr inbounds %struct.smat, %struct.smat* %0, i64 0, i32 5
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %struct.smat, %struct.smat* %0, i64 0, i32 1
  %24 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %19, i64 0, i32 6
  %25 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %19, i64 0, i32 11
  %26 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %19, i64 0, i32 12
  %27 = shl i64 1, %4
  br label %28

28:                                               ; preds = %155, %15
  %29 = phi i64 [ %20, %15 ], [ %156, %155 ]
  %30 = phi i8* [ %1, %15 ], [ %157, %155 ]
  %31 = phi i32 [ %16, %15 ], [ %38, %155 ]
  %32 = phi i8* [ null, %15 ], [ %151, %155 ]
  %33 = icmp eq i8* %30, %22
  br i1 %33, label %37, label %34

34:                                               ; preds = %28
  %35 = load i8, i8* %30, align 1
  %36 = sext i8 %35 to i32
  br label %37

37:                                               ; preds = %28, %34
  %38 = phi i32 [ %36, %34 ], [ 128, %28 ]
  switch i32 %31, label %49 [
    i32 10, label %39
    i32 128, label %43
  ]

39:                                               ; preds = %37
  %40 = load i32, i32* %24, align 8
  %41 = and i32 %40, 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %49, label %47

43:                                               ; preds = %37
  %44 = load i32, i32* %23, align 8
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %39, %43
  %48 = load i32, i32* %25, align 4
  br label %49

49:                                               ; preds = %39, %37, %43, %47
  %50 = phi i32 [ 129, %47 ], [ 0, %43 ], [ 0, %37 ], [ 0, %39 ]
  %51 = phi i32 [ %48, %47 ], [ 0, %43 ], [ 0, %37 ], [ 0, %39 ]
  switch i32 %38, label %65 [
    i32 10, label %52
    i32 128, label %56
  ]

52:                                               ; preds = %49
  %53 = load i32, i32* %24, align 8
  %54 = and i32 %53, 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %65, label %60

56:                                               ; preds = %49
  %57 = load i32, i32* %23, align 8
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %65

60:                                               ; preds = %52, %56
  %61 = icmp eq i32 %50, 129
  %62 = select i1 %61, i32 131, i32 130
  %63 = load i32, i32* %26, align 8
  %64 = add nsw i32 %63, %51
  br label %65

65:                                               ; preds = %52, %49, %56, %60
  %66 = phi i32 [ %62, %60 ], [ %50, %56 ], [ %50, %49 ], [ %50, %52 ]
  %67 = phi i32 [ %64, %60 ], [ %51, %56 ], [ %51, %49 ], [ %51, %52 ]
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %75

69:                                               ; preds = %65, %69
  %70 = phi i32 [ %73, %69 ], [ %67, %65 ]
  %71 = phi i64 [ %72, %69 ], [ %29, %65 ]
  %72 = tail call fastcc i64 @sstep(%struct.re_guts* %19, i64 %3, i64 %4, i64 %71, i32 %66, i64 %71) #15
  %73 = add nsw i32 %70, -1
  %74 = icmp sgt i32 %73, 0
  br i1 %74, label %69, label %75

75:                                               ; preds = %69, %65
  %76 = phi i64 [ %29, %65 ], [ %72, %69 ]
  %77 = icmp eq i32 %66, 129
  br i1 %77, label %93, label %78

78:                                               ; preds = %75
  %79 = icmp eq i32 %31, 128
  br i1 %79, label %140, label %80

80:                                               ; preds = %78
  %81 = tail call i16** @__ctype_b_loc() #14
  %82 = load i16*, i16** %81, align 8
  %83 = and i32 %31, 255
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i16, i16* %82, i64 %84
  %86 = load i16, i16* %85, align 2
  %87 = and i16 %86, 8
  %88 = icmp ne i16 %87, 0
  %89 = icmp eq i32 %31, 95
  %90 = or i1 %89, %88
  %91 = icmp eq i32 %38, 128
  %92 = or i1 %91, %90
  br i1 %92, label %116, label %97

93:                                               ; preds = %75
  %94 = icmp eq i32 %38, 128
  br i1 %94, label %109, label %95

95:                                               ; preds = %93
  %96 = tail call i16** @__ctype_b_loc() #14
  br label %97

97:                                               ; preds = %95, %80
  %98 = phi i16** [ %96, %95 ], [ %81, %80 ]
  %99 = load i16*, i16** %98, align 8
  %100 = and i32 %38, 255
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds i16, i16* %99, i64 %101
  %103 = load i16, i16* %102, align 2
  %104 = and i16 %103, 8
  %105 = icmp ne i16 %104, 0
  %106 = icmp eq i32 %38, 95
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 133, i32 %66
  br label %109

109:                                              ; preds = %97, %93
  %110 = phi i32 [ 129, %93 ], [ %108, %97 ]
  %111 = icmp eq i32 %31, 128
  br i1 %111, label %140, label %112

112:                                              ; preds = %109
  %113 = tail call i16** @__ctype_b_loc() #14
  %114 = and i32 %31, 255
  %115 = zext i32 %114 to i64
  br label %116

116:                                              ; preds = %112, %80
  %117 = phi i64 [ %115, %112 ], [ %84, %80 ]
  %118 = phi i16** [ %113, %112 ], [ %81, %80 ]
  %119 = phi i32 [ %110, %112 ], [ %66, %80 ]
  %120 = load i16*, i16** %118, align 8
  %121 = getelementptr inbounds i16, i16* %120, i64 %117
  %122 = load i16, i16* %121, align 2
  %123 = and i16 %122, 8
  %124 = icmp ne i16 %123, 0
  %125 = icmp eq i32 %31, 95
  %126 = or i1 %125, %124
  br i1 %126, label %127, label %140

127:                                              ; preds = %116
  %128 = icmp eq i32 %119, 130
  br i1 %128, label %144, label %129

129:                                              ; preds = %127
  %130 = icmp eq i32 %38, 128
  br i1 %130, label %140, label %131

131:                                              ; preds = %129
  %132 = and i32 %38, 255
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds i16, i16* %120, i64 %133
  %135 = load i16, i16* %134, align 2
  %136 = and i16 %135, 8
  %137 = icmp ne i16 %136, 0
  %138 = icmp eq i32 %38, 95
  %139 = or i1 %138, %137
  br i1 %139, label %140, label %144

140:                                              ; preds = %78, %129, %109, %116, %131
  %141 = phi i32 [ %119, %131 ], [ %119, %129 ], [ %119, %116 ], [ %110, %109 ], [ %66, %78 ]
  %142 = add i32 %141, -133
  %143 = icmp ult i32 %142, 2
  br i1 %143, label %144, label %147

144:                                              ; preds = %131, %127, %140
  %145 = phi i32 [ %141, %140 ], [ 134, %127 ], [ 134, %131 ]
  %146 = tail call fastcc i64 @sstep(%struct.re_guts* %19, i64 %3, i64 %4, i64 %76, i32 %145, i64 %76) #15
  br label %147

147:                                              ; preds = %140, %144
  %148 = phi i64 [ %146, %144 ], [ %76, %140 ]
  %149 = and i64 %148, %27
  %150 = icmp eq i64 %149, 0
  %151 = select i1 %150, i8* %32, i8* %30
  %152 = icmp eq i64 %148, %7
  %153 = icmp eq i8* %30, %2
  %154 = or i1 %153, %152
  br i1 %154, label %158, label %155

155:                                              ; preds = %147
  %156 = tail call fastcc i64 @sstep(%struct.re_guts* %19, i64 %3, i64 %4, i64 %148, i32 %38, i64 %7) #15
  %157 = getelementptr inbounds i8, i8* %30, i64 1
  br label %28

158:                                              ; preds = %147
  ret i8* %151
}

; Function Attrs: nofree nounwind optsize
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: nofree nounwind optsize ssp uwtable
define internal fastcc i8* @sdissect(%struct.smat* readonly, i8*, i8*, i64, i64) unnamed_addr #6 {
  %6 = icmp slt i64 %3, %4
  br i1 %6, label %7, label %128

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.smat, %struct.smat* %0, i64 0, i32 0
  %9 = getelementptr inbounds %struct.smat, %struct.smat* %0, i64 0, i32 3
  %10 = bitcast i8** %9 to i64*
  %11 = getelementptr inbounds %struct.smat, %struct.smat* %0, i64 0, i32 2
  br label %12

12:                                               ; preds = %7, %125
  %13 = phi i64 [ %3, %7 ], [ %39, %125 ]
  %14 = phi i8* [ %1, %7 ], [ %126, %125 ]
  %15 = load %struct.re_guts*, %struct.re_guts** %8, align 8
  %16 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %15, i64 0, i32 1
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds i64, i64* %17, i64 %13
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = and i32 %20, -134217728
  switch i32 %21, label %37 [
    i32 1207959552, label %25
    i32 1476395008, label %25
    i32 2013265920, label %22
  ]

22:                                               ; preds = %12
  %23 = and i64 %19, 4160749568
  %24 = icmp eq i64 %23, 2415919104
  br i1 %24, label %37, label %28

25:                                               ; preds = %12, %12
  %26 = and i64 %19, 134217727
  %27 = add i64 %26, %13
  br label %37

28:                                               ; preds = %22, %28
  %29 = phi i64 [ %34, %28 ], [ %19, %22 ]
  %30 = phi i64 [ %32, %28 ], [ %13, %22 ]
  %31 = and i64 %29, 134217727
  %32 = add i64 %31, %30
  %33 = getelementptr inbounds i64, i64* %17, i64 %32
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 4160749568
  %36 = icmp eq i64 %35, 2415919104
  br i1 %36, label %37, label %28

37:                                               ; preds = %28, %22, %12, %25
  %38 = phi i64 [ %13, %12 ], [ %27, %25 ], [ %13, %22 ], [ %32, %28 ]
  %39 = add nsw i64 %38, 1
  %40 = and i64 %19, 4160749568
  %41 = add nsw i64 %40, -134217728
  %42 = lshr exact i64 %41, 27
  switch i64 %42, label %125 [
    i64 13, label %118
    i64 1, label %43
    i64 12, label %111
    i64 14, label %78
    i64 8, label %59
    i64 10, label %47
    i64 4, label %45
    i64 5, label %45
  ]

43:                                               ; preds = %37
  %44 = getelementptr inbounds i8, i8* %14, i64 1
  br label %125

45:                                               ; preds = %37, %37
  %46 = getelementptr inbounds i8, i8* %14, i64 1
  br label %125

47:                                               ; preds = %37, %47
  %48 = phi i8* [ %52, %47 ], [ %2, %37 ]
  %49 = tail call fastcc i8* @sslow(%struct.smat* %0, i8* %14, i8* %48, i64 %13, i64 %39) #15
  %50 = tail call fastcc i8* @sslow(%struct.smat* %0, i8* %49, i8* %2, i64 %39, i64 %4) #15
  %51 = icmp eq i8* %50, %2
  %52 = getelementptr inbounds i8, i8* %49, i64 -1
  br i1 %51, label %53, label %47

53:                                               ; preds = %47
  %54 = add nsw i64 %13, 1
  %55 = tail call fastcc i8* @sslow(%struct.smat* %0, i8* %14, i8* %49, i64 %54, i64 %38) #15
  %56 = icmp eq i8* %55, null
  br i1 %56, label %125, label %57

57:                                               ; preds = %53
  %58 = tail call fastcc i8* @sdissect(%struct.smat* %0, i8* %14, i8* %49, i64 %54, i64 %38) #15
  br label %125

59:                                               ; preds = %37, %59
  %60 = phi i8* [ %64, %59 ], [ %2, %37 ]
  %61 = tail call fastcc i8* @sslow(%struct.smat* %0, i8* %14, i8* %60, i64 %13, i64 %39) #15
  %62 = tail call fastcc i8* @sslow(%struct.smat* %0, i8* %61, i8* %2, i64 %39, i64 %4) #15
  %63 = icmp eq i8* %62, %2
  %64 = getelementptr inbounds i8, i8* %61, i64 -1
  br i1 %63, label %65, label %59

65:                                               ; preds = %59
  %66 = add nsw i64 %13, 1
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i8* [ %14, %65 ], [ %70, %67 ]
  %69 = phi i8* [ %14, %65 ], [ %68, %67 ]
  %70 = tail call fastcc i8* @sslow(%struct.smat* %0, i8* %68, i8* %61, i64 %66, i64 %38) #15
  %71 = icmp eq i8* %70, null
  %72 = icmp eq i8* %70, %68
  %73 = or i1 %71, %72
  br i1 %73, label %74, label %67

74:                                               ; preds = %67
  %75 = select i1 %71, i8* %69, i8* %68
  %76 = select i1 %71, i8* %68, i8* %70
  %77 = tail call fastcc i8* @sdissect(%struct.smat* %0, i8* %75, i8* %76, i64 %66, i64 %38) #15
  br label %125

78:                                               ; preds = %37, %78
  %79 = phi i8* [ %83, %78 ], [ %2, %37 ]
  %80 = tail call fastcc i8* @sslow(%struct.smat* %0, i8* %14, i8* %79, i64 %13, i64 %39) #15
  %81 = tail call fastcc i8* @sslow(%struct.smat* %0, i8* %80, i8* %2, i64 %39, i64 %4) #15
  %82 = icmp eq i8* %81, %2
  %83 = getelementptr inbounds i8, i8* %80, i64 -1
  br i1 %82, label %84, label %78

84:                                               ; preds = %78
  %85 = and i64 %19, 134217727
  %86 = add i64 %13, -1
  %87 = add i64 %86, %85
  %88 = add nsw i64 %13, 1
  %89 = tail call fastcc i8* @sslow(%struct.smat* %0, i8* %14, i8* %80, i64 %88, i64 %87) #15
  %90 = icmp eq i8* %89, %80
  br i1 %90, label %107, label %91

91:                                               ; preds = %84, %91
  %92 = phi i64 [ %103, %91 ], [ %87, %84 ]
  %93 = add nsw i64 %92, 1
  %94 = getelementptr inbounds i64, i64* %17, i64 %93
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 134217727
  %97 = add i64 %96, %93
  %98 = getelementptr inbounds i64, i64* %17, i64 %97
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 4160749568
  %101 = icmp eq i64 %100, 2281701376
  %102 = add i64 %96, %92
  %103 = select i1 %101, i64 %102, i64 %97
  %104 = add nsw i64 %92, 2
  %105 = tail call fastcc i8* @sslow(%struct.smat* %0, i8* %14, i8* %80, i64 %104, i64 %103) #15
  %106 = icmp eq i8* %105, %80
  br i1 %106, label %107, label %91

107:                                              ; preds = %91, %84
  %108 = phi i64 [ %87, %84 ], [ %103, %91 ]
  %109 = phi i64 [ %88, %84 ], [ %104, %91 ]
  %110 = tail call fastcc i8* @sdissect(%struct.smat* %0, i8* %14, i8* %80, i64 %109, i64 %108) #15
  br label %125

111:                                              ; preds = %37
  %112 = and i64 %19, 134217727
  %113 = load i64, i64* %10, align 8
  %114 = ptrtoint i8* %14 to i64
  %115 = sub i64 %114, %113
  %116 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %11, align 8
  %117 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %116, i64 %112, i32 0
  store i64 %115, i64* %117, align 8
  br label %125

118:                                              ; preds = %37
  %119 = and i64 %19, 134217727
  %120 = load i64, i64* %10, align 8
  %121 = ptrtoint i8* %14 to i64
  %122 = sub i64 %121, %120
  %123 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %11, align 8
  %124 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %123, i64 %119, i32 1
  store i64 %122, i64* %124, align 8
  br label %125

125:                                              ; preds = %57, %53, %43, %45, %74, %107, %111, %118, %37
  %126 = phi i8* [ %14, %37 ], [ %46, %45 ], [ %61, %74 ], [ %80, %107 ], [ %14, %111 ], [ %44, %43 ], [ %14, %118 ], [ %49, %53 ], [ %49, %57 ]
  %127 = icmp slt i64 %39, %4
  br i1 %127, label %12, label %128

128:                                              ; preds = %125, %5
  %129 = phi i8* [ %1, %5 ], [ %126, %125 ]
  ret i8* %129
}

; Function Attrs: nofree nounwind optsize ssp uwtable
define internal fastcc i8* @sbackref(%struct.smat* readonly, i8*, i8* readnone, i64, i64, i64, i32) unnamed_addr #6 {
  %8 = getelementptr inbounds %struct.smat, %struct.smat* %0, i64 0, i32 0
  %9 = getelementptr inbounds %struct.smat, %struct.smat* %0, i64 0, i32 5
  %10 = getelementptr inbounds %struct.smat, %struct.smat* %0, i64 0, i32 1
  %11 = getelementptr inbounds %struct.smat, %struct.smat* %0, i64 0, i32 4
  %12 = getelementptr inbounds %struct.smat, %struct.smat* %0, i64 0, i32 2
  %13 = getelementptr inbounds %struct.smat, %struct.smat* %0, i64 0, i32 3
  %14 = getelementptr inbounds %struct.smat, %struct.smat* %0, i64 0, i32 7
  %15 = icmp slt i64 %3, %4
  br i1 %15, label %16, label %212

16:                                               ; preds = %7, %275
  %17 = phi i32 [ %22, %275 ], [ %6, %7 ]
  %18 = phi i64 [ %276, %275 ], [ %5, %7 ]
  %19 = phi i64 [ %217, %275 ], [ %3, %7 ]
  %20 = phi i8* [ %34, %275 ], [ %1, %7 ]
  br label %21

21:                                               ; preds = %16, %260
  %22 = phi i32 [ %17, %16 ], [ %241, %260 ]
  %23 = phi i64 [ %19, %16 ], [ %261, %260 ]
  %24 = phi i8* [ %20, %16 ], [ %262, %260 ]
  br label %25

25:                                               ; preds = %21, %267
  %26 = phi i64 [ %23, %21 ], [ %269, %267 ]
  %27 = phi i8* [ %24, %21 ], [ %34, %267 ]
  %28 = load %struct.re_guts*, %struct.re_guts** %8, align 8
  %29 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %28, i64 0, i32 1
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %28, i64 0, i32 6
  %32 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %28, i64 0, i32 4
  br label %33

33:                                               ; preds = %25, %207
  %34 = phi i8* [ %27, %25 ], [ %209, %207 ]
  %35 = phi i64 [ %26, %25 ], [ %210, %207 ]
  %36 = getelementptr inbounds i64, i64* %30, i64 %35
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4160749568
  %39 = add nsw i64 %38, -268435456
  %40 = lshr exact i64 %39, 27
  switch i64 %40, label %216 [
    i64 0, label %41
    i64 3, label %51
    i64 4, label %55
    i64 1, label %71
    i64 2, label %89
    i64 17, label %105
    i64 18, label %153
    i64 10, label %207
    i64 14, label %194
  ]

41:                                               ; preds = %33
  %42 = icmp eq i8* %34, %2
  br i1 %42, label %350, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds i8, i8* %34, i64 1
  %45 = load i8, i8* %34, align 1
  %46 = sext i8 %45 to i32
  %47 = trunc i64 %37 to i32
  %48 = shl i32 %47, 24
  %49 = ashr exact i32 %48, 24
  %50 = icmp eq i32 %49, %46
  br i1 %50, label %207, label %350

51:                                               ; preds = %33
  %52 = icmp eq i8* %34, %2
  br i1 %52, label %350, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds i8, i8* %34, i64 1
  br label %207

55:                                               ; preds = %33
  %56 = load %struct.cset*, %struct.cset** %32, align 8
  %57 = and i64 %37, 134217727
  %58 = icmp eq i8* %34, %2
  br i1 %58, label %350, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.cset, %struct.cset* %56, i64 %57, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds i8, i8* %34, i64 1
  %63 = load i8, i8* %34, align 1
  %64 = zext i8 %63 to i64
  %65 = getelementptr inbounds i8, i8* %61, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = getelementptr inbounds %struct.cset, %struct.cset* %56, i64 %57, i32 1
  %68 = load i8, i8* %67, align 8
  %69 = and i8 %68, %66
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %350, label %207

71:                                               ; preds = %33
  %72 = load i8*, i8** %11, align 8
  %73 = icmp eq i8* %34, %72
  br i1 %73, label %74, label %78

74:                                               ; preds = %71
  %75 = load i32, i32* %10, align 8
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %207, label %78

78:                                               ; preds = %74, %71
  %79 = load i8*, i8** %9, align 8
  %80 = icmp ult i8* %34, %79
  br i1 %80, label %81, label %350

81:                                               ; preds = %78
  %82 = getelementptr inbounds i8, i8* %34, i64 -1
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 10
  br i1 %84, label %85, label %350

85:                                               ; preds = %81
  %86 = load i32, i32* %31, align 8
  %87 = and i32 %86, 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %350, label %207

89:                                               ; preds = %33
  %90 = load i8*, i8** %9, align 8
  %91 = icmp eq i8* %34, %90
  br i1 %91, label %92, label %96

92:                                               ; preds = %89
  %93 = load i32, i32* %10, align 8
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %207, label %96

96:                                               ; preds = %92, %89
  %97 = icmp ult i8* %34, %90
  br i1 %97, label %98, label %350

98:                                               ; preds = %96
  %99 = load i8, i8* %34, align 1
  %100 = icmp eq i8 %99, 10
  br i1 %100, label %101, label %350

101:                                              ; preds = %98
  %102 = load i32, i32* %31, align 8
  %103 = and i32 %102, 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %350, label %207

105:                                              ; preds = %33
  %106 = load i8*, i8** %11, align 8
  %107 = icmp eq i8* %34, %106
  br i1 %107, label %108, label %114

108:                                              ; preds = %105
  %109 = load i32, i32* %10, align 8
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  %113 = load i8*, i8** %9, align 8
  br label %139

114:                                              ; preds = %108, %105
  %115 = load i8*, i8** %9, align 8
  %116 = icmp ult i8* %34, %115
  br i1 %116, label %117, label %125

117:                                              ; preds = %114
  %118 = getelementptr inbounds i8, i8* %34, i64 -1
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, 10
  br i1 %120, label %121, label %125

121:                                              ; preds = %117
  %122 = load i32, i32* %31, align 8
  %123 = and i32 %122, 8
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %139

125:                                              ; preds = %121, %117, %114
  %126 = icmp ugt i8* %34, %106
  br i1 %126, label %127, label %350

127:                                              ; preds = %125
  %128 = tail call i16** @__ctype_b_loc() #14
  %129 = load i16*, i16** %128, align 8
  %130 = getelementptr inbounds i8, i8* %34, i64 -1
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds i16, i16* %129, i64 %132
  %134 = load i16, i16* %133, align 2
  %135 = and i16 %134, 8
  %136 = icmp ne i16 %135, 0
  %137 = icmp eq i8 %131, 95
  %138 = or i1 %137, %136
  br i1 %138, label %350, label %139

139:                                              ; preds = %112, %127, %121
  %140 = phi i8* [ %113, %112 ], [ %115, %127 ], [ %115, %121 ]
  %141 = icmp ult i8* %34, %140
  br i1 %141, label %142, label %350

142:                                              ; preds = %139
  %143 = tail call i16** @__ctype_b_loc() #14
  %144 = load i16*, i16** %143, align 8
  %145 = load i8, i8* %34, align 1
  %146 = zext i8 %145 to i64
  %147 = getelementptr inbounds i16, i16* %144, i64 %146
  %148 = load i16, i16* %147, align 2
  %149 = and i16 %148, 8
  %150 = icmp ne i16 %149, 0
  %151 = icmp eq i8 %145, 95
  %152 = or i1 %151, %150
  br i1 %152, label %207, label %350

153:                                              ; preds = %33
  %154 = load i8*, i8** %9, align 8
  %155 = icmp eq i8* %34, %154
  br i1 %155, label %156, label %160

156:                                              ; preds = %153
  %157 = load i32, i32* %10, align 8
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %179, label %160

160:                                              ; preds = %156, %153
  %161 = icmp ult i8* %34, %154
  br i1 %161, label %162, label %350

162:                                              ; preds = %160
  %163 = load i8, i8* %34, align 1
  %164 = icmp eq i8 %163, 10
  br i1 %164, label %165, label %169

165:                                              ; preds = %162
  %166 = load i32, i32* %31, align 8
  %167 = and i32 %166, 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %179

169:                                              ; preds = %165, %162
  %170 = tail call i16** @__ctype_b_loc() #14
  %171 = load i16*, i16** %170, align 8
  %172 = zext i8 %163 to i64
  %173 = getelementptr inbounds i16, i16* %171, i64 %172
  %174 = load i16, i16* %173, align 2
  %175 = and i16 %174, 8
  %176 = icmp ne i16 %175, 0
  %177 = icmp eq i8 %163, 95
  %178 = or i1 %177, %176
  br i1 %178, label %350, label %179

179:                                              ; preds = %169, %156, %165
  %180 = load i8*, i8** %11, align 8
  %181 = icmp ugt i8* %34, %180
  br i1 %181, label %182, label %350

182:                                              ; preds = %179
  %183 = tail call i16** @__ctype_b_loc() #14
  %184 = load i16*, i16** %183, align 8
  %185 = getelementptr inbounds i8, i8* %34, i64 -1
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i64
  %188 = getelementptr inbounds i16, i16* %184, i64 %187
  %189 = load i16, i16* %188, align 2
  %190 = and i16 %189, 8
  %191 = icmp ne i16 %190, 0
  %192 = icmp eq i8 %186, 95
  %193 = or i1 %192, %191
  br i1 %193, label %207, label %350

194:                                              ; preds = %33
  %195 = add nsw i64 %35, 1
  %196 = getelementptr inbounds i64, i64* %30, i64 %195
  %197 = load i64, i64* %196, align 8
  br label %198

198:                                              ; preds = %198, %194
  %199 = phi i64 [ %195, %194 ], [ %202, %198 ]
  %200 = phi i64 [ %197, %194 ], [ %204, %198 ]
  %201 = and i64 %200, 134217727
  %202 = add i64 %201, %199
  %203 = getelementptr inbounds i64, i64* %30, i64 %202
  %204 = load i64, i64* %203, align 8
  %205 = and i64 %204, 4160749568
  %206 = icmp eq i64 %205, 2415919104
  br i1 %206, label %207, label %198

207:                                              ; preds = %198, %182, %142, %43, %59, %74, %85, %92, %101, %53, %33
  %208 = phi i64 [ %35, %33 ], [ %35, %182 ], [ %35, %142 ], [ %35, %101 ], [ %35, %92 ], [ %35, %85 ], [ %35, %74 ], [ %35, %59 ], [ %35, %53 ], [ %35, %43 ], [ %202, %198 ]
  %209 = phi i8* [ %34, %33 ], [ %34, %182 ], [ %34, %142 ], [ %34, %101 ], [ %34, %92 ], [ %34, %85 ], [ %34, %74 ], [ %62, %59 ], [ %54, %53 ], [ %44, %43 ], [ %34, %198 ]
  %210 = add nsw i64 %208, 1
  %211 = icmp slt i64 %210, %4
  br i1 %211, label %33, label %212

212:                                              ; preds = %275, %260, %267, %207, %7
  %213 = phi i8* [ %1, %7 ], [ %209, %207 ], [ %34, %267 ], [ %262, %260 ], [ %34, %275 ]
  %214 = icmp eq i8* %213, %2
  %215 = select i1 %214, i8* %213, i8* null
  br label %350

216:                                              ; preds = %33
  %217 = add nsw i64 %35, 1
  %218 = load %struct.re_guts*, %struct.re_guts** %8, align 8
  %219 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %218, i64 0, i32 1
  %220 = load i64*, i64** %219, align 8
  %221 = getelementptr inbounds i64, i64* %220, i64 %35
  %222 = load i64, i64* %221, align 8
  %223 = and i64 %222, 4160749568
  %224 = add nsw i64 %223, -939524096
  %225 = lshr exact i64 %224, 27
  switch i64 %225, label %350 [
    i64 0, label %226
    i64 4, label %264
    i64 2, label %271
    i64 3, label %278
    i64 8, label %292
    i64 6, label %322
    i64 7, label %336
  ]

226:                                              ; preds = %216
  %227 = and i64 %222, 134217727
  %228 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %12, align 8
  %229 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %228, i64 %227, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = icmp eq i64 %230, -1
  br i1 %231, label %350, label %232

232:                                              ; preds = %226
  %233 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %228, i64 %227, i32 0
  %234 = load i64, i64* %233, align 8
  %235 = sub nsw i64 %230, %234
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %240

237:                                              ; preds = %232
  %238 = add nsw i32 %22, 1
  %239 = icmp sgt i32 %22, 100
  br i1 %239, label %350, label %240

240:                                              ; preds = %237, %232
  %241 = phi i32 [ %238, %237 ], [ %22, %232 ]
  %242 = sub i64 0, %235
  %243 = getelementptr inbounds i8, i8* %2, i64 %242
  %244 = icmp ugt i8* %34, %243
  br i1 %244, label %350, label %245

245:                                              ; preds = %240
  %246 = load i8*, i8** %13, align 8
  %247 = getelementptr inbounds i8, i8* %246, i64 %234
  %248 = tail call i32 @bcmp(i8* %34, i8* %247, i64 %235)
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %350

250:                                              ; preds = %245
  %251 = or i64 %227, 1073741824
  %252 = icmp eq i64 %222, %251
  %253 = add nsw i64 %35, 1
  br i1 %252, label %260, label %254

254:                                              ; preds = %250, %254
  %255 = phi i64 [ %259, %254 ], [ %253, %250 ]
  %256 = getelementptr inbounds i64, i64* %220, i64 %255
  %257 = load i64, i64* %256, align 8
  %258 = icmp eq i64 %257, %251
  %259 = add nsw i64 %255, 1
  br i1 %258, label %260, label %254

260:                                              ; preds = %254, %250
  %261 = phi i64 [ %253, %250 ], [ %259, %254 ]
  %262 = getelementptr inbounds i8, i8* %34, i64 %235
  %263 = icmp slt i64 %261, %4
  br i1 %263, label %21, label %212

264:                                              ; preds = %216
  %265 = tail call fastcc i8* @sbackref(%struct.smat* %0, i8* %34, i8* %2, i64 %217, i64 %4, i64 %18, i32 %22) #15
  %266 = icmp eq i8* %265, null
  br i1 %266, label %267, label %350

267:                                              ; preds = %264
  %268 = and i64 %222, 134217727
  %269 = add i64 %268, %217
  %270 = icmp slt i64 %269, %4
  br i1 %270, label %25, label %212

271:                                              ; preds = %216
  %272 = load i8**, i8*** %14, align 8
  %273 = add nsw i64 %18, 1
  %274 = getelementptr inbounds i8*, i8** %272, i64 %273
  store i8* %34, i8** %274, align 8
  br label %275

275:                                              ; preds = %271, %283, %290
  %276 = phi i64 [ %291, %290 ], [ %284, %283 ], [ %273, %271 ]
  %277 = icmp slt i64 %217, %4
  br i1 %277, label %16, label %212

278:                                              ; preds = %216
  %279 = load i8**, i8*** %14, align 8
  %280 = getelementptr inbounds i8*, i8** %279, i64 %18
  %281 = load i8*, i8** %280, align 8
  %282 = icmp eq i8* %34, %281
  br i1 %282, label %283, label %285

283:                                              ; preds = %278
  %284 = add nsw i64 %18, -1
  br label %275

285:                                              ; preds = %278
  store i8* %34, i8** %280, align 8
  %286 = and i64 %222, 134217727
  %287 = sub i64 %217, %286
  %288 = tail call fastcc i8* @sbackref(%struct.smat* %0, i8* %34, i8* %2, i64 %287, i64 %4, i64 %18, i32 %22) #15
  %289 = icmp eq i8* %288, null
  br i1 %289, label %290, label %350

290:                                              ; preds = %285
  %291 = add nsw i64 %18, -1
  br label %275

292:                                              ; preds = %216
  %293 = and i64 %222, 134217727
  %294 = add i64 %35, -1
  %295 = add i64 %294, %293
  %296 = tail call fastcc i8* @sbackref(%struct.smat* %0, i8* %34, i8* %2, i64 %217, i64 %295, i64 %18, i32 %22) #15
  %297 = icmp eq i8* %296, null
  br i1 %297, label %298, label %350

298:                                              ; preds = %292, %307
  %299 = phi i64 [ %319, %307 ], [ %295, %292 ]
  %300 = load %struct.re_guts*, %struct.re_guts** %8, align 8
  %301 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %300, i64 0, i32 1
  %302 = load i64*, i64** %301, align 8
  %303 = getelementptr inbounds i64, i64* %302, i64 %299
  %304 = load i64, i64* %303, align 8
  %305 = and i64 %304, 4160749568
  %306 = icmp eq i64 %305, 2415919104
  br i1 %306, label %350, label %307

307:                                              ; preds = %298
  %308 = add nsw i64 %299, 1
  %309 = add nsw i64 %299, 2
  %310 = getelementptr inbounds i64, i64* %302, i64 %308
  %311 = load i64, i64* %310, align 8
  %312 = and i64 %311, 134217727
  %313 = add i64 %312, %308
  %314 = getelementptr inbounds i64, i64* %302, i64 %313
  %315 = load i64, i64* %314, align 8
  %316 = and i64 %315, 4160749568
  %317 = icmp eq i64 %316, 2281701376
  %318 = add i64 %312, %299
  %319 = select i1 %317, i64 %318, i64 %313
  %320 = tail call fastcc i8* @sbackref(%struct.smat* %0, i8* %34, i8* %2, i64 %309, i64 %319, i64 %18, i32 %22) #15
  %321 = icmp eq i8* %320, null
  br i1 %321, label %298, label %350

322:                                              ; preds = %216
  %323 = and i64 %222, 134217727
  %324 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %12, align 8
  %325 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %324, i64 %323, i32 0
  %326 = load i64, i64* %325, align 8
  %327 = bitcast i8** %13 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = ptrtoint i8* %34 to i64
  %330 = sub i64 %329, %328
  store i64 %330, i64* %325, align 8
  %331 = tail call fastcc i8* @sbackref(%struct.smat* %0, i8* %34, i8* %2, i64 %217, i64 %4, i64 %18, i32 %22) #15
  %332 = icmp eq i8* %331, null
  br i1 %332, label %333, label %350

333:                                              ; preds = %322
  %334 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %12, align 8
  %335 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %334, i64 %323, i32 0
  store i64 %326, i64* %335, align 8
  br label %350

336:                                              ; preds = %216
  %337 = and i64 %222, 134217727
  %338 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %12, align 8
  %339 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %338, i64 %337, i32 1
  %340 = load i64, i64* %339, align 8
  %341 = bitcast i8** %13 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = ptrtoint i8* %34 to i64
  %344 = sub i64 %343, %342
  store i64 %344, i64* %339, align 8
  %345 = tail call fastcc i8* @sbackref(%struct.smat* %0, i8* %34, i8* %2, i64 %217, i64 %4, i64 %18, i32 %22) #15
  %346 = icmp eq i8* %345, null
  br i1 %346, label %347, label %350

347:                                              ; preds = %336
  %348 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %12, align 8
  %349 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %348, i64 %337, i32 1
  store i64 %340, i64* %349, align 8
  br label %350

350:                                              ; preds = %285, %245, %240, %237, %226, %216, %264, %160, %179, %169, %182, %125, %139, %127, %142, %96, %98, %101, %78, %81, %85, %55, %59, %51, %41, %43, %307, %298, %292, %336, %322, %212, %347, %333
  %351 = phi i8* [ null, %347 ], [ null, %333 ], [ %215, %212 ], [ %331, %322 ], [ %345, %336 ], [ %296, %292 ], [ %320, %307 ], [ null, %298 ], [ null, %43 ], [ null, %41 ], [ null, %51 ], [ null, %59 ], [ null, %55 ], [ null, %85 ], [ null, %81 ], [ null, %78 ], [ null, %101 ], [ null, %98 ], [ null, %96 ], [ null, %142 ], [ null, %127 ], [ null, %139 ], [ null, %125 ], [ null, %182 ], [ null, %169 ], [ null, %179 ], [ null, %160 ], [ null, %216 ], [ %265, %264 ], [ null, %226 ], [ null, %237 ], [ null, %240 ], [ null, %245 ], [ %288, %285 ]
  ret i8* %351
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define internal fastcc i64 @sstep(%struct.re_guts* nocapture readonly, i64, i64, i64, i32, i64) unnamed_addr #7 {
  %7 = icmp eq i64 %1, %2
  br i1 %7, label %179, label %8

8:                                                ; preds = %6
  %9 = shl i64 1, %1
  %10 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %0, i64 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %0, i64 0, i32 4
  %13 = icmp sgt i32 %4, 127
  %14 = and i32 %4, 255
  %15 = zext i32 %14 to i64
  %16 = icmp eq i32 %4, 134
  %17 = icmp eq i32 %4, 133
  %18 = or i32 %4, 1
  %19 = icmp eq i32 %18, 131
  %20 = or i32 %4, 2
  %21 = icmp eq i32 %20, 131
  br label %22

22:                                               ; preds = %8, %172
  %23 = phi i64 [ %9, %8 ], [ %177, %172 ]
  %24 = phi i64 [ %1, %8 ], [ %176, %172 ]
  %25 = phi i64 [ %5, %8 ], [ %173, %172 ]
  %26 = getelementptr inbounds i64, i64* %11, i64 %24
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 4160749568
  %29 = add nsw i64 %28, -134217728
  %30 = lshr exact i64 %29, 27
  switch i64 %30, label %172 [
    i64 17, label %168
    i64 1, label %31
    i64 2, label %40
    i64 3, label %45
    i64 18, label %50
    i64 19, label %55
    i64 4, label %60
    i64 5, label %65
    i64 6, label %81
    i64 7, label %81
    i64 8, label %85
    i64 9, label %89
    i64 10, label %107
    i64 11, label %115
    i64 12, label %119
    i64 13, label %119
    i64 14, label %123
    i64 15, label %131
    i64 16, label %154
  ]

31:                                               ; preds = %22
  %32 = trunc i64 %27 to i32
  %33 = shl i32 %32, 24
  %34 = ashr exact i32 %33, 24
  %35 = icmp eq i32 %34, %4
  br i1 %35, label %36, label %172

36:                                               ; preds = %31
  %37 = and i64 %23, %3
  %38 = shl i64 %37, 1
  %39 = or i64 %38, %25
  br label %172

40:                                               ; preds = %22
  br i1 %21, label %41, label %172

41:                                               ; preds = %40
  %42 = and i64 %23, %3
  %43 = shl i64 %42, 1
  %44 = or i64 %43, %25
  br label %172

45:                                               ; preds = %22
  br i1 %19, label %46, label %172

46:                                               ; preds = %45
  %47 = and i64 %23, %3
  %48 = shl i64 %47, 1
  %49 = or i64 %48, %25
  br label %172

50:                                               ; preds = %22
  br i1 %17, label %51, label %172

51:                                               ; preds = %50
  %52 = and i64 %23, %3
  %53 = shl i64 %52, 1
  %54 = or i64 %53, %25
  br label %172

55:                                               ; preds = %22
  br i1 %16, label %56, label %172

56:                                               ; preds = %55
  %57 = and i64 %23, %3
  %58 = shl i64 %57, 1
  %59 = or i64 %58, %25
  br label %172

60:                                               ; preds = %22
  br i1 %13, label %172, label %61

61:                                               ; preds = %60
  %62 = and i64 %23, %3
  %63 = shl i64 %62, 1
  %64 = or i64 %63, %25
  br label %172

65:                                               ; preds = %22
  %66 = load %struct.cset*, %struct.cset** %12, align 8
  %67 = and i64 %27, 134217727
  br i1 %13, label %172, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %struct.cset, %struct.cset* %66, i64 %67, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 %15
  %72 = load i8, i8* %71, align 1
  %73 = getelementptr inbounds %struct.cset, %struct.cset* %66, i64 %67, i32 1
  %74 = load i8, i8* %73, align 8
  %75 = and i8 %74, %72
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %172, label %77

77:                                               ; preds = %68
  %78 = and i64 %23, %3
  %79 = shl i64 %78, 1
  %80 = or i64 %79, %25
  br label %172

81:                                               ; preds = %22, %22
  %82 = and i64 %23, %25
  %83 = shl i64 %82, 1
  %84 = or i64 %83, %25
  br label %172

85:                                               ; preds = %22
  %86 = and i64 %23, %25
  %87 = shl i64 %86, 1
  %88 = or i64 %87, %25
  br label %172

89:                                               ; preds = %22
  %90 = and i64 %23, %25
  %91 = shl i64 %90, 1
  %92 = or i64 %91, %25
  %93 = and i64 %27, 134217727
  %94 = lshr i64 %23, %93
  %95 = and i64 %94, %92
  %96 = icmp ne i64 %95, 0
  %97 = and i64 %92, %23
  %98 = lshr i64 %97, %93
  %99 = or i64 %98, %92
  %100 = and i64 %99, %94
  %101 = icmp eq i64 %100, 0
  %102 = or i1 %96, %101
  br i1 %102, label %172, label %103

103:                                              ; preds = %89
  %104 = xor i64 %93, -1
  %105 = add i64 %24, %104
  %106 = shl i64 1, %105
  br label %172

107:                                              ; preds = %22
  %108 = and i64 %23, %25
  %109 = shl i64 %108, 1
  %110 = or i64 %109, %25
  %111 = and i64 %110, %23
  %112 = and i64 %27, 134217727
  %113 = shl i64 %111, %112
  %114 = or i64 %113, %110
  br label %172

115:                                              ; preds = %22
  %116 = and i64 %23, %25
  %117 = shl i64 %116, 1
  %118 = or i64 %117, %25
  br label %172

119:                                              ; preds = %22, %22
  %120 = and i64 %23, %25
  %121 = shl i64 %120, 1
  %122 = or i64 %121, %25
  br label %172

123:                                              ; preds = %22
  %124 = and i64 %23, %25
  %125 = shl i64 %124, 1
  %126 = or i64 %125, %25
  %127 = and i64 %126, %23
  %128 = and i64 %27, 134217727
  %129 = shl i64 %127, %128
  %130 = or i64 %129, %126
  br label %172

131:                                              ; preds = %22
  %132 = and i64 %23, %25
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %172, label %134

134:                                              ; preds = %131
  %135 = add nsw i64 %24, 1
  %136 = getelementptr inbounds i64, i64* %11, i64 %135
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, 4160749568
  %139 = icmp eq i64 %138, 2415919104
  br i1 %139, label %150, label %140

140:                                              ; preds = %134, %140
  %141 = phi i64 [ %147, %140 ], [ %137, %134 ]
  %142 = phi i64 [ %144, %140 ], [ 1, %134 ]
  %143 = and i64 %141, 134217727
  %144 = add i64 %143, %142
  %145 = add nsw i64 %144, %24
  %146 = getelementptr inbounds i64, i64* %11, i64 %145
  %147 = load i64, i64* %146, align 8
  %148 = and i64 %147, 4160749568
  %149 = icmp eq i64 %148, 2415919104
  br i1 %149, label %150, label %140

150:                                              ; preds = %140, %134
  %151 = phi i64 [ 1, %134 ], [ %144, %140 ]
  %152 = shl i64 %132, %151
  %153 = or i64 %152, %25
  br label %172

154:                                              ; preds = %22
  %155 = and i64 %23, %25
  %156 = shl i64 %155, 1
  %157 = or i64 %156, %25
  %158 = and i64 %27, 134217727
  %159 = add i64 %158, %24
  %160 = getelementptr inbounds i64, i64* %11, i64 %159
  %161 = load i64, i64* %160, align 8
  %162 = and i64 %161, 4160749568
  %163 = icmp eq i64 %162, 2415919104
  br i1 %163, label %172, label %164

164:                                              ; preds = %154
  %165 = and i64 %157, %23
  %166 = shl i64 %165, %158
  %167 = or i64 %166, %157
  br label %172

168:                                              ; preds = %22
  %169 = and i64 %23, %25
  %170 = shl i64 %169, 1
  %171 = or i64 %170, %25
  br label %172

172:                                              ; preds = %89, %68, %131, %154, %81, %85, %107, %115, %119, %123, %168, %36, %31, %40, %41, %45, %46, %51, %50, %56, %55, %61, %60, %77, %65, %103, %150, %164, %22
  %173 = phi i64 [ %25, %22 ], [ %167, %164 ], [ %157, %154 ], [ %153, %150 ], [ %25, %131 ], [ %130, %123 ], [ %122, %119 ], [ %118, %115 ], [ %114, %107 ], [ %99, %89 ], [ %99, %103 ], [ %88, %85 ], [ %84, %81 ], [ %25, %65 ], [ %80, %77 ], [ %25, %68 ], [ %25, %60 ], [ %64, %61 ], [ %59, %56 ], [ %25, %55 ], [ %54, %51 ], [ %25, %50 ], [ %49, %46 ], [ %25, %45 ], [ %44, %41 ], [ %25, %40 ], [ %39, %36 ], [ %25, %31 ], [ %171, %168 ]
  %174 = phi i64 [ %24, %22 ], [ %24, %164 ], [ %24, %154 ], [ %24, %150 ], [ %24, %131 ], [ %24, %123 ], [ %24, %119 ], [ %24, %115 ], [ %24, %107 ], [ %24, %89 ], [ %105, %103 ], [ %24, %85 ], [ %24, %81 ], [ %24, %65 ], [ %24, %77 ], [ %24, %68 ], [ %24, %60 ], [ %24, %61 ], [ %24, %56 ], [ %24, %55 ], [ %24, %51 ], [ %24, %50 ], [ %24, %46 ], [ %24, %45 ], [ %24, %41 ], [ %24, %40 ], [ %24, %36 ], [ %24, %31 ], [ %24, %168 ]
  %175 = phi i64 [ %23, %22 ], [ %23, %164 ], [ %23, %154 ], [ %23, %150 ], [ %23, %131 ], [ %23, %123 ], [ %23, %119 ], [ %23, %115 ], [ %23, %107 ], [ %23, %89 ], [ %106, %103 ], [ %23, %85 ], [ %23, %81 ], [ %23, %65 ], [ %23, %77 ], [ %23, %68 ], [ %23, %60 ], [ %23, %61 ], [ %23, %56 ], [ %23, %55 ], [ %23, %51 ], [ %23, %50 ], [ %23, %46 ], [ %23, %45 ], [ %23, %41 ], [ %23, %40 ], [ %23, %36 ], [ %23, %31 ], [ %23, %168 ]
  %176 = add nsw i64 %174, 1
  %177 = shl i64 %175, 1
  %178 = icmp eq i64 %176, %2
  br i1 %178, label %179, label %22

179:                                              ; preds = %172, %6
  %180 = phi i64 [ %5, %6 ], [ %173, %172 ]
  ret i64 %180
}

; Function Attrs: nounwind optsize readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc i8* @lslow(%struct.lmat* nocapture readonly, i8* readonly, i8* readnone, i64, i64) unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 10
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 13
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 12
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 4
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %1
  br i1 %14, label %19, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds i8, i8* %1, i64 -1
  %17 = load i8, i8* %16, align 1
  %18 = sext i8 %17 to i32
  br label %19

19:                                               ; preds = %5, %15
  %20 = phi i32 [ %18, %15 ], [ 128, %5 ]
  %21 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 0
  %22 = load %struct.re_guts*, %struct.re_guts** %21, align 8
  %23 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %22, i64 0, i32 7
  %24 = load i64, i64* %23, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 %24, i1 false)
  %25 = getelementptr inbounds i8, i8* %7, i64 %3
  store i8 1, i8* %25, align 1
  %26 = load %struct.re_guts*, %struct.re_guts** %21, align 8
  %27 = tail call fastcc i8* @lstep(%struct.re_guts* %26, i64 %3, i64 %4, i8* %7, i32 132, i8* %7) #15
  %28 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 5
  %29 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 1
  br label %30

30:                                               ; preds = %175, %19
  %31 = phi i8* [ %27, %19 ], [ %180, %175 ]
  %32 = phi i8* [ %1, %19 ], [ %181, %175 ]
  %33 = phi i32 [ %20, %19 ], [ %41, %175 ]
  %34 = phi i8* [ null, %19 ], [ %167, %175 ]
  %35 = load i8*, i8** %28, align 8
  %36 = icmp eq i8* %32, %35
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = load i8, i8* %32, align 1
  %39 = sext i8 %38 to i32
  br label %40

40:                                               ; preds = %30, %37
  %41 = phi i32 [ %39, %37 ], [ 128, %30 ]
  switch i32 %33, label %58 [
    i32 10, label %42
    i32 128, label %48
  ]

42:                                               ; preds = %40
  %43 = load %struct.re_guts*, %struct.re_guts** %21, align 8
  %44 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %43, i64 0, i32 6
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %58, label %54

48:                                               ; preds = %40
  %49 = load i32, i32* %29, align 8
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = load %struct.re_guts*, %struct.re_guts** %21, align 8
  br label %54

54:                                               ; preds = %52, %42
  %55 = phi %struct.re_guts* [ %53, %52 ], [ %43, %42 ]
  %56 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %55, i64 0, i32 11
  %57 = load i32, i32* %56, align 4
  br label %58

58:                                               ; preds = %42, %40, %48, %54
  %59 = phi i32 [ 129, %54 ], [ 0, %48 ], [ 0, %40 ], [ 0, %42 ]
  %60 = phi i32 [ %57, %54 ], [ 0, %48 ], [ 0, %40 ], [ 0, %42 ]
  switch i32 %41, label %80 [
    i32 10, label %61
    i32 128, label %67
  ]

61:                                               ; preds = %58
  %62 = load %struct.re_guts*, %struct.re_guts** %21, align 8
  %63 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %62, i64 0, i32 6
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %80, label %73

67:                                               ; preds = %58
  %68 = load i32, i32* %29, align 8
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %80

71:                                               ; preds = %67
  %72 = load %struct.re_guts*, %struct.re_guts** %21, align 8
  br label %73

73:                                               ; preds = %71, %61
  %74 = phi %struct.re_guts* [ %72, %71 ], [ %62, %61 ]
  %75 = icmp eq i32 %59, 129
  %76 = select i1 %75, i32 131, i32 130
  %77 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %74, i64 0, i32 12
  %78 = load i32, i32* %77, align 8
  %79 = add nsw i32 %78, %60
  br label %80

80:                                               ; preds = %61, %58, %67, %73
  %81 = phi i32 [ %76, %73 ], [ %59, %67 ], [ %59, %58 ], [ %59, %61 ]
  %82 = phi i32 [ %79, %73 ], [ %60, %67 ], [ %60, %58 ], [ %60, %61 ]
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %84, label %90

84:                                               ; preds = %80, %84
  %85 = phi i32 [ %88, %84 ], [ %82, %80 ]
  %86 = load %struct.re_guts*, %struct.re_guts** %21, align 8
  %87 = tail call fastcc i8* @lstep(%struct.re_guts* %86, i64 %3, i64 %4, i8* %31, i32 %81, i8* %31) #15
  %88 = add nsw i32 %85, -1
  %89 = icmp sgt i32 %88, 0
  br i1 %89, label %84, label %90

90:                                               ; preds = %84, %80
  %91 = icmp eq i32 %81, 129
  br i1 %91, label %107, label %92

92:                                               ; preds = %90
  %93 = icmp eq i32 %33, 128
  br i1 %93, label %154, label %94

94:                                               ; preds = %92
  %95 = tail call i16** @__ctype_b_loc() #14
  %96 = load i16*, i16** %95, align 8
  %97 = and i32 %33, 255
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i16, i16* %96, i64 %98
  %100 = load i16, i16* %99, align 2
  %101 = and i16 %100, 8
  %102 = icmp ne i16 %101, 0
  %103 = icmp eq i32 %33, 95
  %104 = or i1 %103, %102
  %105 = icmp eq i32 %41, 128
  %106 = or i1 %105, %104
  br i1 %106, label %130, label %111

107:                                              ; preds = %90
  %108 = icmp eq i32 %41, 128
  br i1 %108, label %123, label %109

109:                                              ; preds = %107
  %110 = tail call i16** @__ctype_b_loc() #14
  br label %111

111:                                              ; preds = %109, %94
  %112 = phi i16** [ %110, %109 ], [ %95, %94 ]
  %113 = load i16*, i16** %112, align 8
  %114 = and i32 %41, 255
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds i16, i16* %113, i64 %115
  %117 = load i16, i16* %116, align 2
  %118 = and i16 %117, 8
  %119 = icmp ne i16 %118, 0
  %120 = icmp eq i32 %41, 95
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 133, i32 %81
  br label %123

123:                                              ; preds = %111, %107
  %124 = phi i32 [ 129, %107 ], [ %122, %111 ]
  %125 = icmp eq i32 %33, 128
  br i1 %125, label %154, label %126

126:                                              ; preds = %123
  %127 = tail call i16** @__ctype_b_loc() #14
  %128 = and i32 %33, 255
  %129 = zext i32 %128 to i64
  br label %130

130:                                              ; preds = %126, %94
  %131 = phi i64 [ %129, %126 ], [ %98, %94 ]
  %132 = phi i16** [ %127, %126 ], [ %95, %94 ]
  %133 = phi i32 [ %124, %126 ], [ %81, %94 ]
  %134 = load i16*, i16** %132, align 8
  %135 = getelementptr inbounds i16, i16* %134, i64 %131
  %136 = load i16, i16* %135, align 2
  %137 = and i16 %136, 8
  %138 = icmp ne i16 %137, 0
  %139 = icmp eq i32 %33, 95
  %140 = or i1 %139, %138
  br i1 %140, label %141, label %154

141:                                              ; preds = %130
  %142 = icmp eq i32 %133, 130
  br i1 %142, label %158, label %143

143:                                              ; preds = %141
  %144 = icmp eq i32 %41, 128
  br i1 %144, label %154, label %145

145:                                              ; preds = %143
  %146 = and i32 %41, 255
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %134, i64 %147
  %149 = load i16, i16* %148, align 2
  %150 = and i16 %149, 8
  %151 = icmp ne i16 %150, 0
  %152 = icmp eq i32 %41, 95
  %153 = or i1 %152, %151
  br i1 %153, label %154, label %158

154:                                              ; preds = %92, %143, %123, %130, %145
  %155 = phi i32 [ %133, %145 ], [ %133, %143 ], [ %133, %130 ], [ %124, %123 ], [ %81, %92 ]
  %156 = add i32 %155, -133
  %157 = icmp ult i32 %156, 2
  br i1 %157, label %158, label %162

158:                                              ; preds = %145, %141, %154
  %159 = phi i32 [ %155, %154 ], [ 134, %141 ], [ 134, %145 ]
  %160 = load %struct.re_guts*, %struct.re_guts** %21, align 8
  %161 = tail call fastcc i8* @lstep(%struct.re_guts* %160, i64 %3, i64 %4, i8* %31, i32 %159, i8* %31) #15
  br label %162

162:                                              ; preds = %154, %158
  %163 = phi i8* [ %161, %158 ], [ %31, %154 ]
  %164 = getelementptr inbounds i8, i8* %163, i64 %4
  %165 = load i8, i8* %164, align 1
  %166 = icmp eq i8 %165, 0
  %167 = select i1 %166, i8* %34, i8* %32
  %168 = load %struct.re_guts*, %struct.re_guts** %21, align 8
  %169 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %168, i64 0, i32 7
  %170 = load i64, i64* %169, align 8
  %171 = tail call i32 @bcmp(i8* %163, i8* %9, i64 %170)
  %172 = icmp eq i32 %171, 0
  %173 = icmp eq i8* %32, %2
  %174 = or i1 %173, %172
  br i1 %174, label %182, label %175

175:                                              ; preds = %162
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %163, i64 %170, i1 false)
  %176 = load %struct.re_guts*, %struct.re_guts** %21, align 8
  %177 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %176, i64 0, i32 7
  %178 = load i64, i64* %177, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %163, i8* align 1 %9, i64 %178, i1 false)
  %179 = load %struct.re_guts*, %struct.re_guts** %21, align 8
  %180 = tail call fastcc i8* @lstep(%struct.re_guts* %179, i64 %3, i64 %4, i8* %11, i32 %41, i8* %163) #15
  %181 = getelementptr inbounds i8, i8* %32, i64 1
  br label %30

182:                                              ; preds = %162
  ret i8* %167
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc i8* @ldissect(%struct.lmat* readonly, i8*, i8*, i64, i64) unnamed_addr #0 {
  %6 = icmp slt i64 %3, %4
  br i1 %6, label %7, label %136

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 0
  %9 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 3
  %10 = bitcast i8** %9 to i64*
  %11 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 2
  br label %12

12:                                               ; preds = %7, %133
  %13 = phi i64 [ %3, %7 ], [ %39, %133 ]
  %14 = phi i8* [ %1, %7 ], [ %134, %133 ]
  %15 = load %struct.re_guts*, %struct.re_guts** %8, align 8
  %16 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %15, i64 0, i32 1
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds i64, i64* %17, i64 %13
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = and i32 %20, -134217728
  switch i32 %21, label %37 [
    i32 1207959552, label %25
    i32 1476395008, label %25
    i32 2013265920, label %22
  ]

22:                                               ; preds = %12
  %23 = and i64 %19, 4160749568
  %24 = icmp eq i64 %23, 2415919104
  br i1 %24, label %37, label %28

25:                                               ; preds = %12, %12
  %26 = and i64 %19, 134217727
  %27 = add i64 %26, %13
  br label %37

28:                                               ; preds = %22, %28
  %29 = phi i64 [ %34, %28 ], [ %19, %22 ]
  %30 = phi i64 [ %32, %28 ], [ %13, %22 ]
  %31 = and i64 %29, 134217727
  %32 = add i64 %31, %30
  %33 = getelementptr inbounds i64, i64* %17, i64 %32
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 4160749568
  %36 = icmp eq i64 %35, 2415919104
  br i1 %36, label %37, label %28

37:                                               ; preds = %28, %22, %12, %25
  %38 = phi i64 [ %13, %12 ], [ %27, %25 ], [ %13, %22 ], [ %32, %28 ]
  %39 = add nsw i64 %38, 1
  %40 = and i64 %19, 4160749568
  %41 = add nsw i64 %40, -134217728
  %42 = lshr exact i64 %41, 27
  switch i64 %42, label %133 [
    i64 13, label %126
    i64 1, label %43
    i64 12, label %119
    i64 14, label %78
    i64 8, label %59
    i64 10, label %47
    i64 4, label %45
    i64 5, label %45
  ]

43:                                               ; preds = %37
  %44 = getelementptr inbounds i8, i8* %14, i64 1
  br label %133

45:                                               ; preds = %37, %37
  %46 = getelementptr inbounds i8, i8* %14, i64 1
  br label %133

47:                                               ; preds = %37, %47
  %48 = phi i8* [ %52, %47 ], [ %2, %37 ]
  %49 = tail call fastcc i8* @lslow(%struct.lmat* %0, i8* %14, i8* %48, i64 %13, i64 %39) #15
  %50 = tail call fastcc i8* @lslow(%struct.lmat* %0, i8* %49, i8* %2, i64 %39, i64 %4) #15
  %51 = icmp eq i8* %50, %2
  %52 = getelementptr inbounds i8, i8* %49, i64 -1
  br i1 %51, label %53, label %47

53:                                               ; preds = %47
  %54 = add nsw i64 %13, 1
  %55 = tail call fastcc i8* @lslow(%struct.lmat* %0, i8* %14, i8* %49, i64 %54, i64 %38) #15
  %56 = icmp eq i8* %55, null
  br i1 %56, label %133, label %57

57:                                               ; preds = %53
  %58 = tail call fastcc i8* @ldissect(%struct.lmat* %0, i8* %14, i8* %49, i64 %54, i64 %38) #15
  br label %133

59:                                               ; preds = %37, %59
  %60 = phi i8* [ %64, %59 ], [ %2, %37 ]
  %61 = tail call fastcc i8* @lslow(%struct.lmat* %0, i8* %14, i8* %60, i64 %13, i64 %39) #15
  %62 = tail call fastcc i8* @lslow(%struct.lmat* %0, i8* %61, i8* %2, i64 %39, i64 %4) #15
  %63 = icmp eq i8* %62, %2
  %64 = getelementptr inbounds i8, i8* %61, i64 -1
  br i1 %63, label %65, label %59

65:                                               ; preds = %59
  %66 = add nsw i64 %13, 1
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i8* [ %14, %65 ], [ %70, %67 ]
  %69 = phi i8* [ %14, %65 ], [ %68, %67 ]
  %70 = tail call fastcc i8* @lslow(%struct.lmat* %0, i8* %68, i8* %61, i64 %66, i64 %38) #15
  %71 = icmp eq i8* %70, null
  %72 = icmp eq i8* %70, %68
  %73 = or i1 %71, %72
  br i1 %73, label %74, label %67

74:                                               ; preds = %67
  %75 = select i1 %71, i8* %69, i8* %68
  %76 = select i1 %71, i8* %68, i8* %70
  %77 = tail call fastcc i8* @ldissect(%struct.lmat* %0, i8* %75, i8* %76, i64 %66, i64 %38) #15
  br label %133

78:                                               ; preds = %37, %78
  %79 = phi i8* [ %83, %78 ], [ %2, %37 ]
  %80 = tail call fastcc i8* @lslow(%struct.lmat* %0, i8* %14, i8* %79, i64 %13, i64 %39) #15
  %81 = tail call fastcc i8* @lslow(%struct.lmat* %0, i8* %80, i8* %2, i64 %39, i64 %4) #15
  %82 = icmp eq i8* %81, %2
  %83 = getelementptr inbounds i8, i8* %80, i64 -1
  br i1 %82, label %84, label %78

84:                                               ; preds = %78
  %85 = load %struct.re_guts*, %struct.re_guts** %8, align 8
  %86 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %85, i64 0, i32 1
  %87 = load i64*, i64** %86, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 %13
  %89 = load i64, i64* %88, align 8
  %90 = and i64 %89, 134217727
  %91 = add i64 %13, -1
  %92 = add i64 %91, %90
  %93 = add nsw i64 %13, 1
  %94 = tail call fastcc i8* @lslow(%struct.lmat* %0, i8* %14, i8* %80, i64 %93, i64 %92) #15
  %95 = icmp eq i8* %94, %80
  br i1 %95, label %115, label %96

96:                                               ; preds = %84, %96
  %97 = phi i64 [ %111, %96 ], [ %92, %84 ]
  %98 = add nsw i64 %97, 1
  %99 = load %struct.re_guts*, %struct.re_guts** %8, align 8
  %100 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %99, i64 0, i32 1
  %101 = load i64*, i64** %100, align 8
  %102 = getelementptr inbounds i64, i64* %101, i64 %98
  %103 = load i64, i64* %102, align 8
  %104 = and i64 %103, 134217727
  %105 = add i64 %104, %98
  %106 = getelementptr inbounds i64, i64* %101, i64 %105
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 4160749568
  %109 = icmp eq i64 %108, 2281701376
  %110 = add i64 %104, %97
  %111 = select i1 %109, i64 %110, i64 %105
  %112 = add nsw i64 %97, 2
  %113 = tail call fastcc i8* @lslow(%struct.lmat* %0, i8* %14, i8* %80, i64 %112, i64 %111) #15
  %114 = icmp eq i8* %113, %80
  br i1 %114, label %115, label %96

115:                                              ; preds = %96, %84
  %116 = phi i64 [ %92, %84 ], [ %111, %96 ]
  %117 = phi i64 [ %93, %84 ], [ %112, %96 ]
  %118 = tail call fastcc i8* @ldissect(%struct.lmat* %0, i8* %14, i8* %80, i64 %117, i64 %116) #15
  br label %133

119:                                              ; preds = %37
  %120 = and i64 %19, 134217727
  %121 = load i64, i64* %10, align 8
  %122 = ptrtoint i8* %14 to i64
  %123 = sub i64 %122, %121
  %124 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %11, align 8
  %125 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %124, i64 %120, i32 0
  store i64 %123, i64* %125, align 8
  br label %133

126:                                              ; preds = %37
  %127 = and i64 %19, 134217727
  %128 = load i64, i64* %10, align 8
  %129 = ptrtoint i8* %14 to i64
  %130 = sub i64 %129, %128
  %131 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %11, align 8
  %132 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %131, i64 %127, i32 1
  store i64 %130, i64* %132, align 8
  br label %133

133:                                              ; preds = %57, %53, %43, %45, %74, %115, %119, %126, %37
  %134 = phi i8* [ %14, %37 ], [ %46, %45 ], [ %61, %74 ], [ %80, %115 ], [ %14, %119 ], [ %44, %43 ], [ %14, %126 ], [ %49, %53 ], [ %49, %57 ]
  %135 = icmp slt i64 %39, %4
  br i1 %135, label %12, label %136

136:                                              ; preds = %133, %5
  %137 = phi i8* [ %1, %5 ], [ %134, %133 ]
  ret i8* %137
}

; Function Attrs: nofree nounwind optsize ssp uwtable
define internal fastcc i8* @lbackref(%struct.lmat* readonly, i8*, i8* readnone, i64, i64, i64, i32) unnamed_addr #6 {
  %8 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 0
  %9 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 5
  %10 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 1
  %11 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 4
  %12 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 2
  %13 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 3
  %14 = getelementptr inbounds %struct.lmat, %struct.lmat* %0, i64 0, i32 7
  %15 = icmp slt i64 %3, %4
  br i1 %15, label %16, label %212

16:                                               ; preds = %7, %275
  %17 = phi i32 [ %22, %275 ], [ %6, %7 ]
  %18 = phi i64 [ %276, %275 ], [ %5, %7 ]
  %19 = phi i64 [ %217, %275 ], [ %3, %7 ]
  %20 = phi i8* [ %34, %275 ], [ %1, %7 ]
  br label %21

21:                                               ; preds = %16, %260
  %22 = phi i32 [ %17, %16 ], [ %241, %260 ]
  %23 = phi i64 [ %19, %16 ], [ %261, %260 ]
  %24 = phi i8* [ %20, %16 ], [ %262, %260 ]
  br label %25

25:                                               ; preds = %21, %267
  %26 = phi i64 [ %23, %21 ], [ %269, %267 ]
  %27 = phi i8* [ %24, %21 ], [ %34, %267 ]
  %28 = load %struct.re_guts*, %struct.re_guts** %8, align 8
  %29 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %28, i64 0, i32 1
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %28, i64 0, i32 6
  %32 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %28, i64 0, i32 4
  br label %33

33:                                               ; preds = %25, %207
  %34 = phi i8* [ %27, %25 ], [ %209, %207 ]
  %35 = phi i64 [ %26, %25 ], [ %210, %207 ]
  %36 = getelementptr inbounds i64, i64* %30, i64 %35
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4160749568
  %39 = add nsw i64 %38, -268435456
  %40 = lshr exact i64 %39, 27
  switch i64 %40, label %216 [
    i64 0, label %41
    i64 3, label %51
    i64 4, label %55
    i64 1, label %71
    i64 2, label %89
    i64 17, label %105
    i64 18, label %153
    i64 10, label %207
    i64 14, label %194
  ]

41:                                               ; preds = %33
  %42 = icmp eq i8* %34, %2
  br i1 %42, label %350, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds i8, i8* %34, i64 1
  %45 = load i8, i8* %34, align 1
  %46 = sext i8 %45 to i32
  %47 = trunc i64 %37 to i32
  %48 = shl i32 %47, 24
  %49 = ashr exact i32 %48, 24
  %50 = icmp eq i32 %49, %46
  br i1 %50, label %207, label %350

51:                                               ; preds = %33
  %52 = icmp eq i8* %34, %2
  br i1 %52, label %350, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds i8, i8* %34, i64 1
  br label %207

55:                                               ; preds = %33
  %56 = load %struct.cset*, %struct.cset** %32, align 8
  %57 = and i64 %37, 134217727
  %58 = icmp eq i8* %34, %2
  br i1 %58, label %350, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.cset, %struct.cset* %56, i64 %57, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds i8, i8* %34, i64 1
  %63 = load i8, i8* %34, align 1
  %64 = zext i8 %63 to i64
  %65 = getelementptr inbounds i8, i8* %61, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = getelementptr inbounds %struct.cset, %struct.cset* %56, i64 %57, i32 1
  %68 = load i8, i8* %67, align 8
  %69 = and i8 %68, %66
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %350, label %207

71:                                               ; preds = %33
  %72 = load i8*, i8** %11, align 8
  %73 = icmp eq i8* %34, %72
  br i1 %73, label %74, label %78

74:                                               ; preds = %71
  %75 = load i32, i32* %10, align 8
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %207, label %78

78:                                               ; preds = %74, %71
  %79 = load i8*, i8** %9, align 8
  %80 = icmp ult i8* %34, %79
  br i1 %80, label %81, label %350

81:                                               ; preds = %78
  %82 = getelementptr inbounds i8, i8* %34, i64 -1
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 10
  br i1 %84, label %85, label %350

85:                                               ; preds = %81
  %86 = load i32, i32* %31, align 8
  %87 = and i32 %86, 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %350, label %207

89:                                               ; preds = %33
  %90 = load i8*, i8** %9, align 8
  %91 = icmp eq i8* %34, %90
  br i1 %91, label %92, label %96

92:                                               ; preds = %89
  %93 = load i32, i32* %10, align 8
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %207, label %96

96:                                               ; preds = %92, %89
  %97 = icmp ult i8* %34, %90
  br i1 %97, label %98, label %350

98:                                               ; preds = %96
  %99 = load i8, i8* %34, align 1
  %100 = icmp eq i8 %99, 10
  br i1 %100, label %101, label %350

101:                                              ; preds = %98
  %102 = load i32, i32* %31, align 8
  %103 = and i32 %102, 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %350, label %207

105:                                              ; preds = %33
  %106 = load i8*, i8** %11, align 8
  %107 = icmp eq i8* %34, %106
  br i1 %107, label %108, label %114

108:                                              ; preds = %105
  %109 = load i32, i32* %10, align 8
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  %113 = load i8*, i8** %9, align 8
  br label %139

114:                                              ; preds = %108, %105
  %115 = load i8*, i8** %9, align 8
  %116 = icmp ult i8* %34, %115
  br i1 %116, label %117, label %125

117:                                              ; preds = %114
  %118 = getelementptr inbounds i8, i8* %34, i64 -1
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, 10
  br i1 %120, label %121, label %125

121:                                              ; preds = %117
  %122 = load i32, i32* %31, align 8
  %123 = and i32 %122, 8
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %139

125:                                              ; preds = %121, %117, %114
  %126 = icmp ugt i8* %34, %106
  br i1 %126, label %127, label %350

127:                                              ; preds = %125
  %128 = tail call i16** @__ctype_b_loc() #14
  %129 = load i16*, i16** %128, align 8
  %130 = getelementptr inbounds i8, i8* %34, i64 -1
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds i16, i16* %129, i64 %132
  %134 = load i16, i16* %133, align 2
  %135 = and i16 %134, 8
  %136 = icmp ne i16 %135, 0
  %137 = icmp eq i8 %131, 95
  %138 = or i1 %137, %136
  br i1 %138, label %350, label %139

139:                                              ; preds = %112, %127, %121
  %140 = phi i8* [ %113, %112 ], [ %115, %127 ], [ %115, %121 ]
  %141 = icmp ult i8* %34, %140
  br i1 %141, label %142, label %350

142:                                              ; preds = %139
  %143 = tail call i16** @__ctype_b_loc() #14
  %144 = load i16*, i16** %143, align 8
  %145 = load i8, i8* %34, align 1
  %146 = zext i8 %145 to i64
  %147 = getelementptr inbounds i16, i16* %144, i64 %146
  %148 = load i16, i16* %147, align 2
  %149 = and i16 %148, 8
  %150 = icmp ne i16 %149, 0
  %151 = icmp eq i8 %145, 95
  %152 = or i1 %151, %150
  br i1 %152, label %207, label %350

153:                                              ; preds = %33
  %154 = load i8*, i8** %9, align 8
  %155 = icmp eq i8* %34, %154
  br i1 %155, label %156, label %160

156:                                              ; preds = %153
  %157 = load i32, i32* %10, align 8
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %179, label %160

160:                                              ; preds = %156, %153
  %161 = icmp ult i8* %34, %154
  br i1 %161, label %162, label %350

162:                                              ; preds = %160
  %163 = load i8, i8* %34, align 1
  %164 = icmp eq i8 %163, 10
  br i1 %164, label %165, label %169

165:                                              ; preds = %162
  %166 = load i32, i32* %31, align 8
  %167 = and i32 %166, 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %179

169:                                              ; preds = %165, %162
  %170 = tail call i16** @__ctype_b_loc() #14
  %171 = load i16*, i16** %170, align 8
  %172 = zext i8 %163 to i64
  %173 = getelementptr inbounds i16, i16* %171, i64 %172
  %174 = load i16, i16* %173, align 2
  %175 = and i16 %174, 8
  %176 = icmp ne i16 %175, 0
  %177 = icmp eq i8 %163, 95
  %178 = or i1 %177, %176
  br i1 %178, label %350, label %179

179:                                              ; preds = %169, %156, %165
  %180 = load i8*, i8** %11, align 8
  %181 = icmp ugt i8* %34, %180
  br i1 %181, label %182, label %350

182:                                              ; preds = %179
  %183 = tail call i16** @__ctype_b_loc() #14
  %184 = load i16*, i16** %183, align 8
  %185 = getelementptr inbounds i8, i8* %34, i64 -1
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i64
  %188 = getelementptr inbounds i16, i16* %184, i64 %187
  %189 = load i16, i16* %188, align 2
  %190 = and i16 %189, 8
  %191 = icmp ne i16 %190, 0
  %192 = icmp eq i8 %186, 95
  %193 = or i1 %192, %191
  br i1 %193, label %207, label %350

194:                                              ; preds = %33
  %195 = add nsw i64 %35, 1
  %196 = getelementptr inbounds i64, i64* %30, i64 %195
  %197 = load i64, i64* %196, align 8
  br label %198

198:                                              ; preds = %198, %194
  %199 = phi i64 [ %195, %194 ], [ %202, %198 ]
  %200 = phi i64 [ %197, %194 ], [ %204, %198 ]
  %201 = and i64 %200, 134217727
  %202 = add i64 %201, %199
  %203 = getelementptr inbounds i64, i64* %30, i64 %202
  %204 = load i64, i64* %203, align 8
  %205 = and i64 %204, 4160749568
  %206 = icmp eq i64 %205, 2415919104
  br i1 %206, label %207, label %198

207:                                              ; preds = %198, %182, %142, %43, %59, %74, %85, %92, %101, %53, %33
  %208 = phi i64 [ %35, %33 ], [ %35, %182 ], [ %35, %142 ], [ %35, %101 ], [ %35, %92 ], [ %35, %85 ], [ %35, %74 ], [ %35, %59 ], [ %35, %53 ], [ %35, %43 ], [ %202, %198 ]
  %209 = phi i8* [ %34, %33 ], [ %34, %182 ], [ %34, %142 ], [ %34, %101 ], [ %34, %92 ], [ %34, %85 ], [ %34, %74 ], [ %62, %59 ], [ %54, %53 ], [ %44, %43 ], [ %34, %198 ]
  %210 = add nsw i64 %208, 1
  %211 = icmp slt i64 %210, %4
  br i1 %211, label %33, label %212

212:                                              ; preds = %275, %260, %267, %207, %7
  %213 = phi i8* [ %1, %7 ], [ %209, %207 ], [ %34, %267 ], [ %262, %260 ], [ %34, %275 ]
  %214 = icmp eq i8* %213, %2
  %215 = select i1 %214, i8* %213, i8* null
  br label %350

216:                                              ; preds = %33
  %217 = add nsw i64 %35, 1
  %218 = load %struct.re_guts*, %struct.re_guts** %8, align 8
  %219 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %218, i64 0, i32 1
  %220 = load i64*, i64** %219, align 8
  %221 = getelementptr inbounds i64, i64* %220, i64 %35
  %222 = load i64, i64* %221, align 8
  %223 = and i64 %222, 4160749568
  %224 = add nsw i64 %223, -939524096
  %225 = lshr exact i64 %224, 27
  switch i64 %225, label %350 [
    i64 0, label %226
    i64 4, label %264
    i64 2, label %271
    i64 3, label %278
    i64 8, label %292
    i64 6, label %322
    i64 7, label %336
  ]

226:                                              ; preds = %216
  %227 = and i64 %222, 134217727
  %228 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %12, align 8
  %229 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %228, i64 %227, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = icmp eq i64 %230, -1
  br i1 %231, label %350, label %232

232:                                              ; preds = %226
  %233 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %228, i64 %227, i32 0
  %234 = load i64, i64* %233, align 8
  %235 = sub nsw i64 %230, %234
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %240

237:                                              ; preds = %232
  %238 = add nsw i32 %22, 1
  %239 = icmp sgt i32 %22, 100
  br i1 %239, label %350, label %240

240:                                              ; preds = %237, %232
  %241 = phi i32 [ %238, %237 ], [ %22, %232 ]
  %242 = sub i64 0, %235
  %243 = getelementptr inbounds i8, i8* %2, i64 %242
  %244 = icmp ugt i8* %34, %243
  br i1 %244, label %350, label %245

245:                                              ; preds = %240
  %246 = load i8*, i8** %13, align 8
  %247 = getelementptr inbounds i8, i8* %246, i64 %234
  %248 = tail call i32 @bcmp(i8* %34, i8* %247, i64 %235)
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %350

250:                                              ; preds = %245
  %251 = or i64 %227, 1073741824
  %252 = icmp eq i64 %222, %251
  %253 = add nsw i64 %35, 1
  br i1 %252, label %260, label %254

254:                                              ; preds = %250, %254
  %255 = phi i64 [ %259, %254 ], [ %253, %250 ]
  %256 = getelementptr inbounds i64, i64* %220, i64 %255
  %257 = load i64, i64* %256, align 8
  %258 = icmp eq i64 %257, %251
  %259 = add nsw i64 %255, 1
  br i1 %258, label %260, label %254

260:                                              ; preds = %254, %250
  %261 = phi i64 [ %253, %250 ], [ %259, %254 ]
  %262 = getelementptr inbounds i8, i8* %34, i64 %235
  %263 = icmp slt i64 %261, %4
  br i1 %263, label %21, label %212

264:                                              ; preds = %216
  %265 = tail call fastcc i8* @lbackref(%struct.lmat* %0, i8* %34, i8* %2, i64 %217, i64 %4, i64 %18, i32 %22) #15
  %266 = icmp eq i8* %265, null
  br i1 %266, label %267, label %350

267:                                              ; preds = %264
  %268 = and i64 %222, 134217727
  %269 = add i64 %268, %217
  %270 = icmp slt i64 %269, %4
  br i1 %270, label %25, label %212

271:                                              ; preds = %216
  %272 = load i8**, i8*** %14, align 8
  %273 = add nsw i64 %18, 1
  %274 = getelementptr inbounds i8*, i8** %272, i64 %273
  store i8* %34, i8** %274, align 8
  br label %275

275:                                              ; preds = %271, %283, %290
  %276 = phi i64 [ %291, %290 ], [ %284, %283 ], [ %273, %271 ]
  %277 = icmp slt i64 %217, %4
  br i1 %277, label %16, label %212

278:                                              ; preds = %216
  %279 = load i8**, i8*** %14, align 8
  %280 = getelementptr inbounds i8*, i8** %279, i64 %18
  %281 = load i8*, i8** %280, align 8
  %282 = icmp eq i8* %34, %281
  br i1 %282, label %283, label %285

283:                                              ; preds = %278
  %284 = add nsw i64 %18, -1
  br label %275

285:                                              ; preds = %278
  store i8* %34, i8** %280, align 8
  %286 = and i64 %222, 134217727
  %287 = sub i64 %217, %286
  %288 = tail call fastcc i8* @lbackref(%struct.lmat* %0, i8* %34, i8* %2, i64 %287, i64 %4, i64 %18, i32 %22) #15
  %289 = icmp eq i8* %288, null
  br i1 %289, label %290, label %350

290:                                              ; preds = %285
  %291 = add nsw i64 %18, -1
  br label %275

292:                                              ; preds = %216
  %293 = and i64 %222, 134217727
  %294 = add i64 %35, -1
  %295 = add i64 %294, %293
  %296 = tail call fastcc i8* @lbackref(%struct.lmat* %0, i8* %34, i8* %2, i64 %217, i64 %295, i64 %18, i32 %22) #15
  %297 = icmp eq i8* %296, null
  br i1 %297, label %298, label %350

298:                                              ; preds = %292, %307
  %299 = phi i64 [ %319, %307 ], [ %295, %292 ]
  %300 = load %struct.re_guts*, %struct.re_guts** %8, align 8
  %301 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %300, i64 0, i32 1
  %302 = load i64*, i64** %301, align 8
  %303 = getelementptr inbounds i64, i64* %302, i64 %299
  %304 = load i64, i64* %303, align 8
  %305 = and i64 %304, 4160749568
  %306 = icmp eq i64 %305, 2415919104
  br i1 %306, label %350, label %307

307:                                              ; preds = %298
  %308 = add nsw i64 %299, 1
  %309 = add nsw i64 %299, 2
  %310 = getelementptr inbounds i64, i64* %302, i64 %308
  %311 = load i64, i64* %310, align 8
  %312 = and i64 %311, 134217727
  %313 = add i64 %312, %308
  %314 = getelementptr inbounds i64, i64* %302, i64 %313
  %315 = load i64, i64* %314, align 8
  %316 = and i64 %315, 4160749568
  %317 = icmp eq i64 %316, 2281701376
  %318 = add i64 %312, %299
  %319 = select i1 %317, i64 %318, i64 %313
  %320 = tail call fastcc i8* @lbackref(%struct.lmat* %0, i8* %34, i8* %2, i64 %309, i64 %319, i64 %18, i32 %22) #15
  %321 = icmp eq i8* %320, null
  br i1 %321, label %298, label %350

322:                                              ; preds = %216
  %323 = and i64 %222, 134217727
  %324 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %12, align 8
  %325 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %324, i64 %323, i32 0
  %326 = load i64, i64* %325, align 8
  %327 = bitcast i8** %13 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = ptrtoint i8* %34 to i64
  %330 = sub i64 %329, %328
  store i64 %330, i64* %325, align 8
  %331 = tail call fastcc i8* @lbackref(%struct.lmat* %0, i8* %34, i8* %2, i64 %217, i64 %4, i64 %18, i32 %22) #15
  %332 = icmp eq i8* %331, null
  br i1 %332, label %333, label %350

333:                                              ; preds = %322
  %334 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %12, align 8
  %335 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %334, i64 %323, i32 0
  store i64 %326, i64* %335, align 8
  br label %350

336:                                              ; preds = %216
  %337 = and i64 %222, 134217727
  %338 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %12, align 8
  %339 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %338, i64 %337, i32 1
  %340 = load i64, i64* %339, align 8
  %341 = bitcast i8** %13 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = ptrtoint i8* %34 to i64
  %344 = sub i64 %343, %342
  store i64 %344, i64* %339, align 8
  %345 = tail call fastcc i8* @lbackref(%struct.lmat* %0, i8* %34, i8* %2, i64 %217, i64 %4, i64 %18, i32 %22) #15
  %346 = icmp eq i8* %345, null
  br i1 %346, label %347, label %350

347:                                              ; preds = %336
  %348 = load %struct.llvm_regmatch_t*, %struct.llvm_regmatch_t** %12, align 8
  %349 = getelementptr inbounds %struct.llvm_regmatch_t, %struct.llvm_regmatch_t* %348, i64 %337, i32 1
  store i64 %340, i64* %349, align 8
  br label %350

350:                                              ; preds = %285, %245, %240, %237, %226, %216, %264, %160, %179, %169, %182, %125, %139, %127, %142, %96, %98, %101, %78, %81, %85, %55, %59, %51, %41, %43, %307, %298, %292, %336, %322, %212, %347, %333
  %351 = phi i8* [ null, %347 ], [ null, %333 ], [ %215, %212 ], [ %331, %322 ], [ %345, %336 ], [ %296, %292 ], [ %320, %307 ], [ null, %298 ], [ null, %43 ], [ null, %41 ], [ null, %51 ], [ null, %59 ], [ null, %55 ], [ null, %85 ], [ null, %81 ], [ null, %78 ], [ null, %101 ], [ null, %98 ], [ null, %96 ], [ null, %142 ], [ null, %127 ], [ null, %139 ], [ null, %125 ], [ null, %182 ], [ null, %169 ], [ null, %179 ], [ null, %160 ], [ null, %216 ], [ %265, %264 ], [ null, %226 ], [ null, %237 ], [ null, %240 ], [ null, %245 ], [ %288, %285 ]
  ret i8* %351
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal fastcc i8* @lstep(%struct.re_guts* nocapture readonly, i64, i64, i8* nocapture readonly, i32, i8* returned) unnamed_addr #9 {
  %7 = icmp eq i64 %1, %2
  br i1 %7, label %228, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %0, i64 0, i32 1
  %10 = getelementptr inbounds %struct.re_guts, %struct.re_guts* %0, i64 0, i32 4
  %11 = icmp sgt i32 %4, 127
  %12 = and i32 %4, 255
  %13 = zext i32 %12 to i64
  %14 = icmp eq i32 %4, 134
  %15 = icmp eq i32 %4, 133
  %16 = or i32 %4, 1
  %17 = icmp eq i32 %16, 131
  %18 = or i32 %4, 2
  %19 = icmp eq i32 %18, 131
  br label %20

20:                                               ; preds = %8, %222
  %21 = phi i64 [ %1, %8 ], [ %226, %222 ]
  %22 = phi i64 [ %1, %8 ], [ %225, %222 ]
  %23 = load i64*, i64** %9, align 8
  %24 = getelementptr inbounds i64, i64* %23, i64 %22
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, 4160749568
  %27 = add nsw i64 %26, -134217728
  %28 = lshr exact i64 %27, 27
  switch i64 %28, label %222 [
    i64 17, label %215
    i64 1, label %29
    i64 2, label %41
    i64 3, label %49
    i64 18, label %57
    i64 19, label %65
    i64 4, label %73
    i64 5, label %81
    i64 6, label %100
    i64 7, label %100
    i64 8, label %107
    i64 9, label %114
    i64 10, label %132
    i64 11, label %144
    i64 12, label %151
    i64 13, label %151
    i64 14, label %158
    i64 15, label %170
    i64 16, label %196
  ]

29:                                               ; preds = %20
  %30 = trunc i64 %25 to i32
  %31 = shl i32 %30, 24
  %32 = ashr exact i32 %31, 24
  %33 = icmp eq i32 %32, %4
  br i1 %33, label %34, label %222

34:                                               ; preds = %29
  %35 = getelementptr inbounds i8, i8* %3, i64 %21
  %36 = load i8, i8* %35, align 1
  %37 = add nsw i64 %21, 1
  %38 = getelementptr inbounds i8, i8* %5, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = or i8 %39, %36
  store i8 %40, i8* %38, align 1
  br label %222

41:                                               ; preds = %20
  br i1 %19, label %42, label %222

42:                                               ; preds = %41
  %43 = getelementptr inbounds i8, i8* %3, i64 %21
  %44 = load i8, i8* %43, align 1
  %45 = add nsw i64 %21, 1
  %46 = getelementptr inbounds i8, i8* %5, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = or i8 %47, %44
  store i8 %48, i8* %46, align 1
  br label %222

49:                                               ; preds = %20
  br i1 %17, label %50, label %222

50:                                               ; preds = %49
  %51 = getelementptr inbounds i8, i8* %3, i64 %21
  %52 = load i8, i8* %51, align 1
  %53 = add nsw i64 %21, 1
  %54 = getelementptr inbounds i8, i8* %5, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = or i8 %55, %52
  store i8 %56, i8* %54, align 1
  br label %222

57:                                               ; preds = %20
  br i1 %15, label %58, label %222

58:                                               ; preds = %57
  %59 = getelementptr inbounds i8, i8* %3, i64 %21
  %60 = load i8, i8* %59, align 1
  %61 = add nsw i64 %21, 1
  %62 = getelementptr inbounds i8, i8* %5, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = or i8 %63, %60
  store i8 %64, i8* %62, align 1
  br label %222

65:                                               ; preds = %20
  br i1 %14, label %66, label %222

66:                                               ; preds = %65
  %67 = getelementptr inbounds i8, i8* %3, i64 %21
  %68 = load i8, i8* %67, align 1
  %69 = add nsw i64 %21, 1
  %70 = getelementptr inbounds i8, i8* %5, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = or i8 %71, %68
  store i8 %72, i8* %70, align 1
  br label %222

73:                                               ; preds = %20
  br i1 %11, label %222, label %74

74:                                               ; preds = %73
  %75 = getelementptr inbounds i8, i8* %3, i64 %21
  %76 = load i8, i8* %75, align 1
  %77 = add nsw i64 %21, 1
  %78 = getelementptr inbounds i8, i8* %5, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = or i8 %79, %76
  store i8 %80, i8* %78, align 1
  br label %222

81:                                               ; preds = %20
  %82 = load %struct.cset*, %struct.cset** %10, align 8
  %83 = and i64 %25, 134217727
  br i1 %11, label %222, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %struct.cset, %struct.cset* %82, i64 %83, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 %13
  %88 = load i8, i8* %87, align 1
  %89 = getelementptr inbounds %struct.cset, %struct.cset* %82, i64 %83, i32 1
  %90 = load i8, i8* %89, align 8
  %91 = and i8 %90, %88
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %222, label %93

93:                                               ; preds = %84
  %94 = getelementptr inbounds i8, i8* %3, i64 %21
  %95 = load i8, i8* %94, align 1
  %96 = add nsw i64 %21, 1
  %97 = getelementptr inbounds i8, i8* %5, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = or i8 %98, %95
  store i8 %99, i8* %97, align 1
  br label %222

100:                                              ; preds = %20, %20
  %101 = getelementptr inbounds i8, i8* %5, i64 %21
  %102 = load i8, i8* %101, align 1
  %103 = add nsw i64 %21, 1
  %104 = getelementptr inbounds i8, i8* %5, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = or i8 %105, %102
  store i8 %106, i8* %104, align 1
  br label %222

107:                                              ; preds = %20
  %108 = getelementptr inbounds i8, i8* %5, i64 %21
  %109 = load i8, i8* %108, align 1
  %110 = add nsw i64 %21, 1
  %111 = getelementptr inbounds i8, i8* %5, i64 %110
  %112 = load i8, i8* %111, align 1
  %113 = or i8 %112, %109
  store i8 %113, i8* %111, align 1
  br label %222

114:                                              ; preds = %20
  %115 = getelementptr inbounds i8, i8* %5, i64 %21
  %116 = load i8, i8* %115, align 1
  %117 = add nsw i64 %21, 1
  %118 = getelementptr inbounds i8, i8* %5, i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = or i8 %119, %116
  store i8 %120, i8* %118, align 1
  %121 = and i64 %25, 134217727
  %122 = sub i64 %21, %121
  %123 = getelementptr inbounds i8, i8* %5, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = or i8 %124, %116
  store i8 %125, i8* %123, align 1
  %126 = icmp ne i8 %124, 0
  %127 = icmp eq i8 %125, 0
  %128 = or i1 %126, %127
  br i1 %128, label %222, label %129

129:                                              ; preds = %114
  %130 = xor i64 %121, -1
  %131 = add i64 %22, %130
  br label %222

132:                                              ; preds = %20
  %133 = getelementptr inbounds i8, i8* %5, i64 %21
  %134 = load i8, i8* %133, align 1
  %135 = add nsw i64 %21, 1
  %136 = getelementptr inbounds i8, i8* %5, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = or i8 %137, %134
  store i8 %138, i8* %136, align 1
  %139 = and i64 %25, 134217727
  %140 = add i64 %139, %21
  %141 = getelementptr inbounds i8, i8* %5, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = or i8 %142, %134
  store i8 %143, i8* %141, align 1
  br label %222

144:                                              ; preds = %20
  %145 = getelementptr inbounds i8, i8* %5, i64 %21
  %146 = load i8, i8* %145, align 1
  %147 = add nsw i64 %21, 1
  %148 = getelementptr inbounds i8, i8* %5, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = or i8 %149, %146
  store i8 %150, i8* %148, align 1
  br label %222

151:                                              ; preds = %20, %20
  %152 = getelementptr inbounds i8, i8* %5, i64 %21
  %153 = load i8, i8* %152, align 1
  %154 = add nsw i64 %21, 1
  %155 = getelementptr inbounds i8, i8* %5, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = or i8 %156, %153
  store i8 %157, i8* %155, align 1
  br label %222

158:                                              ; preds = %20
  %159 = getelementptr inbounds i8, i8* %5, i64 %21
  %160 = load i8, i8* %159, align 1
  %161 = add nsw i64 %21, 1
  %162 = getelementptr inbounds i8, i8* %5, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = or i8 %163, %160
  store i8 %164, i8* %162, align 1
  %165 = and i64 %25, 134217727
  %166 = add i64 %165, %21
  %167 = getelementptr inbounds i8, i8* %5, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = or i8 %168, %160
  store i8 %169, i8* %167, align 1
  br label %222

170:                                              ; preds = %20
  %171 = getelementptr inbounds i8, i8* %5, i64 %21
  %172 = load i8, i8* %171, align 1
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %222, label %174

174:                                              ; preds = %170
  %175 = add nsw i64 %22, 1
  %176 = getelementptr inbounds i64, i64* %23, i64 %175
  %177 = load i64, i64* %176, align 8
  %178 = and i64 %177, 4160749568
  %179 = icmp eq i64 %178, 2415919104
  br i1 %179, label %190, label %180

180:                                              ; preds = %174, %180
  %181 = phi i64 [ %187, %180 ], [ %177, %174 ]
  %182 = phi i64 [ %184, %180 ], [ 1, %174 ]
  %183 = and i64 %181, 134217727
  %184 = add i64 %183, %182
  %185 = add nsw i64 %184, %22
  %186 = getelementptr inbounds i64, i64* %23, i64 %185
  %187 = load i64, i64* %186, align 8
  %188 = and i64 %187, 4160749568
  %189 = icmp eq i64 %188, 2415919104
  br i1 %189, label %190, label %180

190:                                              ; preds = %180, %174
  %191 = phi i64 [ 1, %174 ], [ %184, %180 ]
  %192 = add nsw i64 %191, %21
  %193 = getelementptr inbounds i8, i8* %5, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = or i8 %194, %172
  store i8 %195, i8* %193, align 1
  br label %222

196:                                              ; preds = %20
  %197 = getelementptr inbounds i8, i8* %5, i64 %21
  %198 = load i8, i8* %197, align 1
  %199 = add nsw i64 %21, 1
  %200 = getelementptr inbounds i8, i8* %5, i64 %199
  %201 = load i8, i8* %200, align 1
  %202 = or i8 %201, %198
  store i8 %202, i8* %200, align 1
  %203 = load i64*, i64** %9, align 8
  %204 = and i64 %25, 134217727
  %205 = add i64 %204, %22
  %206 = getelementptr inbounds i64, i64* %203, i64 %205
  %207 = load i64, i64* %206, align 8
  %208 = and i64 %207, 4160749568
  %209 = icmp eq i64 %208, 2415919104
  br i1 %209, label %222, label %210

210:                                              ; preds = %196
  %211 = add i64 %204, %21
  %212 = getelementptr inbounds i8, i8* %5, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = or i8 %213, %198
  store i8 %214, i8* %212, align 1
  br label %222

215:                                              ; preds = %20
  %216 = getelementptr inbounds i8, i8* %5, i64 %21
  %217 = load i8, i8* %216, align 1
  %218 = add nsw i64 %21, 1
  %219 = getelementptr inbounds i8, i8* %5, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = or i8 %220, %217
  store i8 %221, i8* %219, align 1
  br label %222

222:                                              ; preds = %114, %84, %170, %196, %100, %107, %132, %144, %151, %158, %215, %34, %29, %41, %42, %49, %50, %58, %57, %66, %65, %74, %73, %93, %81, %129, %190, %210, %20
  %223 = phi i64 [ %22, %20 ], [ %22, %210 ], [ %22, %196 ], [ %22, %190 ], [ %22, %170 ], [ %22, %158 ], [ %22, %151 ], [ %22, %144 ], [ %22, %132 ], [ %22, %114 ], [ %131, %129 ], [ %22, %107 ], [ %22, %100 ], [ %22, %81 ], [ %22, %93 ], [ %22, %84 ], [ %22, %73 ], [ %22, %74 ], [ %22, %66 ], [ %22, %65 ], [ %22, %58 ], [ %22, %57 ], [ %22, %50 ], [ %22, %49 ], [ %22, %42 ], [ %22, %41 ], [ %22, %34 ], [ %22, %29 ], [ %22, %215 ]
  %224 = phi i64 [ %21, %20 ], [ %21, %210 ], [ %21, %196 ], [ %21, %190 ], [ %21, %170 ], [ %21, %158 ], [ %21, %151 ], [ %21, %144 ], [ %21, %132 ], [ %21, %114 ], [ %131, %129 ], [ %21, %107 ], [ %21, %100 ], [ %21, %81 ], [ %21, %93 ], [ %21, %84 ], [ %21, %73 ], [ %21, %74 ], [ %21, %66 ], [ %21, %65 ], [ %21, %58 ], [ %21, %57 ], [ %21, %50 ], [ %21, %49 ], [ %21, %42 ], [ %21, %41 ], [ %21, %34 ], [ %21, %29 ], [ %21, %215 ]
  %225 = add nsw i64 %223, 1
  %226 = add nsw i64 %224, 1
  %227 = icmp eq i64 %225, %2
  br i1 %227, label %228, label %20

228:                                              ; preds = %222, %6
  ret i8* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { argmemonly nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind optsize readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { nounwind optsize readonly }
attributes #13 = { nounwind optsize }
attributes #14 = { nounwind optsize readnone }
attributes #15 = { optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
