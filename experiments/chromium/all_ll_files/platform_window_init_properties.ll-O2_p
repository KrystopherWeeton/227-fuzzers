; ModuleID = '../../ui/platform_window/platform_window_init_properties.cc'
source_filename = "../../ui/platform_window/platform_window_init_properties.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::PlatformWindowInitProperties" = type <{ i32, %"class.gfx::Rect", i32, i32, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::basic_string", %"class.ui::WorkspaceExtensionDelegate"*, i32, i8, [3 x i8], %"class.gfx::ImageSkia"*, %"class.absl::optional", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.ui::X11ExtensionDelegate"*, i8, [7 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.ui::WorkspaceExtensionDelegate" = type opaque
%"class.gfx::ImageSkia" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.ui::X11ExtensionDelegate" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN2ui28PlatformWindowInitPropertiesC1Ev = hidden unnamed_addr alias void (%"struct.ui::PlatformWindowInitProperties"*), void (%"struct.ui::PlatformWindowInitProperties"*)* @_ZN2ui28PlatformWindowInitPropertiesC2Ev
@_ZN2ui28PlatformWindowInitPropertiesC1ERKN3gfx4RectEb = hidden unnamed_addr alias void (%"struct.ui::PlatformWindowInitProperties"*, %"class.gfx::Rect"*, i1), void (%"struct.ui::PlatformWindowInitProperties"*, %"class.gfx::Rect"*, i1)* @_ZN2ui28PlatformWindowInitPropertiesC2ERKN3gfx4RectEb
@_ZN2ui28PlatformWindowInitPropertiesC1EOS0_ = hidden unnamed_addr alias void (%"struct.ui::PlatformWindowInitProperties"*, %"struct.ui::PlatformWindowInitProperties"*), void (%"struct.ui::PlatformWindowInitProperties"*, %"struct.ui::PlatformWindowInitProperties"*)* @_ZN2ui28PlatformWindowInitPropertiesC2EOS0_
@_ZN2ui28PlatformWindowInitPropertiesD1Ev = hidden unnamed_addr alias void (%"struct.ui::PlatformWindowInitProperties"*), void (%"struct.ui::PlatformWindowInitProperties"*)* @_ZN2ui28PlatformWindowInitPropertiesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui28PlatformWindowInitPropertiesC2Ev(%"struct.ui::PlatformWindowInitProperties"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 3
  %3 = bitcast %"struct.ui::PlatformWindowInitProperties"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false)
  store i32 1, i32* %2, align 8
  %4 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 4
  store i8 1, i8* %4, align 4
  %5 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 6
  store i8 0, i8* %5, align 2
  %6 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 7
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 8
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 10
  %9 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 15
  store %"class.gfx::ImageSkia"* null, %"class.gfx::ImageSkia"** %9, align 8
  %10 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 17
  %12 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 37, i1 false)
  %13 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 81, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui28PlatformWindowInitPropertiesC2ERKN3gfx4RectEb(%"struct.ui::PlatformWindowInitProperties"* nocapture, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 1
  %7 = bitcast %"class.gfx::Rect"* %6 to i8*
  %8 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 16, i1 false)
  %9 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 2
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 3
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 4
  store i8 1, i8* %11, align 4
  %12 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 6
  store i8 0, i8* %12, align 2
  %13 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 7
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 8
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 10
  %16 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 15
  store %"class.gfx::ImageSkia"* null, %"class.gfx::ImageSkia"** %16, align 8
  %17 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 17
  %19 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 21
  %20 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 37, i1 false)
  %21 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 80, i1 false)
  store i8 %4, i8* %19, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui28PlatformWindowInitPropertiesC2EOS0_(%"struct.ui::PlatformWindowInitProperties"* nocapture, %"struct.ui::PlatformWindowInitProperties"* nocapture dereferenceable(184)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.ui::PlatformWindowInitProperties"* %0 to i8*
  %4 = bitcast %"struct.ui::PlatformWindowInitProperties"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 33, i1 false)
  %5 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 10
  %6 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 10
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #3
  %9 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 11
  %10 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 11
  %11 = bitcast %"class.ui::WorkspaceExtensionDelegate"** %9 to i8*
  %12 = bitcast %"class.ui::WorkspaceExtensionDelegate"** %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false)
  %13 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 17
  %14 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 17
  %15 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #3
  %17 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 18
  %18 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 18
  %19 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #3
  %21 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 19
  %22 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 19
  %23 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #3
  %25 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 20
  %26 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %1, i64 0, i32 20
  %27 = bitcast %"class.ui::X11ExtensionDelegate"** %25 to i8*
  %28 = bitcast %"class.ui::X11ExtensionDelegate"** %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 9, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui28PlatformWindowInitPropertiesD2Ev(%"struct.ui::PlatformWindowInitProperties"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 19
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #4
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 18
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #4
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 17
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #4
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %"struct.ui::PlatformWindowInitProperties", %"struct.ui::PlatformWindowInitProperties"* %0, i64 0, i32 10
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #4
  br label %37

37:                                               ; preds = %28, %34
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
