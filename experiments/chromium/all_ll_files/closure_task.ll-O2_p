; ModuleID = '../../components/offline_pages/task/closure_task.cc'
source_filename = "../../components/offline_pages/task/closure_task.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.offline_pages::ClosureTask" = type { %"class.offline_pages::Task.base", %"class.base::OnceCallback" }
%"class.offline_pages::Task.base" = type <{ i32 (...)**, %"class.base::OnceCallback", i8, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.offline_pages::Task" = type <{ i32 (...)**, %"class.base::OnceCallback", i8, i8, [6 x i8] }>

@_ZTVN13offline_pages11ClosureTaskE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.offline_pages::ClosureTask"*)* @_ZN13offline_pages11ClosureTaskD2Ev to i8*), i8* bitcast (void (%"class.offline_pages::ClosureTask"*)* @_ZN13offline_pages11ClosureTaskD0Ev to i8*), i8* bitcast (void (%"class.offline_pages::ClosureTask"*)* @_ZN13offline_pages11ClosureTask3RunEv to i8*)] }, align 8

@_ZN13offline_pages11ClosureTaskC1EN4base12OnceCallbackIFvvEEE = hidden unnamed_addr alias void (%"class.offline_pages::ClosureTask"*, %"class.base::OnceCallback"*), void (%"class.offline_pages::ClosureTask"*, %"class.base::OnceCallback"*)* @_ZN13offline_pages11ClosureTaskC2EN4base12OnceCallbackIFvvEEE
@_ZN13offline_pages11ClosureTaskD1Ev = hidden unnamed_addr alias void (%"class.offline_pages::ClosureTask"*), void (%"class.offline_pages::ClosureTask"*)* @_ZN13offline_pages11ClosureTaskD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13offline_pages11ClosureTaskC2EN4base12OnceCallbackIFvvEEE(%"class.offline_pages::ClosureTask"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.offline_pages::ClosureTask"* %0 to %"class.offline_pages::Task"*
  tail call void @_ZN13offline_pages4TaskC2Ev(%"class.offline_pages::Task"* %3) #5
  %4 = getelementptr inbounds %"class.offline_pages::ClosureTask", %"class.offline_pages::ClosureTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN13offline_pages11ClosureTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.offline_pages::ClosureTask", %"class.offline_pages::ClosureTask"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  ret void
}

declare void @_ZN13offline_pages4TaskC2Ev(%"class.offline_pages::Task"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13offline_pages11ClosureTaskD2Ev(%"class.offline_pages::ClosureTask"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.offline_pages::ClosureTask", %"class.offline_pages::ClosureTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN13offline_pages11ClosureTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.offline_pages::ClosureTask", %"class.offline_pages::ClosureTask"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #5
  %4 = bitcast %"class.offline_pages::ClosureTask"* %0 to %"class.offline_pages::Task"*
  tail call void @_ZN13offline_pages4TaskD2Ev(%"class.offline_pages::Task"* %4) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN13offline_pages4TaskD2Ev(%"class.offline_pages::Task"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13offline_pages11ClosureTaskD0Ev(%"class.offline_pages::ClosureTask"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.offline_pages::ClosureTask", %"class.offline_pages::ClosureTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN13offline_pages11ClosureTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.offline_pages::ClosureTask", %"class.offline_pages::ClosureTask"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #5
  %4 = bitcast %"class.offline_pages::ClosureTask"* %0 to %"class.offline_pages::Task"*
  tail call void @_ZN13offline_pages4TaskD2Ev(%"class.offline_pages::Task"* %4) #5
  %5 = bitcast %"class.offline_pages::ClosureTask"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13offline_pages11ClosureTask3RunEv(%"class.offline_pages::ClosureTask"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.offline_pages::ClosureTask", %"class.offline_pages::ClosureTask"* %0, i64 0, i32 1
  %4 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %10 = inttoptr i64 %7 to %"class.base::internal::BindStateBase"*
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*)**
  %13 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* %10) #5
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  %14 = bitcast %"class.offline_pages::ClosureTask"* %0 to %"class.offline_pages::Task"*
  call void @_ZN13offline_pages4Task12TaskCompleteEv(%"class.offline_pages::Task"* %14) #5
  ret void
}

declare void @_ZN13offline_pages4Task12TaskCompleteEv(%"class.offline_pages::Task"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
