; ModuleID = '../../third_party/hunspell/google/bdict_reader.cc'
source_filename = "../../third_party/hunspell/google/bdict_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.hunspell::NodeReader" = type <{ i8*, i64, i8*, i64, i32, i8, [3 x i8] }>
%"class.hunspell::WordIterator" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"*, %"class.std::__1::__compressed_pair" }
%"struct.hunspell::WordIterator::NodeInfo" = type { %"class.hunspell::NodeReader", i8, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.hunspell::WordIterator::NodeInfo"* }
%"class.hunspell::LineIterator" = type { i8*, i64, i64 }
%"class.hunspell::BDictReader" = type { i8*, i64, %"struct.hunspell::BDict::Header"*, %"struct.hunspell::BDict::AffHeader"* }
%"struct.hunspell::BDict::Header" = type { i32, i16, i16, i32, i32, %"struct.base::MD5Digest" }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"struct.hunspell::BDict::AffHeader" = type { i32, i32, i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.hunspell::ReplacementIterator" = type { %"class.hunspell::LineIterator" }

$_ZNSt3__16vectorIN8hunspell12WordIterator8NodeInfoENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

@_ZN8hunspell10NodeReaderC1Ev = hidden unnamed_addr alias void (%"class.hunspell::NodeReader"*), void (%"class.hunspell::NodeReader"*)* @_ZN8hunspell10NodeReaderC2Ev
@_ZN8hunspell10NodeReaderC1EPKhmmi = hidden unnamed_addr alias void (%"class.hunspell::NodeReader"*, i8*, i64, i64, i32), void (%"class.hunspell::NodeReader"*, i8*, i64, i64, i32)* @_ZN8hunspell10NodeReaderC2EPKhmmi
@_ZN8hunspell12WordIteratorC1ERKNS_10NodeReaderE = hidden unnamed_addr alias void (%"class.hunspell::WordIterator"*, %"class.hunspell::NodeReader"*), void (%"class.hunspell::WordIterator"*, %"class.hunspell::NodeReader"*)* @_ZN8hunspell12WordIteratorC2ERKNS_10NodeReaderE
@_ZN8hunspell12WordIteratorC1ERKS0_ = hidden unnamed_addr alias void (%"class.hunspell::WordIterator"*, %"class.hunspell::WordIterator"*), void (%"class.hunspell::WordIterator"*, %"class.hunspell::WordIterator"*)* @_ZN8hunspell12WordIteratorC2ERKS0_
@_ZN8hunspell12WordIteratorD1Ev = hidden unnamed_addr alias void (%"class.hunspell::WordIterator"*), void (%"class.hunspell::WordIterator"*)* @_ZN8hunspell12WordIteratorD2Ev
@_ZN8hunspell12LineIteratorC1EPKhmm = hidden unnamed_addr alias void (%"class.hunspell::LineIterator"*, i8*, i64, i64), void (%"class.hunspell::LineIterator"*, i8*, i64, i64)* @_ZN8hunspell12LineIteratorC2EPKhmm
@_ZN8hunspell11BDictReaderC1Ev = hidden unnamed_addr alias void (%"class.hunspell::BDictReader"*), void (%"class.hunspell::BDictReader"*)* @_ZN8hunspell11BDictReaderC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8hunspell10NodeReaderC2Ev(%"class.hunspell::NodeReader"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.hunspell::NodeReader"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 37, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8hunspell10NodeReaderC2EPKhmmi(%"class.hunspell::NodeReader"* nocapture, i8*, i64, i64, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 1
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 2
  %9 = getelementptr inbounds i8, i8* %1, i64 %2
  store i8* %9, i8** %8, align 8
  %10 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 3
  store i64 %3, i64* %10, align 8
  %11 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 4
  store i32 %4, i32* %11, align 8
  %12 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 5
  %13 = icmp ne i8* %1, null
  %14 = icmp ult i64 %3, %2
  %15 = and i1 %13, %14
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %12, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8hunspell10NodeReader8FindWordEPKhPi(%"class.hunspell::NodeReader"*, i8* nocapture readonly, i32* nocapture) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %9, %11
  br i1 %12, label %35, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 5
  %15 = load i8, i8* %14, align 4
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %35, label %17

17:                                               ; preds = %13
  %18 = icmp ult i64 %9, %11
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i8 0, i8* %14, align 4
  br label %35

20:                                               ; preds = %17
  %21 = getelementptr inbounds i8, i8* %5, i64 %9
  %22 = load i8, i8* %21, align 1
  %23 = icmp sgt i8 %22, -1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = tail call i32 @_ZNK8hunspell10NodeReader15CompareLeafNodeEPKhPi(%"class.hunspell::NodeReader"* %0, i8* %1, i32* %2)
  br label %35

26:                                               ; preds = %20
  %27 = and i8 %22, -4
  %28 = icmp eq i8 %27, -64
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = tail call i32 @_ZNK8hunspell10NodeReader12FindInLookupEPKhPi(%"class.hunspell::NodeReader"* %0, i8* %1, i32* %2)
  br label %35

31:                                               ; preds = %26
  %32 = icmp ugt i8 %22, -33
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = tail call i32 @_ZNK8hunspell10NodeReader10FindInListEPKhPi(%"class.hunspell::NodeReader"* %0, i8* %1, i32* %2)
  br label %35

35:                                               ; preds = %19, %13, %31, %7, %3, %33, %29, %24
  %36 = phi i32 [ %25, %24 ], [ %30, %29 ], [ %34, %33 ], [ 0, %3 ], [ 0, %7 ], [ 0, %31 ], [ 0, %13 ], [ 0, %19 ]
  ret i32 %36
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK8hunspell10NodeReader15CompareLeafNodeEPKhPi(%"class.hunspell::NodeReader"* nocapture, i8* nocapture readonly, i32* nocapture) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %35, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %9, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %7
  store i8 0, i8* %4, align 4
  br label %35

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %9
  %18 = load i8, i8* %17, align 1
  %19 = and i8 %18, -64
  %20 = icmp eq i8 %19, 64
  br i1 %20, label %21, label %35

21:                                               ; preds = %14
  %22 = add i64 %11, -2
  %23 = icmp ult i64 %9, %22
  br i1 %23, label %25, label %24

24:                                               ; preds = %21
  store i8 0, i8* %4, align 4
  br label %35

25:                                               ; preds = %21
  %26 = add i64 %9, 2
  %27 = getelementptr inbounds i8, i8* %16, i64 %26
  %28 = icmp eq i8* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = icmp ult i8* %27, %31
  br i1 %32, label %33, label %65

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 4
  br label %44

35:                                               ; preds = %3, %13, %14, %24, %25
  %36 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 4
  %37 = load i32, i32* %36, align 8
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %82

42:                                               ; preds = %35
  %43 = tail call i32 @_ZNK8hunspell10NodeReader23FillAffixesForLeafMatchEmPi(%"class.hunspell::NodeReader"* %0, i64 0, i32* %2)
  br label %82

44:                                               ; preds = %33, %58
  %45 = phi i64 [ 0, %33 ], [ %59, %58 ]
  %46 = phi i8* [ %27, %33 ], [ %61, %58 ]
  %47 = phi i32 [ 0, %33 ], [ %60, %58 ]
  %48 = load i8, i8* %46, align 1
  %49 = icmp eq i8 %48, 0
  %50 = trunc i64 %45 to i32
  br i1 %49, label %63, label %51

51:                                               ; preds = %44
  %52 = load i32, i32* %34, align 8
  %53 = add nsw i32 %52, %50
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %1, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, %48
  br i1 %57, label %58, label %82

58:                                               ; preds = %51
  %59 = add nuw i64 %45, 1
  %60 = add nuw nsw i32 %47, 1
  %61 = getelementptr inbounds i8, i8* %27, i64 %59
  %62 = icmp ult i8* %61, %31
  br i1 %62, label %44, label %65

63:                                               ; preds = %44
  %64 = trunc i64 %45 to i32
  br label %65

65:                                               ; preds = %63, %58, %29
  %66 = phi i32 [ 0, %29 ], [ %64, %63 ], [ %60, %58 ]
  %67 = phi i8* [ %27, %29 ], [ %46, %63 ], [ %61, %58 ]
  %68 = icmp eq i8* %67, %31
  br i1 %68, label %69, label %70

69:                                               ; preds = %65
  store i8 0, i8* %4, align 4
  br label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 4
  %72 = load i32, i32* %71, align 8
  %73 = add nsw i32 %72, %66
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %1, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %70
  %79 = add nuw nsw i32 %66, 1
  %80 = zext i32 %79 to i64
  %81 = tail call i32 @_ZNK8hunspell10NodeReader23FillAffixesForLeafMatchEmPi(%"class.hunspell::NodeReader"* %0, i64 %80, i32* %2)
  br label %82

82:                                               ; preds = %51, %69, %78, %70, %35, %42
  %83 = phi i32 [ %43, %42 ], [ 0, %35 ], [ 0, %69 ], [ %81, %78 ], [ 0, %70 ], [ 0, %51 ]
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8hunspell10NodeReader12FindInLookupEPKhPi(%"class.hunspell::NodeReader"*, i8* nocapture readonly, i32* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.hunspell::NodeReader", align 8
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds i8, i8* %1, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = bitcast %"class.hunspell::NodeReader"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 37, i1 false) #8
  %12 = zext i8 %10 to i32
  %13 = icmp eq i8 %10, 0
  br i1 %13, label %14, label %60

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 5
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %60, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %20, %22
  br i1 %23, label %25, label %24

24:                                               ; preds = %18
  store i8 0, i8* %15, align 4
  br label %60

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %20
  %29 = load i8, i8* %28, align 1
  %30 = and i8 %29, -3
  %31 = icmp eq i8 %30, -63
  br i1 %31, label %32, label %60

32:                                               ; preds = %25
  %33 = and i8 %29, -2
  %34 = icmp eq i8 %33, -62
  %35 = add i64 %20, 3
  %36 = getelementptr inbounds i8, i8* %27, i64 %35
  br i1 %34, label %37, label %41

37:                                               ; preds = %32
  %38 = bitcast i8* %36 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  br label %46

41:                                               ; preds = %32
  %42 = bitcast i8* %36 to i16*
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i64
  %45 = add i64 %20, %44
  br label %46

46:                                               ; preds = %41, %37
  %47 = phi i64 [ %40, %37 ], [ %45, %41 ]
  %48 = icmp ult i64 %47, %22
  br i1 %48, label %49, label %59

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %27, i64 %22
  %51 = icmp ne i8* %27, null
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %4, i64 0, i32 0
  store i8* %27, i8** %53, align 8
  %54 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %4, i64 0, i32 1
  store i64 %22, i64* %54, align 8
  %55 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %4, i64 0, i32 2
  store i8* %50, i8** %55, align 8
  %56 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %4, i64 0, i32 3
  store i64 %47, i64* %56, align 8
  %57 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %4, i64 0, i32 4
  store i32 %7, i32* %57, align 8
  %58 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %4, i64 0, i32 5
  store i8 %52, i8* %58, align 4
  br label %102

59:                                               ; preds = %46
  store i8 0, i8* %15, align 4
  br label %107

60:                                               ; preds = %14, %24, %25, %3
  %61 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, -1
  %66 = icmp ult i64 %62, %65
  br i1 %66, label %69, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 5
  store i8 0, i8* %68, align 4
  br label %76

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = add nuw i64 %62, 1
  %73 = getelementptr inbounds i8, i8* %71, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  br label %76

76:                                               ; preds = %67, %69
  %77 = phi i32 [ 0, %67 ], [ %75, %69 ]
  %78 = sub nsw i32 %12, %77
  %79 = icmp slt i32 %78, 0
  br i1 %79, label %107, label %80

80:                                               ; preds = %76
  %81 = add i64 %64, -2
  %82 = icmp ult i64 %62, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 5
  store i8 0, i8* %84, align 4
  br label %92

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = add i64 %62, 2
  %89 = getelementptr inbounds i8, i8* %87, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  br label %92

92:                                               ; preds = %83, %85
  %93 = phi i32 [ 0, %83 ], [ %91, %85 ]
  %94 = icmp sgt i32 %78, %93
  br i1 %94, label %107, label %95

95:                                               ; preds = %92
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 -86, i8* %5, align 1
  %96 = sext i32 %78 to i64
  %97 = call i32 @_ZNK8hunspell10NodeReader17ReaderForLookupAtEmPcPS0_(%"class.hunspell::NodeReader"* %0, i64 %96, i8* nonnull %5, %"class.hunspell::NodeReader"* nonnull %4)
  %98 = icmp eq i32 %97, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  br i1 %98, label %99, label %107

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %4, i64 0, i32 5
  %101 = load i8, i8* %100, align 4, !range !2
  br label %102

102:                                              ; preds = %99, %49
  %103 = phi i8 [ %101, %99 ], [ %52, %49 ]
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = call i32 @_ZNK8hunspell10NodeReader8FindWordEPKhPi(%"class.hunspell::NodeReader"* nonnull %4, i8* %1, i32* %2)
  br label %107

107:                                              ; preds = %102, %76, %92, %95, %59, %105
  %108 = phi i32 [ %106, %105 ], [ 0, %59 ], [ 0, %102 ], [ 0, %95 ], [ 0, %92 ], [ 0, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #8
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8hunspell10NodeReader10FindInListEPKhPi(%"class.hunspell::NodeReader"*, i8* nocapture readonly, i32* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.hunspell::NodeReader", align 8
  %6 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds i8, i8* %1, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 5
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  br i1 %13, label %21, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %15, %18
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  store i8 0, i8* %11, align 4
  br label %21

21:                                               ; preds = %3, %20
  %22 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = add i64 %15, 1
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  br label %43

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %15
  %30 = load i8, i8* %29, align 1
  %31 = and i8 %30, 15
  %32 = zext i8 %31 to i64
  %33 = add nuw i64 %15, 1
  %34 = getelementptr inbounds i8, i8* %28, i64 %33
  %35 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp ult i64 %15, %36
  br i1 %37, label %39, label %38

38:                                               ; preds = %26
  store i8 0, i8* %11, align 4
  br label %43

39:                                               ; preds = %26
  %40 = getelementptr inbounds i8, i8* %28, i64 %15
  %41 = load i8, i8* %40, align 1
  %42 = icmp ult i8 %41, -16
  br i1 %42, label %43, label %46

43:                                               ; preds = %21, %38, %39
  %44 = phi i8* [ %25, %21 ], [ %34, %38 ], [ %34, %39 ]
  %45 = phi i64 [ 0, %21 ], [ %32, %38 ], [ %32, %39 ]
  br label %46

46:                                               ; preds = %39, %43
  %47 = phi i8* [ %44, %43 ], [ %34, %39 ]
  %48 = phi i64 [ %45, %43 ], [ %32, %39 ]
  %49 = phi i64 [ 2, %43 ], [ 3, %39 ]
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %74, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 2
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %71, %51
  %55 = phi i64 [ 0, %51 ], [ %72, %71 ]
  %56 = mul nuw nsw i64 %55, %49
  %57 = getelementptr inbounds i8, i8* %47, i64 %56
  %58 = icmp ult i8* %57, %53
  br i1 %58, label %60, label %59

59:                                               ; preds = %54
  store i8 0, i8* %11, align 4
  br label %74

60:                                               ; preds = %54
  %61 = load i8, i8* %57, align 1
  %62 = icmp eq i8 %61, %10
  br i1 %62, label %63, label %71

63:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 -86, i8* %4, align 1
  %64 = bitcast %"class.hunspell::NodeReader"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %64) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 37, i1 false) #8
  %65 = call i32 @_ZNK8hunspell10NodeReader15ReaderForListAtEmPcPS0_(%"class.hunspell::NodeReader"* %0, i64 %55, i8* nonnull %4, %"class.hunspell::NodeReader"* nonnull %5)
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = call i32 @_ZNK8hunspell10NodeReader8FindWordEPKhPi(%"class.hunspell::NodeReader"* nonnull %5, i8* %1, i32* %2)
  br label %69

69:                                               ; preds = %63, %67
  %70 = phi i32 [ %68, %67 ], [ 0, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %64) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  br label %74

71:                                               ; preds = %60
  %72 = add nuw nsw i64 %55, 1
  %73 = icmp eq i64 %72, %48
  br i1 %73, label %74, label %54

74:                                               ; preds = %71, %46, %69, %59
  %75 = phi i32 [ %70, %69 ], [ 0, %59 ], [ 0, %46 ], [ 0, %71 ]
  ret i32 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8hunspell10NodeReader10GetChildAtEiPcPS0_(%"class.hunspell::NodeReader"*, i32, i8* nocapture, %"class.hunspell::NodeReader"* nocapture) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %86, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %8
  store i8 0, i8* %5, align 4
  br label %86

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %10
  %19 = load i8, i8* %18, align 1
  %20 = and i8 %19, -4
  %21 = icmp eq i8 %20, -64
  br i1 %21, label %22, label %81

22:                                               ; preds = %15
  %23 = and i8 %19, -3
  %24 = icmp eq i8 %23, -63
  br i1 %24, label %25, label %77

25:                                               ; preds = %22
  %26 = icmp eq i32 %1, 0
  br i1 %26, label %27, label %75

27:                                               ; preds = %25
  store i8 0, i8* %2, align 1
  %28 = load i8, i8* %5, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  %30 = load i64, i64* %9, align 8
  %31 = load i64, i64* %11, align 8
  br i1 %29, label %35, label %32

32:                                               ; preds = %27
  %33 = icmp ult i64 %30, %31
  br i1 %33, label %39, label %34

34:                                               ; preds = %32
  store i8 0, i8* %5, align 4
  br label %35

35:                                               ; preds = %34, %27
  %36 = load i8*, i8** %16, align 8
  %37 = add i64 %30, 3
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  br label %51

39:                                               ; preds = %32
  %40 = load i8*, i8** %16, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 %30
  %42 = load i8, i8* %41, align 1
  %43 = and i8 %42, -2
  %44 = icmp eq i8 %43, -62
  %45 = add i64 %30, 3
  %46 = getelementptr inbounds i8, i8* %40, i64 %45
  br i1 %44, label %47, label %51

47:                                               ; preds = %39
  %48 = bitcast i8* %46 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i64
  br label %58

51:                                               ; preds = %39, %35
  %52 = phi i8* [ %38, %35 ], [ %46, %39 ]
  %53 = phi i8* [ %36, %35 ], [ %40, %39 ]
  %54 = bitcast i8* %52 to i16*
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i64
  %57 = add i64 %30, %56
  br label %58

58:                                               ; preds = %51, %47
  %59 = phi i8* [ %40, %47 ], [ %53, %51 ]
  %60 = phi i64 [ %50, %47 ], [ %57, %51 ]
  %61 = icmp ult i64 %60, %31
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  store i8 0, i8* %5, align 4
  br label %86

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 4
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds i8, i8* %59, i64 %31
  %67 = icmp ne i8* %59, null
  %68 = zext i1 %67 to i8
  %69 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 0
  store i8* %59, i8** %69, align 8
  %70 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 1
  store i64 %31, i64* %70, align 8
  %71 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 2
  store i8* %66, i8** %71, align 8
  %72 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 3
  store i64 %60, i64* %72, align 8
  %73 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 4
  store i32 %65, i32* %73, align 8
  %74 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 5
  store i8 %68, i8* %74, align 4
  br label %86

75:                                               ; preds = %25
  %76 = add nsw i32 %1, -1
  br label %77

77:                                               ; preds = %75, %22
  %78 = phi i32 [ %76, %75 ], [ %1, %22 ]
  %79 = sext i32 %78 to i64
  %80 = tail call i32 @_ZNK8hunspell10NodeReader17ReaderForLookupAtEmPcPS0_(%"class.hunspell::NodeReader"* %0, i64 %79, i8* %2, %"class.hunspell::NodeReader"* %3)
  br label %86

81:                                               ; preds = %15
  %82 = icmp ugt i8 %19, -33
  br i1 %82, label %83, label %86

83:                                               ; preds = %81
  %84 = sext i32 %1 to i64
  %85 = tail call i32 @_ZNK8hunspell10NodeReader15ReaderForListAtEmPcPS0_(%"class.hunspell::NodeReader"* %0, i64 %84, i8* %2, %"class.hunspell::NodeReader"* %3)
  br label %86

86:                                               ; preds = %14, %4, %63, %62, %81, %83, %77
  %87 = phi i32 [ %80, %77 ], [ %85, %83 ], [ 1, %81 ], [ 1, %62 ], [ 0, %63 ], [ 1, %4 ], [ 1, %14 ]
  ret i32 %87
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8hunspell10NodeReader18ReaderForLookup0thEPS0_(%"class.hunspell::NodeReader"* nocapture, %"class.hunspell::NodeReader"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  br i1 %5, label %13, label %10

10:                                               ; preds = %2
  %11 = icmp ult i64 %7, %9
  br i1 %11, label %18, label %12

12:                                               ; preds = %10
  store i8 0, i8* %3, align 4
  br label %13

13:                                               ; preds = %2, %12
  %14 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = add i64 %7, 3
  %17 = getelementptr inbounds i8, i8* %15, i64 %16
  br label %31

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %7
  %22 = load i8, i8* %21, align 1
  %23 = and i8 %22, -2
  %24 = icmp eq i8 %23, -62
  %25 = add i64 %7, 3
  %26 = getelementptr inbounds i8, i8* %20, i64 %25
  br i1 %24, label %27, label %31

27:                                               ; preds = %18
  %28 = bitcast i8* %26 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  br label %38

31:                                               ; preds = %13, %18
  %32 = phi i8* [ %17, %13 ], [ %26, %18 ]
  %33 = phi i8* [ %15, %13 ], [ %20, %18 ]
  %34 = bitcast i8* %32 to i16*
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i64
  %37 = add i64 %7, %36
  br label %38

38:                                               ; preds = %31, %27
  %39 = phi i8* [ %20, %27 ], [ %33, %31 ]
  %40 = phi i64 [ %30, %27 ], [ %37, %31 ]
  %41 = icmp ult i64 %40, %9
  br i1 %41, label %43, label %42

42:                                               ; preds = %38
  store i8 0, i8* %3, align 4
  br label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 4
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds i8, i8* %39, i64 %9
  %47 = icmp ne i8* %39, null
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %1, i64 0, i32 0
  store i8* %39, i8** %49, align 8
  %50 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %1, i64 0, i32 1
  store i64 %9, i64* %50, align 8
  %51 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %1, i64 0, i32 2
  store i8* %46, i8** %51, align 8
  %52 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %1, i64 0, i32 3
  store i64 %40, i64* %52, align 8
  %53 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %1, i64 0, i32 4
  store i32 %45, i32* %53, align 8
  %54 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %1, i64 0, i32 5
  store i8 %48, i8* %54, align 4
  br label %55

55:                                               ; preds = %43, %42
  %56 = phi i32 [ 1, %42 ], [ 0, %43 ]
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8hunspell10NodeReader17ReaderForLookupAtEmPcPS0_(%"class.hunspell::NodeReader"*, i64, i8* nocapture, %"class.hunspell::NodeReader"* nocapture) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 3
  %10 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 5
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  br i1 %12, label %28, label %15

15:                                               ; preds = %4
  %16 = icmp ult i64 %8, %14
  br i1 %16, label %18, label %17

17:                                               ; preds = %15
  store i8 0, i8* %10, align 4
  br label %28

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %6, i64 %8
  %20 = load i8, i8* %19, align 1
  %21 = and i8 %20, -3
  %22 = icmp eq i8 %21, -63
  br i1 %22, label %23, label %28

23:                                               ; preds = %18
  %24 = and i8 %20, -2
  %25 = icmp eq i8 %24, -62
  %26 = select i1 %25, i64 4, i64 2
  %27 = add i64 %26, %9
  br label %28

28:                                               ; preds = %4, %17, %18, %23
  %29 = phi i8 [ 1, %23 ], [ 1, %18 ], [ 0, %17 ], [ 0, %4 ]
  %30 = phi i64 [ %27, %23 ], [ %9, %18 ], [ %9, %17 ], [ %9, %4 ]
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 1
  %33 = add i64 %14, -2
  %34 = icmp ult i64 %8, %33
  br i1 %34, label %36, label %35

35:                                               ; preds = %28
  store i8 0, i8* %10, align 4
  br label %104

36:                                               ; preds = %28
  %37 = add i64 %8, 2
  %38 = getelementptr inbounds i8, i8* %6, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = icmp ule i64 %40, %1
  %42 = icmp eq i8 %29, 0
  %43 = or i1 %41, %42
  br i1 %43, label %104, label %44

44:                                               ; preds = %36
  %45 = icmp ult i64 %8, %14
  br i1 %45, label %47, label %46

46:                                               ; preds = %44
  store i8 0, i8* %10, align 4
  br label %58

47:                                               ; preds = %44
  %48 = getelementptr inbounds i8, i8* %6, i64 %8
  %49 = load i8, i8* %48, align 1
  %50 = and i8 %49, -2
  %51 = icmp eq i8 %50, -62
  br i1 %51, label %52, label %58

52:                                               ; preds = %47
  %53 = bitcast i8* %31 to i32*
  %54 = getelementptr inbounds i32, i32* %53, i64 %1
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  %57 = icmp eq i32 %55, 0
  br i1 %57, label %104, label %66

58:                                               ; preds = %46, %47
  %59 = bitcast i8* %31 to i16*
  %60 = getelementptr inbounds i16, i16* %59, i64 %1
  %61 = load i16, i16* %60, align 2
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %104, label %63

63:                                               ; preds = %58
  %64 = zext i16 %61 to i64
  %65 = add i64 %8, %64
  br label %66

66:                                               ; preds = %52, %63
  %67 = phi i64 [ %56, %52 ], [ %65, %63 ]
  %68 = icmp ult i64 %67, %14
  br i1 %68, label %70, label %69

69:                                               ; preds = %66
  store i8 0, i8* %10, align 4
  br label %104

70:                                               ; preds = %66
  %71 = add i64 %14, -1
  %72 = icmp ult i64 %8, %71
  br i1 %72, label %74, label %73

73:                                               ; preds = %70
  store i8 0, i8* %10, align 4
  br label %79

74:                                               ; preds = %70
  %75 = add nuw i64 %8, 1
  %76 = getelementptr inbounds i8, i8* %6, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i64
  br label %79

79:                                               ; preds = %73, %74
  %80 = phi i64 [ 0, %73 ], [ %78, %74 ]
  %81 = add i64 %80, %1
  %82 = trunc i64 %81 to i8
  store i8 %82, i8* %2, align 1
  %83 = load i8, i8* %10, align 4, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %104, label %85

85:                                               ; preds = %79
  %86 = icmp ne i8 %82, 0
  %87 = zext i1 %86 to i32
  %88 = load i8*, i8** %5, align 8
  %89 = load i64, i64* %32, align 8
  %90 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 4
  %91 = load i32, i32* %90, align 8
  %92 = add nsw i32 %91, %87
  %93 = getelementptr inbounds i8, i8* %88, i64 %89
  %94 = icmp ne i8* %88, null
  %95 = icmp ult i64 %67, %89
  %96 = and i1 %94, %95
  %97 = zext i1 %96 to i8
  %98 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 0
  store i8* %88, i8** %98, align 8
  %99 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 1
  store i64 %89, i64* %99, align 8
  %100 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 2
  store i8* %93, i8** %100, align 8
  %101 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 3
  store i64 %67, i64* %101, align 8
  %102 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 4
  store i32 %92, i32* %102, align 8
  %103 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 5
  store i8 %97, i8* %103, align 4
  br label %104

104:                                              ; preds = %36, %35, %69, %85, %52, %58, %79
  %105 = phi i32 [ 1, %36 ], [ 1, %69 ], [ 0, %85 ], [ 2, %52 ], [ 2, %58 ], [ 1, %79 ], [ 1, %35 ]
  ret i32 %105
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8hunspell10NodeReader15ReaderForListAtEmPcPS0_(%"class.hunspell::NodeReader"*, i64, i8* nocapture, %"class.hunspell::NodeReader"* nocapture) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 1
  %8 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 5
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %105, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %6, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  store i8 0, i8* %8, align 4
  br label %105

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %6
  %20 = load i8, i8* %19, align 1
  %21 = and i8 %20, 15
  %22 = zext i8 %21 to i64
  %23 = icmp ugt i64 %22, %1
  br i1 %23, label %24, label %105

24:                                               ; preds = %16
  %25 = icmp ult i8 %20, -16
  %26 = getelementptr inbounds i8, i8* %18, i64 %7
  br i1 %25, label %53, label %27

27:                                               ; preds = %24
  %28 = mul i64 %1, 3
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = load i8, i8* %29, align 1
  store i8 %30, i8* %2, align 1
  %31 = load i8, i8* %8, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %27
  %34 = load i64, i64* %5, align 8
  %35 = load i64, i64* %12, align 8
  %36 = icmp ult i64 %34, %35
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  store i8 0, i8* %8, align 4
  br label %45

38:                                               ; preds = %33
  %39 = load i8*, i8** %17, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %34
  %41 = load i8, i8* %40, align 1
  %42 = and i8 %41, 15
  %43 = mul nuw nsw i8 %42, 3
  %44 = zext i8 %43 to i64
  br label %45

45:                                               ; preds = %27, %37, %38
  %46 = phi i64 [ 0, %37 ], [ %44, %38 ], [ 0, %27 ]
  %47 = add i64 %46, %7
  %48 = getelementptr inbounds i8, i8* %29, i64 1
  %49 = bitcast i8* %48 to i16*
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i64
  %52 = add i64 %47, %51
  br label %78

53:                                               ; preds = %24
  %54 = shl i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %26, i64 %54
  %56 = load i8, i8* %55, align 1
  store i8 %56, i8* %2, align 1
  %57 = load i8, i8* %8, align 4, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %53
  %60 = load i64, i64* %5, align 8
  %61 = load i64, i64* %12, align 8
  %62 = icmp ult i64 %60, %61
  br i1 %62, label %64, label %63

63:                                               ; preds = %59
  store i8 0, i8* %8, align 4
  br label %71

64:                                               ; preds = %59
  %65 = load i8*, i8** %17, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %60
  %67 = load i8, i8* %66, align 1
  %68 = shl i8 %67, 1
  %69 = and i8 %68, 30
  %70 = zext i8 %69 to i64
  br label %71

71:                                               ; preds = %53, %63, %64
  %72 = phi i64 [ 0, %63 ], [ %70, %64 ], [ 0, %53 ]
  %73 = add i64 %72, %7
  %74 = getelementptr inbounds i8, i8* %55, i64 1
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = add i64 %73, %76
  br label %78

78:                                               ; preds = %71, %45
  %79 = phi i64 [ %52, %45 ], [ %77, %71 ]
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %78
  %82 = load i64, i64* %5, align 8
  %83 = load i64, i64* %12, align 8
  %84 = icmp ult i64 %82, %83
  br i1 %84, label %86, label %85

85:                                               ; preds = %81, %78
  store i8 0, i8* %8, align 4
  br label %105

86:                                               ; preds = %81
  %87 = load i8, i8* %2, align 1
  %88 = icmp ne i8 %87, 0
  %89 = zext i1 %88 to i32
  %90 = load i8*, i8** %17, align 8
  %91 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 4
  %92 = load i32, i32* %91, align 8
  %93 = add nsw i32 %92, %89
  %94 = getelementptr inbounds i8, i8* %90, i64 %83
  %95 = icmp ne i8* %90, null
  %96 = icmp ult i64 %79, %83
  %97 = and i1 %96, %95
  %98 = zext i1 %97 to i8
  %99 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 0
  store i8* %90, i8** %99, align 8
  %100 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 1
  store i64 %83, i64* %100, align 8
  %101 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 2
  store i8* %94, i8** %101, align 8
  %102 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 3
  store i64 %79, i64* %102, align 8
  %103 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 4
  store i32 %93, i32* %103, align 8
  %104 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %3, i64 0, i32 5
  store i8 %98, i8* %104, align 4
  br label %105

105:                                              ; preds = %4, %15, %85, %86, %16
  %106 = phi i32 [ 1, %16 ], [ 1, %85 ], [ 0, %86 ], [ 1, %15 ], [ 1, %4 ]
  ret i32 %106
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK8hunspell10NodeReader23FillAffixesForLeafMatchEmPi(%"class.hunspell::NodeReader"* nocapture, i64, i32* nocapture) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = icmp ult i64 %5, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 5
  store i8 0, i8* %11, align 4
  br label %25

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %5
  %16 = load i8, i8* %15, align 1
  %17 = and i8 %16, 31
  %18 = zext i8 %17 to i32
  %19 = shl nuw nsw i32 %18, 8
  %20 = add nuw i64 %5, 1
  %21 = getelementptr inbounds i8, i8* %14, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = or i32 %19, %23
  br label %25

25:                                               ; preds = %10, %12
  %26 = phi i32 [ 0, %10 ], [ %24, %12 ]
  store i32 %26, i32* %2, align 4
  %27 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 5
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %43, label %30

30:                                               ; preds = %25
  %31 = load i64, i64* %4, align 8
  %32 = load i64, i64* %6, align 8
  %33 = icmp ult i64 %31, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  store i8 0, i8* %27, align 4
  %35 = load i32, i32* %2, align 4
  br label %43

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %31
  %40 = load i8, i8* %39, align 1
  %41 = and i8 %40, -96
  %42 = icmp eq i8 %41, 32
  br i1 %42, label %51, label %43

43:                                               ; preds = %34, %36, %25
  %44 = phi i32 [ %26, %25 ], [ %26, %36 ], [ %35, %34 ]
  %45 = icmp eq i32 %44, 8191
  br i1 %45, label %46, label %86

46:                                               ; preds = %43
  %47 = load i64, i64* %4, align 8
  %48 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %0, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = load i64, i64* %6, align 8
  br label %51

51:                                               ; preds = %46, %36
  %52 = phi i64 [ %50, %46 ], [ %32, %36 ]
  %53 = phi i8* [ %49, %46 ], [ %38, %36 ]
  %54 = phi i64 [ %47, %46 ], [ %31, %36 ]
  %55 = phi i32 [ 8191, %46 ], [ %26, %36 ]
  %56 = icmp ne i32 %55, 8191
  %57 = zext i1 %56 to i32
  %58 = add i64 %1, 2
  %59 = add i64 %58, %54
  %60 = sub i64 %52, %59
  %61 = and i64 %60, -2
  %62 = add i64 %61, %59
  %63 = getelementptr inbounds i8, i8* %53, i64 %62
  %64 = bitcast i8* %63 to i16*
  %65 = getelementptr inbounds i8, i8* %53, i64 %59
  %66 = bitcast i8* %65 to i16*
  %67 = select i1 %56, i64 31, i64 32
  %68 = zext i1 %56 to i64
  br label %69

69:                                               ; preds = %51, %80
  %70 = phi i64 [ 0, %51 ], [ %84, %80 ]
  %71 = getelementptr inbounds i16, i16* %66, i64 %70
  %72 = icmp ult i16* %71, %64
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  store i8 0, i8* %27, align 4
  br label %86

74:                                               ; preds = %69
  %75 = load i16, i16* %71, align 2
  %76 = icmp eq i16 %75, -1
  br i1 %76, label %77, label %80

77:                                               ; preds = %74
  %78 = trunc i64 %70 to i32
  %79 = add nuw nsw i32 %78, %57
  br label %86

80:                                               ; preds = %74
  %81 = zext i16 %75 to i32
  %82 = add nuw nsw i64 %70, %68
  %83 = getelementptr inbounds i32, i32* %2, i64 %82
  store i32 %81, i32* %83, align 4
  %84 = add nuw nsw i64 %70, 1
  %85 = icmp ult i64 %84, %67
  br i1 %85, label %69, label %86

86:                                               ; preds = %80, %77, %73, %43
  %87 = phi i32 [ 1, %43 ], [ %79, %77 ], [ 0, %73 ], [ 32, %80 ]
  ret i32 %87
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8hunspell12WordIteratorC2ERKNS_10NodeReaderE(%"class.hunspell::WordIterator"*, %"class.hunspell::NodeReader"* nocapture readonly dereferenceable(40)) unnamed_addr #1 align 2 {
  %3 = alloca [40 x i8], align 8
  %4 = alloca [3 x i8], align 1
  %5 = getelementptr inbounds [40 x i8], [40 x i8]* %3, i64 0, i64 0
  %6 = bitcast %"class.hunspell::WordIterator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5)
  %7 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %7)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %7, i8 -86, i64 3, i1 false)
  %8 = bitcast %"class.hunspell::NodeReader"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %8, i64 40, i1 false)
  %9 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.hunspell::WordIterator::NodeInfo"** %10 to i64*
  %12 = bitcast %"class.hunspell::WordIterator"* %0 to i64*
  %13 = bitcast %"struct.hunspell::WordIterator::NodeInfo"** %9 to i64*
  %14 = tail call i8* @_Znwm(i64 48) #9
  %15 = getelementptr inbounds i8, i8* %14, i64 48
  %16 = ptrtoint i8* %15 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %5, i64 40, i1 false)
  %17 = getelementptr inbounds i8, i8* %14, i64 40
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds i8, i8* %14, i64 41
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* nonnull align 1 %7, i64 3, i1 false)
  %19 = getelementptr inbounds i8, i8* %14, i64 44
  %20 = bitcast i8* %19 to i32*
  store i32 -1, i32* %20, align 4
  %21 = ptrtoint i8* %14 to i64
  store i64 %21, i64* %12, align 8
  store i64 %16, i64* %11, align 8
  store i64 %16, i64* %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8hunspell12WordIteratorC2ERKS0_(%"class.hunspell::WordIterator"*, %"class.hunspell::WordIterator"* readonly dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.hunspell::WordIterator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #8
  %4 = icmp eq %"class.hunspell::WordIterator"* %0, %1
  br i1 %4, label %11, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"** %7, align 8
  %9 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"** %9, align 8
  tail call void @_ZNSt3__16vectorIN8hunspell12WordIterator8NodeInfoENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"* %6, %"struct.hunspell::WordIterator::NodeInfo"* %8, %"struct.hunspell::WordIterator::NodeInfo"* %10) #8
  br label %11

11:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.hunspell::WordIterator"* @_ZN8hunspell12WordIteratoraSERKS0_(%"class.hunspell::WordIterator"* returned, %"class.hunspell::WordIterator"* readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.hunspell::WordIterator"* %0, %1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"** %6, align 8
  %8 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"** %8, align 8
  tail call void @_ZNSt3__16vectorIN8hunspell12WordIterator8NodeInfoENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"* %5, %"struct.hunspell::WordIterator::NodeInfo"* %7, %"struct.hunspell::WordIterator::NodeInfo"* %9) #8
  br label %10

10:                                               ; preds = %2, %4
  ret %"class.hunspell::WordIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8hunspell12WordIteratorD2Ev(%"class.hunspell::WordIterator"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"** %2, align 8
  %4 = icmp eq %"struct.hunspell::WordIterator::NodeInfo"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.hunspell::WordIterator::NodeInfo"* %3 to i64
  %7 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.hunspell::WordIterator::NodeInfo"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.hunspell::WordIterator::NodeInfo"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8hunspell12WordIterator7AdvanceEPcmPi(%"class.hunspell::WordIterator"*, i8* nocapture, i64, i32* nocapture) local_unnamed_addr #1 align 2 {
  %5 = alloca i8, align 1
  %6 = alloca %"class.hunspell::NodeReader", align 8
  %7 = alloca [40 x i8], align 8
  %8 = alloca [3 x i8], align 1
  %9 = getelementptr inbounds [40 x i8], [40 x i8]* %7, i64 0, i64 0
  %10 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"** %10, align 8
  %12 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"** %12, align 8
  %14 = icmp eq %"struct.hunspell::WordIterator::NodeInfo"* %11, %13
  br i1 %14, label %122, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.hunspell::NodeReader"* %6 to i8*
  %17 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %6, i64 0, i32 5
  %18 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %6, i64 0, i32 3
  %19 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %6, i64 0, i32 1
  %20 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %6, i64 0, i32 0
  %21 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i64 0, i64 0
  %22 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"struct.hunspell::WordIterator::NodeInfo"** %12 to i64*
  %24 = bitcast %"class.hunspell::WordIterator"* %0 to i64*
  %25 = bitcast %"struct.hunspell::WordIterator::NodeInfo"** %22 to i64*
  br label %26

26:                                               ; preds = %15, %118
  %27 = phi %"struct.hunspell::WordIterator::NodeInfo"* [ %13, %15 ], [ %120, %118 ]
  %28 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %27, i64 -1, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 -86, i8* %5, align 1
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 37, i1 false) #8
  %31 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %27, i64 -1, i32 0
  %32 = call i32 @_ZNK8hunspell10NodeReader10GetChildAtEiPcPS0_(%"class.hunspell::NodeReader"* %31, i32 %30, i8* nonnull %5, %"class.hunspell::NodeReader"* nonnull %6)
  switch i32 %32, label %118 [
    i32 0, label %33
    i32 1, label %115
  ]

33:                                               ; preds = %26
  %34 = load i8, i8* %17, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %49, label %36

36:                                               ; preds = %33
  %37 = load i64, i64* %18, align 8
  %38 = load i64, i64* %19, align 8
  %39 = icmp ult i64 %37, %38
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  store i8 0, i8* %17, align 4
  br label %49

41:                                               ; preds = %36
  %42 = load i8*, i8** %20, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 %37
  %44 = load i8, i8* %43, align 1
  %45 = icmp sgt i8 %44, -1
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = load i8, i8* %5, align 1
  %48 = call i32 @_ZN8hunspell12WordIterator9FoundLeafERKNS_10NodeReaderEcPcmPi(%"class.hunspell::WordIterator"* %0, %"class.hunspell::NodeReader"* nonnull dereferenceable(40) %6, i8 signext %47, i8* %1, i64 %2, i32* %3)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  br label %122

49:                                               ; preds = %40, %33, %41
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9)
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %21)
  %50 = load i8, i8* %5, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %16, i64 40, i1 false)
  %51 = load %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"** %12, align 8
  %52 = load %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"** %22, align 8
  %53 = icmp ult %"struct.hunspell::WordIterator::NodeInfo"* %51, %52
  %54 = ptrtoint %"struct.hunspell::WordIterator::NodeInfo"* %52 to i64
  br i1 %53, label %55, label %62

55:                                               ; preds = %49
  %56 = bitcast %"struct.hunspell::WordIterator::NodeInfo"* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %9, i64 40, i1 false)
  %57 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %51, i64 0, i32 1
  store i8 %50, i8* %57, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 41
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* nonnull align 1 %21, i64 3, i1 false)
  %59 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %51, i64 0, i32 2
  store i32 -1, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %51, i64 1
  %61 = ptrtoint %"struct.hunspell::WordIterator::NodeInfo"* %60 to i64
  store i64 %61, i64* %23, align 8
  br label %114

62:                                               ; preds = %49
  %63 = ptrtoint %"struct.hunspell::WordIterator::NodeInfo"* %51 to i64
  %64 = load i64, i64* %24, align 8
  %65 = sub i64 %63, %64
  %66 = sdiv exact i64 %65, 48
  %67 = add nsw i64 %66, 1
  %68 = icmp ugt i64 %67, 384307168202282325
  br i1 %68, label %69, label %71

69:                                               ; preds = %62
  %70 = bitcast %"class.hunspell::WordIterator"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #10
  unreachable

71:                                               ; preds = %62
  %72 = sub i64 %54, %64
  %73 = sdiv exact i64 %72, 48
  %74 = icmp ult i64 %73, 192153584101141162
  br i1 %74, label %75, label %80

75:                                               ; preds = %71
  %76 = shl nsw i64 %73, 1
  %77 = icmp ult i64 %76, %67
  %78 = select i1 %77, i64 %67, i64 %76
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %75, %71
  %81 = phi i64 [ %78, %75 ], [ 384307168202282325, %71 ]
  %82 = mul i64 %81, 48
  %83 = tail call i8* @_Znwm(i64 %82) #9
  %84 = bitcast i8* %83 to %"struct.hunspell::WordIterator::NodeInfo"*
  br label %85

85:                                               ; preds = %80, %75
  %86 = phi i64 [ %81, %80 ], [ 0, %75 ]
  %87 = phi %"struct.hunspell::WordIterator::NodeInfo"* [ %84, %80 ], [ null, %75 ]
  %88 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %87, i64 %66
  %89 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %87, i64 %86
  %90 = ptrtoint %"struct.hunspell::WordIterator::NodeInfo"* %89 to i64
  %91 = bitcast %"struct.hunspell::WordIterator::NodeInfo"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* nonnull align 8 %9, i64 40, i1 false)
  %92 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %87, i64 %66, i32 1
  store i8 %50, i8* %92, align 8
  %93 = getelementptr inbounds i8, i8* %91, i64 41
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %93, i8* nonnull align 1 %21, i64 3, i1 false)
  %94 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %87, i64 %66, i32 2
  store i32 -1, i32* %94, align 4
  %95 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %88, i64 1
  %96 = ptrtoint %"struct.hunspell::WordIterator::NodeInfo"* %95 to i64
  %97 = load %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"** %10, align 8
  %98 = load i64, i64* %23, align 8
  %99 = ptrtoint %"struct.hunspell::WordIterator::NodeInfo"* %97 to i64
  %100 = sub i64 %98, %99
  %101 = sdiv exact i64 %100, -48
  %102 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %88, i64 %101
  %103 = ptrtoint %"struct.hunspell::WordIterator::NodeInfo"* %102 to i64
  %104 = icmp sgt i64 %100, 0
  br i1 %104, label %105, label %109

105:                                              ; preds = %85
  %106 = bitcast %"struct.hunspell::WordIterator::NodeInfo"* %102 to i8*
  %107 = bitcast %"struct.hunspell::WordIterator::NodeInfo"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 %100, i1 false) #8
  %108 = load %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"** %10, align 8
  br label %109

109:                                              ; preds = %105, %85
  %110 = phi %"struct.hunspell::WordIterator::NodeInfo"* [ %97, %85 ], [ %108, %105 ]
  store i64 %103, i64* %24, align 8
  store i64 %96, i64* %23, align 8
  store i64 %90, i64* %25, align 8
  %111 = icmp eq %"struct.hunspell::WordIterator::NodeInfo"* %110, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %109
  %113 = bitcast %"struct.hunspell::WordIterator::NodeInfo"* %110 to i8*
  tail call void @_ZdlPv(i8* %113) #9
  br label %114

114:                                              ; preds = %55, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %21)
  br label %118

115:                                              ; preds = %26
  %116 = load %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"** %12, align 8
  %117 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %116, i64 -1
  store %"struct.hunspell::WordIterator::NodeInfo"* %117, %"struct.hunspell::WordIterator::NodeInfo"** %12, align 8
  br label %118

118:                                              ; preds = %114, %26, %115
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %119 = load %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"** %10, align 8
  %120 = load %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"** %12, align 8
  %121 = icmp eq %"struct.hunspell::WordIterator::NodeInfo"* %119, %120
  br i1 %121, label %122, label %26

122:                                              ; preds = %118, %4, %46
  %123 = phi i32 [ %48, %46 ], [ 0, %4 ], [ 0, %118 ]
  ret i32 %123
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN8hunspell12WordIterator9FoundLeafERKNS_10NodeReaderEcPcmPi(%"class.hunspell::WordIterator"* nocapture readonly, %"class.hunspell::NodeReader"* nocapture dereferenceable(40), i8 signext, i8* nocapture, i64, i32* nocapture) local_unnamed_addr #2 align 2 {
  %7 = trunc i64 %4 to i32
  %8 = add nsw i32 %7, -1
  %9 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.hunspell::WordIterator::NodeInfo"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.hunspell::WordIterator"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 48
  %16 = trunc i64 %15 to i32
  %17 = icmp sgt i32 %16, 1
  %18 = icmp sgt i32 %8, 0
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %42

20:                                               ; preds = %6
  %21 = sext i32 %8 to i64
  br label %22

22:                                               ; preds = %20, %22
  %23 = phi i64 [ %13, %20 ], [ %31, %22 ]
  %24 = phi i64 [ 0, %20 ], [ %26, %22 ]
  %25 = inttoptr i64 %23 to %"struct.hunspell::WordIterator::NodeInfo"*
  %26 = add nuw nsw i64 %24, 1
  %27 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %25, i64 %26, i32 1
  %28 = load i8, i8* %27, align 8
  %29 = getelementptr inbounds i8, i8* %3, i64 %24
  store i8 %28, i8* %29, align 1
  %30 = load i64, i64* %10, align 8
  %31 = load i64, i64* %12, align 8
  %32 = sub i64 %30, %31
  %33 = sdiv exact i64 %32, 48
  %34 = shl i64 %33, 32
  %35 = add i64 %34, -4294967296
  %36 = ashr exact i64 %35, 32
  %37 = icmp slt i64 %26, %36
  %38 = icmp slt i64 %26, %21
  %39 = and i1 %37, %38
  br i1 %39, label %22, label %40

40:                                               ; preds = %22
  %41 = trunc i64 %26 to i32
  br label %42

42:                                               ; preds = %40, %6
  %43 = phi i32 [ 0, %6 ], [ %41, %40 ]
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %3, i64 %44
  store i8 %2, i8* %45, align 1
  %46 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %1, i64 0, i32 5
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %67, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %1, i64 0, i32 3
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %1, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %51, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %49
  store i8 0, i8* %46, align 4
  br label %67

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %1, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %51
  %60 = load i8, i8* %59, align 1
  %61 = and i8 %60, -64
  %62 = icmp eq i8 %61, 64
  br i1 %62, label %63, label %67

63:                                               ; preds = %56
  %64 = add i64 %53, -2
  %65 = icmp ult i64 %51, %64
  br i1 %65, label %69, label %66

66:                                               ; preds = %63
  store i8 0, i8* %46, align 4
  br label %67

67:                                               ; preds = %66, %56, %55, %42
  %68 = add nuw nsw i32 %43, 1
  br label %98

69:                                               ; preds = %63
  %70 = add i64 %51, 2
  %71 = getelementptr inbounds i8, i8* %58, i64 %70
  %72 = add nuw nsw i32 %43, 1
  %73 = icmp slt i32 %72, %8
  %74 = icmp ne i8* %71, null
  %75 = and i1 %74, %73
  br i1 %75, label %76, label %98

76:                                               ; preds = %69
  %77 = add nuw nsw i64 %44, 1
  br label %78

78:                                               ; preds = %76, %85
  %79 = phi i64 [ %77, %76 ], [ %88, %85 ]
  %80 = phi i32 [ %72, %76 ], [ %89, %85 ]
  %81 = phi i64 [ 0, %76 ], [ %87, %85 ]
  %82 = getelementptr inbounds i8, i8* %71, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %94, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds i8, i8* %3, i64 %79
  store i8 %83, i8* %86, align 1
  %87 = add nuw nsw i64 %81, 1
  %88 = add i64 %79, 1
  %89 = add nuw nsw i32 %80, 1
  %90 = trunc i64 %88 to i32
  %91 = icmp sgt i32 %8, %90
  br i1 %91, label %78, label %92

92:                                               ; preds = %85
  %93 = add nuw i64 %81, 2
  br label %100

94:                                               ; preds = %78
  %95 = trunc i64 %79 to i32
  %96 = icmp eq i64 %81, 0
  %97 = add nuw i64 %81, 1
  br i1 %96, label %98, label %100

98:                                               ; preds = %67, %69, %94
  %99 = phi i32 [ %95, %94 ], [ %68, %67 ], [ %72, %69 ]
  br label %100

100:                                              ; preds = %92, %94, %98
  %101 = phi i32 [ %99, %98 ], [ %95, %94 ], [ %89, %92 ]
  %102 = phi i64 [ 0, %98 ], [ %97, %94 ], [ %93, %92 ]
  %103 = zext i32 %101 to i64
  %104 = getelementptr inbounds i8, i8* %3, i64 %103
  store i8 0, i8* %104, align 1
  %105 = tail call i32 @_ZNK8hunspell10NodeReader23FillAffixesForLeafMatchEmPi(%"class.hunspell::NodeReader"* %1, i64 %102, i32* %5)
  ret i32 %105
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8hunspell12LineIteratorC2EPKhmm(%"class.hunspell::LineIterator"* nocapture, i8*, i64, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 0
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 1
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 2
  store i64 %3, i64* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8hunspell12LineIterator6IsDoneEv(%"class.hunspell::LineIterator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %3, %5
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 %3
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i1 [ true, %1 ], [ %12, %7 ]
  ret i1 %14
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN8hunspell12LineIterator7AdvanceEv(%"class.hunspell::LineIterator"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %3, %5
  br i1 %6, label %7, label %23

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 %3
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %7, %16
  %14 = phi i64 [ %20, %16 ], [ %3, %7 ]
  %15 = icmp ult i64 %14, %5
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8, i8* %9, i64 %14
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  %20 = add nuw i64 %14, 1
  store i64 %20, i64* %2, align 8
  br i1 %19, label %23, label %13

21:                                               ; preds = %13
  %22 = add i64 %14, 1
  store i64 %22, i64* %2, align 8
  br label %23

23:                                               ; preds = %16, %1, %21, %7
  %24 = phi i8* [ null, %7 ], [ %10, %21 ], [ null, %1 ], [ %10, %16 ]
  ret i8* %24
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN8hunspell12LineIterator14AdvanceAndCopyEPcm(%"class.hunspell::LineIterator"* nocapture, i8* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  br i1 %8, label %9, label %48

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %5
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %48, label %15

15:                                               ; preds = %9
  %16 = icmp eq i64 %2, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %15
  %18 = icmp ult i64 %5, %7
  br i1 %18, label %19, label %35

19:                                               ; preds = %17, %32
  %20 = phi i64 [ %28, %32 ], [ 0, %17 ]
  %21 = phi i64 [ %30, %32 ], [ %5, %17 ]
  %22 = load i8*, i8** %10, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds i8, i8* %1, i64 %20
  store i8 %24, i8* %27, align 1
  %28 = add nuw i64 %20, 1
  %29 = load i64, i64* %4, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %4, align 8
  %31 = icmp eq i64 %28, %2
  br i1 %31, label %39, label %32

32:                                               ; preds = %26
  %33 = load i64, i64* %6, align 8
  %34 = icmp ult i64 %30, %33
  br i1 %34, label %19, label %35

35:                                               ; preds = %19, %32, %17
  %36 = phi i64 [ %5, %17 ], [ %21, %19 ], [ %30, %32 ]
  %37 = phi i64 [ 0, %17 ], [ %20, %19 ], [ %28, %32 ]
  %38 = add i64 %36, 1
  store i64 %38, i64* %4, align 8
  br label %43

39:                                               ; preds = %26, %15
  %40 = phi i64 [ %5, %15 ], [ %30, %26 ]
  %41 = add i64 %40, 1
  store i64 %41, i64* %4, align 8
  %42 = add i64 %2, -1
  br label %43

43:                                               ; preds = %39, %35
  %44 = phi i64 [ %42, %39 ], [ %37, %35 ]
  %45 = getelementptr inbounds i8, i8* %1, i64 %44
  store i8 0, i8* %45, align 1
  %46 = load i8, i8* %1, align 1
  %47 = icmp ne i8 %46, 0
  br label %48

48:                                               ; preds = %3, %9, %43
  %49 = phi i1 [ %47, %43 ], [ false, %9 ], [ false, %3 ]
  ret i1 %49
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN8hunspell19ReplacementIterator7GetNextEPPKcS3_(%"class.hunspell::ReplacementIterator"* nocapture, i8** nocapture, i8** nocapture) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.hunspell::ReplacementIterator", %"class.hunspell::ReplacementIterator"* %0, i64 0, i32 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.hunspell::ReplacementIterator", %"class.hunspell::ReplacementIterator"* %0, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  br i1 %8, label %9, label %50

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.hunspell::ReplacementIterator", %"class.hunspell::ReplacementIterator"* %0, i64 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %5
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %50, label %15

15:                                               ; preds = %9, %18
  %16 = phi i64 [ %22, %18 ], [ %5, %9 ]
  %17 = icmp ult i64 %16, %7
  br i1 %17, label %18, label %23

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %11, i64 %16
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  %22 = add nuw i64 %16, 1
  store i64 %22, i64* %4, align 8
  br i1 %21, label %25, label %15

23:                                               ; preds = %15
  %24 = add i64 %16, 1
  store i64 %24, i64* %4, align 8
  br label %25

25:                                               ; preds = %18, %23
  store i8* %12, i8** %1, align 8
  %26 = load i64, i64* %4, align 8
  %27 = load i64, i64* %6, align 8
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %29, label %44

29:                                               ; preds = %25
  %30 = load i8*, i8** %10, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 %26
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %44, label %34

34:                                               ; preds = %29, %37
  %35 = phi i64 [ %41, %37 ], [ %26, %29 ]
  %36 = icmp ult i64 %35, %27
  br i1 %36, label %37, label %42

37:                                               ; preds = %34
  %38 = getelementptr inbounds i8, i8* %30, i64 %35
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  %41 = add nuw i64 %35, 1
  store i64 %41, i64* %4, align 8
  br i1 %40, label %44, label %34

42:                                               ; preds = %34
  %43 = add i64 %35, 1
  store i64 %43, i64* %4, align 8
  br label %44

44:                                               ; preds = %37, %25, %29, %42
  %45 = phi i8* [ null, %29 ], [ %31, %42 ], [ null, %25 ], [ %31, %37 ]
  store i8* %45, i8** %2, align 8
  %46 = load i8*, i8** %1, align 8
  %47 = icmp ne i8* %46, null
  %48 = icmp ne i8* %45, null
  %49 = and i1 %48, %47
  br label %50

50:                                               ; preds = %3, %9, %44
  %51 = phi i1 [ %49, %44 ], [ false, %9 ], [ false, %3 ]
  ret i1 %51
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8hunspell11BDictReaderC2Ev(%"class.hunspell::BDictReader"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.hunspell::BDictReader"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN8hunspell11BDictReader4InitEPKhm(%"class.hunspell::BDictReader"* nocapture, i8*, i64) local_unnamed_addr #2 align 2 {
  %4 = icmp ult i64 %2, 32
  br i1 %4, label %41, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %0, i64 0, i32 2
  %7 = bitcast %"struct.hunspell::BDict::Header"** %6 to i8**
  store i8* %1, i8** %7, align 8
  %8 = bitcast i8* %1 to i32*
  %9 = load i32, i32* %8, align 1
  %10 = icmp eq i32 %9, 1667843138
  br i1 %10, label %11, label %41

11:                                               ; preds = %5
  %12 = getelementptr inbounds i8, i8* %1, i64 4
  %13 = bitcast i8* %12 to i16*
  %14 = load i16, i16* %13, align 1
  %15 = icmp ugt i16 %14, 2
  br i1 %15, label %41, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = zext i32 %19 to i64
  %21 = icmp ugt i64 %20, %2
  br i1 %21, label %41, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds i8, i8* %1, i64 8
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 1
  %26 = zext i32 %25 to i64
  %27 = add nuw nsw i64 %26, 16
  %28 = icmp ugt i64 %27, %2
  br i1 %28, label %41, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds i8, i8* %1, i64 %26
  %31 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %0, i64 0, i32 3
  %32 = bitcast %"struct.hunspell::BDict::AffHeader"** %31 to i8**
  store i8* %30, i8** %32, align 8
  %33 = bitcast i8* %30 to i32*
  %34 = load i32, i32* %33, align 1
  %35 = zext i32 %34 to i64
  %36 = add i64 %2, -4
  %37 = icmp ult i64 %36, %35
  br i1 %37, label %41, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %0, i64 0, i32 0
  store i8* %1, i8** %39, align 8
  %40 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %0, i64 0, i32 1
  store i64 %2, i64* %40, align 8
  br label %41

41:                                               ; preds = %29, %22, %11, %16, %5, %3, %38
  %42 = phi i1 [ true, %38 ], [ false, %3 ], [ false, %5 ], [ false, %16 ], [ false, %11 ], [ false, %22 ], [ false, %29 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8hunspell11BDictReader8FindWordEPKcPi(%"class.hunspell::BDictReader"* nocapture readonly, i8* nocapture readonly, i32* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.hunspell::NodeReader", align 8
  %5 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %0, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %54, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %0, i64 0, i32 2
  %10 = load %"struct.hunspell::BDict::Header"*, %"struct.hunspell::BDict::Header"** %9, align 8
  %11 = getelementptr inbounds %"struct.hunspell::BDict::Header", %"struct.hunspell::BDict::Header"* %10, i64 0, i32 4
  %12 = load i32, i32* %11, align 1
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %15, %13
  br i1 %16, label %17, label %54

17:                                               ; preds = %8
  %18 = bitcast %"class.hunspell::NodeReader"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %4, i64 0, i32 1
  %20 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  %21 = load i32, i32* %11, align 1
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %4, i64 0, i32 0
  store i8* %6, i8** %23, align 8
  %24 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %4, i64 0, i32 1
  store i64 %15, i64* %24, align 8
  %25 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %4, i64 0, i32 2
  %26 = getelementptr inbounds i8, i8* %6, i64 %15
  store i8* %26, i8** %25, align 8
  %27 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %4, i64 0, i32 3
  store i64 %22, i64* %27, align 8
  %28 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %4, i64 0, i32 4
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %"class.hunspell::NodeReader", %"class.hunspell::NodeReader"* %4, i64 0, i32 5
  %30 = icmp ugt i64 %15, %22
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %29, align 4
  %32 = icmp ult i64 %15, %22
  %33 = xor i1 %30, true
  %34 = or i1 %32, %33
  br i1 %34, label %52, label %35

35:                                               ; preds = %17
  br i1 %30, label %37, label %36

36:                                               ; preds = %35
  store i8 0, i8* %29, align 4
  br label %52

37:                                               ; preds = %35
  %38 = getelementptr inbounds i8, i8* %6, i64 %22
  %39 = load i8, i8* %38, align 1
  %40 = icmp sgt i8 %39, -1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = call i32 @_ZNK8hunspell10NodeReader15CompareLeafNodeEPKhPi(%"class.hunspell::NodeReader"* nonnull %4, i8* %1, i32* %2) #8
  br label %52

43:                                               ; preds = %37
  %44 = and i8 %39, -4
  %45 = icmp eq i8 %44, -64
  br i1 %45, label %46, label %48

46:                                               ; preds = %43
  %47 = call i32 @_ZNK8hunspell10NodeReader12FindInLookupEPKhPi(%"class.hunspell::NodeReader"* nonnull %4, i8* %1, i32* %2) #8
  br label %52

48:                                               ; preds = %43
  %49 = icmp ugt i8 %39, -33
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = call i32 @_ZNK8hunspell10NodeReader10FindInListEPKhPi(%"class.hunspell::NodeReader"* nonnull %4, i8* %1, i32* %2) #8
  br label %52

52:                                               ; preds = %17, %36, %41, %46, %48, %50
  %53 = phi i32 [ %42, %41 ], [ %47, %46 ], [ %51, %50 ], [ 0, %17 ], [ 0, %48 ], [ 0, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #8
  br label %54

54:                                               ; preds = %3, %8, %52
  %55 = phi i32 [ %53, %52 ], [ 0, %8 ], [ 0, %3 ]
  ret i32 %55
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK8hunspell11BDictReader17GetAfLineIteratorEv(%"class.hunspell::LineIterator"* noalias nocapture sret, %"class.hunspell::BDictReader"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %1, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %1, i64 0, i32 3
  %8 = load %"struct.hunspell::BDict::AffHeader"*, %"struct.hunspell::BDict::AffHeader"** %7, align 8
  %9 = getelementptr inbounds %"struct.hunspell::BDict::AffHeader", %"struct.hunspell::BDict::AffHeader"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %6
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %15, %13
  br i1 %16, label %21, label %17

17:                                               ; preds = %12, %2, %6
  %18 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 0
  store i8* %4, i8** %18, align 8
  %19 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 1
  %20 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %25

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 0
  store i8* %4, i8** %22, align 8
  %23 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 1
  store i64 %15, i64* %23, align 8
  %24 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 2
  store i64 %13, i64* %24, align 8
  br label %25

25:                                               ; preds = %21, %17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK8hunspell11BDictReader20GetAffixLineIteratorEv(%"class.hunspell::LineIterator"* noalias nocapture sret, %"class.hunspell::BDictReader"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %1, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %1, i64 0, i32 3
  %8 = load %"struct.hunspell::BDict::AffHeader"*, %"struct.hunspell::BDict::AffHeader"** %7, align 8
  %9 = getelementptr inbounds %"struct.hunspell::BDict::AffHeader", %"struct.hunspell::BDict::AffHeader"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %6
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %15, %13
  br i1 %16, label %21, label %17

17:                                               ; preds = %12, %2, %6
  %18 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 0
  store i8* %4, i8** %18, align 8
  %19 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 1
  %20 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %25

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 0
  store i8* %4, i8** %22, align 8
  %23 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 1
  store i64 %15, i64* %23, align 8
  %24 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 2
  store i64 %13, i64* %24, align 8
  br label %25

25:                                               ; preds = %21, %17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK8hunspell11BDictReader20GetOtherLineIteratorEv(%"class.hunspell::LineIterator"* noalias nocapture sret, %"class.hunspell::BDictReader"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %1, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %1, i64 0, i32 3
  %8 = load %"struct.hunspell::BDict::AffHeader"*, %"struct.hunspell::BDict::AffHeader"** %7, align 8
  %9 = getelementptr inbounds %"struct.hunspell::BDict::AffHeader", %"struct.hunspell::BDict::AffHeader"* %8, i64 0, i32 3
  %10 = load i32, i32* %9, align 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %6
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %15, %13
  br i1 %16, label %21, label %17

17:                                               ; preds = %12, %2, %6
  %18 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 0
  store i8* %4, i8** %18, align 8
  %19 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 1
  %20 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %25

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 0
  store i8* %4, i8** %22, align 8
  %23 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 1
  store i64 %15, i64* %23, align 8
  %24 = getelementptr inbounds %"class.hunspell::LineIterator", %"class.hunspell::LineIterator"* %0, i64 0, i32 2
  store i64 %13, i64* %24, align 8
  br label %25

25:                                               ; preds = %21, %17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK8hunspell11BDictReader22GetReplacementIteratorEv(%"class.hunspell::ReplacementIterator"* noalias nocapture sret, %"class.hunspell::BDictReader"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %1, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %1, i64 0, i32 3
  %8 = load %"struct.hunspell::BDict::AffHeader"*, %"struct.hunspell::BDict::AffHeader"** %7, align 8
  %9 = getelementptr inbounds %"struct.hunspell::BDict::AffHeader", %"struct.hunspell::BDict::AffHeader"* %8, i64 0, i32 2
  %10 = load i32, i32* %9, align 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %6
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %15, %13
  br i1 %16, label %21, label %17

17:                                               ; preds = %12, %2, %6
  %18 = getelementptr inbounds %"class.hunspell::ReplacementIterator", %"class.hunspell::ReplacementIterator"* %0, i64 0, i32 0, i32 0
  store i8* %4, i8** %18, align 8
  %19 = getelementptr inbounds %"class.hunspell::ReplacementIterator", %"class.hunspell::ReplacementIterator"* %0, i64 0, i32 0, i32 1
  %20 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %25

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.hunspell::ReplacementIterator", %"class.hunspell::ReplacementIterator"* %0, i64 0, i32 0, i32 0
  store i8* %4, i8** %22, align 8
  %23 = getelementptr inbounds %"class.hunspell::ReplacementIterator", %"class.hunspell::ReplacementIterator"* %0, i64 0, i32 0, i32 1
  store i64 %15, i64* %23, align 8
  %24 = getelementptr inbounds %"class.hunspell::ReplacementIterator", %"class.hunspell::ReplacementIterator"* %0, i64 0, i32 0, i32 2
  store i64 %13, i64* %24, align 8
  br label %25

25:                                               ; preds = %21, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8hunspell11BDictReader18GetAllWordIteratorEv(%"class.hunspell::WordIterator"* noalias nocapture sret, %"class.hunspell::BDictReader"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %1, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.hunspell::BDictReader", %"class.hunspell::BDictReader"* %1, i64 0, i32 2
  %8 = load %"struct.hunspell::BDict::Header"*, %"struct.hunspell::BDict::Header"** %7, align 8
  %9 = getelementptr inbounds %"struct.hunspell::BDict::Header", %"struct.hunspell::BDict::Header"* %8, i64 0, i32 4
  %10 = load i32, i32* %9, align 1
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %4, i64 %6
  %13 = icmp ne i8* %4, null
  %14 = icmp ugt i64 %6, %11
  %15 = and i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = getelementptr inbounds %"class.hunspell::WordIterator", %"class.hunspell::WordIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %19 = bitcast %"struct.hunspell::WordIterator::NodeInfo"** %18 to i64*
  %20 = bitcast %"class.hunspell::WordIterator"* %0 to i64*
  %21 = bitcast %"struct.hunspell::WordIterator::NodeInfo"** %17 to i64*
  %22 = tail call i8* @_Znwm(i64 48) #9
  %23 = getelementptr inbounds i8, i8* %22, i64 48
  %24 = ptrtoint i8* %23 to i64
  %25 = bitcast i8* %22 to i8**
  store i8* %4, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %6, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %22, i64 16
  %29 = bitcast i8* %28 to i8**
  store i8* %12, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %22, i64 24
  %31 = bitcast i8* %30 to i64*
  store i64 %11, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %22, i64 32
  %33 = bitcast i8* %32 to i32*
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %22, i64 36
  store i8 %16, i8* %34, align 4
  %35 = getelementptr inbounds i8, i8* %22, i64 37
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 -86, i64 3, i1 false)
  %36 = getelementptr inbounds i8, i8* %22, i64 40
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds i8, i8* %22, i64 41
  call void @llvm.memset.p0i8.i64(i8* align 1 %37, i8 -86, i64 3, i1 false)
  %38 = getelementptr inbounds i8, i8* %22, i64 44
  %39 = bitcast i8* %38 to i32*
  store i32 -1, i32* %39, align 4
  %40 = ptrtoint i8* %22 to i64
  store i64 %40, i64* %20, align 8
  store i64 %24, i64* %19, align 8
  store i64 %24, i64* %21, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8hunspell12WordIterator8NodeInfoENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"*, %"struct.hunspell::WordIterator::NodeInfo"*, %"struct.hunspell::WordIterator::NodeInfo"*) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint %"struct.hunspell::WordIterator::NodeInfo"* %2 to i64
  %5 = ptrtoint %"struct.hunspell::WordIterator::NodeInfo"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 48
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.hunspell::WordIterator::NodeInfo"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 48
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.hunspell::WordIterator::NodeInfo"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.hunspell::WordIterator::NodeInfo"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 48
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %1, i64 %22
  %25 = select i1 %23, %"struct.hunspell::WordIterator::NodeInfo"* %24, %"struct.hunspell::WordIterator::NodeInfo"* %2
  %26 = ptrtoint %"struct.hunspell::WordIterator::NodeInfo"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 48
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.hunspell::WordIterator::NodeInfo"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #8
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = udiv exact i64 %36, 48
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"struct.hunspell::WordIterator::NodeInfo"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #8
  %42 = inttoptr i64 %35 to %"struct.hunspell::WordIterator::NodeInfo"*
  %43 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %42, i64 %39
  %44 = ptrtoint %"struct.hunspell::WordIterator::NodeInfo"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %87

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %16, i64 %28
  store %"struct.hunspell::WordIterator::NodeInfo"* %48, %"struct.hunspell::WordIterator::NodeInfo"** %18, align 8
  br label %87

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"struct.hunspell::WordIterator::NodeInfo"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #9
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #8
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 384307168202282325
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #10
  unreachable

61:                                               ; preds = %56
  %62 = sdiv exact i64 %57, 48
  %63 = icmp ult i64 %62, 192153584101141162
  br i1 %63, label %64, label %68

64:                                               ; preds = %61
  %65 = shl nsw i64 %62, 1
  %66 = icmp ult i64 %65, %7
  %67 = select i1 %66, i64 %7, i64 %65
  br label %68

68:                                               ; preds = %64, %61
  %69 = phi i64 [ %67, %64 ], [ 384307168202282325, %61 ]
  %70 = mul i64 %69, 48
  %71 = tail call i8* @_Znwm(i64 %70) #9
  %72 = bitcast i8* %71 to %"struct.hunspell::WordIterator::NodeInfo"*
  %73 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %74 = bitcast %"struct.hunspell::WordIterator::NodeInfo"** %73 to i8**
  store i8* %71, i8** %74, align 8
  %75 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %71, i8** %75, align 8
  %76 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %72, i64 %69
  store %"struct.hunspell::WordIterator::NodeInfo"* %76, %"struct.hunspell::WordIterator::NodeInfo"** %8, align 8
  %77 = bitcast %"struct.hunspell::WordIterator::NodeInfo"** %73 to i64*
  %78 = ptrtoint i8* %71 to i64
  %79 = icmp sgt i64 %6, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %68
  %81 = udiv exact i64 %6, 48
  %82 = bitcast %"struct.hunspell::WordIterator::NodeInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* align 8 %82, i64 %6, i1 false) #8
  %83 = getelementptr inbounds %"struct.hunspell::WordIterator::NodeInfo", %"struct.hunspell::WordIterator::NodeInfo"* %72, i64 %81
  %84 = ptrtoint %"struct.hunspell::WordIterator::NodeInfo"* %83 to i64
  br label %85

85:                                               ; preds = %68, %80
  %86 = phi i64 [ %84, %80 ], [ %78, %68 ]
  store i64 %86, i64* %77, align 8
  br label %87

87:                                               ; preds = %45, %47, %85
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
