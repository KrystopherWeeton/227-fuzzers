; ModuleID = '../../net/third_party/quiche/src/quic/core/crypto/curve25519_key_exchange.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/crypto/curve25519_key_exchange.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.quic::Curve25519KeyExchange" = type { %"class.quic::SynchronousKeyExchange", [32 x i8], [32 x i8] }
%"class.quic::SynchronousKeyExchange" = type { %"class.quic::AsynchronousKeyExchange" }
%"class.quic::AsynchronousKeyExchange" = type { i32 (...)** }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.quic::AsynchronousKeyExchange::Callback" = type { i32 (...)** }

$_ZNK4quic22SynchronousKeyExchange23CalculateSharedKeyAsyncEN4absl11string_viewEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS_23AsynchronousKeyExchange8CallbackENS3_14default_deleteISD_EEEE = comdat any

$_ZNK4quic21Curve25519KeyExchange4typeEv = comdat any

@_ZTVN4quic21Curve25519KeyExchangeE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::Curve25519KeyExchange"*)* @_ZN4quic21Curve25519KeyExchangeD2Ev to i8*), i8* bitcast (void (%"class.quic::Curve25519KeyExchange"*)* @_ZN4quic21Curve25519KeyExchangeD0Ev to i8*), i8* bitcast (void (%"class.quic::SynchronousKeyExchange"*, i8*, i64, %"class.std::__1::basic_string"*, %"class.quic::AsynchronousKeyExchange::Callback"*)* @_ZNK4quic22SynchronousKeyExchange23CalculateSharedKeyAsyncEN4absl11string_viewEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS_23AsynchronousKeyExchange8CallbackENS3_14default_deleteISD_EEEE to i8*), i8* bitcast (i32 (%"class.quic::Curve25519KeyExchange"*)* @_ZNK4quic21Curve25519KeyExchange4typeEv to i8*), i8* bitcast (i1 (%"class.quic::Curve25519KeyExchange"*, i8*, i64, %"class.std::__1::basic_string"*)* @_ZNK4quic21Curve25519KeyExchange22CalculateSharedKeySyncEN4absl11string_viewEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE to i8*), i8* bitcast ({ i8*, i64 } (%"class.quic::Curve25519KeyExchange"*)* @_ZNK4quic21Curve25519KeyExchange12public_valueEv to i8*)] }, align 8

@_ZN4quic21Curve25519KeyExchangeC1Ev = hidden unnamed_addr alias void (%"class.quic::Curve25519KeyExchange"*), void (%"class.quic::Curve25519KeyExchange"*)* @_ZN4quic21Curve25519KeyExchangeC2Ev
@_ZN4quic21Curve25519KeyExchangeD1Ev = hidden unnamed_addr alias void (%"class.quic::Curve25519KeyExchange"*), void (%"class.quic::Curve25519KeyExchange"*)* @_ZN4quic21Curve25519KeyExchangeD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic21Curve25519KeyExchangeC2Ev(%"class.quic::Curve25519KeyExchange"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::Curve25519KeyExchange", %"class.quic::Curve25519KeyExchange"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4quic21Curve25519KeyExchangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4quic21Curve25519KeyExchangeD2Ev(%"class.quic::Curve25519KeyExchange"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic21Curve25519KeyExchangeD0Ev(%"class.quic::Curve25519KeyExchange"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.quic::Curve25519KeyExchange"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::Curve25519KeyExchange"* @_ZN4quic21Curve25519KeyExchange3NewEPNS_10QuicRandomE(%"class.quic::QuicRandom"*) local_unnamed_addr #2 align 2 {
  %2 = alloca [32 x i8], align 16
  %3 = getelementptr inbounds [32 x i8], [32 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #8, !noalias !2
  %4 = bitcast %"class.quic::QuicRandom"* %0 to void (%"class.quic::QuicRandom"*, i8*, i64)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 -86, i64 32, i1 false) #8, !noalias !2
  %5 = load void (%"class.quic::QuicRandom"*, i8*, i64)**, void (%"class.quic::QuicRandom"*, i8*, i64)*** %4, align 8, !noalias !2
  %6 = getelementptr inbounds void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %5, i64 2
  %7 = load void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %6, align 8, !noalias !2
  call void %7(%"class.quic::QuicRandom"* %0, i8* nonnull %3, i64 32) #8, !noalias !2
  %8 = call i8* @_Znwm(i64 48) #7, !noalias !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 16 %3, i64 32, i1 false) #8, !noalias !2
  %9 = getelementptr inbounds i8, i8* %8, i64 32
  store i8 0, i8* %9, align 1, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8, !noalias !2
  %10 = call i8* @_Znwm(i64 72) #7
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4quic21Curve25519KeyExchangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 1 %8, i64 32, i1 false) #8
  %13 = getelementptr inbounds i8, i8* %10, i64 40
  call void @X25519_public_from_private(i8* %13, i8* %12) #8
  call void @_ZdlPv(i8* nonnull %8) #7
  %14 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #8
  %15 = bitcast i8* %10 to %"class.quic::Curve25519KeyExchange"*
  ret %"class.quic::Curve25519KeyExchange"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::Curve25519KeyExchange"* @_ZN4quic21Curve25519KeyExchange3NewEN4absl11string_viewE(i8*, i64) local_unnamed_addr #2 align 2 {
  %3 = icmp eq i64 %1, 32
  br i1 %3, label %4, label %10

4:                                                ; preds = %2
  %5 = tail call i8* @_Znwm(i64 72) #7
  %6 = bitcast i8* %5 to %"class.quic::Curve25519KeyExchange"*
  %7 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4quic21Curve25519KeyExchangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 1 %0, i64 32, i1 false)
  %9 = getelementptr inbounds i8, i8* %5, i64 40
  tail call void @X25519_public_from_private(i8* %9, i8* %8) #8
  br label %10

10:                                               ; preds = %2, %4
  %11 = phi %"class.quic::Curve25519KeyExchange"* [ %6, %4 ], [ null, %2 ]
  ret %"class.quic::Curve25519KeyExchange"* %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic21Curve25519KeyExchange13NewPrivateKeyEPNS_10QuicRandomE(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.quic::QuicRandom"*) local_unnamed_addr #2 align 2 {
  %3 = alloca [32 x i8], align 16
  %4 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #8
  %5 = bitcast %"class.quic::QuicRandom"* %1 to void (%"class.quic::QuicRandom"*, i8*, i64)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 32, i1 false)
  %6 = load void (%"class.quic::QuicRandom"*, i8*, i64)**, void (%"class.quic::QuicRandom"*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %6, i64 2
  %8 = load void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %7, align 8
  call void %8(%"class.quic::QuicRandom"* %1, i8* nonnull %4, i64 32) #8
  %9 = call i8* @_Znwm(i64 48) #7
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* nonnull align 16 %4, i64 32, i1 false) #8
  %13 = getelementptr inbounds i8, i8* %9, i64 32
  store i8 0, i8* %13, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @X25519_public_from_private(i8*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic21Curve25519KeyExchange22CalculateSharedKeySyncEN4absl11string_viewEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.quic::Curve25519KeyExchange"*, i8*, i64, %"class.std::__1::basic_string"*) unnamed_addr #2 align 2 {
  %5 = alloca [32 x i8], align 16
  %6 = icmp eq i64 %2, 32
  br i1 %6, label %7, label %16

7:                                                ; preds = %4
  %8 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.quic::Curve25519KeyExchange", %"class.quic::Curve25519KeyExchange"* %0, i64 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 32, i1 false)
  %10 = call i32 @X25519(i8* nonnull %8, i8* %9, i8* %1) #8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %7
  %13 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %3, i8* nonnull %8, i64 32) #8
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi i1 [ true, %12 ], [ false, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  br label %16

16:                                               ; preds = %4, %14
  %17 = phi i1 [ %15, %14 ], [ false, %4 ]
  ret i1 %17
}

declare i32 @X25519(i8*, i8*, i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZNK4quic21Curve25519KeyExchange12public_valueEv(%"class.quic::Curve25519KeyExchange"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.quic::Curve25519KeyExchange", %"class.quic::Curve25519KeyExchange"* %0, i64 0, i32 2, i64 0
  %3 = insertvalue { i8*, i64 } undef, i8* %2, 0
  %4 = insertvalue { i8*, i64 } %3, i64 32, 1
  ret { i8*, i64 } %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4quic22SynchronousKeyExchange23CalculateSharedKeyAsyncEN4absl11string_viewEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS_23AsynchronousKeyExchange8CallbackENS3_14default_deleteISD_EEEE(%"class.quic::SynchronousKeyExchange"*, i8*, i64, %"class.std::__1::basic_string"*, %"class.quic::AsynchronousKeyExchange::Callback"*) unnamed_addr #2 comdat align 2 {
  %6 = bitcast %"class.quic::SynchronousKeyExchange"* %0 to i1 (%"class.quic::SynchronousKeyExchange"*, i8*, i64, %"class.std::__1::basic_string"*)***
  %7 = load i1 (%"class.quic::SynchronousKeyExchange"*, i8*, i64, %"class.std::__1::basic_string"*)**, i1 (%"class.quic::SynchronousKeyExchange"*, i8*, i64, %"class.std::__1::basic_string"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.quic::SynchronousKeyExchange"*, i8*, i64, %"class.std::__1::basic_string"*)*, i1 (%"class.quic::SynchronousKeyExchange"*, i8*, i64, %"class.std::__1::basic_string"*)** %7, i64 4
  %9 = load i1 (%"class.quic::SynchronousKeyExchange"*, i8*, i64, %"class.std::__1::basic_string"*)*, i1 (%"class.quic::SynchronousKeyExchange"*, i8*, i64, %"class.std::__1::basic_string"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.quic::SynchronousKeyExchange"* %0, i8* %1, i64 %2, %"class.std::__1::basic_string"* %3) #8
  %11 = bitcast %"class.quic::AsynchronousKeyExchange::Callback"* %4 to void (%"class.quic::AsynchronousKeyExchange::Callback"*, i1)***
  %12 = load void (%"class.quic::AsynchronousKeyExchange::Callback"*, i1)**, void (%"class.quic::AsynchronousKeyExchange::Callback"*, i1)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.quic::AsynchronousKeyExchange::Callback"*, i1)*, void (%"class.quic::AsynchronousKeyExchange::Callback"*, i1)** %12, i64 2
  %14 = load void (%"class.quic::AsynchronousKeyExchange::Callback"*, i1)*, void (%"class.quic::AsynchronousKeyExchange::Callback"*, i1)** %13, align 8
  tail call void %14(%"class.quic::AsynchronousKeyExchange::Callback"* %4, i1 zeroext %10) #8
  %15 = icmp eq %"class.quic::AsynchronousKeyExchange::Callback"* %4, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %5
  %17 = bitcast %"class.quic::AsynchronousKeyExchange::Callback"* %4 to void (%"class.quic::AsynchronousKeyExchange::Callback"*)***
  %18 = load void (%"class.quic::AsynchronousKeyExchange::Callback"*)**, void (%"class.quic::AsynchronousKeyExchange::Callback"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.quic::AsynchronousKeyExchange::Callback"*)*, void (%"class.quic::AsynchronousKeyExchange::Callback"*)** %18, i64 1
  %20 = load void (%"class.quic::AsynchronousKeyExchange::Callback"*)*, void (%"class.quic::AsynchronousKeyExchange::Callback"*)** %19, align 8
  tail call void %20(%"class.quic::AsynchronousKeyExchange::Callback"* nonnull %4) #8
  br label %21

21:                                               ; preds = %5, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4quic21Curve25519KeyExchange4typeEv(%"class.quic::Curve25519KeyExchange"*) unnamed_addr #2 comdat align 2 {
  ret i32 892678723
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4quic21Curve25519KeyExchange13NewPrivateKeyEPNS_10QuicRandomE: argument 0"}
!4 = distinct !{!4, !"_ZN4quic21Curve25519KeyExchange13NewPrivateKeyEPNS_10QuicRandomE"}
