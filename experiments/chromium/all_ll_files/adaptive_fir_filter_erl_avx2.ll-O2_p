; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/adaptive_fir_filter_erl_avx2.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/adaptive_fir_filter_erl_avx2.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::array"*, %"struct.std::__1::array"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::array" = type { [65 x float] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::array"* }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4aec316ErlComputer_AVX2ERKNSt3__16vectorINS1_5arrayIfLm65EEENS1_9allocatorIS4_EEEEN3rtc9ArrayViewIfLln4711EEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), float*, i64) local_unnamed_addr #0 {
  %4 = shl i64 %2, 2
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %3
  %7 = bitcast float* %1 to i8*
  %8 = icmp slt i64 %2, 1
  %9 = select i1 %8, i64 %2, i64 1
  %10 = shl i64 %9, 2
  %11 = add i64 %10, -4
  %12 = sub i64 %4, %11
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 %12, i1 false)
  br label %13

13:                                               ; preds = %6, %3
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %15 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %16, align 8
  %18 = icmp eq %"struct.std::__1::array"* %15, %17
  br i1 %18, label %92, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds float, float* %1, i64 64
  %21 = bitcast float* %1 to <8 x float>*
  %22 = load <8 x float>, <8 x float>* %21, align 1
  %23 = getelementptr inbounds float, float* %1, i64 8
  %24 = bitcast float* %23 to <8 x float>*
  %25 = load <8 x float>, <8 x float>* %24, align 1
  %26 = getelementptr inbounds float, float* %1, i64 16
  %27 = bitcast float* %26 to <8 x float>*
  %28 = load <8 x float>, <8 x float>* %27, align 1
  %29 = getelementptr inbounds float, float* %1, i64 24
  %30 = bitcast float* %29 to <8 x float>*
  %31 = load <8 x float>, <8 x float>* %30, align 1
  %32 = getelementptr inbounds float, float* %1, i64 32
  %33 = bitcast float* %32 to <8 x float>*
  %34 = load <8 x float>, <8 x float>* %33, align 1
  %35 = getelementptr inbounds float, float* %1, i64 40
  %36 = bitcast float* %35 to <8 x float>*
  %37 = load <8 x float>, <8 x float>* %36, align 1
  %38 = getelementptr inbounds float, float* %1, i64 48
  %39 = bitcast float* %38 to <8 x float>*
  %40 = load <8 x float>, <8 x float>* %39, align 1
  %41 = getelementptr inbounds float, float* %1, i64 56
  %42 = bitcast float* %41 to <8 x float>*
  %43 = load <8 x float>, <8 x float>* %42, align 1
  %44 = load float, float* %20, align 4
  br label %45

45:                                               ; preds = %19, %45
  %46 = phi float [ %44, %19 ], [ %89, %45 ]
  %47 = phi <8 x float> [ %43, %19 ], [ %86, %45 ]
  %48 = phi <8 x float> [ %40, %19 ], [ %82, %45 ]
  %49 = phi <8 x float> [ %37, %19 ], [ %78, %45 ]
  %50 = phi <8 x float> [ %34, %19 ], [ %74, %45 ]
  %51 = phi <8 x float> [ %31, %19 ], [ %70, %45 ]
  %52 = phi <8 x float> [ %28, %19 ], [ %66, %45 ]
  %53 = phi <8 x float> [ %25, %19 ], [ %62, %45 ]
  %54 = phi <8 x float> [ %22, %19 ], [ %58, %45 ]
  %55 = phi %"struct.std::__1::array"* [ %15, %19 ], [ %90, %45 ]
  %56 = bitcast %"struct.std::__1::array"* %55 to <8 x float>*
  %57 = load <8 x float>, <8 x float>* %56, align 1
  %58 = fadd <8 x float> %57, %54
  store <8 x float> %58, <8 x float>* %21, align 1
  %59 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %55, i64 0, i32 0, i64 8
  %60 = bitcast float* %59 to <8 x float>*
  %61 = load <8 x float>, <8 x float>* %60, align 1
  %62 = fadd <8 x float> %61, %53
  store <8 x float> %62, <8 x float>* %24, align 1
  %63 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %55, i64 0, i32 0, i64 16
  %64 = bitcast float* %63 to <8 x float>*
  %65 = load <8 x float>, <8 x float>* %64, align 1
  %66 = fadd <8 x float> %65, %52
  store <8 x float> %66, <8 x float>* %27, align 1
  %67 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %55, i64 0, i32 0, i64 24
  %68 = bitcast float* %67 to <8 x float>*
  %69 = load <8 x float>, <8 x float>* %68, align 1
  %70 = fadd <8 x float> %69, %51
  store <8 x float> %70, <8 x float>* %30, align 1
  %71 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %55, i64 0, i32 0, i64 32
  %72 = bitcast float* %71 to <8 x float>*
  %73 = load <8 x float>, <8 x float>* %72, align 1
  %74 = fadd <8 x float> %73, %50
  store <8 x float> %74, <8 x float>* %33, align 1
  %75 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %55, i64 0, i32 0, i64 40
  %76 = bitcast float* %75 to <8 x float>*
  %77 = load <8 x float>, <8 x float>* %76, align 1
  %78 = fadd <8 x float> %77, %49
  store <8 x float> %78, <8 x float>* %36, align 1
  %79 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %55, i64 0, i32 0, i64 48
  %80 = bitcast float* %79 to <8 x float>*
  %81 = load <8 x float>, <8 x float>* %80, align 1
  %82 = fadd <8 x float> %81, %48
  store <8 x float> %82, <8 x float>* %39, align 1
  %83 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %55, i64 0, i32 0, i64 56
  %84 = bitcast float* %83 to <8 x float>*
  %85 = load <8 x float>, <8 x float>* %84, align 1
  %86 = fadd <8 x float> %85, %47
  store <8 x float> %86, <8 x float>* %42, align 1
  %87 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %55, i64 0, i32 0, i64 64
  %88 = load float, float* %87, align 4
  %89 = fadd float %88, %46
  store float %89, float* %20, align 4
  %90 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %55, i64 1
  %91 = icmp eq %"struct.std::__1::array"* %90, %17
  br i1 %91, label %92, label %45

92:                                               ; preds = %45, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+avx,+avx2,+cx8,+fma,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
