; ModuleID = '../../net/quic/quic_crypto_client_stream_factory.cc'
source_filename = "../../net/quic/quic_crypto_client_stream_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [8 x i8] }
%"class.net::QuicCryptoClientStreamFactory" = type { i32 (...)** }
%"class.net::(anonymous namespace)::DefaultCryptoStreamFactory" = type { %"class.net::QuicCryptoClientStreamFactory" }
%"class.quic::QuicCryptoClientStream" = type { %"class.quic::QuicCryptoClientStreamBase", %"class.std::__1::unique_ptr.426" }
%"class.quic::QuicCryptoClientStreamBase" = type { %"class.quic::QuicCryptoStream" }
%"class.quic::QuicCryptoStream" = type { %"class.quic::QuicStream.base", [4 x %"class.quic::QuicIntervalSet"], %"struct.std::__1::array.425" }
%"class.quic::QuicStream.base" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.415", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8 }>
%"class.quic::QuicStreamSequencer::StreamInterface" = type { i32 (...)** }
%"class.quic::QuicStreamSequencer" = type <{ i32 (...)**, %"class.quic::QuicStreamSequencer::StreamInterface"*, %"class.quic::QuicStreamSequencerBuffer", i64, i64, i8, [3 x i8], i32, i32, i8, i8, [2 x i8] }>
%"class.quic::QuicStreamSequencerBuffer" = type { i64, i64, i64, i64, i8, %"class.std::__1::unique_ptr", i64, %"class.quic::QuicIntervalSet" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.quic::QuicStreamSequencerBuffer::BufferBlock"** }
%"struct.quic::QuicStreamSequencerBuffer::BufferBlock" = type { [8192 x i8] }
%"class.quic::QuicIntervalSet" = type { %"class.absl::btree_set" }
%"class.absl::btree_set" = type { %"class.absl::container_internal::btree_set_container" }
%"class.absl::container_internal::btree_set_container" = type { %"class.absl::container_internal::btree_container" }
%"class.absl::container_internal::btree_container" = type { %"class.absl::container_internal::btree" }
%"class.absl::container_internal::btree" = type { %"class.absl::container_internal::CompressedTuple", %"class.absl::container_internal::btree_node"*, i64 }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.3" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.3" = type { %"class.absl::container_internal::btree_node"* }
%"class.absl::container_internal::btree_node" = type { i8 }
%"class.quic::QuicSession" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.307", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.353", %"class.absl::flat_hash_map.362", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.180", %"class.std::__1::vector", %"class.absl::optional.409", i8, i8, i8, i8, [4 x i8] }>
%"class.quic::QuicConnectionVisitorInterface" = type { i32 (...)** }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.quic::QuicStreamFrameDataProducer" = type { i32 (...)** }
%"class.quic::QuicStreamIdManager::DelegateInterface" = type { i32 (...)** }
%"class.quic::HandshakerDelegateInterface" = type { i32 (...)** }
%"class.quic::StreamDelegateInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager::DelegateInterface" = type { i32 (...)** }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple.4" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple.4" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.5" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.5" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.6" = type { i64 }
%"class.quic::QuicConnection" = type <{ %"class.quic::QuicFramerVisitorInterface", %"class.quic::QuicBlockedWriterInterface", %"class.quic::QuicPacketCreator::DelegateInterface", %"class.quic::QuicSentPacketManager::NetworkChangeVisitor", %"class.quic::QuicNetworkBlackholeDetector::Delegate", %"class.quic::QuicIdleNetworkDetector::Delegate", %"class.quic::QuicPathValidator::SendDelegate", %"class.quic::QuicConnectionIdManagerVisitorInterface", %"class.quic::QuicFramer", i8, i8, i8, i8, [4 x i8], %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicAlarmFactory"*, %"struct.quic::PerPacketOptions"*, %"class.quic::QuicPacketWriter"*, i8, i8, [6 x i8], %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", i8, i8, [2 x i8], %"class.quic::QuicSocketAddress", [4 x i8], %"struct.quic::QuicConnection::PathState", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], i64, i8*, i8, [7 x i8], %"struct.quic::QuicPacketHeader", i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.std::__1::deque", %"class.quiche::QuicheCircularDeque", i64, i64, %"class.std::__1::unique_ptr.66", i32, [4 x i8], i64, %"struct.quic::QuicConnectionStats", %"class.quic::UberReceivedPacketManager", i32, i8, i8, [2 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, i32, %"class.quic::QuicOneBlockArena", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicConnectionVisitorInterface"*, %"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::QuicPacketCreator", %"class.quic::QuicTime", %"class.quic::QuicSentPacketManager", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", [4 x i8], %"class.quic::QuicConnectionId", i8, [7 x i8], %"class.std::__1::vector", i64, i16, [6 x i8], i64, i64, i64, i8, i8, [6 x i8], i64, i64, i8, i8, i8, i8, %"struct.std::__1::array.40", i32, i8, i8, i8, [5 x i8], %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.197", %"class.quic::QuicTime::Delta", %"class.std::__1::unique_ptr.219", %"class.quiche::QuicheCircularDeque.225", %"class.quiche::QuicheCircularDeque.228", %"class.std::__1::vector.231", %"class.absl::optional.238", %"class.quic::QuicConnectionId", %"class.absl::optional.238", %"class.std::__1::list", %"class.quic::QuicCoalescedPacket", %"class.quic::QuicConnectionMtuDiscoverer", %"class.quic::QuicNetworkBlackholeDetector", %"class.quic::QuicIdleNetworkDetector", i8, i8, i8, i8, [4 x i8], %"class.std::__1::basic_string", i8, [7 x i8], i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPathValidator", %"struct.quic::QuicConnection::PathState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.quic::QuicFramerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicBlockedWriterInterface" = type { i32 (...)** }
%"class.quic::QuicPacketCreator::DelegateInterface" = type { i32 (...)** }
%"class.quic::QuicSentPacketManager::NetworkChangeVisitor" = type { i32 (...)** }
%"class.quic::QuicNetworkBlackholeDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicIdleNetworkDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicPathValidator::SendDelegate" = type { i32 (...)** }
%"class.quic::QuicConnectionIdManagerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicFramer" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.quic::QuicFramerVisitorInterface"*, i32, %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::ParsedQuicVersion", %"class.std::__1::vector", [4 x %"class.std::__1::unique_ptr.26"], i8, i8, i8, [4 x %"class.std::__1::unique_ptr.32"], i8, i8, %"struct.std::__1::array", i8, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", i8, i8, i8, %"class.quic::QuicPacketNumber", i64, %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26", %"class.quic::QuicPacketNumber", %"class.quic::QuicStreamFrameDataProducer"*, i8, i8, i8, i8, i8, i8, i64, i32, i32, i64 }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.quic::QuicEncrypter"* }
%"class.quic::QuicEncrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%"struct.std::__1::array" = type { [32 x i8] }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.quic::QuicDecrypter"* }
%"class.quic::QuicDecrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"struct.quic::PerPacketOptions" = type <{ i32 (...)**, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicPacketWriter" = type { i32 (...)** }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"struct.quic::QuicPacketHeader" = type { %"class.quic::QuicConnectionId", i8, %"class.quic::QuicConnectionId", i8, i8, i8, i8, i8, i8, %"struct.quic::ParsedQuicVersion", %"struct.std::__1::array"*, %"class.quic::QuicPacketNumber", i8, i8, %"struct.std::__1::array.40", i8, %"class.absl::string_view", i8, i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.59" }
%"struct.std::__1::__split_buffer" = type { %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"class.std::__1::__compressed_pair.54" }
%"struct.quic::QuicConnection::UndecryptablePacket" = type <{ %"class.std::__1::unique_ptr.48", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.quic::QuicEncryptedPacket"* }
%"class.quic::QuicEncryptedPacket" = type { %"class.quic::QuicData.base", [7 x i8] }
%"class.quic::QuicData.base" = type <{ i32 (...)**, i8*, i64, i8 }>
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.quic::QuicConnection::UndecryptablePacket"** }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i64 }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" = type { %"class.std::__1::unique_ptr.48"*, i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::vector.69"* }
%"class.std::__1::vector.69" = type opaque
%"struct.quic::QuicConnectionStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, i32, i32, i64, i64, i64, i64, %"class.quic::QuicTimeAccumulator", i32, i32, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.quic::QuicBandwidth", i64, i64, i64, i64, i64, i32, %"class.quic::QuicTime", %"class.quic::QuicTime", i64, i64, i64, i8, i64, i64, i64, i8, i8, %"class.quic::QuicPacketNumber", i64, i64, i64, i32, i64, i64, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, %"class.absl::optional.73", %"class.absl::optional.73", %"class.absl::optional.73" }
%"class.quic::QuicTimeAccumulator" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.absl::optional.73" = type { %"class.absl::optional_internal::optional_data.74" }
%"class.absl::optional_internal::optional_data.74" = type { %"class.absl::optional_internal::optional_data_base.75" }
%"class.absl::optional_internal::optional_data_base.75" = type { %"class.absl::optional_internal::optional_data_dtor_base.76" }
%"class.absl::optional_internal::optional_data_dtor_base.76" = type { i8, %union.anon.77 }
%union.anon.77 = type { %"struct.quic::QuicConnectionStats::TlsServerOperationStats" }
%"struct.quic::QuicConnectionStats::TlsServerOperationStats" = type { i8, %"class.quic::QuicTime::Delta" }
%"class.quic::UberReceivedPacketManager" = type <{ i32 (...)**, [3 x %"class.quic::QuicReceivedPacketManager"], i8, [7 x i8] }>
%"class.quic::QuicReceivedPacketManager" = type { i32 (...)**, %"class.quic::QuicPacketNumber", %"struct.quic::QuicAckFrame", i8, i64, %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", %"struct.quic::QuicConnectionStats"*, i64, i64, i64, float, i8, i8, i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", i64 }
%"struct.quic::QuicAckFrame" = type { %"class.quic::QuicPacketNumber", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.82", %"class.quic::PacketNumberQueue", i8, i64, i64, i64 }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.84" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.std::__1::pair"* }
%"class.quic::PacketNumberQueue" = type { %"class.quic::QuicIntervalSet.89" }
%"class.quic::QuicIntervalSet.89" = type { %"class.absl::btree_set.90" }
%"class.absl::btree_set.90" = type { %"class.absl::container_internal::btree_set_container.91" }
%"class.absl::container_internal::btree_set_container.91" = type { %"class.absl::container_internal::btree_container.92" }
%"class.absl::container_internal::btree_container.92" = type { %"class.absl::container_internal::btree.93" }
%"class.absl::container_internal::btree.93" = type { %"class.absl::container_internal::CompressedTuple.94", %"class.absl::container_internal::btree_node.101"*, i64 }
%"class.absl::container_internal::CompressedTuple.94" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.95" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.95" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.100" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.100" = type { %"class.absl::container_internal::btree_node.101"* }
%"class.absl::container_internal::btree_node.101" = type { i8 }
%"class.quic::QuicOneBlockArena" = type { [1056 x i8], i32, [4 x i8] }
%"class.quic::QuicArenaScopedPtr" = type { i8* }
%"class.quic::QuicConnectionDebugVisitor" = type { %"class.quic::QuicSentPacketManager::DebugDelegate" }
%"class.quic::QuicSentPacketManager::DebugDelegate" = type { i32 (...)** }
%"class.quic::QuicPacketCreator" = type <{ %"class.quic::QuicPacketCreator::DelegateInterface"*, %"class.quic::QuicPacketCreator::DebugDelegate"*, %"class.quic::QuicFramer"*, %"class.quic::QuicRandom"*, i8, i8, %"struct.std::__1::array", [6 x i8], i64, i64, i8, [7 x i8], %"class.std::__1::vector.103", i64, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::SerializedPacket", %"class.std::__1::basic_string", i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPacketNumber", i64, i64, i8, [7 x i8] }>
%"class.quic::QuicPacketCreator::DebugDelegate" = type { i32 (...)** }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.135" }
%"struct.quic::QuicFrame" = type { %union.anon.105 }
%union.anon.105 = type { %"struct.quic::QuicStreamFrame" }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::SerializedPacket" = type <{ i8*, i16, [6 x i8], %"class.std::__1::function", %"class.std::__1::vector.103", %"class.std::__1::vector.103", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, i8, [3 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i8*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.quic::QuicSentPacketManager" = type <{ i32 (...)**, %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, %"class.quic::QuicSentPacketManager::DebugDelegate"*, %"class.quic::QuicSentPacketManager::NetworkChangeVisitor"*, i64, %"class.quic::RttStats", %"class.std::__1::unique_ptr.41", %"class.quic::LossDetectionInterface"*, %"class.quic::UberLossAlgorithm", %"class.quic::QuicPacketNumber", i64, i64, i64, i64, i64, i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.159", %"class.std::__1::vector.166", %"class.quic::QuicPacketNumber", i16, [6 x i8], %"class.quic::PacingSender", i8, [7 x i8], %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i8, [7 x i8], %"class.quiche::QuicheCircularDeque.173", %"struct.quic::QuicAckFrame", i8, [7 x i8], %"class.std::__1::reverse_iterator", i8, [7 x i8], i64, i64, i8, i8, i8, [5 x i8], i64, i32, [4 x i8], i64, i8, i8, i8, i8, float, i8, [3 x i8], float, i32, i8, [3 x i8] }>
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque.140", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque.140" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector.103", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.quic::RttStats" = type <{ %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"struct.quic::RttStats::StandardDeviationCaculator", i8, [7 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i8, [7 x i8] }>
%"struct.quic::RttStats::StandardDeviationCaculator" = type { i8, double }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.quic::SendAlgorithmInterface"* }
%"class.quic::SendAlgorithmInterface" = type { i32 (...)** }
%"class.quic::LossDetectionInterface" = type { i32 (...)** }
%"class.quic::UberLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", [3 x %"class.quic::GeneralLossAlgorithm"], %"class.std::__1::unique_ptr.143", %"struct.quic::LossDetectionParameters", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.quic::GeneralLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", %"class.quic::LossDetectionInterface"*, %"class.quic::QuicTime", i32, [4 x i8], i64, i8, i8, i8, [5 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.quic::LossDetectionTunerInterface"* }
%"class.quic::LossDetectionTunerInterface" = type { i32 (...)** }
%"struct.quic::LossDetectionParameters" = type { %"class.absl::optional.149", %"class.absl::optional.154" }
%"class.absl::optional.149" = type { %"class.absl::optional_internal::optional_data.150" }
%"class.absl::optional_internal::optional_data.150" = type { %"class.absl::optional_internal::optional_data_base.151" }
%"class.absl::optional_internal::optional_data_base.151" = type { %"class.absl::optional_internal::optional_data_dtor_base.152" }
%"class.absl::optional_internal::optional_data_dtor_base.152" = type { i8, %union.anon.153 }
%union.anon.153 = type { i32 }
%"class.absl::optional.154" = type { %"class.absl::optional_internal::optional_data.155" }
%"class.absl::optional_internal::optional_data.155" = type { %"class.absl::optional_internal::optional_data_base.156" }
%"class.absl::optional_internal::optional_data_base.156" = type { %"class.absl::optional_internal::optional_data_dtor_base.157" }
%"class.absl::optional_internal::optional_data_dtor_base.157" = type { i8, %union.anon.158 }
%union.anon.158 = type { i64 }
%"class.std::__1::vector.159" = type { %"class.std::__1::__vector_base.160" }
%"class.std::__1::__vector_base.160" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.161" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"*, %"class.std::__1::__compressed_pair.168" }
%"struct.quic::LostPacket" = type <{ %"class.quic::QuicPacketNumber", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.quic::LostPacket"* }
%"class.quic::PacingSender" = type <{ %"class.quic::SendAlgorithmInterface"*, %"class.quic::QuicBandwidth", i32, [4 x i8], %"class.quic::QuicTime", i32, i32, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicSustainedBandwidthRecorder" = type { i8, i8, i8, %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", i64, %"class.quic::QuicTime" }
%"class.quiche::QuicheCircularDeque.173" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" = type { %"struct.std::__1::pair.176"*, i64 }
%"struct.std::__1::pair.176" = type opaque
%"class.std::__1::reverse_iterator" = type { %"struct.absl::container_internal::btree_iterator", %"struct.absl::container_internal::btree_iterator" }
%"struct.absl::container_internal::btree_iterator" = type <{ %"class.absl::container_internal::btree_node.101"*, i32, [4 x i8] }>
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.38, i32 }
%union.anon.38 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.39 }
%union.anon.39 = type { [4 x i32] }
%"struct.std::__1::array.40" = type { [16 x i8] }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.quic::QuicPeerIssuedConnectionIdManager"* }
%"class.quic::QuicPeerIssuedConnectionIdManager" = type { i64, %"class.quic::QuicClock"*, %"class.std::__1::unique_ptr.180", %"class.std::__1::vector.187", %"class.std::__1::vector.187", %"class.std::__1::vector.187", %"class.quic::QuicIntervalSet", i64 }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.quic::QuicConnectionIdData"*, %"struct.quic::QuicConnectionIdData"*, %"class.std::__1::__compressed_pair.189" }
%"struct.quic::QuicConnectionIdData" = type { %"class.quic::QuicConnectionId", i64, %"struct.std::__1::array.40" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.quic::QuicConnectionIdData"* }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.quic::QuicSelfIssuedConnectionIdManager"* }
%"class.quic::QuicSelfIssuedConnectionIdManager" = type { i32 (...)**, i64, %"class.quic::QuicClock"*, %"class.quic::QuicConnectionIdManagerVisitorInterface"*, %"class.std::__1::vector.200", %"class.std::__1::vector.208", %"class.std::__1::unique_ptr.180", %"class.quic::QuicConnectionId", i64, i64 }
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { %"struct.std::__1::pair.202"*, %"struct.std::__1::pair.202"*, %"class.std::__1::__compressed_pair.203" }
%"struct.std::__1::pair.202" = type opaque
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"struct.std::__1::pair.202"* }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.std::__1::pair.210"*, %"struct.std::__1::pair.210"*, %"class.std::__1::__compressed_pair.211" }
%"struct.std::__1::pair.210" = type opaque
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.std::__1::pair.210"* }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::array.122"* }
%"struct.std::__1::array.122" = type { [8 x i8] }
%"class.quiche::QuicheCircularDeque.225" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" = type { %"struct.std::__1::array.122"*, i64 }
%"class.quiche::QuicheCircularDeque.228" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" = type { %"struct.quic::QuicConnection::PendingPathChallenge"*, i64 }
%"struct.quic::QuicConnection::PendingPathChallenge" = type { %"struct.std::__1::array.122", %"class.quic::QuicSocketAddress" }
%"class.std::__1::vector.231" = type { %"class.std::__1::__vector_base.232" }
%"class.std::__1::__vector_base.232" = type { %"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"*, %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.quic::QuicConnectionId"* }
%"class.quic::QuicConnectionId" = type { %union.anon.18 }
%union.anon.18 = type { %struct.anon.20 }
%struct.anon.20 = type { i8, i8* }
%"class.absl::optional.238" = type { %"class.absl::optional_internal::optional_data.239" }
%"class.absl::optional_internal::optional_data.239" = type { %"class.absl::optional_internal::optional_data_base.240" }
%"class.absl::optional_internal::optional_data_base.240" = type { %"class.absl::optional_internal::optional_data_dtor_base.241" }
%"class.absl::optional_internal::optional_data_dtor_base.241" = type { i8, %union.anon.242 }
%union.anon.242 = type { %"class.quic::QuicConnectionId" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.243" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.quic::QuicCoalescedPacket" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", i16, i16, [4 x %"class.std::__1::basic_string"], [4 x i8], %"class.std::__1::unique_ptr.247" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.quic::SerializedPacket"* }
%"class.quic::QuicConnectionMtuDiscoverer" = type { i16, i16, i16, i16, i64, %"class.quic::QuicPacketNumber" }
%"class.quic::QuicNetworkBlackholeDetector" = type { %"class.quic::QuicNetworkBlackholeDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicArenaScopedPtr" }
%"class.quic::QuicIdleNetworkDetector" = type <{ %"class.quic::QuicIdleNetworkDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicArenaScopedPtr", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.quic::QuicPathValidator" = type { %"class.std::__1::vector.253", %"class.quic::QuicPathValidator::SendDelegate"*, %"class.quic::QuicRandom"*, %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.263", %"class.quic::QuicArenaScopedPtr", i64 }
%"class.std::__1::vector.253" = type { %"class.std::__1::__vector_base.254" }
%"class.std::__1::__vector_base.254" = type { %"struct.std::__1::array.122"*, %"struct.std::__1::array.122"*, %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.quic::QuicPathValidationContext"* }
%"class.quic::QuicPathValidationContext" = type { i32 (...)**, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.quic::QuicPathValidator::ResultDelegate"* }
%"class.quic::QuicPathValidator::ResultDelegate" = type { i32 (...)** }
%"struct.quic::QuicConnection::PathState" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.std::__1::array.40", i8, i8, i64, i64, %"class.std::__1::unique_ptr.41", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.47 }
%union.anon.47 = type { %"class.quic::RttStats" }
%"class.quic::QuicSession::Visitor" = type { i32 (...)** }
%"class.quic::QuicWriteBlockedList" = type { %"class.http2::PriorityWriteScheduler", [8 x i32], [8 x i64], i8, %"class.quic::QuicWriteBlockedList::StaticStreamCollection" }
%"class.http2::PriorityWriteScheduler" = type <{ %"class.http2::WriteScheduler", i64, [8 x %"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo"], %"class.std::__1::unordered_map", i32, [4 x i8] }>
%"class.http2::WriteScheduler" = type { i32 (...)** }
%"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo" = type { %"class.std::__1::deque.269", i64 }
%"class.std::__1::deque.269" = type { %"class.std::__1::__deque_base.270" }
%"class.std::__1::__deque_base.270" = type { %"struct.std::__1::__split_buffer.271", i64, %"class.std::__1::__compressed_pair.277" }
%"struct.std::__1::__split_buffer.271" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"class.std::__1::__compressed_pair.272" }
%"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo" = type { i8, i32, i8 }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"*** }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.281", %"class.std::__1::__compressed_pair.289", %"class.std::__1::__compressed_pair.294", %"class.std::__1::__compressed_pair.297", [4 x i8] }>
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283", %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { float }
%"class.quic::QuicWriteBlockedList::StaticStreamCollection" = type { i64, %"class.std::__1::vector.300" }
%"class.std::__1::vector.300" = type { %"class.std::__1::__vector_base.301" }
%"class.std::__1::__vector_base.301" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"class.std::__1::__compressed_pair.302" }
%"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair" = type { i32, i8 }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"* }
%"class.std::__1::vector.307" = type { %"class.std::__1::__vector_base.308" }
%"class.std::__1::__vector_base.308" = type { %"class.std::__1::unique_ptr.309"*, %"class.std::__1::unique_ptr.309"*, %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.quic::QuicStream"* }
%"class.quic::QuicStream" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.415", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.std::__1::unique_ptr.309"* }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional.327", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.332", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.320", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.238", %"class.absl::optional.238", %"class.absl::optional.238", %"class.absl::optional.238", %"class.absl::optional.238", %"class.absl::optional.238", %"class.absl::flat_hash_map.338", %"class.absl::flat_hash_map.338" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.320", %"class.std::__1::vector.320" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional.327" = type { %"class.absl::optional_internal::optional_data.328" }
%"class.absl::optional_internal::optional_data.328" = type { %"class.absl::optional_internal::optional_data_base.329" }
%"class.absl::optional_internal::optional_data_base.329" = type { %"class.absl::optional_internal::optional_data_dtor_base.330" }
%"class.absl::optional_internal::optional_data_dtor_base.330" = type { i8, %union.anon.331 }
%union.anon.331 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.absl::optional.332" = type { %"class.absl::optional_internal::optional_data.333" }
%"class.absl::optional_internal::optional_data.333" = type { %"class.absl::optional_internal::optional_data_base.334" }
%"class.absl::optional_internal::optional_data_base.334" = type { %"class.absl::optional_internal::optional_data_dtor_base.335" }
%"class.absl::optional_internal::optional_data_dtor_base.335" = type { i8, %union.anon.336 }
%union.anon.336 = type { %"struct.std::__1::pair.337" }
%"struct.std::__1::pair.337" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array.40" }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array.40", %"struct.std::__1::array.40", i8 }
%"class.std::__1::vector.320" = type { %"class.std::__1::__vector_base.321" }
%"class.std::__1::__vector_base.321" = type { i32*, i32*, %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { i32* }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::flat_hash_map.338" = type { %"class.absl::container_internal::raw_hash_map.339" }
%"class.absl::container_internal::raw_hash_map.339" = type { %"class.absl::container_internal::raw_hash_set.340" }
%"class.absl::container_internal::raw_hash_set.340" = type { i8*, %"union.absl::container_internal::map_slot_type.341"*, i64, i64, %"class.absl::container_internal::CompressedTuple.342" }
%"union.absl::container_internal::map_slot_type.341" = type opaque
%"class.absl::container_internal::CompressedTuple.342" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.343" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.343" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"class.absl::flat_hash_map.353" = type { %"class.absl::container_internal::raw_hash_map.354" }
%"class.absl::container_internal::raw_hash_map.354" = type { %"class.absl::container_internal::raw_hash_set.355" }
%"class.absl::container_internal::raw_hash_set.355" = type { i8*, %"union.absl::container_internal::map_slot_type.356"*, i64, i64, %"class.absl::container_internal::CompressedTuple.357" }
%"union.absl::container_internal::map_slot_type.356" = type opaque
%"class.absl::container_internal::CompressedTuple.357" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.358" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"class.absl::flat_hash_map.362" = type { %"class.absl::container_internal::raw_hash_map.363" }
%"class.absl::container_internal::raw_hash_map.363" = type { %"class.absl::container_internal::raw_hash_set.364" }
%"class.absl::container_internal::raw_hash_set.364" = type { i8*, %"union.absl::container_internal::map_slot_type.365"*, i64, i64, %"class.absl::container_internal::CompressedTuple.366" }
%"union.absl::container_internal::map_slot_type.365" = type opaque
%"class.absl::container_internal::CompressedTuple.366" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.367" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.367" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"class.quic::LegacyQuicStreamIdManager" = type { i8, i32, i64, i64, i32, %"class.absl::flat_hash_set", i32, i64, i64 }
%"class.absl::flat_hash_set" = type { %"class.absl::container_internal::raw_hash_set.371" }
%"class.absl::container_internal::raw_hash_set.371" = type { i8*, i32*, i64, i64, %"class.absl::container_internal::CompressedTuple.372" }
%"class.absl::container_internal::CompressedTuple.372" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.373" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.373" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"class.quic::UberQuicStreamIdManager" = type { %"struct.quic::ParsedQuicVersion", %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager" }
%"class.quic::QuicStreamIdManager" = type <{ %"class.quic::QuicStreamIdManager::DelegateInterface"*, i8, i8, [2 x i8], %"struct.quic::ParsedQuicVersion", i32, i32, i32, i32, i32, i32, i32, %"class.absl::flat_hash_set", i32, [4 x i8] }>
%"struct.quic::QuicConnectionCloseFrame" = type { i32, i64, i32, %"class.std::__1::basic_string", i64 }
%"class.quic::QuicFlowController" = type { %"class.quic::QuicFlowControllerInterface", %"class.quic::QuicSession"*, %"class.quic::QuicConnection"*, i32, i8, i8, i64, i64, i64, i64, i64, i64, i64, i8, %"class.quic::QuicFlowControllerInterface"*, i64, %"class.quic::QuicTime" }
%"class.quic::QuicFlowControllerInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager" = type { %"class.quiche::QuicheCircularDeque.375", i32, i32, i32, %"class.quiche::QuicheLinkedHashMap", %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.absl::flat_hash_map.391" }
%"class.quiche::QuicheCircularDeque.375" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" = type { %"struct.quic::QuicFrame"*, i64 }
%"class.absl::flat_hash_map.391" = type { %"class.absl::container_internal::raw_hash_map.392" }
%"class.absl::container_internal::raw_hash_map.392" = type { %"class.absl::container_internal::raw_hash_set.393" }
%"class.absl::container_internal::raw_hash_set.393" = type { i8*, %"union.absl::container_internal::map_slot_type.394"*, i64, i64, %"class.absl::container_internal::CompressedTuple.395" }
%"union.absl::container_internal::map_slot_type.394" = type opaque
%"class.absl::container_internal::CompressedTuple.395" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.396" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.396" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"class.quic::QuicDatagramQueue" = type { %"class.quic::QuicSession"*, %"class.quic::QuicClock"*, %"class.quic::QuicTime::Delta", %"class.quiche::QuicheCircularDeque.400", %"class.std::__1::unique_ptr.403" }
%"class.quiche::QuicheCircularDeque.400" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" = type { %"struct.quic::QuicDatagramQueue::Datagram"*, i64 }
%"struct.quic::QuicDatagramQueue::Datagram" = type { %"class.quic::QuicMemSlice", %"class.quic::QuicTime" }
%"class.quic::QuicMemSlice" = type { %"class.quic::QuicMemSliceImpl" }
%"class.quic::QuicMemSliceImpl" = type { %class.scoped_refptr, i64 }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.125" }
%"struct.std::__1::atomic.125" = type { %"struct.std::__1::__atomic_base.126" }
%"struct.std::__1::__atomic_base.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__cxx_atomic_impl.128" }
%"struct.std::__1::__cxx_atomic_impl.128" = type { %"struct.std::__1::__cxx_atomic_base_impl.129" }
%"struct.std::__1::__cxx_atomic_base_impl.129" = type { i32 }
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.quic::QuicDatagramQueue::Observer"* }
%"class.quic::QuicDatagramQueue::Observer" = type { i32 (...)** }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list.384" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map.376" }
%"class.absl::container_internal::raw_hash_map.376" = type { %"class.absl::container_internal::raw_hash_set.377" }
%"class.absl::container_internal::raw_hash_set.377" = type { i8*, %"struct.std::__1::pair.378"**, i64, i64, %"class.absl::container_internal::CompressedTuple.379" }
%"struct.std::__1::pair.378" = type opaque
%"class.absl::container_internal::CompressedTuple.379" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.380" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.380" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"class.std::__1::list.384" = type { %"class.std::__1::__list_imp.385" }
%"class.std::__1::__list_imp.385" = type { %"struct.std::__1::__list_node_base.386", %"class.std::__1::__compressed_pair.387" }
%"struct.std::__1::__list_node_base.386" = type { %"struct.std::__1::__list_node_base.386"*, %"struct.std::__1::__list_node_base.386"* }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.quic::QuicAlarm"* }
%"class.quic::QuicAlarm" = type { i32 (...)**, %"class.quic::QuicArenaScopedPtr.183", %"class.quic::QuicTime" }
%"class.quic::QuicArenaScopedPtr.183" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.absl::optional.409" = type { %"class.absl::optional_internal::optional_data.410" }
%"class.absl::optional_internal::optional_data.410" = type { %"class.absl::optional_internal::optional_data_base.411" }
%"class.absl::optional_internal::optional_data_base.411" = type { %"class.absl::optional_internal::optional_data_dtor_base.412" }
%"class.absl::optional_internal::optional_data_dtor_base.412" = type { i8, %union.anon.413 }
%union.anon.413 = type { %"class.std::__1::basic_string" }
%"class.spdy::StreamPrecedence" = type { i8, %union.anon.414 }
%union.anon.414 = type { %"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" }
%"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" = type { i32, i32, i8 }
%"class.absl::optional.415" = type { %"class.absl::optional_internal::optional_data.416" }
%"class.absl::optional_internal::optional_data.416" = type { %"class.absl::optional_internal::optional_data_base.417" }
%"class.absl::optional_internal::optional_data_base.417" = type { %"class.absl::optional_internal::optional_data_dtor_base.418" }
%"class.absl::optional_internal::optional_data_dtor_base.418" = type { i8, %union.anon.419 }
%union.anon.419 = type { %"class.quic::QuicFlowController" }
%"class.quic::QuicStreamSendBuffer" = type <{ i64, %"class.quic::QuicIntervalDeque", i64, %"class.quic::QuicBufferAllocator"*, i64, i64, %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet", i32, [4 x i8] }>
%"class.quic::QuicIntervalDeque" = type { %"class.quiche::QuicheCircularDeque.422", %"class.absl::optional.154" }
%"class.quiche::QuicheCircularDeque.422" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" = type { %"struct.quic::BufferedSlice"*, i64 }
%"struct.quic::BufferedSlice" = type { %"class.quic::QuicMemSlice", i64 }
%"class.quic::QuicBufferAllocator" = type { i32 (...)** }
%"class.quic::QuicTime" = type { i64 }
%"struct.std::__1::array.425" = type { [4 x %"struct.quic::QuicCryptoStream::CryptoSubstream"] }
%"struct.quic::QuicCryptoStream::CryptoSubstream" = type { %"class.quic::QuicStreamSequencer", %"class.quic::QuicStreamSendBuffer" }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.quic::QuicCryptoClientStream::HandshakerInterface"* }
%"class.quic::QuicCryptoClientStream::HandshakerInterface" = type { i32 (...)** }
%"class.quic::QuicServerId" = type <{ %"class.std::__1::basic_string", i16, i8, [5 x i8] }>
%"class.net::QuicChromiumClientSession" = type { %"class.quic::QuicSpdyClientSessionBase.base", %"class.net::MultiplexedSession", %"class.net::QuicConnectivityProbingManager::Delegate", %"class.net::QuicChromiumPacketReader::Visitor", %"class.net::QuicChromiumPacketWriter::Delegate", %"class.net::QuicSessionKey", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i32, i32, %"class.quic::QuicClock"*, i32, %"class.quic::QuicTime::Delta", i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::TimeTicks", i32, %"class.base::TimeTicks", %"class.std::__1::unique_ptr.675", %"class.std::__1::unique_ptr.681", %"class.net::QuicStreamFactory"*, %"class.base::ObserverList", %"class.std::__1::vector.701", %"class.net::TransportSecurityState"*, %"class.net::SSLConfigService"*, %"class.std::__1::unique_ptr.721", %"class.std::__1::unique_ptr.727", %"class.std::__1::basic_string", i8, i8, %"class.std::__1::set.775", %"class.std::__1::list.785", %"class.std::__1::vector.792", %"class.base::OnceCallback", i64, %"class.base::SequencedTaskRunner"*, %"class.net::NetLogWithSource", %"class.std::__1::vector.816", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.std::__1::unique_ptr.831", %"class.std::__1::unique_ptr.844", i8, i8, %"class.net::ServerPushDelegate"*, i32, i32, i64, i64, %class.scoped_refptr.850, i64, %"class.net::QuicConnectivityProbingManager", i32, %"class.base::OneShotTimer", i32, i8, i8, i8, i8, %"class.net::Http2PriorityDependencies", i8, i64, i32, %"class.std::__1::unique_ptr.878", %"class.net::QuicChromiumClientSession::QuicChromiumPathValidationWriterDelegate", %"class.base::flat_map", %"class.base::WeakPtrFactory.893" }
%"class.quic::QuicSpdyClientSessionBase.base" = type <{ %"class.quic::QuicSpdySession", %"class.quic::QuicCryptoClientStream::ProofHandler", %"class.quic::QuicClientPushPromiseIndex"*, %"class.absl::flat_hash_map.656", i32 }>
%"class.quic::QuicSpdySession" = type { %"class.quic::QuicSession.base", %"class.quic::QpackEncoder::DecoderStreamErrorDelegate", %"class.quic::QpackDecoder::EncoderStreamErrorDelegate", %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.501", %"class.quic::QuicHeadersStream"*, %"class.quic::QuicSendControlStream"*, %"class.quic::QuicReceiveControlStream"*, %"class.quic::QpackReceiveStream"*, %"class.quic::QpackReceiveStream"*, %"class.quic::QpackSendStream"*, %"class.quic::QpackSendStream"*, %"struct.quic::SettingsFrame", i64, i64, i64, i64, i32, i32, i64, i8, [7 x i8], %"class.spdy::SpdyFramer", %"class.http2::Http2DecoderAdapter", %"class.std::__1::unique_ptr.616", %"class.absl::optional.154", %"class.quic::Http3DebugVisitor"*, %"class.absl::flat_hash_map.622", i32, %"class.absl::optional.154", %"class.absl::optional.154", i64, i8, i8, %"class.absl::flat_hash_map.631", i8, %"class.absl::flat_hash_set", %"class.std::__1::list.640" }
%"class.quic::QuicSession.base" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.307", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.353", %"class.absl::flat_hash_map.362", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.180", %"class.std::__1::vector", %"class.absl::optional.409", i8, i8, i8, i8 }>
%"class.quic::QpackEncoder::DecoderStreamErrorDelegate" = type { i32 (...)** }
%"class.quic::QpackDecoder::EncoderStreamErrorDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.quic::QpackEncoder"* }
%"class.quic::QpackEncoder" = type <{ %"class.quic::QpackDecoderStreamReceiver::Delegate", %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, %"class.quic::QpackDecoderStreamReceiver", %"class.quic::QpackEncoderStreamSender", %"class.quic::QpackEncoderHeaderTable", i64, %"class.quic::QpackBlockingManager", i32, [4 x i8] }>
%"class.quic::QpackDecoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackDecoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackDecoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackInstructionDecoder::Delegate" = type { i32 (...)** }
%"class.quic::QpackStreamReceiver" = type { i32 (...)** }
%"class.quic::QpackInstructionDecoder" = type { %"class.std::__1::vector.435"*, %"class.quic::QpackInstructionDecoder::Delegate"*, i8, i64, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i64, %"class.http2::HpackVarintDecoder", %"class.http2::HpackHuffmanDecoder", i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector.435" = type opaque
%"class.http2::HpackVarintDecoder" = type <{ i64, i8, [7 x i8] }>
%"class.http2::HpackHuffmanDecoder" = type { %"class.http2::HuffmanBitBuffer" }
%"class.http2::HuffmanBitBuffer" = type { i64, i64 }
%"struct.quic::QpackInstruction" = type { %"struct.quic::QpackInstructionOpcode", %"class.std::__1::vector.436" }
%"struct.quic::QpackInstructionOpcode" = type { i8, i8 }
%"class.std::__1::vector.436" = type { %"class.std::__1::__vector_base.437" }
%"class.std::__1::__vector_base.437" = type { %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"*, %"class.std::__1::__compressed_pair.438" }
%"struct.quic::QpackInstructionField" = type { i32, i8 }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"struct.quic::QpackInstructionField"* }
%"class.std::__1::__wrap_iter" = type { %"struct.quic::QpackInstructionField"* }
%"class.quic::QpackEncoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackStreamSenderDelegate" = type { i32 (...)** }
%"class.quic::QpackInstructionEncoder" = type { i8, i64, i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"class.quic::QpackEncoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base", %"class.absl::flat_hash_map.455"*, %"class.absl::flat_hash_map.470"*, %"class.absl::flat_hash_map.455", %"class.absl::flat_hash_map.470" }
%"class.quic::QpackHeaderTableBase.base" = type <{ i32 (...)**, %"class.std::__1::deque.443", i64, i64, i64, i64, i64, i8 }>
%"class.std::__1::deque.443" = type { %"class.std::__1::__deque_base.444" }
%"class.std::__1::__deque_base.444" = type { %"struct.std::__1::__split_buffer.445", i64, %"class.std::__1::__compressed_pair.451" }
%"struct.std::__1::__split_buffer.445" = type { %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.std::__1::__compressed_pair.446" }
%"class.spdy::HpackEntry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.spdy::HpackEntry"** }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.absl::flat_hash_map.455" = type { %"class.absl::container_internal::raw_hash_map.456" }
%"class.absl::container_internal::raw_hash_map.456" = type { %"class.absl::container_internal::raw_hash_set.457" }
%"class.absl::container_internal::raw_hash_set.457" = type { i8*, %"union.absl::container_internal::map_slot_type.458"*, i64, i64, %"class.absl::container_internal::CompressedTuple.459" }
%"union.absl::container_internal::map_slot_type.458" = type opaque
%"class.absl::container_internal::CompressedTuple.459" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.460" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.460" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"class.absl::flat_hash_map.470" = type { %"class.absl::container_internal::raw_hash_map.471" }
%"class.absl::container_internal::raw_hash_map.471" = type { %"class.absl::container_internal::raw_hash_set.472" }
%"class.absl::container_internal::raw_hash_set.472" = type { i8*, %"union.absl::container_internal::map_slot_type.473"*, i64, i64, %"class.absl::container_internal::CompressedTuple.474" }
%"union.absl::container_internal::map_slot_type.473" = type opaque
%"class.absl::container_internal::CompressedTuple.474" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.475" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.475" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"class.quic::QpackBlockingManager" = type { %"class.absl::flat_hash_map.481", %"class.std::__1::map", i64 }
%"class.absl::flat_hash_map.481" = type { %"class.absl::container_internal::raw_hash_map.482" }
%"class.absl::container_internal::raw_hash_map.482" = type { %"class.absl::container_internal::raw_hash_set.483" }
%"class.absl::container_internal::raw_hash_set.483" = type { i8*, %"union.absl::container_internal::map_slot_type.484"*, i64, i64, %"class.absl::container_internal::CompressedTuple.485" }
%"union.absl::container_internal::map_slot_type.484" = type opaque
%"class.absl::container_internal::CompressedTuple.485" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.486" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.486" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.490", %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.quic::QpackDecoder"* }
%"class.quic::QpackDecoder" = type { %"class.quic::QpackEncoderStreamReceiver::Delegate", %"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer", %"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor", %"class.quic::QpackDecoder::EncoderStreamErrorDelegate"*, %"class.quic::QpackEncoderStreamReceiver", %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderHeaderTable", %"class.std::__1::set", i64, i64 }
%"class.quic::QpackEncoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer" = type { i32 (...)** }
%"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor" = type { i32 (...)** }
%"class.quic::QpackEncoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackEncoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackDecoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackDecoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base.506", %"class.std::__1::vector.507"*, %"class.std::__1::multimap" }
%"class.quic::QpackHeaderTableBase.base.506" = type <{ i32 (...)**, %"class.quiche::QuicheCircularDeque.505", i64, i64, i64, i64, i64, i8 }>
%"class.quiche::QuicheCircularDeque.505" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" = type { %"class.spdy::HpackEntry"*, i64 }
%"class.std::__1::vector.507" = type opaque
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.508" }
%"class.std::__1::__tree.508" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.509", %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.516" }
%"class.std::__1::__tree.516" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.517", %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.quic::QuicHeadersStream" = type { %"class.quic::QuicStream.base", %"class.quic::QuicSpdySession"*, %"class.quiche::QuicheCircularDeque.527" }
%"class.quiche::QuicheCircularDeque.527" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicHeadersStream::CompressedHeaderInfo, 3, std::__1::allocator<quic::QuicHeadersStream::CompressedHeaderInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicHeadersStream::CompressedHeaderInfo, 3, std::__1::allocator<quic::QuicHeadersStream::CompressedHeaderInfo> >::AllocatorAndData" = type { %"struct.quic::QuicHeadersStream::CompressedHeaderInfo"*, i64 }
%"struct.quic::QuicHeadersStream::CompressedHeaderInfo" = type { i64, i64, i64, %"class.quic::QuicReferenceCountedPointer" }
%"class.quic::QuicReferenceCountedPointer" = type { %"class.quic::QuicReferenceCountedPointerImpl" }
%"class.quic::QuicReferenceCountedPointerImpl" = type { %class.scoped_refptr.530 }
%class.scoped_refptr.530 = type { %"class.quic::QuicAckListenerInterface"* }
%"class.quic::QuicAckListenerInterface" = type { %"class.quic::QuicReferenceCounted.base", [4 x i8] }
%"class.quic::QuicReferenceCounted.base" = type { %"class.quic::QuicReferenceCountedImpl.base" }
%"class.quic::QuicReferenceCountedImpl.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.531" }>
%"class.base::RefCountedThreadSafe.531" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.quic::QuicSendControlStream" = type { %"class.quic::QuicStream.base", i8, %"struct.quic::SettingsFrame", %"class.quic::QuicSpdySession"* }
%"class.quic::QuicReceiveControlStream" = type { %"class.quic::QuicStream.base", %"class.quic::HttpDecoder::Visitor", i8, [7 x i8], %"class.quic::HttpDecoder", %"class.quic::QuicSpdySession"* }
%"class.quic::HttpDecoder::Visitor" = type { i32 (...)** }
%"class.quic::HttpDecoder" = type <{ %"class.quic::HttpDecoder::Visitor"*, i8, [3 x i8], i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.std::__1::array.548", %"struct.std::__1::array.548", %"struct.std::__1::array.548", i8, i8, [6 x i8] }>
%"struct.std::__1::array.548" = type { [8 x i8] }
%"class.quic::QpackReceiveStream" = type { %"class.quic::QuicStream.base", %"class.quic::QpackStreamReceiver"* }
%"class.quic::QpackSendStream" = type <{ %"class.quic::QuicStream.base", [7 x i8], %"class.quic::QpackStreamSenderDelegate", i64, i8, [7 x i8] }>
%"struct.quic::SettingsFrame" = type { %"class.absl::flat_hash_map.532" }
%"class.absl::flat_hash_map.532" = type { %"class.absl::container_internal::raw_hash_map.533" }
%"class.absl::container_internal::raw_hash_map.533" = type { %"class.absl::container_internal::raw_hash_set.534" }
%"class.absl::container_internal::raw_hash_set.534" = type { i8*, %"union.absl::container_internal::map_slot_type.535"*, i64, i64, %"class.absl::container_internal::CompressedTuple.538" }
%"union.absl::container_internal::map_slot_type.535" = type { %"struct.std::__1::pair.536" }
%"struct.std::__1::pair.536" = type { i64, i64 }
%"class.absl::container_internal::CompressedTuple.538" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.539" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.539" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"class.spdy::SpdyFramer" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.549", %"class.spdy::SpdyFramerDebugVisitorInterface"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.spdy::HpackEncoder"* }
%"class.spdy::HpackEncoder" = type <{ %"class.spdy::HpackHeaderTable", %"class.spdy::HpackOutputStream", i64, %"class.std::__1::function.552", %"class.std::__1::function.558", i8, i8, [6 x i8] }>
%"class.spdy::HpackHeaderTable" = type { %"class.std::__1::vector.507"*, %"class.std::__1::deque.443", %"class.absl::flat_hash_map.455"*, %"class.absl::flat_hash_map.470"*, %"class.absl::flat_hash_map.455", %"class.absl::flat_hash_map.470", i64, i64, i64, i64 }
%"class.spdy::HpackOutputStream" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::function.552" = type { %"class.std::__1::__function::__policy_func.556" }
%"class.std::__1::__function::__policy_func.556" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.557", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.557" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.absl::string_view"*, %"class.absl::string_view"*)* }
%"class.std::__1::function.558" = type { %"class.std::__1::__function::__policy_func.562" }
%"class.std::__1::__function::__policy_func.562" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.563", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.563" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.absl::string_view"*, %"class.absl::string_view"*)* }
%"class.spdy::SpdyFramerDebugVisitorInterface" = type { i32 (...)** }
%"class.http2::Http2DecoderAdapter" = type { %"class.http2::Http2FrameDecoderListener", %"struct.http2::Http2FrameHeader", %"struct.http2::Http2FrameHeader", %"class.absl::optional.154", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.http2::Http2FrameDecoderNoOpListener", %"class.spdy::SpdyFramerVisitorInterface"*, %"class.spdy::SpdyFramerDebugVisitorInterface"*, %"class.spdy::ExtensionVisitorInterface"*, %"class.std::__1::unique_ptr.567", %"class.std::__1::unique_ptr.609", i8, i32, i32, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.http2::Http2FrameDecoderListener" = type { i32 (...)** }
%"struct.http2::Http2FrameHeader" = type { i32, i32, i8, i32 }
%"class.http2::Http2FrameDecoderNoOpListener" = type { %"class.http2::Http2FrameDecoderListener" }
%"class.spdy::SpdyFramerVisitorInterface" = type { i32 (...)** }
%"class.spdy::ExtensionVisitorInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.spdy::HpackDecoderAdapter"* }
%"class.spdy::HpackDecoderAdapter" = type { %"class.spdy::HpackDecoderAdapter::ListenerAdapter", %"class.http2::HpackDecoder", i64, i64, i8, i32, %"class.std::__1::basic_string" }
%"class.spdy::HpackDecoderAdapter::ListenerAdapter" = type { %"class.http2::HpackDecoderListener", %"class.spdy::Http2HeaderBlock", %"class.spdy::SpdyHeadersHandlerInterface"*, i64, i64 }
%"class.http2::HpackDecoderListener" = type { i32 (...)** }
%"class.spdy::Http2HeaderBlock" = type { %"class.quiche::QuicheLinkedHashMap.570", %"class.spdy::SpdyHeaderStorage", i64, i64 }
%"class.quiche::QuicheLinkedHashMap.570" = type { %"class.absl::node_hash_map.571", %"class.std::__1::list.583" }
%"class.absl::node_hash_map.571" = type { %"class.absl::container_internal::raw_hash_map.572" }
%"class.absl::container_internal::raw_hash_map.572" = type { %"class.absl::container_internal::raw_hash_set.573" }
%"class.absl::container_internal::raw_hash_set.573" = type { i8*, %"struct.std::__1::pair.574"**, i64, i64, %"class.absl::container_internal::CompressedTuple.576" }
%"struct.std::__1::pair.574" = type { %"class.absl::string_view", %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base.575"* }
%"struct.std::__1::__list_node_base.575" = type { %"struct.std::__1::__list_node_base.575"*, %"struct.std::__1::__list_node_base.575"* }
%"class.absl::container_internal::CompressedTuple.576" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.577" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.577" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"class.std::__1::list.583" = type { %"class.std::__1::__list_imp.584" }
%"class.std::__1::__list_imp.584" = type { %"struct.std::__1::__list_node_base.575", %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.spdy::SpdyHeaderStorage" = type { %"class.spdy::SpdySimpleArena" }
%"class.spdy::SpdySimpleArena" = type { i64, %"class.std::__1::vector.589", %"class.spdy::SpdySimpleArena::Status" }
%"class.std::__1::vector.589" = type { %"class.std::__1::__vector_base.590" }
%"class.std::__1::__vector_base.590" = type { %"struct.spdy::SpdySimpleArena::Block"*, %"struct.spdy::SpdySimpleArena::Block"*, %"class.std::__1::__compressed_pair.597" }
%"struct.spdy::SpdySimpleArena::Block" = type { %"class.std::__1::unique_ptr.591", i64, i64 }
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { i8* }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"struct.spdy::SpdySimpleArena::Block"* }
%"class.spdy::SpdySimpleArena::Status" = type { i64 }
%"class.spdy::SpdyHeadersHandlerInterface" = type { i32 (...)** }
%"class.http2::HpackDecoder" = type { i32 (...)**, %"class.http2::HpackDecoderState", %"class.http2::HpackWholeEntryBuffer", %"class.http2::HpackBlockDecoder", i32, %"class.std::__1::basic_string" }
%"class.http2::HpackDecoderState" = type { %"class.http2::HpackWholeEntryListener", %"class.http2::HpackDecoderTables", %"class.http2::HpackDecoderListener"*, i32, i32, i8, i8, i8, i32, %"class.std::__1::basic_string" }
%"class.http2::HpackWholeEntryListener" = type { i32 (...)** }
%"class.http2::HpackDecoderTables" = type { %"class.http2::HpackDecoderStaticTable", %"class.http2::HpackDecoderDynamicTable" }
%"class.http2::HpackDecoderStaticTable" = type { %"class.std::__1::vector.602"* }
%"class.std::__1::vector.602" = type opaque
%"class.http2::HpackDecoderDynamicTable" = type { %"class.quiche::QuicheCircularDeque.603", i64, i64, i64 }
%"class.quiche::QuicheCircularDeque.603" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<http2::HpackStringPair, 3, std::__1::allocator<http2::HpackStringPair> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<http2::HpackStringPair, 3, std::__1::allocator<http2::HpackStringPair> >::AllocatorAndData" = type { %"struct.http2::HpackStringPair"*, i64 }
%"struct.http2::HpackStringPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.http2::HpackWholeEntryBuffer" = type <{ %"class.http2::HpackEntryDecoderListener", %"class.http2::HpackWholeEntryListener"*, %"class.http2::HpackDecoderStringBuffer", %"class.http2::HpackDecoderStringBuffer", i64, i64, i32, i8, [3 x i8] }>
%"class.http2::HpackEntryDecoderListener" = type { i32 (...)** }
%"class.http2::HpackDecoderStringBuffer" = type <{ %"class.std::__1::basic_string", %"class.absl::string_view", %"class.http2::HpackHuffmanDecoder", i64, i8, i8, i8, [5 x i8] }>
%"class.http2::HpackBlockDecoder" = type <{ %"class.http2::HpackEntryDecoder", %"class.http2::HpackEntryDecoderListener"*, i8, [7 x i8] }>
%"class.http2::HpackEntryDecoder" = type { %"class.http2::HpackEntryTypeDecoder", %"class.http2::HpackStringDecoder", i32, i32 }
%"class.http2::HpackEntryTypeDecoder" = type { %"class.http2::HpackVarintDecoder", i32, [4 x i8] }
%"class.http2::HpackStringDecoder" = type <{ %"class.http2::HpackVarintDecoder", i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.http2::Http2FrameDecoder"* }
%"class.http2::Http2FrameDecoder" = type { %"class.http2::FrameDecoderState", %union.anon.612, i32, i64, %"class.http2::Http2FrameDecoderNoOpListener" }
%"class.http2::FrameDecoderState" = type { %"class.http2::Http2FrameDecoderListener"*, %"struct.http2::Http2FrameHeader", i32, i32, %"class.http2::Http2StructureDecoder" }
%"class.http2::Http2StructureDecoder" = type <{ i32, [9 x i8], [3 x i8] }>
%union.anon.612 = type { %"class.http2::HeadersPayloadDecoder" }
%"class.http2::HeadersPayloadDecoder" = type { i32, %"struct.http2::Http2PriorityFields" }
%"struct.http2::Http2PriorityFields" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.616" = type { %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.quic::QuicSpdySession::SpdyFramerVisitor"* }
%"class.quic::QuicSpdySession::SpdyFramerVisitor" = type opaque
%"class.quic::Http3DebugVisitor" = type { i32 (...)** }
%"class.absl::flat_hash_map.622" = type { %"class.absl::container_internal::raw_hash_map.623" }
%"class.absl::container_internal::raw_hash_map.623" = type { %"class.absl::container_internal::raw_hash_set.624" }
%"class.absl::container_internal::raw_hash_set.624" = type { i8*, %"union.absl::container_internal::map_slot_type.625"*, i64, i64, %"class.absl::container_internal::CompressedTuple.626" }
%"union.absl::container_internal::map_slot_type.625" = type opaque
%"class.absl::container_internal::CompressedTuple.626" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.627" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.627" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"class.absl::flat_hash_map.631" = type { %"class.absl::container_internal::raw_hash_map.632" }
%"class.absl::container_internal::raw_hash_map.632" = type { %"class.absl::container_internal::raw_hash_set.633" }
%"class.absl::container_internal::raw_hash_set.633" = type { i8*, %"union.absl::container_internal::map_slot_type.634"*, i64, i64, %"class.absl::container_internal::CompressedTuple.635" }
%"union.absl::container_internal::map_slot_type.634" = type opaque
%"class.absl::container_internal::CompressedTuple.635" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.636" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.636" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"class.std::__1::list.640" = type { %"class.std::__1::__list_imp.641" }
%"class.std::__1::__list_imp.641" = type { %"struct.std::__1::__list_node_base.642", %"class.std::__1::__compressed_pair.643" }
%"struct.std::__1::__list_node_base.642" = type { %"struct.std::__1::__list_node_base.642"*, %"struct.std::__1::__list_node_base.642"* }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.quic::QuicCryptoClientStream::ProofHandler" = type { i32 (...)** }
%"class.quic::QuicClientPushPromiseIndex" = type { i32 (...)**, %"class.absl::flat_hash_map.647" }
%"class.absl::flat_hash_map.647" = type { %"class.absl::container_internal::raw_hash_map.648" }
%"class.absl::container_internal::raw_hash_map.648" = type { %"class.absl::container_internal::raw_hash_set.649" }
%"class.absl::container_internal::raw_hash_set.649" = type { i8*, %"union.absl::container_internal::map_slot_type.650"*, i64, i64, %"class.absl::container_internal::CompressedTuple.651" }
%"union.absl::container_internal::map_slot_type.650" = type opaque
%"class.absl::container_internal::CompressedTuple.651" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.652" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.652" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"class.absl::flat_hash_map.656" = type { %"class.absl::container_internal::raw_hash_map.657" }
%"class.absl::container_internal::raw_hash_map.657" = type { %"class.absl::container_internal::raw_hash_set.658" }
%"class.absl::container_internal::raw_hash_set.658" = type { i8*, %"union.absl::container_internal::map_slot_type.659"*, i64, i64, %"class.absl::container_internal::CompressedTuple.660" }
%"union.absl::container_internal::map_slot_type.659" = type opaque
%"class.absl::container_internal::CompressedTuple.660" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.661" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.661" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.6" }
%"class.net::MultiplexedSession" = type { i32 (...)** }
%"class.net::QuicConnectivityProbingManager::Delegate" = type { i32 (...)** }
%"class.net::QuicChromiumPacketReader::Visitor" = type { i32 (...)** }
%"class.net::QuicChromiumPacketWriter::Delegate" = type { i32 (...)** }
%"class.net::QuicSessionKey" = type <{ %"class.quic::QuicServerId", %"class.net::SocketTag", [7 x i8], %"class.net::NetworkIsolationKey", i32, [4 x i8] }>
%"class.net::SocketTag" = type { i8 }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.665", %"class.absl::optional.665" }
%"class.absl::optional.665" = type { %"class.absl::optional_internal::optional_data.666" }
%"class.absl::optional_internal::optional_data.666" = type { %"class.absl::optional_internal::optional_data_base.667" }
%"class.absl::optional_internal::optional_data_base.667" = type { %"class.absl::optional_internal::optional_data_dtor_base.668" }
%"class.absl::optional_internal::optional_data_dtor_base.668" = type { i8, %union.anon.669 }
%union.anon.669 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.670" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.670" = type { %"class.absl::optional_internal::optional_data.671" }
%"class.absl::optional_internal::optional_data.671" = type { %"class.absl::optional_internal::optional_data_base.672" }
%"class.absl::optional_internal::optional_data_base.672" = type { %"class.absl::optional_internal::optional_data_dtor_base.673" }
%"class.absl::optional_internal::optional_data_dtor_base.673" = type { i8, %union.anon.674 }
%union.anon.674 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.net::QuicCryptoClientConfigHandle"* }
%"class.net::QuicCryptoClientConfigHandle" = type { i32 (...)** }
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.quic::QuicCryptoClientStream"* }
%"class.net::QuicStreamFactory" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.687", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.687" = type { %"class.std::__1::__vector_base.688" }
%"class.std::__1::__vector_base.688" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.696" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.689 }
%class.scoped_refptr.689 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.690", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.690" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.691" }
%"struct.std::__1::atomic.691" = type { %"struct.std::__1::__atomic_base.692" }
%"struct.std::__1::__atomic_base.692" = type { %"struct.std::__1::__atomic_base.693" }
%"struct.std::__1::__atomic_base.693" = type { %"struct.std::__1::__cxx_atomic_impl.694" }
%"struct.std::__1::__cxx_atomic_impl.694" = type { %"struct.std::__1::__cxx_atomic_base_impl.695" }
%"struct.std::__1::__cxx_atomic_base_impl.695" = type { i8 }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::vector.701" = type { %"class.std::__1::__vector_base.702" }
%"class.std::__1::__vector_base.702" = type { %"class.std::__1::unique_ptr.703"*, %"class.std::__1::unique_ptr.703"*, %"class.std::__1::__compressed_pair.716" }
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.net::DatagramClientSocket"* }
%"class.net::DatagramClientSocket" = type { %"class.net::DatagramSocket", %"class.net::Socket" }
%"class.net::DatagramSocket" = type { i32 (...)** }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector.706" }
%"class.std::__1::vector.706" = type { %"class.std::__1::__vector_base.707" }
%"class.std::__1::__vector_base.707" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"class.std::__1::unique_ptr.703"* }
%"class.net::TransportSecurityState" = type opaque
%"class.net::SSLConfigService" = type opaque
%"class.std::__1::unique_ptr.721" = type { %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"class.net::QuicServerInfo"* }
%"class.net::QuicServerInfo" = type opaque
%"class.std::__1::unique_ptr.727" = type { %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"class.net::CertVerifyResult"* }
%"class.net::CertVerifyResult" = type <{ %"class.base::SupportsUserData.base", [7 x i8], %class.scoped_refptr.741, i32, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::vector.755", i8, i8, [2 x i8], %"struct.net::OCSPVerifyResult", [4 x i8], %"class.std::__1::vector.763", i32, [4 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.730", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.730" = type { %"class.std::__1::__tree.731" }
%"class.std::__1::__tree.731" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.732", %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%class.scoped_refptr.741 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.742", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.744", %"class.std::__1::vector.748" }
%"class.base::RefCountedThreadSafe.742" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.706", %"class.std::__1::vector.706", %"class.std::__1::vector.706", %"class.std::__1::vector.706" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.743" }
%"class.base::time_internal::TimeBase.743" = type { i64 }
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.748" = type { %"class.std::__1::__vector_base.749" }
%"class.std::__1::__vector_base.749" = type { %"class.std::__1::unique_ptr.744"*, %"class.std::__1::unique_ptr.744"*, %"class.std::__1::__compressed_pair.750" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"class.std::__1::unique_ptr.744"* }
%"class.std::__1::vector.755" = type { %"class.std::__1::__vector_base.756" }
%"class.std::__1::__vector_base.756" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.758" }
%"class.net::HashValue" = type { i32, %union.anon.757 }
%union.anon.757 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.net::HashValue"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.std::__1::vector.763" = type { %"class.std::__1::__vector_base.764" }
%"class.std::__1::__vector_base.764" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.767" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.765, i32, [4 x i8] }>
%class.scoped_refptr.765 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.766", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.766" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"class.std::__1::set.775" = type { %"class.std::__1::__tree.776" }
%"class.std::__1::__tree.776" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::list.785" = type { %"class.std::__1::__list_imp.786" }
%"class.std::__1::__list_imp.786" = type { %"struct.std::__1::__list_node_base.787", %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::__list_node_base.787" = type { %"struct.std::__1::__list_node_base.787"*, %"struct.std::__1::__list_node_base.787"* }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::vector.792" = type { %"class.std::__1::__vector_base.793" }
%"class.std::__1::__vector_base.793" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.base::OnceCallback"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.794 }
%class.scoped_refptr.794 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.795", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.795" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.801" }>
%"class.base::RefCountedThreadSafe.801" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.802", %"class.std::__1::vector.809" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.804" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.811" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { %"class.std::__1::unique_ptr.818"*, %"class.std::__1::unique_ptr.818"*, %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::unique_ptr.818" = type { %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"class.net::QuicChromiumPacketReader"* }
%"class.net::QuicChromiumPacketReader" = type { i32 (...)**, %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketReader::Visitor"*, i8, i32, %"class.quic::QuicClock"*, i32, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %class.scoped_refptr.821, %"class.net::NetLogWithSource", %"class.base::WeakPtrFactory" }
%class.scoped_refptr.821 = type { %"class.net::IOBufferWithSize"* }
%"class.net::IOBufferWithSize" = type <{ %"class.net::IOBuffer", i32, [4 x i8] }>
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.822 }
%class.scoped_refptr.822 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.std::__1::unique_ptr.818"* }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.831" = type { %"class.std::__1::__compressed_pair.832" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"class.net::QuicConnectionLogger"* }
%"class.net::QuicConnectionLogger" = type { %"class.quic::QuicConnectionDebugVisitor", %"class.quic::QuicPacketCreator::DebugDelegate", %"class.quic::QuicSession"*, %"class.quic::QuicPacketNumber", i64, i8, i64, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", i64, i64, i64, %"class.net::IPEndPoint", %"class.net::IPEndPoint", i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::bitset", %"class.std::__1::bitset", i8*, %"class.std::__1::unique_ptr.835", %"class.net::QuicEventLogger" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.834", i8 }
%"struct.std::__1::array.834" = type { [16 x i8] }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [3 x i64] }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"class.net::SocketPerformanceWatcher"* }
%"class.net::SocketPerformanceWatcher" = type { i32 (...)** }
%"class.net::QuicEventLogger" = type <{ %"class.quic::QuicConnectionDebugVisitor", %"class.quic::QuicPacketCreator::DebugDelegate", %"class.quic::QuicSession"*, %"class.net::NetLogWithSource", %"class.net::IPEndPoint", [4 x i8] }>
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.net::QuicHttp3Logger"* }
%"class.net::QuicHttp3Logger" = type { %"class.quic::Http3DebugVisitor", %"class.net::NetLogWithSource" }
%"class.net::ServerPushDelegate" = type { i32 (...)** }
%class.scoped_refptr.850 = type { %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"* }
%"class.net::QuicChromiumPacketWriter::ReusableIOBuffer" = type { %"class.net::IOBuffer", i64, i64 }
%"class.net::QuicConnectivityProbingManager" = type { %"class.net::QuicChromiumPacketWriter::Delegate", %"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::NetLogWithSource", i8, i64, %"class.quic::QuicSocketAddress", %"class.std::__1::unique_ptr.703", %"class.std::__1::unique_ptr.851", %"class.std::__1::unique_ptr.818", i64, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::OneShotTimer", %"class.base::SequencedTaskRunner"*, %"class.net::IPEndPoint", i8, %"class.base::WeakPtrFactory.861" }
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"class.net::QuicChromiumPacketWriter"* }
%"class.net::QuicChromiumPacketWriter" = type { %"class.quic::QuicPacketWriter", %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketWriter::Delegate"*, %class.scoped_refptr.850, i8, i8, i32, %"class.base::OneShotTimer", %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.857" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.857" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.861" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.856" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.854, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.855" }
%class.scoped_refptr.854 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.855" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback.856" = type { %"class.base::internal::CallbackBase" }
%"class.net::Http2PriorityDependencies" = type { [8 x %"class.std::__1::list.862"], %"class.std::__1::map.869" }
%"class.std::__1::list.862" = type { %"class.std::__1::__list_imp.863" }
%"class.std::__1::__list_imp.863" = type { %"struct.std::__1::__list_node_base.864", %"class.std::__1::__compressed_pair.865" }
%"struct.std::__1::__list_node_base.864" = type { %"struct.std::__1::__list_node_base.864"*, %"struct.std::__1::__list_node_base.864"* }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::map.869" = type { %"class.std::__1::__tree.870" }
%"class.std::__1::__tree.870" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.871", %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"class.quic::QuicClientPushPromiseIndex"* }
%"class.net::QuicChromiumClientSession::QuicChromiumPathValidationWriterDelegate" = type { %"class.net::QuicChromiumPacketWriter::Delegate", %"class.net::QuicChromiumClientSession"*, %"class.base::SequencedTaskRunner"*, i64, %"class.quic::QuicSocketAddress", %"class.base::WeakPtrFactory.884" }
%"class.base::WeakPtrFactory.884" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.885" }
%"class.std::__1::vector.885" = type { %"class.std::__1::__vector_base.886" }
%"class.std::__1::__vector_base.886" = type { %"struct.std::__1::pair.887"*, %"struct.std::__1::pair.887"*, %"class.std::__1::__compressed_pair.888" }
%"struct.std::__1::pair.887" = type opaque
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::pair.887"* }
%"class.base::WeakPtrFactory.893" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.quic::ProofVerifyContext" = type { i32 (...)** }
%"class.quic::QuicCryptoClientConfig" = type <{ %"class.quic::QuicCryptoConfig", %"class.std::__1::map.900", %"class.std::__1::map.911", %"class.std::__1::vector.706", %"class.std::__1::unique_ptr.920", %"class.std::__1::unique_ptr.926", %"class.std::__1::unique_ptr.932", %"class.std::__1::unique_ptr.938", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.quic::QuicCryptoConfig" = type { %"class.std::__1::vector.320", %"class.std::__1::vector.320", %"class.quic::CommonCertSets"* }
%"class.quic::CommonCertSets" = type opaque
%"class.std::__1::map.900" = type { %"class.std::__1::__tree.901" }
%"class.std::__1::__tree.901" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.902", %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::map.911" = type { %"class.std::__1::__tree.912" }
%"class.std::__1::__tree.912" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.913", %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unique_ptr.920" = type { %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"class.quic::ProofVerifier"* }
%"class.quic::ProofVerifier" = type { i32 (...)** }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.quic::SessionCache"* }
%"class.quic::SessionCache" = type { i32 (...)** }
%"class.std::__1::unique_ptr.932" = type { %"class.std::__1::__compressed_pair.933" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.quic::ProofSource"* }
%"class.quic::ProofSource" = type { i32 (...)** }
%"class.std::__1::unique_ptr.938" = type { %"class.std::__1::__compressed_pair.939" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %struct.ssl_ctx_st* }
%struct.ssl_ctx_st = type opaque

$_ZN3net29QuicCryptoClientStreamFactoryD2Ev = comdat any

@_ZN3net12_GLOBAL__N_131g_default_crypto_stream_factoryE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZTVN3net12_GLOBAL__N_126DefaultCryptoStreamFactoryE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::QuicCryptoClientStreamFactory"*)* @_ZN3net29QuicCryptoClientStreamFactoryD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DefaultCryptoStreamFactory"*)* @_ZN3net12_GLOBAL__N_126DefaultCryptoStreamFactoryD0Ev to i8*), i8* bitcast (%"class.quic::QuicCryptoClientStream"* (%"class.net::(anonymous namespace)::DefaultCryptoStreamFactory"*, %"class.quic::QuicServerId"*, %"class.net::QuicChromiumClientSession"*, %"class.quic::ProofVerifyContext"*, %"class.quic::QuicCryptoClientConfig"*)* @_ZN3net12_GLOBAL__N_126DefaultCryptoStreamFactory28CreateQuicCryptoClientStreamERKN4quic12QuicServerIdEPNS_25QuicChromiumClientSessionENSt3__110unique_ptrINS2_18ProofVerifyContextENS8_14default_deleteISA_EEEEPNS2_22QuicCryptoClientConfigE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::QuicCryptoClientStreamFactory"* @_ZN3net29QuicCryptoClientStreamFactory17GetDefaultFactoryEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_131g_default_crypto_stream_factoryE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_131g_default_crypto_stream_factoryE, i64 0, i32 0)) #5
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net12_GLOBAL__N_126DefaultCryptoStreamFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_131g_default_crypto_stream_factoryE, i64 0, i32 1, i64 0) to i32 (...)***), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_131g_default_crypto_stream_factoryE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_131g_default_crypto_stream_factoryE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_131g_default_crypto_stream_factoryE to i8*)) #5
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_131g_default_crypto_stream_factoryE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_131g_default_crypto_stream_factoryE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %"class.net::(anonymous namespace)::DefaultCryptoStreamFactory"*
  %11 = getelementptr inbounds %"class.net::(anonymous namespace)::DefaultCryptoStreamFactory", %"class.net::(anonymous namespace)::DefaultCryptoStreamFactory"* %10, i64 0, i32 0
  ret %"class.net::QuicCryptoClientStreamFactory"* %11
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net29QuicCryptoClientStreamFactoryD2Ev(%"class.net::QuicCryptoClientStreamFactory"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_126DefaultCryptoStreamFactoryD0Ev(%"class.net::(anonymous namespace)::DefaultCryptoStreamFactory"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.net::(anonymous namespace)::DefaultCryptoStreamFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal nonnull %"class.quic::QuicCryptoClientStream"* @_ZN3net12_GLOBAL__N_126DefaultCryptoStreamFactory28CreateQuicCryptoClientStreamERKN4quic12QuicServerIdEPNS_25QuicChromiumClientSessionENSt3__110unique_ptrINS2_18ProofVerifyContextENS8_14default_deleteISA_EEEEPNS2_22QuicCryptoClientConfigE(%"class.net::(anonymous namespace)::DefaultCryptoStreamFactory"* nocapture readnone, %"class.quic::QuicServerId"* dereferenceable(32), %"class.net::QuicChromiumClientSession"*, %"class.quic::ProofVerifyContext"*, %"class.quic::QuicCryptoClientConfig"*) unnamed_addr #0 align 2 {
  %6 = tail call i8* @_Znwm(i64 1752) #6
  %7 = bitcast i8* %6 to %"class.quic::QuicCryptoClientStream"*
  %8 = bitcast %"class.net::QuicChromiumClientSession"* %2 to %"class.quic::QuicSession"*
  %9 = icmp eq %"class.net::QuicChromiumClientSession"* %2, null
  %10 = getelementptr inbounds %"class.net::QuicChromiumClientSession", %"class.net::QuicChromiumClientSession"* %2, i64 0, i32 0, i32 1
  %11 = select i1 %9, %"class.quic::QuicCryptoClientStream::ProofHandler"* null, %"class.quic::QuicCryptoClientStream::ProofHandler"* %10
  tail call void @_ZN4quic22QuicCryptoClientStreamC1ERKNS_12QuicServerIdEPNS_11QuicSessionENSt3__110unique_ptrINS_18ProofVerifyContextENS6_14default_deleteIS8_EEEEPNS_22QuicCryptoClientConfigEPNS0_12ProofHandlerEb(%"class.quic::QuicCryptoClientStream"* nonnull %7, %"class.quic::QuicServerId"* dereferenceable(32) %1, %"class.quic::QuicSession"* %8, %"class.quic::ProofVerifyContext"* %3, %"class.quic::QuicCryptoClientConfig"* %4, %"class.quic::QuicCryptoClientStream::ProofHandler"* %11, i1 zeroext true) #5
  ret %"class.quic::QuicCryptoClientStream"* %7
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4quic22QuicCryptoClientStreamC1ERKNS_12QuicServerIdEPNS_11QuicSessionENSt3__110unique_ptrINS_18ProofVerifyContextENS6_14default_deleteIS8_EEEEPNS_22QuicCryptoClientConfigEPNS0_12ProofHandlerEb(%"class.quic::QuicCryptoClientStream"*, %"class.quic::QuicServerId"* dereferenceable(32), %"class.quic::QuicSession"*, %"class.quic::ProofVerifyContext"*, %"class.quic::QuicCryptoClientConfig"*, %"class.quic::QuicCryptoClientStream::ProofHandler"*, i1 zeroext) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
