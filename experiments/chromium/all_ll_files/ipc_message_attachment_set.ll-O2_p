; ModuleID = '../../ipc/ipc_message_attachment_set.cc'
source_filename = "../../ipc/ipc_message_attachment_set.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.IPC::MessageAttachmentSet" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::vector", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair" }
%class.scoped_refptr = type { %"class.IPC::MessageAttachment"* }
%"class.IPC::MessageAttachment" = type { %"class.base::Pickle::Attachment.base", [4 x i8] }
%"class.base::Pickle::Attachment.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1" }>
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.scoped_refptr* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::Pickle::Attachment" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1", [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorI13scoped_refptrIN3IPC17MessageAttachmentEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_ = comdat any

@.str = private unnamed_addr constant [40 x i8] c"../../ipc/ipc_message_attachment_set.cc\00", align 1
@.str.1 = private unnamed_addr constant [61 x i8] c"MessageAttachmentSet destroyed with unconsumed attachments: \00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3IPC20MessageAttachmentSetC1Ev = hidden unnamed_addr alias void (%"class.IPC::MessageAttachmentSet"*), void (%"class.IPC::MessageAttachmentSet"*)* @_ZN3IPC20MessageAttachmentSetC2Ev
@_ZN3IPC20MessageAttachmentSetD1Ev = hidden unnamed_addr alias void (%"class.IPC::MessageAttachmentSet"*), void (%"class.IPC::MessageAttachmentSet"*)* @_ZN3IPC20MessageAttachmentSetD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC20MessageAttachmentSetC2Ev(%"class.IPC::MessageAttachmentSet"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC20MessageAttachmentSetD2Ev(%"class.IPC::MessageAttachmentSet"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = bitcast %class.scoped_refptr** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = lshr exact i64 %11, 3
  %13 = trunc i64 %12 to i32
  %14 = icmp eq i32 %4, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %1
  %16 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #11
  br i1 %16, label %17, label %31

17:                                               ; preds = %15
  %18 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %18) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i32 49, i32 1) #11
  %19 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %20 = bitcast %"class.std::__1::basic_ostringstream"* %19 to %"class.std::__1::basic_ostream"*
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i64 60) #11
  %22 = load i32, i32* %3, align 8
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %21, i32 %22) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #11
  %25 = load i64, i64* %7, align 8
  %26 = load i64, i64* %9, align 8
  %27 = sub i64 %25, %26
  %28 = lshr exact i64 %27, 3
  %29 = trunc i64 %28 to i32
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %24, i32 %29) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %18) #11
  br label %31

31:                                               ; preds = %17, %15, %1
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %33 = load %class.scoped_refptr*, %class.scoped_refptr** %32, align 8
  %34 = icmp eq %class.scoped_refptr* %33, null
  br i1 %34, label %64, label %35

35:                                               ; preds = %31
  %36 = bitcast %class.scoped_refptr* %33 to i8*
  %37 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %38 = icmp eq %class.scoped_refptr* %37, %33
  br i1 %38, label %62, label %39

39:                                               ; preds = %35, %57
  %40 = phi %class.scoped_refptr* [ %41, %57 ], [ %37, %35 ]
  %41 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %40, i64 -1
  %42 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %41, i64 0, i32 0
  %43 = load %"class.IPC::MessageAttachment"*, %"class.IPC::MessageAttachment"** %42, align 8
  %44 = icmp eq %"class.IPC::MessageAttachment"* %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.IPC::MessageAttachment", %"class.IPC::MessageAttachment"* %43, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw sub i32* %47, i32 1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %57

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %46, i64 -2
  %52 = bitcast %"class.base::RefCountedThreadSafe.1"* %51 to %"class.base::Pickle::Attachment"*
  %53 = bitcast %"class.base::RefCountedThreadSafe.1"* %51 to void (%"class.base::Pickle::Attachment"*)***
  %54 = load void (%"class.base::Pickle::Attachment"*)**, void (%"class.base::Pickle::Attachment"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.base::Pickle::Attachment"*)*, void (%"class.base::Pickle::Attachment"*)** %54, i64 1
  %56 = load void (%"class.base::Pickle::Attachment"*)*, void (%"class.base::Pickle::Attachment"*)** %55, align 8
  call void %56(%"class.base::Pickle::Attachment"* nonnull %52) #11
  br label %57

57:                                               ; preds = %50, %45, %39
  %58 = icmp eq %class.scoped_refptr* %41, %33
  br i1 %58, label %59, label %39

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::vector"* %5 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %35
  %63 = phi i8* [ %61, %59 ], [ %36, %35 ]
  store %class.scoped_refptr* %33, %class.scoped_refptr** %6, align 8
  call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %31, %62
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3IPC20MessageAttachmentSet4sizeEv(%"class.IPC::MessageAttachmentSet"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2, i32 0, i32 1
  %4 = bitcast %class.scoped_refptr** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = lshr exact i64 %8, 3
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3IPC20MessageAttachmentSet15num_descriptorsEv(%"class.IPC::MessageAttachmentSet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %class.scoped_refptr*, %class.scoped_refptr** %2, align 8
  %4 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %6 = icmp eq %class.scoped_refptr* %3, %5
  br i1 %6, label %22, label %7

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %19, %7 ], [ 0, %1 ]
  %9 = phi %class.scoped_refptr* [ %20, %7 ], [ %3, %1 ]
  %10 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %9, i64 0, i32 0
  %11 = load %"class.IPC::MessageAttachment"*, %"class.IPC::MessageAttachment"** %10, align 8
  %12 = bitcast %"class.IPC::MessageAttachment"* %11 to i32 (%"class.IPC::MessageAttachment"*)***
  %13 = load i32 (%"class.IPC::MessageAttachment"*)**, i32 (%"class.IPC::MessageAttachment"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.IPC::MessageAttachment"*)*, i32 (%"class.IPC::MessageAttachment"*)** %13, i64 2
  %15 = load i32 (%"class.IPC::MessageAttachment"*)*, i32 (%"class.IPC::MessageAttachment"*)** %14, align 8
  %16 = tail call i32 %15(%"class.IPC::MessageAttachment"* %11) #11
  %17 = icmp eq i32 %16, 1
  %18 = zext i1 %17 to i32
  %19 = add i32 %8, %18
  %20 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %9, i64 1
  %21 = icmp eq %class.scoped_refptr* %20, %5
  br i1 %21, label %22, label %7

22:                                               ; preds = %7, %1
  %23 = phi i32 [ 0, %1 ], [ %19, %7 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3IPC20MessageAttachmentSet13AddAttachmentE13scoped_refptrINS_17MessageAttachmentEEPm(%"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachment"*, i64* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.scoped_refptr, align 8
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  store %"class.IPC::MessageAttachment"* %1, %"class.IPC::MessageAttachment"** %5, align 8
  %6 = bitcast %"class.IPC::MessageAttachment"* %1 to i32 (%"class.IPC::MessageAttachment"*)***
  %7 = load i32 (%"class.IPC::MessageAttachment"*)**, i32 (%"class.IPC::MessageAttachment"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.IPC::MessageAttachment"*)*, i32 (%"class.IPC::MessageAttachment"*)** %7, i64 2
  %9 = load i32 (%"class.IPC::MessageAttachment"*)*, i32 (%"class.IPC::MessageAttachment"*)** %8, align 8
  %10 = tail call i32 %9(%"class.IPC::MessageAttachment"* %1) #11
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %35

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load %class.scoped_refptr*, %class.scoped_refptr** %13, align 8
  %15 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = load %class.scoped_refptr*, %class.scoped_refptr** %15, align 8
  %17 = icmp eq %class.scoped_refptr* %14, %16
  br i1 %17, label %35, label %18

18:                                               ; preds = %12, %18
  %19 = phi i32 [ %30, %18 ], [ 0, %12 ]
  %20 = phi %class.scoped_refptr* [ %31, %18 ], [ %14, %12 ]
  %21 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %20, i64 0, i32 0
  %22 = load %"class.IPC::MessageAttachment"*, %"class.IPC::MessageAttachment"** %21, align 8
  %23 = bitcast %"class.IPC::MessageAttachment"* %22 to i32 (%"class.IPC::MessageAttachment"*)***
  %24 = load i32 (%"class.IPC::MessageAttachment"*)**, i32 (%"class.IPC::MessageAttachment"*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.IPC::MessageAttachment"*)*, i32 (%"class.IPC::MessageAttachment"*)** %24, i64 2
  %26 = load i32 (%"class.IPC::MessageAttachment"*)*, i32 (%"class.IPC::MessageAttachment"*)** %25, align 8
  %27 = tail call i32 %26(%"class.IPC::MessageAttachment"* %22) #11
  %28 = icmp eq i32 %27, 1
  %29 = zext i1 %28 to i32
  %30 = add i32 %19, %29
  %31 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %20, i64 1
  %32 = icmp eq %class.scoped_refptr* %31, %16
  br i1 %32, label %33, label %18

33:                                               ; preds = %18
  %34 = icmp eq i32 %30, 7
  br i1 %34, label %69, label %35

35:                                               ; preds = %12, %33, %3
  %36 = load i32 (%"class.IPC::MessageAttachment"*)**, i32 (%"class.IPC::MessageAttachment"*)*** %6, align 8
  %37 = getelementptr inbounds i32 (%"class.IPC::MessageAttachment"*)*, i32 (%"class.IPC::MessageAttachment"*)** %36, i64 2
  %38 = load i32 (%"class.IPC::MessageAttachment"*)*, i32 (%"class.IPC::MessageAttachment"*)** %37, align 8
  %39 = tail call i32 %38(%"class.IPC::MessageAttachment"* %1) #11
  %40 = icmp ult i32 %39, 5
  br i1 %40, label %41, label %69

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2
  %43 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2, i32 0, i32 1
  %44 = load %class.scoped_refptr*, %class.scoped_refptr** %43, align 8
  %45 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %46 = load %class.scoped_refptr*, %class.scoped_refptr** %45, align 8
  %47 = icmp eq %class.scoped_refptr* %44, %46
  br i1 %47, label %58, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %44, i64 0, i32 0
  store %"class.IPC::MessageAttachment"* %1, %"class.IPC::MessageAttachment"** %49, align 8
  %50 = icmp eq %"class.IPC::MessageAttachment"* %1, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.IPC::MessageAttachment", %"class.IPC::MessageAttachment"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 1 monotonic
  br label %54

54:                                               ; preds = %51, %48
  %55 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %44, i64 1
  %56 = ptrtoint %class.scoped_refptr* %55 to i64
  %57 = bitcast %class.scoped_refptr** %43 to i64*
  store i64 %56, i64* %57, align 8
  br label %61

58:                                               ; preds = %41
  call void @_ZNSt3__16vectorI13scoped_refptrIN3IPC17MessageAttachmentEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector"* %42, %class.scoped_refptr* nonnull dereferenceable(8) %4) #11
  %59 = bitcast %class.scoped_refptr** %43 to i64*
  %60 = load i64, i64* %59, align 8
  br label %61

61:                                               ; preds = %54, %58
  %62 = phi i64 [ %56, %54 ], [ %60, %58 ]
  %63 = bitcast %"class.std::__1::vector"* %42 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = ashr exact i64 %65, 3
  %67 = add nsw i64 %66, -1
  store i64 %67, i64* %2, align 8
  %68 = load %"class.IPC::MessageAttachment"*, %"class.IPC::MessageAttachment"** %5, align 8
  br label %69

69:                                               ; preds = %35, %33, %61
  %70 = phi %"class.IPC::MessageAttachment"* [ %68, %61 ], [ %1, %33 ], [ %1, %35 ]
  %71 = phi i1 [ true, %61 ], [ false, %33 ], [ false, %35 ]
  %72 = icmp eq %"class.IPC::MessageAttachment"* %70, null
  br i1 %72, label %85, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.IPC::MessageAttachment", %"class.IPC::MessageAttachment"* %70, i64 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw sub i32* %75, i32 1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %85

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %74, i64 -2
  %80 = bitcast %"class.base::RefCountedThreadSafe.1"* %79 to %"class.base::Pickle::Attachment"*
  %81 = bitcast %"class.base::RefCountedThreadSafe.1"* %79 to void (%"class.base::Pickle::Attachment"*)***
  %82 = load void (%"class.base::Pickle::Attachment"*)**, void (%"class.base::Pickle::Attachment"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.base::Pickle::Attachment"*)*, void (%"class.base::Pickle::Attachment"*)** %82, i64 1
  %84 = load void (%"class.base::Pickle::Attachment"*)*, void (%"class.base::Pickle::Attachment"*)** %83, align 8
  call void %84(%"class.base::Pickle::Attachment"* nonnull %80) #11
  br label %85

85:                                               ; preds = %69, %73, %78
  ret i1 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3IPC20MessageAttachmentSet13AddAttachmentE13scoped_refptrINS_17MessageAttachmentEE(%"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachment"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  store i64 -6148914691236517206, i64* %3, align 8
  %5 = icmp eq %"class.IPC::MessageAttachment"* %1, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = call zeroext i1 @_ZN3IPC20MessageAttachmentSet13AddAttachmentE13scoped_refptrINS_17MessageAttachmentEEPm(%"class.IPC::MessageAttachmentSet"* %0, %"class.IPC::MessageAttachment"* null, i64* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  br label %23

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.IPC::MessageAttachment", %"class.IPC::MessageAttachment"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  %11 = call zeroext i1 @_ZN3IPC20MessageAttachmentSet13AddAttachmentE13scoped_refptrINS_17MessageAttachmentEEPm(%"class.IPC::MessageAttachmentSet"* %0, %"class.IPC::MessageAttachment"* nonnull %1, i64* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  %12 = getelementptr inbounds %"class.IPC::MessageAttachment", %"class.IPC::MessageAttachment"* %1, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %23

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %12, i64 -2
  %18 = bitcast %"class.base::RefCountedThreadSafe.1"* %17 to %"class.base::Pickle::Attachment"*
  %19 = bitcast %"class.base::RefCountedThreadSafe.1"* %17 to void (%"class.base::Pickle::Attachment"*)***
  %20 = load void (%"class.base::Pickle::Attachment"*)**, void (%"class.base::Pickle::Attachment"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.base::Pickle::Attachment"*)*, void (%"class.base::Pickle::Attachment"*)** %20, i64 1
  %22 = load void (%"class.base::Pickle::Attachment"*)*, void (%"class.base::Pickle::Attachment"*)** %21, align 8
  tail call void %22(%"class.base::Pickle::Attachment"* nonnull %18) #11
  br label %23

23:                                               ; preds = %6, %8, %16
  %24 = phi i1 [ %7, %6 ], [ %11, %8 ], [ %11, %16 ]
  ret i1 %24
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.IPC::MessageAttachment"* @_ZN3IPC20MessageAttachmentSet15GetAttachmentAtEj(%"class.IPC::MessageAttachmentSet"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast %class.scoped_refptr** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  %12 = icmp ugt i32 %11, %1
  %13 = inttoptr i64 %8 to %class.scoped_refptr*
  br i1 %12, label %14, label %28

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %14
  %19 = add nuw i32 %1, 1
  store i32 %19, i32* %15, align 8
  %20 = zext i32 %1 to i64
  %21 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %13, i64 %20, i32 0
  %22 = load %"class.IPC::MessageAttachment"*, %"class.IPC::MessageAttachment"** %21, align 8
  %23 = ptrtoint %"class.IPC::MessageAttachment"* %22 to i64
  %24 = icmp eq %"class.IPC::MessageAttachment"* %22, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.IPC::MessageAttachment", %"class.IPC::MessageAttachment"* %22, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %25, %18, %14, %2
  %29 = phi i64 [ 0, %2 ], [ 0, %14 ], [ %23, %18 ], [ %23, %25 ]
  %30 = inttoptr i64 %29 to %"class.IPC::MessageAttachment"*
  ret %"class.IPC::MessageAttachment"* %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC20MessageAttachmentSet20CommitAllDescriptorsEv(%"class.IPC::MessageAttachmentSet"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %class.scoped_refptr*, %class.scoped_refptr** %2, align 8
  %4 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %6 = icmp eq %class.scoped_refptr* %5, %3
  br i1 %6, label %27, label %7

7:                                                ; preds = %1, %25
  %8 = phi %class.scoped_refptr* [ %9, %25 ], [ %5, %1 ]
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %8, i64 -1
  %10 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %9, i64 0, i32 0
  %11 = load %"class.IPC::MessageAttachment"*, %"class.IPC::MessageAttachment"** %10, align 8
  %12 = icmp eq %"class.IPC::MessageAttachment"* %11, null
  br i1 %12, label %25, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.IPC::MessageAttachment", %"class.IPC::MessageAttachment"* %11, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %25

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %14, i64 -2
  %20 = bitcast %"class.base::RefCountedThreadSafe.1"* %19 to %"class.base::Pickle::Attachment"*
  %21 = bitcast %"class.base::RefCountedThreadSafe.1"* %19 to void (%"class.base::Pickle::Attachment"*)***
  %22 = load void (%"class.base::Pickle::Attachment"*)**, void (%"class.base::Pickle::Attachment"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.base::Pickle::Attachment"*)*, void (%"class.base::Pickle::Attachment"*)** %22, i64 1
  %24 = load void (%"class.base::Pickle::Attachment"*)*, void (%"class.base::Pickle::Attachment"*)** %23, align 8
  tail call void %24(%"class.base::Pickle::Attachment"* nonnull %20) #11
  br label %25

25:                                               ; preds = %18, %13, %7
  %26 = icmp eq %class.scoped_refptr* %9, %3
  br i1 %26, label %27, label %7

27:                                               ; preds = %25, %1
  store %class.scoped_refptr* %3, %class.scoped_refptr** %4, align 8
  %28 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %0, i64 0, i32 3
  store i32 0, i32* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13scoped_refptrIN3IPC17MessageAttachmentEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector"*, %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.scoped_refptr** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.scoped_refptr** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %class.scoped_refptr*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.scoped_refptr* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 %9
  %38 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 %35
  %39 = ptrtoint %class.scoped_refptr* %38 to i64
  %40 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %41 = load %"class.IPC::MessageAttachment"*, %"class.IPC::MessageAttachment"** %40, align 8
  %42 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %37, i64 0, i32 0
  store %"class.IPC::MessageAttachment"* %41, %"class.IPC::MessageAttachment"** %42, align 8
  %43 = icmp eq %"class.IPC::MessageAttachment"* %41, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.IPC::MessageAttachment", %"class.IPC::MessageAttachment"* %41, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic
  br label %47

47:                                               ; preds = %34, %44
  %48 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %37, i64 1
  %49 = ptrtoint %class.scoped_refptr* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %51 = load %class.scoped_refptr*, %class.scoped_refptr** %50, align 8
  %52 = ptrtoint %class.scoped_refptr* %51 to i64
  %53 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  %54 = icmp eq %class.scoped_refptr* %53, %51
  br i1 %54, label %136, label %55

55:                                               ; preds = %47
  %56 = getelementptr %class.scoped_refptr, %class.scoped_refptr* %53, i64 -1, i32 0
  %57 = ptrtoint %"class.IPC::MessageAttachment"** %56 to i64
  %58 = sub i64 %57, %52
  %59 = lshr i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 7
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %75, label %63

63:                                               ; preds = %55, %63
  %64 = phi %class.scoped_refptr* [ %67, %63 ], [ %37, %55 ]
  %65 = phi %class.scoped_refptr* [ %68, %63 ], [ %53, %55 ]
  %66 = phi i64 [ %73, %63 ], [ %61, %55 ]
  %67 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 -1
  %68 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %65, i64 -1
  %69 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %68, i64 0, i32 0
  %70 = bitcast %class.scoped_refptr* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %class.scoped_refptr* %67 to i64*
  store i64 %71, i64* %72, align 8
  store %"class.IPC::MessageAttachment"* null, %"class.IPC::MessageAttachment"** %69, align 8
  %73 = add i64 %66, -1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %63, !llvm.loop !3

75:                                               ; preds = %63, %55
  %76 = phi %class.scoped_refptr* [ undef, %55 ], [ %67, %63 ]
  %77 = phi %class.scoped_refptr* [ %37, %55 ], [ %67, %63 ]
  %78 = phi %class.scoped_refptr* [ %53, %55 ], [ %68, %63 ]
  %79 = icmp ult i64 %58, 56
  br i1 %79, label %132, label %80

80:                                               ; preds = %75, %80
  %81 = phi %class.scoped_refptr* [ %125, %80 ], [ %77, %75 ]
  %82 = phi %class.scoped_refptr* [ %126, %80 ], [ %78, %75 ]
  %83 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -1
  %84 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -1
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %84, i64 0, i32 0
  %86 = bitcast %class.scoped_refptr* %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %class.scoped_refptr* %83 to i64*
  store i64 %87, i64* %88, align 8
  store %"class.IPC::MessageAttachment"* null, %"class.IPC::MessageAttachment"** %85, align 8
  %89 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -2
  %90 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -2
  %91 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %90, i64 0, i32 0
  %92 = bitcast %class.scoped_refptr* %90 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %class.scoped_refptr* %89 to i64*
  store i64 %93, i64* %94, align 8
  store %"class.IPC::MessageAttachment"* null, %"class.IPC::MessageAttachment"** %91, align 8
  %95 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -3
  %96 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -3
  %97 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %96, i64 0, i32 0
  %98 = bitcast %class.scoped_refptr* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %class.scoped_refptr* %95 to i64*
  store i64 %99, i64* %100, align 8
  store %"class.IPC::MessageAttachment"* null, %"class.IPC::MessageAttachment"** %97, align 8
  %101 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -4
  %102 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -4
  %103 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %102, i64 0, i32 0
  %104 = bitcast %class.scoped_refptr* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %class.scoped_refptr* %101 to i64*
  store i64 %105, i64* %106, align 8
  store %"class.IPC::MessageAttachment"* null, %"class.IPC::MessageAttachment"** %103, align 8
  %107 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -5
  %108 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -5
  %109 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %108, i64 0, i32 0
  %110 = bitcast %class.scoped_refptr* %108 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %class.scoped_refptr* %107 to i64*
  store i64 %111, i64* %112, align 8
  store %"class.IPC::MessageAttachment"* null, %"class.IPC::MessageAttachment"** %109, align 8
  %113 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -6
  %114 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -6
  %115 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %114, i64 0, i32 0
  %116 = bitcast %class.scoped_refptr* %114 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %class.scoped_refptr* %113 to i64*
  store i64 %117, i64* %118, align 8
  store %"class.IPC::MessageAttachment"* null, %"class.IPC::MessageAttachment"** %115, align 8
  %119 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -7
  %120 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -7
  %121 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %120, i64 0, i32 0
  %122 = bitcast %class.scoped_refptr* %120 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %class.scoped_refptr* %119 to i64*
  store i64 %123, i64* %124, align 8
  store %"class.IPC::MessageAttachment"* null, %"class.IPC::MessageAttachment"** %121, align 8
  %125 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -8
  %126 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -8
  %127 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %126, i64 0, i32 0
  %128 = bitcast %class.scoped_refptr* %126 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %class.scoped_refptr* %125 to i64*
  store i64 %129, i64* %130, align 8
  store %"class.IPC::MessageAttachment"* null, %"class.IPC::MessageAttachment"** %127, align 8
  %131 = icmp eq %class.scoped_refptr* %126, %51
  br i1 %131, label %132, label %80

132:                                              ; preds = %80, %75
  %133 = phi %class.scoped_refptr* [ %76, %75 ], [ %125, %80 ]
  %134 = load i64, i64* %6, align 8
  %135 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  br label %136

136:                                              ; preds = %47, %132
  %137 = phi %class.scoped_refptr* [ %135, %132 ], [ %51, %47 ]
  %138 = phi %class.scoped_refptr* [ %133, %132 ], [ %37, %47 ]
  %139 = phi i64 [ %134, %132 ], [ %52, %47 ]
  %140 = ptrtoint %class.scoped_refptr* %138 to i64
  store i64 %140, i64* %6, align 8
  store i64 %49, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %141 = inttoptr i64 %139 to %class.scoped_refptr*
  %142 = icmp eq %class.scoped_refptr* %137, %141
  br i1 %142, label %163, label %143

143:                                              ; preds = %136, %161
  %144 = phi %class.scoped_refptr* [ %145, %161 ], [ %137, %136 ]
  %145 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %144, i64 -1
  %146 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %145, i64 0, i32 0
  %147 = load %"class.IPC::MessageAttachment"*, %"class.IPC::MessageAttachment"** %146, align 8
  %148 = icmp eq %"class.IPC::MessageAttachment"* %147, null
  br i1 %148, label %161, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"class.IPC::MessageAttachment", %"class.IPC::MessageAttachment"* %147, i64 0, i32 0, i32 1
  %151 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = atomicrmw sub i32* %151, i32 1 acq_rel
  %153 = icmp eq i32 %152, 1
  br i1 %153, label %154, label %161

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %150, i64 -2
  %156 = bitcast %"class.base::RefCountedThreadSafe.1"* %155 to %"class.base::Pickle::Attachment"*
  %157 = bitcast %"class.base::RefCountedThreadSafe.1"* %155 to void (%"class.base::Pickle::Attachment"*)***
  %158 = load void (%"class.base::Pickle::Attachment"*)**, void (%"class.base::Pickle::Attachment"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.base::Pickle::Attachment"*)*, void (%"class.base::Pickle::Attachment"*)** %158, i64 1
  %160 = load void (%"class.base::Pickle::Attachment"*)*, void (%"class.base::Pickle::Attachment"*)** %159, align 8
  tail call void %160(%"class.base::Pickle::Attachment"* nonnull %156) #11
  br label %161

161:                                              ; preds = %154, %149, %143
  %162 = icmp eq %class.scoped_refptr* %145, %141
  br i1 %162, label %163, label %143

163:                                              ; preds = %161, %136
  %164 = icmp eq i64 %139, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %163
  %166 = inttoptr i64 %139 to i8*
  tail call void @_ZdlPv(i8* %166) #12
  br label %167

167:                                              ; preds = %163, %165
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
