; ModuleID = '../../base/process/process_posix.cc'
source_filename = "../../base/process/process_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.base::Process" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.base::debug::ScopedProcessWaitActivity" }
%"class.base::debug::ScopedProcessWaitActivity" = type { %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" }
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.3 }
%struct.anon.3 = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic", i32, i64, i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }

@.str = private unnamed_addr constant [13 x i8] c"process_ > 0\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"../../base/process/process_posix.cc\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.2 = private unnamed_addr constant [32 x i8] c"Process::WaitForExitWithTimeout\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN4base7ProcessC1Ei = hidden unnamed_addr alias void (%"class.base::Process"*, i32), void (%"class.base::Process"*, i32)* @_ZN4base7ProcessC2Ei
@_ZN4base7ProcessD1Ev = hidden unnamed_addr alias void (%"class.base::Process"*), void (%"class.base::Process"*)* @_ZN4base7ProcessD2Ev
@_ZN4base7ProcessC1EOS0_ = hidden unnamed_addr alias void (%"class.base::Process"*, %"class.base::Process"*), void (%"class.base::Process"*, %"class.base::Process"*)* @_ZN4base7ProcessC2EOS0_

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base7ProcessC2Ei(%"class.base::Process"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base7ProcessD2Ev(%"class.base::Process"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base7ProcessC2EOS0_(%"class.base::Process"* nocapture, %"class.base::Process"* nocapture dereferenceable(4)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %3, align 4
  store i32 0, i32* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base7Process5CloseEv(%"class.base::Process"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(4) %"class.base::Process"* @_ZN4base7ProcessaSEOS0_(%"class.base::Process"* returned, %"class.base::Process"* nocapture dereferenceable(4)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 4
  store i32 0, i32* %3, align 4
  ret %"class.base::Process"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7Process7CurrentEv(%"class.base::Process"* noalias nocapture sret) local_unnamed_addr #3 align 2 {
  %2 = tail call i32 @_ZN4base23GetCurrentProcessHandleEv() #12
  %3 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  store i32 %2, i32* %3, align 4
  ret void
}

declare i32 @_ZN4base23GetCurrentProcessHandleEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7Process4OpenEi(%"class.base::Process"* noalias nocapture sret, i32) local_unnamed_addr #3 align 2 {
  %3 = tail call i32 @_ZN4base16GetCurrentProcIdEv() #12
  %4 = icmp eq i32 %3, %1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = tail call i32 @_ZN4base23GetCurrentProcessHandleEv() #12, !noalias !2
  br label %7

7:                                                ; preds = %2, %5
  %8 = phi i32 [ %6, %5 ], [ %1, %2 ]
  %9 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  store i32 %8, i32* %9, align 4
  ret void
}

declare i32 @_ZN4base16GetCurrentProcIdEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7Process23OpenWithExtraPrivilegesEi(%"class.base::Process"* noalias nocapture sret, i32) local_unnamed_addr #3 align 2 {
  %3 = tail call i32 @_ZN4base16GetCurrentProcIdEv() #12, !noalias !5
  %4 = icmp eq i32 %3, %1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = tail call i32 @_ZN4base23GetCurrentProcessHandleEv() #12, !noalias !8
  br label %7

7:                                                ; preds = %2, %5
  %8 = phi i32 [ %6, %5 ], [ %1, %2 ]
  %9 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  store i32 %8, i32* %9, align 4, !alias.scope !5
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base7Process34TerminateCurrentProcessImmediatelyEi(i32) local_unnamed_addr #5 align 2 {
  tail call void @_exit(i32 %0) #13
  unreachable
}

; Function Attrs: noreturn
declare void @_exit(i32) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base7Process7IsValidEv(%"class.base::Process"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base7Process6HandleEv(%"class.base::Process"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base7Process9DuplicateEv(%"class.base::Process"* noalias nocapture sret, %"class.base::Process"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = tail call i32 @_ZN4base23GetCurrentProcessHandleEv() #12
  %6 = icmp eq i32 %4, %5
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN4base23GetCurrentProcessHandleEv() #12, !noalias !11
  br label %11

9:                                                ; preds = %2
  %10 = load i32, i32* %3, align 4
  br label %11

11:                                               ; preds = %9, %7
  %12 = phi i32 [ %10, %9 ], [ %8, %7 ]
  %13 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  store i32 %12, i32* %13, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base7Process10is_currentEv(%"class.base::Process"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = tail call i32 @_ZN4base23GetCurrentProcessHandleEv() #12
  %5 = icmp eq i32 %3, %4
  ret i1 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN4base7Process7ReleaseEv(%"class.base::Process"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  store i32 0, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4base7Process3PidEv(%"class.base::Process"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = tail call i32 @_ZN4base9GetProcIdEi(i32 %3) #12
  ret i32 %4
}

declare i32 @_ZN4base9GetProcIdEi(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base7Process9TerminateEib(%"class.base::Process"*, i32, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp sgt i32 %10, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %10) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 317, %"class.logging::CheckOpResult"* nonnull %5) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %24 = load i32, i32* %9, align 4
  %25 = call i32 @kill(i32 %24, i32 15) #12
  %26 = icmp eq i32 %25, 0
  %27 = and i1 %26, %2
  br i1 %27, label %28, label %36

28:                                               ; preds = %23
  %29 = call zeroext i1 @_ZNK4base7Process22WaitForExitWithTimeoutENS_9TimeDeltaEPi(%"class.base::Process"* %0, i64 60000000, i32* null)
  br i1 %29, label %36, label %30

30:                                               ; preds = %28
  %31 = load i32, i32* %9, align 4
  %32 = call i32 @kill(i32 %31, i32 9) #12
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = call zeroext i1 @_ZNK4base7Process22WaitForExitWithTimeoutENS_9TimeDeltaEPi(%"class.base::Process"* %0, i64 9223372036854775807, i32* null) #12
  br label %36

36:                                               ; preds = %23, %30, %28, %34
  %37 = phi i1 [ %35, %34 ], [ true, %28 ], [ false, %30 ], [ %26, %23 ]
  ret i1 %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nounwind
declare i32 @kill(i32, i32) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base7Process22WaitForExitWithTimeoutENS_9TimeDeltaEPi(%"class.base::Process"*, i64, i32*) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.absl::optional", align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #12
  %9 = bitcast %"class.absl::optional"* %7 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  store i8 0, i8* %8, align 8
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %union.anon.1* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #12
  %12 = icmp eq i64 %1, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = tail call i8* @_ZN4base17GetProgramCounterEv() #12
  call void @_ZN4base5debug25ScopedProcessWaitActivityC2EPKvPKNS_7ProcessE(%"class.base::debug::ScopedProcessWaitActivity"* %14, i8* %15, %"class.base::Process"* %0) #12
  store i8 1, i8* %8, align 8
  br label %16

16:                                               ; preds = %13, %3
  %17 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = call i32 @_ZN4base23GetCurrentProcessHandleEv() #12
  %20 = icmp eq i32 %19, %18
  br i1 %20, label %131, label %21

21:                                               ; preds = %16
  %22 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), align 16
  %23 = and i8 %22, 25
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %31, label %25, !prof !14

25:                                               ; preds = %21
  %26 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %27 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %29 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %29, i64* %28, align 8
  %30 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %26, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %31

31:                                               ; preds = %25, %21
  %32 = phi i64 [ -6148914691236517206, %21 ], [ %30, %25 ]
  %33 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %21 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), %25 ]
  %34 = phi i8* [ null, %21 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), %25 ]
  %35 = call i32 @_ZN4base18GetParentProcessIdEi(i32 %18) #12
  %36 = icmp slt i32 %35, 0
  %37 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #12
  store i32 -1431655766, i32* %6, align 4
  %38 = icmp eq i64 %1, 9223372036854775807
  br i1 %38, label %39, label %46

39:                                               ; preds = %31, %42
  %40 = call i32 @waitpid(i32 %18, i32* nonnull %6, i32 0) #12
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %42, label %105

42:                                               ; preds = %39
  %43 = tail call i32* @__errno_location() #14
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 4
  br i1 %45, label %39, label %119

46:                                               ; preds = %31, %49
  %47 = call i32 @waitpid(i32 %18, i32* nonnull %6, i32 1) #12
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %49, label %53

49:                                               ; preds = %46
  %50 = tail call i32* @__errno_location() #14
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 4
  br i1 %52, label %46, label %53

53:                                               ; preds = %49, %46
  %54 = call i64 @_ZN4base9TimeTicks3NowEv() #12
  %55 = add i64 %1, -9223372036854775807
  %56 = icmp ult i64 %55, 2
  br i1 %56, label %64, label %57

57:                                               ; preds = %53
  %58 = icmp slt i64 %1, 0
  %59 = select i1 %58, i64 -9223372036854775808, i64 9223372036854775807
  %60 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %54, i64 %1) #12
  %61 = extractvalue { i64, i1 } %60, 1
  %62 = extractvalue { i64, i1 } %60, 0
  %63 = select i1 %61, i64 %59, i64 %62, !prof !15
  br label %72

64:                                               ; preds = %53
  %65 = add i64 %54, -9223372036854775807
  %66 = icmp ugt i64 %65, 1
  %67 = icmp eq i64 %54, %1
  %68 = or i1 %67, %66
  br i1 %68, label %72, label %69

69:                                               ; preds = %64
  %70 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #12
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #12
  br label %72

72:                                               ; preds = %69, %64, %57
  %73 = phi i64 [ %63, %57 ], [ %1, %64 ], [ %1, %69 ]
  %74 = icmp eq i32 %47, 0
  br i1 %74, label %75, label %105

75:                                               ; preds = %72, %101
  %76 = phi i64 [ %103, %101 ], [ 0, %72 ]
  %77 = phi i64 [ %102, %101 ], [ 1024, %72 ]
  %78 = call i64 @_ZN4base9TimeTicks3NowEv() #12
  %79 = icmp slt i64 %73, %78
  br i1 %79, label %119, label %80

80:                                               ; preds = %75
  %81 = sub nsw i64 %73, %78
  %82 = icmp sgt i64 %81, %77
  %83 = select i1 %82, i64 %77, i64 %81
  %84 = trunc i64 %83 to i32
  %85 = call i32 @usleep(i32 %84) #12
  br label %86

86:                                               ; preds = %89, %80
  %87 = call i32 @waitpid(i32 %18, i32* nonnull %6, i32 1) #12
  %88 = icmp eq i32 %87, -1
  br i1 %88, label %89, label %93

89:                                               ; preds = %86
  %90 = tail call i32* @__errno_location() #14
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 4
  br i1 %92, label %86, label %93

93:                                               ; preds = %89, %86
  %94 = icmp slt i64 %77, 262144
  br i1 %94, label %95, label %101

95:                                               ; preds = %93
  %96 = add nsw i64 %76, 1
  %97 = and i64 %76, 3
  %98 = icmp eq i64 %97, 0
  %99 = zext i1 %98 to i64
  %100 = shl nsw i64 %77, %99
  br label %101

101:                                              ; preds = %95, %93
  %102 = phi i64 [ %77, %93 ], [ %100, %95 ]
  %103 = phi i64 [ %76, %93 ], [ %96, %95 ]
  %104 = icmp eq i32 %87, 0
  br i1 %104, label %75, label %105

105:                                              ; preds = %101, %39, %72
  %106 = phi i32 [ %47, %72 ], [ %40, %39 ], [ %87, %101 ]
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %119

108:                                              ; preds = %105
  %109 = load i32, i32* %6, align 4
  %110 = and i32 %109, 127
  %111 = shl nuw nsw i32 %110, 24
  %112 = add nuw i32 %111, 16777216
  %113 = icmp sgt i32 %112, 33554431
  br i1 %113, label %119, label %114

114:                                              ; preds = %108
  %115 = icmp eq i32 %110, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %114
  %117 = lshr i32 %109, 8
  %118 = and i32 %117, 255
  br label %119

119:                                              ; preds = %75, %42, %108, %116, %114, %105
  %120 = phi i32 [ %118, %116 ], [ 0, %114 ], [ 0, %105 ], [ -1, %108 ], [ 0, %42 ], [ 0, %75 ]
  %121 = phi i1 [ true, %116 ], [ %36, %114 ], [ %36, %105 ], [ true, %108 ], [ %36, %42 ], [ %36, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #12
  %122 = icmp eq i8* %34, null
  br i1 %122, label %127, label %123

123:                                              ; preds = %119
  %124 = load i8, i8* %34, align 1
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %127, label %126

126:                                              ; preds = %123
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %34, i8* %33, i64 %32) #12
  br i1 %121, label %128, label %131

127:                                              ; preds = %119, %123
  br i1 %121, label %128, label %131

128:                                              ; preds = %126, %127
  %129 = icmp eq i32* %2, null
  br i1 %129, label %131, label %130

130:                                              ; preds = %128
  store i32 %120, i32* %2, align 4
  br label %131

131:                                              ; preds = %16, %126, %128, %130, %127
  %132 = phi i1 [ true, %128 ], [ true, %130 ], [ false, %127 ], [ false, %126 ], [ false, %16 ]
  %133 = load i8, i8* %8, align 8, !range !16
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4base5debug21GlobalActivityTracker20ScopedThreadActivityD2Ev(%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity"* %136) #12
  store i8 0, i8* %8, align 8
  br label %137

137:                                              ; preds = %131, %135
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #12
  ret i1 %132
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base7Process11WaitForExitEPi(%"class.base::Process"*, i32*) local_unnamed_addr #3 align 2 {
  %3 = tail call zeroext i1 @_ZNK4base7Process22WaitForExitWithTimeoutENS_9TimeDeltaEPi(%"class.base::Process"* %0, i64 9223372036854775807, i32* %1)
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK4base7Process6ExitedEi(%"class.base::Process"* nocapture, i32) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4base7Process11GetPriorityEv(%"class.base::Process"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = tail call i32 @getpriority(i32 0, i32 %3) #12
  ret i32 %4
}

; Function Attrs: nounwind
declare i32 @getpriority(i32, i32) local_unnamed_addr #9

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

declare i32 @_ZN4base18GetParentProcessIdEi(i32) local_unnamed_addr #4

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #4

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #4

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #4

declare i32 @waitpid(i32, i32*, i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #10

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #4

declare i32 @usleep(i32) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #11

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base5debug21GlobalActivityTracker20ScopedThreadActivityD2Ev(%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity"*) unnamed_addr #9

declare i8* @_ZN4base17GetProgramCounterEv() local_unnamed_addr #4

declare void @_ZN4base5debug25ScopedProcessWaitActivityC2EPKvPKNS_7ProcessE(%"class.base::debug::ScopedProcessWaitActivity"*, i8*, %"class.base::Process"*) unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4base7Process7CurrentEv: argument 0"}
!4 = distinct !{!4, !"_ZN4base7Process7CurrentEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4base7Process4OpenEi: argument 0"}
!7 = distinct !{!7, !"_ZN4base7Process4OpenEi"}
!8 = !{!9, !6}
!9 = distinct !{!9, !10, !"_ZN4base7Process7CurrentEv: argument 0"}
!10 = distinct !{!10, !"_ZN4base7Process7CurrentEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN4base7Process7CurrentEv: argument 0"}
!13 = distinct !{!13, !"_ZN4base7Process7CurrentEv"}
!14 = !{!"branch_weights", i32 2000, i32 1}
!15 = !{!"branch_weights", i32 1, i32 2000}
!16 = !{i8 0, i8 2}
