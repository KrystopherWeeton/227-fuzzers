; ModuleID = '../../third_party/skia/src/sksl/ir/SkSLSymbolTable.cpp'
source_filename = "../../third_party/skia/src/sksl/ir/SkSLSymbolTable.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"**, %"class.std::__1::__compressed_pair.22" }
%"class.SkSL::FunctionDeclaration" = type { %"class.SkSL::Symbol", %"class.SkSL::FunctionDefinition"*, %"struct.SkSL::Modifiers"*, %"class.std::__1::vector.15", %"class.SkSL::Type"*, i8, i8, i32 }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::FunctionDefinition" = type opaque
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.SkSL::Variable"**, %"class.SkSL::Variable"**, %"class.std::__1::__compressed_pair.17" }
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::VarDeclaration" = type opaque
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.SkSL::Variable"** }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.6", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.8" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkSL::Type::Field"* }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.SkSL::FunctionDeclaration"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr", %"class.std::__1::vector.27", i8, %"class.std::__1::vector.34", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"class.std::__1::unique_ptr.36"*, %"class.std::__1::unique_ptr.36"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::unique_ptr.36"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.47" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.SkSL::UnresolvedFunction" = type { %"class.SkSL::Symbol", %"class.std::__1::vector.13" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.SkSL::SymbolAlias" = type { %"class.SkSL::Symbol", %"class.SkSL::Symbol"* }

$_ZN10SkTHashMapIN4SkSL11SymbolTable9SymbolKeyEPKNS0_6SymbolENS2_4HashEEixERKS2_ = comdat any

$_ZN4SkSL4TypeD2Ev = comdat any

$_ZN4SkSL4TypeD0Ev = comdat any

$_ZNK4SkSL4Type11descriptionEv = comdat any

$_ZN4SkSL18UnresolvedFunctionD2Ev = comdat any

$_ZN4SkSL18UnresolvedFunctionD0Ev = comdat any

$_ZNK4SkSL18UnresolvedFunction11descriptionEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZN4SkSL6IRNodeD2Ev = comdat any

$_ZN4SkSL11SymbolAliasD0Ev = comdat any

$_ZNK4SkSL11SymbolAlias11descriptionEv = comdat any

$_ZN12SkTHashTableIN10SkTHashMapIN4SkSL11SymbolTable9SymbolKeyEPKNS1_6SymbolENS3_4HashEE4PairES3_S9_E6resizeEi = comdat any

$_ZNSt3__16vectorIPKN4SkSL19FunctionDeclarationENS_9allocatorIS4_EEE6assignIPKS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16vectorIPKN4SkSL19FunctionDeclarationENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZTVN4SkSL4TypeE = comdat any

$_ZTVN4SkSL18UnresolvedFunctionE = comdat any

$_ZTVN4SkSL11SymbolAliasE = comdat any

@.str = private unnamed_addr constant [9 x i8] c"symbol '\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"' was already defined\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%s[%d]\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"%s[]\00", align 1
@_ZN6SkOpts7hash_fnE = external local_unnamed_addr global i32 (i8*, i64, i32)*, align 8
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN4SkSL4TypeE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::Type"*)* @_ZN4SkSL4TypeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Type"*)* @_ZN4SkSL4TypeD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Type"*)* @_ZNK4SkSL4Type11descriptionEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL18UnresolvedFunctionE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::UnresolvedFunction"*)* @_ZN4SkSL18UnresolvedFunctionD2Ev to i8*), i8* bitcast (void (%"class.SkSL::UnresolvedFunction"*)* @_ZN4SkSL18UnresolvedFunctionD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::UnresolvedFunction"*)* @_ZNK4SkSL18UnresolvedFunction11descriptionEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL11SymbolAliasE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::SymbolAlias"*)* @_ZN4SkSL11SymbolAliasD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::SymbolAlias"*)* @_ZNK4SkSL11SymbolAlias11descriptionEv to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11SymbolTable12GetFunctionsERKNS_6SymbolE(%"class.std::__1::vector.13"* noalias sret, %"class.SkSL::Symbol"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %48 [
    i32 11, label %5
    i32 14, label %15
  ]

5:                                                ; preds = %2
  %6 = tail call i8* @_Znwm(i64 8) #9
  %7 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::vector.13"* %0 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.SkSL::FunctionDeclaration"*** %10 to i8**
  store i8* %9, i8** %11, align 8
  %12 = bitcast %"class.SkSL::FunctionDeclaration"*** %7 to i64*
  %13 = bitcast i8* %6 to %"class.SkSL::Symbol"**
  store %"class.SkSL::Symbol"* %1, %"class.SkSL::Symbol"** %13, align 8
  %14 = ptrtoint i8* %9 to i64
  store i64 %14, i64* %12, align 8
  br label %50

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %1, i64 1
  %17 = bitcast %"class.std::__1::vector.13"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10
  %18 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %1, i64 1, i32 0, i32 1
  %19 = bitcast i32* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.SkSL::Symbol"* %16 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = ashr exact i64 %23, 3
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %50, label %26

26:                                               ; preds = %15
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::vector.13"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #11
  unreachable

30:                                               ; preds = %26
  %31 = tail call i8* @_Znwm(i64 %23) #9
  %32 = bitcast i8* %31 to %"class.SkSL::FunctionDeclaration"**
  %33 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %34 = bitcast %"class.SkSL::FunctionDeclaration"*** %33 to i8**
  store i8* %31, i8** %34, align 8
  %35 = bitcast %"class.std::__1::vector.13"* %0 to i8**
  store i8* %31, i8** %35, align 8
  %36 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %32, i64 %24
  %37 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.SkSL::FunctionDeclaration"** %36, %"class.SkSL::FunctionDeclaration"*** %37, align 8
  %38 = bitcast %"class.SkSL::FunctionDeclaration"*** %33 to i64*
  %39 = ptrtoint i8* %31 to i64
  %40 = icmp sgt i64 %23, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %30
  %42 = lshr exact i64 %23, 3
  %43 = inttoptr i64 %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 %43, i64 %23, i1 false) #10
  %44 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %32, i64 %42
  %45 = ptrtoint %"class.SkSL::FunctionDeclaration"** %44 to i64
  br label %46

46:                                               ; preds = %41, %30
  %47 = phi i64 [ %45, %41 ], [ %39, %30 ]
  store i64 %47, i64* %38, align 8
  br label %50

48:                                               ; preds = %2
  %49 = bitcast %"class.std::__1::vector.13"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #10
  br label %50

50:                                               ; preds = %46, %15, %48, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.SkSL::SymbolTable::SymbolKey", align 8
  %5 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = select i1 %7, %"class.SkSL::SymbolTable"* %0, %"class.SkSL::SymbolTable"* null
  %9 = bitcast %"struct.SkSL::SymbolTable::SymbolKey"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"struct.SkSL::SymbolTable::SymbolKey", %"struct.SkSL::SymbolTable::SymbolKey"* %4, i64 0, i32 0, i32 0
  store i8* %1, i8** %10, align 8, !alias.scope !3
  %11 = getelementptr inbounds %"struct.SkSL::SymbolTable::SymbolKey", %"struct.SkSL::SymbolTable::SymbolKey"* %4, i64 0, i32 0, i32 1
  store i64 %2, i64* %11, align 8, !alias.scope !3
  %12 = getelementptr inbounds %"struct.SkSL::SymbolTable::SymbolKey", %"struct.SkSL::SymbolTable::SymbolKey"* %4, i64 0, i32 1
  %13 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8, !noalias !3
  %14 = tail call i32 %13(i8* %1, i64 %2, i32 0) #10, !noalias !3
  store i32 %14, i32* %12, align 8, !alias.scope !3
  %15 = call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTable6lookupEPS0_RKNS0_9SymbolKeyE(%"class.SkSL::SymbolTable"* %0, %"class.SkSL::SymbolTable"* %8, %"struct.SkSL::SymbolTable::SymbolKey"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  ret %"class.SkSL::Symbol"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTable6lookupEPS0_RKNS0_9SymbolKeyE(%"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"*, %"struct.SkSL::SymbolTable::SymbolKey"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.13", align 16
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = alloca %"class.std::__1::vector.13", align 8
  %7 = alloca %"class.std::__1::vector.13", align 8
  %8 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, %"class.SkSL::SymbolTable"* %0, %"class.SkSL::SymbolTable"* %1
  %12 = getelementptr inbounds %"struct.SkSL::SymbolTable::SymbolKey", %"struct.SkSL::SymbolTable::SymbolKey"* %2, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %14, i32 1, i32 %13
  %16 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 5, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %57

19:                                               ; preds = %3
  %20 = add nsw i32 %17, -1
  %21 = and i32 %15, %20
  %22 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.SkSL::SymbolTable::SymbolKey", %"struct.SkSL::SymbolTable::SymbolKey"* %2, i64 0, i32 0
  br label %24

24:                                               ; preds = %44, %19
  %25 = phi i32 [ %17, %19 ], [ %45, %44 ]
  %26 = phi i32 [ 0, %19 ], [ %50, %44 ]
  %27 = phi i32 [ %21, %19 ], [ %49, %44 ]
  %28 = sext i32 %27 to i64
  %29 = load %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %22, align 8
  %30 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %29, i64 %28, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %57, label %33

33:                                               ; preds = %24
  %34 = icmp eq i32 %15, %31
  br i1 %34, label %35, label %44

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %29, i64 %28, i32 0
  %37 = getelementptr inbounds %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %29, i64 %28, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = tail call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* %23, i8* %38, i64 %40) #10
  br i1 %41, label %52, label %42

42:                                               ; preds = %35
  %43 = load i32, i32* %16, align 4
  br label %44

44:                                               ; preds = %42, %33
  %45 = phi i32 [ %43, %42 ], [ %25, %33 ]
  %46 = add nsw i32 %27, -1
  %47 = icmp slt i32 %27, 1
  %48 = select i1 %47, i32 %45, i32 0
  %49 = add nsw i32 %46, %48
  %50 = add nuw nsw i32 %26, 1
  %51 = icmp slt i32 %50, %45
  br i1 %51, label %24, label %57

52:                                               ; preds = %35
  %53 = icmp eq %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair"* %36, null
  %54 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %29, i64 %28, i32 0, i32 0, i32 1
  %55 = icmp eq %"class.SkSL::Symbol"** %54, null
  %56 = or i1 %53, %55
  br i1 %56, label %57, label %63

57:                                               ; preds = %24, %44, %3, %52
  %58 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 0, i32 0
  %59 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %58, align 8
  %60 = icmp eq %"class.SkSL::SymbolTable"* %59, null
  br i1 %60, label %407, label %61

61:                                               ; preds = %57
  %62 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTable6lookupEPS0_RKNS0_9SymbolKeyE(%"class.SkSL::SymbolTable"* nonnull %59, %"class.SkSL::SymbolTable"* %11, %"struct.SkSL::SymbolTable::SymbolKey"* dereferenceable(24) %2)
  br label %407

63:                                               ; preds = %52
  %64 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %54, align 8
  %65 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %65, align 8
  %67 = icmp eq %"class.SkSL::SymbolTable"* %66, null
  br i1 %67, label %395, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.std::__1::vector.13"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #10
  %70 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %6, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %6, i64 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %64, i64 0, i32 0, i32 2
  %74 = bitcast %"class.std::__1::vector.13"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 24, i1 false)
  %75 = load i32, i32* %73, align 4, !noalias !6
  switch i32 %75, label %114 [
    i32 11, label %76
    i32 14, label %88
  ]

76:                                               ; preds = %68
  %77 = tail call i8* @_Znwm(i64 8) #9
  %78 = bitcast %"class.std::__1::vector.13"* %6 to i8**
  store i8* %77, i8** %78, align 8, !alias.scope !6
  %79 = getelementptr inbounds i8, i8* %77, i64 8
  %80 = bitcast %"class.SkSL::FunctionDeclaration"*** %72 to i8**
  store i8* %79, i8** %80, align 8, !alias.scope !6
  %81 = bitcast %"class.SkSL::FunctionDeclaration"*** %71 to i64*
  %82 = bitcast i8* %77 to %"class.SkSL::Symbol"**
  store %"class.SkSL::Symbol"* %64, %"class.SkSL::Symbol"** %82, align 8, !noalias !6
  %83 = ptrtoint i8* %79 to i64
  store i64 %83, i64* %81, align 8, !alias.scope !6
  %84 = ptrtoint i8* %77 to i64
  %85 = bitcast i8* %77 to %"class.SkSL::FunctionDeclaration"**
  %86 = bitcast i8* %79 to %"class.SkSL::FunctionDeclaration"**
  %87 = bitcast %"class.SkSL::FunctionDeclaration"*** %71 to i64*
  br label %125

88:                                               ; preds = %68
  %89 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %64, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 24, i1 false) #10, !alias.scope !6
  %90 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %64, i64 1, i32 0, i32 1
  %91 = bitcast i32* %90 to i64*
  %92 = load i64, i64* %91, align 8, !noalias !6
  %93 = bitcast %"class.SkSL::Symbol"* %89 to i64*
  %94 = load i64, i64* %93, align 8, !noalias !6
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 3
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %115, label %98

98:                                               ; preds = %88
  %99 = icmp ugt i64 %96, 2305843009213693951
  br i1 %99, label %100, label %102

100:                                              ; preds = %98
  %101 = bitcast %"class.std::__1::vector.13"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %101) #11
  unreachable

102:                                              ; preds = %98
  %103 = tail call i8* @_Znwm(i64 %95) #9
  %104 = bitcast i8* %103 to %"class.SkSL::FunctionDeclaration"**
  %105 = bitcast %"class.SkSL::FunctionDeclaration"*** %71 to i8**
  store i8* %103, i8** %105, align 8, !alias.scope !6
  %106 = bitcast %"class.std::__1::vector.13"* %6 to i8**
  store i8* %103, i8** %106, align 8, !alias.scope !6
  %107 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %104, i64 %96
  store %"class.SkSL::FunctionDeclaration"** %107, %"class.SkSL::FunctionDeclaration"*** %72, align 8, !alias.scope !6
  %108 = bitcast %"class.SkSL::FunctionDeclaration"*** %71 to i64*
  %109 = ptrtoint i8* %103 to i64
  %110 = icmp sgt i64 %95, 0
  br i1 %110, label %116, label %111

111:                                              ; preds = %102
  store i64 %109, i64* %108, align 8, !alias.scope !6
  %112 = bitcast %"class.SkSL::FunctionDeclaration"*** %71 to i64*
  %113 = bitcast i8* %103 to %"class.SkSL::FunctionDeclaration"**
  br label %384

114:                                              ; preds = %68
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 24, i1 false) #10, !alias.scope !6
  br label %115

115:                                              ; preds = %88, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #10
  br label %395

116:                                              ; preds = %102
  %117 = lshr exact i64 %95, 3
  %118 = inttoptr i64 %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %103, i8* align 8 %118, i64 %95, i1 false) #10
  %119 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %104, i64 %117
  %120 = ptrtoint %"class.SkSL::FunctionDeclaration"** %119 to i64
  store i64 %120, i64* %108, align 8, !alias.scope !6
  %121 = bitcast %"class.SkSL::FunctionDeclaration"*** %71 to i64*
  %122 = bitcast i8* %103 to %"class.SkSL::FunctionDeclaration"**
  %123 = icmp eq %"class.SkSL::FunctionDeclaration"** %119, %122
  %124 = bitcast i8* %103 to %"class.SkSL::FunctionDeclaration"**
  br i1 %123, label %384, label %125

125:                                              ; preds = %76, %116
  %126 = phi i64* [ %87, %76 ], [ %121, %116 ]
  %127 = phi i64 [ %83, %76 ], [ %120, %116 ]
  %128 = phi %"class.SkSL::FunctionDeclaration"** [ %85, %76 ], [ %104, %116 ]
  %129 = phi %"class.SkSL::FunctionDeclaration"** [ %86, %76 ], [ %119, %116 ]
  %130 = phi i64 [ %84, %76 ], [ %109, %116 ]
  %131 = bitcast %"class.std::__1::vector.13"* %6 to i64*
  %132 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTable6lookupEPS0_RKNS0_9SymbolKeyE(%"class.SkSL::SymbolTable"* nonnull %66, %"class.SkSL::SymbolTable"* %11, %"struct.SkSL::SymbolTable::SymbolKey"* dereferenceable(24) %2)
  %133 = icmp eq %"class.SkSL::Symbol"* %132, null
  br i1 %133, label %377, label %134

134:                                              ; preds = %125
  %135 = bitcast %"class.std::__1::vector.13"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #10
  %136 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %7, i64 0, i32 0, i32 0
  %137 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %7, i64 0, i32 0, i32 1
  %138 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %139 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %132, i64 0, i32 0, i32 2
  %140 = bitcast %"class.std::__1::vector.13"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 -86, i64 24, i1 false)
  %141 = load i32, i32* %139, align 4, !noalias !9
  switch i32 %141, label %180 [
    i32 11, label %142
    i32 14, label %152
  ]

142:                                              ; preds = %134
  %143 = tail call i8* @_Znwm(i64 8) #9
  %144 = bitcast %"class.std::__1::vector.13"* %7 to i8**
  store i8* %143, i8** %144, align 8, !alias.scope !9
  %145 = getelementptr inbounds i8, i8* %143, i64 8
  %146 = bitcast %"class.SkSL::FunctionDeclaration"*** %138 to i8**
  store i8* %145, i8** %146, align 8, !alias.scope !9
  %147 = bitcast %"class.SkSL::FunctionDeclaration"*** %137 to i64*
  %148 = bitcast i8* %143 to %"class.SkSL::Symbol"**
  store %"class.SkSL::Symbol"* %132, %"class.SkSL::Symbol"** %148, align 8, !noalias !9
  %149 = ptrtoint i8* %145 to i64
  store i64 %149, i64* %147, align 8, !alias.scope !9
  %150 = bitcast i8* %143 to %"class.SkSL::FunctionDeclaration"**
  %151 = bitcast i8* %145 to %"class.SkSL::FunctionDeclaration"**
  br label %185

152:                                              ; preds = %134
  %153 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %132, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 0, i64 24, i1 false) #10, !alias.scope !9
  %154 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %132, i64 1, i32 0, i32 1
  %155 = bitcast i32* %154 to i64*
  %156 = load i64, i64* %155, align 8, !noalias !9
  %157 = bitcast %"class.SkSL::Symbol"* %153 to i64*
  %158 = load i64, i64* %157, align 8, !noalias !9
  %159 = sub i64 %156, %158
  %160 = ashr exact i64 %159, 3
  %161 = icmp eq i64 %159, 0
  br i1 %161, label %366, label %162

162:                                              ; preds = %152
  %163 = icmp ugt i64 %160, 2305843009213693951
  br i1 %163, label %164, label %166

164:                                              ; preds = %162
  %165 = bitcast %"class.std::__1::vector.13"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %165) #11
  unreachable

166:                                              ; preds = %162
  %167 = tail call i8* @_Znwm(i64 %159) #9
  %168 = bitcast i8* %167 to %"class.SkSL::FunctionDeclaration"**
  %169 = bitcast %"class.SkSL::FunctionDeclaration"*** %137 to i8**
  store i8* %167, i8** %169, align 8, !alias.scope !9
  %170 = bitcast %"class.std::__1::vector.13"* %7 to i8**
  store i8* %167, i8** %170, align 8, !alias.scope !9
  %171 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %168, i64 %160
  store %"class.SkSL::FunctionDeclaration"** %171, %"class.SkSL::FunctionDeclaration"*** %138, align 8, !alias.scope !9
  %172 = bitcast %"class.SkSL::FunctionDeclaration"*** %137 to i64*
  %173 = ptrtoint i8* %167 to i64
  %174 = icmp sgt i64 %159, 0
  br i1 %174, label %175, label %181

175:                                              ; preds = %166
  %176 = lshr exact i64 %159, 3
  %177 = inttoptr i64 %158 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %167, i8* align 8 %177, i64 %159, i1 false) #10
  %178 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %168, i64 %176
  %179 = ptrtoint %"class.SkSL::FunctionDeclaration"** %178 to i64
  br label %181

180:                                              ; preds = %134
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 0, i64 24, i1 false) #10, !alias.scope !9
  br label %366

181:                                              ; preds = %166, %175
  %182 = phi i64 [ %179, %175 ], [ %173, %166 ]
  store i64 %182, i64* %172, align 8, !alias.scope !9
  %183 = inttoptr i64 %182 to %"class.SkSL::FunctionDeclaration"**
  %184 = icmp eq %"class.SkSL::FunctionDeclaration"** %168, %183
  br i1 %184, label %366, label %185

185:                                              ; preds = %142, %181
  %186 = phi %"class.SkSL::FunctionDeclaration"** [ %150, %142 ], [ %168, %181 ]
  %187 = phi %"class.SkSL::FunctionDeclaration"** [ %151, %142 ], [ %183, %181 ]
  %188 = bitcast %"class.SkSL::FunctionDeclaration"*** %72 to i64*
  br label %192

189:                                              ; preds = %270
  %190 = and i8 %274, 1
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %366, label %280

192:                                              ; preds = %277, %185
  %193 = phi i64 [ %127, %185 ], [ %271, %277 ]
  %194 = phi %"class.SkSL::FunctionDeclaration"** [ %128, %185 ], [ %278, %277 ]
  %195 = phi i64 [ %130, %185 ], [ %279, %277 ]
  %196 = phi %"class.SkSL::FunctionDeclaration"** [ %129, %185 ], [ %272, %277 ]
  %197 = phi %"class.SkSL::FunctionDeclaration"** [ %129, %185 ], [ %273, %277 ]
  %198 = phi i8 [ 0, %185 ], [ %274, %277 ]
  %199 = phi %"class.SkSL::FunctionDeclaration"** [ %186, %185 ], [ %275, %277 ]
  %200 = bitcast %"class.SkSL::FunctionDeclaration"** %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = icmp eq %"class.SkSL::FunctionDeclaration"** %194, %197
  br i1 %202, label %217, label %203

203:                                              ; preds = %192
  %204 = inttoptr i64 %201 to %"class.SkSL::FunctionDeclaration"*
  br label %205

205:                                              ; preds = %205, %203
  %206 = phi i8 [ 0, %203 ], [ %210, %205 ]
  %207 = phi %"class.SkSL::FunctionDeclaration"** [ %194, %203 ], [ %211, %205 ]
  %208 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %207, align 8
  %209 = tail call zeroext i1 @_ZNK4SkSL19FunctionDeclaration7matchesERKS0_(%"class.SkSL::FunctionDeclaration"* %208, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %204) #10
  %210 = select i1 %209, i8 1, i8 %206
  %211 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %207, i64 1
  %212 = icmp eq %"class.SkSL::FunctionDeclaration"** %211, %197
  %213 = or i1 %209, %212
  br i1 %213, label %214, label %205

214:                                              ; preds = %205
  %215 = and i8 %210, 1
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %217, label %270

217:                                              ; preds = %192, %214
  %218 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %72, align 8
  %219 = icmp eq %"class.SkSL::FunctionDeclaration"** %196, %218
  br i1 %219, label %224, label %220

220:                                              ; preds = %217
  %221 = bitcast %"class.SkSL::FunctionDeclaration"** %196 to i64*
  store i64 %201, i64* %221, align 8
  %222 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %196, i64 1
  %223 = ptrtoint %"class.SkSL::FunctionDeclaration"** %222 to i64
  store i64 %223, i64* %126, align 8
  br label %270

224:                                              ; preds = %217
  %225 = ptrtoint %"class.SkSL::FunctionDeclaration"** %218 to i64
  %226 = sub i64 %225, %195
  %227 = ashr exact i64 %226, 3
  %228 = add nsw i64 %227, 1
  %229 = icmp ugt i64 %228, 2305843009213693951
  br i1 %229, label %230, label %232

230:                                              ; preds = %224
  %231 = bitcast %"class.std::__1::vector.13"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %231) #11
  unreachable

232:                                              ; preds = %224
  %233 = icmp ult i64 %227, 1152921504606846975
  br i1 %233, label %234, label %242

234:                                              ; preds = %232
  %235 = ashr exact i64 %226, 2
  %236 = icmp ult i64 %235, %228
  %237 = select i1 %236, i64 %228, i64 %235
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %247, label %239

239:                                              ; preds = %234
  %240 = icmp ugt i64 %237, 2305843009213693951
  br i1 %240, label %241, label %242

241:                                              ; preds = %239
  tail call void @abort() #11
  unreachable

242:                                              ; preds = %239, %232
  %243 = phi i64 [ %237, %239 ], [ 2305843009213693951, %232 ]
  %244 = shl i64 %243, 3
  %245 = tail call i8* @_Znwm(i64 %244) #9
  %246 = bitcast i8* %245 to %"class.SkSL::FunctionDeclaration"**
  br label %247

247:                                              ; preds = %242, %234
  %248 = phi i64 [ %243, %242 ], [ 0, %234 ]
  %249 = phi %"class.SkSL::FunctionDeclaration"** [ %246, %242 ], [ null, %234 ]
  %250 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %249, i64 %227
  %251 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %249, i64 %248
  %252 = ptrtoint %"class.SkSL::FunctionDeclaration"** %251 to i64
  %253 = bitcast %"class.SkSL::FunctionDeclaration"** %250 to i64*
  store i64 %201, i64* %253, align 8
  %254 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %250, i64 1
  %255 = ptrtoint %"class.SkSL::FunctionDeclaration"** %254 to i64
  %256 = ptrtoint %"class.SkSL::FunctionDeclaration"** %194 to i64
  %257 = sub i64 %193, %256
  %258 = ashr exact i64 %257, 3
  %259 = sub nsw i64 0, %258
  %260 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %250, i64 %259
  %261 = ptrtoint %"class.SkSL::FunctionDeclaration"** %260 to i64
  %262 = icmp sgt i64 %257, 0
  br i1 %262, label %263, label %266

263:                                              ; preds = %247
  %264 = bitcast %"class.SkSL::FunctionDeclaration"** %260 to i8*
  %265 = bitcast %"class.SkSL::FunctionDeclaration"** %194 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %264, i8* align 8 %265, i64 %257, i1 false) #10
  br label %266

266:                                              ; preds = %263, %247
  store i64 %261, i64* %131, align 8
  store i64 %255, i64* %126, align 8
  store i64 %252, i64* %188, align 8
  %267 = icmp eq %"class.SkSL::FunctionDeclaration"** %194, null
  br i1 %267, label %270, label %268

268:                                              ; preds = %266
  %269 = bitcast %"class.SkSL::FunctionDeclaration"** %194 to i8*
  tail call void @_ZdlPv(i8* %269) #9
  br label %270

270:                                              ; preds = %268, %266, %220, %214
  %271 = phi i64 [ %193, %214 ], [ %223, %220 ], [ %255, %266 ], [ %255, %268 ]
  %272 = phi %"class.SkSL::FunctionDeclaration"** [ %196, %214 ], [ %222, %220 ], [ %254, %266 ], [ %254, %268 ]
  %273 = phi %"class.SkSL::FunctionDeclaration"** [ %197, %214 ], [ %222, %220 ], [ %254, %266 ], [ %254, %268 ]
  %274 = phi i8 [ %198, %214 ], [ 1, %220 ], [ 1, %266 ], [ 1, %268 ]
  %275 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %199, i64 1
  %276 = icmp eq %"class.SkSL::FunctionDeclaration"** %275, %187
  br i1 %276, label %189, label %277

277:                                              ; preds = %270
  %278 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %70, align 8
  %279 = ptrtoint %"class.SkSL::FunctionDeclaration"** %278 to i64
  br label %192

280:                                              ; preds = %189
  %281 = icmp eq %"class.SkSL::SymbolTable"* %11, null
  br i1 %281, label %363, label %282

282:                                              ; preds = %280
  %283 = bitcast %"class.std::__1::vector.13"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %283)
  %284 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #10
  %285 = bitcast i8* %284 to %"class.SkSL::UnresolvedFunction"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %283, i8 0, i64 24, i1 false) #10
  %286 = load i64, i64* %131, align 8
  %287 = sub i64 %271, %286
  %288 = ashr exact i64 %287, 3
  %289 = icmp eq i64 %287, 0
  br i1 %289, label %313, label %290

290:                                              ; preds = %282
  %291 = icmp ugt i64 %288, 2305843009213693951
  br i1 %291, label %292, label %294

292:                                              ; preds = %290
  %293 = bitcast %"class.std::__1::vector.13"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %293) #11
  unreachable

294:                                              ; preds = %290
  %295 = tail call i8* @_Znwm(i64 %287) #9
  %296 = bitcast i8* %295 to %"class.SkSL::FunctionDeclaration"**
  %297 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %4, i64 0, i32 0, i32 1
  %298 = bitcast %"class.SkSL::FunctionDeclaration"*** %297 to i8**
  store i8* %295, i8** %298, align 8
  %299 = bitcast %"class.std::__1::vector.13"* %4 to i8**
  store i8* %295, i8** %299, align 16
  %300 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %296, i64 %288
  %301 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.SkSL::FunctionDeclaration"** %300, %"class.SkSL::FunctionDeclaration"*** %301, align 16
  %302 = bitcast %"class.SkSL::FunctionDeclaration"*** %297 to i64*
  %303 = ptrtoint i8* %295 to i64
  %304 = icmp sgt i64 %287, 0
  %305 = bitcast i8* %295 to %"class.SkSL::Symbol"**
  br i1 %304, label %306, label %311

306:                                              ; preds = %294
  %307 = lshr exact i64 %287, 3
  %308 = inttoptr i64 %286 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %295, i8* align 8 %308, i64 %287, i1 false) #10
  %309 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %296, i64 %307
  %310 = ptrtoint %"class.SkSL::FunctionDeclaration"** %309 to i64
  br label %311

311:                                              ; preds = %306, %294
  %312 = phi i64 [ %310, %306 ], [ %303, %294 ]
  store i64 %312, i64* %302, align 8
  br label %313

313:                                              ; preds = %282, %311
  %314 = phi %"class.SkSL::Symbol"** [ %305, %311 ], [ null, %282 ]
  %315 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %314, align 8
  %316 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %315, i64 0, i32 1, i32 0
  %317 = bitcast i8** %316 to <2 x i64>*
  %318 = load <2 x i64>, <2 x i64>* %317, align 8
  %319 = bitcast i8* %284 to i32 (...)***
  %320 = getelementptr inbounds i8, i8* %284, i64 8
  %321 = bitcast i8* %320 to i32*
  store i32 -1, i32* %321, align 8
  %322 = getelementptr inbounds i8, i8* %284, i64 12
  %323 = bitcast i8* %322 to i32*
  store i32 14, i32* %323, align 4
  %324 = getelementptr inbounds i8, i8* %284, i64 16
  %325 = bitcast i8* %324 to <2 x i64>*
  store <2 x i64> %318, <2 x i64>* %325, align 8
  %326 = getelementptr inbounds i8, i8* %284, i64 32
  %327 = bitcast i8* %326 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %327, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL18UnresolvedFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %319, align 8
  %328 = getelementptr inbounds i8, i8* %284, i64 40
  %329 = bitcast %"class.std::__1::vector.13"* %4 to <2 x i64>*
  %330 = load <2 x i64>, <2 x i64>* %329, align 16
  %331 = bitcast i8* %328 to <2 x i64>*
  store <2 x i64> %330, <2 x i64>* %331, align 8
  %332 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %333 = bitcast %"class.SkSL::FunctionDeclaration"*** %332 to i64*
  %334 = load i64, i64* %333, align 16
  %335 = getelementptr inbounds i8, i8* %284, i64 56
  %336 = bitcast i8* %335 to i64*
  store i64 %334, i64* %336, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %283)
  %337 = ptrtoint i8* %284 to i64
  %338 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %338) #10
  %339 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %337, i64* %339, align 8
  %340 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %11, i64 0, i32 1, i32 0, i32 1
  %341 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %340, align 8
  %342 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %11, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %343 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %342, align 8
  %344 = icmp ult %"class.std::__1::unique_ptr"* %341, %343
  br i1 %344, label %345, label %351

345:                                              ; preds = %313
  %346 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %346, align 8
  %347 = bitcast %"class.std::__1::unique_ptr"* %341 to i64*
  store i64 %337, i64* %347, align 8
  %348 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %341, i64 1
  %349 = ptrtoint %"class.std::__1::unique_ptr"* %348 to i64
  %350 = bitcast %"class.std::__1::unique_ptr"** %340 to i64*
  store i64 %349, i64* %350, align 8
  br label %353

351:                                              ; preds = %313
  %352 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %11, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.27"* %352, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #10
  br label %353

353:                                              ; preds = %351, %345
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %354, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %354, align 8
  %356 = icmp eq %"class.SkSL::Symbol"* %355, null
  br i1 %356, label %362, label %357

357:                                              ; preds = %353
  %358 = bitcast %"class.SkSL::Symbol"* %355 to void (%"class.SkSL::Symbol"*)***
  %359 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %358, align 8
  %360 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %359, i64 1
  %361 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %360, align 8
  call void %361(%"class.SkSL::Symbol"* nonnull %355) #10
  br label %362

362:                                              ; preds = %353, %357
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %338) #10
  br label %363

363:                                              ; preds = %280, %362
  %364 = phi %"class.SkSL::UnresolvedFunction"* [ %285, %362 ], [ null, %280 ]
  %365 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %364, i64 0, i32 0
  br label %366

366:                                              ; preds = %180, %152, %181, %189, %363
  %367 = phi i32 [ 1, %363 ], [ 0, %189 ], [ 0, %181 ], [ 0, %152 ], [ 0, %180 ]
  %368 = phi %"class.SkSL::Symbol"* [ %365, %363 ], [ undef, %189 ], [ undef, %181 ], [ undef, %152 ], [ undef, %180 ]
  %369 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %136, align 8
  %370 = icmp eq %"class.SkSL::FunctionDeclaration"** %369, null
  br i1 %370, label %375, label %371

371:                                              ; preds = %366
  %372 = ptrtoint %"class.SkSL::FunctionDeclaration"** %369 to i64
  %373 = bitcast %"class.SkSL::FunctionDeclaration"*** %137 to i64*
  store i64 %372, i64* %373, align 8
  %374 = bitcast %"class.SkSL::FunctionDeclaration"** %369 to i8*
  call void @_ZdlPv(i8* %374) #9
  br label %375

375:                                              ; preds = %366, %371
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #10
  %376 = icmp eq i32 %367, 0
  br i1 %376, label %377, label %379

377:                                              ; preds = %375, %125
  %378 = phi %"class.SkSL::Symbol"* [ %368, %375 ], [ undef, %125 ]
  br label %379

379:                                              ; preds = %377, %375
  %380 = phi i32 [ 0, %377 ], [ 1, %375 ]
  %381 = phi %"class.SkSL::Symbol"* [ %378, %377 ], [ %368, %375 ]
  %382 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %70, align 8
  %383 = icmp eq %"class.SkSL::FunctionDeclaration"** %382, null
  br i1 %383, label %391, label %384

384:                                              ; preds = %111, %116, %379
  %385 = phi %"class.SkSL::Symbol"* [ %381, %379 ], [ undef, %116 ], [ undef, %111 ]
  %386 = phi i32 [ %380, %379 ], [ 0, %116 ], [ 0, %111 ]
  %387 = phi %"class.SkSL::FunctionDeclaration"** [ %382, %379 ], [ %124, %116 ], [ %113, %111 ]
  %388 = phi i64* [ %126, %379 ], [ %121, %116 ], [ %112, %111 ]
  %389 = ptrtoint %"class.SkSL::FunctionDeclaration"** %387 to i64
  store i64 %389, i64* %388, align 8
  %390 = bitcast %"class.SkSL::FunctionDeclaration"** %387 to i8*
  call void @_ZdlPv(i8* %390) #9
  br label %391

391:                                              ; preds = %379, %384
  %392 = phi %"class.SkSL::Symbol"* [ %381, %379 ], [ %385, %384 ]
  %393 = phi i32 [ %380, %379 ], [ %386, %384 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #10
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %407

395:                                              ; preds = %115, %63, %391
  %396 = icmp eq %"class.SkSL::Symbol"* %64, null
  br i1 %396, label %407, label %397

397:                                              ; preds = %395, %402
  %398 = phi %"class.SkSL::Symbol"* [ %405, %402 ], [ %64, %395 ]
  %399 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %398, i64 0, i32 0, i32 2
  %400 = load i32, i32* %399, align 4
  %401 = icmp eq i32 %400, 12
  br i1 %401, label %402, label %407

402:                                              ; preds = %397
  %403 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %398, i64 1
  %404 = bitcast %"class.SkSL::Symbol"* %403 to %"class.SkSL::Symbol"**
  %405 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %404, align 8
  %406 = icmp eq %"class.SkSL::Symbol"* %405, null
  br i1 %406, label %407, label %397

407:                                              ; preds = %397, %402, %395, %57, %391, %61
  %408 = phi %"class.SkSL::Symbol"* [ %62, %61 ], [ null, %57 ], [ %392, %391 ], [ null, %395 ], [ %398, %397 ], [ null, %402 ]
  ret %"class.SkSL::Symbol"* %408
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK4SkSL19FunctionDeclaration7matchesERKS0_(%"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"* dereferenceable(96)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::String"* @_ZN4SkSL11SymbolTable21takeOwnershipOfStringENS_6StringE(%"class.SkSL::SymbolTable"* nocapture, %"class.SkSL::String"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 4
  %4 = tail call i8* @_Znwm(i64 32) #9
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast %"class.SkSL::String"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  %7 = bitcast %"class.std::__1::forward_list"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i8* %4 to i64*
  store i64 %8, i64* %9, align 8
  %10 = bitcast %"class.std::__1::forward_list"* %3 to i8**
  store i8* %4, i8** %10, align 8
  %11 = bitcast i8* %5 to %"class.SkSL::String"*
  ret %"class.SkSL::String"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"*, i8*, i64, %"class.SkSL::Symbol"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = ptrtoint i8* %1 to i64
  %7 = ptrtoint %"class.SkSL::Symbol"* %3 to i64
  %8 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %3, i64 0, i32 0, i32 1
  %9 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 48) #10
  %10 = load i32, i32* %8, align 4
  %11 = bitcast i8* %9 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 12, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %9, i64 16
  %17 = bitcast i8* %16 to i64*
  store i64 %6, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 24
  %19 = bitcast i8* %18 to i64*
  store i64 %2, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 32
  %21 = bitcast i8* %20 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL11SymbolAliasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %22 = getelementptr inbounds i8, i8* %9, i64 40
  %23 = bitcast i8* %22 to i64*
  store i64 %7, i64* %23, align 8
  %24 = ptrtoint i8* %9 to i64
  %25 = bitcast i8* %9 to %"class.SkSL::Symbol"*
  tail call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %0, %"class.SkSL::Symbol"* %25) #10
  %26 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  %27 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %24, i64* %27, align 8
  %28 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1, i32 0, i32 1
  %29 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %28, align 8
  %30 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %31 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %32 = icmp ult %"class.std::__1::unique_ptr"* %29, %31
  br i1 %32, label %33, label %39

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %34, align 8
  %35 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  store i64 %24, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 1
  %37 = ptrtoint %"class.std::__1::unique_ptr"* %36 to i64
  %38 = bitcast %"class.std::__1::unique_ptr"** %28 to i64*
  store i64 %37, i64* %38, align 8
  br label %41

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.27"* %40, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #10
  br label %41

41:                                               ; preds = %39, %33
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %42, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %42, align 8
  %44 = icmp eq %"class.SkSL::Symbol"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.SkSL::Symbol"* %43 to void (%"class.SkSL::Symbol"*)***
  %47 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %48, align 8
  call void %49(%"class.SkSL::Symbol"* nonnull %43) #10
  br label %50

50:                                               ; preds = %41, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"*, %"class.SkSL::Symbol"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = alloca %"struct.SkSL::SymbolTable::SymbolKey", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.std::__1::vector.13", align 16
  %10 = alloca [2 x %"class.SkSL::FunctionDeclaration"*], align 8
  %11 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %1, i64 0, i32 1, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %1, i64 0, i32 1, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 5
  %16 = bitcast %"struct.SkSL::SymbolTable::SymbolKey"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"struct.SkSL::SymbolTable::SymbolKey", %"struct.SkSL::SymbolTable::SymbolKey"* %5, i64 0, i32 0, i32 0
  store i8* %12, i8** %17, align 8, !alias.scope !12
  %18 = getelementptr inbounds %"struct.SkSL::SymbolTable::SymbolKey", %"struct.SkSL::SymbolTable::SymbolKey"* %5, i64 0, i32 0, i32 1
  store i64 %14, i64* %18, align 8, !alias.scope !12
  %19 = getelementptr inbounds %"struct.SkSL::SymbolTable::SymbolKey", %"struct.SkSL::SymbolTable::SymbolKey"* %5, i64 0, i32 1
  %20 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8, !noalias !12
  %21 = tail call i32 %20(i8* %12, i64 %14, i32 0) #10, !noalias !12
  store i32 %21, i32* %19, align 8, !alias.scope !12
  %22 = call dereferenceable(8) %"class.SkSL::Symbol"** @_ZN10SkTHashMapIN4SkSL11SymbolTable9SymbolKeyEPKNS0_6SymbolENS2_4HashEEixERKS2_(%class.SkTHashMap* %15, %"struct.SkSL::SymbolTable::SymbolKey"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  %23 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %22, align 8
  %24 = icmp eq %"class.SkSL::Symbol"* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %2
  store %"class.SkSL::Symbol"* %1, %"class.SkSL::Symbol"** %22, align 8
  br label %298

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %1, i64 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 11
  br i1 %29, label %88, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 6
  %32 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %31, align 8
  %33 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %1, i64 0, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #10
  %36 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #10
  %37 = icmp ugt i64 %14, -17
  br i1 %37, label %38, label %40

38:                                               ; preds = %30
  %39 = bitcast %"class.SkSL::String"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %39) #11
  unreachable

40:                                               ; preds = %30
  %41 = icmp ult i64 %14, 23
  br i1 %41, label %50, label %42

42:                                               ; preds = %40
  %43 = add nuw i64 %14, 16
  %44 = and i64 %43, -16
  %45 = call i8* @_Znwm(i64 %44) #9
  %46 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %45, i8** %46, align 8
  %47 = or i64 %44, -9223372036854775808
  %48 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %49, align 8
  br label %55

50:                                               ; preds = %40
  %51 = trunc i64 %14 to i8
  %52 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  store i8 %51, i8* %53, align 1
  %54 = icmp eq i64 %14, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %50, %42
  %56 = phi i8* [ %45, %42 ], [ %36, %50 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %56, i8* align 1 %12, i64 %14, i1 false) #10
  br label %57

57:                                               ; preds = %50, %55
  %58 = phi i8* [ %36, %50 ], [ %56, %55 ]
  %59 = getelementptr inbounds i8, i8* %58, i64 %14
  store i8 0, i8* %59, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %8) #10
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0)) #10
  %60 = bitcast %"class.SkSL::ErrorReporter"* %32 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %61 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %61, i64 2
  %63 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %62, align 8
  call void %63(%"class.SkSL::ErrorReporter"* %32, i32 %34, %"class.SkSL::String"* nonnull %6) #10
  %64 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %57
  %69 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %70) #9
  br label %71

71:                                               ; preds = %57, %68
  %72 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #9
  br label %79

79:                                               ; preds = %71, %76
  %80 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %86) #9
  br label %87

87:                                               ; preds = %79, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #10
  br label %298

88:                                               ; preds = %26
  %89 = bitcast %"class.std::__1::vector.13"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #10
  %90 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %9, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %9, i64 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %89, i8 0, i64 24, i1 false) #10
  %93 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %22, align 8
  %94 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %93, i64 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  switch i32 %95, label %290 [
    i32 11, label %96
    i32 14, label %153
  ]

96:                                               ; preds = %88
  %97 = ptrtoint %"class.SkSL::Symbol"* %93 to i64
  %98 = bitcast [2 x %"class.SkSL::FunctionDeclaration"*]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #10
  %99 = getelementptr inbounds [2 x %"class.SkSL::FunctionDeclaration"*], [2 x %"class.SkSL::FunctionDeclaration"*]* %10, i64 0, i64 0
  %100 = bitcast [2 x %"class.SkSL::FunctionDeclaration"*]* %10 to i64*
  store i64 %97, i64* %100, align 8
  %101 = getelementptr inbounds [2 x %"class.SkSL::FunctionDeclaration"*], [2 x %"class.SkSL::FunctionDeclaration"*]* %10, i64 0, i64 1
  %102 = bitcast %"class.SkSL::FunctionDeclaration"** %101 to %"class.SkSL::Symbol"**
  store %"class.SkSL::Symbol"* %1, %"class.SkSL::Symbol"** %102, align 8
  %103 = getelementptr inbounds [2 x %"class.SkSL::FunctionDeclaration"*], [2 x %"class.SkSL::FunctionDeclaration"*]* %10, i64 0, i64 2
  call void @_ZNSt3__16vectorIPKN4SkSL19FunctionDeclarationENS_9allocatorIS4_EEE6assignIPKS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.13"* nonnull %9, %"class.SkSL::FunctionDeclaration"** nonnull %99, %"class.SkSL::FunctionDeclaration"** %103) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #10
  %104 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #10
  %105 = bitcast %"class.std::__1::vector.13"* %9 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 16
  %107 = bitcast %"class.SkSL::FunctionDeclaration"*** %92 to i64*
  %108 = load i64, i64* %107, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %89, i8 0, i64 24, i1 false) #10
  %109 = extractelement <2 x i64> %106, i32 0
  %110 = inttoptr i64 %109 to %"class.SkSL::Symbol"**
  %111 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %110, align 8
  %112 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %111, i64 0, i32 1, i32 0
  %113 = bitcast i8** %112 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 8
  %115 = bitcast i8* %104 to i32 (...)***
  %116 = getelementptr inbounds i8, i8* %104, i64 8
  %117 = bitcast i8* %116 to i32*
  store i32 -1, i32* %117, align 8
  %118 = getelementptr inbounds i8, i8* %104, i64 12
  %119 = bitcast i8* %118 to i32*
  store i32 14, i32* %119, align 4
  %120 = getelementptr inbounds i8, i8* %104, i64 16
  %121 = bitcast i8* %120 to <2 x i64>*
  store <2 x i64> %114, <2 x i64>* %121, align 8
  %122 = getelementptr inbounds i8, i8* %104, i64 32
  %123 = bitcast i8* %122 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %123, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL18UnresolvedFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %115, align 8
  %124 = getelementptr inbounds i8, i8* %104, i64 40
  %125 = bitcast i8* %124 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %125, align 8
  %126 = getelementptr inbounds i8, i8* %104, i64 56
  %127 = bitcast i8* %126 to i64*
  store i64 %108, i64* %127, align 8
  %128 = ptrtoint i8* %104 to i64
  %129 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #10
  %130 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %128, i64* %130, align 8
  %131 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1, i32 0, i32 1
  %132 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %131, align 8
  %133 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %134 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %133, align 8
  %135 = icmp ult %"class.std::__1::unique_ptr"* %132, %134
  br i1 %135, label %136, label %142

136:                                              ; preds = %96
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %137, align 8
  %138 = bitcast %"class.std::__1::unique_ptr"* %132 to i64*
  store i64 %128, i64* %138, align 8
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %132, i64 1
  %140 = ptrtoint %"class.std::__1::unique_ptr"* %139 to i64
  %141 = bitcast %"class.std::__1::unique_ptr"** %131 to i64*
  store i64 %140, i64* %141, align 8
  br label %144

142:                                              ; preds = %96
  %143 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.27"* %143, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #10
  br label %144

144:                                              ; preds = %142, %136
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %146 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %145, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %145, align 8
  %147 = icmp eq %"class.SkSL::Symbol"* %146, null
  br i1 %147, label %286, label %148

148:                                              ; preds = %144
  %149 = bitcast %"class.SkSL::Symbol"* %146 to void (%"class.SkSL::Symbol"*)***
  %150 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %150, i64 1
  %152 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %151, align 8
  call void %152(%"class.SkSL::Symbol"* nonnull %146) #10
  br label %286

153:                                              ; preds = %88
  %154 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %93, i64 1
  %155 = bitcast %"class.SkSL::Symbol"* %154 to %"class.std::__1::vector.13"*
  %156 = icmp eq %"class.std::__1::vector.13"* %9, %155
  br i1 %156, label %157, label %159

157:                                              ; preds = %153
  %158 = ptrtoint %"class.SkSL::Symbol"* %1 to i64
  br label %178

159:                                              ; preds = %153
  %160 = bitcast %"class.SkSL::Symbol"* %154 to %"class.SkSL::FunctionDeclaration"***
  %161 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %160, align 8
  %162 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %93, i64 1, i32 0, i32 1
  %163 = bitcast i32* %162 to %"class.SkSL::FunctionDeclaration"***
  %164 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %163, align 8
  call void @_ZNSt3__16vectorIPKN4SkSL19FunctionDeclarationENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.13"* nonnull %9, %"class.SkSL::FunctionDeclaration"** %161, %"class.SkSL::FunctionDeclaration"** %164) #10
  %165 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %91, align 8
  %166 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %92, align 16
  %167 = ptrtoint %"class.SkSL::FunctionDeclaration"** %165 to i64
  %168 = ptrtoint %"class.SkSL::Symbol"* %1 to i64
  %169 = icmp ult %"class.SkSL::FunctionDeclaration"** %165, %166
  %170 = ptrtoint %"class.SkSL::FunctionDeclaration"** %166 to i64
  br i1 %169, label %171, label %178

171:                                              ; preds = %159
  %172 = bitcast %"class.SkSL::FunctionDeclaration"** %165 to i64*
  store i64 %168, i64* %172, align 8
  %173 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %165, i64 1
  %174 = ptrtoint %"class.SkSL::FunctionDeclaration"** %173 to i64
  %175 = bitcast %"class.SkSL::FunctionDeclaration"*** %91 to i64*
  store i64 %174, i64* %175, align 8
  %176 = bitcast %"class.std::__1::vector.13"* %9 to i64*
  %177 = bitcast %"class.SkSL::FunctionDeclaration"*** %92 to i64*
  br label %233

178:                                              ; preds = %157, %159
  %179 = phi i64 [ 0, %157 ], [ %170, %159 ]
  %180 = phi i64 [ %158, %157 ], [ %168, %159 ]
  %181 = phi %"class.SkSL::FunctionDeclaration"** [ null, %157 ], [ %165, %159 ]
  %182 = phi i64 [ 0, %157 ], [ %167, %159 ]
  %183 = ptrtoint %"class.SkSL::FunctionDeclaration"** %181 to i64
  %184 = bitcast %"class.SkSL::FunctionDeclaration"*** %91 to i64*
  %185 = bitcast %"class.std::__1::vector.13"* %9 to i64*
  %186 = load i64, i64* %185, align 16
  %187 = sub i64 %183, %186
  %188 = ashr exact i64 %187, 3
  %189 = add nsw i64 %188, 1
  %190 = icmp ugt i64 %189, 2305843009213693951
  br i1 %190, label %191, label %193

191:                                              ; preds = %178
  %192 = bitcast %"class.std::__1::vector.13"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %192) #11
  unreachable

193:                                              ; preds = %178
  %194 = bitcast %"class.SkSL::FunctionDeclaration"*** %92 to i64*
  %195 = sub i64 %179, %186
  %196 = ashr exact i64 %195, 3
  %197 = icmp ult i64 %196, 1152921504606846975
  br i1 %197, label %198, label %206

198:                                              ; preds = %193
  %199 = ashr exact i64 %195, 2
  %200 = icmp ult i64 %199, %189
  %201 = select i1 %200, i64 %189, i64 %199
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %211, label %203

203:                                              ; preds = %198
  %204 = icmp ugt i64 %201, 2305843009213693951
  br i1 %204, label %205, label %206

205:                                              ; preds = %203
  call void @abort() #11
  unreachable

206:                                              ; preds = %203, %193
  %207 = phi i64 [ %201, %203 ], [ 2305843009213693951, %193 ]
  %208 = shl i64 %207, 3
  %209 = call i8* @_Znwm(i64 %208) #9
  %210 = bitcast i8* %209 to %"class.SkSL::FunctionDeclaration"**
  br label %211

211:                                              ; preds = %206, %198
  %212 = phi i64 [ %207, %206 ], [ 0, %198 ]
  %213 = phi %"class.SkSL::FunctionDeclaration"** [ %210, %206 ], [ null, %198 ]
  %214 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %213, i64 %188
  %215 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %213, i64 %212
  %216 = ptrtoint %"class.SkSL::FunctionDeclaration"** %215 to i64
  %217 = bitcast %"class.SkSL::FunctionDeclaration"** %214 to i64*
  store i64 %180, i64* %217, align 8
  %218 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %214, i64 1
  %219 = ptrtoint %"class.SkSL::FunctionDeclaration"** %218 to i64
  %220 = sub i64 %182, %186
  %221 = ashr exact i64 %220, 3
  %222 = sub nsw i64 0, %221
  %223 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %214, i64 %222
  %224 = ptrtoint %"class.SkSL::FunctionDeclaration"** %223 to i64
  %225 = icmp sgt i64 %220, 0
  br i1 %225, label %226, label %229

226:                                              ; preds = %211
  %227 = bitcast %"class.SkSL::FunctionDeclaration"** %223 to i8*
  %228 = inttoptr i64 %186 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %227, i8* align 8 %228, i64 %220, i1 false) #10
  br label %229

229:                                              ; preds = %226, %211
  store i64 %224, i64* %185, align 16
  store i64 %219, i64* %184, align 8
  store i64 %216, i64* %194, align 16
  %230 = icmp eq i64 %186, 0
  br i1 %230, label %233, label %231

231:                                              ; preds = %229
  %232 = inttoptr i64 %186 to i8*
  call void @_ZdlPv(i8* %232) #9
  br label %233

233:                                              ; preds = %171, %229, %231
  %234 = phi i64* [ %177, %171 ], [ %194, %229 ], [ %194, %231 ]
  %235 = phi i64* [ %175, %171 ], [ %184, %229 ], [ %184, %231 ]
  %236 = phi i64* [ %176, %171 ], [ %185, %229 ], [ %185, %231 ]
  %237 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #10
  %238 = load i64, i64* %236, align 8
  %239 = load i64, i64* %235, align 8
  %240 = load i64, i64* %234, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %89, i8 0, i64 24, i1 false) #10
  %241 = inttoptr i64 %238 to %"class.SkSL::Symbol"**
  %242 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %241, align 8
  %243 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %242, i64 0, i32 1, i32 0
  %244 = bitcast i8** %243 to <2 x i64>*
  %245 = load <2 x i64>, <2 x i64>* %244, align 8
  %246 = bitcast i8* %237 to i32 (...)***
  %247 = getelementptr inbounds i8, i8* %237, i64 8
  %248 = bitcast i8* %247 to i32*
  store i32 -1, i32* %248, align 8
  %249 = getelementptr inbounds i8, i8* %237, i64 12
  %250 = bitcast i8* %249 to i32*
  store i32 14, i32* %250, align 4
  %251 = getelementptr inbounds i8, i8* %237, i64 16
  %252 = bitcast i8* %251 to <2 x i64>*
  store <2 x i64> %245, <2 x i64>* %252, align 8
  %253 = getelementptr inbounds i8, i8* %237, i64 32
  %254 = bitcast i8* %253 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %254, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL18UnresolvedFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %246, align 8
  %255 = getelementptr inbounds i8, i8* %237, i64 40
  %256 = bitcast i8* %255 to i64*
  store i64 %238, i64* %256, align 8
  %257 = getelementptr inbounds i8, i8* %237, i64 48
  %258 = bitcast i8* %257 to i64*
  store i64 %239, i64* %258, align 8
  %259 = getelementptr inbounds i8, i8* %237, i64 56
  %260 = bitcast i8* %259 to i64*
  store i64 %240, i64* %260, align 8
  %261 = ptrtoint i8* %237 to i64
  %262 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %262) #10
  %263 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %261, i64* %263, align 8
  %264 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1, i32 0, i32 1
  %265 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %264, align 8
  %266 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %267 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %266, align 8
  %268 = icmp ult %"class.std::__1::unique_ptr"* %265, %267
  br i1 %268, label %269, label %275

269:                                              ; preds = %233
  %270 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %270, align 8
  %271 = bitcast %"class.std::__1::unique_ptr"* %265 to i64*
  store i64 %261, i64* %271, align 8
  %272 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %265, i64 1
  %273 = ptrtoint %"class.std::__1::unique_ptr"* %272 to i64
  %274 = bitcast %"class.std::__1::unique_ptr"** %264 to i64*
  store i64 %273, i64* %274, align 8
  br label %277

275:                                              ; preds = %233
  %276 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.27"* %276, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #10
  br label %277

277:                                              ; preds = %275, %269
  %278 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %279 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %278, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %278, align 8
  %280 = icmp eq %"class.SkSL::Symbol"* %279, null
  br i1 %280, label %286, label %281

281:                                              ; preds = %277
  %282 = bitcast %"class.SkSL::Symbol"* %279 to void (%"class.SkSL::Symbol"*)***
  %283 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %282, align 8
  %284 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %283, i64 1
  %285 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %284, align 8
  call void %285(%"class.SkSL::Symbol"* nonnull %279) #10
  br label %286

286:                                              ; preds = %281, %277, %148, %144
  %287 = phi i8* [ %129, %144 ], [ %129, %148 ], [ %262, %277 ], [ %262, %281 ]
  %288 = phi i8* [ %104, %144 ], [ %104, %148 ], [ %237, %277 ], [ %237, %281 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287) #10
  %289 = bitcast %"class.SkSL::Symbol"** %22 to i8**
  store i8* %288, i8** %289, align 8
  br label %290

290:                                              ; preds = %286, %88
  %291 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %90, align 16
  %292 = icmp eq %"class.SkSL::FunctionDeclaration"** %291, null
  br i1 %292, label %297, label %293

293:                                              ; preds = %290
  %294 = ptrtoint %"class.SkSL::FunctionDeclaration"** %291 to i64
  %295 = bitcast %"class.SkSL::FunctionDeclaration"*** %91 to i64*
  store i64 %294, i64* %295, align 8
  %296 = bitcast %"class.SkSL::FunctionDeclaration"** %291 to i8*
  call void @_ZdlPv(i8* %296) #9
  br label %297

297:                                              ; preds = %290, %293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #10
  br label %298

298:                                              ; preds = %297, %87, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.SkSL::Symbol"** @_ZN10SkTHashMapIN4SkSL11SymbolTable9SymbolKeyEPKNS0_6SymbolENS2_4HashEEixERKS2_(%class.SkTHashMap*, %"struct.SkSL::SymbolTable::SymbolKey"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", align 8
  %4 = getelementptr inbounds %"struct.SkSL::SymbolTable::SymbolKey", %"struct.SkSL::SymbolTable::SymbolKey"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %6, i32 1, i32 %5
  %8 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %44

11:                                               ; preds = %2
  %12 = add nsw i32 %9, -1
  %13 = and i32 %7, %12
  %14 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.SkSL::SymbolTable::SymbolKey", %"struct.SkSL::SymbolTable::SymbolKey"* %1, i64 0, i32 0
  br label %16

16:                                               ; preds = %36, %11
  %17 = phi i32 [ %9, %11 ], [ %37, %36 ]
  %18 = phi i32 [ 0, %11 ], [ %42, %36 ]
  %19 = phi i32 [ %13, %11 ], [ %41, %36 ]
  %20 = sext i32 %19 to i64
  %21 = load %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %14, align 8
  %22 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %21, i64 %20, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %44, label %25

25:                                               ; preds = %16
  %26 = icmp eq i32 %7, %23
  br i1 %26, label %27, label %36

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %21, i64 %20, i32 0
  %29 = getelementptr inbounds %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %21, i64 %20, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = tail call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* %15, i8* %30, i64 %32) #10
  br i1 %33, label %44, label %34

34:                                               ; preds = %27
  %35 = load i32, i32* %8, align 4
  br label %36

36:                                               ; preds = %34, %25
  %37 = phi i32 [ %35, %34 ], [ %17, %25 ]
  %38 = add nsw i32 %19, -1
  %39 = icmp slt i32 %19, 1
  %40 = select i1 %39, i32 %37, i32 0
  %41 = add nsw i32 %38, %40
  %42 = add nuw nsw i32 %18, 1
  %43 = icmp slt i32 %42, %37
  br i1 %43, label %16, label %44

44:                                               ; preds = %16, %27, %36, %2
  %45 = phi %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair"* [ null, %2 ], [ %28, %27 ], [ null, %16 ], [ null, %36 ]
  %46 = icmp eq %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair"* %45, null
  %47 = getelementptr inbounds %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair"* %45, i64 0, i32 0, i32 1
  %48 = select i1 %46, %"class.SkSL::Symbol"** null, %"class.SkSL::Symbol"** %47
  %49 = icmp eq %"class.SkSL::Symbol"** %48, null
  br i1 %49, label %50, label %124

50:                                               ; preds = %44
  %51 = bitcast %"struct.SkSL::SymbolTable::SymbolKey"* %1 to i8*
  %52 = bitcast %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 8 %51, i64 24, i1 false)
  %53 = getelementptr inbounds %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair"* %3, i64 0, i32 0, i32 1
  %54 = bitcast %"class.SkSL::Symbol"** %53 to i64*
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = shl nsw i32 %56, 2
  %58 = load i32, i32* %8, align 4
  %59 = mul nsw i32 %58, 3
  %60 = icmp slt i32 %57, %59
  br i1 %60, label %67, label %61

61:                                               ; preds = %50
  %62 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0
  %63 = icmp sgt i32 %58, 0
  %64 = shl nsw i32 %58, 1
  %65 = select i1 %63, i32 %64, i32 4
  tail call void @_ZN12SkTHashTableIN10SkTHashMapIN4SkSL11SymbolTable9SymbolKeyEPKNS1_6SymbolENS3_4HashEE4PairES3_S9_E6resizeEi(%class.SkTHashTable* %62, i32 %65) #10
  %66 = load i32, i32* %8, align 4
  br label %67

67:                                               ; preds = %50, %61
  %68 = phi i32 [ %58, %50 ], [ %66, %61 ]
  %69 = getelementptr inbounds %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair"* %3, i64 0, i32 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %71, i32 1, i32 %70
  %73 = icmp sgt i32 %68, 0
  br i1 %73, label %74, label %121

74:                                               ; preds = %67
  %75 = add nsw i32 %68, -1
  %76 = and i32 %72, %75
  %77 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair"* %3, i64 0, i32 0, i32 0, i32 0
  br label %79

79:                                               ; preds = %113, %74
  %80 = phi i32 [ %68, %74 ], [ %114, %113 ]
  %81 = phi i32 [ 0, %74 ], [ %119, %113 ]
  %82 = phi i32 [ %76, %74 ], [ %118, %113 ]
  %83 = sext i32 %82 to i64
  %84 = load %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %77, align 8
  %85 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %84, i64 %83
  %86 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %84, i64 %83, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %97

89:                                               ; preds = %79
  %90 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %85, i64 0, i32 0
  %91 = bitcast %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* nonnull align 8 %52, i64 20, i1 false) #10
  %92 = load i64, i64* %54, align 8
  %93 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %84, i64 %83, i32 0, i32 0, i32 1
  %94 = bitcast %"class.SkSL::Symbol"** %93 to i64*
  store i64 %92, i64* %94, align 8
  store i32 %72, i32* %86, align 8
  %95 = load i32, i32* %55, align 8
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %55, align 8
  br label %121

97:                                               ; preds = %79
  %98 = icmp eq i32 %72, %87
  br i1 %98, label %99, label %113

99:                                               ; preds = %97
  %100 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %84, i64 %83, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %78, i8* %101, i64 %103) #10
  br i1 %104, label %107, label %105

105:                                              ; preds = %99
  %106 = load i32, i32* %8, align 4
  br label %113

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %85, i64 0, i32 0
  %109 = bitcast %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* nonnull align 8 %52, i64 20, i1 false) #10
  %110 = load i64, i64* %54, align 8
  %111 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %84, i64 %83, i32 0, i32 0, i32 1
  %112 = bitcast %"class.SkSL::Symbol"** %111 to i64*
  store i64 %110, i64* %112, align 8
  br label %121

113:                                              ; preds = %105, %97
  %114 = phi i32 [ %106, %105 ], [ %80, %97 ]
  %115 = add nsw i32 %82, -1
  %116 = icmp slt i32 %82, 1
  %117 = select i1 %116, i32 %114, i32 0
  %118 = add nsw i32 %115, %117
  %119 = add nuw nsw i32 %81, 1
  %120 = icmp slt i32 %119, %114
  br i1 %120, label %79, label %121

121:                                              ; preds = %113, %67, %89, %107
  %122 = phi %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair"* [ %108, %107 ], [ %90, %89 ], [ null, %67 ], [ null, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #10
  %123 = getelementptr inbounds %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair"* %122, i64 0, i32 0, i32 1
  br label %124

124:                                              ; preds = %44, %121
  %125 = phi %"class.SkSL::Symbol"** [ %123, %121 ], [ %48, %44 ]
  ret %"class.SkSL::Symbol"** %125
}

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Type"* @_ZN4SkSL11SymbolTable17addArrayDimensionEPKNS_4TypeEi(%"class.SkSL::SymbolTable"*, %"class.SkSL::Type"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = alloca [15 x i8], align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca [15 x i8], align 8
  %9 = icmp eq i32 %2, 0
  br i1 %9, label %146, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 0
  %16 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %17 = load i8*, i8** %15, align 8
  %18 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %19, -17
  br i1 %20, label %21, label %23

21:                                               ; preds = %10
  %22 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #11
  unreachable

23:                                               ; preds = %10
  %24 = icmp ult i64 %19, 23
  br i1 %24, label %31, label %25

25:                                               ; preds = %23
  %26 = add nuw i64 %19, 16
  %27 = and i64 %26, -16
  %28 = tail call i8* @_Znwm(i64 %27) #9
  store i8* %28, i8** %12, align 8
  %29 = or i64 %27, -9223372036854775808
  store i64 %29, i64* %14, align 8
  store i64 %19, i64* %13, align 8
  %30 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %36

31:                                               ; preds = %23
  %32 = trunc i64 %19 to i8
  %33 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 %32, i8* %34, align 1
  %35 = icmp eq i64 %19, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31, %25
  %37 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %33, %31 ], [ %30, %25 ]
  %38 = phi i8* [ %11, %31 ], [ %28, %25 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 %17, i64 %19, i1 false) #10
  br label %39

39:                                               ; preds = %31, %36
  %40 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %33, %31 ], [ %37, %36 ]
  %41 = phi i8* [ %11, %31 ], [ %38, %36 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %19
  store i8 0, i8* %42, align 1
  %43 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #10
  %44 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = icmp eq i32 %2, -1
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %48 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false)
  %49 = load i8, i8* %47, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load i8*, i8** %12, align 8
  %52 = select i1 %50, i8* %51, i8* %11
  br i1 %46, label %54, label %53

53:                                               ; preds = %39
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* nonnull sret %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* %52, i32 %2) #10
  br label %55

54:                                               ; preds = %39
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* nonnull sret %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %52) #10
  br label %55

55:                                               ; preds = %54, %53
  %56 = bitcast %"class.SkSL::String"* %7 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i64* %45 to i8*
  %59 = getelementptr inbounds [15 x i8], [15 x i8]* %8, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 %58, i64 15, i1 false)
  %60 = getelementptr inbounds i8, i8* %43, i64 23
  %61 = load i8, i8* %60, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #10
  %62 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %62)
  %63 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #10
  %64 = bitcast i8* %63 to %"class.SkSL::Type"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* nonnull align 8 %59, i64 15, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 15, i1 false)
  %65 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 1
  %66 = bitcast i8** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast i8* %63 to i32 (...)***
  %69 = getelementptr inbounds i8, i8* %63, i64 8
  %70 = bitcast i8* %69 to i32*
  store i32 -1, i32* %70, align 8
  %71 = getelementptr inbounds i8, i8* %63, i64 12
  %72 = bitcast i8* %71 to i32*
  store i32 13, i32* %72, align 4
  %73 = getelementptr inbounds i8, i8* %63, i64 16
  %74 = bitcast i8* %73 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8** %74, align 8
  %75 = getelementptr inbounds i8, i8* %63, i64 24
  %76 = bitcast i8* %75 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %77 = getelementptr inbounds i8, i8* %63, i64 40
  %78 = bitcast i8* %77 to i64*
  store i64 %67, i64* %78, align 8
  %79 = getelementptr inbounds i8, i8* %63, i64 48
  %80 = bitcast i8* %79 to i64*
  store i64 %57, i64* %80, align 8
  %81 = getelementptr inbounds i8, i8* %63, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* nonnull align 8 %62, i64 15, i1 false) #10
  %82 = getelementptr inbounds i8, i8* %63, i64 71
  store i8 %61, i8* %82, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 15, i1 false)
  %83 = getelementptr inbounds i8, i8* %63, i64 72
  %84 = bitcast i8* %83 to i32*
  store i32 0, i32* %84, align 8
  %85 = getelementptr inbounds i8, i8* %63, i64 76
  %86 = bitcast i8* %85 to i32*
  store i32 4, i32* %86, align 4
  %87 = getelementptr inbounds i8, i8* %63, i64 80
  %88 = bitcast i8* %87 to i32*
  store i32 -1, i32* %88, align 8
  %89 = getelementptr inbounds i8, i8* %63, i64 88
  %90 = bitcast i8* %89 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* %1, %"class.SkSL::Type"** %90, align 8
  %91 = getelementptr inbounds i8, i8* %63, i64 96
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #10
  %92 = getelementptr inbounds i8, i8* %63, i64 120
  %93 = bitcast i8* %92 to i32*
  store i32 %2, i32* %93, align 8
  %94 = getelementptr inbounds i8, i8* %63, i64 124
  %95 = bitcast i8* %94 to i32*
  store i32 1, i32* %95, align 4
  %96 = getelementptr inbounds i8, i8* %63, i64 128
  %97 = getelementptr inbounds i8, i8* %63, i64 168
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 33, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 16, i1 false) #10
  %98 = icmp slt i8 %61, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %55
  %100 = inttoptr i64 %57 to i8*
  %101 = bitcast i8* %81 to i64*
  %102 = load i64, i64* %101, align 8
  br label %105

103:                                              ; preds = %55
  %104 = zext i8 %61 to i64
  br label %105

105:                                              ; preds = %99, %103
  %106 = phi i8* [ %100, %99 ], [ %79, %103 ]
  %107 = phi i64 [ %102, %99 ], [ %104, %103 ]
  store i8* %106, i8** %74, align 8
  store i64 %107, i64* %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %62)
  %108 = ptrtoint i8* %63 to i64
  %109 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #10
  %110 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %108, i64* %110, align 8
  %111 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1, i32 0, i32 1
  %112 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %111, align 8
  %113 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %114 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %113, align 8
  %115 = icmp ult %"class.std::__1::unique_ptr"* %112, %114
  br i1 %115, label %116, label %122

116:                                              ; preds = %105
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %117, align 8
  %118 = bitcast %"class.std::__1::unique_ptr"* %112 to i64*
  store i64 %108, i64* %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %112, i64 1
  %120 = ptrtoint %"class.std::__1::unique_ptr"* %119 to i64
  %121 = bitcast %"class.std::__1::unique_ptr"** %111 to i64*
  store i64 %120, i64* %121, align 8
  br label %124

122:                                              ; preds = %105
  %123 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.27"* %123, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #10
  br label %124

124:                                              ; preds = %122, %116
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %125, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %125, align 8
  %127 = icmp eq %"class.SkSL::Symbol"* %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %124
  %129 = bitcast %"class.SkSL::Symbol"* %126 to void (%"class.SkSL::Symbol"*)***
  %130 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %130, i64 1
  %132 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %131, align 8
  call void %132(%"class.SkSL::Symbol"* nonnull %126) #10
  br label %133

133:                                              ; preds = %128, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #10
  %134 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %139) #9
  br label %140

140:                                              ; preds = %133, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #10
  %141 = load i8, i8* %47, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %145

143:                                              ; preds = %140
  %144 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %144) #9
  br label %145

145:                                              ; preds = %140, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  br label %146

146:                                              ; preds = %3, %145
  %147 = phi %"class.SkSL::Type"* [ %64, %145 ], [ %1, %3 ]
  ret %"class.SkSL::Type"* %147
}

declare void @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4TypeD2Ev(%"class.SkSL::Type"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %3, align 8
  %5 = icmp eq %"struct.SkSL::Type::Field"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkSL::Type::Field"* %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast %"struct.SkSL::Type::Field"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkSL::Type::Field"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %12, align 8
  %14 = icmp eq %"class.SkSL::Type"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.SkSL::Type"** %13 to i64
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = bitcast %"class.SkSL::Type"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.SkSL::Type"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %20, %26
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4TypeD0Ev(%"class.SkSL::Type"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %3, align 8
  %5 = icmp eq %"struct.SkSL::Type::Field"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkSL::Type::Field"* %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast %"struct.SkSL::Type::Field"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkSL::Type::Field"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %12, align 8
  %14 = icmp eq %"class.SkSL::Type"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.SkSL::Type"** %13 to i64
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = bitcast %"class.SkSL::Type"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.SkSL::Type"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %20, %26
  %30 = bitcast %"class.SkSL::Type"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %30) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL4Type11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Type"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 18
  %4 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %3, align 8, !noalias !15
  %5 = icmp eq %"class.SkSL::Type"* %4, null
  %6 = select i1 %5, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %4
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 0, i32 1, i32 0
  %8 = load i8*, i8** %7, align 8, !noalias !15
  %9 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8, !noalias !15
  %11 = icmp ugt i64 %10, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = icmp ult i64 %10, 23
  br i1 %15, label %24, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %10, 16
  %18 = and i64 %17, -16
  %19 = tail call i8* @_Znwm(i64 %18) #9
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8, !alias.scope !15
  %21 = or i64 %18, -9223372036854775808
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8, !alias.scope !15
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %10, i64* %23, align 8, !alias.scope !15
  br label %30

24:                                               ; preds = %14
  %25 = trunc i64 %10 to i8
  %26 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 %25, i8* %27, align 1, !alias.scope !15
  %28 = bitcast %"class.SkSL::String"* %0 to i8*
  %29 = icmp eq i64 %10, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %24, %16
  %31 = phi i8* [ %19, %16 ], [ %28, %24 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %8, i64 %10, i1 false) #10
  br label %32

32:                                               ; preds = %24, %30
  %33 = phi i8* [ %28, %24 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %10
  store i8 0, i8* %34, align 1
  ret void
}

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18UnresolvedFunctionD2Ev(%"class.SkSL::UnresolvedFunction"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL18UnresolvedFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %3, align 8
  %5 = icmp eq %"class.SkSL::FunctionDeclaration"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.SkSL::FunctionDeclaration"** %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.SkSL::FunctionDeclaration"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18UnresolvedFunctionD0Ev(%"class.SkSL::UnresolvedFunction"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL18UnresolvedFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %3, align 8
  %5 = icmp eq %"class.SkSL::FunctionDeclaration"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.SkSL::FunctionDeclaration"** %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.SkSL::FunctionDeclaration"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.SkSL::UnresolvedFunction"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL18UnresolvedFunction11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::UnresolvedFunction"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %1, i64 0, i32 0, i32 1, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %1, i64 0, i32 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %9) #11
  unreachable

10:                                               ; preds = %2
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #9
  %16 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %26

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = bitcast %"class.SkSL::String"* %0 to i8*
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %20, %12
  %27 = phi i8* [ %15, %12 ], [ %24, %20 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %4, i64 %6, i1 false) #10
  br label %28

28:                                               ; preds = %20, %26
  %29 = phi i8* [ %24, %20 ], [ %27, %26 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %6
  store i8 0, i8* %30, align 1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.27"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.27"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.27"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #9
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::Symbol"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !18

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %142, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %142, align 8
  %144 = icmp eq %"class.SkSL::Symbol"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::Symbol"* %143 to void (%"class.SkSL::Symbol"*)***
  %147 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %147, i64 1
  %149 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %148, align 8
  tail call void %149(%"class.SkSL::Symbol"* nonnull %143) #10
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #9
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL6IRNodeD2Ev(%"class.SkSL::IRNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL11SymbolAliasD0Ev(%"class.SkSL::SymbolAlias"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.SkSL::SymbolAlias"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL11SymbolAlias11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::SymbolAlias"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::SymbolAlias", %"class.SkSL::SymbolAlias"* %1, i64 0, i32 0, i32 1, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::SymbolAlias", %"class.SkSL::SymbolAlias"* %1, i64 0, i32 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %9) #11
  unreachable

10:                                               ; preds = %2
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #9
  %16 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %26

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = bitcast %"class.SkSL::String"* %0 to i8*
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %20, %12
  %27 = phi i8* [ %15, %12 ], [ %24, %20 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %4, i64 %6, i1 false) #10
  br label %28

28:                                               ; preds = %20, %26
  %29 = phi i8* [ %24, %20 ], [ %27, %26 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %6
  store i8 0, i8* %30, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIN10SkTHashMapIN4SkSL11SymbolTable9SymbolKeyEPKNS1_6SymbolENS3_4HashEE4PairES3_S9_E6resizeEi(%class.SkTHashTable*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkAutoTArray* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %7, align 8
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i64 0, i64* %8, align 8
  br label %36

12:                                               ; preds = %2
  %13 = sext i32 %1 to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 40) #10
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %18 = tail call i8* @_Znam(i64 %17) #9
  %19 = bitcast i8* %18 to %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*
  %20 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %19, i64 %13
  br label %21

21:                                               ; preds = %21, %12
  %22 = phi %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* [ %19, %12 ], [ %28, %21 ]
  %23 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8** %23, align 8
  %24 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast i64* %24 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %25, align 8
  %26 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %22, i64 0, i32 0, i32 0, i32 1
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %26, align 8
  %27 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %22, i64 0, i32 1
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %22, i64 1
  %29 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %28, %20
  br i1 %29, label %30, label %21

30:                                               ; preds = %21
  %31 = ptrtoint i8* %18 to i64
  %32 = load %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %7, align 8
  %33 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %32, null
  store i64 %31, i64* %8, align 8
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %32 to i8*
  tail call void @_ZdaPv(i8* %35) #9
  br label %36

36:                                               ; preds = %34, %30, %11
  %37 = icmp sgt i32 %4, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %36
  %39 = inttoptr i64 %9 to %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*
  %40 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %41 = zext i32 %4 to i64
  br label %47

42:                                               ; preds = %110, %36
  %43 = icmp eq i64 %9, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = inttoptr i64 %9 to i8*
  tail call void @_ZdaPv(i8* %45) #9
  br label %46

46:                                               ; preds = %42, %44
  ret void

47:                                               ; preds = %110, %38
  %48 = phi i64 [ 0, %38 ], [ %111, %110 ]
  %49 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %39, i64 %48, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %110, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %39, i64 %48, i32 0
  %54 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %39, i64 %48, i32 0, i32 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  %57 = select i1 %56, i32 1, i32 %55
  %58 = load i32, i32* %3, align 4
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %110

60:                                               ; preds = %52
  %61 = add nsw i32 %58, -1
  %62 = and i32 %57, %61
  %63 = getelementptr inbounds %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair"* %53, i64 0, i32 0, i32 0, i32 0
  br label %64

64:                                               ; preds = %102, %60
  %65 = phi i32 [ %58, %60 ], [ %103, %102 ]
  %66 = phi i32 [ 0, %60 ], [ %108, %102 ]
  %67 = phi i32 [ %62, %60 ], [ %107, %102 ]
  %68 = sext i32 %67 to i64
  %69 = load %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %40, align 8
  %70 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %69, i64 %68
  %71 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %69, i64 %68, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %84

74:                                               ; preds = %64
  %75 = bitcast %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %70 to i8*
  %76 = bitcast %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 20, i1 false) #10
  %77 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %39, i64 %48, i32 0, i32 0, i32 1
  %78 = bitcast %"class.SkSL::Symbol"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %69, i64 %68, i32 0, i32 0, i32 1
  %81 = bitcast %"class.SkSL::Symbol"** %80 to i64*
  store i64 %79, i64* %81, align 8
  store i32 %57, i32* %71, align 8
  %82 = load i32, i32* %5, align 8
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %5, align 8
  br label %110

84:                                               ; preds = %64
  %85 = icmp eq i32 %57, %72
  br i1 %85, label %86, label %102

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %69, i64 %68, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = tail call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* %63, i8* %88, i64 %90) #10
  br i1 %91, label %94, label %92

92:                                               ; preds = %86
  %93 = load i32, i32* %3, align 4
  br label %102

94:                                               ; preds = %86
  %95 = bitcast %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %70 to i8*
  %96 = bitcast %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 20, i1 false) #10
  %97 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %39, i64 %48, i32 0, i32 0, i32 1
  %98 = bitcast %"class.SkSL::Symbol"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %69, i64 %68, i32 0, i32 0, i32 1
  %101 = bitcast %"class.SkSL::Symbol"** %100 to i64*
  store i64 %99, i64* %101, align 8
  br label %110

102:                                              ; preds = %92, %84
  %103 = phi i32 [ %93, %92 ], [ %65, %84 ]
  %104 = add nsw i32 %67, -1
  %105 = icmp slt i32 %67, 1
  %106 = select i1 %105, i32 %103, i32 0
  %107 = add nsw i32 %104, %106
  %108 = add nuw nsw i32 %66, 1
  %109 = icmp slt i32 %108, %103
  br i1 %109, label %64, label %110

110:                                              ; preds = %102, %94, %74, %52, %47
  %111 = add nuw nsw i64 %48, 1
  %112 = icmp eq i64 %111, %41
  br i1 %112, label %42, label %47
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPKN4SkSL19FunctionDeclarationENS_9allocatorIS4_EEE6assignIPKS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.13"*, %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.SkSL::FunctionDeclaration"** %2 to i64
  %5 = ptrtoint %"class.SkSL::FunctionDeclaration"** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.SkSL::FunctionDeclaration"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.13"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.SkSL::FunctionDeclaration"**
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.SkSL::FunctionDeclaration"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, i64 %22
  %25 = select i1 %23, %"class.SkSL::FunctionDeclaration"** %24, %"class.SkSL::FunctionDeclaration"** %2
  %26 = ptrtoint %"class.SkSL::FunctionDeclaration"** %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #10
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.SkSL::FunctionDeclaration"** %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #10
  %42 = inttoptr i64 %35 to %"class.SkSL::FunctionDeclaration"**
  %43 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %42, i64 %39
  %44 = ptrtoint %"class.SkSL::FunctionDeclaration"** %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %16, i64 %28
  store %"class.SkSL::FunctionDeclaration"** %48, %"class.SkSL::FunctionDeclaration"*** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.SkSL::FunctionDeclaration"*** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #9
  %55 = bitcast %"class.std::__1::vector.13"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #10
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.13"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #11
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.13"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #11
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #9
  %75 = bitcast i8* %74 to %"class.SkSL::FunctionDeclaration"**
  %76 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.SkSL::FunctionDeclaration"*** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.13"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %75, i64 %72
  store %"class.SkSL::FunctionDeclaration"** %79, %"class.SkSL::FunctionDeclaration"*** %8, align 8
  %80 = bitcast %"class.SkSL::FunctionDeclaration"*** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #10
  %86 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %75, i64 %84
  %87 = ptrtoint %"class.SkSL::FunctionDeclaration"** %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPKN4SkSL19FunctionDeclarationENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.13"*, %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.SkSL::FunctionDeclaration"** %2 to i64
  %5 = ptrtoint %"class.SkSL::FunctionDeclaration"** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.SkSL::FunctionDeclaration"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.13"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.SkSL::FunctionDeclaration"**
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.SkSL::FunctionDeclaration"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, i64 %22
  %25 = select i1 %23, %"class.SkSL::FunctionDeclaration"** %24, %"class.SkSL::FunctionDeclaration"** %2
  %26 = ptrtoint %"class.SkSL::FunctionDeclaration"** %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #10
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.SkSL::FunctionDeclaration"** %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #10
  %42 = inttoptr i64 %35 to %"class.SkSL::FunctionDeclaration"**
  %43 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %42, i64 %39
  %44 = ptrtoint %"class.SkSL::FunctionDeclaration"** %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %16, i64 %28
  store %"class.SkSL::FunctionDeclaration"** %48, %"class.SkSL::FunctionDeclaration"*** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.SkSL::FunctionDeclaration"*** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #9
  %55 = bitcast %"class.std::__1::vector.13"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #10
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.13"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #11
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.13"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #11
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #9
  %75 = bitcast i8* %74 to %"class.SkSL::FunctionDeclaration"**
  %76 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.SkSL::FunctionDeclaration"*** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.13"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %75, i64 %72
  store %"class.SkSL::FunctionDeclaration"** %79, %"class.SkSL::FunctionDeclaration"*** %8, align 8
  %80 = bitcast %"class.SkSL::FunctionDeclaration"*** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #10
  %86 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %75, i64 %84
  %87 = ptrtoint %"class.SkSL::FunctionDeclaration"** %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4SkSL11SymbolTable13MakeSymbolKeyENS_14StringFragmentE: argument 0"}
!5 = distinct !{!5, !"_ZN4SkSL11SymbolTable13MakeSymbolKeyENS_14StringFragmentE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4SkSL11SymbolTable12GetFunctionsERKNS_6SymbolE: argument 0"}
!8 = distinct !{!8, !"_ZN4SkSL11SymbolTable12GetFunctionsERKNS_6SymbolE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN4SkSL11SymbolTable12GetFunctionsERKNS_6SymbolE: argument 0"}
!11 = distinct !{!11, !"_ZN4SkSL11SymbolTable12GetFunctionsERKNS_6SymbolE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4SkSL11SymbolTable13MakeSymbolKeyENS_14StringFragmentE: argument 0"}
!14 = distinct !{!14, !"_ZN4SkSL11SymbolTable13MakeSymbolKeyENS_14StringFragmentE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4SkSL4Type11displayNameEv"}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
