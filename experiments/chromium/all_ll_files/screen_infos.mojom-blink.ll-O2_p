; ModuleID = 'gen/third_party/blink/public/mojom/widget/screen_infos.mojom-blink.cc'
source_filename = "gen/third_party/blink/public/mojom/widget/screen_infos.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::ScreenInfos" = type { %"class.WTF::Vector", i64 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::ScreenInfo"*, i32, i32 }
%"struct.blink::ScreenInfo" = type { float, %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32, %"class.gfx::Rect", %"class.gfx::Rect", i32, i16, i8, i8, i8, i64 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.3 }
%union.anon.3 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.13", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.7"*, %"class.mojo::ScopedHandleBase.7"*, %"class.std::__1::__compressed_pair.8" }
%"class.mojo::ScopedHandleBase.7" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.mojo::ScopedHandleBase.7"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.15" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.24, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.26", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.23", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.24 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.25" }>
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i32 }
%"class.blink::mojom::internal::ScreenInfos_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", i64 }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::mojom::blink::ScreenInfos"* }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.blink::mojom::internal::ScreenInfo_Data" = type { %"struct.mojo::internal::StructHeader", float, i32, %"struct.mojo::internal::Pointer.42", i32, i8, [1 x i8], i16, i32, i32, %"struct.mojo::internal::Pointer.43", %"struct.mojo::internal::Pointer.43", i64 }
%"struct.mojo::internal::Pointer.42" = type { i64 }
%"struct.mojo::internal::Pointer.43" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4mojo8internal10SerializerINS_13ArrayDataViewIN5blink5mojom18ScreenInfoDataViewEEEN3WTF6VectorINS3_10ScreenInfoELj0ENS7_18PartitionAllocatorEEEE11DeserializeEPNS0_10Array_DataINS0_7PointerINS4_8internal15ScreenInfo_DataEEEEEPSB_PNS_7MessageE = comdat any

$_ZN3WTF6VectorIN5blink10ScreenInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10ScreenInfoEEEmm = comdat any

$_ZN3WTF6VectorIN5blink10ScreenInfoELj0ENS_18PartitionAllocatorEE6resizeEj = comdat any

$_ZN3WTF6VectorIN5blink10ScreenInfoELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [13 x i8] c"screen_infos\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"current_display_id\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10ScreenInfoEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScreenInfo]\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink5mojom5blink11ScreenInfosC1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ScreenInfos"*), void (%"class.blink::mojom::blink::ScreenInfos"*)* @_ZN5blink5mojom5blink11ScreenInfosC2Ev
@_ZN5blink5mojom5blink11ScreenInfosC1EN3WTF6VectorINS_10ScreenInfoELj0ENS3_18PartitionAllocatorEEEl = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ScreenInfos"*, %"class.WTF::Vector"*, i64), void (%"class.blink::mojom::blink::ScreenInfos"*, %"class.WTF::Vector"*, i64)* @_ZN5blink5mojom5blink11ScreenInfosC2EN3WTF6VectorINS_10ScreenInfoELj0ENS3_18PartitionAllocatorEEEl
@_ZN5blink5mojom5blink11ScreenInfosD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ScreenInfos"*), void (%"class.blink::mojom::blink::ScreenInfos"*)* @_ZN5blink5mojom5blink11ScreenInfosD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink11ScreenInfosC2Ev(%"class.blink::mojom::blink::ScreenInfos"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::ScreenInfos"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink11ScreenInfosC2EN3WTF6VectorINS_10ScreenInfoELj0ENS3_18PartitionAllocatorEEEl(%"class.blink::mojom::blink::ScreenInfos"* nocapture, %"class.WTF::Vector"* nocapture, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::mojom::blink::ScreenInfos", %"class.blink::mojom::blink::ScreenInfos"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.blink::mojom::blink::ScreenInfos", %"class.blink::mojom::blink::ScreenInfos"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.WTF::Vector"* %1 to i64*
  %7 = bitcast %"class.blink::mojom::blink::ScreenInfos"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #7
  %8 = load i64, i64* %6, align 8
  %9 = bitcast %"class.blink::mojom::blink::ScreenInfos"* %0 to i64*
  store atomic i64 0, i64* %6 monotonic, align 8
  store atomic i64 %8, i64* %9 monotonic, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %4, align 4
  %12 = load i32, i32* %10, align 4
  store i32 %12, i32* %4, align 4
  store i32 %11, i32* %10, align 4
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %5, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %5, align 4
  store i32 %14, i32* %13, align 4
  %16 = getelementptr inbounds %"class.blink::mojom::blink::ScreenInfos", %"class.blink::mojom::blink::ScreenInfos"* %0, i64 0, i32 1
  store i64 %2, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink11ScreenInfosD2Ev(%"class.blink::mojom::blink::ScreenInfos"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::mojom::blink::ScreenInfos", %"class.blink::mojom::blink::ScreenInfos"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::ScreenInfo"*, %"struct.blink::ScreenInfo"** %2, align 8
  %4 = icmp eq %"struct.blink::ScreenInfo"* %3, null
  br i1 %4, label %22, label %5, !prof !2

5:                                                ; preds = %1
  %6 = bitcast %"struct.blink::ScreenInfo"* %3 to i8*
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ScreenInfos", %"class.blink::mojom::blink::ScreenInfos"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %20, label %10, !prof !3

10:                                               ; preds = %5
  %11 = zext i32 %8 to i64
  %12 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %3, i64 %11
  br label %13

13:                                               ; preds = %13, %10
  %14 = phi %"struct.blink::ScreenInfo"* [ %15, %13 ], [ %3, %10 ]
  tail call void @_ZN5blink10ScreenInfoD1Ev(%"struct.blink::ScreenInfo"* %14) #7
  %15 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %14, i64 1
  %16 = icmp eq %"struct.blink::ScreenInfo"* %15, %12
  br i1 %16, label %17, label %13

17:                                               ; preds = %13
  store i32 0, i32* %7, align 4
  %18 = bitcast %"class.blink::mojom::blink::ScreenInfos"* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %17, %5
  %21 = phi i8* [ %19, %17 ], [ %6, %5 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #7
  store %"struct.blink::ScreenInfo"* null, %"struct.blink::ScreenInfo"** %2, align 8
  br label %22

22:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5mojom5blink11ScreenInfos14WriteIntoTraceEN8perfetto11TracedValueE(%"class.blink::mojom::blink::ScreenInfos"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedDictionary", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = bitcast %"class.perfetto::TracedDictionary"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #7
  %9 = bitcast %"class.perfetto::TracedDictionary"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %4, %"class.perfetto::TracedValue"* %1) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %5, %"class.perfetto::TracedDictionary"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #7
  %10 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7
  %11 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 7, i8* %12, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #7
  %13 = getelementptr inbounds i8, i8* %10, i64 7
  store i8 0, i8* %13, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #7
  %14 = load i8, i8* %12, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #8
  br label %19

19:                                               ; preds = %16, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %7, %"class.perfetto::TracedDictionary"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #7
  %20 = getelementptr inbounds %"class.blink::mojom::blink::ScreenInfos", %"class.blink::mojom::blink::ScreenInfos"* %0, i64 0, i32 1
  %21 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  %22 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %21, i64 16, i1 false) #7
  %23 = load i64, i64* %20, align 8
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %3, i64 %23) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink5mojom5blink11ScreenInfos8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN5blink5mojom8internal16ScreenInfos_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #7
  ret i1 %3
}

declare zeroext i1 @_ZN5blink5mojom8internal16ScreenInfos_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom19ScreenInfosDataViewENS_9StructPtrINS2_5blink11ScreenInfosEEEE4ReadES3_PS7_(%"class.blink::mojom::internal::ScreenInfos_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 24) #8, !noalias !4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #7, !noalias !4
  %5 = ptrtoint i8* %4 to i64
  %6 = bitcast i8* %4 to %"class.WTF::Vector"*
  %7 = getelementptr inbounds %"class.blink::mojom::internal::ScreenInfos_Data", %"class.blink::mojom::internal::ScreenInfos_Data"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  %11 = bitcast %"struct.mojo::internal::Pointer"* %7 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  %13 = bitcast i8* %12 to %"class.mojo::internal::Array_Data"*
  %14 = select i1 %10, %"class.mojo::internal::Array_Data"* null, %"class.mojo::internal::Array_Data"* %13
  %15 = tail call zeroext i1 @_ZN4mojo8internal10SerializerINS_13ArrayDataViewIN5blink5mojom18ScreenInfoDataViewEEEN3WTF6VectorINS3_10ScreenInfoELj0ENS7_18PartitionAllocatorEEEE11DeserializeEPNS0_10Array_DataINS0_7PointerINS4_8internal15ScreenInfo_DataEEEEEPSB_PNS_7MessageE(%"class.mojo::internal::Array_Data"* %14, %"class.WTF::Vector"* nonnull %6, %"class.mojo::Message"* %1) #7
  br i1 %15, label %16, label %21

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::mojom::internal::ScreenInfos_Data", %"class.blink::mojom::internal::ScreenInfos_Data"* %0, i64 0, i32 2
  %18 = load i64, i64* %17, align 1
  %19 = getelementptr inbounds i8, i8* %4, i64 16
  %20 = bitcast i8* %19 to i64*
  store i64 %18, i64* %20, align 8
  br label %21

21:                                               ; preds = %16, %3
  %22 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::mojom::blink::ScreenInfos"*, %"class.blink::mojom::blink::ScreenInfos"** %22, align 8
  store %"class.blink::mojom::blink::ScreenInfos"* null, %"class.blink::mojom::blink::ScreenInfos"** %22, align 8
  %24 = icmp eq %"class.blink::mojom::blink::ScreenInfos"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %5, i64* %26, align 8
  br label %76

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::mojom::blink::ScreenInfos", %"class.blink::mojom::blink::ScreenInfos"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.blink::ScreenInfo"*, %"struct.blink::ScreenInfo"** %28, align 8
  %30 = icmp eq %"struct.blink::ScreenInfo"* %29, null
  br i1 %30, label %48, label %31, !prof !2

31:                                               ; preds = %27
  %32 = bitcast %"struct.blink::ScreenInfo"* %29 to i8*
  %33 = getelementptr inbounds %"class.blink::mojom::blink::ScreenInfos", %"class.blink::mojom::blink::ScreenInfos"* %23, i64 0, i32 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %46, label %36, !prof !3

36:                                               ; preds = %31
  %37 = zext i32 %34 to i64
  %38 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %29, i64 %37
  br label %39

39:                                               ; preds = %39, %36
  %40 = phi %"struct.blink::ScreenInfo"* [ %41, %39 ], [ %29, %36 ]
  tail call void @_ZN5blink10ScreenInfoD1Ev(%"struct.blink::ScreenInfo"* %40) #7
  %41 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %40, i64 1
  %42 = icmp eq %"struct.blink::ScreenInfo"* %41, %38
  br i1 %42, label %43, label %39

43:                                               ; preds = %39
  store i32 0, i32* %33, align 4
  %44 = bitcast %"class.blink::mojom::blink::ScreenInfos"* %23 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %43, %31
  %47 = phi i8* [ %45, %43 ], [ %32, %31 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %47) #7
  br label %48

48:                                               ; preds = %27, %46
  %49 = bitcast %"class.blink::mojom::blink::ScreenInfos"* %23 to i8*
  tail call void @_ZdlPv(i8* %49) #8
  %50 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %51 = load %"class.blink::mojom::blink::ScreenInfos"*, %"class.blink::mojom::blink::ScreenInfos"** %22, align 8
  store i64 %5, i64* %50, align 8
  %52 = icmp eq %"class.blink::mojom::blink::ScreenInfos"* %51, null
  br i1 %52, label %76, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::mojom::blink::ScreenInfos", %"class.blink::mojom::blink::ScreenInfos"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load %"struct.blink::ScreenInfo"*, %"struct.blink::ScreenInfo"** %54, align 8
  %56 = icmp eq %"struct.blink::ScreenInfo"* %55, null
  br i1 %56, label %74, label %57, !prof !2

57:                                               ; preds = %53
  %58 = bitcast %"struct.blink::ScreenInfo"* %55 to i8*
  %59 = getelementptr inbounds %"class.blink::mojom::blink::ScreenInfos", %"class.blink::mojom::blink::ScreenInfos"* %51, i64 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %72, label %62, !prof !3

62:                                               ; preds = %57
  %63 = zext i32 %60 to i64
  %64 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %55, i64 %63
  br label %65

65:                                               ; preds = %65, %62
  %66 = phi %"struct.blink::ScreenInfo"* [ %67, %65 ], [ %55, %62 ]
  tail call void @_ZN5blink10ScreenInfoD1Ev(%"struct.blink::ScreenInfo"* %66) #7
  %67 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %66, i64 1
  %68 = icmp eq %"struct.blink::ScreenInfo"* %67, %64
  br i1 %68, label %69, label %65

69:                                               ; preds = %65
  store i32 0, i32* %59, align 4
  %70 = bitcast %"class.blink::mojom::blink::ScreenInfos"* %51 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %69, %57
  %73 = phi i8* [ %71, %69 ], [ %58, %57 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %73) #7
  br label %74

74:                                               ; preds = %72, %53
  %75 = bitcast %"class.blink::mojom::blink::ScreenInfos"* %51 to i8*
  tail call void @_ZdlPv(i8* %75) #8
  br label %76

76:                                               ; preds = %25, %48, %74
  ret i1 %15
}

; Function Attrs: nounwind
declare void @_ZN5blink10ScreenInfoD1Ev(%"struct.blink::ScreenInfo"*) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal10SerializerINS_13ArrayDataViewIN5blink5mojom18ScreenInfoDataViewEEEN3WTF6VectorINS3_10ScreenInfoELj0ENS7_18PartitionAllocatorEEEE11DeserializeEPNS0_10Array_DataINS0_7PointerINS4_8internal15ScreenInfo_DataEEEEEPSB_PNS_7MessageE(%"class.mojo::internal::Array_Data"*, %"class.WTF::Vector"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"class.mojo::internal::Array_Data"* %0, null
  br i1 %4, label %5, label %27

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %52, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = load %"struct.blink::ScreenInfo"*, %"struct.blink::ScreenInfo"** %14, align 8
  %16 = zext i32 %11 to i64
  %17 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %15, i64 %16
  br label %18

18:                                               ; preds = %18, %13
  %19 = phi %"struct.blink::ScreenInfo"* [ %20, %18 ], [ %15, %13 ]
  tail call void @_ZN5blink10ScreenInfoD1Ev(%"struct.blink::ScreenInfo"* %19) #7
  %20 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %19, i64 1
  %21 = icmp eq %"struct.blink::ScreenInfo"* %20, %17
  br i1 %21, label %22, label %18

22:                                               ; preds = %18
  store i32 0, i32* %10, align 4
  br label %23

23:                                               ; preds = %22, %9
  %24 = bitcast %"class.WTF::Vector"* %1 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.WTF::Vector"* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  store i32 0, i32* %6, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %25) #7
  br label %52

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 1
  tail call void @_ZN3WTF6VectorIN5blink10ScreenInfoELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"* %1, i32 %29) #7
  %30 = load i32, i32* %28, align 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %52, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 1
  br label %34

34:                                               ; preds = %48, %32
  %35 = phi i64 [ 0, %32 ], [ %40, %48 ]
  %36 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %33, i64 %35
  %37 = bitcast %"class.mojo::internal::Array_Data"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  %40 = add nuw nsw i64 %35, 1
  %41 = trunc i64 %35 to i32
  %42 = tail call dereferenceable(552) %"struct.blink::ScreenInfo"* @_ZN3WTF6VectorIN5blink10ScreenInfoELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %41) #7
  br i1 %39, label %48, label %43

43:                                               ; preds = %34
  %44 = bitcast %"class.mojo::internal::Array_Data"* %36 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 %38
  %46 = bitcast i8* %45 to %"class.blink::mojom::internal::ScreenInfo_Data"*
  %47 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom18ScreenInfoDataViewENS1_10ScreenInfoEE4ReadES3_PS4_(%"class.blink::mojom::internal::ScreenInfo_Data"* nonnull %46, %"class.mojo::Message"* %2, %"struct.blink::ScreenInfo"* %42) #7
  br i1 %47, label %48, label %52

48:                                               ; preds = %43, %34
  %49 = load i32, i32* %28, align 1
  %50 = zext i32 %49 to i64
  %51 = icmp ult i64 %40, %50
  br i1 %51, label %34, label %52

52:                                               ; preds = %48, %43, %27, %23, %5
  %53 = phi i1 [ true, %5 ], [ true, %23 ], [ true, %27 ], [ true, %48 ], [ false, %43 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10ScreenInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %22

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::ScreenInfo"*, %"struct.blink::ScreenInfo"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"struct.blink::ScreenInfo"* [ %18, %14 ], [ %6, %4 ]
  %16 = phi %"struct.blink::ScreenInfo"* [ %17, %14 ], [ null, %4 ]
  tail call void @_ZN5blink10ScreenInfoC1ERKS0_(%"struct.blink::ScreenInfo"* %16, %"struct.blink::ScreenInfo"* dereferenceable(552) %15) #7
  tail call void @_ZN5blink10ScreenInfoD1Ev(%"struct.blink::ScreenInfo"* %15) #7
  %17 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %16, i64 1
  %18 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %15, i64 1
  %19 = icmp eq %"struct.blink::ScreenInfo"* %18, %10
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %4
  %21 = bitcast %"struct.blink::ScreenInfo"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #7
  br label %53

22:                                               ; preds = %2
  %23 = zext i32 %1 to i64
  %24 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10ScreenInfoEEEmm(i64 %23) #7
  %25 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10ScreenInfoEEEPKcv, i64 0, i64 0)) #7
  %26 = udiv i64 %24, 552
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load %"struct.blink::ScreenInfo"*, %"struct.blink::ScreenInfo"** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %22
  %36 = bitcast %"struct.blink::ScreenInfo"* %29 to i8*
  br label %48

37:                                               ; preds = %22
  %38 = bitcast i8* %25 to %"struct.blink::ScreenInfo"*
  br label %39

39:                                               ; preds = %37, %39
  %40 = phi %"struct.blink::ScreenInfo"* [ %43, %39 ], [ %29, %37 ]
  %41 = phi %"struct.blink::ScreenInfo"* [ %42, %39 ], [ %38, %37 ]
  tail call void @_ZN5blink10ScreenInfoC1ERKS0_(%"struct.blink::ScreenInfo"* %41, %"struct.blink::ScreenInfo"* dereferenceable(552) %40) #7
  tail call void @_ZN5blink10ScreenInfoD1Ev(%"struct.blink::ScreenInfo"* %40) #7
  %42 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %41, i64 1
  %43 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %40, i64 1
  %44 = icmp eq %"struct.blink::ScreenInfo"* %43, %33
  br i1 %44, label %45, label %39

45:                                               ; preds = %39
  %46 = bitcast %"class.WTF::Vector"* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %35, %45
  %49 = phi i8* [ %47, %45 ], [ %36, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #7
  %50 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %27, i64* %50 monotonic, align 8
  %51 = trunc i64 %26 to i32
  %52 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %51, i32* %52, align 8
  br label %53

53:                                               ; preds = %48, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10ScreenInfoEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 3886569
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 3886569) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = mul i64 %0, 552
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN5blink10ScreenInfoC1ERKS0_(%"struct.blink::ScreenInfo"*, %"struct.blink::ScreenInfo"* dereferenceable(552)) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10ScreenInfoELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::ScreenInfo"*, %"struct.blink::ScreenInfo"** %7, align 8
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %8, i64 %9
  %11 = icmp eq i32 %4, %1
  br i1 %11, label %59, label %12

12:                                               ; preds = %6
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %8, i64 %13
  br label %15

15:                                               ; preds = %12, %15
  %16 = phi %"struct.blink::ScreenInfo"* [ %17, %15 ], [ %14, %12 ]
  tail call void @_ZN5blink10ScreenInfoD1Ev(%"struct.blink::ScreenInfo"* %16) #7
  %17 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %16, i64 1
  %18 = icmp eq %"struct.blink::ScreenInfo"* %17, %10
  br i1 %18, label %59, label %15

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %21, %1
  br i1 %22, label %23, label %45

23:                                               ; preds = %19
  %24 = lshr i32 %21, 2
  %25 = add nuw i32 %21, 1
  %26 = add i32 %25, %24
  %27 = icmp ugt i32 %26, 4
  %28 = select i1 %27, i32 %26, i32 4
  %29 = icmp ugt i32 %28, %1
  %30 = select i1 %29, i32 %28, i32 %1
  %31 = icmp ult i32 %21, %30
  br i1 %31, label %32, label %45, !prof !2

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load %"struct.blink::ScreenInfo"*, %"struct.blink::ScreenInfo"** %33, align 8
  %35 = icmp eq %"struct.blink::ScreenInfo"* %34, null
  br i1 %35, label %36, label %44

36:                                               ; preds = %32
  %37 = zext i32 %30 to i64
  %38 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10ScreenInfoEEEmm(i64 %37) #7
  %39 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10ScreenInfoEEEPKcv, i64 0, i64 0)) #7
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 552
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %20, align 8
  br label %45

44:                                               ; preds = %32
  tail call void @_ZN3WTF6VectorIN5blink10ScreenInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %30) #7
  br label %45

45:                                               ; preds = %44, %36, %23, %19
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %47 = load %"struct.blink::ScreenInfo"*, %"struct.blink::ScreenInfo"** %46, align 8
  %48 = load i32, i32* %3, align 4
  %49 = zext i32 %1 to i64
  %50 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %47, i64 %49
  %51 = icmp eq i32 %48, %1
  br i1 %51, label %59, label %52

52:                                               ; preds = %45
  %53 = zext i32 %48 to i64
  %54 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %47, i64 %53
  br label %55

55:                                               ; preds = %52, %55
  %56 = phi %"struct.blink::ScreenInfo"* [ %57, %55 ], [ %54, %52 ]
  tail call void @_ZN5blink10ScreenInfoC1Ev(%"struct.blink::ScreenInfo"* %56) #7
  %57 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %56, i64 1
  %58 = icmp eq %"struct.blink::ScreenInfo"* %57, %50
  br i1 %58, label %59, label %55

59:                                               ; preds = %15, %55, %6, %45
  store i32 %1, i32* %3, align 4
  ret void
}

declare void @_ZN5blink10ScreenInfoC1Ev(%"struct.blink::ScreenInfo"*) unnamed_addr #2

declare zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom18ScreenInfoDataViewENS1_10ScreenInfoEE4ReadES3_PS4_(%"class.blink::mojom::internal::ScreenInfo_Data"*, %"class.mojo::Message"*, %"struct.blink::ScreenInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(552) %"struct.blink::ScreenInfo"* @_ZN3WTF6VectorIN5blink10ScreenInfoELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::ScreenInfo"*, %"struct.blink::ScreenInfo"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %24, i64 %25
  ret %"struct.blink::ScreenInfo"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink5mojom5blink11ScreenInfos3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZN5blink5mojom5blink11ScreenInfos3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
