; ModuleID = '../../v8/src/compiler/backend/instruction-scheduler.cc'
source_filename = "../../v8/src/compiler/backend/instruction-scheduler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode" = type { %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::ZoneDeque.676", i32, i32, i32, i32 }
%"class.v8::internal::ZoneDeque.676" = type { %"class.std::__1::deque.677" }
%"class.std::__1::deque.677" = type { %"class.std::__1::__deque_base.678" }
%"class.std::__1::__deque_base.678" = type { %"struct.std::__1::__split_buffer.679", i64, %"class.std::__1::__compressed_pair.685" }
%"struct.std::__1::__split_buffer.679" = type { %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.std::__1::__compressed_pair.680" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681", %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.v8::internal::RecyclingZoneAllocator.683" }
%"class.v8::internal::RecyclingZoneAllocator.683" = type { %"class.v8::internal::ZoneAllocator.684", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.684" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"class.v8::internal::RecyclingZoneAllocator.687" }
%"class.v8::internal::RecyclingZoneAllocator.687" = type { %"class.v8::internal::ZoneAllocator.688", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.688" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"*, i64 }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::Instruction" = type { i32, i32, [2 x %"class.v8::internal::compiler::ParallelMove"*], %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::InstructionBlock"*, [1 x %"class.v8::internal::compiler::InstructionOperand"] }
%"class.v8::internal::compiler::ParallelMove" = type { %"class.v8::internal::ZoneVector.608" }
%"class.v8::internal::ZoneVector.608" = type { %"class.std::__1::vector.609" }
%"class.std::__1::vector.609" = type { %"class.std::__1::__vector_base.610" }
%"class.std::__1::__vector_base.610" = type { %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"**, %"class.std::__1::__compressed_pair.611" }
%"class.v8::internal::compiler::MoveOperands" = type { %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand" }
%"class.v8::internal::compiler::InstructionOperand" = type { i64 }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612", %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.v8::internal::compiler::MoveOperands"** }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.v8::internal::ZoneAllocator.614" }
%"class.v8::internal::ZoneAllocator.614" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::ReferenceMap" = type <{ %"class.v8::internal::ZoneVector.615", i32, [4 x i8] }>
%"class.v8::internal::ZoneVector.615" = type { %"class.std::__1::vector.616" }
%"class.std::__1::vector.616" = type { %"class.std::__1::__vector_base.617" }
%"class.std::__1::__vector_base.617" = type { %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"*, %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619", %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.v8::internal::compiler::InstructionOperand"* }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.v8::internal::ZoneAllocator.621" }
%"class.v8::internal::ZoneAllocator.621" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::InstructionBlock" = type <{ %"class.v8::internal::ZoneVector.559", %"class.v8::internal::ZoneVector.559", %"class.v8::internal::ZoneVector.565", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", i32, i32, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::ZoneVector.559" = type { %"class.std::__1::vector.560" }
%"class.std::__1::vector.560" = type { %"class.std::__1::__vector_base.561" }
%"class.std::__1::__vector_base.561" = type { %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"*, %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563", %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.v8::internal::compiler::RpoNumber"* }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.565" = type { %"class.std::__1::vector.566" }
%"class.std::__1::vector.566" = type { %"class.std::__1::__vector_base.567" }
%"class.std::__1::__vector_base.567" = type { %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"**, %"class.std::__1::__compressed_pair.574" }
%"class.v8::internal::compiler::PhiInstruction" = type { i32, %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::ZoneVector.568" }
%"class.v8::internal::ZoneVector.568" = type { %"class.std::__1::vector.569" }
%"class.std::__1::vector.569" = type { %"class.std::__1::__vector_base.570" }
%"class.std::__1::__vector_base.570" = type { i32*, i32*, %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.357", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.357" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.v8::internal::ZoneAllocator.573" }
%"class.v8::internal::ZoneAllocator.573" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575", %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.v8::internal::compiler::PhiInstruction"** }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.v8::internal::ZoneAllocator.577" }
%"class.v8::internal::ZoneAllocator.577" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::RpoNumber" = type { i32 }
%"class.v8::internal::compiler::InstructionScheduler" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::ZoneVector.673", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::ZoneVector.673", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::ZoneMap.692", %"class.v8::base::Optional" }
%"class.v8::internal::ZoneVector.673" = type { %"class.std::__1::vector.674" }
%"class.std::__1::vector.674" = type { %"class.std::__1::__vector_base.675" }
%"class.std::__1::__vector_base.675" = type { %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690", %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::ZoneAllocator.688" }
%"class.v8::internal::ZoneMap.692" = type { %"class.std::__1::map.693" }
%"class.std::__1::map.693" = type { %"class.std::__1::__tree.694" }
%"class.std::__1::__tree.694" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.695", %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.583", %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.v8::internal::ZoneAllocator.697" }
%"class.v8::internal::ZoneAllocator.697" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.701 }
%union.anon.701 = type { %"class.v8::base::RandomNumberGenerator" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.v8::internal::compiler::InstructionSequence" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneMap", %"class.std::__1::map.589", %"class.v8::internal::ZoneVector.598", %"class.v8::internal::ZoneVector.559", %"class.v8::internal::ZoneDeque", i32, %"class.v8::internal::ZoneDeque.630", %"class.v8::internal::ZoneVector.643", i32, %"class.v8::internal::ZoneVector.650", %"class.v8::internal::compiler::InstructionBlock"* }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.13", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.332", %"class.std::__1::unique_ptr.333", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.339", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.354", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.361", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.371", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.381", %"struct.std::__1::atomic.56", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.415", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.432"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.433", i32, i8, i8, i32, i32, %"class.std::__1::vector.439", %"class.std::__1::vector.439", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.446", i64, %"class.std::__1::unordered_map.447", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.205", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.64", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.506", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.512", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.546", %"class.std::__1::vector.550", %"class.std::__1::vector.550", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.8", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.41", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.65", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.69", %"class.std::__1::vector.69", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.82", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"class.std::__1::shared_ptr.166", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.167", %"class.std::__1::unique_ptr.193", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.199", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.212", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set", i8, [7 x i8], %"class.std::__1::unordered_map.241", %"class.std::__1::unordered_map.267", %"class.std::__1::unordered_map.241", %"class.std::__1::unordered_map.291", %"class.std::__1::vector.319", i8, %"class.std::__1::unique_ptr.326", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.19", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.33", [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.36", %"struct.std::__1::atomic.36", %"struct.std::__1::atomic.36" }
%"struct.std::__1::atomic.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i64 }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.45" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type opaque
%"class.v8::internal::CodeSpace" = type opaque
%"class.v8::internal::OldLargeObjectSpace" = type opaque
%"class.v8::internal::CodeLargeObjectSpace" = type opaque
%"class.v8::internal::NewLargeObjectSpace" = type opaque
%"class.v8::internal::ReadOnlySpace" = type opaque
%"class.v8::internal::OldSpace" = type opaque
%"class.v8::internal::MapSpace" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type opaque
%"class.v8::internal::Space" = type opaque
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.56", %"struct.std::__1::atomic.60", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl.62" }
%"struct.std::__1::__cxx_atomic_impl.62" = type { %"struct.std::__1::__cxx_atomic_base_impl.63" }
%"struct.std::__1::__cxx_atomic_base_impl.63" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.64" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__cxx_atomic_impl.67" }
%"struct.std::__1::__cxx_atomic_impl.67" = type { %"struct.std::__1::__cxx_atomic_base_impl.68" }
%"struct.std::__1::__cxx_atomic_base_impl.68" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.71" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type opaque
%"class.v8::internal::MinorMarkCompactCollector" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type opaque
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.166" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type opaque
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.167" = type { %"class.std::__1::__hash_table.168" }
%"class.std::__1::__hash_table.168" = type <{ %"class.std::__1::unique_ptr.169", %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.187", [4 x i8] }>
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171", %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.std::__1::__hash_node_base.172"** }
%"struct.std::__1::__hash_node_base.172" = type { %"struct.std::__1::__hash_node_base.172"* }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.std::__1::__bucket_list_deallocator.174" }
%"class.std::__1::__bucket_list_deallocator.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.std::__1::__hash_node_base.172" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.205", %"class.std::__1::vector.205" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.218" }
%"class.std::__1::__hash_table.218" = type <{ %"class.std::__1::unique_ptr.219", %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.236", [4 x i8] }>
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221", %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::__hash_node_base.222"** }
%"struct.std::__1::__hash_node_base.222" = type { %"struct.std::__1::__hash_node_base.222"* }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.std::__1::__bucket_list_deallocator.224" }
%"class.std::__1::__bucket_list_deallocator.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::__hash_node_base.222" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unordered_map.267" = type { %"class.std::__1::__hash_table.268" }
%"class.std::__1::__hash_table.268" = type <{ %"class.std::__1::unique_ptr.269", %"class.std::__1::__compressed_pair.279", %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.287", [4 x i8] }>
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271", %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.272"** }
%"struct.std::__1::__hash_node_base.272" = type { %"struct.std::__1::__hash_node_base.272"* }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.std::__1::__bucket_list_deallocator.274" }
%"class.std::__1::__bucket_list_deallocator.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.272" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unordered_map.241" = type { %"class.std::__1::__hash_table.242" }
%"class.std::__1::__hash_table.242" = type <{ %"class.std::__1::unique_ptr.243", %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.258", %"class.std::__1::__compressed_pair.261", [4 x i8] }>
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245", %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base.246"** }
%"struct.std::__1::__hash_node_base.246" = type { %"struct.std::__1::__hash_node_base.246"* }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.std::__1::__bucket_list_deallocator.248" }
%"class.std::__1::__bucket_list_deallocator.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.std::__1::__hash_node_base.246" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unordered_map.291" = type { %"class.std::__1::__hash_table.292" }
%"class.std::__1::__hash_table.292" = type <{ %"class.std::__1::unique_ptr.293", %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.308", %"class.std::__1::__compressed_pair.313", [4 x i8] }>
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295", %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.std::__1::__hash_node_base.296"** }
%"struct.std::__1::__hash_node_base.296" = type { %"struct.std::__1::__hash_node_base.296"* }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.std::__1::__bucket_list_deallocator.298" }
%"class.std::__1::__bucket_list_deallocator.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"struct.std::__1::__hash_node_base.296" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::vector.319" = type { %"class.std::__1::__vector_base.320" }
%"class.std::__1::__vector_base.320" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.321" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type opaque
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.205" }
%"class.std::__1::shared_ptr.332" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type opaque
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type opaque
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.339" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type opaque
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type opaque
%"class.v8::internal::StubCache" = type opaque
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type opaque
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.340", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.346", %"class.v8::internal::DetachableVector.347", %"class.v8::internal::DetachableVector.346", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.347" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.346" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type opaque
%"class.v8::internal::EternalHandles" = type opaque
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.348" }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.354" = type { %"class.std::__1::__vector_base.355" }
%"class.std::__1::__vector_base.355" = type { i32*, i32*, %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.361" = type { %"struct.std::__1::__atomic_base.362" }
%"struct.std::__1::__atomic_base.362" = type { %"struct.std::__1::__cxx_atomic_impl.363" }
%"struct.std::__1::__cxx_atomic_impl.363" = type { %"struct.std::__1::__cxx_atomic_base_impl.364" }
%"struct.std::__1::__cxx_atomic_base_impl.364" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.371" = type { %"struct.std::__1::__atomic_base.372" }
%"struct.std::__1::__atomic_base.372" = type { %"struct.std::__1::__cxx_atomic_impl.373" }
%"struct.std::__1::__cxx_atomic_impl.373" = type { %"struct.std::__1::__cxx_atomic_base_impl.374" }
%"struct.std::__1::__cxx_atomic_base_impl.374" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.381" = type { %"class.std::__1::__hash_table.382" }
%"class.std::__1::__hash_table.382" = type <{ %"class.std::__1::unique_ptr.383", %"class.std::__1::__compressed_pair.393", %"class.std::__1::__compressed_pair.398", %"class.std::__1::__compressed_pair.401", [4 x i8] }>
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385", %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.386"** }
%"struct.std::__1::__hash_node_base.386" = type { %"struct.std::__1::__hash_node_base.386"* }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.std::__1::__bucket_list_deallocator.388" }
%"class.std::__1::__bucket_list_deallocator.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"struct.std::__1::__hash_node_base.386" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.407", %"class.v8::internal::Handle.413", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.414", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.413" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.414" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type opaque
%"class.std::__1::unique_ptr.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type opaque
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.427" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.421"**, %"struct.std::__1::pair.421"**, %"struct.std::__1::pair.421"**, %"class.std::__1::__compressed_pair.422" }
%"struct.std::__1::pair.421" = type opaque
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"struct.std::__1::pair.421"** }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.432" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.366", i32, %"class.v8::Local.12" }
%"class.v8::Local.366" = type { %"class.v8::Promise"* }
%"class.v8::Local.12" = type { %"class.v8::Value"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type opaque
%"class.std::__1::vector.439" = type { %"class.std::__1::__vector_base.440" }
%"class.std::__1::__vector_base.440" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.446" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.447" = type { %"class.std::__1::__hash_table.448" }
%"class.std::__1::__hash_table.448" = type <{ %"class.std::__1::unique_ptr.449", %"class.std::__1::__compressed_pair.459", %"class.std::__1::__compressed_pair.464", %"class.std::__1::__compressed_pair.469", [4 x i8] }>
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451", %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"struct.std::__1::__hash_node_base.452"** }
%"struct.std::__1::__hash_node_base.452" = type { %"struct.std::__1::__hash_node_base.452"* }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.std::__1::__bucket_list_deallocator.454" }
%"class.std::__1::__bucket_list_deallocator.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"struct.std::__1::__hash_node_base.452" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.64" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.475", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.504", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.475" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.500, %union.anon.502, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.500 = type { i64 }
%union.anon.502 = type { i64 }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.504" = type { %"class.v8::PersistentBase.505" }
%"class.v8::PersistentBase.505" = type { %"class.v8::Context"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.476", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.476" = type { %"class.std::__1::__hash_table.477" }
%"class.std::__1::__hash_table.477" = type <{ %"class.std::__1::unique_ptr.478", %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.493", %"class.std::__1::__compressed_pair.496", [4 x i8] }>
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480", %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"struct.std::__1::__hash_node_base.481"** }
%"struct.std::__1::__hash_node_base.481" = type { %"struct.std::__1::__hash_node_base.481"* }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.std::__1::__bucket_list_deallocator.483" }
%"class.std::__1::__bucket_list_deallocator.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"struct.std::__1::__hash_node_base.481" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type opaque
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.367", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.367" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.520" }
%"class.std::__1::unordered_map.520" = type { %"class.std::__1::__hash_table.521" }
%"class.std::__1::__hash_table.521" = type <{ %"class.std::__1::unique_ptr.522", %"class.std::__1::__compressed_pair.532", %"class.std::__1::__compressed_pair.537", %"class.std::__1::__compressed_pair.540", [4 x i8] }>
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524", %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.std::__1::__hash_node_base.525"** }
%"struct.std::__1::__hash_node_base.525" = type { %"struct.std::__1::__hash_node_base.525"* }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.std::__1::__bucket_list_deallocator.527" }
%"class.std::__1::__bucket_list_deallocator.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"struct.std::__1::__hash_node_base.525" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.546" = type { %"struct.std::__1::__atomic_base.547" }
%"struct.std::__1::__atomic_base.547" = type { %"struct.std::__1::__cxx_atomic_impl.548" }
%"struct.std::__1::__cxx_atomic_impl.548" = type { %"struct.std::__1::__cxx_atomic_base_impl.549" }
%"struct.std::__1::__cxx_atomic_base_impl.549" = type { %"class.std::__1::vector.550"* }
%"class.std::__1::vector.550" = type { %"class.std::__1::__vector_base.551" }
%"class.std::__1::__vector_base.551" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.552" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.557" }
%"class.std::__1::vector.557" = type { %"class.std::__1::__vector_base.558" }
%"class.std::__1::__vector_base.558" = type { %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"**, %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579", %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.v8::internal::compiler::InstructionBlock"** }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.v8::internal::ZoneAllocator.581" }
%"class.v8::internal::ZoneAllocator.581" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.582", %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583", %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.v8::internal::ZoneAllocator.585" }
%"class.v8::internal::ZoneAllocator.585" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::map.589" = type { %"class.std::__1::__tree.590" }
%"class.std::__1::__tree.590" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.591", %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.583", %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"class.v8::internal::ZoneAllocator.593" }
%"class.v8::internal::ZoneAllocator.593" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::internal::ZoneVector.598" = type { %"class.std::__1::vector.599" }
%"class.std::__1::vector.599" = type { %"class.std::__1::__vector_base.600" }
%"class.std::__1::__vector_base.600" = type { %"class.v8::internal::compiler::Constant"*, %"class.v8::internal::compiler::Constant"*, %"class.std::__1::__compressed_pair.601" }
%"class.v8::internal::compiler::Constant" = type { i32, i8, i64 }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602", %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.v8::internal::compiler::Constant"* }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"class.v8::internal::ZoneAllocator.604" }
%"class.v8::internal::ZoneAllocator.604" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque.605" }
%"class.std::__1::deque.605" = type { %"class.std::__1::__deque_base.606" }
%"class.std::__1::__deque_base.606" = type { %"struct.std::__1::__split_buffer.607", i64, %"class.std::__1::__compressed_pair.626" }
%"struct.std::__1::__split_buffer.607" = type { %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"***, %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623", %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.v8::internal::compiler::Instruction"*** }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.625", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.625" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction **>::FreeBlock" = type opaque
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.v8::internal::RecyclingZoneAllocator.628" }
%"class.v8::internal::RecyclingZoneAllocator.628" = type { %"class.v8::internal::ZoneAllocator.629", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.629" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction *>::FreeBlock" = type opaque
%"class.v8::internal::ZoneDeque.630" = type { %"class.std::__1::deque.631" }
%"class.std::__1::deque.631" = type { %"class.std::__1::__deque_base.632" }
%"class.std::__1::__deque_base.632" = type { %"struct.std::__1::__split_buffer.633", i64, %"class.std::__1::__compressed_pair.639" }
%"struct.std::__1::__split_buffer.633" = type { %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"***, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635", %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::compiler::ReferenceMap"*** }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.v8::internal::RecyclingZoneAllocator.637" }
%"class.v8::internal::RecyclingZoneAllocator.637" = type { %"class.v8::internal::ZoneAllocator.638", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.638" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap **>::FreeBlock" = type opaque
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.v8::internal::RecyclingZoneAllocator.641" }
%"class.v8::internal::RecyclingZoneAllocator.641" = type { %"class.v8::internal::ZoneAllocator.642", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.642" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap *>::FreeBlock" = type opaque
%"class.v8::internal::ZoneVector.643" = type { %"class.std::__1::vector.644" }
%"class.std::__1::vector.644" = type { %"class.std::__1::__vector_base.645" }
%"class.std::__1::__vector_base.645" = type { i8*, i8*, %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647", %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.647" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::ZoneAllocator.649" }
%"class.v8::internal::ZoneAllocator.649" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.650" = type { %"class.std::__1::vector.651" }
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.v8::internal::compiler::DeoptimizationEntry"*, %"class.v8::internal::compiler::DeoptimizationEntry"*, %"class.std::__1::__compressed_pair.669" }
%"class.v8::internal::compiler::DeoptimizationEntry" = type { %"class.v8::internal::compiler::FrameStateDescriptor"*, i8, i8, [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }
%"class.v8::internal::compiler::FrameStateDescriptor" = type { i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::compiler::OutputFrameStateCombine", i64, i64, i64, i64, %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::MaybeHandle", %"class.v8::internal::compiler::FrameStateDescriptor"* }
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::compiler::OutputFrameStateCombine" = type { i64 }
%"class.v8::internal::compiler::StateValueList" = type { %"class.v8::internal::ZoneVector.653", %"class.v8::internal::ZoneVector.661" }
%"class.v8::internal::ZoneVector.653" = type { %"class.std::__1::vector.654" }
%"class.std::__1::vector.654" = type { %"class.std::__1::__vector_base.655" }
%"class.std::__1::__vector_base.655" = type { %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.std::__1::__compressed_pair.657" }
%"class.v8::internal::compiler::StateValueDescriptor" = type { i8, %"class.v8::internal::MachineType", %union.anon.656 }
%"class.v8::internal::MachineType" = type { i8, i8 }
%union.anon.656 = type { i64 }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658", %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.v8::internal::compiler::StateValueDescriptor"* }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.v8::internal::ZoneAllocator.660" }
%"class.v8::internal::ZoneAllocator.660" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.661" = type { %"class.std::__1::vector.662" }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"class.v8::internal::compiler::StateValueList"**, %"class.v8::internal::compiler::StateValueList"**, %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665", %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.v8::internal::compiler::StateValueList"** }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.v8::internal::ZoneAllocator.667" }
%"class.v8::internal::ZoneAllocator.667" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"struct.v8::internal::compiler::FeedbackSource" = type <{ %"class.v8::internal::Handle.668", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.v8::internal::Handle.668" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670", %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::compiler::DeoptimizationEntry"* }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::ZoneAllocator.672" }
%"class.v8::internal::ZoneAllocator.672" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::InstructionScheduler::SchedulingQueueBase" = type { %"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::ZoneLinkedList" }
%"class.v8::internal::ZoneLinkedList" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.702" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.v8::internal::ZoneAllocator.704" }
%"class.v8::internal::ZoneAllocator.704" = type { %"class.v8::internal::Zone"* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* }
%"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue" = type { %"class.v8::internal::compiler::InstructionScheduler::SchedulingQueueBase" }
%"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue" = type { %"class.v8::internal::compiler::InstructionScheduler::SchedulingQueueBase" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.705" }
%"struct.std::__1::pair.705" = type { i32, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer.710" = type { %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.681", %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::RecyclingZoneAllocator.683"* }

$_ZN2v88internal8compiler20InstructionScheduler8ScheduleINS2_20StressSchedulerQueueEEEvv = comdat any

$_ZN2v88internal8compiler20InstructionScheduler8ScheduleINS2_22CriticalPathFirstQueueEEEvv = comdat any

$_ZNSt3__15dequeIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS6_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS7_EEE9push_backERKS7_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS7_EEE9push_backEOS7_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS7_EEE10push_frontEOS7_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeERNS2_22RecyclingZoneAllocatorIS7_EEE9push_backEOS7_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeERNS2_22RecyclingZoneAllocatorIS7_EEE10push_frontERKS7_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZN2v88internal40FLAG_turbo_stress_instruction_schedulingE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal16FLAG_random_seedE = external local_unnamed_addr global i32, align 4
@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"storage_.is_populated_\00", align 1

@_ZN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeC1EPNS0_4ZoneEPNS1_11InstructionE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Instruction"*), void (%"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Instruction"*)* @_ZN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeC2EPNS0_4ZoneEPNS1_11InstructionE
@_ZN2v88internal8compiler20InstructionSchedulerC1EPNS0_4ZoneEPNS1_19InstructionSequenceE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::InstructionSequence"*), void (%"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::InstructionSequence"*)* @_ZN2v88internal8compiler20InstructionSchedulerC2EPNS0_4ZoneEPNS1_19InstructionSequenceE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler20InstructionScheduler19SchedulingQueueBase7AddNodeEPNS2_17ScheduleGraphNodeE(%"class.v8::internal::compiler::InstructionScheduler::SchedulingQueueBase"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::SchedulingQueueBase", %"class.v8::internal::compiler::InstructionScheduler::SchedulingQueueBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::__list_node_base"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::SchedulingQueueBase", %"class.v8::internal::compiler::InstructionScheduler::SchedulingQueueBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = inttoptr i64 %6 to %"struct.std::__1::__list_node_base"*
  %9 = icmp eq %"struct.std::__1::__list_node_base"* %7, %8
  br i1 %9, label %28, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %1, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  br label %13

13:                                               ; preds = %10, %22
  %14 = phi %"struct.std::__1::__list_node_base"* [ %8, %10 ], [ %26, %22 ]
  %15 = phi i64 [ %6, %10 ], [ %25, %22 ]
  %16 = inttoptr i64 %15 to %"struct.std::__1::__list_node"*
  %17 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %16, i64 0, i32 1
  %18 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %18, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %20, %12
  br i1 %21, label %28, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %14, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__list_node_base"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = inttoptr i64 %25 to %"struct.std::__1::__list_node_base"*
  %27 = icmp eq %"struct.std::__1::__list_node_base"* %7, %26
  br i1 %27, label %28, label %13

28:                                               ; preds = %13, %22, %2
  %29 = phi i64 [ %6, %2 ], [ %15, %13 ], [ %25, %22 ]
  %30 = phi %"struct.std::__1::__list_node_base"* [ %7, %2 ], [ %14, %13 ], [ %7, %22 ]
  %31 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::SchedulingQueueBase", %"class.v8::internal::compiler::InstructionScheduler::SchedulingQueueBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %32 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %31, align 8, !noalias !2
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %32, i64 0, i32 2
  %34 = load i64, i64* %33, align 8, !noalias !2
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %32, i64 0, i32 3
  %36 = load i64, i64* %35, align 8, !noalias !2
  %37 = sub i64 %36, %34
  %38 = icmp ult i64 %37, 24
  br i1 %38, label %39, label %41, !prof !5

39:                                               ; preds = %28
  %40 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %32, i64 24) #5, !noalias !2
  br label %43

41:                                               ; preds = %28
  %42 = add i64 %34, 24
  store i64 %42, i64* %33, align 8, !noalias !2
  br label %43

43:                                               ; preds = %39, %41
  %44 = phi i64 [ %40, %39 ], [ %34, %41 ]
  %45 = inttoptr i64 %44 to %"struct.std::__1::__list_node"*
  %46 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %45, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %46, align 8, !noalias !2
  %47 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %45, i64 0, i32 1
  %48 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %47 to i64*
  store i64 %3, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %45, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 0, i32 0
  %51 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %51, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %49, %"struct.std::__1::__list_node_base"** %52, align 8
  %53 = inttoptr i64 %29 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = inttoptr i64 %44 to i64*
  store i64 %54, i64* %55, align 8
  store %"struct.std::__1::__list_node_base"* %49, %"struct.std::__1::__list_node_base"** %50, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %45, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %30, %"struct.std::__1::__list_node_base"** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::SchedulingQueueBase", %"class.v8::internal::compiler::InstructionScheduler::SchedulingQueueBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %57, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* @_ZN2v88internal8compiler20InstructionScheduler22CriticalPathFirstQueue16PopBestCandidateEi(%"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue", %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0
  %5 = ptrtoint %"class.std::__1::list"* %3 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue", %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::__list_node_base"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = inttoptr i64 %8 to %"struct.std::__1::__list_node_base"*
  %10 = icmp eq %"struct.std::__1::__list_node_base"* %4, %9
  br i1 %10, label %26, label %17

11:                                               ; preds = %17
  %12 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %18, i64 0, i32 1
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = inttoptr i64 %14 to %"struct.std::__1::__list_node_base"*
  %16 = icmp eq %"struct.std::__1::__list_node_base"* %4, %15
  br i1 %16, label %26, label %17

17:                                               ; preds = %2, %11
  %18 = phi %"struct.std::__1::__list_node_base"* [ %15, %11 ], [ %9, %2 ]
  %19 = phi i64 [ %14, %11 ], [ %8, %2 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__list_node"*
  %21 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %20, i64 0, i32 1
  %22 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %22, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, %1
  br i1 %25, label %11, label %26

26:                                               ; preds = %17, %11, %2
  %27 = phi i64 [ %5, %2 ], [ %5, %11 ], [ %19, %17 ]
  %28 = inttoptr i64 %27 to %"struct.std::__1::__list_node_base"*
  %29 = icmp eq %"struct.std::__1::__list_node_base"* %4, %28
  br i1 %29, label %48, label %30

30:                                               ; preds = %26
  %31 = inttoptr i64 %27 to %"struct.std::__1::__list_node"*
  %32 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %31, i64 0, i32 1
  %33 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %28, i64 0, i32 1
  %35 = bitcast %"struct.std::__1::__list_node_base"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %28, i64 0, i32 0
  %38 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %38, i64 0, i32 1
  %40 = bitcast %"struct.std::__1::__list_node_base"** %39 to i64*
  store i64 %36, i64* %40, align 8
  %41 = inttoptr i64 %27 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.std::__1::__list_node_base"** %34 to i64**
  %44 = load i64*, i64** %43, align 8
  store i64 %42, i64* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue", %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, -1
  store i64 %47, i64* %45, align 8
  br label %48

48:                                               ; preds = %26, %30
  %49 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* [ %33, %30 ], [ null, %26 ]
  ret %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* @_ZN2v88internal8compiler20InstructionScheduler20StressSchedulerQueue16PopBestCandidateEi(%"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue", %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %4 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %3, align 8
  %5 = ptrtoint %"struct.std::__1::__list_node_base"* %4 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue", %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::InstructionScheduler"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %7, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !6
  %10 = icmp eq i8 %9, 1
  br i1 %10, label %12, label %11, !prof !7

11:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)) #6
  unreachable

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %7, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue", %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = tail call i32 @_ZN2v84base21RandomNumberGenerator7NextIntEi(%"class.v8::base::RandomNumberGenerator"* %13, i32 %16) #5
  %18 = sext i32 %17 to i64
  %19 = icmp sgt i32 %17, -1
  br i1 %19, label %41, label %20

20:                                               ; preds = %12
  %21 = bitcast %"struct.std::__1::__list_node_base"* %4 to i64*
  %22 = sub nsw i64 0, %18
  %23 = and i64 %22, 7
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %36, label %25

25:                                               ; preds = %20, %25
  %26 = phi i64* [ %31, %25 ], [ %21, %20 ]
  %27 = phi i64 [ %30, %25 ], [ %18, %20 ]
  %28 = phi i64 [ %32, %25 ], [ %23, %20 ]
  %29 = load i64, i64* %26, align 8
  %30 = add nsw i64 %27, 1
  %31 = inttoptr i64 %29 to i64*
  %32 = add i64 %28, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %25, !llvm.loop !8

34:                                               ; preds = %25
  %35 = inttoptr i64 %29 to i64*
  br label %36

36:                                               ; preds = %20, %34
  %37 = phi i64 [ undef, %20 ], [ %29, %34 ]
  %38 = phi i64* [ %21, %20 ], [ %35, %34 ]
  %39 = phi i64 [ %18, %20 ], [ %30, %34 ]
  %40 = icmp ugt i32 %17, -8
  br i1 %40, label %67, label %52

41:                                               ; preds = %12
  %42 = icmp eq i32 %17, 0
  br i1 %42, label %67, label %43

43:                                               ; preds = %41, %43
  %44 = phi %"struct.std::__1::__list_node_base"* [ %51, %43 ], [ %4, %41 ]
  %45 = phi i64 [ %49, %43 ], [ %18, %41 ]
  %46 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %44, i64 0, i32 1
  %47 = bitcast %"struct.std::__1::__list_node_base"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = add nsw i64 %45, -1
  %50 = icmp sgt i64 %49, 0
  %51 = inttoptr i64 %48 to %"struct.std::__1::__list_node_base"*
  br i1 %50, label %43, label %67

52:                                               ; preds = %36, %52
  %53 = phi i64* [ %66, %52 ], [ %38, %36 ]
  %54 = phi i64 [ %64, %52 ], [ %39, %36 ]
  %55 = bitcast i64* %53 to i64********
  %56 = load i64*******, i64******** %55, align 8
  %57 = load i64******, i64******* %56, align 8
  %58 = load i64*****, i64****** %57, align 8
  %59 = load i64****, i64***** %58, align 8
  %60 = load i64***, i64**** %59, align 8
  %61 = load i64**, i64*** %60, align 8
  %62 = load i64*, i64** %61, align 8
  %63 = load i64, i64* %62, align 8
  %64 = add nsw i64 %54, 8
  %65 = icmp eq i64 %64, 0
  %66 = inttoptr i64 %63 to i64*
  br i1 %65, label %67, label %52

67:                                               ; preds = %36, %52, %43, %41
  %68 = phi i64 [ %5, %41 ], [ %48, %43 ], [ %37, %36 ], [ %63, %52 ]
  %69 = inttoptr i64 %68 to %"struct.std::__1::__list_node"*
  %70 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %69, i64 0, i32 1
  %71 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %70, align 8
  %72 = inttoptr i64 %68 to %"struct.std::__1::__list_node_base"*
  %73 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %72, i64 0, i32 1
  %74 = bitcast %"struct.std::__1::__list_node_base"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %72, i64 0, i32 0
  %77 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %76, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %77, i64 0, i32 1
  %79 = bitcast %"struct.std::__1::__list_node_base"** %78 to i64*
  store i64 %75, i64* %79, align 8
  %80 = inttoptr i64 %68 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"struct.std::__1::__list_node_base"** %73 to i64**
  %83 = load i64*, i64** %82, align 8
  store i64 %81, i64* %83, align 8
  %84 = load i64, i64* %14, align 8
  %85 = add i64 %84, -1
  store i64 %85, i64* %14, align 8
  ret %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %71
}

declare i32 @_ZN2v84base21RandomNumberGenerator7NextIntEi(%"class.v8::base::RandomNumberGenerator"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeC2EPNS0_4ZoneEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* nocapture, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Instruction"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::Instruction"* %2, %"class.v8::internal::compiler::Instruction"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %0, i64 0, i32 1
  %6 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %7 = bitcast %"class.v8::internal::ZoneDeque.676"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #5
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  %9 = bitcast %"struct.std::__1::__compressed_pair_elem.682"* %8 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %11 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #5
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %13 = bitcast %"struct.std::__1::__compressed_pair_elem.686"* %12 to i64*
  store i64 %6, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %0, i64 0, i32 2
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %0, i64 0, i32 3
  %17 = tail call i32 @_ZN2v88internal8compiler20InstructionScheduler21GetInstructionLatencyEPKNS1_11InstructionE(%"class.v8::internal::compiler::Instruction"* %2) #5
  store i32 %17, i32* %16, align 4
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %0, i64 0, i32 4
  store i32 -1, i32* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %0, i64 0, i32 5
  store i32 -1, i32* %19, align 4
  ret void
}

declare i32 @_ZN2v88internal8compiler20InstructionScheduler21GetInstructionLatencyEPKNS1_11InstructionE(%"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler20InstructionScheduler17ScheduleGraphNode12AddSuccessorEPS3_(%"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = icmp eq i64 %10, 0
  %12 = shl i64 %10, 6
  %13 = add i64 %12, -1
  %14 = select i1 %11, i64 0, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  %20 = icmp eq i64 %14, %19
  %21 = inttoptr i64 %9 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %22 = inttoptr i64 %6 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  br i1 %20, label %23, label %30

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque.677"* %24) #5
  %25 = load i64, i64* %17, align 8
  %26 = load i64, i64* %15, align 8
  %27 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %7, align 8
  %28 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %4, align 8
  %29 = add i64 %26, %25
  br label %30

30:                                               ; preds = %23, %2
  %31 = phi i64 [ %29, %23 ], [ %19, %2 ]
  %32 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %28, %23 ], [ %22, %2 ]
  %33 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %27, %23 ], [ %21, %2 ]
  %34 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %32, %33
  br i1 %34, label %42, label %35

35:                                               ; preds = %30
  %36 = lshr i64 %31, 9
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %33, i64 %36
  %38 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %37, align 8
  %39 = and i64 %31, 511
  %40 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %38, i64 %39
  %41 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %40 to i64*
  br label %42

42:                                               ; preds = %30, %35
  %43 = phi i64* [ %41, %35 ], [ null, %30 ]
  store i64 %3, i64* %43, align 8
  %44 = load i64, i64* %17, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %17, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %1, i64 0, i32 2
  %47 = load i32, i32* %46, align 8
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %46, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler20InstructionSchedulerC2EPNS0_4ZoneEPNS1_19InstructionSequenceE(%"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::InstructionSequence"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::base::Optional", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 0
  store %"class.v8::internal::Zone"* %1, %"class.v8::internal::Zone"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::InstructionSequence"* %2, %"class.v8::internal::compiler::InstructionSequence"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2
  %8 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %10 = bitcast %"struct.std::__1::__compressed_pair_elem.691"* %9 to i64*
  %11 = bitcast %"class.v8::internal::ZoneVector.673"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #5
  store i64 %8, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %14 = bitcast %"struct.std::__1::__compressed_pair_elem.691"* %13 to i64*
  %15 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 32, i1 false)
  store i64 %8, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 1
  %19 = bitcast %"struct.std::__1::__compressed_pair_elem.696"* %18 to i64*
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::__compressed_pair.695"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  store i64 %8, i64* %19, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %24, %"class.std::__1::__tree_end_node"** %17, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %union.anon.701* %26 to i8*
  store i8 0, i8* %27, align 8
  %28 = load i8, i8* @_ZN2v88internal40FLAG_turbo_stress_instruction_schedulingE, align 1, !range !6
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %47, label %30

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #5
  store i8 1, i8* %31, align 8
  %32 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %33 = load i32, i32* @_ZN2v88internal16FLAG_random_seedE, align 4
  %34 = sext i32 %33 to i64
  call void @_ZN2v84base21RandomNumberGenerator7SetSeedEl(%"class.v8::base::RandomNumberGenerator"* %32, i64 %34) #5
  %35 = load i8, i8* %31, align 8, !range !6
  %36 = icmp eq i8 %35, 0
  %37 = load i8, i8* %25, align 8, !range !6
  %38 = icmp eq i8 %37, 0
  br i1 %36, label %44, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %41 = bitcast %"class.v8::base::RandomNumberGenerator"* %40 to i8*
  %42 = bitcast %"class.v8::base::RandomNumberGenerator"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #5
  br i1 %38, label %43, label %46

43:                                               ; preds = %39
  store i8 1, i8* %25, align 8
  br label %46

44:                                               ; preds = %30
  br i1 %38, label %46, label %45

45:                                               ; preds = %44
  store i8 0, i8* %25, align 8
  br label %46

46:                                               ; preds = %39, %43, %44, %45
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #5
  br label %47

47:                                               ; preds = %3, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler20InstructionScheduler10StartBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionScheduler"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSequence10StartBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionSequence"* %4, i32 %1) #5
  ret void
}

declare void @_ZN2v88internal8compiler19InstructionSequence10StartBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionSequence"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler20InstructionScheduler8EndBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionScheduler"*, i32) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2v88internal40FLAG_turbo_stress_instruction_schedulingE, align 1, !range !6
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN2v88internal8compiler20InstructionScheduler8ScheduleINS2_20StressSchedulerQueueEEEvv(%"class.v8::internal::compiler::InstructionScheduler"* %0)
  br label %7

6:                                                ; preds = %2
  tail call void @_ZN2v88internal8compiler20InstructionScheduler8ScheduleINS2_22CriticalPathFirstQueueEEEvv(%"class.v8::internal::compiler::InstructionScheduler"* %0)
  br label %7

7:                                                ; preds = %6, %5
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 1
  %9 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %8, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSequence8EndBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionSequence"* %9, i32 %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler20InstructionScheduler8ScheduleINS2_20StressSchedulerQueueEEEvv(%"class.v8::internal::compiler::InstructionScheduler"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue", align 8
  %3 = bitcast %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #5
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue", %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue"* %2, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::InstructionScheduler"* %0, %"class.v8::internal::compiler::InstructionScheduler"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue", %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue"* %2, i64 0, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::compiler::InstructionScheduler"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue", %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue", %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue", %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %13 = bitcast %"struct.std::__1::__compressed_pair_elem.703"* %12 to i64*
  store i64 %7, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %15 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %14, align 8, !noalias !10
  %16 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %16, align 8, !noalias !10
  %18 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %15, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0
  br label %360

21:                                               ; preds = %1, %47
  %22 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %23, %47 ], [ %15, %1 ]
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %22, i64 -1
  %24 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %24, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %26 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %24, i64 0, i32 1, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %28, 9
  %30 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %26, i64 %29
  %31 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %24, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %32 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %31, align 8
  %33 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %32, %26
  br i1 %33, label %47, label %34

34:                                               ; preds = %21
  %35 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %30, align 8
  %36 = and i64 %28, 511
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %35, i64 %36
  %38 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %24, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %28
  %41 = lshr i64 %40, 9
  %42 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %26, i64 %41
  %43 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %42, align 8
  %44 = and i64 %40, 511
  %45 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %43, i64 %44
  %46 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %37, %45
  br i1 %46, label %47, label %54

47:                                               ; preds = %73, %34, %21
  %48 = phi i32 [ 0, %34 ], [ 0, %21 ], [ %62, %73 ]
  %49 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %24, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = add nsw i32 %50, %48
  %52 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %24, i64 0, i32 4
  store i32 %51, i32* %52, align 8
  %53 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %23, %17
  br i1 %53, label %78, label %21

54:                                               ; preds = %34, %73
  %55 = phi i32 [ %62, %73 ], [ 0, %34 ]
  %56 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %76, %73 ], [ %37, %34 ]
  %57 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %74, %73 ], [ %30, %34 ]
  %58 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %56, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %58, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp sgt i32 %60, %55
  %62 = select i1 %61, i32 %60, i32 %55
  %63 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %56, i64 1
  %64 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %63 to i64
  %65 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %57 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %64, %66
  %68 = icmp eq i64 %67, 4096
  br i1 %68, label %69, label %73

69:                                               ; preds = %54
  %70 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %57, i64 1
  %71 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %70 to i64*
  %72 = load i64, i64* %71, align 8
  br label %73

73:                                               ; preds = %69, %54
  %74 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %70, %69 ], [ %57, %54 ]
  %75 = phi i64 [ %72, %69 ], [ %64, %54 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**
  %77 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %45, %76
  br i1 %77, label %47, label %54

78:                                               ; preds = %47
  %79 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %80 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %79, align 8
  %81 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %14, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0
  %83 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %80, %81
  br i1 %83, label %360, label %84

84:                                               ; preds = %78
  %85 = bitcast %"struct.std::__1::__list_node_base"** %10 to i64*
  %86 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue", %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue", %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  br label %95

88:                                               ; preds = %155
  %89 = icmp eq i64 %156, 0
  br i1 %89, label %360, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 1
  %92 = bitcast %"struct.std::__1::__list_node_base"** %10 to i64*
  %93 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue", %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue", %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  br label %159

95:                                               ; preds = %84, %155
  %96 = phi i64 [ 0, %84 ], [ %156, %155 ]
  %97 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %80, %84 ], [ %157, %155 ]
  %98 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %98, i64 0, i32 2
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %155

102:                                              ; preds = %95
  %103 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %98 to i64
  %104 = load i64, i64* %85, align 8
  %105 = inttoptr i64 %104 to %"struct.std::__1::__list_node_base"*
  %106 = icmp eq %"struct.std::__1::__list_node_base"* %86, %105
  br i1 %106, label %125, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %98, i64 0, i32 4
  %109 = load i32, i32* %108, align 8
  br label %110

110:                                              ; preds = %119, %107
  %111 = phi %"struct.std::__1::__list_node_base"* [ %105, %107 ], [ %123, %119 ]
  %112 = phi i64 [ %104, %107 ], [ %122, %119 ]
  %113 = inttoptr i64 %112 to %"struct.std::__1::__list_node"*
  %114 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %113, i64 0, i32 1
  %115 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %115, i64 0, i32 4
  %117 = load i32, i32* %116, align 8
  %118 = icmp slt i32 %117, %109
  br i1 %118, label %125, label %119

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %111, i64 0, i32 1
  %121 = bitcast %"struct.std::__1::__list_node_base"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %122 to %"struct.std::__1::__list_node_base"*
  %124 = icmp eq %"struct.std::__1::__list_node_base"* %86, %123
  br i1 %124, label %125, label %110

125:                                              ; preds = %119, %110, %102
  %126 = phi i64 [ %104, %102 ], [ %122, %119 ], [ %112, %110 ]
  %127 = phi %"struct.std::__1::__list_node_base"* [ %86, %102 ], [ %86, %119 ], [ %111, %110 ]
  %128 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %87, align 8, !noalias !13
  %129 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %128, i64 0, i32 2
  %130 = load i64, i64* %129, align 8, !noalias !13
  %131 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %128, i64 0, i32 3
  %132 = load i64, i64* %131, align 8, !noalias !13
  %133 = sub i64 %132, %130
  %134 = icmp ult i64 %133, 24
  br i1 %134, label %135, label %137, !prof !5

135:                                              ; preds = %125
  %136 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %128, i64 24) #5, !noalias !13
  br label %139

137:                                              ; preds = %125
  %138 = add i64 %130, 24
  store i64 %138, i64* %129, align 8, !noalias !13
  br label %139

139:                                              ; preds = %135, %137
  %140 = phi i64 [ %136, %135 ], [ %130, %137 ]
  %141 = inttoptr i64 %140 to %"struct.std::__1::__list_node"*
  %142 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %141, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %142, align 8, !noalias !13
  %143 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %141, i64 0, i32 1
  %144 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %143 to i64*
  store i64 %103, i64* %144, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %141, i64 0, i32 0
  %146 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %127, i64 0, i32 0
  %147 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %146, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %147, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %145, %"struct.std::__1::__list_node_base"** %148, align 8
  %149 = inttoptr i64 %126 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = inttoptr i64 %140 to i64*
  store i64 %150, i64* %151, align 8
  store %"struct.std::__1::__list_node_base"* %145, %"struct.std::__1::__list_node_base"** %146, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %141, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %127, %"struct.std::__1::__list_node_base"** %152, align 8
  %153 = load i64, i64* %11, align 8
  %154 = add i64 %153, 1
  store i64 %154, i64* %11, align 8
  br label %155

155:                                              ; preds = %95, %139
  %156 = phi i64 [ %96, %95 ], [ %154, %139 ]
  %157 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %97, i64 1
  %158 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %157, %81
  br i1 %158, label %88, label %95

159:                                              ; preds = %90, %356
  %160 = phi i64 [ %156, %90 ], [ %357, %356 ]
  %161 = phi i32 [ 0, %90 ], [ %358, %356 ]
  %162 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %163 = ptrtoint %"struct.std::__1::__list_node_base"* %162 to i64
  %164 = load %"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::InstructionScheduler"** %4, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %164, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %166 = load i8, i8* %165, align 8, !range !6
  %167 = icmp eq i8 %166, 1
  br i1 %167, label %169, label %168, !prof !7

168:                                              ; preds = %159
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)) #6
  unreachable

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %164, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %171 = trunc i64 %160 to i32
  %172 = call i32 @_ZN2v84base21RandomNumberGenerator7NextIntEi(%"class.v8::base::RandomNumberGenerator"* %170, i32 %171) #5
  %173 = sext i32 %172 to i64
  %174 = icmp sgt i32 %172, -1
  br i1 %174, label %196, label %175

175:                                              ; preds = %169
  %176 = bitcast %"struct.std::__1::__list_node_base"* %162 to i64*
  %177 = sub nsw i64 0, %173
  %178 = and i64 %177, 7
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %191, label %180

180:                                              ; preds = %175, %180
  %181 = phi i64* [ %186, %180 ], [ %176, %175 ]
  %182 = phi i64 [ %185, %180 ], [ %173, %175 ]
  %183 = phi i64 [ %187, %180 ], [ %178, %175 ]
  %184 = load i64, i64* %181, align 8
  %185 = add nsw i64 %182, 1
  %186 = inttoptr i64 %184 to i64*
  %187 = add i64 %183, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %180, !llvm.loop !16

189:                                              ; preds = %180
  %190 = inttoptr i64 %184 to i64*
  br label %191

191:                                              ; preds = %175, %189
  %192 = phi i64 [ undef, %175 ], [ %184, %189 ]
  %193 = phi i64* [ %176, %175 ], [ %190, %189 ]
  %194 = phi i64 [ %173, %175 ], [ %185, %189 ]
  %195 = icmp ugt i32 %172, -8
  br i1 %195, label %222, label %207

196:                                              ; preds = %169
  %197 = icmp eq i32 %172, 0
  br i1 %197, label %222, label %198

198:                                              ; preds = %196, %198
  %199 = phi %"struct.std::__1::__list_node_base"* [ %206, %198 ], [ %162, %196 ]
  %200 = phi i64 [ %204, %198 ], [ %173, %196 ]
  %201 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %199, i64 0, i32 1
  %202 = bitcast %"struct.std::__1::__list_node_base"** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = add nsw i64 %200, -1
  %205 = icmp sgt i64 %204, 0
  %206 = inttoptr i64 %203 to %"struct.std::__1::__list_node_base"*
  br i1 %205, label %198, label %222

207:                                              ; preds = %191, %207
  %208 = phi i64* [ %221, %207 ], [ %193, %191 ]
  %209 = phi i64 [ %219, %207 ], [ %194, %191 ]
  %210 = bitcast i64* %208 to i64********
  %211 = load i64*******, i64******** %210, align 8
  %212 = load i64******, i64******* %211, align 8
  %213 = load i64*****, i64****** %212, align 8
  %214 = load i64****, i64***** %213, align 8
  %215 = load i64***, i64**** %214, align 8
  %216 = load i64**, i64*** %215, align 8
  %217 = load i64*, i64** %216, align 8
  %218 = load i64, i64* %217, align 8
  %219 = add nsw i64 %209, 8
  %220 = icmp eq i64 %219, 0
  %221 = inttoptr i64 %218 to i64*
  br i1 %220, label %222, label %207

222:                                              ; preds = %191, %207, %198, %196
  %223 = phi i64 [ %163, %196 ], [ %203, %198 ], [ %192, %191 ], [ %218, %207 ]
  %224 = inttoptr i64 %223 to %"struct.std::__1::__list_node"*
  %225 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %224, i64 0, i32 1
  %226 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %225, align 8
  %227 = inttoptr i64 %223 to %"struct.std::__1::__list_node_base"*
  %228 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %227, i64 0, i32 1
  %229 = bitcast %"struct.std::__1::__list_node_base"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %227, i64 0, i32 0
  %232 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %231, align 8
  %233 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %232, i64 0, i32 1
  %234 = bitcast %"struct.std::__1::__list_node_base"** %233 to i64*
  store i64 %230, i64* %234, align 8
  %235 = inttoptr i64 %223 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"struct.std::__1::__list_node_base"** %228 to i64**
  %238 = load i64*, i64** %237, align 8
  store i64 %236, i64* %238, align 8
  %239 = load i64, i64* %11, align 8
  %240 = add i64 %239, -1
  store i64 %240, i64* %11, align 8
  %241 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %226, null
  br i1 %241, label %356, label %242

242:                                              ; preds = %222
  %243 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %91, align 8
  %244 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %226, i64 0, i32 0
  %245 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %244, align 8
  %246 = call i32 @_ZN2v88internal8compiler19InstructionSequence14AddInstructionEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionSequence"* %243, %"class.v8::internal::compiler::Instruction"* %245) #5
  %247 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %226, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %248 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %247, align 8
  %249 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %226, i64 0, i32 1, i32 0, i32 0, i32 1
  %250 = load i64, i64* %249, align 8
  %251 = lshr i64 %250, 9
  %252 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %248, i64 %251
  %253 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %226, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %254 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %253, align 8
  %255 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %254, %248
  br i1 %255, label %354, label %256

256:                                              ; preds = %242
  %257 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %252, align 8
  %258 = and i64 %250, 511
  %259 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %257, i64 %258
  %260 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %226, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %261 = load i64, i64* %260, align 8
  %262 = add i64 %261, %250
  %263 = lshr i64 %262, 9
  %264 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %248, i64 %263
  %265 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %264, align 8
  %266 = and i64 %262, 511
  %267 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %265, i64 %266
  %268 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %259, %267
  br i1 %268, label %354, label %269

269:                                              ; preds = %256
  %270 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %226, i64 0, i32 3
  br label %271

271:                                              ; preds = %269, %349
  %272 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %259, %269 ], [ %352, %349 ]
  %273 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %252, %269 ], [ %350, %349 ]
  %274 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %272, align 8
  %275 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %274, i64 0, i32 2
  %276 = load i32, i32* %275, align 8
  %277 = add nsw i32 %276, -1
  store i32 %277, i32* %275, align 8
  %278 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %274, i64 0, i32 5
  %279 = load i32, i32* %278, align 4
  %280 = load i32, i32* %270, align 4
  %281 = add nsw i32 %280, %161
  %282 = icmp slt i32 %279, %281
  %283 = select i1 %282, i32 %281, i32 %279
  store i32 %283, i32* %278, align 4
  %284 = icmp eq i32 %277, 0
  br i1 %284, label %285, label %338

285:                                              ; preds = %271
  %286 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %274 to i64
  %287 = load i64, i64* %92, align 8
  %288 = inttoptr i64 %287 to %"struct.std::__1::__list_node_base"*
  %289 = icmp eq %"struct.std::__1::__list_node_base"* %93, %288
  br i1 %289, label %308, label %290

290:                                              ; preds = %285
  %291 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %274, i64 0, i32 4
  %292 = load i32, i32* %291, align 8
  br label %293

293:                                              ; preds = %302, %290
  %294 = phi %"struct.std::__1::__list_node_base"* [ %288, %290 ], [ %306, %302 ]
  %295 = phi i64 [ %287, %290 ], [ %305, %302 ]
  %296 = inttoptr i64 %295 to %"struct.std::__1::__list_node"*
  %297 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %296, i64 0, i32 1
  %298 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %297, align 8
  %299 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %298, i64 0, i32 4
  %300 = load i32, i32* %299, align 8
  %301 = icmp slt i32 %300, %292
  br i1 %301, label %308, label %302

302:                                              ; preds = %293
  %303 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %294, i64 0, i32 1
  %304 = bitcast %"struct.std::__1::__list_node_base"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = inttoptr i64 %305 to %"struct.std::__1::__list_node_base"*
  %307 = icmp eq %"struct.std::__1::__list_node_base"* %93, %306
  br i1 %307, label %308, label %293

308:                                              ; preds = %302, %293, %285
  %309 = phi i64 [ %287, %285 ], [ %305, %302 ], [ %295, %293 ]
  %310 = phi %"struct.std::__1::__list_node_base"* [ %93, %285 ], [ %93, %302 ], [ %294, %293 ]
  %311 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %94, align 8, !noalias !17
  %312 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %311, i64 0, i32 2
  %313 = load i64, i64* %312, align 8, !noalias !17
  %314 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %311, i64 0, i32 3
  %315 = load i64, i64* %314, align 8, !noalias !17
  %316 = sub i64 %315, %313
  %317 = icmp ult i64 %316, 24
  br i1 %317, label %318, label %320, !prof !5

318:                                              ; preds = %308
  %319 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %311, i64 24) #5, !noalias !17
  br label %322

320:                                              ; preds = %308
  %321 = add i64 %313, 24
  store i64 %321, i64* %312, align 8, !noalias !17
  br label %322

322:                                              ; preds = %318, %320
  %323 = phi i64 [ %319, %318 ], [ %313, %320 ]
  %324 = inttoptr i64 %323 to %"struct.std::__1::__list_node"*
  %325 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %324, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %325, align 8, !noalias !17
  %326 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %324, i64 0, i32 1
  %327 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %326 to i64*
  store i64 %286, i64* %327, align 8
  %328 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %324, i64 0, i32 0
  %329 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %310, i64 0, i32 0
  %330 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %329, align 8
  %331 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %330, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %328, %"struct.std::__1::__list_node_base"** %331, align 8
  %332 = inttoptr i64 %309 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = inttoptr i64 %323 to i64*
  store i64 %333, i64* %334, align 8
  store %"struct.std::__1::__list_node_base"* %328, %"struct.std::__1::__list_node_base"** %329, align 8
  %335 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %324, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %310, %"struct.std::__1::__list_node_base"** %335, align 8
  %336 = load i64, i64* %11, align 8
  %337 = add i64 %336, 1
  store i64 %337, i64* %11, align 8
  br label %338

338:                                              ; preds = %271, %322
  %339 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %272, i64 1
  %340 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %339 to i64
  %341 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %273 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = sub i64 %340, %342
  %344 = icmp eq i64 %343, 4096
  br i1 %344, label %345, label %349

345:                                              ; preds = %338
  %346 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %273, i64 1
  %347 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %346 to i64*
  %348 = load i64, i64* %347, align 8
  br label %349

349:                                              ; preds = %338, %345
  %350 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %346, %345 ], [ %273, %338 ]
  %351 = phi i64 [ %348, %345 ], [ %340, %338 ]
  %352 = inttoptr i64 %351 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**
  %353 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %267, %352
  br i1 %353, label %354, label %271

354:                                              ; preds = %349, %242, %256
  %355 = load i64, i64* %11, align 8
  br label %356

356:                                              ; preds = %354, %222
  %357 = phi i64 [ %355, %354 ], [ %240, %222 ]
  %358 = add nuw nsw i32 %161, 1
  %359 = icmp eq i64 %357, 0
  br i1 %359, label %360, label %159

360:                                              ; preds = %356, %19, %78, %88
  %361 = phi %"class.std::__1::vector.674"* [ %82, %88 ], [ %20, %19 ], [ %82, %78 ], [ %82, %356 ]
  %362 = bitcast %"class.std::__1::vector.674"* %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %14 to i64*
  store i64 %363, i64* %364, align 8
  %365 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0
  %366 = getelementptr inbounds %"class.std::__1::map.693", %"class.std::__1::map.693"* %365, i64 0, i32 0
  %367 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %368 = bitcast %"class.std::__1::__tree_end_node"* %367 to %"class.std::__1::__tree_node"**
  %369 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %368, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.694"* %366, %"class.std::__1::__tree_node"* %369) #5
  %370 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %370, align 8
  %371 = getelementptr inbounds %"class.std::__1::map.693", %"class.std::__1::map.693"* %365, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %367, %"class.std::__1::__tree_end_node"** %371, align 8
  %372 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %367, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %372, align 8
  %373 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 4, i32 0
  %374 = bitcast %"class.std::__1::vector.674"* %373 to i64*
  %375 = load i64, i64* %374, align 8
  %376 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %377 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %376 to i64*
  store i64 %375, i64* %377, align 8
  %378 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 5
  %379 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 3
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* null, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %379, align 8
  %380 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue", %"class.v8::internal::compiler::InstructionScheduler::StressSchedulerQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %381 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %378 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %381, i8 0, i64 16, i1 false)
  %382 = load i64, i64* %11, align 8
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %406, label %384

384:                                              ; preds = %360
  %385 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %386 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %380, i64 0, i32 0
  %387 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %380, i64 0, i32 0, i32 0
  %388 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %387, align 8
  %389 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %388, i64 0, i32 1
  %390 = bitcast %"struct.std::__1::__list_node_base"** %389 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %385, i64 0, i32 0
  %393 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %392, align 8
  %394 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %393, i64 0, i32 1
  %395 = bitcast %"struct.std::__1::__list_node_base"** %394 to i64*
  store i64 %391, i64* %395, align 8
  %396 = bitcast %"struct.std::__1::__list_node_base"* %385 to i64*
  %397 = load i64, i64* %396, align 8
  %398 = bitcast %"struct.std::__1::__list_node_base"** %389 to i64**
  %399 = load i64*, i64** %398, align 8
  store i64 %397, i64* %399, align 8
  store i64 0, i64* %11, align 8
  %400 = icmp eq %"struct.std::__1::__list_node_base"* %385, %386
  br i1 %400, label %406, label %401

401:                                              ; preds = %384, %401
  %402 = phi %"struct.std::__1::__list_node_base"* [ %404, %401 ], [ %385, %384 ]
  %403 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %402, i64 0, i32 1
  %404 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %403, align 8
  %405 = icmp eq %"struct.std::__1::__list_node_base"* %404, %386
  br i1 %405, label %406, label %401

406:                                              ; preds = %401, %360, %384
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler20InstructionScheduler8ScheduleINS2_22CriticalPathFirstQueueEEEvv(%"class.v8::internal::compiler::InstructionScheduler"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue", align 8
  %3 = bitcast %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #5
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue", %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"* %2, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::InstructionScheduler"* %0, %"class.v8::internal::compiler::InstructionScheduler"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue", %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"* %2, i64 0, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::compiler::InstructionScheduler"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue", %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue", %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue", %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %13 = bitcast %"struct.std::__1::__compressed_pair_elem.703"* %12 to i64*
  store i64 %7, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %15 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %14, align 8, !noalias !20
  %16 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %16, align 8, !noalias !20
  %18 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %15, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0
  br label %322

21:                                               ; preds = %1, %47
  %22 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %23, %47 ], [ %15, %1 ]
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %22, i64 -1
  %24 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %24, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %26 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %24, i64 0, i32 1, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %28, 9
  %30 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %26, i64 %29
  %31 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %24, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %32 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %31, align 8
  %33 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %32, %26
  br i1 %33, label %47, label %34

34:                                               ; preds = %21
  %35 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %30, align 8
  %36 = and i64 %28, 511
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %35, i64 %36
  %38 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %24, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %28
  %41 = lshr i64 %40, 9
  %42 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %26, i64 %41
  %43 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %42, align 8
  %44 = and i64 %40, 511
  %45 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %43, i64 %44
  %46 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %37, %45
  br i1 %46, label %47, label %54

47:                                               ; preds = %73, %34, %21
  %48 = phi i32 [ 0, %34 ], [ 0, %21 ], [ %62, %73 ]
  %49 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %24, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = add nsw i32 %50, %48
  %52 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %24, i64 0, i32 4
  store i32 %51, i32* %52, align 8
  %53 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %23, %17
  br i1 %53, label %78, label %21

54:                                               ; preds = %34, %73
  %55 = phi i32 [ %62, %73 ], [ 0, %34 ]
  %56 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %76, %73 ], [ %37, %34 ]
  %57 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %74, %73 ], [ %30, %34 ]
  %58 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %56, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %58, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp sgt i32 %60, %55
  %62 = select i1 %61, i32 %60, i32 %55
  %63 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %56, i64 1
  %64 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %63 to i64
  %65 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %57 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %64, %66
  %68 = icmp eq i64 %67, 4096
  br i1 %68, label %69, label %73

69:                                               ; preds = %54
  %70 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %57, i64 1
  %71 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %70 to i64*
  %72 = load i64, i64* %71, align 8
  br label %73

73:                                               ; preds = %69, %54
  %74 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %70, %69 ], [ %57, %54 ]
  %75 = phi i64 [ %72, %69 ], [ %64, %54 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**
  %77 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %45, %76
  br i1 %77, label %47, label %54

78:                                               ; preds = %47
  %79 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %80 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %79, align 8
  %81 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %14, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0
  %83 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %80, %81
  br i1 %83, label %322, label %84

84:                                               ; preds = %78
  %85 = bitcast %"struct.std::__1::__list_node_base"** %10 to i64*
  %86 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue", %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue", %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  br label %98

88:                                               ; preds = %158
  %89 = icmp eq i64 %159, 0
  br i1 %89, label %322, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue", %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"* %2, i64 0, i32 0, i32 1, i32 0
  %92 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %91, i64 0, i32 0, i32 0
  %93 = ptrtoint %"class.std::__1::list"* %91 to i64
  %94 = bitcast %"struct.std::__1::__list_node_base"** %10 to i64*
  %95 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 1
  %96 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue", %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue", %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  br label %162

98:                                               ; preds = %84, %158
  %99 = phi i64 [ 0, %84 ], [ %159, %158 ]
  %100 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %80, %84 ], [ %160, %158 ]
  %101 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %101, i64 0, i32 2
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %158

105:                                              ; preds = %98
  %106 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %101 to i64
  %107 = load i64, i64* %85, align 8
  %108 = inttoptr i64 %107 to %"struct.std::__1::__list_node_base"*
  %109 = icmp eq %"struct.std::__1::__list_node_base"* %86, %108
  br i1 %109, label %128, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %101, i64 0, i32 4
  %112 = load i32, i32* %111, align 8
  br label %113

113:                                              ; preds = %122, %110
  %114 = phi %"struct.std::__1::__list_node_base"* [ %108, %110 ], [ %126, %122 ]
  %115 = phi i64 [ %107, %110 ], [ %125, %122 ]
  %116 = inttoptr i64 %115 to %"struct.std::__1::__list_node"*
  %117 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %116, i64 0, i32 1
  %118 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %118, i64 0, i32 4
  %120 = load i32, i32* %119, align 8
  %121 = icmp slt i32 %120, %112
  br i1 %121, label %128, label %122

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %114, i64 0, i32 1
  %124 = bitcast %"struct.std::__1::__list_node_base"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %125 to %"struct.std::__1::__list_node_base"*
  %127 = icmp eq %"struct.std::__1::__list_node_base"* %86, %126
  br i1 %127, label %128, label %113

128:                                              ; preds = %122, %113, %105
  %129 = phi i64 [ %107, %105 ], [ %125, %122 ], [ %115, %113 ]
  %130 = phi %"struct.std::__1::__list_node_base"* [ %86, %105 ], [ %86, %122 ], [ %114, %113 ]
  %131 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %87, align 8, !noalias !23
  %132 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %131, i64 0, i32 2
  %133 = load i64, i64* %132, align 8, !noalias !23
  %134 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %131, i64 0, i32 3
  %135 = load i64, i64* %134, align 8, !noalias !23
  %136 = sub i64 %135, %133
  %137 = icmp ult i64 %136, 24
  br i1 %137, label %138, label %140, !prof !5

138:                                              ; preds = %128
  %139 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %131, i64 24) #5, !noalias !23
  br label %142

140:                                              ; preds = %128
  %141 = add i64 %133, 24
  store i64 %141, i64* %132, align 8, !noalias !23
  br label %142

142:                                              ; preds = %138, %140
  %143 = phi i64 [ %139, %138 ], [ %133, %140 ]
  %144 = inttoptr i64 %143 to %"struct.std::__1::__list_node"*
  %145 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %144, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %145, align 8, !noalias !23
  %146 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %144, i64 0, i32 1
  %147 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %146 to i64*
  store i64 %106, i64* %147, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %144, i64 0, i32 0
  %149 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %130, i64 0, i32 0
  %150 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %149, align 8
  %151 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %150, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %148, %"struct.std::__1::__list_node_base"** %151, align 8
  %152 = inttoptr i64 %129 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = inttoptr i64 %143 to i64*
  store i64 %153, i64* %154, align 8
  store %"struct.std::__1::__list_node_base"* %148, %"struct.std::__1::__list_node_base"** %149, align 8
  %155 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %144, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %130, %"struct.std::__1::__list_node_base"** %155, align 8
  %156 = load i64, i64* %11, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %11, align 8
  br label %158

158:                                              ; preds = %98, %142
  %159 = phi i64 [ %99, %98 ], [ %157, %142 ]
  %160 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %100, i64 1
  %161 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %160, %81
  br i1 %161, label %88, label %98

162:                                              ; preds = %90, %318
  %163 = phi i32 [ 0, %90 ], [ %320, %318 ]
  %164 = load i64, i64* %94, align 8
  %165 = inttoptr i64 %164 to %"struct.std::__1::__list_node_base"*
  %166 = icmp eq %"struct.std::__1::__list_node_base"* %92, %165
  br i1 %166, label %182, label %173

167:                                              ; preds = %173
  %168 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %174, i64 0, i32 1
  %169 = bitcast %"struct.std::__1::__list_node_base"** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = inttoptr i64 %170 to %"struct.std::__1::__list_node_base"*
  %172 = icmp eq %"struct.std::__1::__list_node_base"* %92, %171
  br i1 %172, label %182, label %173

173:                                              ; preds = %162, %167
  %174 = phi %"struct.std::__1::__list_node_base"* [ %171, %167 ], [ %165, %162 ]
  %175 = phi i64 [ %170, %167 ], [ %164, %162 ]
  %176 = inttoptr i64 %175 to %"struct.std::__1::__list_node"*
  %177 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %176, i64 0, i32 1
  %178 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %177, align 8
  %179 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %178, i64 0, i32 5
  %180 = load i32, i32* %179, align 4
  %181 = icmp sgt i32 %180, %163
  br i1 %181, label %167, label %182

182:                                              ; preds = %173, %167, %162
  %183 = phi i64 [ %93, %162 ], [ %175, %173 ], [ %93, %167 ]
  %184 = inttoptr i64 %183 to %"struct.std::__1::__list_node_base"*
  %185 = icmp eq %"struct.std::__1::__list_node_base"* %92, %184
  br i1 %185, label %316, label %186

186:                                              ; preds = %182
  %187 = inttoptr i64 %183 to %"struct.std::__1::__list_node"*
  %188 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %187, i64 0, i32 1
  %189 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %188, align 8
  %190 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %184, i64 0, i32 1
  %191 = bitcast %"struct.std::__1::__list_node_base"** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %184, i64 0, i32 0
  %194 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %193, align 8
  %195 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %194, i64 0, i32 1
  %196 = bitcast %"struct.std::__1::__list_node_base"** %195 to i64*
  store i64 %192, i64* %196, align 8
  %197 = inttoptr i64 %183 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"struct.std::__1::__list_node_base"** %190 to i64**
  %200 = load i64*, i64** %199, align 8
  store i64 %198, i64* %200, align 8
  %201 = load i64, i64* %11, align 8
  %202 = add i64 %201, -1
  store i64 %202, i64* %11, align 8
  %203 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %189, null
  br i1 %203, label %318, label %204

204:                                              ; preds = %186
  %205 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %95, align 8
  %206 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %189, i64 0, i32 0
  %207 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %206, align 8
  %208 = call i32 @_ZN2v88internal8compiler19InstructionSequence14AddInstructionEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionSequence"* %205, %"class.v8::internal::compiler::Instruction"* %207) #5
  %209 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %189, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %210 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %209, align 8
  %211 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %189, i64 0, i32 1, i32 0, i32 0, i32 1
  %212 = load i64, i64* %211, align 8
  %213 = lshr i64 %212, 9
  %214 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %210, i64 %213
  %215 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %189, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %216 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %215, align 8
  %217 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %216, %210
  br i1 %217, label %316, label %218

218:                                              ; preds = %204
  %219 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %214, align 8
  %220 = and i64 %212, 511
  %221 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %219, i64 %220
  %222 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %189, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %223 = load i64, i64* %222, align 8
  %224 = add i64 %223, %212
  %225 = lshr i64 %224, 9
  %226 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %210, i64 %225
  %227 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %226, align 8
  %228 = and i64 %224, 511
  %229 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %227, i64 %228
  %230 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %221, %229
  br i1 %230, label %316, label %231

231:                                              ; preds = %218
  %232 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %189, i64 0, i32 3
  br label %233

233:                                              ; preds = %231, %311
  %234 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %221, %231 ], [ %314, %311 ]
  %235 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %214, %231 ], [ %312, %311 ]
  %236 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %234, align 8
  %237 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %236, i64 0, i32 2
  %238 = load i32, i32* %237, align 8
  %239 = add nsw i32 %238, -1
  store i32 %239, i32* %237, align 8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %236, i64 0, i32 5
  %241 = load i32, i32* %240, align 4
  %242 = load i32, i32* %232, align 4
  %243 = add nsw i32 %242, %163
  %244 = icmp slt i32 %241, %243
  %245 = select i1 %244, i32 %243, i32 %241
  store i32 %245, i32* %240, align 4
  %246 = icmp eq i32 %239, 0
  br i1 %246, label %247, label %300

247:                                              ; preds = %233
  %248 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %236 to i64
  %249 = load i64, i64* %94, align 8
  %250 = inttoptr i64 %249 to %"struct.std::__1::__list_node_base"*
  %251 = icmp eq %"struct.std::__1::__list_node_base"* %96, %250
  br i1 %251, label %270, label %252

252:                                              ; preds = %247
  %253 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %236, i64 0, i32 4
  %254 = load i32, i32* %253, align 8
  br label %255

255:                                              ; preds = %264, %252
  %256 = phi %"struct.std::__1::__list_node_base"* [ %250, %252 ], [ %268, %264 ]
  %257 = phi i64 [ %249, %252 ], [ %267, %264 ]
  %258 = inttoptr i64 %257 to %"struct.std::__1::__list_node"*
  %259 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %258, i64 0, i32 1
  %260 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %259, align 8
  %261 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %260, i64 0, i32 4
  %262 = load i32, i32* %261, align 8
  %263 = icmp slt i32 %262, %254
  br i1 %263, label %270, label %264

264:                                              ; preds = %255
  %265 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %256, i64 0, i32 1
  %266 = bitcast %"struct.std::__1::__list_node_base"** %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = inttoptr i64 %267 to %"struct.std::__1::__list_node_base"*
  %269 = icmp eq %"struct.std::__1::__list_node_base"* %96, %268
  br i1 %269, label %270, label %255

270:                                              ; preds = %264, %255, %247
  %271 = phi i64 [ %249, %247 ], [ %267, %264 ], [ %257, %255 ]
  %272 = phi %"struct.std::__1::__list_node_base"* [ %96, %247 ], [ %96, %264 ], [ %256, %255 ]
  %273 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %97, align 8, !noalias !26
  %274 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %273, i64 0, i32 2
  %275 = load i64, i64* %274, align 8, !noalias !26
  %276 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %273, i64 0, i32 3
  %277 = load i64, i64* %276, align 8, !noalias !26
  %278 = sub i64 %277, %275
  %279 = icmp ult i64 %278, 24
  br i1 %279, label %280, label %282, !prof !5

280:                                              ; preds = %270
  %281 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %273, i64 24) #5, !noalias !26
  br label %284

282:                                              ; preds = %270
  %283 = add i64 %275, 24
  store i64 %283, i64* %274, align 8, !noalias !26
  br label %284

284:                                              ; preds = %280, %282
  %285 = phi i64 [ %281, %280 ], [ %275, %282 ]
  %286 = inttoptr i64 %285 to %"struct.std::__1::__list_node"*
  %287 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %286, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %287, align 8, !noalias !26
  %288 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %286, i64 0, i32 1
  %289 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %288 to i64*
  store i64 %248, i64* %289, align 8
  %290 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %286, i64 0, i32 0
  %291 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %272, i64 0, i32 0
  %292 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %291, align 8
  %293 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %292, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %290, %"struct.std::__1::__list_node_base"** %293, align 8
  %294 = inttoptr i64 %271 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = inttoptr i64 %285 to i64*
  store i64 %295, i64* %296, align 8
  store %"struct.std::__1::__list_node_base"* %290, %"struct.std::__1::__list_node_base"** %291, align 8
  %297 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %286, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %272, %"struct.std::__1::__list_node_base"** %297, align 8
  %298 = load i64, i64* %11, align 8
  %299 = add i64 %298, 1
  store i64 %299, i64* %11, align 8
  br label %300

300:                                              ; preds = %233, %284
  %301 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %234, i64 1
  %302 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %301 to i64
  %303 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %235 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = sub i64 %302, %304
  %306 = icmp eq i64 %305, 4096
  br i1 %306, label %307, label %311

307:                                              ; preds = %300
  %308 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %235, i64 1
  %309 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %308 to i64*
  %310 = load i64, i64* %309, align 8
  br label %311

311:                                              ; preds = %300, %307
  %312 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %308, %307 ], [ %235, %300 ]
  %313 = phi i64 [ %310, %307 ], [ %302, %300 ]
  %314 = inttoptr i64 %313 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**
  %315 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %229, %314
  br i1 %315, label %316, label %233

316:                                              ; preds = %311, %204, %182, %218
  %317 = load i64, i64* %11, align 8
  br label %318

318:                                              ; preds = %316, %186
  %319 = phi i64 [ %317, %316 ], [ %202, %186 ]
  %320 = add nuw nsw i32 %163, 1
  %321 = icmp eq i64 %319, 0
  br i1 %321, label %322, label %162

322:                                              ; preds = %318, %19, %78, %88
  %323 = phi %"class.std::__1::vector.674"* [ %82, %88 ], [ %20, %19 ], [ %82, %78 ], [ %82, %318 ]
  %324 = bitcast %"class.std::__1::vector.674"* %323 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %14 to i64*
  store i64 %325, i64* %326, align 8
  %327 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0
  %328 = getelementptr inbounds %"class.std::__1::map.693", %"class.std::__1::map.693"* %327, i64 0, i32 0
  %329 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %330 = bitcast %"class.std::__1::__tree_end_node"* %329 to %"class.std::__1::__tree_node"**
  %331 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %330, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.694"* %328, %"class.std::__1::__tree_node"* %331) #5
  %332 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %332, align 8
  %333 = getelementptr inbounds %"class.std::__1::map.693", %"class.std::__1::map.693"* %327, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %329, %"class.std::__1::__tree_end_node"** %333, align 8
  %334 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %329, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %334, align 8
  %335 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 4, i32 0
  %336 = bitcast %"class.std::__1::vector.674"* %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %339 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %338 to i64*
  store i64 %337, i64* %339, align 8
  %340 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 5
  %341 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 3
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* null, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %341, align 8
  %342 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue", %"class.v8::internal::compiler::InstructionScheduler::CriticalPathFirstQueue"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %343 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %340 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %343, i8 0, i64 16, i1 false)
  %344 = load i64, i64* %11, align 8
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %368, label %346

346:                                              ; preds = %322
  %347 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %348 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %342, i64 0, i32 0
  %349 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %342, i64 0, i32 0, i32 0
  %350 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %349, align 8
  %351 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %350, i64 0, i32 1
  %352 = bitcast %"struct.std::__1::__list_node_base"** %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %347, i64 0, i32 0
  %355 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %354, align 8
  %356 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %355, i64 0, i32 1
  %357 = bitcast %"struct.std::__1::__list_node_base"** %356 to i64*
  store i64 %353, i64* %357, align 8
  %358 = bitcast %"struct.std::__1::__list_node_base"* %347 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = bitcast %"struct.std::__1::__list_node_base"** %351 to i64**
  %361 = load i64*, i64** %360, align 8
  store i64 %359, i64* %361, align 8
  store i64 0, i64* %11, align 8
  %362 = icmp eq %"struct.std::__1::__list_node_base"* %347, %348
  br i1 %362, label %368, label %363

363:                                              ; preds = %346, %363
  %364 = phi %"struct.std::__1::__list_node_base"* [ %366, %363 ], [ %347, %346 ]
  %365 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %364, i64 0, i32 1
  %366 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %365, align 8
  %367 = icmp eq %"struct.std::__1::__list_node_base"* %366, %348
  br i1 %367, label %368, label %363

368:                                              ; preds = %363, %322, %346
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #5
  ret void
}

declare void @_ZN2v88internal8compiler19InstructionSequence8EndBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionSequence"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler20InstructionScheduler13AddTerminatorEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %3, align 8
  %5 = ptrtoint %"class.v8::internal::Zone"* %4 to i64
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %7
  %11 = icmp ult i64 %10, 104
  br i1 %11, label %12, label %14, !prof !5

12:                                               ; preds = %2
  %13 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 104) #5
  br label %16

14:                                               ; preds = %2
  %15 = add i64 %7, 104
  store i64 %15, i64* %6, align 8
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi i64 [ %13, %12 ], [ %7, %14 ]
  %18 = inttoptr i64 %17 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %18, i64 0, i32 0
  store %"class.v8::internal::compiler::Instruction"* %1, %"class.v8::internal::compiler::Instruction"** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %18, i64 0, i32 1
  %21 = bitcast %"class.v8::internal::ZoneDeque.676"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #5
  %22 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %18, i64 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  %23 = bitcast %"struct.std::__1::__compressed_pair_elem.682"* %22 to i64*
  store i64 %5, i64* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %18, i64 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %25 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #5
  %26 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %18, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %27 = bitcast %"struct.std::__1::__compressed_pair_elem.686"* %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %18, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"** %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %18, i64 0, i32 2
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %18, i64 0, i32 3
  %31 = tail call i32 @_ZN2v88internal8compiler20InstructionScheduler21GetInstructionLatencyEPKNS1_11InstructionE(%"class.v8::internal::compiler::Instruction"* %1) #5
  store i32 %31, i32* %30, align 4
  %32 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %18, i64 0, i32 4
  store i32 -1, i32* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %18, i64 0, i32 5
  store i32 -1, i32* %33, align 4
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0
  %35 = getelementptr inbounds %"class.std::__1::vector.674", %"class.std::__1::vector.674"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %38 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %37, align 8
  %39 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %36, %38
  br i1 %39, label %42, label %275

40:                                               ; preds = %316
  %41 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %37, align 8
  br label %42

42:                                               ; preds = %40, %16
  %43 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %41, %40 ], [ %36, %16 ]
  %44 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %45 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %44, align 8
  %46 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %43, %45
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %43 to i64*
  store i64 %17, i64* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %43, i64 1
  %50 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %49 to i64
  %51 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %37 to i64*
  store i64 %50, i64* %51, align 8
  br label %274

52:                                               ; preds = %42
  %53 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %45 to i64
  %54 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %37 to i64*
  %55 = bitcast %"class.std::__1::vector.674"* %34 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %53, %56
  %58 = ashr exact i64 %57, 3
  %59 = add nsw i64 %58, 1
  %60 = icmp ugt i64 %59, 268435455
  br i1 %60, label %61, label %63

61:                                               ; preds = %52
  %62 = bitcast %"class.std::__1::vector.674"* %34 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %62) #6
  unreachable

63:                                               ; preds = %52
  %64 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %44 to i64*
  %65 = icmp ult i64 %58, 134217727
  br i1 %65, label %66, label %71

66:                                               ; preds = %63
  %67 = ashr exact i64 %57, 2
  %68 = icmp ult i64 %67, %59
  %69 = select i1 %68, i64 %59, i64 %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %89, label %71

71:                                               ; preds = %66, %63
  %72 = phi i64 [ %69, %66 ], [ 268435455, %63 ]
  %73 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %74 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %73, align 8
  %75 = shl i64 %72, 3
  %76 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %74, i64 0, i32 2
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %74, i64 0, i32 3
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %79, %77
  %81 = icmp ugt i64 %75, %80
  br i1 %81, label %82, label %84, !prof !5

82:                                               ; preds = %71
  %83 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %74, i64 %75) #5
  br label %86

84:                                               ; preds = %71
  %85 = add i64 %77, %75
  store i64 %85, i64* %76, align 8
  br label %86

86:                                               ; preds = %84, %82
  %87 = phi i64 [ %83, %82 ], [ %77, %84 ]
  %88 = inttoptr i64 %87 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**
  br label %89

89:                                               ; preds = %86, %66
  %90 = phi i64 [ %72, %86 ], [ 0, %66 ]
  %91 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %88, %86 ], [ null, %66 ]
  %92 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %91, i64 %58
  %93 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %91, i64 %90
  %94 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %93 to i64
  %95 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %92 to i64*
  store i64 %17, i64* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %92, i64 1
  %97 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %96 to i64
  %98 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %35, align 8
  %99 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %98 to i64
  %100 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %37, align 8
  %101 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %100, %98
  br i1 %101, label %271, label %102

102:                                              ; preds = %89
  %103 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %100, i64 -1
  %104 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %103 to i64
  %105 = sub i64 %104, %99
  %106 = lshr i64 %105, 3
  %107 = add nuw nsw i64 %106, 1
  %108 = icmp ult i64 %107, 4
  br i1 %108, label %201, label %109

109:                                              ; preds = %102
  %110 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %100, i64 -1
  %111 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %110 to i64
  %112 = sub i64 %111, %99
  %113 = lshr i64 %112, 3
  %114 = xor i64 %113, -1
  %115 = add nsw i64 %58, %114
  %116 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %91, i64 %115
  %117 = xor i64 %113, -1
  %118 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %100, i64 %117
  %119 = icmp ult %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %116, %100
  %120 = icmp ult %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %118, %92
  %121 = and i1 %119, %120
  br i1 %121, label %201, label %122

122:                                              ; preds = %109
  %123 = and i64 %107, 4611686018427387900
  %124 = sub nsw i64 0, %123
  %125 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %92, i64 %124
  %126 = sub nsw i64 0, %123
  %127 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %100, i64 %126
  %128 = add nsw i64 %123, -4
  %129 = lshr exact i64 %128, 2
  %130 = add nuw nsw i64 %129, 1
  %131 = and i64 %130, 1
  %132 = icmp eq i64 %128, 0
  br i1 %132, label %179, label %133

133:                                              ; preds = %122
  %134 = sub nuw nsw i64 %130, %131
  %135 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %92, i64 -1
  %136 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %100, i64 -1
  %137 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %92, i64 -1
  %138 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %100, i64 -1
  br label %139

139:                                              ; preds = %139, %133
  %140 = phi i64 [ 0, %133 ], [ %174, %139 ]
  %141 = phi i64 [ %134, %133 ], [ %175, %139 ]
  %142 = sub i64 0, %140
  %143 = sub i64 0, %140
  %144 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %135, i64 %142
  %145 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %136, i64 %143
  %146 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %145, i64 -1
  %147 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %146 to <2 x i64>*
  %148 = load <2 x i64>, <2 x i64>* %147, align 8, !alias.scope !29
  %149 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %145, i64 -2
  %150 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %149, i64 -1
  %151 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !29
  %153 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %144, i64 -1
  %154 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %153 to <2 x i64>*
  store <2 x i64> %148, <2 x i64>* %154, align 8, !alias.scope !32, !noalias !29
  %155 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %144, i64 -2
  %156 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %155, i64 -1
  %157 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %156 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %157, align 8, !alias.scope !32, !noalias !29
  %158 = sub nuw nsw i64 -4, %140
  %159 = sub nuw nsw i64 -4, %140
  %160 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %137, i64 %158
  %161 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %138, i64 %159
  %162 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %161, i64 -1
  %163 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %162 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 8, !alias.scope !29
  %165 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %161, i64 -2
  %166 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %165, i64 -1
  %167 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %166 to <2 x i64>*
  %168 = load <2 x i64>, <2 x i64>* %167, align 8, !alias.scope !29
  %169 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %160, i64 -1
  %170 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %169 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %170, align 8, !alias.scope !32, !noalias !29
  %171 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %160, i64 -2
  %172 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %171, i64 -1
  %173 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %172 to <2 x i64>*
  store <2 x i64> %168, <2 x i64>* %173, align 8, !alias.scope !32, !noalias !29
  %174 = add i64 %140, 8
  %175 = add i64 %141, -2
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %139, !llvm.loop !34

177:                                              ; preds = %139
  %178 = sub nuw nsw i64 -8, %140
  br label %179

179:                                              ; preds = %177, %122
  %180 = phi i64 [ 0, %122 ], [ %178, %177 ]
  %181 = icmp eq i64 %131, 0
  br i1 %181, label %199, label %182

182:                                              ; preds = %179
  %183 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %92, i64 -1
  %184 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %100, i64 -1
  %185 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %183, i64 %180
  %186 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %184, i64 %180
  %187 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %186, i64 -1
  %188 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %187 to <2 x i64>*
  %189 = load <2 x i64>, <2 x i64>* %188, align 8, !alias.scope !29
  %190 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %186, i64 -2
  %191 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %190, i64 -1
  %192 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %191 to <2 x i64>*
  %193 = load <2 x i64>, <2 x i64>* %192, align 8, !alias.scope !29
  %194 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %185, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %194 to <2 x i64>*
  store <2 x i64> %189, <2 x i64>* %195, align 8, !alias.scope !32, !noalias !29
  %196 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %185, i64 -2
  %197 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %196, i64 -1
  %198 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %197 to <2 x i64>*
  store <2 x i64> %193, <2 x i64>* %198, align 8, !alias.scope !32, !noalias !29
  br label %199

199:                                              ; preds = %179, %182
  %200 = icmp eq i64 %107, %123
  br i1 %200, label %271, label %201

201:                                              ; preds = %199, %109, %102
  %202 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %92, %109 ], [ %92, %102 ], [ %125, %199 ]
  %203 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %100, %109 ], [ %100, %102 ], [ %127, %199 ]
  %204 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %203, i64 -1
  %205 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %204 to i64
  %206 = sub i64 %205, %99
  %207 = lshr i64 %206, 3
  %208 = add nuw nsw i64 %207, 1
  %209 = and i64 %208, 7
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %222, label %211

211:                                              ; preds = %201, %211
  %212 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %215, %211 ], [ %202, %201 ]
  %213 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %216, %211 ], [ %203, %201 ]
  %214 = phi i64 [ %220, %211 ], [ %209, %201 ]
  %215 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %212, i64 -1
  %216 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %213, i64 -1
  %217 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %215 to i64*
  store i64 %218, i64* %219, align 8
  %220 = add i64 %214, -1
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %222, label %211, !llvm.loop !36

222:                                              ; preds = %211, %201
  %223 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ undef, %201 ], [ %215, %211 ]
  %224 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %202, %201 ], [ %215, %211 ]
  %225 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %203, %201 ], [ %216, %211 ]
  %226 = icmp ult i64 %206, 56
  br i1 %226, label %271, label %227

227:                                              ; preds = %222, %227
  %228 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %265, %227 ], [ %224, %222 ]
  %229 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %266, %227 ], [ %225, %222 ]
  %230 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %228, i64 -1
  %231 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %229, i64 -1
  %232 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %230 to i64*
  store i64 %233, i64* %234, align 8
  %235 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %228, i64 -2
  %236 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %229, i64 -2
  %237 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %235 to i64*
  store i64 %238, i64* %239, align 8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %228, i64 -3
  %241 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %229, i64 -3
  %242 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %240 to i64*
  store i64 %243, i64* %244, align 8
  %245 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %228, i64 -4
  %246 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %229, i64 -4
  %247 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %245 to i64*
  store i64 %248, i64* %249, align 8
  %250 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %228, i64 -5
  %251 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %229, i64 -5
  %252 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %250 to i64*
  store i64 %253, i64* %254, align 8
  %255 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %228, i64 -6
  %256 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %229, i64 -6
  %257 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %255 to i64*
  store i64 %258, i64* %259, align 8
  %260 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %228, i64 -7
  %261 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %229, i64 -7
  %262 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %261 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %260 to i64*
  store i64 %263, i64* %264, align 8
  %265 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %228, i64 -8
  %266 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %229, i64 -8
  %267 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %265 to i64*
  store i64 %268, i64* %269, align 8
  %270 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %266, %98
  br i1 %270, label %271, label %227, !llvm.loop !37

271:                                              ; preds = %222, %227, %199, %89
  %272 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %92, %89 ], [ %125, %199 ], [ %223, %222 ], [ %265, %227 ]
  %273 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %272 to i64
  store i64 %273, i64* %55, align 8
  store i64 %97, i64* %54, align 8
  store i64 %94, i64* %64, align 8
  br label %274

274:                                              ; preds = %47, %271
  ret void

275:                                              ; preds = %16, %316
  %276 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %322, %316 ], [ %36, %16 ]
  %277 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %276, align 8
  %278 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %277, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %279 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %277, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %282 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = sub i64 %280, %283
  %285 = icmp eq i64 %284, 0
  %286 = shl i64 %284, 6
  %287 = add i64 %286, -1
  %288 = select i1 %285, i64 0, i64 %287
  %289 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %277, i64 0, i32 1, i32 0, i32 0, i32 1
  %290 = load i64, i64* %289, align 8
  %291 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %277, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %292 = load i64, i64* %291, align 8
  %293 = add i64 %292, %290
  %294 = icmp eq i64 %288, %293
  %295 = inttoptr i64 %283 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %296 = inttoptr i64 %280 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  br i1 %294, label %297, label %304

297:                                              ; preds = %275
  %298 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %277, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque.677"* %298) #5
  %299 = load i64, i64* %291, align 8
  %300 = load i64, i64* %289, align 8
  %301 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %281, align 8
  %302 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %278, align 8
  %303 = add i64 %300, %299
  br label %304

304:                                              ; preds = %297, %275
  %305 = phi i64 [ %303, %297 ], [ %293, %275 ]
  %306 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %302, %297 ], [ %296, %275 ]
  %307 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %301, %297 ], [ %295, %275 ]
  %308 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %306, %307
  br i1 %308, label %316, label %309

309:                                              ; preds = %304
  %310 = lshr i64 %305, 9
  %311 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %307, i64 %310
  %312 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %311, align 8
  %313 = and i64 %305, 511
  %314 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %312, i64 %313
  %315 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %314 to i64*
  br label %316

316:                                              ; preds = %304, %309
  %317 = phi i64* [ %315, %309 ], [ null, %304 ]
  store i64 %17, i64* %317, align 8
  %318 = load i64, i64* %291, align 8
  %319 = add i64 %318, 1
  store i64 %319, i64* %291, align 8
  %320 = load i32, i32* %29, align 8
  %321 = add nsw i32 %320, 1
  store i32 %321, i32* %29, align 8
  %322 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %276, i64 1
  %323 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %322, %38
  br i1 %323, label %40, label %275
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler20InstructionScheduler14AddInstructionEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZNK2v88internal8compiler20InstructionScheduler19GetInstructionFlagsEPKNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"* %0, %"class.v8::internal::compiler::Instruction"* %1) #5
  %4 = and i32 %3, 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = load i8, i8* @_ZN2v88internal40FLAG_turbo_stress_instruction_schedulingE, align 1, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @_ZN2v88internal8compiler20InstructionScheduler8ScheduleINS2_20StressSchedulerQueueEEEvv(%"class.v8::internal::compiler::InstructionScheduler"* %0)
  br label %11

10:                                               ; preds = %6
  tail call void @_ZN2v88internal8compiler20InstructionScheduler8ScheduleINS2_22CriticalPathFirstQueueEEEvv(%"class.v8::internal::compiler::InstructionScheduler"* %0)
  br label %11

11:                                               ; preds = %10, %9
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %12, align 8
  %14 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence14AddInstructionEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionSequence"* %13, %"class.v8::internal::compiler::Instruction"* %1) #5
  br label %1216

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %16, align 8
  %18 = ptrtoint %"class.v8::internal::Zone"* %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %17, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %17, i64 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %22, %20
  %24 = icmp ult i64 %23, 104
  br i1 %24, label %25, label %27, !prof !5

25:                                               ; preds = %15
  %26 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %17, i64 104) #5
  br label %29

27:                                               ; preds = %15
  %28 = add i64 %20, 104
  store i64 %28, i64* %19, align 8
  br label %29

29:                                               ; preds = %25, %27
  %30 = phi i64 [ %26, %25 ], [ %20, %27 ]
  %31 = inttoptr i64 %30 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*
  %32 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %31, i64 0, i32 0
  store %"class.v8::internal::compiler::Instruction"* %1, %"class.v8::internal::compiler::Instruction"** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %31, i64 0, i32 1
  %34 = bitcast %"class.v8::internal::ZoneDeque.676"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 32, i1 false) #5
  %35 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %31, i64 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  %36 = bitcast %"struct.std::__1::__compressed_pair_elem.682"* %35 to i64*
  store i64 %18, i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %31, i64 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %38 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #5
  %39 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %31, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %40 = bitcast %"struct.std::__1::__compressed_pair_elem.686"* %39 to i64*
  store i64 %18, i64* %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %31, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %31, i64 0, i32 2
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %31, i64 0, i32 3
  %44 = tail call i32 @_ZN2v88internal8compiler20InstructionScheduler21GetInstructionLatencyEPKNS1_11InstructionE(%"class.v8::internal::compiler::Instruction"* %1) #5
  store i32 %44, i32* %43, align 4
  %45 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %31, i64 0, i32 4
  store i32 -1, i32* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %31, i64 0, i32 5
  store i32 -1, i32* %46, align 4
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 511
  %50 = icmp eq i32 %49, 15
  br i1 %50, label %51, label %61

51:                                               ; preds = %29
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, 255
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %61

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 7
  %60 = icmp eq i64 %59, 1
  br i1 %60, label %65, label %61

61:                                               ; preds = %56, %51, %29
  %62 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 5
  %63 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %62, align 8
  %64 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %63, null
  br i1 %64, label %165, label %119

65:                                               ; preds = %56
  %66 = and i64 %58, 515396075520
  %67 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 5
  %68 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %67, align 8
  %69 = icmp ne %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %68, null
  switch i64 %66, label %118 [
    i64 309237645312, label %70
    i64 240518168576, label %70
  ]

70:                                               ; preds = %65, %65
  br i1 %69, label %71, label %116

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %68, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %73 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %68, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %76 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %74, %77
  %79 = icmp eq i64 %78, 0
  %80 = shl i64 %78, 6
  %81 = add i64 %80, -1
  %82 = select i1 %79, i64 0, i64 %81
  %83 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %68, i64 0, i32 1, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %68, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, %84
  %88 = icmp eq i64 %82, %87
  %89 = inttoptr i64 %77 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %90 = inttoptr i64 %74 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  br i1 %88, label %91, label %98

91:                                               ; preds = %71
  %92 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %68, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque.677"* %92) #5
  %93 = load i64, i64* %85, align 8
  %94 = load i64, i64* %83, align 8
  %95 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %75, align 8
  %96 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %72, align 8
  %97 = add i64 %94, %93
  br label %98

98:                                               ; preds = %91, %71
  %99 = phi i64 [ %97, %91 ], [ %87, %71 ]
  %100 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %96, %91 ], [ %90, %71 ]
  %101 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %95, %91 ], [ %89, %71 ]
  %102 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %100, %101
  br i1 %102, label %110, label %103

103:                                              ; preds = %98
  %104 = lshr i64 %99, 9
  %105 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %101, i64 %104
  %106 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %105, align 8
  %107 = and i64 %99, 511
  %108 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %106, i64 %107
  %109 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %108 to i64*
  br label %110

110:                                              ; preds = %98, %103
  %111 = phi i64* [ %109, %103 ], [ null, %98 ]
  store i64 %30, i64* %111, align 8
  %112 = load i64, i64* %85, align 8
  %113 = add i64 %112, 1
  store i64 %113, i64* %85, align 8
  %114 = load i32, i32* %42, align 8
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %42, align 8
  br label %116

116:                                              ; preds = %110, %70
  %117 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %67 to i64*
  store i64 %30, i64* %117, align 8
  br label %978

118:                                              ; preds = %65
  br i1 %69, label %119, label %165

119:                                              ; preds = %61, %118
  %120 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* [ %63, %61 ], [ %68, %118 ]
  %121 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %120, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %122 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %120, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %125 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %123, %126
  %128 = icmp eq i64 %127, 0
  %129 = shl i64 %127, 6
  %130 = add i64 %129, -1
  %131 = select i1 %128, i64 0, i64 %130
  %132 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %120, i64 0, i32 1, i32 0, i32 0, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %120, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %135, %133
  %137 = icmp eq i64 %131, %136
  %138 = inttoptr i64 %126 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %139 = inttoptr i64 %123 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  br i1 %137, label %140, label %147

140:                                              ; preds = %119
  %141 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %120, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque.677"* %141) #5
  %142 = load i64, i64* %134, align 8
  %143 = load i64, i64* %132, align 8
  %144 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %124, align 8
  %145 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %121, align 8
  %146 = add i64 %143, %142
  br label %147

147:                                              ; preds = %140, %119
  %148 = phi i64 [ %146, %140 ], [ %136, %119 ]
  %149 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %145, %140 ], [ %139, %119 ]
  %150 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %144, %140 ], [ %138, %119 ]
  %151 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %149, %150
  br i1 %151, label %159, label %152

152:                                              ; preds = %147
  %153 = lshr i64 %148, 9
  %154 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %150, i64 %153
  %155 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %154, align 8
  %156 = and i64 %148, 511
  %157 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %155, i64 %156
  %158 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %157 to i64*
  br label %159

159:                                              ; preds = %147, %152
  %160 = phi i64* [ %158, %152 ], [ null, %147 ]
  store i64 %30, i64* %160, align 8
  %161 = load i64, i64* %134, align 8
  %162 = add i64 %161, 1
  store i64 %162, i64* %134, align 8
  %163 = load i32, i32* %42, align 8
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %42, align 8
  br label %165

165:                                              ; preds = %61, %159, %118
  %166 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 6
  %167 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %166, align 8
  %168 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %167, null
  br i1 %168, label %239, label %169

169:                                              ; preds = %165
  %170 = tail call i32 @_ZNK2v88internal8compiler20InstructionScheduler19GetInstructionFlagsEPKNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"* %0, %"class.v8::internal::compiler::Instruction"* %1) #5
  %171 = and i32 %170, 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %193

173:                                              ; preds = %169
  %174 = load i32, i32* %47, align 8
  %175 = and i32 %174, 511
  %176 = icmp eq i32 %175, 20
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = lshr i32 %174, 14
  %179 = and i32 %178, 7
  %180 = add nsw i32 %179, -3
  %181 = icmp ult i32 %180, 2
  %182 = and i32 %174, 114688
  %183 = icmp eq i32 %182, 98304
  %184 = or i1 %183, %181
  br i1 %184, label %193, label %185

185:                                              ; preds = %177
  %186 = tail call i32 @_ZNK2v88internal8compiler20InstructionScheduler19GetInstructionFlagsEPKNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"* %0, %"class.v8::internal::compiler::Instruction"* %1) #5
  %187 = and i32 %186, 1
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %193

189:                                              ; preds = %185
  %190 = tail call i32 @_ZNK2v88internal8compiler20InstructionScheduler19GetInstructionFlagsEPKNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"* %0, %"class.v8::internal::compiler::Instruction"* %1) #5
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %239, label %193

193:                                              ; preds = %189, %173, %169, %177, %185
  %194 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %166, align 8
  %195 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %194, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %196 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %194, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %199 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = sub i64 %197, %200
  %202 = icmp eq i64 %201, 0
  %203 = shl i64 %201, 6
  %204 = add i64 %203, -1
  %205 = select i1 %202, i64 0, i64 %204
  %206 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %194, i64 0, i32 1, i32 0, i32 0, i32 1
  %207 = load i64, i64* %206, align 8
  %208 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %194, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %209 = load i64, i64* %208, align 8
  %210 = add i64 %209, %207
  %211 = icmp eq i64 %205, %210
  %212 = inttoptr i64 %200 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %213 = inttoptr i64 %197 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  br i1 %211, label %214, label %221

214:                                              ; preds = %193
  %215 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %194, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque.677"* %215) #5
  %216 = load i64, i64* %208, align 8
  %217 = load i64, i64* %206, align 8
  %218 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %198, align 8
  %219 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %195, align 8
  %220 = add i64 %217, %216
  br label %221

221:                                              ; preds = %214, %193
  %222 = phi i64 [ %220, %214 ], [ %210, %193 ]
  %223 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %219, %214 ], [ %213, %193 ]
  %224 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %218, %214 ], [ %212, %193 ]
  %225 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %223, %224
  br i1 %225, label %233, label %226

226:                                              ; preds = %221
  %227 = lshr i64 %222, 9
  %228 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %224, i64 %227
  %229 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %228, align 8
  %230 = and i64 %222, 511
  %231 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %229, i64 %230
  %232 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %231 to i64*
  br label %233

233:                                              ; preds = %221, %226
  %234 = phi i64* [ %232, %226 ], [ null, %221 ]
  store i64 %30, i64* %234, align 8
  %235 = load i64, i64* %208, align 8
  %236 = add i64 %235, 1
  store i64 %236, i64* %208, align 8
  %237 = load i32, i32* %42, align 8
  %238 = add nsw i32 %237, 1
  store i32 %238, i32* %42, align 8
  br label %239

239:                                              ; preds = %189, %165, %233
  %240 = tail call i32 @_ZNK2v88internal8compiler20InstructionScheduler19GetInstructionFlagsEPKNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"* %0, %"class.v8::internal::compiler::Instruction"* %1) #5
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %357, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 3
  %245 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %244, align 8
  %246 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %245, null
  br i1 %246, label %292, label %247

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %245, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %249 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %245, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %252 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = sub i64 %250, %253
  %255 = icmp eq i64 %254, 0
  %256 = shl i64 %254, 6
  %257 = add i64 %256, -1
  %258 = select i1 %255, i64 0, i64 %257
  %259 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %245, i64 0, i32 1, i32 0, i32 0, i32 1
  %260 = load i64, i64* %259, align 8
  %261 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %245, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %262 = load i64, i64* %261, align 8
  %263 = add i64 %262, %260
  %264 = icmp eq i64 %258, %263
  %265 = inttoptr i64 %253 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %266 = inttoptr i64 %250 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  br i1 %264, label %267, label %274

267:                                              ; preds = %247
  %268 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %245, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque.677"* %268) #5
  %269 = load i64, i64* %261, align 8
  %270 = load i64, i64* %259, align 8
  %271 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %251, align 8
  %272 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %248, align 8
  %273 = add i64 %270, %269
  br label %274

274:                                              ; preds = %267, %247
  %275 = phi i64 [ %273, %267 ], [ %263, %247 ]
  %276 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %272, %267 ], [ %266, %247 ]
  %277 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %271, %267 ], [ %265, %247 ]
  %278 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %276, %277
  br i1 %278, label %286, label %279

279:                                              ; preds = %274
  %280 = lshr i64 %275, 9
  %281 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %277, i64 %280
  %282 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %281, align 8
  %283 = and i64 %275, 511
  %284 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %282, i64 %283
  %285 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %284 to i64*
  br label %286

286:                                              ; preds = %274, %279
  %287 = phi i64* [ %285, %279 ], [ null, %274 ]
  store i64 %30, i64* %287, align 8
  %288 = load i64, i64* %261, align 8
  %289 = add i64 %288, 1
  store i64 %289, i64* %261, align 8
  %290 = load i32, i32* %42, align 8
  %291 = add nsw i32 %290, 1
  store i32 %291, i32* %42, align 8
  br label %292

292:                                              ; preds = %243, %286
  %293 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 4, i32 0
  %294 = getelementptr inbounds %"class.std::__1::vector.674", %"class.std::__1::vector.674"* %293, i64 0, i32 0, i32 0
  %295 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %294, align 8
  %296 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %297 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %296, align 8
  %298 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %295, %297
  br i1 %298, label %299, label %308

299:                                              ; preds = %292
  %300 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %295 to i64
  br label %304

301:                                              ; preds = %349
  %302 = bitcast %"class.std::__1::vector.674"* %293 to i64*
  %303 = load i64, i64* %302, align 8
  br label %304

304:                                              ; preds = %299, %301
  %305 = phi i64 [ %303, %301 ], [ %300, %299 ]
  %306 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %296 to i64*
  store i64 %305, i64* %306, align 8
  %307 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %244 to i64*
  store i64 %30, i64* %307, align 8
  br label %711

308:                                              ; preds = %292, %349
  %309 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %355, %349 ], [ %295, %292 ]
  %310 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %309, align 8
  %311 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %310, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %312 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %310, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %315 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %314 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = sub i64 %313, %316
  %318 = icmp eq i64 %317, 0
  %319 = shl i64 %317, 6
  %320 = add i64 %319, -1
  %321 = select i1 %318, i64 0, i64 %320
  %322 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %310, i64 0, i32 1, i32 0, i32 0, i32 1
  %323 = load i64, i64* %322, align 8
  %324 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %310, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %325 = load i64, i64* %324, align 8
  %326 = add i64 %325, %323
  %327 = icmp eq i64 %321, %326
  %328 = inttoptr i64 %316 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %329 = inttoptr i64 %313 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  br i1 %327, label %330, label %337

330:                                              ; preds = %308
  %331 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %310, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque.677"* %331) #5
  %332 = load i64, i64* %324, align 8
  %333 = load i64, i64* %322, align 8
  %334 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %314, align 8
  %335 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %311, align 8
  %336 = add i64 %333, %332
  br label %337

337:                                              ; preds = %330, %308
  %338 = phi i64 [ %336, %330 ], [ %326, %308 ]
  %339 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %335, %330 ], [ %329, %308 ]
  %340 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %334, %330 ], [ %328, %308 ]
  %341 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %339, %340
  br i1 %341, label %349, label %342

342:                                              ; preds = %337
  %343 = lshr i64 %338, 9
  %344 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %340, i64 %343
  %345 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %344, align 8
  %346 = and i64 %338, 511
  %347 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %345, i64 %346
  %348 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %347 to i64*
  br label %349

349:                                              ; preds = %337, %342
  %350 = phi i64* [ %348, %342 ], [ null, %337 ]
  store i64 %30, i64* %350, align 8
  %351 = load i64, i64* %324, align 8
  %352 = add i64 %351, 1
  store i64 %352, i64* %324, align 8
  %353 = load i32, i32* %42, align 8
  %354 = add nsw i32 %353, 1
  store i32 %354, i32* %42, align 8
  %355 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %309, i64 1
  %356 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %355, %297
  br i1 %356, label %301, label %308

357:                                              ; preds = %239
  %358 = tail call i32 @_ZNK2v88internal8compiler20InstructionScheduler19GetInstructionFlagsEPKNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"* %0, %"class.v8::internal::compiler::Instruction"* %1) #5
  %359 = and i32 %358, 2
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %648, label %361

361:                                              ; preds = %357
  %362 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 3
  %363 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %362, align 8
  %364 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %363, null
  br i1 %364, label %410, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %363, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %367 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %366 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %363, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %370 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %369 to i64*
  %371 = load i64, i64* %370, align 8
  %372 = sub i64 %368, %371
  %373 = icmp eq i64 %372, 0
  %374 = shl i64 %372, 6
  %375 = add i64 %374, -1
  %376 = select i1 %373, i64 0, i64 %375
  %377 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %363, i64 0, i32 1, i32 0, i32 0, i32 1
  %378 = load i64, i64* %377, align 8
  %379 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %363, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %380 = load i64, i64* %379, align 8
  %381 = add i64 %380, %378
  %382 = icmp eq i64 %376, %381
  %383 = inttoptr i64 %371 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %384 = inttoptr i64 %368 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  br i1 %382, label %385, label %392

385:                                              ; preds = %365
  %386 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %363, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque.677"* %386) #5
  %387 = load i64, i64* %379, align 8
  %388 = load i64, i64* %377, align 8
  %389 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %369, align 8
  %390 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %366, align 8
  %391 = add i64 %388, %387
  br label %392

392:                                              ; preds = %385, %365
  %393 = phi i64 [ %391, %385 ], [ %381, %365 ]
  %394 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %390, %385 ], [ %384, %365 ]
  %395 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %389, %385 ], [ %383, %365 ]
  %396 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %394, %395
  br i1 %396, label %404, label %397

397:                                              ; preds = %392
  %398 = lshr i64 %393, 9
  %399 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %395, i64 %398
  %400 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %399, align 8
  %401 = and i64 %393, 511
  %402 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %400, i64 %401
  %403 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %402 to i64*
  br label %404

404:                                              ; preds = %392, %397
  %405 = phi i64* [ %403, %397 ], [ null, %392 ]
  store i64 %30, i64* %405, align 8
  %406 = load i64, i64* %379, align 8
  %407 = add i64 %406, 1
  store i64 %407, i64* %379, align 8
  %408 = load i32, i32* %42, align 8
  %409 = add nsw i32 %408, 1
  store i32 %409, i32* %42, align 8
  br label %410

410:                                              ; preds = %361, %404
  %411 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 4, i32 0
  %412 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %413 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %412, align 8
  %414 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %415 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %414, align 8
  %416 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %413, %415
  %417 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %415 to i64
  br i1 %416, label %423, label %418

418:                                              ; preds = %410
  %419 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %413 to i64*
  store i64 %30, i64* %419, align 8
  %420 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %413, i64 1
  %421 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %420 to i64
  %422 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %412 to i64*
  store i64 %421, i64* %422, align 8
  br label %711

423:                                              ; preds = %410
  %424 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %413 to i64
  %425 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %412 to i64*
  %426 = bitcast %"class.std::__1::vector.674"* %411 to i64*
  %427 = load i64, i64* %426, align 8
  %428 = sub i64 %424, %427
  %429 = ashr exact i64 %428, 3
  %430 = add nsw i64 %429, 1
  %431 = icmp ugt i64 %430, 268435455
  br i1 %431, label %432, label %434

432:                                              ; preds = %423
  %433 = bitcast %"class.std::__1::vector.674"* %411 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %433) #6
  unreachable

434:                                              ; preds = %423
  %435 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %414 to i64*
  %436 = sub i64 %417, %427
  %437 = ashr exact i64 %436, 3
  %438 = icmp ult i64 %437, 134217727
  br i1 %438, label %439, label %444

439:                                              ; preds = %434
  %440 = ashr exact i64 %436, 2
  %441 = icmp ult i64 %440, %430
  %442 = select i1 %441, i64 %430, i64 %440
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %462, label %444

444:                                              ; preds = %439, %434
  %445 = phi i64 [ %442, %439 ], [ 268435455, %434 ]
  %446 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %447 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %446, align 8
  %448 = shl i64 %445, 3
  %449 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %447, i64 0, i32 2
  %450 = load i64, i64* %449, align 8
  %451 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %447, i64 0, i32 3
  %452 = load i64, i64* %451, align 8
  %453 = sub i64 %452, %450
  %454 = icmp ugt i64 %448, %453
  br i1 %454, label %455, label %457, !prof !5

455:                                              ; preds = %444
  %456 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %447, i64 %448) #5
  br label %459

457:                                              ; preds = %444
  %458 = add i64 %450, %448
  store i64 %458, i64* %449, align 8
  br label %459

459:                                              ; preds = %457, %455
  %460 = phi i64 [ %456, %455 ], [ %450, %457 ]
  %461 = inttoptr i64 %460 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**
  br label %462

462:                                              ; preds = %459, %439
  %463 = phi i64 [ %445, %459 ], [ 0, %439 ]
  %464 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %461, %459 ], [ null, %439 ]
  %465 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %464, i64 %429
  %466 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %464, i64 %463
  %467 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %466 to i64
  %468 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %465 to i64*
  store i64 %30, i64* %468, align 8
  %469 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %465, i64 1
  %470 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %469 to i64
  %471 = getelementptr inbounds %"class.std::__1::vector.674", %"class.std::__1::vector.674"* %411, i64 0, i32 0, i32 0
  %472 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %471, align 8
  %473 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %472 to i64
  %474 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %412, align 8
  %475 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %474, %472
  br i1 %475, label %645, label %476

476:                                              ; preds = %462
  %477 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %474, i64 -1
  %478 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %477 to i64
  %479 = sub i64 %478, %473
  %480 = lshr i64 %479, 3
  %481 = add nuw nsw i64 %480, 1
  %482 = icmp ult i64 %481, 4
  br i1 %482, label %575, label %483

483:                                              ; preds = %476
  %484 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %474, i64 -1
  %485 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %484 to i64
  %486 = sub i64 %485, %473
  %487 = lshr i64 %486, 3
  %488 = xor i64 %487, -1
  %489 = add nsw i64 %429, %488
  %490 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %464, i64 %489
  %491 = xor i64 %487, -1
  %492 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %474, i64 %491
  %493 = icmp ult %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %490, %474
  %494 = icmp ult %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %492, %465
  %495 = and i1 %493, %494
  br i1 %495, label %575, label %496

496:                                              ; preds = %483
  %497 = and i64 %481, 4611686018427387900
  %498 = sub nsw i64 0, %497
  %499 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %465, i64 %498
  %500 = sub nsw i64 0, %497
  %501 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %474, i64 %500
  %502 = add nsw i64 %497, -4
  %503 = lshr exact i64 %502, 2
  %504 = add nuw nsw i64 %503, 1
  %505 = and i64 %504, 1
  %506 = icmp eq i64 %502, 0
  br i1 %506, label %551, label %507

507:                                              ; preds = %496
  %508 = sub nuw nsw i64 %504, %505
  %509 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %465, i64 -1
  %510 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %474, i64 -1
  %511 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %465, i64 -1
  %512 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %474, i64 -1
  br label %513

513:                                              ; preds = %513, %507
  %514 = phi i64 [ 0, %507 ], [ %548, %513 ]
  %515 = phi i64 [ %508, %507 ], [ %549, %513 ]
  %516 = sub i64 0, %514
  %517 = sub i64 0, %514
  %518 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %509, i64 %516
  %519 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %510, i64 %517
  %520 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %519, i64 -1
  %521 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %520 to <2 x i64>*
  %522 = load <2 x i64>, <2 x i64>* %521, align 8, !alias.scope !38
  %523 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %519, i64 -2
  %524 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %523, i64 -1
  %525 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %524 to <2 x i64>*
  %526 = load <2 x i64>, <2 x i64>* %525, align 8, !alias.scope !38
  %527 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %518, i64 -1
  %528 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %527 to <2 x i64>*
  store <2 x i64> %522, <2 x i64>* %528, align 8, !alias.scope !41, !noalias !38
  %529 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %518, i64 -2
  %530 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %529, i64 -1
  %531 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %530 to <2 x i64>*
  store <2 x i64> %526, <2 x i64>* %531, align 8, !alias.scope !41, !noalias !38
  %532 = sub nuw nsw i64 -4, %514
  %533 = sub nuw nsw i64 -4, %514
  %534 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %511, i64 %532
  %535 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %512, i64 %533
  %536 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %535, i64 -1
  %537 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %536 to <2 x i64>*
  %538 = load <2 x i64>, <2 x i64>* %537, align 8, !alias.scope !38
  %539 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %535, i64 -2
  %540 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %539, i64 -1
  %541 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %540 to <2 x i64>*
  %542 = load <2 x i64>, <2 x i64>* %541, align 8, !alias.scope !38
  %543 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %534, i64 -1
  %544 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %543 to <2 x i64>*
  store <2 x i64> %538, <2 x i64>* %544, align 8, !alias.scope !41, !noalias !38
  %545 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %534, i64 -2
  %546 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %545, i64 -1
  %547 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %546 to <2 x i64>*
  store <2 x i64> %542, <2 x i64>* %547, align 8, !alias.scope !41, !noalias !38
  %548 = add i64 %514, 8
  %549 = add i64 %515, -2
  %550 = icmp eq i64 %549, 0
  br i1 %550, label %551, label %513, !llvm.loop !43

551:                                              ; preds = %513, %496
  %552 = phi i64 [ 0, %496 ], [ %548, %513 ]
  %553 = icmp eq i64 %505, 0
  br i1 %553, label %573, label %554

554:                                              ; preds = %551
  %555 = sub i64 0, %552
  %556 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %465, i64 -1
  %557 = sub i64 0, %552
  %558 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %474, i64 -1
  %559 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %556, i64 %555
  %560 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %558, i64 %557
  %561 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %560, i64 -1
  %562 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %561 to <2 x i64>*
  %563 = load <2 x i64>, <2 x i64>* %562, align 8, !alias.scope !38
  %564 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %560, i64 -2
  %565 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %564, i64 -1
  %566 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %565 to <2 x i64>*
  %567 = load <2 x i64>, <2 x i64>* %566, align 8, !alias.scope !38
  %568 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %559, i64 -1
  %569 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %568 to <2 x i64>*
  store <2 x i64> %563, <2 x i64>* %569, align 8, !alias.scope !41, !noalias !38
  %570 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %559, i64 -2
  %571 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %570, i64 -1
  %572 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %571 to <2 x i64>*
  store <2 x i64> %567, <2 x i64>* %572, align 8, !alias.scope !41, !noalias !38
  br label %573

573:                                              ; preds = %551, %554
  %574 = icmp eq i64 %481, %497
  br i1 %574, label %645, label %575

575:                                              ; preds = %573, %483, %476
  %576 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %465, %483 ], [ %465, %476 ], [ %499, %573 ]
  %577 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %474, %483 ], [ %474, %476 ], [ %501, %573 ]
  %578 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %577, i64 -1
  %579 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %578 to i64
  %580 = sub i64 %579, %473
  %581 = lshr i64 %580, 3
  %582 = add nuw nsw i64 %581, 1
  %583 = and i64 %582, 7
  %584 = icmp eq i64 %583, 0
  br i1 %584, label %596, label %585

585:                                              ; preds = %575, %585
  %586 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %589, %585 ], [ %576, %575 ]
  %587 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %590, %585 ], [ %577, %575 ]
  %588 = phi i64 [ %594, %585 ], [ %583, %575 ]
  %589 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %586, i64 -1
  %590 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %587, i64 -1
  %591 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %590 to i64*
  %592 = load i64, i64* %591, align 8
  %593 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %589 to i64*
  store i64 %592, i64* %593, align 8
  %594 = add i64 %588, -1
  %595 = icmp eq i64 %594, 0
  br i1 %595, label %596, label %585, !llvm.loop !44

596:                                              ; preds = %585, %575
  %597 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ undef, %575 ], [ %589, %585 ]
  %598 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %576, %575 ], [ %589, %585 ]
  %599 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %577, %575 ], [ %590, %585 ]
  %600 = icmp ult i64 %580, 56
  br i1 %600, label %645, label %601

601:                                              ; preds = %596, %601
  %602 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %639, %601 ], [ %598, %596 ]
  %603 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %640, %601 ], [ %599, %596 ]
  %604 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %602, i64 -1
  %605 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %603, i64 -1
  %606 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %605 to i64*
  %607 = load i64, i64* %606, align 8
  %608 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %604 to i64*
  store i64 %607, i64* %608, align 8
  %609 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %602, i64 -2
  %610 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %603, i64 -2
  %611 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %610 to i64*
  %612 = load i64, i64* %611, align 8
  %613 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %609 to i64*
  store i64 %612, i64* %613, align 8
  %614 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %602, i64 -3
  %615 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %603, i64 -3
  %616 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %615 to i64*
  %617 = load i64, i64* %616, align 8
  %618 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %614 to i64*
  store i64 %617, i64* %618, align 8
  %619 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %602, i64 -4
  %620 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %603, i64 -4
  %621 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %620 to i64*
  %622 = load i64, i64* %621, align 8
  %623 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %619 to i64*
  store i64 %622, i64* %623, align 8
  %624 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %602, i64 -5
  %625 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %603, i64 -5
  %626 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %625 to i64*
  %627 = load i64, i64* %626, align 8
  %628 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %624 to i64*
  store i64 %627, i64* %628, align 8
  %629 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %602, i64 -6
  %630 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %603, i64 -6
  %631 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %630 to i64*
  %632 = load i64, i64* %631, align 8
  %633 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %629 to i64*
  store i64 %632, i64* %633, align 8
  %634 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %602, i64 -7
  %635 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %603, i64 -7
  %636 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %635 to i64*
  %637 = load i64, i64* %636, align 8
  %638 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %634 to i64*
  store i64 %637, i64* %638, align 8
  %639 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %602, i64 -8
  %640 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %603, i64 -8
  %641 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %640 to i64*
  %642 = load i64, i64* %641, align 8
  %643 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %639 to i64*
  store i64 %642, i64* %643, align 8
  %644 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %640, %472
  br i1 %644, label %645, label %601, !llvm.loop !45

645:                                              ; preds = %596, %601, %573, %462
  %646 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %465, %462 ], [ %499, %573 ], [ %597, %596 ], [ %639, %601 ]
  %647 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %646 to i64
  store i64 %647, i64* %426, align 8
  store i64 %470, i64* %425, align 8
  store i64 %467, i64* %435, align 8
  br label %711

648:                                              ; preds = %357
  %649 = load i32, i32* %47, align 8
  %650 = and i32 %649, 511
  %651 = icmp eq i32 %650, 20
  br i1 %651, label %660, label %652

652:                                              ; preds = %648
  %653 = lshr i32 %649, 14
  %654 = and i32 %653, 7
  %655 = add nsw i32 %654, -3
  %656 = icmp ult i32 %655, 2
  %657 = and i32 %649, 114688
  %658 = icmp eq i32 %657, 98304
  %659 = or i1 %658, %656
  br i1 %659, label %660, label %711

660:                                              ; preds = %648, %652
  %661 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 3
  %662 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %661, align 8
  %663 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %662, null
  br i1 %663, label %709, label %664

664:                                              ; preds = %660
  %665 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %662, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %666 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %665 to i64*
  %667 = load i64, i64* %666, align 8
  %668 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %662, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %669 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %668 to i64*
  %670 = load i64, i64* %669, align 8
  %671 = sub i64 %667, %670
  %672 = icmp eq i64 %671, 0
  %673 = shl i64 %671, 6
  %674 = add i64 %673, -1
  %675 = select i1 %672, i64 0, i64 %674
  %676 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %662, i64 0, i32 1, i32 0, i32 0, i32 1
  %677 = load i64, i64* %676, align 8
  %678 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %662, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %679 = load i64, i64* %678, align 8
  %680 = add i64 %679, %677
  %681 = icmp eq i64 %675, %680
  %682 = inttoptr i64 %670 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %683 = inttoptr i64 %667 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  br i1 %681, label %684, label %691

684:                                              ; preds = %664
  %685 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %662, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque.677"* %685) #5
  %686 = load i64, i64* %678, align 8
  %687 = load i64, i64* %676, align 8
  %688 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %668, align 8
  %689 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %665, align 8
  %690 = add i64 %687, %686
  br label %691

691:                                              ; preds = %684, %664
  %692 = phi i64 [ %690, %684 ], [ %680, %664 ]
  %693 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %689, %684 ], [ %683, %664 ]
  %694 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %688, %684 ], [ %682, %664 ]
  %695 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %693, %694
  br i1 %695, label %703, label %696

696:                                              ; preds = %691
  %697 = lshr i64 %692, 9
  %698 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %694, i64 %697
  %699 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %698, align 8
  %700 = and i64 %692, 511
  %701 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %699, i64 %700
  %702 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %701 to i64*
  br label %703

703:                                              ; preds = %691, %696
  %704 = phi i64* [ %702, %696 ], [ null, %691 ]
  store i64 %30, i64* %704, align 8
  %705 = load i64, i64* %678, align 8
  %706 = add i64 %705, 1
  store i64 %706, i64* %678, align 8
  %707 = load i32, i32* %42, align 8
  %708 = add nsw i32 %707, 1
  store i32 %708, i32* %42, align 8
  br label %709

709:                                              ; preds = %660, %703
  %710 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %166 to i64*
  store i64 %30, i64* %710, align 8
  br label %711

711:                                              ; preds = %652, %645, %418, %709, %304
  %712 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %713 = load i32, i32* %712, align 4
  %714 = and i32 %713, 16776960
  %715 = icmp eq i32 %714, 0
  br i1 %715, label %719, label %716

716:                                              ; preds = %711
  %717 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %718 = bitcast %"class.std::__1::__tree_end_node"* %717 to %"class.std::__1::__tree_node"**
  br label %733

719:                                              ; preds = %818, %711
  %720 = phi i32 [ %713, %711 ], [ %819, %818 ]
  %721 = and i32 %720, 255
  %722 = icmp eq i32 %721, 0
  br i1 %722, label %978, label %723

723:                                              ; preds = %719
  %724 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0
  %725 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %726 = bitcast %"class.std::__1::__tree_end_node"* %725 to %"class.std::__1::__tree_node"**
  %727 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %728 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %725, i64 0, i32 0
  %729 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %730 = getelementptr inbounds %"class.std::__1::map.693", %"class.std::__1::map.693"* %724, i64 0, i32 0, i32 0
  %731 = bitcast %"class.std::__1::map.693"* %724 to i64*
  %732 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %825

733:                                              ; preds = %716, %818
  %734 = phi i32 [ %713, %716 ], [ %819, %818 ]
  %735 = phi i64 [ 0, %716 ], [ %820, %818 ]
  %736 = and i32 %734, 255
  %737 = zext i32 %736 to i64
  %738 = add nuw i64 %735, %737
  %739 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %738, i32 0
  %740 = load i64, i64* %739, align 8
  %741 = and i64 %740, 7
  %742 = icmp eq i64 %741, 1
  br i1 %742, label %743, label %818

743:                                              ; preds = %733
  %744 = lshr i64 %740, 3
  %745 = trunc i64 %744 to i32
  %746 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %718, align 8
  %747 = icmp eq %"class.std::__1::__tree_node"* %746, null
  br i1 %747, label %818, label %748

748:                                              ; preds = %743, %748
  %749 = phi %"class.std::__1::__tree_end_node"* [ %759, %748 ], [ %717, %743 ]
  %750 = phi %"class.std::__1::__tree_node"* [ %760, %748 ], [ %746, %743 ]
  %751 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %750, i64 0, i32 1, i32 0, i32 0
  %752 = load i32, i32* %751, align 4
  %753 = icmp slt i32 %752, %745
  %754 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %750, i64 0, i32 0, i32 1
  %755 = bitcast %"class.std::__1::__tree_node_base"** %754 to %"class.std::__1::__tree_node"**
  %756 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %750, i64 0, i32 0, i32 0
  %757 = bitcast %"class.std::__1::__tree_node"* %750 to %"class.std::__1::__tree_node"**
  %758 = select i1 %753, %"class.std::__1::__tree_node"** %755, %"class.std::__1::__tree_node"** %757
  %759 = select i1 %753, %"class.std::__1::__tree_end_node"* %749, %"class.std::__1::__tree_end_node"* %756
  %760 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %758, align 8
  %761 = icmp eq %"class.std::__1::__tree_node"* %760, null
  br i1 %761, label %762, label %748

762:                                              ; preds = %748
  %763 = icmp eq %"class.std::__1::__tree_end_node"* %759, %717
  br i1 %763, label %818, label %764

764:                                              ; preds = %762
  %765 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %759, i64 4
  %766 = bitcast %"class.std::__1::__tree_end_node"* %765 to i32*
  %767 = load i32, i32* %766, align 4
  %768 = icmp sgt i32 %767, %745
  br i1 %768, label %818, label %769

769:                                              ; preds = %764
  %770 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %759, i64 5
  %771 = bitcast %"class.std::__1::__tree_end_node"* %770 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**
  %772 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %771, align 8
  %773 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %772, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %774 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %773 to i64*
  %775 = load i64, i64* %774, align 8
  %776 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %772, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %777 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %776 to i64*
  %778 = load i64, i64* %777, align 8
  %779 = sub i64 %775, %778
  %780 = icmp eq i64 %779, 0
  %781 = shl i64 %779, 6
  %782 = add i64 %781, -1
  %783 = select i1 %780, i64 0, i64 %782
  %784 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %772, i64 0, i32 1, i32 0, i32 0, i32 1
  %785 = load i64, i64* %784, align 8
  %786 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %772, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %787 = load i64, i64* %786, align 8
  %788 = add i64 %787, %785
  %789 = icmp eq i64 %783, %788
  %790 = inttoptr i64 %778 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %791 = inttoptr i64 %775 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  br i1 %789, label %792, label %799

792:                                              ; preds = %769
  %793 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %772, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque.677"* %793) #5
  %794 = load i64, i64* %786, align 8
  %795 = load i64, i64* %784, align 8
  %796 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %776, align 8
  %797 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %773, align 8
  %798 = add i64 %795, %794
  br label %799

799:                                              ; preds = %792, %769
  %800 = phi i64 [ %798, %792 ], [ %788, %769 ]
  %801 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %797, %792 ], [ %791, %769 ]
  %802 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %796, %792 ], [ %790, %769 ]
  %803 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %801, %802
  br i1 %803, label %811, label %804

804:                                              ; preds = %799
  %805 = lshr i64 %800, 9
  %806 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %802, i64 %805
  %807 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %806, align 8
  %808 = and i64 %800, 511
  %809 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %807, i64 %808
  %810 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %809 to i64*
  br label %811

811:                                              ; preds = %799, %804
  %812 = phi i64* [ %810, %804 ], [ null, %799 ]
  store i64 %30, i64* %812, align 8
  %813 = load i64, i64* %786, align 8
  %814 = add i64 %813, 1
  store i64 %814, i64* %786, align 8
  %815 = load i32, i32* %42, align 8
  %816 = add nsw i32 %815, 1
  store i32 %816, i32* %42, align 8
  %817 = load i32, i32* %712, align 4
  br label %818

818:                                              ; preds = %764, %762, %743, %811, %733
  %819 = phi i32 [ %734, %764 ], [ %734, %762 ], [ %734, %743 ], [ %817, %811 ], [ %734, %733 ]
  %820 = add nuw nsw i64 %735, 1
  %821 = lshr i32 %819, 8
  %822 = and i32 %821, 65535
  %823 = zext i32 %822 to i64
  %824 = icmp ult i64 %820, %823
  br i1 %824, label %733, label %719

825:                                              ; preds = %723, %972
  %826 = phi i64 [ 0, %723 ], [ %973, %972 ]
  %827 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %826, i32 0
  %828 = load i64, i64* %827, align 8
  %829 = and i64 %828, 7
  switch i64 %829, label %972 [
    i64 1, label %830
    i64 2, label %899
  ]

830:                                              ; preds = %825
  %831 = lshr i64 %828, 3
  %832 = trunc i64 %831 to i32
  %833 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %726, align 8
  %834 = icmp eq %"class.std::__1::__tree_node"* %833, null
  br i1 %834, label %861, label %835

835:                                              ; preds = %830, %857
  %836 = phi %"class.std::__1::__tree_node"* [ %860, %857 ], [ %833, %830 ]
  %837 = phi %"class.std::__1::__tree_node_base"** [ %859, %857 ], [ %727, %830 ]
  %838 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %836, i64 0, i32 1, i32 0, i32 0
  %839 = load i32, i32* %838, align 4
  %840 = icmp sgt i32 %839, %832
  br i1 %840, label %841, label %847

841:                                              ; preds = %835
  %842 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %836, i64 0, i32 0, i32 0, i32 0
  %843 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %842, align 8
  %844 = icmp eq %"class.std::__1::__tree_node_base"* %843, null
  br i1 %844, label %845, label %857

845:                                              ; preds = %841
  %846 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %836, i64 0, i32 0, i32 0
  br label %861

847:                                              ; preds = %835
  %848 = icmp slt i32 %839, %832
  br i1 %848, label %849, label %855

849:                                              ; preds = %847
  %850 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %836, i64 0, i32 0, i32 1
  %851 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %850, align 8
  %852 = icmp eq %"class.std::__1::__tree_node_base"* %851, null
  br i1 %852, label %853, label %857

853:                                              ; preds = %849
  %854 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %836, i64 0, i32 0, i32 0
  br label %861

855:                                              ; preds = %847
  %856 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %836, i64 0, i32 0, i32 0
  br label %861

857:                                              ; preds = %849, %841
  %858 = phi %"class.std::__1::__tree_node_base"* [ %843, %841 ], [ %851, %849 ]
  %859 = phi %"class.std::__1::__tree_node_base"** [ %842, %841 ], [ %850, %849 ]
  %860 = bitcast %"class.std::__1::__tree_node_base"* %858 to %"class.std::__1::__tree_node"*
  br label %835

861:                                              ; preds = %830, %855, %853, %845
  %862 = phi %"class.std::__1::__tree_end_node"* [ %846, %845 ], [ %854, %853 ], [ %856, %855 ], [ %725, %830 ]
  %863 = phi %"class.std::__1::__tree_node_base"** [ %842, %845 ], [ %850, %853 ], [ %837, %855 ], [ %728, %830 ]
  %864 = bitcast %"class.std::__1::__tree_node_base"** %863 to %"class.std::__1::__tree_node"**
  %865 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %864, align 8
  %866 = icmp eq %"class.std::__1::__tree_node"* %865, null
  br i1 %866, label %867, label %968

867:                                              ; preds = %861
  %868 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %729, align 8, !noalias !46
  %869 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %868, i64 0, i32 2
  %870 = load i64, i64* %869, align 8, !noalias !46
  %871 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %868, i64 0, i32 3
  %872 = load i64, i64* %871, align 8, !noalias !46
  %873 = sub i64 %872, %870
  %874 = icmp ult i64 %873, 48
  br i1 %874, label %875, label %877, !prof !5

875:                                              ; preds = %867
  %876 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %868, i64 48) #5, !noalias !46
  br label %879

877:                                              ; preds = %867
  %878 = add i64 %870, 48
  store i64 %878, i64* %869, align 8, !noalias !46
  br label %879

879:                                              ; preds = %877, %875
  %880 = phi i64 [ %876, %875 ], [ %870, %877 ]
  %881 = inttoptr i64 %880 to %"class.std::__1::__tree_node"*
  %882 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %881, i64 0, i32 1, i32 0, i32 0
  store i32 %832, i32* %882, align 8, !noalias !46
  %883 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %881, i64 0, i32 1, i32 0, i32 1
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* null, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %883, align 8, !noalias !46
  %884 = inttoptr i64 %880 to %"class.std::__1::__tree_node_base"*
  %885 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %884, i64 0, i32 2
  %886 = inttoptr i64 %880 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %886, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %862, %"class.std::__1::__tree_end_node"** %885, align 8
  store %"class.std::__1::__tree_node_base"* %884, %"class.std::__1::__tree_node_base"** %863, align 8
  %887 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %730, align 8
  %888 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %887, i64 0, i32 0
  %889 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %888, align 8
  %890 = icmp eq %"class.std::__1::__tree_node_base"* %889, null
  br i1 %890, label %894, label %891

891:                                              ; preds = %879
  %892 = ptrtoint %"class.std::__1::__tree_node_base"* %889 to i64
  store i64 %892, i64* %731, align 8
  %893 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %863, align 8
  br label %894

894:                                              ; preds = %891, %879
  %895 = phi %"class.std::__1::__tree_node_base"* [ %884, %879 ], [ %893, %891 ]
  %896 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %727, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %896, %"class.std::__1::__tree_node_base"* %895) #5
  %897 = load i64, i64* %732, align 8
  %898 = add i64 %897, 1
  store i64 %898, i64* %732, align 8
  br label %968

899:                                              ; preds = %825
  %900 = lshr i64 %828, 3
  %901 = trunc i64 %900 to i32
  %902 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %726, align 8
  %903 = icmp eq %"class.std::__1::__tree_node"* %902, null
  br i1 %903, label %930, label %904

904:                                              ; preds = %899, %926
  %905 = phi %"class.std::__1::__tree_node"* [ %929, %926 ], [ %902, %899 ]
  %906 = phi %"class.std::__1::__tree_node_base"** [ %928, %926 ], [ %727, %899 ]
  %907 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %905, i64 0, i32 1, i32 0, i32 0
  %908 = load i32, i32* %907, align 4
  %909 = icmp sgt i32 %908, %901
  br i1 %909, label %910, label %916

910:                                              ; preds = %904
  %911 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %905, i64 0, i32 0, i32 0, i32 0
  %912 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %911, align 8
  %913 = icmp eq %"class.std::__1::__tree_node_base"* %912, null
  br i1 %913, label %914, label %926

914:                                              ; preds = %910
  %915 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %905, i64 0, i32 0, i32 0
  br label %930

916:                                              ; preds = %904
  %917 = icmp slt i32 %908, %901
  br i1 %917, label %918, label %924

918:                                              ; preds = %916
  %919 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %905, i64 0, i32 0, i32 1
  %920 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %919, align 8
  %921 = icmp eq %"class.std::__1::__tree_node_base"* %920, null
  br i1 %921, label %922, label %926

922:                                              ; preds = %918
  %923 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %905, i64 0, i32 0, i32 0
  br label %930

924:                                              ; preds = %916
  %925 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %905, i64 0, i32 0, i32 0
  br label %930

926:                                              ; preds = %918, %910
  %927 = phi %"class.std::__1::__tree_node_base"* [ %912, %910 ], [ %920, %918 ]
  %928 = phi %"class.std::__1::__tree_node_base"** [ %911, %910 ], [ %919, %918 ]
  %929 = bitcast %"class.std::__1::__tree_node_base"* %927 to %"class.std::__1::__tree_node"*
  br label %904

930:                                              ; preds = %899, %924, %922, %914
  %931 = phi %"class.std::__1::__tree_end_node"* [ %915, %914 ], [ %923, %922 ], [ %925, %924 ], [ %725, %899 ]
  %932 = phi %"class.std::__1::__tree_node_base"** [ %911, %914 ], [ %919, %922 ], [ %906, %924 ], [ %728, %899 ]
  %933 = bitcast %"class.std::__1::__tree_node_base"** %932 to %"class.std::__1::__tree_node"**
  %934 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %933, align 8
  %935 = icmp eq %"class.std::__1::__tree_node"* %934, null
  br i1 %935, label %936, label %968

936:                                              ; preds = %930
  %937 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %729, align 8, !noalias !49
  %938 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %937, i64 0, i32 2
  %939 = load i64, i64* %938, align 8, !noalias !49
  %940 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %937, i64 0, i32 3
  %941 = load i64, i64* %940, align 8, !noalias !49
  %942 = sub i64 %941, %939
  %943 = icmp ult i64 %942, 48
  br i1 %943, label %944, label %946, !prof !5

944:                                              ; preds = %936
  %945 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %937, i64 48) #5, !noalias !49
  br label %948

946:                                              ; preds = %936
  %947 = add i64 %939, 48
  store i64 %947, i64* %938, align 8, !noalias !49
  br label %948

948:                                              ; preds = %946, %944
  %949 = phi i64 [ %945, %944 ], [ %939, %946 ]
  %950 = inttoptr i64 %949 to %"class.std::__1::__tree_node"*
  %951 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %950, i64 0, i32 1, i32 0, i32 0
  store i32 %901, i32* %951, align 8, !noalias !49
  %952 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %950, i64 0, i32 1, i32 0, i32 1
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* null, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %952, align 8, !noalias !49
  %953 = inttoptr i64 %949 to %"class.std::__1::__tree_node_base"*
  %954 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %953, i64 0, i32 2
  %955 = inttoptr i64 %949 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %955, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %931, %"class.std::__1::__tree_end_node"** %954, align 8
  store %"class.std::__1::__tree_node_base"* %953, %"class.std::__1::__tree_node_base"** %932, align 8
  %956 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %730, align 8
  %957 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %956, i64 0, i32 0
  %958 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %957, align 8
  %959 = icmp eq %"class.std::__1::__tree_node_base"* %958, null
  br i1 %959, label %963, label %960

960:                                              ; preds = %948
  %961 = ptrtoint %"class.std::__1::__tree_node_base"* %958 to i64
  store i64 %961, i64* %731, align 8
  %962 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %932, align 8
  br label %963

963:                                              ; preds = %960, %948
  %964 = phi %"class.std::__1::__tree_node_base"* [ %953, %948 ], [ %962, %960 ]
  %965 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %727, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %965, %"class.std::__1::__tree_node_base"* %964) #5
  %966 = load i64, i64* %732, align 8
  %967 = add i64 %966, 1
  store i64 %967, i64* %732, align 8
  br label %968

968:                                              ; preds = %963, %930, %894, %861
  %969 = phi %"class.std::__1::__tree_node"* [ %881, %894 ], [ %865, %861 ], [ %950, %963 ], [ %934, %930 ]
  %970 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %969, i64 0, i32 1, i32 0, i32 1
  %971 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %970 to i64*
  store i64 %30, i64* %971, align 8
  br label %972

972:                                              ; preds = %968, %825
  %973 = add nuw nsw i64 %826, 1
  %974 = load i32, i32* %712, align 4
  %975 = and i32 %974, 255
  %976 = zext i32 %975 to i64
  %977 = icmp ult i64 %973, %976
  br i1 %977, label %825, label %978

978:                                              ; preds = %972, %719, %116
  %979 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0
  %980 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %981 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %980, align 8
  %982 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %983 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %982, align 8
  %984 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %981, %983
  %985 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %983 to i64
  br i1 %984, label %991, label %986

986:                                              ; preds = %978
  %987 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %981 to i64*
  store i64 %30, i64* %987, align 8
  %988 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %981, i64 1
  %989 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %988 to i64
  %990 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %980 to i64*
  store i64 %989, i64* %990, align 8
  br label %1216

991:                                              ; preds = %978
  %992 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %981 to i64
  %993 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %980 to i64*
  %994 = bitcast %"class.std::__1::vector.674"* %979 to i64*
  %995 = load i64, i64* %994, align 8
  %996 = sub i64 %992, %995
  %997 = ashr exact i64 %996, 3
  %998 = add nsw i64 %997, 1
  %999 = icmp ugt i64 %998, 268435455
  br i1 %999, label %1000, label %1002

1000:                                             ; preds = %991
  %1001 = bitcast %"class.std::__1::vector.674"* %979 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1001) #6
  unreachable

1002:                                             ; preds = %991
  %1003 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %982 to i64*
  %1004 = sub i64 %985, %995
  %1005 = ashr exact i64 %1004, 3
  %1006 = icmp ult i64 %1005, 134217727
  br i1 %1006, label %1007, label %1012

1007:                                             ; preds = %1002
  %1008 = ashr exact i64 %1004, 2
  %1009 = icmp ult i64 %1008, %998
  %1010 = select i1 %1009, i64 %998, i64 %1008
  %1011 = icmp eq i64 %1010, 0
  br i1 %1011, label %1030, label %1012

1012:                                             ; preds = %1007, %1002
  %1013 = phi i64 [ %1010, %1007 ], [ 268435455, %1002 ]
  %1014 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1015 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1014, align 8
  %1016 = shl i64 %1013, 3
  %1017 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1015, i64 0, i32 2
  %1018 = load i64, i64* %1017, align 8
  %1019 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1015, i64 0, i32 3
  %1020 = load i64, i64* %1019, align 8
  %1021 = sub i64 %1020, %1018
  %1022 = icmp ugt i64 %1016, %1021
  br i1 %1022, label %1023, label %1025, !prof !5

1023:                                             ; preds = %1012
  %1024 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1015, i64 %1016) #5
  br label %1027

1025:                                             ; preds = %1012
  %1026 = add i64 %1018, %1016
  store i64 %1026, i64* %1017, align 8
  br label %1027

1027:                                             ; preds = %1025, %1023
  %1028 = phi i64 [ %1024, %1023 ], [ %1018, %1025 ]
  %1029 = inttoptr i64 %1028 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**
  br label %1030

1030:                                             ; preds = %1027, %1007
  %1031 = phi i64 [ %1013, %1027 ], [ 0, %1007 ]
  %1032 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %1029, %1027 ], [ null, %1007 ]
  %1033 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1032, i64 %997
  %1034 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1032, i64 %1031
  %1035 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1034 to i64
  %1036 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1033 to i64*
  store i64 %30, i64* %1036, align 8
  %1037 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1033, i64 1
  %1038 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1037 to i64
  %1039 = getelementptr inbounds %"class.std::__1::vector.674", %"class.std::__1::vector.674"* %979, i64 0, i32 0, i32 0
  %1040 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %1039, align 8
  %1041 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1040 to i64
  %1042 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %980, align 8
  %1043 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1042, %1040
  br i1 %1043, label %1213, label %1044

1044:                                             ; preds = %1030
  %1045 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1042, i64 -1
  %1046 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1045 to i64
  %1047 = sub i64 %1046, %1041
  %1048 = lshr i64 %1047, 3
  %1049 = add nuw nsw i64 %1048, 1
  %1050 = icmp ult i64 %1049, 4
  br i1 %1050, label %1143, label %1051

1051:                                             ; preds = %1044
  %1052 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1042, i64 -1
  %1053 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1052 to i64
  %1054 = sub i64 %1053, %1041
  %1055 = lshr i64 %1054, 3
  %1056 = xor i64 %1055, -1
  %1057 = add nsw i64 %997, %1056
  %1058 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1032, i64 %1057
  %1059 = xor i64 %1055, -1
  %1060 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1042, i64 %1059
  %1061 = icmp ult %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1058, %1042
  %1062 = icmp ult %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1060, %1033
  %1063 = and i1 %1061, %1062
  br i1 %1063, label %1143, label %1064

1064:                                             ; preds = %1051
  %1065 = and i64 %1049, 4611686018427387900
  %1066 = sub nsw i64 0, %1065
  %1067 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1033, i64 %1066
  %1068 = sub nsw i64 0, %1065
  %1069 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1042, i64 %1068
  %1070 = add nsw i64 %1065, -4
  %1071 = lshr exact i64 %1070, 2
  %1072 = add nuw nsw i64 %1071, 1
  %1073 = and i64 %1072, 1
  %1074 = icmp eq i64 %1070, 0
  br i1 %1074, label %1121, label %1075

1075:                                             ; preds = %1064
  %1076 = sub nuw nsw i64 %1072, %1073
  %1077 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1033, i64 -1
  %1078 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1042, i64 -1
  %1079 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1033, i64 -1
  %1080 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1042, i64 -1
  br label %1081

1081:                                             ; preds = %1081, %1075
  %1082 = phi i64 [ 0, %1075 ], [ %1116, %1081 ]
  %1083 = phi i64 [ %1076, %1075 ], [ %1117, %1081 ]
  %1084 = sub i64 0, %1082
  %1085 = sub i64 0, %1082
  %1086 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1077, i64 %1084
  %1087 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1078, i64 %1085
  %1088 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1087, i64 -1
  %1089 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1088 to <2 x i64>*
  %1090 = load <2 x i64>, <2 x i64>* %1089, align 8, !alias.scope !52
  %1091 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1087, i64 -2
  %1092 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1091, i64 -1
  %1093 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1092 to <2 x i64>*
  %1094 = load <2 x i64>, <2 x i64>* %1093, align 8, !alias.scope !52
  %1095 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1086, i64 -1
  %1096 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1095 to <2 x i64>*
  store <2 x i64> %1090, <2 x i64>* %1096, align 8, !alias.scope !55, !noalias !52
  %1097 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1086, i64 -2
  %1098 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1097, i64 -1
  %1099 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1098 to <2 x i64>*
  store <2 x i64> %1094, <2 x i64>* %1099, align 8, !alias.scope !55, !noalias !52
  %1100 = sub nuw nsw i64 -4, %1082
  %1101 = sub nuw nsw i64 -4, %1082
  %1102 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1079, i64 %1100
  %1103 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1080, i64 %1101
  %1104 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1103, i64 -1
  %1105 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1104 to <2 x i64>*
  %1106 = load <2 x i64>, <2 x i64>* %1105, align 8, !alias.scope !52
  %1107 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1103, i64 -2
  %1108 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1107, i64 -1
  %1109 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1108 to <2 x i64>*
  %1110 = load <2 x i64>, <2 x i64>* %1109, align 8, !alias.scope !52
  %1111 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1102, i64 -1
  %1112 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1111 to <2 x i64>*
  store <2 x i64> %1106, <2 x i64>* %1112, align 8, !alias.scope !55, !noalias !52
  %1113 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1102, i64 -2
  %1114 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1113, i64 -1
  %1115 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1114 to <2 x i64>*
  store <2 x i64> %1110, <2 x i64>* %1115, align 8, !alias.scope !55, !noalias !52
  %1116 = add i64 %1082, 8
  %1117 = add i64 %1083, -2
  %1118 = icmp eq i64 %1117, 0
  br i1 %1118, label %1119, label %1081, !llvm.loop !57

1119:                                             ; preds = %1081
  %1120 = sub nuw nsw i64 -8, %1082
  br label %1121

1121:                                             ; preds = %1119, %1064
  %1122 = phi i64 [ 0, %1064 ], [ %1120, %1119 ]
  %1123 = icmp eq i64 %1073, 0
  br i1 %1123, label %1141, label %1124

1124:                                             ; preds = %1121
  %1125 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1033, i64 -1
  %1126 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1042, i64 -1
  %1127 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1125, i64 %1122
  %1128 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1126, i64 %1122
  %1129 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1128, i64 -1
  %1130 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1129 to <2 x i64>*
  %1131 = load <2 x i64>, <2 x i64>* %1130, align 8, !alias.scope !52
  %1132 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1128, i64 -2
  %1133 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1132, i64 -1
  %1134 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1133 to <2 x i64>*
  %1135 = load <2 x i64>, <2 x i64>* %1134, align 8, !alias.scope !52
  %1136 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1127, i64 -1
  %1137 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1136 to <2 x i64>*
  store <2 x i64> %1131, <2 x i64>* %1137, align 8, !alias.scope !55, !noalias !52
  %1138 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1127, i64 -2
  %1139 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1138, i64 -1
  %1140 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1139 to <2 x i64>*
  store <2 x i64> %1135, <2 x i64>* %1140, align 8, !alias.scope !55, !noalias !52
  br label %1141

1141:                                             ; preds = %1121, %1124
  %1142 = icmp eq i64 %1049, %1065
  br i1 %1142, label %1213, label %1143

1143:                                             ; preds = %1141, %1051, %1044
  %1144 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %1033, %1051 ], [ %1033, %1044 ], [ %1067, %1141 ]
  %1145 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %1042, %1051 ], [ %1042, %1044 ], [ %1069, %1141 ]
  %1146 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1145, i64 -1
  %1147 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1146 to i64
  %1148 = sub i64 %1147, %1041
  %1149 = lshr i64 %1148, 3
  %1150 = add nuw nsw i64 %1149, 1
  %1151 = and i64 %1150, 7
  %1152 = icmp eq i64 %1151, 0
  br i1 %1152, label %1164, label %1153

1153:                                             ; preds = %1143, %1153
  %1154 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %1157, %1153 ], [ %1144, %1143 ]
  %1155 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %1158, %1153 ], [ %1145, %1143 ]
  %1156 = phi i64 [ %1162, %1153 ], [ %1151, %1143 ]
  %1157 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1154, i64 -1
  %1158 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1155, i64 -1
  %1159 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1158 to i64*
  %1160 = load i64, i64* %1159, align 8
  %1161 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1157 to i64*
  store i64 %1160, i64* %1161, align 8
  %1162 = add i64 %1156, -1
  %1163 = icmp eq i64 %1162, 0
  br i1 %1163, label %1164, label %1153, !llvm.loop !58

1164:                                             ; preds = %1153, %1143
  %1165 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ undef, %1143 ], [ %1157, %1153 ]
  %1166 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %1144, %1143 ], [ %1157, %1153 ]
  %1167 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %1145, %1143 ], [ %1158, %1153 ]
  %1168 = icmp ult i64 %1148, 56
  br i1 %1168, label %1213, label %1169

1169:                                             ; preds = %1164, %1169
  %1170 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %1207, %1169 ], [ %1166, %1164 ]
  %1171 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %1208, %1169 ], [ %1167, %1164 ]
  %1172 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1170, i64 -1
  %1173 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1171, i64 -1
  %1174 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1173 to i64*
  %1175 = load i64, i64* %1174, align 8
  %1176 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1172 to i64*
  store i64 %1175, i64* %1176, align 8
  %1177 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1170, i64 -2
  %1178 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1171, i64 -2
  %1179 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1178 to i64*
  %1180 = load i64, i64* %1179, align 8
  %1181 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1177 to i64*
  store i64 %1180, i64* %1181, align 8
  %1182 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1170, i64 -3
  %1183 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1171, i64 -3
  %1184 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1183 to i64*
  %1185 = load i64, i64* %1184, align 8
  %1186 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1182 to i64*
  store i64 %1185, i64* %1186, align 8
  %1187 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1170, i64 -4
  %1188 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1171, i64 -4
  %1189 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1188 to i64*
  %1190 = load i64, i64* %1189, align 8
  %1191 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1187 to i64*
  store i64 %1190, i64* %1191, align 8
  %1192 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1170, i64 -5
  %1193 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1171, i64 -5
  %1194 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1193 to i64*
  %1195 = load i64, i64* %1194, align 8
  %1196 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1192 to i64*
  store i64 %1195, i64* %1196, align 8
  %1197 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1170, i64 -6
  %1198 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1171, i64 -6
  %1199 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1198 to i64*
  %1200 = load i64, i64* %1199, align 8
  %1201 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1197 to i64*
  store i64 %1200, i64* %1201, align 8
  %1202 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1170, i64 -7
  %1203 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1171, i64 -7
  %1204 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1203 to i64*
  %1205 = load i64, i64* %1204, align 8
  %1206 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1202 to i64*
  store i64 %1205, i64* %1206, align 8
  %1207 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1170, i64 -8
  %1208 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1171, i64 -8
  %1209 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1208 to i64*
  %1210 = load i64, i64* %1209, align 8
  %1211 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1207 to i64*
  store i64 %1210, i64* %1211, align 8
  %1212 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1208, %1040
  br i1 %1212, label %1213, label %1169, !llvm.loop !59

1213:                                             ; preds = %1164, %1169, %1141, %1030
  %1214 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %1033, %1030 ], [ %1067, %1141 ], [ %1165, %1164 ], [ %1207, %1169 ]
  %1215 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %1214 to i64
  store i64 %1215, i64* %994, align 8
  store i64 %1038, i64* %993, align 8
  store i64 %1035, i64* %1003, align 8
  br label %1216

1216:                                             ; preds = %1213, %986, %11
  ret void
}

declare i32 @_ZN2v88internal8compiler19InstructionSequence14AddInstructionEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler20InstructionScheduler19GetInstructionFlagsEPKNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 511
  switch i32 %5, label %18 [
    i32 15, label %19
    i32 29, label %19
    i32 22, label %19
    i32 23, label %19
    i32 26, label %19
    i32 18, label %19
    i32 20, label %19
    i32 12, label %19
    i32 13, label %19
    i32 21, label %19
    i32 14, label %19
    i32 19, label %19
    i32 24, label %19
    i32 73, label %19
    i32 74, label %19
    i32 75, label %19
    i32 76, label %19
    i32 77, label %19
    i32 78, label %19
    i32 79, label %19
    i32 80, label %19
    i32 81, label %19
    i32 82, label %19
    i32 83, label %19
    i32 84, label %19
    i32 85, label %19
    i32 86, label %19
    i32 87, label %19
    i32 88, label %19
    i32 89, label %19
    i32 90, label %19
    i32 91, label %19
    i32 92, label %19
    i32 93, label %19
    i32 28, label %6
    i32 27, label %7
    i32 7, label %8
    i32 11, label %8
    i32 0, label %8
    i32 1, label %8
    i32 2, label %8
    i32 16, label %8
    i32 17, label %9
    i32 8, label %10
    i32 9, label %10
    i32 10, label %11
    i32 3, label %11
    i32 4, label %11
    i32 5, label %11
    i32 6, label %11
    i32 25, label %12
    i32 30, label %13
    i32 31, label %13
    i32 32, label %13
    i32 33, label %13
    i32 34, label %13
    i32 35, label %14
    i32 36, label %14
    i32 37, label %14
    i32 38, label %15
    i32 39, label %15
    i32 40, label %15
    i32 41, label %15
    i32 42, label %15
    i32 43, label %15
    i32 44, label %15
    i32 45, label %15
    i32 46, label %15
    i32 47, label %15
    i32 48, label %15
    i32 49, label %15
    i32 50, label %15
    i32 51, label %15
    i32 52, label %15
    i32 53, label %15
    i32 54, label %15
    i32 55, label %15
    i32 56, label %15
    i32 57, label %15
    i32 58, label %15
    i32 59, label %15
    i32 60, label %15
    i32 61, label %15
    i32 62, label %15
    i32 63, label %15
    i32 64, label %15
    i32 65, label %15
    i32 66, label %15
    i32 67, label %15
    i32 68, label %15
    i32 69, label %15
    i32 70, label %15
    i32 71, label %15
    i32 72, label %15
    i32 94, label %16
    i32 95, label %16
    i32 96, label %16
    i32 97, label %16
    i32 98, label %16
    i32 99, label %16
    i32 100, label %16
    i32 101, label %16
    i32 102, label %16
    i32 103, label %16
    i32 104, label %16
    i32 105, label %16
    i32 106, label %16
    i32 107, label %16
    i32 108, label %16
    i32 109, label %16
    i32 110, label %16
    i32 111, label %16
    i32 112, label %16
    i32 113, label %16
    i32 114, label %16
    i32 115, label %16
    i32 116, label %16
    i32 117, label %16
    i32 118, label %16
    i32 119, label %16
    i32 120, label %16
    i32 121, label %16
    i32 122, label %16
    i32 123, label %16
    i32 124, label %16
    i32 125, label %16
    i32 126, label %16
    i32 127, label %16
    i32 128, label %16
    i32 129, label %16
    i32 130, label %16
    i32 131, label %16
    i32 132, label %16
    i32 133, label %16
    i32 134, label %16
    i32 135, label %16
    i32 136, label %16
    i32 137, label %16
    i32 138, label %16
    i32 139, label %16
    i32 140, label %16
    i32 141, label %16
    i32 142, label %16
    i32 143, label %16
    i32 144, label %16
    i32 145, label %16
    i32 146, label %16
    i32 147, label %16
    i32 148, label %16
    i32 149, label %16
    i32 150, label %16
    i32 151, label %16
    i32 152, label %16
    i32 153, label %16
    i32 154, label %16
    i32 155, label %16
    i32 156, label %16
    i32 157, label %16
    i32 158, label %16
    i32 159, label %16
    i32 160, label %16
    i32 161, label %16
    i32 162, label %16
    i32 163, label %16
    i32 164, label %16
    i32 165, label %16
    i32 166, label %16
    i32 167, label %16
    i32 168, label %16
    i32 169, label %16
    i32 170, label %16
    i32 171, label %16
    i32 172, label %16
    i32 173, label %16
    i32 174, label %16
    i32 175, label %16
    i32 176, label %16
    i32 177, label %16
    i32 178, label %16
    i32 179, label %16
    i32 180, label %16
    i32 181, label %16
    i32 182, label %16
    i32 183, label %16
    i32 184, label %16
    i32 185, label %16
    i32 186, label %16
    i32 187, label %16
    i32 188, label %16
    i32 189, label %16
    i32 190, label %16
    i32 191, label %16
    i32 192, label %16
    i32 193, label %16
    i32 194, label %16
    i32 195, label %16
    i32 196, label %16
    i32 197, label %16
    i32 198, label %16
    i32 199, label %16
    i32 200, label %16
    i32 201, label %16
    i32 202, label %16
    i32 203, label %16
    i32 204, label %16
    i32 205, label %16
    i32 206, label %16
    i32 207, label %16
    i32 208, label %16
    i32 209, label %16
    i32 210, label %16
    i32 211, label %16
    i32 212, label %16
    i32 213, label %16
    i32 214, label %16
    i32 215, label %16
    i32 216, label %16
    i32 217, label %16
    i32 218, label %16
    i32 219, label %16
    i32 220, label %16
    i32 221, label %16
    i32 222, label %16
    i32 223, label %16
    i32 224, label %16
    i32 225, label %16
    i32 226, label %16
    i32 227, label %16
    i32 228, label %16
    i32 229, label %16
    i32 230, label %16
    i32 231, label %16
    i32 232, label %16
    i32 233, label %16
    i32 234, label %16
    i32 235, label %16
    i32 236, label %16
    i32 237, label %16
    i32 238, label %16
    i32 239, label %16
    i32 240, label %16
    i32 241, label %16
    i32 242, label %16
    i32 243, label %16
    i32 244, label %16
    i32 245, label %16
    i32 246, label %16
    i32 247, label %16
    i32 248, label %16
    i32 249, label %16
    i32 250, label %16
    i32 251, label %16
    i32 252, label %16
    i32 253, label %16
    i32 254, label %16
    i32 255, label %16
    i32 256, label %16
    i32 257, label %16
    i32 258, label %16
    i32 259, label %16
    i32 260, label %16
    i32 261, label %16
    i32 262, label %16
    i32 263, label %16
    i32 264, label %16
    i32 265, label %16
    i32 266, label %16
    i32 267, label %16
    i32 268, label %16
    i32 269, label %16
    i32 270, label %16
    i32 271, label %16
    i32 272, label %16
    i32 273, label %16
    i32 274, label %16
    i32 275, label %16
    i32 276, label %16
    i32 277, label %16
    i32 278, label %16
    i32 279, label %16
    i32 280, label %16
    i32 281, label %16
    i32 282, label %16
    i32 283, label %16
    i32 284, label %16
    i32 285, label %16
    i32 286, label %16
    i32 287, label %16
    i32 288, label %16
    i32 289, label %16
    i32 290, label %16
    i32 291, label %16
    i32 292, label %16
    i32 293, label %16
    i32 294, label %16
    i32 295, label %16
    i32 296, label %16
    i32 297, label %16
    i32 298, label %16
    i32 299, label %16
    i32 300, label %16
    i32 301, label %16
    i32 302, label %16
    i32 303, label %16
    i32 304, label %16
    i32 305, label %16
    i32 306, label %16
    i32 307, label %16
    i32 308, label %16
    i32 309, label %16
    i32 310, label %16
    i32 311, label %16
    i32 312, label %16
    i32 313, label %16
    i32 314, label %16
    i32 315, label %16
    i32 316, label %16
    i32 317, label %16
    i32 318, label %16
    i32 319, label %16
    i32 320, label %16
    i32 321, label %16
    i32 322, label %16
    i32 323, label %16
    i32 324, label %16
    i32 325, label %16
    i32 326, label %16
    i32 327, label %16
    i32 328, label %16
    i32 329, label %16
    i32 330, label %16
    i32 331, label %16
    i32 332, label %16
    i32 333, label %16
    i32 334, label %16
    i32 335, label %16
    i32 336, label %16
    i32 337, label %16
    i32 338, label %16
    i32 339, label %16
    i32 340, label %16
    i32 341, label %16
    i32 342, label %16
    i32 343, label %16
    i32 344, label %16
    i32 345, label %16
    i32 346, label %16
    i32 347, label %16
    i32 348, label %16
    i32 349, label %16
    i32 350, label %16
    i32 351, label %16
    i32 352, label %16
    i32 353, label %16
    i32 354, label %16
    i32 355, label %16
    i32 356, label %16
    i32 357, label %16
    i32 358, label %16
    i32 359, label %16
    i32 360, label %16
    i32 361, label %16
    i32 362, label %16
    i32 363, label %16
    i32 364, label %16
    i32 365, label %16
    i32 366, label %16
    i32 367, label %16
    i32 368, label %16
    i32 369, label %16
    i32 370, label %16
    i32 371, label %16
    i32 372, label %16
    i32 373, label %16
    i32 374, label %16
    i32 375, label %16
    i32 376, label %16
    i32 377, label %16
    i32 378, label %16
    i32 379, label %16
    i32 380, label %16
    i32 381, label %16
    i32 382, label %16
    i32 383, label %16
    i32 384, label %16
    i32 385, label %16
    i32 386, label %16
    i32 387, label %16
    i32 388, label %16
    i32 389, label %16
    i32 390, label %16
    i32 391, label %16
    i32 392, label %16
    i32 393, label %16
    i32 394, label %16
    i32 395, label %16
    i32 396, label %16
    i32 397, label %16
    i32 398, label %16
    i32 399, label %16
    i32 400, label %16
    i32 401, label %16
    i32 402, label %16
    i32 403, label %16
    i32 404, label %16
    i32 405, label %16
    i32 406, label %16
    i32 407, label %16
    i32 408, label %16
    i32 409, label %16
    i32 410, label %16
    i32 411, label %16
    i32 412, label %16
    i32 413, label %16
    i32 414, label %16
    i32 415, label %16
    i32 416, label %16
    i32 417, label %16
    i32 418, label %16
    i32 419, label %16
    i32 420, label %16
    i32 421, label %16
    i32 422, label %16
    i32 423, label %16
    i32 424, label %16
    i32 425, label %16
    i32 426, label %16
    i32 427, label %16
    i32 428, label %16
    i32 429, label %16
    i32 430, label %16
    i32 431, label %16
    i32 432, label %16
    i32 433, label %16
    i32 434, label %16
    i32 435, label %16
    i32 436, label %16
    i32 437, label %16
    i32 438, label %16
    i32 439, label %16
    i32 440, label %16
    i32 441, label %16
    i32 442, label %16
    i32 443, label %16
    i32 444, label %16
    i32 445, label %16
    i32 446, label %16
    i32 447, label %16
    i32 448, label %16
    i32 449, label %16
    i32 450, label %16
    i32 451, label %16
    i32 452, label %16
    i32 453, label %16
    i32 454, label %16
    i32 455, label %16
    i32 456, label %16
    i32 457, label %16
    i32 458, label %16
    i32 459, label %16
    i32 460, label %16
    i32 461, label %16
    i32 462, label %16
    i32 463, label %16
    i32 464, label %16
    i32 465, label %16
    i32 466, label %16
    i32 467, label %16
    i32 468, label %16
    i32 469, label %16
    i32 470, label %16
    i32 471, label %16
    i32 472, label %16
    i32 473, label %16
    i32 474, label %16
    i32 475, label %16
    i32 476, label %16
    i32 477, label %16
    i32 478, label %16
    i32 479, label %16
    i32 480, label %16
    i32 481, label %16
    i32 482, label %16
    i32 483, label %16
    i32 484, label %16
    i32 485, label %16
    i32 486, label %16
    i32 487, label %16
    i32 488, label %16
    i32 489, label %16
    i32 490, label %16
    i32 491, label %16
    i32 492, label %16
    i32 493, label %16
    i32 494, label %16
    i32 495, label %16
    i32 496, label %16
    i32 497, label %16
    i32 498, label %16
    i32 499, label %16
    i32 500, label %16
  ]

6:                                                ; preds = %2
  br label %19

7:                                                ; preds = %2
  br label %19

8:                                                ; preds = %2, %2, %2, %2, %2, %2
  br label %19

9:                                                ; preds = %2
  br label %19

10:                                               ; preds = %2, %2
  br label %19

11:                                               ; preds = %2, %2, %2, %2, %2
  br label %19

12:                                               ; preds = %2
  br label %19

13:                                               ; preds = %2, %2, %2, %2, %2
  br label %19

14:                                               ; preds = %2, %2, %2
  br label %19

15:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  br label %19

16:                                               ; preds
  %17 = tail call i32 @_ZNK2v88internal8compiler20InstructionScheduler25GetTargetInstructionFlagsEPKNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"* %0, %"class.v8::internal::compiler::Instruction"* %1) #5
  br label %19

18:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

19:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6
  %20 = phi i32 [ %17, %16 ], [ 1, %15 ], [ 1, %14 ], [ 2, %13 ], [ 1, %12 ], [ 8, %11 ], [ 8, %10 ], [ 8, %9 ], [ 1, %8 ], [ 1, %7 ], [ 2, %6 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ], [ 0, %2 ]
  ret i32 %20
}

declare i32 @_ZNK2v88internal8compiler20InstructionScheduler25GetTargetInstructionFlagsEPKNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler20InstructionScheduler21ComputeTotalLatenciesEv(%"class.v8::internal::compiler::InstructionScheduler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %3 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %2, align 8, !noalias !60
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler", %"class.v8::internal::compiler::InstructionScheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4, align 8, !noalias !60
  %6 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %3, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %34, %1
  ret void

8:                                                ; preds = %1, %34
  %9 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %10, %34 ], [ %3, %1 ]
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %9, i64 -1
  %11 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %11, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 9
  %17 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %13, i64 %16
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %18, align 8
  %20 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %19, %13
  br i1 %20, label %34, label %21

21:                                               ; preds = %8
  %22 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %17, align 8
  %23 = and i64 %15, 511
  %24 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %22, i64 %23
  %25 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %11, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, %15
  %28 = lshr i64 %27, 9
  %29 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %13, i64 %28
  %30 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %29, align 8
  %31 = and i64 %27, 511
  %32 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %30, i64 %31
  %33 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %24, %32
  br i1 %33, label %34, label %41

34:                                               ; preds = %60, %8, %21
  %35 = phi i32 [ 0, %21 ], [ 0, %8 ], [ %49, %60 ]
  %36 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %11, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, %35
  %39 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %11, i64 0, i32 4
  store i32 %38, i32* %39, align 8
  %40 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %10, %5
  br i1 %40, label %7, label %8

41:                                               ; preds = %21, %60
  %42 = phi i32 [ %49, %60 ], [ 0, %21 ]
  %43 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %63, %60 ], [ %24, %21 ]
  %44 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %61, %60 ], [ %17, %21 ]
  %45 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %43, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"* %45, i64 0, i32 4
  %47 = load i32, i32* %46, align 8
  %48 = icmp sgt i32 %47, %42
  %49 = select i1 %48, i32 %47, i32 %42
  %50 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %43, i64 1
  %51 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %50 to i64
  %52 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %44 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = icmp eq i64 %54, 4096
  br i1 %55, label %56, label %60

56:                                               ; preds = %41
  %57 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %44, i64 1
  %58 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %57 to i64*
  %59 = load i64, i64* %58, align 8
  br label %60

60:                                               ; preds = %41, %56
  %61 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %57, %56 ], [ %44, %41 ]
  %62 = phi i64 [ %59, %56 ], [ %51, %41 ]
  %63 = inttoptr i64 %62 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**
  %64 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %32, %63
  br i1 %64, label %34, label %41
}

declare void @_ZN2v84base21RandomNumberGenerator7SetSeedEl(%"class.v8::base::RandomNumberGenerator"*, i64) local_unnamed_addr #2

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque.677"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, align 8
  %3 = alloca %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, align 8
  %4 = alloca %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, align 8
  %5 = alloca %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.710", align 16
  %7 = alloca %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque.677", %"class.std::__1::deque.677"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque.677", %"class.std::__1::deque.677"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 511
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -512
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  %15 = getelementptr inbounds %"class.std::__1::deque.677", %"class.std::__1::deque.677"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque.677", %"class.std::__1::deque.677"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %16, align 8
  %18 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %17, i64 1
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %21, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %16, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS7_EEE9push_backERKS7_(%"struct.std::__1::__split_buffer.679"* %15, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque.677", %"class.std::__1::deque.677"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque.677", %"class.std::__1::deque.677"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque.677", %"class.std::__1::deque.677"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque.677", %"class.std::__1::deque.677"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque.677"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #5
  %44 = getelementptr inbounds %"class.std::__1::deque.677", %"class.std::__1::deque.677"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* %45 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.687", %"class.v8::internal::RecyclingZoneAllocator.687"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !5

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #5
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %52, %51 ], [ %71, %69 ]
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %73, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %3, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.679"* %23, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #5
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #5
  %76 = getelementptr inbounds %"class.std::__1::deque.677", %"class.std::__1::deque.677"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 512
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* %77 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.687", %"class.v8::internal::RecyclingZoneAllocator.687"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !5

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #5
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %84, %83 ], [ %103, %101 ]
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %105, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS7_EEE10push_frontEOS7_(%"struct.std::__1::__split_buffer.679"* %23, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #5
  %106 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #5
  %107 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %27, align 8
  %108 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %107, i64 1
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %111, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %27, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS7_EEE9push_backERKS7_(%"struct.std::__1::__split_buffer.679"* %23, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #5
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.710"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #5
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque.677", %"class.std::__1::deque.677"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %6, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** null, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator.683"* %117, %"class.v8::internal::RecyclingZoneAllocator.683"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque.677", %"class.std::__1::deque.677"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %121 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.683", %"class.v8::internal::RecyclingZoneAllocator.683"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !5

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #5
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %150, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %151, align 16
  %152 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %6, i64 0, i32 2
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %152, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %152, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %150, i64 %116
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %155, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque.677", %"class.std::__1::deque.677"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 512
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* %157 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.687", %"class.v8::internal::RecyclingZoneAllocator.687"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !5

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #5
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #5
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** %185, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %7, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeERNS2_22RecyclingZoneAllocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.710"* nonnull %6, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #5
  %187 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %24, align 8
  %188 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %27, align 8
  %189 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %187, %188
  %190 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.710"* %6 to i64*
  %199 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.710"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque.677"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %153 to i64*
  %204 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %118 to i64*
  %205 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %210 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %195, %209
  %211 = inttoptr i64 %197 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %209, i64 -1
  %214 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %209, i64 %217
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %218, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator.683"*, %"class.v8::internal::RecyclingZoneAllocator.683"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.683", %"class.v8::internal::RecyclingZoneAllocator.683"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %211, i64 1
  %236 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %227 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"****
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %211, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #5
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeERNS2_22RecyclingZoneAllocatorIS7_EEE10push_frontERKS7_(%"struct.std::__1::__split_buffer.710"* nonnull %6, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** dereferenceable(8) %244)
  %245 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %27, align 8
  %246 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS7_EEE9push_backERKS7_(%"struct.std::__1::__split_buffer.679"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %24, i64 %26
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %34, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %33, i64 %23
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %35, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.679"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %46 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !5

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #5
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %75 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !63

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %45 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"****
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %172, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %199, i64 1
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %200, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.679"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %24, i64 %26
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %34, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %33, i64 %23
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %35, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.679"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %46 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !5

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #5
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %75 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !64

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %45 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"****
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %172, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %199, i64 1
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %200, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_22RecyclingZoneAllocatorIS7_EEE10push_frontEOS7_(%"struct.std::__1::__split_buffer.679"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %13 to i64
  %17 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #5
  %33 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %30, %27 ], [ %23, %18 ]
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %36, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %35, i64 %22
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %37, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.679"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %47 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer.679", %"struct.std::__1::__split_buffer.679"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !5

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #5
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %76 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %77 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %83, i64 %45
  %86 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %83, i64 %43
  %88 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %87 to i64
  %89 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %101, i64 1
  %109 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %108 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !65

113:                                              ; preds = %100
  %114 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 1
  %128 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %123, i64 1
  %129 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %123, i64 2
  %134 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 3
  %138 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %123, i64 3
  %139 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 4
  %143 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %123, i64 4
  %144 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 5
  %148 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %123, i64 5
  %149 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 6
  %153 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %123, i64 6
  %154 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 7
  %158 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %123, i64 7
  %159 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 8
  %163 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %123, i64 8
  %165 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %173, i64 1
  %188 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %46 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"****
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %173, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %192, align 8
  %193 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %195, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %200, i64 -1
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %201, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeERNS2_22RecyclingZoneAllocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.710"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %6 to i64
  %9 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %13, align 8
  %15 = icmp ugt %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %12, %14
  %16 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %23 to i8*
  %30 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %23, i64 %26
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %34, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %33, i64 %22
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %35, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %11, align 8
  %36 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.710"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator.683"*, %"class.v8::internal::RecyclingZoneAllocator.683"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.683", %"class.v8::internal::RecyclingZoneAllocator.683"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %48 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.683", %"class.v8::internal::RecyclingZoneAllocator.683"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !5

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #5
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %77, i64 %44
  %80 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %77, i64 %43
  %82 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %81 to i64
  %83 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %11, align 8
  %84 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %98, i64 1
  %106 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !66

110:                                              ; preds = %97
  %111 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %118, i64 1
  %125 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 1
  %126 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %118, i64 2
  %130 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 2
  %131 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %118, i64 3
  %135 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 3
  %136 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %118, i64 4
  %140 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 4
  %141 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %118, i64 5
  %145 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 5
  %146 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %118, i64 6
  %150 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 6
  %151 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %118, i64 7
  %155 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 7
  %156 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %118, i64 8
  %160 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %159 to i64
  %161 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %120, i64 8
  %162 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %170, i64 1
  %186 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %47 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"****
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %170, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %190, align 8
  %191 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %197, i64 1
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %198, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeERNS2_22RecyclingZoneAllocatorIS7_EEE10push_frontERKS7_(%"struct.std::__1::__split_buffer.710"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #5
  %33 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %36, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %35, i64 %22
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %37, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.710"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator.683"*, %"class.v8::internal::RecyclingZoneAllocator.683"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.683", %"class.v8::internal::RecyclingZoneAllocator.683"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %49 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.683", %"class.v8::internal::RecyclingZoneAllocator.683"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !5

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #5
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %78 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %78, i64 %45
  %81 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %78, i64 %43
  %83 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %82 to i64
  %84 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %85 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %99, i64 1
  %107 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !67

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %119, i64 1
  %126 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 1
  %127 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %119, i64 2
  %131 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 2
  %132 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %119, i64 3
  %136 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 3
  %137 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %119, i64 4
  %141 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 4
  %142 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %119, i64 5
  %146 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 5
  %147 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %119, i64 6
  %151 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 6
  %152 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %119, i64 7
  %156 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 7
  %157 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %119, i64 8
  %161 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %160 to i64
  %162 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %121, i64 8
  %163 = icmp eq %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %171, i64 1
  %186 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"** %48 to %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"****
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %171, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %190, align 8
  %191 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %198, i64 -1
  store %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** %199, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.694"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.694"* %0, %"class.std::__1::__tree_node"* %7) #5
  %8 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !6
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !6
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !6
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__14listIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_13ZoneAllocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__14listIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_13ZoneAllocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{i8 0, i8 2}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN2v84base8ReversedINS_8internal10ZoneVectorIPNS2_8compiler20InstructionScheduler17ScheduleGraphNodeEEEEEDaRT_: argument 0"}
!12 = distinct !{!12, !"_ZN2v84base8ReversedINS_8internal10ZoneVectorIPNS2_8compiler20InstructionScheduler17ScheduleGraphNodeEEEEEDaRT_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__14listIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_13ZoneAllocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__14listIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_13ZoneAllocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE"}
!16 = distinct !{!16, !9}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__14listIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_13ZoneAllocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__14listIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_13ZoneAllocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN2v84base8ReversedINS_8internal10ZoneVectorIPNS2_8compiler20InstructionScheduler17ScheduleGraphNodeEEEEEDaRT_: argument 0"}
!22 = distinct !{!22, !"_ZN2v84base8ReversedINS_8internal10ZoneVectorIPNS2_8compiler20InstructionScheduler17ScheduleGraphNodeEEEEEDaRT_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__14listIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_13ZoneAllocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__14listIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_13ZoneAllocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNSt3__14listIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_13ZoneAllocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__14listIPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeENS2_13ZoneAllocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE"}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !35}
!35 = !{!"llvm.loop.isvectorized", i32 1}
!36 = distinct !{!36, !9}
!37 = distinct !{!37, !35}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !35}
!44 = distinct !{!44, !9}
!45 = distinct !{!45, !35}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNSt3__16__treeINS_12__value_typeIiPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__16__treeINS_12__value_typeIiPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNSt3__16__treeINS_12__value_typeIiPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__16__treeINS_12__value_typeIiPN2v88internal8compiler20InstructionScheduler17ScheduleGraphNodeEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_"}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = distinct !{!57, !35}
!58 = distinct !{!58, !9}
!59 = distinct !{!59, !35}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN2v84base8ReversedINS_8internal10ZoneVectorIPNS2_8compiler20InstructionScheduler17ScheduleGraphNodeEEEEEDaRT_: argument 0"}
!62 = distinct !{!62, !"_ZN2v84base8ReversedINS_8internal10ZoneVectorIPNS2_8compiler20InstructionScheduler17ScheduleGraphNodeEEEEEDaRT_"}
!63 = distinct !{!63, !9}
!64 = distinct !{!64, !9}
!65 = distinct !{!65, !9}
!66 = distinct !{!66, !9}
!67 = distinct !{!67, !9}
