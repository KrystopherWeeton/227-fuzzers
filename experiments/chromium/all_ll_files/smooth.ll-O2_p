; ModuleID = '../../third_party/freetype/src/src/smooth/smooth.c'
source_filename = "../../third_party/freetype/src/src/smooth/smooth.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.FT_Raster_Funcs_ = type { i32, i32 (i8*, %struct.FT_RasterRec_**)*, void (%struct.FT_RasterRec_*, i8*, i64)*, i32 (%struct.FT_RasterRec_*, i64, i8*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, void (%struct.FT_RasterRec_*)* }
%struct.FT_RasterRec_ = type opaque
%struct.FT_Raster_Params_ = type { %struct.FT_Bitmap_*, i8*, i32, void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i8*)*, i8*, %struct.FT_BBox_ }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Span_ = type { i16, i16, i8 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_ModuleRec_ = type { %struct.FT_Module_Class_*, %struct.FT_LibraryRec_*, %struct.FT_MemoryRec_* }
%struct.FT_Module_Class_ = type { i64, i64, i8*, i64, i64, i8*, {}*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }
%struct.FT_LibraryRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i32, [32 x %struct.FT_ModuleRec_*], %struct.FT_ListRec_, %struct.FT_RendererRec_*, %struct.FT_ModuleRec_*, [4 x i32 (i8*)*], [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_RendererRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Renderer_Class_*, i32, %struct.FT_Glyph_Class_, %struct.FT_RasterRec_*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)* }
%struct.FT_Renderer_Class_ = type { %struct.FT_Module_Class_, i32, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_RendererRec_*, i64, i8*)*, %struct.FT_Raster_Funcs_* }
%struct.FT_Glyph_Class_ = type { i64, i32, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphRec_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphRec_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)* }
%struct.FT_GlyphRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_Glyph_Class_*, i32, %struct.FT_Vector_ }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type { i8*, i32, %struct.FT_Size_Metrics_ }
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Driver_ClassRec_*, %struct.FT_ListRec_, %struct.FT_GlyphLoaderRec_* }
%struct.FT_Driver_ClassRec_ = type { %struct.FT_Module_Class_, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* }
%struct.FT_Parameter_ = type { i64, i8* }
%struct.FT_Size_RequestRec_ = type { i32, i64, i64, i32, i32 }
%struct.FT_GlyphLoaderRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i8, %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_, i8* }
%struct.FT_GlyphLoadRec_ = type { %struct.FT_Outline_, %struct.FT_Vector_*, %struct.FT_Vector_*, i32, %struct.FT_SubGlyphRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_Face_InternalRec_ = type { %struct.FT_Matrix_, %struct.FT_Vector_, i32, %struct.FT_ServiceCacheRec_, %struct.FT_Incremental_InterfaceRec_*, i8, i32, [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_ServiceCacheRec_ = type { i8*, i8*, i8*, i8*, i8*, i8* }
%struct.FT_Incremental_InterfaceRec_ = type { %struct.FT_Incremental_FuncsRec_*, %struct.FT_IncrementalRec_* }
%struct.FT_Incremental_FuncsRec_ = type { i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* }
%struct.FT_Data_ = type { i8*, i32 }
%struct.FT_Incremental_MetricsRec_ = type { i64, i64, i64, i64 }
%struct.FT_IncrementalRec_ = type opaque
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type { i32, i16, i32, i32, %struct.FT_Matrix_ }
%struct.FT_Slot_InternalRec_ = type { %struct.FT_GlyphLoaderRec_*, i32, i8, %struct.FT_Matrix_, %struct.FT_Vector_, i8*, i32 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_Outline_Funcs_ = type { i32 (%struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*)*, i32, i64 }
%struct.TCell_ = type { i32, i32, i32, %struct.TCell_* }
%struct.gray_TWorker_ = type { [1 x %struct.__jmp_buf_tag], i32, i32, i32, i32, %struct.TCell_*, %struct.TCell_**, %struct.TCell_*, i64, i64, i64, i64, %struct.FT_Outline_, %struct.TPixmap_, void (i32, i32, %struct.FT_Span_*, i8*)*, i8* }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.TPixmap_ = type { i8*, i32 }
%struct.TOrigin_ = type { i8*, i32 }

@ft_grays_raster = hidden constant %struct.FT_Raster_Funcs_ { i32 1869968492, i32 (i8*, %struct.FT_RasterRec_**)* bitcast (i32 (%struct.FT_MemoryRec_*, %struct.FT_RasterRec_**)* @gray_raster_new to i32 (i8*, %struct.FT_RasterRec_**)*), void (%struct.FT_RasterRec_*, i8*, i64)* @gray_raster_reset, i32 (%struct.FT_RasterRec_*, i64, i8*)* @gray_raster_set_mode, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)* @gray_raster_render, void (%struct.FT_RasterRec_*)* @gray_raster_done }, align 8
@.str = private unnamed_addr constant [7 x i8] c"smooth\00", align 1
@ft_smooth_renderer_class = hidden local_unnamed_addr constant { { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }, i32, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_RendererRec_*, i64, i8*)*, %struct.FT_Raster_Funcs_* } { { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* } { i64 2, i64 128, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i64 65536, i64 131072, i8* null, i32 (%struct.FT_ModuleRec_*)* bitcast (i32 (%struct.FT_RendererRec_*)* @ft_smooth_init to i32 (%struct.FT_ModuleRec_*)*), void (%struct.FT_ModuleRec_*)* null, i8* (%struct.FT_ModuleRec_*, i8*)* null }, i32 1869968492, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)* @ft_smooth_render, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)* @ft_smooth_transform, void (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*)* @ft_smooth_get_cbox, i32 (%struct.FT_RendererRec_*, i64, i8*)* @ft_smooth_set_mode, %struct.FT_Raster_Funcs_* @ft_grays_raster }, align 8
@func_interface = internal constant %struct.FT_Outline_Funcs_ { i32 (%struct.FT_Vector_*, i8*)* bitcast (i32 (%struct.FT_Vector_*, %struct.gray_TWorker_*)* @gray_move_to to i32 (%struct.FT_Vector_*, i8*)*), i32 (%struct.FT_Vector_*, i8*)* bitcast (i32 (%struct.FT_Vector_*, %struct.gray_TWorker_*)* @gray_line_to to i32 (%struct.FT_Vector_*, i8*)*), i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, i8*)* bitcast (i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, %struct.gray_TWorker_*)* @gray_conic_to to i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, i8*)*), i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*)* bitcast (i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, %struct.gray_TWorker_*)* @gray_cubic_to to i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*)*), i32 0, i64 0 }, align 8

; Function Attrs: nounwind ssp uwtable
define internal i32 @gray_raster_new(%struct.FT_MemoryRec_*, %struct.FT_RasterRec_** nocapture) #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7
  store i32 -1431655766, i32* %3, align 4
  store %struct.FT_RasterRec_* null, %struct.FT_RasterRec_** %1, align 8
  %5 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %0, i64 8, i32* nonnull %3) #7
  %6 = load i32, i32* %3, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = bitcast i8* %5 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %0, %struct.FT_MemoryRec_** %9, align 8
  %10 = bitcast %struct.FT_RasterRec_** %1 to i8**
  store i8* %5, i8** %10, align 8
  br label %11

11:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7
  ret i32 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @gray_raster_reset(%struct.FT_RasterRec_* nocapture, i8* nocapture, i64) #1 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @gray_raster_set_mode(%struct.FT_RasterRec_* nocapture readnone, i64, i8* nocapture readnone) #1 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @gray_raster_render(%struct.FT_RasterRec_* readnone, %struct.FT_Raster_Params_* nocapture readonly) #0 {
  %3 = alloca [16 x %struct.FT_Span_], align 16
  %4 = alloca [682 x %struct.TCell_], align 16
  %5 = alloca [32 x i32], align 16
  %6 = alloca [1 x %struct.gray_TWorker_], align 16
  %7 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %1, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %1, i64 0, i32 0
  %10 = load %struct.FT_Bitmap_*, %struct.FT_Bitmap_** %9, align 8
  %11 = bitcast [1 x %struct.gray_TWorker_]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 344, i8* nonnull %11) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 344, i1 false)
  %12 = icmp eq %struct.FT_RasterRec_* %0, null
  br i1 %12, label %508, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %508, label %18

18:                                               ; preds = %13
  %19 = icmp eq i8* %8, null
  br i1 %19, label %508, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds i8, i8* %8, i64 2
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = sext i16 %23 to i32
  %25 = icmp eq i16 %23, 0
  br i1 %25, label %508, label %26

26:                                               ; preds = %20
  %27 = bitcast i8* %8 to i16*
  %28 = load i16, i16* %27, align 8
  %29 = sext i16 %28 to i64
  %30 = icmp slt i16 %28, 1
  br i1 %30, label %508, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds i8, i8* %8, i64 24
  %33 = bitcast i8* %32 to i16**
  %34 = load i16*, i16** %33, align 8
  %35 = icmp eq i16* %34, null
  br i1 %35, label %508, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds i8, i8* %8, i64 8
  %38 = bitcast i8* %37 to %struct.FT_Vector_**
  %39 = load %struct.FT_Vector_*, %struct.FT_Vector_** %38, align 8
  %40 = icmp eq %struct.FT_Vector_* %39, null
  br i1 %40, label %508, label %41

41:                                               ; preds = %36
  %42 = add nsw i64 %29, -1
  %43 = getelementptr inbounds i16, i16* %34, i64 %42
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  %46 = add nsw i32 %45, 1
  %47 = icmp eq i32 %46, %24
  br i1 %47, label %48, label %508

48:                                               ; preds = %41
  %49 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0
  %50 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 12
  %51 = bitcast %struct.FT_Outline_* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %51, i8* nonnull align 8 %8, i64 40, i1 false)
  %52 = and i32 %15, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %80, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %1, i64 0, i32 3
  %56 = load void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)** %55, align 8
  %57 = icmp eq void (i32, i32, %struct.FT_Span_*, i8*)* %56, null
  br i1 %57, label %508, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 14
  store void (i32, i32, %struct.FT_Span_*, i8*)* %56, void (i32, i32, %struct.FT_Span_*, i8*)** %59, align 8
  %60 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %1, i64 0, i32 7
  %61 = bitcast i8** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 15
  %64 = bitcast i8** %63 to i64*
  store i64 %62, i64* %64, align 16
  %65 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %1, i64 0, i32 8, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 1
  store i32 %67, i32* %68, align 8
  %69 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %1, i64 0, i32 8, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = trunc i64 %70 to i32
  %72 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 3
  store i32 %71, i32* %72, align 16
  %73 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %1, i64 0, i32 8, i32 2
  %74 = load i64, i64* %73, align 8
  %75 = trunc i64 %74 to i32
  %76 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 2
  store i32 %75, i32* %76, align 4
  %77 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %1, i64 0, i32 8, i32 3
  %78 = load i64, i64* %77, align 8
  %79 = trunc i64 %78 to i32
  br label %113

80:                                               ; preds = %48
  %81 = icmp eq %struct.FT_Bitmap_* %10, null
  br i1 %81, label %508, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %10, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %508, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %10, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %508, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %10, i64 0, i32 3
  %92 = load i8*, i8** %91, align 8
  %93 = icmp eq i8* %92, null
  br i1 %93, label %508, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %10, i64 0, i32 2
  %96 = load i32, i32* %95, align 8
  %97 = icmp slt i32 %96, 0
  %98 = add i32 %88, -1
  %99 = mul i32 %96, %98
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds i8, i8* %92, i64 %100
  %102 = select i1 %97, i8* %92, i8* %101
  %103 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 13, i32 0
  store i8* %102, i8** %103, align 8
  %104 = load i32, i32* %95, align 8
  %105 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 13, i32 1
  store i32 %104, i32* %105, align 8
  %106 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 14
  %107 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 1
  store i32 0, i32* %107, align 8
  %108 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 3
  store i32 0, i32* %108, align 16
  %109 = bitcast void (i32, i32, %struct.FT_Span_*, i8*)** %106 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false)
  %110 = load i32, i32* %83, align 4
  %111 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 2
  store i32 %110, i32* %111, align 4
  %112 = load i32, i32* %87, align 8
  br label %113

113:                                              ; preds = %94, %58
  %114 = phi i32 [ %112, %94 ], [ %79, %58 ]
  %115 = phi i32 [ 0, %94 ], [ %71, %58 ]
  %116 = phi i32 [ 0, %94 ], [ %67, %58 ]
  %117 = phi i32 [ %110, %94 ], [ %75, %58 ]
  %118 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 4
  store i32 %114, i32* %118, align 4
  %119 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 2
  %120 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 1
  %121 = icmp sgt i32 %117, %116
  br i1 %121, label %122, label %508

122:                                              ; preds = %113
  %123 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 4
  %124 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 3
  %125 = icmp sgt i32 %114, %115
  br i1 %125, label %126, label %508

126:                                              ; preds = %122
  %127 = bitcast [682 x %struct.TCell_]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16368, i8* nonnull %127) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %127, i8 -86, i64 16368, i1 false) #7
  %128 = sub nsw i32 %114, %115
  %129 = sext i32 %128 to i64
  %130 = bitcast [32 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %130) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %130, i8 -86, i64 128, i1 false) #7
  %131 = icmp ugt i32 %128, 85
  br i1 %131, label %132, label %138

132:                                              ; preds = %126
  %133 = add nsw i64 %129, 84
  %134 = udiv i64 %133, 85
  %135 = add nsw i64 %129, -1
  %136 = add nsw i64 %135, %134
  %137 = udiv i64 %136, %134
  br label %138

138:                                              ; preds = %126, %132
  %139 = phi i64 [ %137, %132 ], [ %129, %126 ]
  %140 = shl i64 %139, 3
  %141 = add i64 %140, 23
  %142 = udiv i64 %141, 24
  %143 = getelementptr inbounds [682 x %struct.TCell_], [682 x %struct.TCell_]* %4, i64 0, i64 %142
  %144 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 7
  store %struct.TCell_* %143, %struct.TCell_** %144, align 8
  %145 = sub nsw i64 682, %142
  %146 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 8
  store i64 %145, i64* %146, align 16
  %147 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 6
  %148 = bitcast %struct.TCell_*** %147 to [682 x %struct.TCell_]**
  store [682 x %struct.TCell_]* %4, [682 x %struct.TCell_]** %148, align 16
  %149 = trunc i64 %139 to i32
  %150 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 0
  %151 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 1
  %152 = bitcast %struct.TCell_*** %147 to i8**
  %153 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 9
  %154 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 5
  %155 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 14
  %156 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 12, i32 5
  %157 = bitcast [16 x %struct.FT_Span_]* %3 to i8*
  %158 = getelementptr inbounds [16 x %struct.FT_Span_], [16 x %struct.FT_Span_]* %3, i64 0, i64 0
  %159 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 15
  %160 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 13, i32 0
  %161 = getelementptr inbounds [1 x %struct.gray_TWorker_], [1 x %struct.gray_TWorker_]* %6, i64 0, i64 0, i32 13, i32 1
  br label %163

162:                                              ; preds = %500
  br i1 %167, label %163, label %506

163:                                              ; preds = %162, %138
  %164 = phi i32 [ 0, %138 ], [ 1, %162 ]
  %165 = phi i32 [ %115, %138 ], [ %166, %162 ]
  store i32 %165, i32* %124, align 16
  %166 = add i32 %165, %149
  %167 = icmp slt i32 %166, %114
  %168 = select i1 %167, i32 %166, i32 %114
  store i32 %168, i32* %123, align 4
  store i32 %165, i32* %151, align 4
  store i32 %168, i32* %150, align 16
  br label %169

169:                                              ; preds = %503, %163
  %170 = phi i32 [ %168, %163 ], [ %505, %503 ]
  %171 = phi i64 [ 0, %163 ], [ %501, %503 ]
  %172 = phi i32 [ %164, %163 ], [ 1, %503 ]
  %173 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 %171
  %174 = getelementptr inbounds i32, i32* %173, i64 1
  %175 = load i32, i32* %174, align 4
  %176 = load i8*, i8** %152, align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %176, i8 0, i64 %140, i1 false) #7
  store i64 0, i64* %153, align 8
  store %struct.TCell_* null, %struct.TCell_** %154, align 8
  store i32 %175, i32* %124, align 16
  store i32 %170, i32* %123, align 4
  %177 = call fastcc i32 @gray_convert_glyph_inner(%struct.gray_TWorker_* nonnull %49, i32 %172) #7
  switch i32 %177, label %506 [
    i32 0, label %178
    i32 64, label %491
  ]

178:                                              ; preds = %169
  %179 = load void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)** %155, align 8
  %180 = icmp eq void (i32, i32, %struct.FT_Span_*, i8*)* %179, null
  %181 = load i32, i32* %156, align 16
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = select i1 %183, i32 -2147483648, i32 256
  br i1 %180, label %311, label %185

185:                                              ; preds = %178
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %157) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %157, i8 -86, i64 96, i1 false) #7
  %186 = load i32, i32* %124, align 16
  %187 = load i32, i32* %123, align 4
  %188 = icmp slt i32 %186, %187
  br i1 %188, label %189, label %310

189:                                              ; preds = %185, %308
  %190 = phi i32 [ %309, %308 ], [ %186, %185 ]
  %191 = phi i32 [ %305, %308 ], [ %186, %185 ]
  %192 = load %struct.TCell_**, %struct.TCell_*** %147, align 16
  %193 = sub nsw i32 %191, %190
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds %struct.TCell_*, %struct.TCell_** %192, i64 %194
  %196 = load %struct.TCell_*, %struct.TCell_** %195, align 8
  %197 = icmp eq %struct.TCell_* %196, null
  br i1 %197, label %304, label %198

198:                                              ; preds = %189
  %199 = load i32, i32* %120, align 8
  br label %200

200:                                              ; preds = %269, %198
  %201 = phi i1 [ %277, %269 ], [ false, %198 ]
  %202 = phi %struct.TCell_* [ %275, %269 ], [ %196, %198 ]
  %203 = phi i32 [ %238, %269 ], [ 0, %198 ]
  %204 = phi i32 [ %273, %269 ], [ %199, %198 ]
  %205 = phi i32 [ %270, %269 ], [ 0, %198 ]
  br i1 %201, label %206, label %233

206:                                              ; preds = %200
  %207 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %202, i64 0, i32 0
  %208 = load i32, i32* %207, align 8
  %209 = icmp sgt i32 %208, %204
  br i1 %209, label %210, label %233

210:                                              ; preds = %206
  %211 = ashr exact i32 %203, 9
  %212 = and i32 %211, %184
  %213 = icmp ne i32 %212, 0
  %214 = sext i1 %213 to i32
  %215 = xor i32 %211, %214
  %216 = icmp sgt i32 %215, 255
  %217 = and i1 %183, %216
  %218 = trunc i32 %215 to i8
  %219 = select i1 %217, i8 -1, i8 %218
  %220 = sext i32 %205 to i64
  %221 = getelementptr inbounds [16 x %struct.FT_Span_], [16 x %struct.FT_Span_]* %3, i64 0, i64 %220, i32 2
  store i8 %219, i8* %221, align 2
  %222 = trunc i32 %204 to i16
  %223 = getelementptr inbounds [16 x %struct.FT_Span_], [16 x %struct.FT_Span_]* %3, i64 0, i64 %220, i32 0
  store i16 %222, i16* %223, align 2
  %224 = load i32, i32* %207, align 8
  %225 = sub nsw i32 %224, %204
  %226 = trunc i32 %225 to i16
  %227 = getelementptr inbounds [16 x %struct.FT_Span_], [16 x %struct.FT_Span_]* %3, i64 0, i64 %220, i32 1
  store i16 %226, i16* %227, align 2
  %228 = add nsw i32 %205, 1
  %229 = icmp eq i32 %228, 16
  br i1 %229, label %230, label %233

230:                                              ; preds = %210
  %231 = load void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)** %155, align 8
  %232 = load i8*, i8** %159, align 16
  call void %231(i32 %191, i32 16, %struct.FT_Span_* nonnull %158, i8* %232) #7
  br label %233

233:                                              ; preds = %230, %210, %206, %200
  %234 = phi i32 [ 0, %230 ], [ %228, %210 ], [ %205, %206 ], [ %205, %200 ]
  %235 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %202, i64 0, i32 1
  %236 = load i32, i32* %235, align 4
  %237 = shl nsw i32 %236, 9
  %238 = add nsw i32 %237, %203
  %239 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %202, i64 0, i32 2
  %240 = load i32, i32* %239, align 8
  %241 = sub nsw i32 %238, %240
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %269, label %243

243:                                              ; preds = %233
  %244 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %202, i64 0, i32 0
  %245 = load i32, i32* %244, align 8
  %246 = load i32, i32* %120, align 8
  %247 = icmp slt i32 %245, %246
  br i1 %247, label %269, label %248

248:                                              ; preds = %243
  %249 = ashr i32 %241, 9
  %250 = and i32 %249, %184
  %251 = icmp ne i32 %250, 0
  %252 = sext i1 %251 to i32
  %253 = xor i32 %249, %252
  %254 = icmp sgt i32 %253, 255
  %255 = and i1 %183, %254
  %256 = trunc i32 %253 to i8
  %257 = select i1 %255, i8 -1, i8 %256
  %258 = sext i32 %234 to i64
  %259 = getelementptr inbounds [16 x %struct.FT_Span_], [16 x %struct.FT_Span_]* %3, i64 0, i64 %258, i32 2
  store i8 %257, i8* %259, align 2
  %260 = load i32, i32* %244, align 8
  %261 = trunc i32 %260 to i16
  %262 = getelementptr inbounds [16 x %struct.FT_Span_], [16 x %struct.FT_Span_]* %3, i64 0, i64 %258, i32 0
  store i16 %261, i16* %262, align 2
  %263 = getelementptr inbounds [16 x %struct.FT_Span_], [16 x %struct.FT_Span_]* %3, i64 0, i64 %258, i32 1
  store i16 1, i16* %263, align 2
  %264 = add nsw i32 %234, 1
  %265 = icmp eq i32 %264, 16
  br i1 %265, label %266, label %269

266:                                              ; preds = %248
  %267 = load void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)** %155, align 8
  %268 = load i8*, i8** %159, align 16
  call void %267(i32 %191, i32 16, %struct.FT_Span_* nonnull %158, i8* %268) #7
  br label %269

269:                                              ; preds = %266, %248, %243, %233
  %270 = phi i32 [ 0, %266 ], [ %264, %248 ], [ %234, %243 ], [ %234, %233 ]
  %271 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %202, i64 0, i32 0
  %272 = load i32, i32* %271, align 8
  %273 = add nsw i32 %272, 1
  %274 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %202, i64 0, i32 3
  %275 = load %struct.TCell_*, %struct.TCell_** %274, align 8
  %276 = icmp eq %struct.TCell_* %275, null
  %277 = icmp ne i32 %238, 0
  br i1 %276, label %278, label %200

278:                                              ; preds = %269
  br i1 %277, label %279, label %298

279:                                              ; preds = %278
  %280 = ashr exact i32 %238, 9
  %281 = and i32 %280, %184
  %282 = icmp ne i32 %281, 0
  %283 = sext i1 %282 to i32
  %284 = xor i32 %280, %283
  %285 = icmp sgt i32 %284, 255
  %286 = and i1 %183, %285
  %287 = trunc i32 %284 to i8
  %288 = select i1 %286, i8 -1, i8 %287
  %289 = sext i32 %270 to i64
  %290 = getelementptr inbounds [16 x %struct.FT_Span_], [16 x %struct.FT_Span_]* %3, i64 0, i64 %289, i32 2
  store i8 %288, i8* %290, align 2
  %291 = trunc i32 %273 to i16
  %292 = getelementptr inbounds [16 x %struct.FT_Span_], [16 x %struct.FT_Span_]* %3, i64 0, i64 %289, i32 0
  store i16 %291, i16* %292, align 2
  %293 = load i32, i32* %119, align 4
  %294 = sub nsw i32 %293, %273
  %295 = trunc i32 %294 to i16
  %296 = getelementptr inbounds [16 x %struct.FT_Span_], [16 x %struct.FT_Span_]* %3, i64 0, i64 %289, i32 1
  store i16 %295, i16* %296, align 2
  %297 = add nsw i32 %270, 1
  br label %298

298:                                              ; preds = %279, %278
  %299 = phi i32 [ %297, %279 ], [ %270, %278 ]
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %304, label %301

301:                                              ; preds = %298
  %302 = load void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)** %155, align 8
  %303 = load i8*, i8** %159, align 16
  call void %302(i32 %191, i32 %299, %struct.FT_Span_* nonnull %158, i8* %303) #7
  br label %304

304:                                              ; preds = %301, %298, %189
  %305 = add nsw i32 %191, 1
  %306 = load i32, i32* %123, align 4
  %307 = icmp slt i32 %305, %306
  br i1 %307, label %308, label %310

308:                                              ; preds = %304
  %309 = load i32, i32* %124, align 16
  br label %189

310:                                              ; preds = %304, %185
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %157) #7
  br label %489

311:                                              ; preds = %178
  %312 = load i32, i32* %124, align 16
  %313 = load i32, i32* %123, align 4
  %314 = icmp slt i32 %312, %313
  br i1 %314, label %315, label %489

315:                                              ; preds = %311, %487
  %316 = phi i32 [ %488, %487 ], [ %312, %311 ]
  %317 = phi i32 [ %484, %487 ], [ %312, %311 ]
  %318 = load %struct.TCell_**, %struct.TCell_*** %147, align 16
  %319 = sub nsw i32 %317, %316
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds %struct.TCell_*, %struct.TCell_** %318, i64 %320
  %322 = load i8*, i8** %160, align 8
  %323 = load i32, i32* %161, align 8
  %324 = mul nsw i32 %323, %317
  %325 = sext i32 %324 to i64
  %326 = sub nsw i64 0, %325
  %327 = getelementptr inbounds i8, i8* %322, i64 %326
  %328 = load %struct.TCell_*, %struct.TCell_** %321, align 8
  %329 = icmp eq %struct.TCell_* %328, null
  br i1 %329, label %483, label %330

330:                                              ; preds = %315
  %331 = load i32, i32* %120, align 8
  br label %332

332:                                              ; preds = %420, %330
  %333 = phi i1 [ %427, %420 ], [ false, %330 ]
  %334 = phi %struct.TCell_* [ %425, %420 ], [ %328, %330 ]
  %335 = phi i32 [ %398, %420 ], [ 0, %330 ]
  %336 = phi i32 [ %423, %420 ], [ %331, %330 ]
  br i1 %333, label %337, label %394

337:                                              ; preds = %332
  %338 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %334, i64 0, i32 0
  %339 = load i32, i32* %338, align 8
  %340 = icmp sgt i32 %339, %336
  br i1 %340, label %341, label %394

341:                                              ; preds = %337
  %342 = ashr exact i32 %335, 9
  %343 = and i32 %342, %184
  %344 = icmp ne i32 %343, 0
  %345 = sext i1 %344 to i32
  %346 = xor i32 %342, %345
  %347 = icmp sgt i32 %346, 255
  %348 = and i1 %183, %347
  %349 = select i1 %348, i32 255, i32 %346
  %350 = sext i32 %336 to i64
  %351 = getelementptr inbounds i8, i8* %327, i64 %350
  %352 = sub nsw i32 %339, %336
  switch i32 %352, label %391 [
    i32 7, label %365
    i32 6, label %353
    i32 5, label %355
    i32 4, label %357
    i32 3, label %359
    i32 2, label %361
    i32 1, label %363
    i32 0, label %394
  ]

353:                                              ; preds = %341
  %354 = trunc i32 %349 to i8
  br label %368

355:                                              ; preds = %341
  %356 = trunc i32 %349 to i8
  br label %372

357:                                              ; preds = %341
  %358 = trunc i32 %349 to i8
  br label %376

359:                                              ; preds = %341
  %360 = trunc i32 %349 to i8
  br label %380

361:                                              ; preds = %341
  %362 = trunc i32 %349 to i8
  br label %384

363:                                              ; preds = %341
  %364 = trunc i32 %349 to i8
  br label %388

365:                                              ; preds = %341
  %366 = trunc i32 %349 to i8
  %367 = getelementptr inbounds i8, i8* %351, i64 1
  store i8 %366, i8* %351, align 1
  br label %368

368:                                              ; preds = %365, %353
  %369 = phi i8 [ %354, %353 ], [ %366, %365 ]
  %370 = phi i8* [ %351, %353 ], [ %367, %365 ]
  %371 = getelementptr inbounds i8, i8* %370, i64 1
  store i8 %369, i8* %370, align 1
  br label %372

372:                                              ; preds = %368, %355
  %373 = phi i8 [ %356, %355 ], [ %369, %368 ]
  %374 = phi i8* [ %351, %355 ], [ %371, %368 ]
  %375 = getelementptr inbounds i8, i8* %374, i64 1
  store i8 %373, i8* %374, align 1
  br label %376

376:                                              ; preds = %372, %357
  %377 = phi i8 [ %358, %357 ], [ %373, %372 ]
  %378 = phi i8* [ %351, %357 ], [ %375, %372 ]
  %379 = getelementptr inbounds i8, i8* %378, i64 1
  store i8 %377, i8* %378, align 1
  br label %380

380:                                              ; preds = %376, %359
  %381 = phi i8 [ %360, %359 ], [ %377, %376 ]
  %382 = phi i8* [ %351, %359 ], [ %379, %376 ]
  %383 = getelementptr inbounds i8, i8* %382, i64 1
  store i8 %381, i8* %382, align 1
  br label %384

384:                                              ; preds = %380, %361
  %385 = phi i8 [ %362, %361 ], [ %381, %380 ]
  %386 = phi i8* [ %351, %361 ], [ %383, %380 ]
  %387 = getelementptr inbounds i8, i8* %386, i64 1
  store i8 %385, i8* %386, align 1
  br label %388

388:                                              ; preds = %384, %363
  %389 = phi i8 [ %364, %363 ], [ %385, %384 ]
  %390 = phi i8* [ %351, %363 ], [ %387, %384 ]
  store i8 %389, i8* %390, align 1
  br label %394

391:                                              ; preds = %341
  %392 = trunc i32 %349 to i8
  %393 = sext i32 %352 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %351, i8 %392, i64 %393, i1 false) #7
  br label %394

394:                                              ; preds = %391, %388, %341, %337, %332
  %395 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %334, i64 0, i32 1
  %396 = load i32, i32* %395, align 4
  %397 = shl nsw i32 %396, 9
  %398 = add nsw i32 %397, %335
  %399 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %334, i64 0, i32 2
  %400 = load i32, i32* %399, align 8
  %401 = sub nsw i32 %398, %400
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %420, label %403

403:                                              ; preds = %394
  %404 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %334, i64 0, i32 0
  %405 = load i32, i32* %404, align 8
  %406 = load i32, i32* %120, align 8
  %407 = icmp slt i32 %405, %406
  br i1 %407, label %420, label %408

408:                                              ; preds = %403
  %409 = ashr i32 %401, 9
  %410 = and i32 %409, %184
  %411 = icmp ne i32 %410, 0
  %412 = sext i1 %411 to i32
  %413 = xor i32 %409, %412
  %414 = icmp sgt i32 %413, 255
  %415 = and i1 %183, %414
  %416 = trunc i32 %413 to i8
  %417 = select i1 %415, i8 -1, i8 %416
  %418 = sext i32 %405 to i64
  %419 = getelementptr inbounds i8, i8* %327, i64 %418
  store i8 %417, i8* %419, align 1
  br label %420

420:                                              ; preds = %408, %403, %394
  %421 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %334, i64 0, i32 0
  %422 = load i32, i32* %421, align 8
  %423 = add nsw i32 %422, 1
  %424 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %334, i64 0, i32 3
  %425 = load %struct.TCell_*, %struct.TCell_** %424, align 8
  %426 = icmp eq %struct.TCell_* %425, null
  %427 = icmp ne i32 %398, 0
  br i1 %426, label %428, label %332

428:                                              ; preds = %420
  br i1 %427, label %429, label %483

429:                                              ; preds = %428
  %430 = ashr exact i32 %398, 9
  %431 = and i32 %430, %184
  %432 = icmp ne i32 %431, 0
  %433 = sext i1 %432 to i32
  %434 = xor i32 %430, %433
  %435 = icmp sgt i32 %434, 255
  %436 = and i1 %183, %435
  %437 = select i1 %436, i32 255, i32 %434
  %438 = sext i32 %423 to i64
  %439 = getelementptr inbounds i8, i8* %327, i64 %438
  %440 = load i32, i32* %119, align 4
  %441 = sub nsw i32 %440, %423
  switch i32 %441, label %480 [
    i32 7, label %454
    i32 6, label %442
    i32 5, label %444
    i32 4, label %446
    i32 3, label %448
    i32 2, label %450
    i32 1, label %452
    i32 0, label %483
  ]

442:                                              ; preds = %429
  %443 = trunc i32 %437 to i8
  br label %457

444:                                              ; preds = %429
  %445 = trunc i32 %437 to i8
  br label %461

446:                                              ; preds = %429
  %447 = trunc i32 %437 to i8
  br label %465

448:                                              ; preds = %429
  %449 = trunc i32 %437 to i8
  br label %469

450:                                              ; preds = %429
  %451 = trunc i32 %437 to i8
  br label %473

452:                                              ; preds = %429
  %453 = trunc i32 %437 to i8
  br label %477

454:                                              ; preds = %429
  %455 = trunc i32 %437 to i8
  %456 = getelementptr inbounds i8, i8* %439, i64 1
  store i8 %455, i8* %439, align 1
  br label %457

457:                                              ; preds = %454, %442
  %458 = phi i8 [ %443, %442 ], [ %455, %454 ]
  %459 = phi i8* [ %439, %442 ], [ %456, %454 ]
  %460 = getelementptr inbounds i8, i8* %459, i64 1
  store i8 %458, i8* %459, align 1
  br label %461

461:                                              ; preds = %457, %444
  %462 = phi i8 [ %445, %444 ], [ %458, %457 ]
  %463 = phi i8* [ %439, %444 ], [ %460, %457 ]
  %464 = getelementptr inbounds i8, i8* %463, i64 1
  store i8 %462, i8* %463, align 1
  br label %465

465:                                              ; preds = %461, %446
  %466 = phi i8 [ %447, %446 ], [ %462, %461 ]
  %467 = phi i8* [ %439, %446 ], [ %464, %461 ]
  %468 = getelementptr inbounds i8, i8* %467, i64 1
  store i8 %466, i8* %467, align 1
  br label %469

469:                                              ; preds = %465, %448
  %470 = phi i8 [ %449, %448 ], [ %466, %465 ]
  %471 = phi i8* [ %439, %448 ], [ %468, %465 ]
  %472 = getelementptr inbounds i8, i8* %471, i64 1
  store i8 %470, i8* %471, align 1
  br label %473

473:                                              ; preds = %469, %450
  %474 = phi i8 [ %451, %450 ], [ %470, %469 ]
  %475 = phi i8* [ %439, %450 ], [ %472, %469 ]
  %476 = getelementptr inbounds i8, i8* %475, i64 1
  store i8 %474, i8* %475, align 1
  br label %477

477:                                              ; preds = %473, %452
  %478 = phi i8 [ %453, %452 ], [ %474, %473 ]
  %479 = phi i8* [ %439, %452 ], [ %476, %473 ]
  store i8 %478, i8* %479, align 1
  br label %483

480:                                              ; preds = %429
  %481 = trunc i32 %437 to i8
  %482 = sext i32 %441 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %439, i8 %481, i64 %482, i1 false) #7
  br label %483

483:                                              ; preds = %480, %477, %429, %428, %315
  %484 = add nsw i32 %317, 1
  %485 = load i32, i32* %123, align 4
  %486 = icmp slt i32 %484, %485
  br i1 %486, label %487, label %489

487:                                              ; preds = %483
  %488 = load i32, i32* %124, align 16
  br label %315

489:                                              ; preds = %483, %311, %310
  %490 = add nsw i64 %171, -1
  br label %500

491:                                              ; preds = %169
  %492 = sub nsw i32 %170, %175
  %493 = ashr i32 %492, 1
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %506, label %495

495:                                              ; preds = %491
  %496 = add nuw nsw i64 %171, 1
  %497 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 %496
  %498 = getelementptr inbounds i32, i32* %497, i64 1
  store i32 %175, i32* %498, align 4
  %499 = add nsw i32 %493, %175
  store i32 %499, i32* %497, align 4
  br label %500

500:                                              ; preds = %495, %489
  %501 = phi i64 [ %496, %495 ], [ %490, %489 ]
  %502 = icmp sgt i64 %501, -1
  br i1 %502, label %503, label %162

503:                                              ; preds = %500
  %504 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 %501
  %505 = load i32, i32* %504, align 4
  br label %169

506:                                              ; preds = %162, %169, %491
  %507 = phi i32 [ 1, %491 ], [ 1, %169 ], [ 0, %162 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %130) #7
  call void @llvm.lifetime.end.p0i8(i64 16368, i8* nonnull %127) #7
  br label %508

508:                                              ; preds = %113, %122, %90, %82, %86, %80, %54, %41, %31, %36, %20, %26, %18, %13, %2, %506
  %509 = phi i32 [ %507, %506 ], [ 6, %2 ], [ 19, %13 ], [ 20, %18 ], [ 0, %26 ], [ 0, %20 ], [ 20, %36 ], [ 20, %31 ], [ 20, %41 ], [ 0, %54 ], [ 6, %80 ], [ 0, %86 ], [ 0, %82 ], [ 6, %90 ], [ 0, %122 ], [ 0, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 344, i8* nonnull %11) #7
  ret i32 %509
}

; Function Attrs: nounwind ssp uwtable
define internal void @gray_raster_done(%struct.FT_RasterRec_*) #0 {
  %2 = bitcast %struct.FT_RasterRec_* %0 to %struct.FT_MemoryRec_**
  %3 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %2, align 8
  %4 = bitcast %struct.FT_RasterRec_* %0 to i8*
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ft_smooth_init(%struct.FT_RendererRec_* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 0, i32 1
  %3 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %2, align 8
  %4 = tail call i32 @FT_Library_SetLcdFilter(%struct.FT_LibraryRec_* %3, i32 1) #7
  %5 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 1
  %6 = load %struct.FT_Renderer_Class_*, %struct.FT_Renderer_Class_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_Renderer_Class_, %struct.FT_Renderer_Class_* %6, i64 0, i32 6
  %8 = load %struct.FT_Raster_Funcs_*, %struct.FT_Raster_Funcs_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_Raster_Funcs_, %struct.FT_Raster_Funcs_* %8, i64 0, i32 2
  %10 = load void (%struct.FT_RasterRec_*, i8*, i64)*, void (%struct.FT_RasterRec_*, i8*, i64)** %9, align 8
  %11 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 4
  %12 = load %struct.FT_RasterRec_*, %struct.FT_RasterRec_** %11, align 8
  tail call void %10(%struct.FT_RasterRec_* %12, i8* null, i64 0) #7
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ft_smooth_render(%struct.FT_RendererRec_* nocapture readonly, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*) #0 {
  %5 = alloca %struct.FT_Raster_Params_, align 8
  %6 = alloca %struct.FT_Raster_Params_, align 8
  %7 = alloca %struct.FT_Raster_Params_, align 8
  %8 = alloca %struct.TOrigin_, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.FT_Raster_Params_, align 8
  %11 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #7
  store i32 0, i32* %9, align 4
  %12 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 13
  %13 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 10
  %14 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 0, i32 2
  %15 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %14, align 8
  %16 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 9
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %22, label %21

21:                                               ; preds = %4
  store i32 6, i32* %9, align 4
  br label %517

22:                                               ; preds = %4
  switch i32 %2, label %23 [
    i32 4, label %24
    i32 3, label %24
    i32 1, label %24
    i32 0, label %24
  ]

23:                                               ; preds = %22
  store i32 19, i32* %9, align 4
  br label %517

24:                                               ; preds = %22, %22, %22, %22
  %25 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 21
  %26 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %25, align 8
  %27 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 10, i32 3
  %33 = load i8*, i8** %32, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %15, i8* %33) #7
  store i8* null, i8** %32, align 8
  %34 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %25, align 8
  %35 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %34, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, -2
  store i32 %37, i32* %35, align 8
  br label %38

38:                                               ; preds = %24, %31
  %39 = tail call zeroext i8 @ft_glyphslot_preset_bitmap(%struct.FT_GlyphSlotRec_* %1, i32 %2, %struct.FT_Vector_* %3) #7
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  store i32 98, i32* %9, align 4
  br label %517

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %13, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %507, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 10, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %507, label %50

50:                                               ; preds = %46
  %51 = sext i32 %48 to i64
  %52 = zext i32 %44 to i64
  %53 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %15, i64 %51, i64 0, i64 %52, i8* null, i32* nonnull %9) #7
  %54 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 10, i32 3
  store i8* %53, i8** %54, align 8
  %55 = load i32, i32* %9, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %517

57:                                               ; preds = %50
  %58 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %25, align 8
  %59 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %58, i64 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = or i32 %60, 1
  store i32 %61, i32* %59, align 8
  %62 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 11
  %63 = load i32, i32* %62, align 8
  %64 = shl i32 %63, 6
  %65 = sub i32 0, %64
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 12
  %68 = load i32, i32* %67, align 4
  %69 = shl i32 %68, 6
  %70 = sub i32 0, %69
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 10, i32 5
  %73 = load i8, i8* %72, align 2
  %74 = icmp eq i8 %73, 6
  %75 = load i32, i32* %43, align 8
  %76 = shl nsw i32 %75, 6
  %77 = sdiv i32 %76, 3
  %78 = select i1 %74, i32 %77, i32 %76
  %79 = sext i32 %78 to i64
  %80 = add nsw i64 %79, %71
  %81 = icmp eq %struct.FT_Vector_* %3, null
  br i1 %81, label %89, label %82

82:                                               ; preds = %57
  %83 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add nsw i64 %84, %66
  %86 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = add nsw i64 %87, %80
  br label %89

89:                                               ; preds = %57, %82
  %90 = phi i64 [ %85, %82 ], [ %66, %57 ]
  %91 = phi i64 [ %88, %82 ], [ %80, %57 ]
  %92 = or i64 %91, %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %89
  call void @FT_Outline_Translate(%struct.FT_Outline_* %12, i64 %90, i64 %91) #7
  br label %95

95:                                               ; preds = %89, %94
  %96 = icmp ult i32 %2, 2
  br i1 %96, label %97, label %264

97:                                               ; preds = %95
  %98 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 13, i32 5
  %99 = load i32, i32* %98, align 8
  %100 = and i32 %99, 64
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %253, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 13, i32 2
  %104 = load %struct.FT_Vector_*, %struct.FT_Vector_** %103, align 8
  %105 = ptrtoint %struct.FT_Vector_* %104 to i64
  %106 = icmp eq %struct.FT_Vector_* %104, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 13, i32 1
  %109 = load i16, i16* %108, align 2
  %110 = sext i16 %109 to i64
  %111 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %104, i64 %110
  br label %112

112:                                              ; preds = %107, %102
  %113 = phi %struct.FT_Vector_* [ %111, %107 ], [ null, %102 ]
  %114 = bitcast %struct.FT_Vector_* %113 to i8*
  %115 = bitcast %struct.FT_Raster_Params_* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %115) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 -86, i64 96, i1 false) #7
  %116 = bitcast %struct.TOrigin_* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 -86, i64 16, i1 false) #7
  %117 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 10, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = and i32 %118, 1073733632
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %251

121:                                              ; preds = %112
  %122 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %7, i64 0, i32 1
  %123 = bitcast i8** %122 to %struct.FT_Outline_**
  store %struct.FT_Outline_* %12, %struct.FT_Outline_** %123, align 8
  %124 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %7, i64 0, i32 2
  store i32 3, i32* %124, align 8
  %125 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %7, i64 0, i32 3
  store void (i32, i32, %struct.FT_Span_*, i8*)* bitcast (void (i32, i32, %struct.FT_Span_*, %struct.TOrigin_*)* @ft_smooth_overlap_spans to void (i32, i32, %struct.FT_Span_*, i8*)*), void (i32, i32, %struct.FT_Span_*, i8*)** %125, align 8
  %126 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %7, i64 0, i32 7
  %127 = bitcast i8** %126 to %struct.TOrigin_**
  store %struct.TOrigin_* %8, %struct.TOrigin_** %127, align 8
  %128 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %7, i64 0, i32 8, i32 0
  %129 = shl i32 %118, 2
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %7, i64 0, i32 8, i32 2
  %132 = bitcast i64* %128 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 16, i1 false) #7
  store i64 %130, i64* %131, align 8
  %133 = load i32, i32* %43, align 8
  %134 = shl i32 %133, 2
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %7, i64 0, i32 8, i32 3
  store i64 %135, i64* %136, align 8
  %137 = load i32, i32* %47, align 8
  %138 = icmp slt i32 %137, 0
  %139 = load i8*, i8** %54, align 8
  %140 = add i32 %133, -1
  %141 = mul i32 %137, %140
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %139, i64 %142
  %144 = select i1 %138, i8* %139, i8* %143
  %145 = getelementptr inbounds %struct.TOrigin_, %struct.TOrigin_* %8, i64 0, i32 0
  store i8* %144, i8** %145, align 8
  %146 = getelementptr inbounds %struct.TOrigin_, %struct.TOrigin_* %8, i64 0, i32 1
  store i32 %137, i32* %146, align 8
  %147 = icmp ult %struct.FT_Vector_* %104, %113
  br i1 %147, label %148, label %212

148:                                              ; preds = %121
  %149 = xor i64 %105, -1
  %150 = getelementptr i8, i8* %114, i64 %149
  %151 = ptrtoint i8* %150 to i64
  %152 = lshr i64 %151, 4
  %153 = add nuw nsw i64 %152, 1
  %154 = and i64 %153, 7
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %166, label %156

156:                                              ; preds = %148, %156
  %157 = phi %struct.FT_Vector_* [ %163, %156 ], [ %104, %148 ]
  %158 = phi i64 [ %164, %156 ], [ %154, %148 ]
  %159 = bitcast %struct.FT_Vector_* %157 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8
  %161 = shl nsw <2 x i64> %160, <i64 2, i64 2>
  %162 = bitcast %struct.FT_Vector_* %157 to <2 x i64>*
  store <2 x i64> %161, <2 x i64>* %162, align 8
  %163 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %157, i64 1
  %164 = add i64 %158, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %156, !llvm.loop !2

166:                                              ; preds = %156, %148
  %167 = phi %struct.FT_Vector_* [ %104, %148 ], [ %163, %156 ]
  %168 = icmp ult i8* %150, inttoptr (i64 112 to i8*)
  br i1 %168, label %212, label %169

169:                                              ; preds = %166, %169
  %170 = phi %struct.FT_Vector_* [ %210, %169 ], [ %167, %166 ]
  %171 = bitcast %struct.FT_Vector_* %170 to <2 x i64>*
  %172 = load <2 x i64>, <2 x i64>* %171, align 8
  %173 = shl nsw <2 x i64> %172, <i64 2, i64 2>
  %174 = bitcast %struct.FT_Vector_* %170 to <2 x i64>*
  store <2 x i64> %173, <2 x i64>* %174, align 8
  %175 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %170, i64 1
  %176 = bitcast %struct.FT_Vector_* %175 to <2 x i64>*
  %177 = load <2 x i64>, <2 x i64>* %176, align 8
  %178 = shl nsw <2 x i64> %177, <i64 2, i64 2>
  %179 = bitcast %struct.FT_Vector_* %175 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %179, align 8
  %180 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %170, i64 2
  %181 = bitcast %struct.FT_Vector_* %180 to <2 x i64>*
  %182 = load <2 x i64>, <2 x i64>* %181, align 8
  %183 = shl nsw <2 x i64> %182, <i64 2, i64 2>
  %184 = bitcast %struct.FT_Vector_* %180 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %184, align 8
  %185 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %170, i64 3
  %186 = bitcast %struct.FT_Vector_* %185 to <2 x i64>*
  %187 = load <2 x i64>, <2 x i64>* %186, align 8
  %188 = shl nsw <2 x i64> %187, <i64 2, i64 2>
  %189 = bitcast %struct.FT_Vector_* %185 to <2 x i64>*
  store <2 x i64> %188, <2 x i64>* %189, align 8
  %190 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %170, i64 4
  %191 = bitcast %struct.FT_Vector_* %190 to <2 x i64>*
  %192 = load <2 x i64>, <2 x i64>* %191, align 8
  %193 = shl nsw <2 x i64> %192, <i64 2, i64 2>
  %194 = bitcast %struct.FT_Vector_* %190 to <2 x i64>*
  store <2 x i64> %193, <2 x i64>* %194, align 8
  %195 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %170, i64 5
  %196 = bitcast %struct.FT_Vector_* %195 to <2 x i64>*
  %197 = load <2 x i64>, <2 x i64>* %196, align 8
  %198 = shl nsw <2 x i64> %197, <i64 2, i64 2>
  %199 = bitcast %struct.FT_Vector_* %195 to <2 x i64>*
  store <2 x i64> %198, <2 x i64>* %199, align 8
  %200 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %170, i64 6
  %201 = bitcast %struct.FT_Vector_* %200 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 8
  %203 = shl nsw <2 x i64> %202, <i64 2, i64 2>
  %204 = bitcast %struct.FT_Vector_* %200 to <2 x i64>*
  store <2 x i64> %203, <2 x i64>* %204, align 8
  %205 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %170, i64 7
  %206 = bitcast %struct.FT_Vector_* %205 to <2 x i64>*
  %207 = load <2 x i64>, <2 x i64>* %206, align 8
  %208 = shl nsw <2 x i64> %207, <i64 2, i64 2>
  %209 = bitcast %struct.FT_Vector_* %205 to <2 x i64>*
  store <2 x i64> %208, <2 x i64>* %209, align 8
  %210 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %170, i64 8
  %211 = icmp ult %struct.FT_Vector_* %210, %113
  br i1 %211, label %169, label %212

212:                                              ; preds = %166, %169, %121
  %213 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 5
  %214 = load i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)** %213, align 8
  %215 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 4
  %216 = load %struct.FT_RasterRec_*, %struct.FT_RasterRec_** %215, align 8
  %217 = call i32 %214(%struct.FT_RasterRec_* %216, %struct.FT_Raster_Params_* nonnull %7) #7
  br i1 %147, label %218, label %251

218:                                              ; preds = %212
  %219 = xor i64 %105, -1
  %220 = getelementptr i8, i8* %114, i64 %219
  %221 = ptrtoint i8* %220 to i64
  %222 = and i64 %221, 16
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %232

224:                                              ; preds = %218
  %225 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %104, i64 0, i32 0
  %226 = load i64, i64* %225, align 8
  %227 = sdiv i64 %226, 4
  store i64 %227, i64* %225, align 8
  %228 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %104, i64 0, i32 1
  %229 = load i64, i64* %228, align 8
  %230 = sdiv i64 %229, 4
  store i64 %230, i64* %228, align 8
  %231 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %104, i64 1
  br label %232

232:                                              ; preds = %224, %218
  %233 = phi %struct.FT_Vector_* [ %104, %218 ], [ %231, %224 ]
  %234 = icmp ult i8* %220, inttoptr (i64 16 to i8*)
  br i1 %234, label %251, label %235

235:                                              ; preds = %232, %235
  %236 = phi %struct.FT_Vector_* [ %249, %235 ], [ %233, %232 ]
  %237 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %236, i64 0, i32 0
  %238 = load i64, i64* %237, align 8
  %239 = sdiv i64 %238, 4
  store i64 %239, i64* %237, align 8
  %240 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %236, i64 0, i32 1
  %241 = load i64, i64* %240, align 8
  %242 = sdiv i64 %241, 4
  store i64 %242, i64* %240, align 8
  %243 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %236, i64 1, i32 0
  %244 = load i64, i64* %243, align 8
  %245 = sdiv i64 %244, 4
  store i64 %245, i64* %243, align 8
  %246 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %236, i64 1, i32 1
  %247 = load i64, i64* %246, align 8
  %248 = sdiv i64 %247, 4
  store i64 %248, i64* %246, align 8
  %249 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %236, i64 2
  %250 = icmp ult %struct.FT_Vector_* %249, %113
  br i1 %250, label %235, label %251

251:                                              ; preds = %232, %235, %112, %212
  %252 = phi i32 [ 98, %112 ], [ %217, %212 ], [ %217, %235 ], [ %217, %232 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #7
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %115) #7
  store i32 %252, i32* %9, align 4
  br label %511

253:                                              ; preds = %97
  %254 = bitcast %struct.FT_Raster_Params_* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %254) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %254, i8 -86, i64 96, i1 false)
  %255 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %10, i64 0, i32 0
  store %struct.FT_Bitmap_* %13, %struct.FT_Bitmap_** %255, align 8
  %256 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %10, i64 0, i32 1
  %257 = bitcast i8** %256 to %struct.FT_Outline_**
  store %struct.FT_Outline_* %12, %struct.FT_Outline_** %257, align 8
  %258 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %10, i64 0, i32 2
  store i32 1, i32* %258, align 8
  %259 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 5
  %260 = load i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)** %259, align 8
  %261 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 4
  %262 = load %struct.FT_RasterRec_*, %struct.FT_RasterRec_** %261, align 8
  %263 = call i32 %260(%struct.FT_RasterRec_* %262, %struct.FT_Raster_Params_* nonnull %10) #7
  store i32 %263, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %254) #7
  br label %511

264:                                              ; preds = %95
  switch i32 %2, label %485 [
    i32 3, label %265
    i32 4, label %375
  ]

265:                                              ; preds = %264
  %266 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 13, i32 2
  %267 = load %struct.FT_Vector_*, %struct.FT_Vector_** %266, align 8
  %268 = ptrtoint %struct.FT_Vector_* %267 to i64
  %269 = icmp eq %struct.FT_Vector_* %267, null
  br i1 %269, label %275, label %270

270:                                              ; preds = %265
  %271 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 13, i32 1
  %272 = load i16, i16* %271, align 2
  %273 = sext i16 %272 to i64
  %274 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %267, i64 %273
  br label %275

275:                                              ; preds = %270, %265
  %276 = phi %struct.FT_Vector_* [ %274, %270 ], [ null, %265 ]
  %277 = bitcast %struct.FT_Vector_* %276 to i8*
  %278 = bitcast %struct.FT_Raster_Params_* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %278) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %278, i8 -86, i64 96, i1 false) #7
  %279 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %6, i64 0, i32 0
  store %struct.FT_Bitmap_* %13, %struct.FT_Bitmap_** %279, align 8
  %280 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %6, i64 0, i32 1
  %281 = bitcast i8** %280 to %struct.FT_Outline_**
  store %struct.FT_Outline_* %12, %struct.FT_Outline_** %281, align 8
  %282 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %6, i64 0, i32 2
  store i32 1, i32* %282, align 8
  %283 = icmp ult %struct.FT_Vector_* %267, %276
  br i1 %283, label %284, label %332

284:                                              ; preds = %275
  %285 = xor i64 %268, -1
  %286 = getelementptr i8, i8* %277, i64 %285
  %287 = ptrtoint i8* %286 to i64
  %288 = lshr i64 %287, 4
  %289 = add nuw nsw i64 %288, 1
  %290 = and i64 %289, 7
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %301, label %292

292:                                              ; preds = %284, %292
  %293 = phi %struct.FT_Vector_* [ %298, %292 ], [ %267, %284 ]
  %294 = phi i64 [ %299, %292 ], [ %290, %284 ]
  %295 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %293, i64 0, i32 0
  %296 = load i64, i64* %295, align 8
  %297 = mul nsw i64 %296, 3
  store i64 %297, i64* %295, align 8
  %298 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %293, i64 1
  %299 = add i64 %294, -1
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %301, label %292, !llvm.loop !4

301:                                              ; preds = %292, %284
  %302 = phi %struct.FT_Vector_* [ %267, %284 ], [ %298, %292 ]
  %303 = icmp ult i8* %286, inttoptr (i64 112 to i8*)
  br i1 %303, label %332, label %304

304:                                              ; preds = %301, %304
  %305 = phi %struct.FT_Vector_* [ %330, %304 ], [ %302, %301 ]
  %306 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %305, i64 0, i32 0
  %307 = load i64, i64* %306, align 8
  %308 = mul nsw i64 %307, 3
  store i64 %308, i64* %306, align 8
  %309 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %305, i64 1, i32 0
  %310 = load i64, i64* %309, align 8
  %311 = mul nsw i64 %310, 3
  store i64 %311, i64* %309, align 8
  %312 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %305, i64 2, i32 0
  %313 = load i64, i64* %312, align 8
  %314 = mul nsw i64 %313, 3
  store i64 %314, i64* %312, align 8
  %315 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %305, i64 3, i32 0
  %316 = load i64, i64* %315, align 8
  %317 = mul nsw i64 %316, 3
  store i64 %317, i64* %315, align 8
  %318 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %305, i64 4, i32 0
  %319 = load i64, i64* %318, align 8
  %320 = mul nsw i64 %319, 3
  store i64 %320, i64* %318, align 8
  %321 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %305, i64 5, i32 0
  %322 = load i64, i64* %321, align 8
  %323 = mul nsw i64 %322, 3
  store i64 %323, i64* %321, align 8
  %324 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %305, i64 6, i32 0
  %325 = load i64, i64* %324, align 8
  %326 = mul nsw i64 %325, 3
  store i64 %326, i64* %324, align 8
  %327 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %305, i64 7, i32 0
  %328 = load i64, i64* %327, align 8
  %329 = mul nsw i64 %328, 3
  store i64 %329, i64* %327, align 8
  %330 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %305, i64 8
  %331 = icmp ult %struct.FT_Vector_* %330, %276
  br i1 %331, label %304, label %332

332:                                              ; preds = %301, %304, %275
  %333 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 5
  %334 = load i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)** %333, align 8
  %335 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 4
  %336 = load %struct.FT_RasterRec_*, %struct.FT_RasterRec_** %335, align 8
  %337 = call i32 %334(%struct.FT_RasterRec_* %336, %struct.FT_Raster_Params_* nonnull %6) #7
  br i1 %283, label %338, label %374

338:                                              ; preds = %332
  %339 = xor i64 %268, -1
  %340 = getelementptr i8, i8* %277, i64 %339
  %341 = ptrtoint i8* %340 to i64
  %342 = lshr i64 %341, 4
  %343 = add nuw nsw i64 %342, 1
  %344 = and i64 %343, 3
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %355, label %346

346:                                              ; preds = %338, %346
  %347 = phi %struct.FT_Vector_* [ %352, %346 ], [ %267, %338 ]
  %348 = phi i64 [ %353, %346 ], [ %344, %338 ]
  %349 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %347, i64 0, i32 0
  %350 = load i64, i64* %349, align 8
  %351 = sdiv i64 %350, 3
  store i64 %351, i64* %349, align 8
  %352 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %347, i64 1
  %353 = add i64 %348, -1
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %355, label %346, !llvm.loop !5

355:                                              ; preds = %346, %338
  %356 = phi %struct.FT_Vector_* [ %267, %338 ], [ %352, %346 ]
  %357 = icmp ult i8* %340, inttoptr (i64 48 to i8*)
  br i1 %357, label %374, label %358

358:                                              ; preds = %355, %358
  %359 = phi %struct.FT_Vector_* [ %372, %358 ], [ %356, %355 ]
  %360 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %359, i64 0, i32 0
  %361 = load i64, i64* %360, align 8
  %362 = sdiv i64 %361, 3
  store i64 %362, i64* %360, align 8
  %363 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %359, i64 1, i32 0
  %364 = load i64, i64* %363, align 8
  %365 = sdiv i64 %364, 3
  store i64 %365, i64* %363, align 8
  %366 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %359, i64 2, i32 0
  %367 = load i64, i64* %366, align 8
  %368 = sdiv i64 %367, 3
  store i64 %368, i64* %366, align 8
  %369 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %359, i64 3, i32 0
  %370 = load i64, i64* %369, align 8
  %371 = sdiv i64 %370, 3
  store i64 %371, i64* %369, align 8
  %372 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %359, i64 4
  %373 = icmp ult %struct.FT_Vector_* %372, %276
  br i1 %373, label %358, label %374

374:                                              ; preds = %355, %358, %332
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %278) #7
  store i32 %337, i32* %9, align 4
  br label %485

375:                                              ; preds = %264
  %376 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 13, i32 2
  %377 = load %struct.FT_Vector_*, %struct.FT_Vector_** %376, align 8
  %378 = ptrtoint %struct.FT_Vector_* %377 to i64
  %379 = icmp eq %struct.FT_Vector_* %377, null
  br i1 %379, label %385, label %380

380:                                              ; preds = %375
  %381 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 13, i32 1
  %382 = load i16, i16* %381, align 2
  %383 = sext i16 %382 to i64
  %384 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %377, i64 %383
  br label %385

385:                                              ; preds = %380, %375
  %386 = phi %struct.FT_Vector_* [ %384, %380 ], [ null, %375 ]
  %387 = bitcast %struct.FT_Vector_* %386 to i8*
  %388 = bitcast %struct.FT_Raster_Params_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %388) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %388, i8 -86, i64 96, i1 false) #7
  %389 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %5, i64 0, i32 0
  store %struct.FT_Bitmap_* %13, %struct.FT_Bitmap_** %389, align 8
  %390 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %5, i64 0, i32 1
  %391 = bitcast i8** %390 to %struct.FT_Outline_**
  store %struct.FT_Outline_* %12, %struct.FT_Outline_** %391, align 8
  %392 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %5, i64 0, i32 2
  store i32 1, i32* %392, align 8
  %393 = icmp ult %struct.FT_Vector_* %377, %386
  br i1 %393, label %394, label %442

394:                                              ; preds = %385
  %395 = xor i64 %378, -1
  %396 = getelementptr i8, i8* %387, i64 %395
  %397 = ptrtoint i8* %396 to i64
  %398 = lshr i64 %397, 4
  %399 = add nuw nsw i64 %398, 1
  %400 = and i64 %399, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %411, label %402

402:                                              ; preds = %394, %402
  %403 = phi %struct.FT_Vector_* [ %408, %402 ], [ %377, %394 ]
  %404 = phi i64 [ %409, %402 ], [ %400, %394 ]
  %405 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %403, i64 0, i32 1
  %406 = load i64, i64* %405, align 8
  %407 = mul nsw i64 %406, 3
  store i64 %407, i64* %405, align 8
  %408 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %403, i64 1
  %409 = add i64 %404, -1
  %410 = icmp eq i64 %409, 0
  br i1 %410, label %411, label %402, !llvm.loop !6

411:                                              ; preds = %402, %394
  %412 = phi %struct.FT_Vector_* [ %377, %394 ], [ %408, %402 ]
  %413 = icmp ult i8* %396, inttoptr (i64 112 to i8*)
  br i1 %413, label %442, label %414

414:                                              ; preds = %411, %414
  %415 = phi %struct.FT_Vector_* [ %440, %414 ], [ %412, %411 ]
  %416 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %415, i64 0, i32 1
  %417 = load i64, i64* %416, align 8
  %418 = mul nsw i64 %417, 3
  store i64 %418, i64* %416, align 8
  %419 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %415, i64 1, i32 1
  %420 = load i64, i64* %419, align 8
  %421 = mul nsw i64 %420, 3
  store i64 %421, i64* %419, align 8
  %422 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %415, i64 2, i32 1
  %423 = load i64, i64* %422, align 8
  %424 = mul nsw i64 %423, 3
  store i64 %424, i64* %422, align 8
  %425 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %415, i64 3, i32 1
  %426 = load i64, i64* %425, align 8
  %427 = mul nsw i64 %426, 3
  store i64 %427, i64* %425, align 8
  %428 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %415, i64 4, i32 1
  %429 = load i64, i64* %428, align 8
  %430 = mul nsw i64 %429, 3
  store i64 %430, i64* %428, align 8
  %431 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %415, i64 5, i32 1
  %432 = load i64, i64* %431, align 8
  %433 = mul nsw i64 %432, 3
  store i64 %433, i64* %431, align 8
  %434 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %415, i64 6, i32 1
  %435 = load i64, i64* %434, align 8
  %436 = mul nsw i64 %435, 3
  store i64 %436, i64* %434, align 8
  %437 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %415, i64 7, i32 1
  %438 = load i64, i64* %437, align 8
  %439 = mul nsw i64 %438, 3
  store i64 %439, i64* %437, align 8
  %440 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %415, i64 8
  %441 = icmp ult %struct.FT_Vector_* %440, %386
  br i1 %441, label %414, label %442

442:                                              ; preds = %411, %414, %385
  %443 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 5
  %444 = load i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)** %443, align 8
  %445 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 4
  %446 = load %struct.FT_RasterRec_*, %struct.FT_RasterRec_** %445, align 8
  %447 = call i32 %444(%struct.FT_RasterRec_* %446, %struct.FT_Raster_Params_* nonnull %5) #7
  br i1 %393, label %448, label %484

448:                                              ; preds = %442
  %449 = xor i64 %378, -1
  %450 = getelementptr i8, i8* %387, i64 %449
  %451 = ptrtoint i8* %450 to i64
  %452 = lshr i64 %451, 4
  %453 = add nuw nsw i64 %452, 1
  %454 = and i64 %453, 3
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %465, label %456

456:                                              ; preds = %448, %456
  %457 = phi %struct.FT_Vector_* [ %462, %456 ], [ %377, %448 ]
  %458 = phi i64 [ %463, %456 ], [ %454, %448 ]
  %459 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %457, i64 0, i32 1
  %460 = load i64, i64* %459, align 8
  %461 = sdiv i64 %460, 3
  store i64 %461, i64* %459, align 8
  %462 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %457, i64 1
  %463 = add i64 %458, -1
  %464 = icmp eq i64 %463, 0
  br i1 %464, label %465, label %456, !llvm.loop !7

465:                                              ; preds = %456, %448
  %466 = phi %struct.FT_Vector_* [ %377, %448 ], [ %462, %456 ]
  %467 = icmp ult i8* %450, inttoptr (i64 48 to i8*)
  br i1 %467, label %484, label %468

468:                                              ; preds = %465, %468
  %469 = phi %struct.FT_Vector_* [ %482, %468 ], [ %466, %465 ]
  %470 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %469, i64 0, i32 1
  %471 = load i64, i64* %470, align 8
  %472 = sdiv i64 %471, 3
  store i64 %472, i64* %470, align 8
  %473 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %469, i64 1, i32 1
  %474 = load i64, i64* %473, align 8
  %475 = sdiv i64 %474, 3
  store i64 %475, i64* %473, align 8
  %476 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %469, i64 2, i32 1
  %477 = load i64, i64* %476, align 8
  %478 = sdiv i64 %477, 3
  store i64 %478, i64* %476, align 8
  %479 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %469, i64 3, i32 1
  %480 = load i64, i64* %479, align 8
  %481 = sdiv i64 %480, 3
  store i64 %481, i64* %479, align 8
  %482 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %469, i64 4
  %483 = icmp ult %struct.FT_Vector_* %482, %386
  br i1 %483, label %468, label %484

484:                                              ; preds = %465, %468, %442
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %388) #7
  store i32 %447, i32* %9, align 4
  br label %485

485:                                              ; preds = %264, %484, %374
  %486 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 1
  %487 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %486, align 8
  %488 = icmp eq %struct.FT_FaceRec_* %487, null
  br i1 %488, label %497, label %489

489:                                              ; preds = %485
  %490 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %487, i64 0, i32 30
  %491 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %490, align 8
  %492 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %491, i64 0, i32 8
  %493 = load void (%struct.FT_Bitmap_*, i8*)*, void (%struct.FT_Bitmap_*, i8*)** %492, align 8
  %494 = icmp eq void (%struct.FT_Bitmap_*, i8*)* %493, null
  br i1 %494, label %497, label %495

495:                                              ; preds = %489
  %496 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %491, i64 0, i32 7, i64 0
  br label %504

497:                                              ; preds = %485, %489
  %498 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 0
  %499 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %498, align 8
  %500 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %499, i64 0, i32 10, i64 0
  %501 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %499, i64 0, i32 11
  %502 = load void (%struct.FT_Bitmap_*, i8*)*, void (%struct.FT_Bitmap_*, i8*)** %501, align 8
  %503 = icmp eq void (%struct.FT_Bitmap_*, i8*)* %502, null
  br i1 %503, label %507, label %504

504:                                              ; preds = %495, %497
  %505 = phi void (%struct.FT_Bitmap_*, i8*)* [ %493, %495 ], [ %502, %497 ]
  %506 = phi i8* [ %496, %495 ], [ %500, %497 ]
  call void %505(%struct.FT_Bitmap_* %13, i8* %506) #7
  br label %507

507:                                              ; preds = %42, %46, %497, %504
  %508 = phi i64 [ %90, %504 ], [ %90, %497 ], [ 0, %42 ], [ 0, %46 ]
  %509 = phi i64 [ %91, %504 ], [ %91, %497 ], [ 0, %42 ], [ 0, %46 ]
  %510 = load i32, i32* %9, align 4
  br label %511

511:                                              ; preds = %507, %253, %251
  %512 = phi i32 [ %510, %507 ], [ %263, %253 ], [ %252, %251 ]
  %513 = phi i64 [ %508, %507 ], [ %90, %253 ], [ %90, %251 ]
  %514 = phi i64 [ %509, %507 ], [ %91, %253 ], [ %91, %251 ]
  %515 = icmp eq i32 %512, 0
  br i1 %515, label %516, label %517

516:                                              ; preds = %511
  store i32 1651078259, i32* %16, align 8
  br label %533

517:                                              ; preds = %21, %23, %41, %50, %511
  %518 = phi i64 [ %514, %511 ], [ 0, %50 ], [ 0, %41 ], [ 0, %23 ], [ 0, %21 ]
  %519 = phi i64 [ %513, %511 ], [ 0, %50 ], [ 0, %41 ], [ 0, %23 ], [ 0, %21 ]
  %520 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 21
  %521 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %520, align 8
  %522 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %521, i64 0, i32 1
  %523 = load i32, i32* %522, align 8
  %524 = and i32 %523, 1
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %533, label %526

526:                                              ; preds = %517
  %527 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 10, i32 3
  %528 = load i8*, i8** %527, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %15, i8* %528) #7
  store i8* null, i8** %527, align 8
  %529 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %520, align 8
  %530 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %529, i64 0, i32 1
  %531 = load i32, i32* %530, align 8
  %532 = and i32 %531, -2
  store i32 %532, i32* %530, align 8
  br label %533

533:                                              ; preds = %517, %526, %516
  %534 = phi i64 [ %518, %517 ], [ %518, %526 ], [ %514, %516 ]
  %535 = phi i64 [ %519, %517 ], [ %519, %526 ], [ %513, %516 ]
  %536 = or i64 %535, %534
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %541, label %538

538:                                              ; preds = %533
  %539 = sub nsw i64 0, %535
  %540 = sub nsw i64 0, %534
  call void @FT_Outline_Translate(%struct.FT_Outline_* %12, i64 %539, i64 %540) #7
  br label %541

541:                                              ; preds = %533, %538
  %542 = load i32, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #7
  ret i32 %542
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ft_smooth_transform(%struct.FT_RendererRec_* nocapture readonly, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_* readonly) #0 {
  %5 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 9
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %22

10:                                               ; preds = %4
  %11 = icmp eq %struct.FT_Matrix_* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 13
  tail call void @FT_Outline_Transform(%struct.FT_Outline_* %13, %struct.FT_Matrix_* nonnull %2) #7
  br label %14

14:                                               ; preds = %10, %12
  %15 = icmp eq %struct.FT_Vector_* %3, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 13
  %18 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  tail call void @FT_Outline_Translate(%struct.FT_Outline_* %17, i64 %19, i64 %21) #7
  br label %22

22:                                               ; preds = %4, %14, %16
  %23 = phi i32 [ 0, %16 ], [ 0, %14 ], [ 6, %4 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define internal void @ft_smooth_get_cbox(%struct.FT_RendererRec_* nocapture readonly, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*) #0 {
  %4 = bitcast %struct.FT_BBox_* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false)
  %5 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 9
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 13
  tail call void @FT_Outline_Get_CBox(%struct.FT_Outline_* %11, %struct.FT_BBox_* %2) #7
  br label %12

12:                                               ; preds = %10, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ft_smooth_set_mode(%struct.FT_RendererRec_* nocapture readonly, i64, i8*) #0 {
  %4 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 1
  %5 = load %struct.FT_Renderer_Class_*, %struct.FT_Renderer_Class_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_Renderer_Class_, %struct.FT_Renderer_Class_* %5, i64 0, i32 6
  %7 = load %struct.FT_Raster_Funcs_*, %struct.FT_Raster_Funcs_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_Raster_Funcs_, %struct.FT_Raster_Funcs_* %7, i64 0, i32 3
  %9 = load i32 (%struct.FT_RasterRec_*, i64, i8*)*, i32 (%struct.FT_RasterRec_*, i64, i8*)** %8, align 8
  %10 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %0, i64 0, i32 4
  %11 = load %struct.FT_RasterRec_*, %struct.FT_RasterRec_** %10, align 8
  %12 = tail call i32 %9(%struct.FT_RasterRec_* %11, i64 %1, i8* %2) #7
  ret i32 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare hidden i8* @ft_mem_alloc(%struct.FT_MemoryRec_*, i64, i32*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @gray_convert_glyph_inner(%struct.gray_TWorker_*, i32) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 0, i64 0
  %4 = call i32 @_setjmp(%struct.__jmp_buf_tag* %3) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 12
  %10 = bitcast %struct.gray_TWorker_* %0 to i8*
  %11 = call i32 @FT_Outline_Decompose(%struct.FT_Outline_* %9, %struct.FT_Outline_Funcs_* nonnull @func_interface, i8* %10) #7
  br label %16

12:                                               ; preds = %6
  call void @FT_Trace_Disable() #7
  %13 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 12
  %14 = bitcast %struct.gray_TWorker_* %0 to i8*
  %15 = call i32 @FT_Outline_Decompose(%struct.FT_Outline_* %13, %struct.FT_Outline_Funcs_* nonnull @func_interface, i8* %14) #7
  call void @FT_Trace_Enable() #7
  br label %16

16:                                               ; preds = %8, %2, %12
  %17 = phi i32 [ %15, %12 ], [ %11, %8 ], [ 64, %2 ]
  ret i32 %17
}

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) local_unnamed_addr #4

declare hidden void @FT_Trace_Disable() local_unnamed_addr #3

declare i32 @FT_Outline_Decompose(%struct.FT_Outline_*, %struct.FT_Outline_Funcs_*, i8*) local_unnamed_addr #3

declare hidden void @FT_Trace_Enable() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal i32 @gray_move_to(%struct.FT_Vector_* nocapture readonly, %struct.gray_TWorker_*) #0 {
  %3 = bitcast %struct.FT_Vector_* %0 to <2 x i64>*
  %4 = load <2 x i64>, <2 x i64>* %3, align 8
  %5 = shl nsw <2 x i64> %4, <i64 2, i64 2>
  %6 = extractelement <2 x i64> %4, i32 0
  %7 = lshr i64 %6, 6
  %8 = trunc i64 %7 to i32
  %9 = extractelement <2 x i64> %4, i32 1
  %10 = lshr i64 %9, 6
  %11 = trunc i64 %10 to i32
  tail call fastcc void @gray_set_cell(%struct.gray_TWorker_* %1, i32 %8, i32 %11)
  %12 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %1, i64 0, i32 10
  %13 = bitcast i64* %12 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %13, align 8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @gray_line_to(%struct.FT_Vector_* nocapture readonly, %struct.gray_TWorker_*) #0 {
  %3 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = shl nsw i64 %4, 2
  %6 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = shl nsw i64 %7, 2
  tail call fastcc void @gray_render_line(%struct.gray_TWorker_* %1, i64 %5, i64 %8)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @gray_conic_to(%struct.FT_Vector_* nocapture readonly, %struct.FT_Vector_* nocapture readonly, %struct.gray_TWorker_*) #0 {
  %4 = alloca [33 x %struct.FT_Vector_], align 16
  %5 = bitcast [33 x %struct.FT_Vector_]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 528, i8* nonnull %5) #7
  %6 = getelementptr inbounds [33 x %struct.FT_Vector_], [33 x %struct.FT_Vector_]* %4, i64 0, i64 3
  %7 = bitcast %struct.FT_Vector_* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 480, i1 false) #7
  %8 = getelementptr inbounds [33 x %struct.FT_Vector_], [33 x %struct.FT_Vector_]* %4, i64 0, i64 0
  %9 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl nsw i64 %10, 2
  %12 = getelementptr inbounds [33 x %struct.FT_Vector_], [33 x %struct.FT_Vector_]* %4, i64 0, i64 0, i32 0
  store i64 %11, i64* %12, align 16
  %13 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = shl nsw i64 %14, 2
  %16 = getelementptr inbounds [33 x %struct.FT_Vector_], [33 x %struct.FT_Vector_]* %4, i64 0, i64 0, i32 1
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds [33 x %struct.FT_Vector_], [33 x %struct.FT_Vector_]* %4, i64 0, i64 1, i32 0
  %18 = bitcast %struct.FT_Vector_* %0 to <2 x i64>*
  %19 = load <2 x i64>, <2 x i64>* %18, align 8
  %20 = shl nsw <2 x i64> %19, <i64 2, i64 2>
  %21 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %21, align 16
  %22 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %2, i64 0, i32 10
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds [33 x %struct.FT_Vector_], [33 x %struct.FT_Vector_]* %4, i64 0, i64 2, i32 0
  store i64 %23, i64* %24, align 16
  %25 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %2, i64 0, i32 11
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds [33 x %struct.FT_Vector_], [33 x %struct.FT_Vector_]* %4, i64 0, i64 2, i32 1
  store i64 %26, i64* %27, align 8
  %28 = lshr i64 %14, 6
  %29 = trunc i64 %28 to i32
  %30 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %2, i64 0, i32 4
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, %29
  br i1 %32, label %42, label %33

33:                                               ; preds = %3
  %34 = extractelement <2 x i64> %19, i32 1
  %35 = lshr i64 %34, 6
  %36 = trunc i64 %35 to i32
  %37 = icmp sgt i32 %31, %36
  br i1 %37, label %42, label %38

38:                                               ; preds = %33
  %39 = lshr i64 %26, 8
  %40 = trunc i64 %39 to i32
  %41 = icmp sgt i32 %31, %40
  br i1 %41, label %42, label %55

42:                                               ; preds = %38, %33, %3
  %43 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %2, i64 0, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = icmp sgt i32 %44, %29
  br i1 %45, label %46, label %56

46:                                               ; preds = %42
  %47 = extractelement <2 x i64> %19, i32 1
  %48 = lshr i64 %47, 6
  %49 = trunc i64 %48 to i32
  %50 = icmp sgt i32 %44, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %46
  %52 = lshr i64 %26, 8
  %53 = trunc i64 %52 to i32
  %54 = icmp sgt i32 %44, %53
  br i1 %54, label %55, label %56

55:                                               ; preds = %51, %38
  store i64 %11, i64* %22, align 8
  store i64 %15, i64* %25, align 8
  br label %132

56:                                               ; preds = %51, %46, %42
  %57 = extractelement <2 x i64> %19, i32 0
  %58 = shl nsw i64 %57, 3
  %59 = sub i64 %11, %58
  %60 = add i64 %23, %59
  %61 = icmp slt i64 %60, 0
  %62 = sub nsw i64 0, %60
  %63 = select i1 %61, i64 %62, i64 %60
  %64 = extractelement <2 x i64> %19, i32 1
  %65 = shl nsw i64 %64, 3
  %66 = sub i64 %15, %65
  %67 = add i64 %26, %66
  %68 = icmp slt i64 %67, 0
  %69 = sub nsw i64 0, %67
  %70 = select i1 %68, i64 %69, i64 %67
  %71 = icmp slt i64 %63, %70
  %72 = select i1 %71, i64 %70, i64 %63
  %73 = icmp sgt i64 %72, 64
  br i1 %73, label %74, label %80

74:                                               ; preds = %56, %74
  %75 = phi i32 [ %78, %74 ], [ 1, %56 ]
  %76 = phi i64 [ %77, %74 ], [ %72, %56 ]
  %77 = lshr i64 %76, 2
  %78 = shl i32 %75, 1
  %79 = icmp ugt i64 %76, 259
  br i1 %79, label %74, label %80

80:                                               ; preds = %74, %56
  %81 = phi i32 [ 1, %56 ], [ %78, %74 ]
  br label %82

82:                                               ; preds = %80, %123
  %83 = phi %struct.FT_Vector_* [ %129, %123 ], [ %8, %80 ]
  %84 = phi i32 [ %130, %123 ], [ %81, %80 ]
  %85 = sub nsw i32 0, %84
  %86 = and i32 %84, %85
  %87 = ashr i32 %86, 1
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %123, label %89

89:                                               ; preds = %82, %89
  %90 = phi i32 [ %121, %89 ], [ %87, %82 ]
  %91 = phi %struct.FT_Vector_* [ %120, %89 ], [ %83, %82 ]
  %92 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %91, i64 2, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %91, i64 4, i32 0
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %91, i64 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %91, i64 1, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = add nsw i64 %98, %96
  %100 = add nsw i64 %98, %93
  %101 = ashr i64 %100, 1
  %102 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %91, i64 3, i32 0
  store i64 %101, i64* %102, align 8
  %103 = add nsw i64 %99, %100
  %104 = ashr i64 %103, 2
  store i64 %104, i64* %92, align 8
  %105 = ashr i64 %99, 1
  store i64 %105, i64* %97, align 8
  %106 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %91, i64 2, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %91, i64 4, i32 1
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %91, i64 0, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %91, i64 1, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = add nsw i64 %112, %110
  %114 = add nsw i64 %112, %107
  %115 = ashr i64 %114, 1
  %116 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %91, i64 3, i32 1
  store i64 %115, i64* %116, align 8
  %117 = add nsw i64 %113, %114
  %118 = ashr i64 %117, 2
  store i64 %118, i64* %106, align 8
  %119 = ashr i64 %113, 1
  store i64 %119, i64* %111, align 8
  %120 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %91, i64 2
  %121 = ashr i32 %90, 1
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %89

123:                                              ; preds = %89, %82
  %124 = phi %struct.FT_Vector_* [ %83, %82 ], [ %120, %89 ]
  %125 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %124, i64 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %124, i64 0, i32 1
  %128 = load i64, i64* %127, align 8
  tail call fastcc void @gray_render_line(%struct.gray_TWorker_* %2, i64 %126, i64 %128) #7
  %129 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %124, i64 -2
  %130 = add nsw i32 %84, -1
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %82

132:                                              ; preds = %123, %55
  call void @llvm.lifetime.end.p0i8(i64 528, i8* nonnull %5) #7
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @gray_cubic_to(%struct.FT_Vector_* nocapture readonly, %struct.FT_Vector_* nocapture readonly, %struct.FT_Vector_* nocapture readonly, %struct.gray_TWorker_*) #0 {
  %5 = alloca [49 x %struct.FT_Vector_], align 16
  %6 = bitcast [49 x %struct.FT_Vector_]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 784, i8* nonnull %6) #7
  %7 = getelementptr inbounds [49 x %struct.FT_Vector_], [49 x %struct.FT_Vector_]* %5, i64 0, i64 4
  %8 = bitcast %struct.FT_Vector_* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 720, i1 false) #7
  %9 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl nsw i64 %10, 2
  %12 = getelementptr inbounds [49 x %struct.FT_Vector_], [49 x %struct.FT_Vector_]* %5, i64 0, i64 0, i32 0
  store i64 %11, i64* %12, align 16
  %13 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = shl nsw i64 %14, 2
  %16 = getelementptr inbounds [49 x %struct.FT_Vector_], [49 x %struct.FT_Vector_]* %5, i64 0, i64 0, i32 1
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds [49 x %struct.FT_Vector_], [49 x %struct.FT_Vector_]* %5, i64 0, i64 1, i32 0
  %18 = bitcast %struct.FT_Vector_* %1 to <2 x i64>*
  %19 = load <2 x i64>, <2 x i64>* %18, align 8
  %20 = shl nsw <2 x i64> %19, <i64 2, i64 2>
  %21 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %21, align 16
  %22 = getelementptr inbounds [49 x %struct.FT_Vector_], [49 x %struct.FT_Vector_]* %5, i64 0, i64 2, i32 0
  %23 = bitcast %struct.FT_Vector_* %0 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = shl nsw <2 x i64> %24, <i64 2, i64 2>
  %26 = bitcast i64* %22 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %26, align 16
  %27 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %3, i64 0, i32 10
  %28 = getelementptr inbounds [49 x %struct.FT_Vector_], [49 x %struct.FT_Vector_]* %5, i64 0, i64 3, i32 0
  %29 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %3, i64 0, i32 11
  %30 = bitcast i64* %27 to <2 x i64>*
  %31 = load <2 x i64>, <2 x i64>* %30, align 8
  %32 = bitcast i64* %28 to <2 x i64>*
  store <2 x i64> %31, <2 x i64>* %32, align 16
  %33 = lshr i64 %14, 6
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %3, i64 0, i32 4
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, %34
  br i1 %37, label %53, label %38

38:                                               ; preds = %4
  %39 = extractelement <2 x i64> %19, i32 1
  %40 = lshr i64 %39, 6
  %41 = trunc i64 %40 to i32
  %42 = icmp sgt i32 %36, %41
  br i1 %42, label %53, label %43

43:                                               ; preds = %38
  %44 = extractelement <2 x i64> %24, i32 1
  %45 = lshr i64 %44, 6
  %46 = trunc i64 %45 to i32
  %47 = icmp sgt i32 %36, %46
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = extractelement <2 x i64> %31, i32 1
  %50 = lshr i64 %49, 8
  %51 = trunc i64 %50 to i32
  %52 = icmp sgt i32 %36, %51
  br i1 %52, label %53, label %73

53:                                               ; preds = %48, %43, %38, %4
  %54 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %3, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = icmp sgt i32 %55, %34
  br i1 %56, label %58, label %57

57:                                               ; preds = %68, %63, %58, %53
  br label %74

58:                                               ; preds = %53
  %59 = extractelement <2 x i64> %19, i32 1
  %60 = lshr i64 %59, 6
  %61 = trunc i64 %60 to i32
  %62 = icmp sgt i32 %55, %61
  br i1 %62, label %63, label %57

63:                                               ; preds = %58
  %64 = extractelement <2 x i64> %24, i32 1
  %65 = lshr i64 %64, 6
  %66 = trunc i64 %65 to i32
  %67 = icmp sgt i32 %55, %66
  br i1 %67, label %68, label %57

68:                                               ; preds = %63
  %69 = extractelement <2 x i64> %31, i32 1
  %70 = lshr i64 %69, 8
  %71 = trunc i64 %70 to i32
  %72 = icmp sgt i32 %55, %71
  br i1 %72, label %73, label %57

73:                                               ; preds = %68, %48
  store i64 %11, i64* %27, align 8
  store i64 %15, i64* %29, align 8
  br label %181

74:                                               ; preds = %179, %57
  %75 = phi i64 [ 0, %57 ], [ %180, %179 ]
  %76 = getelementptr inbounds [49 x %struct.FT_Vector_], [49 x %struct.FT_Vector_]* %5, i64 0, i64 %75
  %77 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 0, i32 0
  %78 = load i64, i64* %77, align 16
  %79 = shl i64 %78, 1
  %80 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 1, i32 0
  %81 = load i64, i64* %80, align 16
  %82 = mul i64 %81, -3
  %83 = add i64 %82, %79
  %84 = add nsw i64 %75, 3
  %85 = getelementptr inbounds [49 x %struct.FT_Vector_], [49 x %struct.FT_Vector_]* %5, i64 0, i64 %84, i32 0
  %86 = load i64, i64* %85, align 16
  %87 = add nsw i64 %83, %86
  %88 = icmp slt i64 %87, 0
  %89 = sub nsw i64 0, %87
  %90 = select i1 %88, i64 %89, i64 %87
  %91 = icmp sgt i64 %90, 128
  br i1 %91, label %92, label %99

92:                                               ; preds = %74
  %93 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 3, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds [49 x %struct.FT_Vector_], [49 x %struct.FT_Vector_]* %5, i64 0, i64 %75, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 1, i32 1
  %98 = load i64, i64* %97, align 8
  br label %140

99:                                               ; preds = %74
  %100 = getelementptr inbounds [49 x %struct.FT_Vector_], [49 x %struct.FT_Vector_]* %5, i64 0, i64 %75, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = shl i64 %101, 1
  %103 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 1, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = mul i64 %104, -3
  %106 = add i64 %105, %102
  %107 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 3, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = add nsw i64 %106, %108
  %110 = icmp slt i64 %109, 0
  %111 = sub nsw i64 0, %109
  %112 = select i1 %110, i64 %111, i64 %109
  %113 = icmp sgt i64 %112, 128
  br i1 %113, label %140, label %114

114:                                              ; preds = %99
  %115 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 2, i32 0
  %116 = load i64, i64* %115, align 16
  %117 = mul i64 %116, -3
  %118 = shl i64 %86, 1
  %119 = add i64 %118, %78
  %120 = add i64 %119, %117
  %121 = icmp slt i64 %120, 0
  %122 = sub nsw i64 0, %120
  %123 = select i1 %121, i64 %122, i64 %120
  %124 = icmp sgt i64 %123, 128
  br i1 %124, label %140, label %125

125:                                              ; preds = %114
  %126 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 2, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = mul i64 %127, -3
  %129 = shl i64 %108, 1
  %130 = add i64 %129, %101
  %131 = add i64 %130, %128
  %132 = icmp slt i64 %131, 0
  %133 = sub nsw i64 0, %131
  %134 = select i1 %132, i64 %133, i64 %131
  %135 = icmp sgt i64 %134, 128
  br i1 %135, label %140, label %136

136:                                              ; preds = %125
  tail call fastcc void @gray_render_line(%struct.gray_TWorker_* %3, i64 %78, i64 %101) #7
  %137 = icmp eq i64 %75, 0
  br i1 %137, label %181, label %138

138:                                              ; preds = %136
  %139 = add nsw i64 %75, -3
  br label %179

140:                                              ; preds = %125, %114, %99, %92
  %141 = phi i64 [ %98, %92 ], [ %104, %99 ], [ %104, %114 ], [ %104, %125 ]
  %142 = phi i64 [ %96, %92 ], [ %101, %99 ], [ %101, %114 ], [ %101, %125 ]
  %143 = phi i64 [ %94, %92 ], [ %108, %99 ], [ %108, %114 ], [ %108, %125 ]
  %144 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 3, i32 0
  %145 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 6, i32 0
  store i64 %86, i64* %145, align 16
  %146 = add nsw i64 %81, %78
  %147 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 2, i32 0
  %148 = load i64, i64* %147, align 16
  %149 = add nsw i64 %148, %81
  %150 = add nsw i64 %148, %86
  %151 = ashr i64 %150, 1
  %152 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 5, i32 0
  store i64 %151, i64* %152, align 16
  %153 = add nsw i64 %150, %149
  %154 = ashr i64 %153, 2
  %155 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 4, i32 0
  store i64 %154, i64* %155, align 16
  %156 = ashr i64 %146, 1
  store i64 %156, i64* %80, align 16
  %157 = add nsw i64 %149, %146
  %158 = ashr i64 %157, 2
  store i64 %158, i64* %147, align 16
  %159 = add nsw i64 %157, %153
  %160 = ashr i64 %159, 3
  store i64 %160, i64* %144, align 16
  %161 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 3, i32 1
  %162 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 6, i32 1
  store i64 %143, i64* %162, align 8
  %163 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 1, i32 1
  %164 = add nsw i64 %142, %141
  %165 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 2, i32 1
  %166 = load i64, i64* %165, align 8
  %167 = add nsw i64 %166, %141
  %168 = add nsw i64 %166, %143
  %169 = ashr i64 %168, 1
  %170 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 5, i32 1
  store i64 %169, i64* %170, align 8
  %171 = add nsw i64 %168, %167
  %172 = ashr i64 %171, 2
  %173 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 4, i32 1
  store i64 %172, i64* %173, align 8
  %174 = ashr i64 %164, 1
  store i64 %174, i64* %163, align 8
  %175 = add nsw i64 %167, %164
  %176 = ashr i64 %175, 2
  store i64 %176, i64* %165, align 8
  %177 = add nsw i64 %175, %171
  %178 = ashr i64 %177, 3
  store i64 %178, i64* %161, align 8
  br label %179

179:                                              ; preds = %140, %138
  %180 = phi i64 [ %84, %140 ], [ %139, %138 ]
  br label %74

181:                                              ; preds = %136, %73
  call void @llvm.lifetime.end.p0i8(i64 784, i8* nonnull %6) #7
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @gray_set_cell(%struct.gray_TWorker_*, i32, i32) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, %2
  br i1 %6, label %7, label %69

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, %2
  br i1 %10, label %69, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, %1
  br i1 %14, label %15, label %69

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 6
  %17 = load %struct.TCell_**, %struct.TCell_*** %16, align 8
  %18 = sext i32 %2 to i64
  %19 = getelementptr inbounds %struct.TCell_*, %struct.TCell_** %17, i64 %18
  %20 = sext i32 %9 to i64
  %21 = sub nsw i64 0, %20
  %22 = getelementptr inbounds %struct.TCell_*, %struct.TCell_** %19, i64 %21
  %23 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, %1
  %26 = add nsw i32 %24, -1
  %27 = select i1 %25, i32 %26, i32 %1
  %28 = load %struct.TCell_*, %struct.TCell_** %22, align 8
  %29 = icmp eq %struct.TCell_* %28, null
  br i1 %29, label %48, label %30

30:                                               ; preds = %15
  %31 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %28, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %32, %27
  br i1 %33, label %48, label %38

34:                                               ; preds = %42
  %35 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %44, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp sgt i32 %36, %27
  br i1 %37, label %46, label %38

38:                                               ; preds = %30, %34
  %39 = phi i32 [ %36, %34 ], [ %32, %30 ]
  %40 = phi %struct.TCell_* [ %44, %34 ], [ %28, %30 ]
  %41 = icmp eq i32 %39, %27
  br i1 %41, label %69, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %40, i64 0, i32 3
  %44 = load %struct.TCell_*, %struct.TCell_** %43, align 8
  %45 = icmp eq %struct.TCell_* %44, null
  br i1 %45, label %46, label %34

46:                                               ; preds = %34, %42
  %47 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %40, i64 0, i32 3
  br label %48

48:                                               ; preds = %46, %30, %15
  %49 = phi %struct.TCell_** [ %22, %15 ], [ %22, %30 ], [ %47, %46 ]
  %50 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 9
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 8
  %53 = load i64, i64* %52, align 8
  %54 = icmp slt i64 %51, %53
  br i1 %54, label %57, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 0, i64 0
  tail call void @longjmp(%struct.__jmp_buf_tag* %56, i32 1) #9
  unreachable

57:                                               ; preds = %48
  %58 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 7
  %59 = load %struct.TCell_*, %struct.TCell_** %58, align 8
  %60 = add nsw i64 %51, 1
  store i64 %60, i64* %50, align 8
  %61 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %59, i64 %51
  %62 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %61, i64 0, i32 0
  store i32 %27, i32* %62, align 8
  %63 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %59, i64 %51, i32 2
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %59, i64 %51, i32 1
  store i32 0, i32* %64, align 4
  %65 = bitcast %struct.TCell_** %49 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %59, i64 %51, i32 3
  %68 = bitcast %struct.TCell_** %67 to i64*
  store i64 %66, i64* %68, align 8
  store %struct.TCell_* %61, %struct.TCell_** %49, align 8
  br label %69

69:                                               ; preds = %38, %57, %7, %3, %11
  %70 = phi %struct.TCell_* [ null, %11 ], [ null, %3 ], [ null, %7 ], [ %61, %57 ], [ %40, %38 ]
  %71 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 5
  store %struct.TCell_* %70, %struct.TCell_** %71, align 8
  ret void
}

; Function Attrs: noreturn nounwind
declare void @longjmp(%struct.__jmp_buf_tag*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @gray_render_line(%struct.gray_TWorker_*, i64, i64) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 11
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 8
  %7 = trunc i64 %6 to i32
  %8 = lshr i64 %2, 8
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, %7
  %13 = icmp sgt i32 %11, %9
  %14 = or i1 %13, %12
  br i1 %14, label %15, label %255

15:                                               ; preds = %3
  %16 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = icmp sgt i32 %17, %7
  %19 = icmp sgt i32 %17, %9
  %20 = and i1 %18, %19
  br i1 %20, label %255, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 10
  %23 = load i64, i64* %22, align 8
  %24 = lshr i64 %23, 8
  %25 = trunc i64 %24 to i32
  %26 = lshr i64 %1, 8
  %27 = trunc i64 %26 to i32
  %28 = trunc i64 %23 to i32
  %29 = and i32 %28, 255
  %30 = trunc i64 %5 to i32
  %31 = and i32 %30, 255
  %32 = sub nsw i64 %1, %23
  %33 = sub nsw i64 %2, %5
  %34 = icmp eq i32 %25, %27
  %35 = icmp eq i32 %7, %9
  %36 = and i1 %35, %34
  br i1 %36, label %234, label %37

37:                                               ; preds = %21
  %38 = icmp eq i64 %33, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call fastcc void @gray_set_cell(%struct.gray_TWorker_* %0, i32 %27, i32 %9)
  br label %255

40:                                               ; preds = %37
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %111

42:                                               ; preds = %40
  %43 = icmp sgt i64 %33, 0
  %44 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 5
  %45 = shl nuw nsw i32 %29, 1
  br i1 %43, label %63, label %46

46:                                               ; preds = %42
  %47 = load %struct.TCell_*, %struct.TCell_** %44, align 8
  %48 = icmp eq %struct.TCell_* %47, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %47, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sub i32 %51, %31
  store i32 %52, i32* %50, align 4
  %53 = mul nuw nsw i32 %45, %31
  %54 = load %struct.TCell_*, %struct.TCell_** %44, align 8
  %55 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %54, i64 0, i32 2
  %56 = load i32, i32* %55, align 8
  %57 = sub i32 %56, %53
  store i32 %57, i32* %55, align 8
  br label %58

58:                                               ; preds = %49, %46
  %59 = add nsw i32 %7, -1
  tail call fastcc void @gray_set_cell(%struct.gray_TWorker_* %0, i32 %25, i32 %59)
  %60 = icmp eq i32 %59, %9
  br i1 %60, label %234, label %61

61:                                               ; preds = %58
  %62 = shl nuw nsw i32 %29, 9
  br label %96

63:                                               ; preds = %42
  %64 = sub nuw nsw i32 256, %31
  %65 = load %struct.TCell_*, %struct.TCell_** %44, align 8
  %66 = icmp eq %struct.TCell_* %65, null
  br i1 %66, label %76, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %65, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = add nsw i32 %69, %64
  store i32 %70, i32* %68, align 4
  %71 = mul nuw nsw i32 %45, %64
  %72 = load %struct.TCell_*, %struct.TCell_** %44, align 8
  %73 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %72, i64 0, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = add nsw i32 %74, %71
  store i32 %75, i32* %73, align 8
  br label %76

76:                                               ; preds = %67, %63
  %77 = add nsw i32 %7, 1
  tail call fastcc void @gray_set_cell(%struct.gray_TWorker_* %0, i32 %25, i32 %77)
  %78 = icmp eq i32 %77, %9
  br i1 %78, label %234, label %79

79:                                               ; preds = %76
  %80 = shl nuw nsw i32 %29, 9
  br label %81

81:                                               ; preds = %93, %79
  %82 = phi i32 [ %94, %93 ], [ %77, %79 ]
  %83 = load %struct.TCell_*, %struct.TCell_** %44, align 8
  %84 = icmp eq %struct.TCell_* %83, null
  br i1 %84, label %93, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %83, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = add nsw i32 %87, 256
  store i32 %88, i32* %86, align 4
  %89 = load %struct.TCell_*, %struct.TCell_** %44, align 8
  %90 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %89, i64 0, i32 2
  %91 = load i32, i32* %90, align 8
  %92 = add nsw i32 %91, %80
  store i32 %92, i32* %90, align 8
  br label %93

93:                                               ; preds = %81, %85
  %94 = add nsw i32 %82, 1
  tail call fastcc void @gray_set_cell(%struct.gray_TWorker_* %0, i32 %25, i32 %94)
  %95 = icmp eq i32 %94, %9
  br i1 %95, label %234, label %81, !llvm.loop !8

96:                                               ; preds = %108, %61
  %97 = phi i32 [ %109, %108 ], [ %59, %61 ]
  %98 = load %struct.TCell_*, %struct.TCell_** %44, align 8
  %99 = icmp eq %struct.TCell_* %98, null
  br i1 %99, label %108, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %98, i64 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = add i32 %102, -256
  store i32 %103, i32* %101, align 4
  %104 = load %struct.TCell_*, %struct.TCell_** %44, align 8
  %105 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %104, i64 0, i32 2
  %106 = load i32, i32* %105, align 8
  %107 = sub i32 %106, %62
  store i32 %107, i32* %105, align 8
  br label %108

108:                                              ; preds = %96, %100
  %109 = add nsw i32 %97, -1
  tail call fastcc void @gray_set_cell(%struct.gray_TWorker_* %0, i32 %25, i32 %109)
  %110 = icmp eq i32 %109, %9
  br i1 %110, label %234, label %96, !llvm.loop !9

111:                                              ; preds = %40
  %112 = zext i32 %31 to i64
  %113 = mul nsw i64 %32, %112
  %114 = zext i32 %29 to i64
  %115 = mul nsw i64 %33, %114
  %116 = sub nsw i64 %113, %115
  br i1 %34, label %119, label %117

117:                                              ; preds = %111
  %118 = sdiv i64 72057594037927935, %32
  br label %119

119:                                              ; preds = %111, %117
  %120 = phi i64 [ %118, %117 ], [ 0, %111 ]
  br i1 %35, label %124, label %121

121:                                              ; preds = %119
  %122 = sdiv i64 72057594037927935, %33
  %123 = sub nsw i64 0, %122
  br label %124

124:                                              ; preds = %119, %121
  %125 = phi i64 [ %123, %121 ], [ 0, %119 ]
  %126 = shl nsw i64 %32, 8
  %127 = shl nsw i64 %33, 8
  %128 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 5
  br label %129

129:                                              ; preds = %225, %124
  %130 = phi i32 [ %29, %124 ], [ %226, %225 ]
  %131 = phi i32 [ %31, %124 ], [ %227, %225 ]
  %132 = phi i32 [ %25, %124 ], [ %228, %225 ]
  %133 = phi i32 [ %7, %124 ], [ %229, %225 ]
  %134 = phi i64 [ %116, %124 ], [ %230, %225 ]
  %135 = sub nsw i64 %134, %126
  %136 = icmp sgt i64 %135, 0
  %137 = icmp slt i64 %134, 1
  %138 = and i1 %137, %136
  br i1 %138, label %139, label %158

139:                                              ; preds = %129
  %140 = mul i64 %134, %120
  %141 = lshr i64 %140, 56
  %142 = trunc i64 %141 to i32
  %143 = sub nsw i64 %134, %127
  %144 = load %struct.TCell_*, %struct.TCell_** %128, align 8
  %145 = icmp eq %struct.TCell_* %144, null
  br i1 %145, label %156, label %146

146:                                              ; preds = %139
  %147 = sub nsw i32 %142, %131
  %148 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %144, i64 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = add nsw i32 %149, %147
  store i32 %150, i32* %148, align 4
  %151 = mul nsw i32 %147, %130
  %152 = load %struct.TCell_*, %struct.TCell_** %128, align 8
  %153 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %152, i64 0, i32 2
  %154 = load i32, i32* %153, align 8
  %155 = add nsw i32 %154, %151
  store i32 %155, i32* %153, align 8
  br label %156

156:                                              ; preds = %139, %146
  %157 = add nsw i32 %132, -1
  br label %225

158:                                              ; preds = %129
  %159 = add nsw i64 %135, %127
  %160 = icmp sgt i64 %159, 0
  %161 = icmp slt i64 %135, 1
  %162 = and i1 %161, %160
  br i1 %162, label %163, label %182

163:                                              ; preds = %158
  %164 = mul i64 %125, %135
  %165 = lshr i64 %164, 56
  %166 = trunc i64 %165 to i32
  %167 = load %struct.TCell_*, %struct.TCell_** %128, align 8
  %168 = icmp eq %struct.TCell_* %167, null
  br i1 %168, label %180, label %169

169:                                              ; preds = %163
  %170 = sub nuw nsw i32 256, %131
  %171 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %167, i64 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = add nsw i32 %172, %170
  store i32 %173, i32* %171, align 4
  %174 = add nuw nsw i32 %130, %166
  %175 = mul nsw i32 %174, %170
  %176 = load %struct.TCell_*, %struct.TCell_** %128, align 8
  %177 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %176, i64 0, i32 2
  %178 = load i32, i32* %177, align 8
  %179 = add nsw i32 %178, %175
  store i32 %179, i32* %177, align 8
  br label %180

180:                                              ; preds = %163, %169
  %181 = add nsw i32 %133, 1
  br label %225

182:                                              ; preds = %158
  %183 = add nsw i64 %134, %127
  %184 = icmp sgt i64 %183, -1
  %185 = icmp slt i64 %159, 1
  %186 = and i1 %184, %185
  br i1 %186, label %187, label %206

187:                                              ; preds = %182
  %188 = mul i64 %183, %120
  %189 = lshr i64 %188, 56
  %190 = trunc i64 %189 to i32
  %191 = load %struct.TCell_*, %struct.TCell_** %128, align 8
  %192 = icmp eq %struct.TCell_* %191, null
  br i1 %192, label %204, label %193

193:                                              ; preds = %187
  %194 = sub nsw i32 %190, %131
  %195 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %191, i64 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = add nsw i32 %196, %194
  store i32 %197, i32* %195, align 4
  %198 = add nuw nsw i32 %130, 256
  %199 = mul nsw i32 %194, %198
  %200 = load %struct.TCell_*, %struct.TCell_** %128, align 8
  %201 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %200, i64 0, i32 2
  %202 = load i32, i32* %201, align 8
  %203 = add nsw i32 %202, %199
  store i32 %203, i32* %201, align 8
  br label %204

204:                                              ; preds = %187, %193
  %205 = add nsw i32 %132, 1
  br label %225

206:                                              ; preds = %182
  %207 = mul i64 %125, %134
  %208 = lshr i64 %207, 56
  %209 = trunc i64 %208 to i32
  %210 = add nsw i64 %134, %126
  %211 = load %struct.TCell_*, %struct.TCell_** %128, align 8
  %212 = icmp eq %struct.TCell_* %211, null
  br i1 %212, label %223, label %213

213:                                              ; preds = %206
  %214 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %211, i64 0, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = sub i32 %215, %131
  store i32 %216, i32* %214, align 4
  %217 = add nuw nsw i32 %130, %209
  %218 = mul nsw i32 %217, %131
  %219 = load %struct.TCell_*, %struct.TCell_** %128, align 8
  %220 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %219, i64 0, i32 2
  %221 = load i32, i32* %220, align 8
  %222 = sub i32 %221, %218
  store i32 %222, i32* %220, align 8
  br label %223

223:                                              ; preds = %206, %213
  %224 = add nsw i32 %133, -1
  br label %225

225:                                              ; preds = %180, %223, %204, %156
  %226 = phi i32 [ 256, %156 ], [ %166, %180 ], [ 0, %204 ], [ %209, %223 ]
  %227 = phi i32 [ %142, %156 ], [ 0, %180 ], [ %190, %204 ], [ 256, %223 ]
  %228 = phi i32 [ %157, %156 ], [ %132, %180 ], [ %205, %204 ], [ %132, %223 ]
  %229 = phi i32 [ %133, %156 ], [ %181, %180 ], [ %133, %204 ], [ %224, %223 ]
  %230 = phi i64 [ %143, %156 ], [ %135, %180 ], [ %183, %204 ], [ %210, %223 ]
  tail call fastcc void @gray_set_cell(%struct.gray_TWorker_* %0, i32 %228, i32 %229)
  %231 = icmp eq i32 %228, %27
  %232 = icmp eq i32 %229, %9
  %233 = and i1 %231, %232
  br i1 %233, label %234, label %129

234:                                              ; preds = %225, %58, %108, %76, %93, %21
  %235 = phi i32 [ %29, %21 ], [ %29, %93 ], [ %29, %76 ], [ %29, %108 ], [ %29, %58 ], [ %226, %225 ]
  %236 = phi i32 [ %31, %21 ], [ 0, %93 ], [ 0, %76 ], [ 256, %108 ], [ 256, %58 ], [ %227, %225 ]
  %237 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 5
  %238 = load %struct.TCell_*, %struct.TCell_** %237, align 8
  %239 = icmp eq %struct.TCell_* %238, null
  br i1 %239, label %255, label %240

240:                                              ; preds = %234
  %241 = trunc i64 %2 to i32
  %242 = and i32 %241, 255
  %243 = trunc i64 %1 to i32
  %244 = and i32 %243, 255
  %245 = sub nsw i32 %242, %236
  %246 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %238, i64 0, i32 1
  %247 = load i32, i32* %246, align 4
  %248 = add nsw i32 %247, %245
  store i32 %248, i32* %246, align 4
  %249 = add nsw i32 %235, %244
  %250 = mul nsw i32 %245, %249
  %251 = load %struct.TCell_*, %struct.TCell_** %237, align 8
  %252 = getelementptr inbounds %struct.TCell_, %struct.TCell_* %251, i64 0, i32 2
  %253 = load i32, i32* %252, align 8
  %254 = add nsw i32 %253, %250
  store i32 %254, i32* %252, align 8
  br label %255

255:                                              ; preds = %15, %3, %234, %240, %39
  %256 = getelementptr inbounds %struct.gray_TWorker_, %struct.gray_TWorker_* %0, i64 0, i32 10
  store i64 %1, i64* %256, align 8
  store i64 %2, i64* %4, align 8
  ret void
}

declare hidden void @ft_mem_free(%struct.FT_MemoryRec_*, i8*) local_unnamed_addr #3

declare i32 @FT_Library_SetLcdFilter(%struct.FT_LibraryRec_*, i32) local_unnamed_addr #3

declare hidden zeroext i8 @ft_glyphslot_preset_bitmap(%struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*) local_unnamed_addr #3

declare hidden i8* @ft_mem_realloc(%struct.FT_MemoryRec_*, i64, i64, i64, i8*, i32*) local_unnamed_addr #3

declare void @FT_Outline_Translate(%struct.FT_Outline_*, i64, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @ft_smooth_overlap_spans(i32, i32, %struct.FT_Span_* nocapture readonly, %struct.TOrigin_* nocapture readonly) #6 {
  %5 = getelementptr inbounds %struct.TOrigin_, %struct.TOrigin_* %3, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = sdiv i32 %0, 4
  %8 = getelementptr inbounds %struct.TOrigin_, %struct.TOrigin_* %3, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = mul nsw i32 %9, %7
  %11 = sext i32 %10 to i64
  %12 = sub nsw i64 0, %11
  %13 = getelementptr inbounds i8, i8* %6, i64 %12
  %14 = icmp eq i32 %1, 0
  br i1 %14, label %50, label %15

15:                                               ; preds = %4, %47
  %16 = phi i32 [ %18, %47 ], [ %1, %4 ]
  %17 = phi %struct.FT_Span_* [ %48, %47 ], [ %2, %4 ]
  %18 = add nsw i32 %16, -1
  %19 = getelementptr inbounds %struct.FT_Span_, %struct.FT_Span_* %17, i64 0, i32 2
  %20 = load i8, i8* %19, align 2
  %21 = zext i8 %20 to i32
  %22 = add nuw nsw i32 %21, 8
  %23 = lshr i32 %22, 4
  %24 = getelementptr inbounds %struct.FT_Span_, %struct.FT_Span_* %17, i64 0, i32 1
  %25 = load i16, i16* %24, align 2
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.FT_Span_, %struct.FT_Span_* %17, i64 0, i32 0
  br label %29

29:                                               ; preds = %27, %29
  %30 = phi i32 [ 0, %27 ], [ %43, %29 ]
  %31 = load i16, i16* %28, align 2
  %32 = sext i16 %31 to i32
  %33 = add nsw i32 %30, %32
  %34 = sdiv i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %13, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = add nuw nsw i32 %23, %38
  %40 = lshr i32 %39, 8
  %41 = sub nsw i32 %39, %40
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %36, align 1
  %43 = add nuw nsw i32 %30, 1
  %44 = load i16, i16* %24, align 2
  %45 = zext i16 %44 to i32
  %46 = icmp ult i32 %43, %45
  br i1 %46, label %29, label %47

47:                                               ; preds = %29, %15
  %48 = getelementptr inbounds %struct.FT_Span_, %struct.FT_Span_* %17, i64 1
  %49 = icmp eq i32 %18, 0
  br i1 %49, label %50, label %15

50:                                               ; preds = %47, %4
  ret void
}

declare void @FT_Outline_Transform(%struct.FT_Outline_*, %struct.FT_Matrix_*) local_unnamed_addr #3

declare void @FT_Outline_Get_CBox(%struct.FT_Outline_*, %struct.FT_BBox_*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind returns_twice }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
