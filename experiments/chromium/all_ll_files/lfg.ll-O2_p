; ModuleID = '../../third_party/ffmpeg/libavutil/lfg.c'
source_filename = "../../third_party/ffmpeg/libavutil/lfg.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVLFG = type { [64 x i32], i32 }

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden void @av_lfg_init(%struct.AVLFG* nocapture, i32) local_unnamed_addr #0 {
  %3 = alloca <4 x i32>, align 16
  %4 = bitcast <4 x i32>* %3 to [16 x i8]*
  %5 = bitcast <4 x i32>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 16, i1 false)
  %6 = getelementptr inbounds <4 x i32>, <4 x i32>* %3, i64 0, i64 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 4
  br label %8

8:                                                ; preds = %2, %8
  %9 = phi i64 [ 8, %2 ], [ %15, %8 ]
  %10 = phi i32 [ 8, %2 ], [ %16, %8 ]
  store i32 %1, i32* %6, align 16
  %11 = trunc i32 %10 to i8
  store i8 %11, i8* %7, align 4
  call void @av_md5_sum(i8* nonnull %5, i8* nonnull %5, i32 16) #7
  %12 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i64 0, i32 0, i64 %9
  %13 = load <4 x i32>, <4 x i32>* %3, align 16
  %14 = bitcast i32* %12 to <4 x i32>*
  store <4 x i32> %13, <4 x i32>* %14, align 4
  %15 = add nuw nsw i64 %9, 4
  %16 = add nuw nsw i32 %10, 4
  %17 = icmp ult i64 %15, 64
  br i1 %17, label %8, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @av_md5_sum(i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @av_bmg_get(%struct.AVLFG* nocapture, double* nocapture) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  br label %5

5:                                                ; preds = %5, %2
  %6 = phi i32 [ %41, %5 ], [ %4, %2 ]
  %7 = add i32 %6, 40
  %8 = and i32 %7, 63
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i64 0, i32 0, i64 %9
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %6, 9
  %13 = and i32 %12, 63
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i64 0, i32 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, %11
  %18 = and i32 %6, 63
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i64 0, i32 0, i64 %19
  store i32 %17, i32* %20, align 4
  %21 = load i32, i32* %3, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %3, align 4
  %23 = uitofp i32 %17 to double
  %24 = fmul nsz double %23, 0x3E00000000100000
  %25 = fadd nsz double %24, -1.000000e+00
  %26 = add i32 %21, 41
  %27 = and i32 %26, 63
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i64 0, i32 0, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %21, 10
  %32 = and i32 %31, 63
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i64 0, i32 0, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = add i32 %35, %30
  %37 = and i32 %22, 63
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i64 0, i32 0, i64 %38
  store i32 %36, i32* %39, align 4
  %40 = load i32, i32* %3, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* %3, align 4
  %42 = uitofp i32 %36 to double
  %43 = fmul nsz double %42, 0x3E00000000100000
  %44 = fadd nsz double %43, -1.000000e+00
  %45 = fmul nsz double %25, %25
  %46 = fmul nsz double %44, %44
  %47 = fadd nsz double %45, %46
  %48 = fcmp nsz ult double %47, 1.000000e+00
  br i1 %48, label %49, label %5

49:                                               ; preds = %5
  %50 = tail call nsz double @llvm.log.f64(double %47)
  %51 = fmul nsz double %50, -2.000000e+00
  %52 = fdiv nsz double %51, %47
  %53 = tail call nsz double @llvm.sqrt.f64(double %52)
  %54 = fmul nsz double %25, %53
  store double %54, double* %1, align 8
  %55 = fmul nsz double %44, %53
  %56 = getelementptr inbounds double, double* %1, i64 1
  store double %55, double* %56, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.log.f64(double) #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.sqrt.f64(double) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_lfg_init_from_data(%struct.AVLFG* nocapture, i8*, i32) local_unnamed_addr #5 {
  %4 = icmp ugt i32 %2, 33554431
  br i1 %4, label %23, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i64 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = tail call i32* @av_crc_get_table(i32 3) #7
  br label %8

8:                                                ; preds = %8, %5
  %9 = phi i64 [ 0, %5 ], [ %12, %8 ]
  %10 = phi i32 [ 1, %5 ], [ %20, %8 ]
  %11 = phi i32 [ 0, %5 ], [ %15, %8 ]
  %12 = add nuw nsw i64 %9, 1
  %13 = trunc i64 %12 to i32
  %14 = mul i32 %13, %2
  %15 = lshr i32 %14, 6
  %16 = zext i32 %11 to i64
  %17 = getelementptr inbounds i8, i8* %1, i64 %16
  %18 = sub nsw i32 %15, %11
  %19 = zext i32 %18 to i64
  %20 = tail call i32 @av_crc(i32* %7, i32 %10, i8* %17, i64 %19) #8
  %21 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i64 0, i32 0, i64 %9
  store i32 %20, i32* %21, align 4
  %22 = icmp eq i64 %12, 64
  br i1 %22, label %23, label %8

23:                                               ; preds = %8, %3
  %24 = phi i32 [ -22, %3 ], [ 0, %8 ]
  ret i32 %24
}

declare i32* @av_crc_get_table(i32) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @av_crc(i32*, i32, i8*, i64) local_unnamed_addr #6

attributes #0 = { cold nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
