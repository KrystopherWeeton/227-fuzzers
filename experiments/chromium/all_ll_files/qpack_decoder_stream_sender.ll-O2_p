; ModuleID = '../../net/third_party/quiche/src/quic/core/qpack/qpack_decoder_stream_sender.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/qpack/qpack_decoder_stream_sender.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::QpackDecoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackStreamSenderDelegate" = type { i32 (...)** }
%"class.quic::QpackInstructionEncoder" = type { i8, i64, i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"struct.quic::QpackInstruction" = type { %"struct.quic::QpackInstructionOpcode", %"class.std::__1::vector" }
%"struct.quic::QpackInstructionOpcode" = type { i8, i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"*, %"class.std::__1::__compressed_pair" }
%"struct.quic::QpackInstructionField" = type { i32, i8 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.quic::QpackInstructionField"* }
%"class.std::__1::__wrap_iter" = type { %"struct.quic::QpackInstructionField"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.quic::QpackInstructionWithValues" = type { %"struct.quic::QpackInstruction"*, i8, i64, i64, %"class.absl::string_view", %"class.absl::string_view" }
%"class.absl::string_view" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN4quic24QpackDecoderStreamSenderC1Ev = hidden unnamed_addr alias void (%"class.quic::QpackDecoderStreamSender"*), void (%"class.quic::QpackDecoderStreamSender"*)* @_ZN4quic24QpackDecoderStreamSenderC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24QpackDecoderStreamSenderC2Ev(%"class.quic::QpackDecoderStreamSender"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderStreamSender"* %0, i64 0, i32 0
  store %"class.quic::QpackStreamSenderDelegate"* null, %"class.quic::QpackStreamSenderDelegate"** %2, align 8
  %3 = getelementptr inbounds %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderStreamSender"* %0, i64 0, i32 1
  tail call void @_ZN4quic23QpackInstructionEncoderC1Ev(%"class.quic::QpackInstructionEncoder"* %3) #4
  %4 = getelementptr inbounds %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderStreamSender"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #4
  ret void
}

declare void @_ZN4quic23QpackInstructionEncoderC1Ev(%"class.quic::QpackInstructionEncoder"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24QpackDecoderStreamSender24SendInsertCountIncrementEm(%"class.quic::QpackDecoderStreamSender"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.quic::QpackInstructionWithValues", align 8
  %4 = getelementptr inbounds %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderStreamSender"* %0, i64 0, i32 1
  %5 = bitcast %"class.quic::QpackInstructionWithValues"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  call void @_ZN4quic26QpackInstructionWithValues20InsertCountIncrementEm(%"class.quic::QpackInstructionWithValues"* nonnull sret %3, i64 %1) #4
  %6 = getelementptr inbounds %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderStreamSender"* %0, i64 0, i32 2
  call void @_ZN4quic23QpackInstructionEncoder6EncodeERKNS_26QpackInstructionWithValuesEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.quic::QpackInstructionEncoder"* %4, %"class.quic::QpackInstructionWithValues"* nonnull dereferenceable(64) %3, %"class.std::__1::basic_string"* %6) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret void
}

declare void @_ZN4quic23QpackInstructionEncoder6EncodeERKNS_26QpackInstructionWithValuesEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.quic::QpackInstructionEncoder"*, %"class.quic::QpackInstructionWithValues"* dereferenceable(64), %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4quic26QpackInstructionWithValues20InsertCountIncrementEm(%"class.quic::QpackInstructionWithValues"* sret, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24QpackDecoderStreamSender25SendHeaderAcknowledgementEj(%"class.quic::QpackDecoderStreamSender"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.quic::QpackInstructionWithValues", align 8
  %4 = getelementptr inbounds %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderStreamSender"* %0, i64 0, i32 1
  %5 = bitcast %"class.quic::QpackInstructionWithValues"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = zext i32 %1 to i64
  call void @_ZN4quic26QpackInstructionWithValues21HeaderAcknowledgementEm(%"class.quic::QpackInstructionWithValues"* nonnull sret %3, i64 %6) #4
  %7 = getelementptr inbounds %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderStreamSender"* %0, i64 0, i32 2
  call void @_ZN4quic23QpackInstructionEncoder6EncodeERKNS_26QpackInstructionWithValuesEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.quic::QpackInstructionEncoder"* %4, %"class.quic::QpackInstructionWithValues"* nonnull dereferenceable(64) %3, %"class.std::__1::basic_string"* %7) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret void
}

declare void @_ZN4quic26QpackInstructionWithValues21HeaderAcknowledgementEm(%"class.quic::QpackInstructionWithValues"* sret, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24QpackDecoderStreamSender22SendStreamCancellationEj(%"class.quic::QpackDecoderStreamSender"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.quic::QpackInstructionWithValues", align 8
  %4 = getelementptr inbounds %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderStreamSender"* %0, i64 0, i32 1
  %5 = bitcast %"class.quic::QpackInstructionWithValues"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = zext i32 %1 to i64
  call void @_ZN4quic26QpackInstructionWithValues18StreamCancellationEm(%"class.quic::QpackInstructionWithValues"* nonnull sret %3, i64 %6) #4
  %7 = getelementptr inbounds %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderStreamSender"* %0, i64 0, i32 2
  call void @_ZN4quic23QpackInstructionEncoder6EncodeERKNS_26QpackInstructionWithValuesEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.quic::QpackInstructionEncoder"* %4, %"class.quic::QpackInstructionWithValues"* nonnull dereferenceable(64) %3, %"class.std::__1::basic_string"* %7) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret void
}

declare void @_ZN4quic26QpackInstructionWithValues18StreamCancellationEm(%"class.quic::QpackInstructionWithValues"* sret, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24QpackDecoderStreamSender5FlushEv(%"class.quic::QpackDecoderStreamSender"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderStreamSender"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderStreamSender"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %44, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderStreamSender"* %0, i64 0, i32 0
  %17 = load %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackStreamSenderDelegate"** %16, align 8
  br i1 %6, label %21, label %18

18:                                               ; preds = %15
  %19 = zext i8 %5 to i64
  %20 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  br label %28

21:                                               ; preds = %15
  %22 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderStreamSender"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp sgt i64 %25, -1
  br i1 %26, label %28, label %27, !prof !2

27:                                               ; preds = %21
  tail call void @llvm.trap() #4
  unreachable

28:                                               ; preds = %18, %21
  %29 = phi i64 [ %23, %21 ], [ %20, %18 ]
  %30 = phi i64 [ %25, %21 ], [ %19, %18 ]
  %31 = inttoptr i64 %29 to i8*
  %32 = bitcast %"class.quic::QpackStreamSenderDelegate"* %17 to void (%"class.quic::QpackStreamSenderDelegate"*, i8*, i64)***
  %33 = load void (%"class.quic::QpackStreamSenderDelegate"*, i8*, i64)**, void (%"class.quic::QpackStreamSenderDelegate"*, i8*, i64)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.quic::QpackStreamSenderDelegate"*, i8*, i64)*, void (%"class.quic::QpackStreamSenderDelegate"*, i8*, i64)** %33, i64 2
  %35 = load void (%"class.quic::QpackStreamSenderDelegate"*, i8*, i64)*, void (%"class.quic::QpackStreamSenderDelegate"*, i8*, i64)** %34, align 8
  tail call void %35(%"class.quic::QpackStreamSenderDelegate"* %17, i8* %31, i64 %30) #4
  %36 = load i8, i8* %4, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderStreamSender"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %41, align 8
  br label %44

42:                                               ; preds = %28
  %43 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  store i8 0, i8* %43, align 1
  store i8 0, i8* %4, align 1
  br label %44

44:                                               ; preds = %42, %38, %12
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
