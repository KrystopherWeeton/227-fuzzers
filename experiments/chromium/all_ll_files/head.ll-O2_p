; ModuleID = '../../third_party/ots/src/src/head.cc'
source_filename = "../../third_party/ots/src/src/head.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.ots::OpenTypeHEAD" = type <{ %"class.ots::Table.base", [3 x i8], i32, i16, i16, [4 x i8], i64, i64, i16, i16, i16, i16, i16, i16, i16, [2 x i8] }>
%"class.ots::Table.base" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8 }>
%"struct.ots::Font" = type { %"struct.ots::FontFile"*, i32, i16, i16, i16, i16, %"class.std::__1::map.15" }
%"struct.ots::FontFile" = type { %"class.ots::OTSContext"*, %"class.std::__1::map", %"class.std::__1::map.4" }
%"class.ots::OTSContext" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.ots::Table" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8, [7 x i8] }>
%"class.ots::OTSStream" = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZN3ots5TableD2Ev = comdat any

$_ZN3ots12OpenTypeHEADD0Ev = comdat any

@.str = private unnamed_addr constant [28 x i8] c"Failed to read table header\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"Unsupported majorVersion: %d\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"Failed to read checksum\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"Failed to read or incorrect magicNumber\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"Failed to read flags\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"Failed to read unitsPerEm\00", align 1
@.str.6 = private unnamed_addr constant [43 x i8] c"unitsPerEm on in the range [16, 16384]: %d\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"Can't read font dates\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"Failed to read font bounding box\00", align 1
@.str.9 = private unnamed_addr constant [50 x i8] c"Bad x dimension in the font bounding box (%d, %d)\00", align 1
@.str.10 = private unnamed_addr constant [50 x i8] c"Bad y dimension in the font bounding box (%d, %d)\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"Failed to read macStyle\00", align 1
@.str.12 = private unnamed_addr constant [29 x i8] c"Failed to read lowestRecPPEM\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"Failed to read fontDirectionHint\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"Failed to read indexToLocFormat\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"Bad indexToLocFormat %d\00", align 1
@.str.16 = private unnamed_addr constant [38 x i8] c"Failed to read or bad glyphDataFormat\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"Failed to write table\00", align 1
@_ZTVN3ots12OpenTypeHEADE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ots::Table"*)* @_ZN3ots5TableD2Ev to i8*), i8* bitcast (void (%"class.ots::OpenTypeHEAD"*)* @_ZN3ots12OpenTypeHEADD0Ev to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeHEAD"*, i8*, i64)* @_ZN3ots12OpenTypeHEAD5ParseEPKhm to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeHEAD"*, %"class.ots::OTSStream"*)* @_ZN3ots12OpenTypeHEAD9SerializeEPNS_9OTSStreamE to i8*), i8* bitcast (i1 (%"class.ots::Table"*)* @_ZN3ots5Table15ShouldSerializeEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeHEAD5ParseEPKhm(%"class.ots::OpenTypeHEAD"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = icmp ult i64 %2, 8
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %7 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #6
  br label %183

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 2
  %10 = bitcast i8* %1 to i32*
  %11 = load i32, i32* %10, align 1
  %12 = tail call i32 @llvm.bswap.i32(i32 %11) #6
  %13 = getelementptr inbounds i8, i8* %1, i64 4
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 1
  %16 = tail call i32 @llvm.bswap.i32(i32 %15) #6
  store i32 %16, i32* %9, align 4
  %17 = lshr i32 %12, 16
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %8
  %20 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %21 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %20, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 %17) #6
  br label %183

22:                                               ; preds = %8
  %23 = icmp ult i64 %2, 12
  %24 = add i64 %2, -4
  %25 = icmp ult i64 %24, 8
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %29 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %28, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #6
  br label %183

30:                                               ; preds = %22
  %31 = icmp ult i64 %2, 16
  br i1 %31, label %37, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds i8, i8* %1, i64 12
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 1
  %36 = icmp eq i32 %35, -180613281
  br i1 %36, label %40, label %37

37:                                               ; preds = %32, %30
  %38 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %39 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %38, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0)) #6
  br label %183

40:                                               ; preds = %32
  %41 = icmp ult i64 %2, 18
  br i1 %41, label %42, label %45

42:                                               ; preds = %40
  %43 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %44 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %43, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)) #6
  br label %183

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 3
  %47 = getelementptr inbounds i8, i8* %1, i64 16
  %48 = bitcast i8* %47 to i16*
  %49 = load i16, i16* %48, align 1
  %50 = and i16 %49, 7992
  %51 = tail call i16 @llvm.bswap.i16(i16 %50)
  store i16 %51, i16* %46, align 8
  %52 = icmp ult i64 %2, 20
  br i1 %52, label %53, label %56

53:                                               ; preds = %45
  %54 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %55 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %54, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0)) #6
  br label %183

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 4
  %58 = getelementptr inbounds i8, i8* %1, i64 18
  %59 = bitcast i8* %58 to i16*
  %60 = load i16, i16* %59, align 1
  %61 = tail call i16 @llvm.bswap.i16(i16 %60) #6
  store i16 %61, i16* %57, align 2
  %62 = add i16 %61, -16
  %63 = icmp ugt i16 %62, 16368
  br i1 %63, label %64, label %68

64:                                               ; preds = %56
  %65 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %66 = zext i16 %61 to i32
  %67 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %65, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i64 0, i64 0), i32 %66) #6
  br label %183

68:                                               ; preds = %56
  %69 = icmp ult i64 %2, 28
  br i1 %69, label %76, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 6
  %72 = getelementptr inbounds i8, i8* %1, i64 20
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  store i64 %74, i64* %71, align 8
  %75 = icmp ult i64 %2, 36
  br i1 %75, label %76, label %79

76:                                               ; preds = %70, %68
  %77 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %78 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %77, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0)) #6
  br label %183

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 7
  %81 = getelementptr inbounds i8, i8* %1, i64 28
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 1
  store i64 %83, i64* %80, align 8
  %84 = icmp ult i64 %2, 38
  br i1 %84, label %106, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 8
  %87 = getelementptr inbounds i8, i8* %1, i64 36
  %88 = bitcast i8* %87 to i16*
  %89 = load i16, i16* %88, align 1
  %90 = tail call i16 @llvm.bswap.i16(i16 %89) #6
  store i16 %90, i16* %86, align 2
  %91 = icmp ult i64 %2, 40
  br i1 %91, label %106, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 10
  %94 = getelementptr inbounds i8, i8* %1, i64 38
  %95 = bitcast i8* %94 to i16*
  %96 = load i16, i16* %95, align 1
  %97 = tail call i16 @llvm.bswap.i16(i16 %96) #6
  store i16 %97, i16* %93, align 2
  %98 = icmp ult i64 %2, 42
  br i1 %98, label %106, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 9
  %101 = getelementptr inbounds i8, i8* %1, i64 40
  %102 = bitcast i8* %101 to i16*
  %103 = load i16, i16* %102, align 1
  %104 = tail call i16 @llvm.bswap.i16(i16 %103) #6
  store i16 %104, i16* %100, align 2
  %105 = icmp ult i64 %2, 44
  br i1 %105, label %106, label %109

106:                                              ; preds = %99, %92, %85, %79
  %107 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %108 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %107, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0)) #6
  br label %183

109:                                              ; preds = %99
  %110 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 11
  %111 = getelementptr inbounds i8, i8* %1, i64 42
  %112 = bitcast i8* %111 to i16*
  %113 = load i16, i16* %112, align 1
  %114 = tail call i16 @llvm.bswap.i16(i16 %113) #6
  store i16 %114, i16* %110, align 2
  %115 = icmp sgt i16 %90, %104
  br i1 %115, label %116, label %121

116:                                              ; preds = %109
  %117 = sext i16 %90 to i32
  %118 = sext i16 %104 to i32
  %119 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %120 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %119, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.9, i64 0, i64 0), i32 %117, i32 %118) #6
  br label %183

121:                                              ; preds = %109
  %122 = icmp sgt i16 %97, %114
  br i1 %122, label %123, label %128

123:                                              ; preds = %121
  %124 = sext i16 %97 to i32
  %125 = sext i16 %114 to i32
  %126 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %127 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %126, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.10, i64 0, i64 0), i32 %124, i32 %125) #6
  br label %183

128:                                              ; preds = %121
  %129 = icmp ult i64 %2, 46
  br i1 %129, label %130, label %133

130:                                              ; preds = %128
  %131 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %132 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %131, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #6
  br label %183

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 12
  %135 = getelementptr inbounds i8, i8* %1, i64 44
  %136 = bitcast i8* %135 to i16*
  %137 = load i16, i16* %136, align 1
  %138 = lshr i16 %137, 8
  %139 = and i16 %138, 127
  store i16 %139, i16* %134, align 8
  %140 = icmp ult i64 %2, 48
  br i1 %140, label %141, label %144

141:                                              ; preds = %133
  %142 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %143 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %142, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0)) #6
  br label %183

144:                                              ; preds = %133
  %145 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 13
  %146 = getelementptr inbounds i8, i8* %1, i64 46
  %147 = bitcast i8* %146 to i16*
  %148 = load i16, i16* %147, align 1
  %149 = tail call i16 @llvm.bswap.i16(i16 %148) #6
  store i16 %149, i16* %145, align 2
  %150 = icmp ult i64 %2, 50
  %151 = add i64 %2, -2
  %152 = icmp ult i64 %151, 48
  %153 = or i1 %150, %152
  br i1 %153, label %154, label %157

154:                                              ; preds = %144
  %155 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %156 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %155, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #6
  br label %183

157:                                              ; preds = %144
  %158 = icmp ult i64 %2, 52
  br i1 %158, label %159, label %162

159:                                              ; preds = %157
  %160 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %161 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %160, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i64 0, i64 0)) #6
  br label %183

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 14
  %164 = getelementptr inbounds i8, i8* %1, i64 50
  %165 = bitcast i8* %164 to i16*
  %166 = load i16, i16* %165, align 1
  %167 = tail call i16 @llvm.bswap.i16(i16 %166) #6
  store i16 %167, i16* %163, align 2
  %168 = icmp ugt i16 %167, 1
  br i1 %168, label %169, label %173

169:                                              ; preds = %162
  %170 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %171 = sext i16 %167 to i32
  %172 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %170, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i32 %171) #6
  br label %183

173:                                              ; preds = %162
  %174 = icmp ult i64 %2, 54
  br i1 %174, label %180, label %175

175:                                              ; preds = %173
  %176 = getelementptr inbounds i8, i8* %1, i64 52
  %177 = bitcast i8* %176 to i16*
  %178 = load i16, i16* %177, align 1
  %179 = icmp eq i16 %178, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %175, %173
  %181 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %182 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %181, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i64 0, i64 0)) #6
  br label %183

183:                                              ; preds = %175, %37, %42, %53, %64, %76, %106, %116, %123, %130, %141, %154, %159, %169, %180, %27, %19, %5
  %184 = phi i1 [ %21, %19 ], [ %29, %27 ], [ %7, %5 ], [ %39, %37 ], [ %67, %64 ], [ %120, %116 ], [ %127, %123 ], [ %172, %169 ], [ %161, %159 ], [ %156, %154 ], [ %143, %141 ], [ %132, %130 ], [ %108, %106 ], [ %78, %76 ], [ %55, %53 ], [ %44, %42 ], [ %182, %180 ], [ true, %175 ]
  ret i1 %184
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeHEAD9SerializeEPNS_9OTSStreamE(%"class.ots::OpenTypeHEAD"*, %"class.ots::OTSStream"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i16, align 2
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i16, align 2
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i16, align 2
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i16, align 2
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i64, align 8
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i64, align 8
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i16, align 2
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i16, align 2
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = bitcast i32* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54)
  store i32 256, i32* %53, align 4
  %55 = bitcast %"class.ots::OTSStream"* %1 to i64 (%"class.ots::OTSStream"*)***
  %56 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %57 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %56, i64 4
  %58 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %57, align 8
  %59 = tail call i64 %58(%"class.ots::OTSStream"* %1) #6
  %60 = and i64 %59, 3
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %2
  %63 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %64 = load i32, i32* %63, align 8
  br label %77

65:                                               ; preds = %2
  %66 = sub nuw nsw i64 4, %60
  %67 = icmp ult i64 %66, 4
  %68 = select i1 %67, i64 %66, i64 4
  %69 = bitcast i32* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #6
  store i32 0, i32* %51, align 4
  %70 = getelementptr inbounds i8, i8* %69, i64 %60
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* nonnull align 4 %54, i64 %68, i1 false) #6
  %71 = load i32, i32* %51, align 4
  %72 = tail call i32 @llvm.bswap.i32(i32 %71) #6
  %73 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = add i32 %74, %72
  store i32 %75, i32* %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #6
  %76 = icmp eq i64 %68, 0
  br i1 %76, label %77, label %86

77:                                               ; preds = %65, %62
  %78 = phi i32 [ %75, %65 ], [ %64, %62 ]
  %79 = phi i64 [ %66, %65 ], [ 0, %62 ]
  %80 = getelementptr inbounds i8, i8* %54, i64 %79
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 1
  %83 = tail call i32 @llvm.bswap.i32(i32 %82) #6
  %84 = add i32 %83, %78
  %85 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %84, i32* %85, align 8
  br label %93

86:                                               ; preds = %65
  %87 = sub nuw nsw i64 4, %68
  %88 = bitcast i32* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %88)
  store i32 0, i32* %52, align 4
  %89 = getelementptr inbounds i8, i8* %54, i64 %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %88, i8* align 1 %89, i64 %87, i1 false) #6
  %90 = load i32, i32* %52, align 4
  %91 = tail call i32 @llvm.bswap.i32(i32 %90) #6
  %92 = add i32 %91, %75
  store i32 %92, i32* %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %88)
  br label %93

93:                                               ; preds = %77, %86
  %94 = bitcast %"class.ots::OTSStream"* %1 to i1 (%"class.ots::OTSStream"*, i8*, i64)***
  %95 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %96 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %95, i64 2
  %97 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %96, align 8
  %98 = call zeroext i1 %97(%"class.ots::OTSStream"* %1, i8* nonnull %54, i64 4) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54)
  br i1 %98, label %99, label %757

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = bitcast i32* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %102)
  %103 = call i32 @llvm.bswap.i32(i32 %101) #6
  store i32 %103, i32* %50, align 4
  %104 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %105 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %104, i64 4
  %106 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %105, align 8
  %107 = call i64 %106(%"class.ots::OTSStream"* %1) #6
  %108 = and i64 %107, 3
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %99
  %111 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %112 = load i32, i32* %111, align 8
  br label %125

113:                                              ; preds = %99
  %114 = sub nuw nsw i64 4, %108
  %115 = icmp ult i64 %114, 4
  %116 = select i1 %115, i64 %114, i64 4
  %117 = bitcast i32* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117) #6
  store i32 0, i32* %48, align 4
  %118 = getelementptr inbounds i8, i8* %117, i64 %108
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %118, i8* nonnull align 4 %102, i64 %116, i1 false) #6
  %119 = load i32, i32* %48, align 4
  %120 = call i32 @llvm.bswap.i32(i32 %119) #6
  %121 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = add i32 %122, %120
  store i32 %123, i32* %121, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117) #6
  %124 = icmp eq i64 %116, 0
  br i1 %124, label %125, label %134

125:                                              ; preds = %113, %110
  %126 = phi i32 [ %123, %113 ], [ %112, %110 ]
  %127 = phi i64 [ %114, %113 ], [ 0, %110 ]
  %128 = getelementptr inbounds i8, i8* %102, i64 %127
  %129 = bitcast i8* %128 to i32*
  %130 = load i32, i32* %129, align 1
  %131 = call i32 @llvm.bswap.i32(i32 %130) #6
  %132 = add i32 %131, %126
  %133 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %132, i32* %133, align 8
  br label %141

134:                                              ; preds = %113
  %135 = sub nuw nsw i64 4, %116
  %136 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %136)
  store i32 0, i32* %49, align 4
  %137 = getelementptr inbounds i8, i8* %102, i64 %114
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %136, i8* align 1 %137, i64 %135, i1 false) #6
  %138 = load i32, i32* %49, align 4
  %139 = call i32 @llvm.bswap.i32(i32 %138) #6
  %140 = add i32 %139, %123
  store i32 %140, i32* %121, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %136)
  br label %141

141:                                              ; preds = %125, %134
  %142 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %143 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %142, i64 2
  %144 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %143, align 8
  %145 = call zeroext i1 %144(%"class.ots::OTSStream"* %1, i8* nonnull %102, i64 4) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102)
  br i1 %145, label %146, label %757

146:                                              ; preds = %141
  %147 = bitcast i32* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %147)
  store i32 0, i32* %47, align 4
  %148 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %149 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %148, i64 4
  %150 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %149, align 8
  %151 = call i64 %150(%"class.ots::OTSStream"* %1) #6
  %152 = and i64 %151, 3
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %146
  %155 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %156 = load i32, i32* %155, align 8
  br label %169

157:                                              ; preds = %146
  %158 = sub nuw nsw i64 4, %152
  %159 = icmp ult i64 %158, 4
  %160 = select i1 %159, i64 %158, i64 4
  %161 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161) #6
  store i32 0, i32* %45, align 4
  %162 = getelementptr inbounds i8, i8* %161, i64 %152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %162, i8* nonnull align 4 %147, i64 %160, i1 false) #6
  %163 = load i32, i32* %45, align 4
  %164 = call i32 @llvm.bswap.i32(i32 %163) #6
  %165 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = add i32 %166, %164
  store i32 %167, i32* %165, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161) #6
  %168 = icmp eq i64 %160, 0
  br i1 %168, label %169, label %178

169:                                              ; preds = %157, %154
  %170 = phi i32 [ %167, %157 ], [ %156, %154 ]
  %171 = phi i64 [ %158, %157 ], [ 0, %154 ]
  %172 = getelementptr inbounds i8, i8* %147, i64 %171
  %173 = bitcast i8* %172 to i32*
  %174 = load i32, i32* %173, align 1
  %175 = call i32 @llvm.bswap.i32(i32 %174) #6
  %176 = add i32 %175, %170
  %177 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %176, i32* %177, align 8
  br label %185

178:                                              ; preds = %157
  %179 = sub nuw nsw i64 4, %160
  %180 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %180)
  store i32 0, i32* %46, align 4
  %181 = getelementptr inbounds i8, i8* %147, i64 %158
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %180, i8* align 1 %181, i64 %179, i1 false) #6
  %182 = load i32, i32* %46, align 4
  %183 = call i32 @llvm.bswap.i32(i32 %182) #6
  %184 = add i32 %183, %167
  store i32 %184, i32* %165, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %180)
  br label %185

185:                                              ; preds = %169, %178
  %186 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %187 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %186, i64 2
  %188 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %187, align 8
  %189 = call zeroext i1 %188(%"class.ots::OTSStream"* %1, i8* nonnull %147, i64 4) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %147)
  br i1 %189, label %190, label %757

190:                                              ; preds = %185
  %191 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %191)
  store i32 -180613281, i32* %44, align 4
  %192 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %193 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %192, i64 4
  %194 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %193, align 8
  %195 = call i64 %194(%"class.ots::OTSStream"* %1) #6
  %196 = and i64 %195, 3
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %190
  %199 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %200 = load i32, i32* %199, align 8
  br label %213

201:                                              ; preds = %190
  %202 = sub nuw nsw i64 4, %196
  %203 = icmp ult i64 %202, 4
  %204 = select i1 %203, i64 %202, i64 4
  %205 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %205) #6
  store i32 0, i32* %42, align 4
  %206 = getelementptr inbounds i8, i8* %205, i64 %196
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %206, i8* nonnull align 4 %191, i64 %204, i1 false) #6
  %207 = load i32, i32* %42, align 4
  %208 = call i32 @llvm.bswap.i32(i32 %207) #6
  %209 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %210 = load i32, i32* %209, align 8
  %211 = add i32 %210, %208
  store i32 %211, i32* %209, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %205) #6
  %212 = icmp eq i64 %204, 0
  br i1 %212, label %213, label %222

213:                                              ; preds = %201, %198
  %214 = phi i32 [ %211, %201 ], [ %200, %198 ]
  %215 = phi i64 [ %202, %201 ], [ 0, %198 ]
  %216 = getelementptr inbounds i8, i8* %191, i64 %215
  %217 = bitcast i8* %216 to i32*
  %218 = load i32, i32* %217, align 1
  %219 = call i32 @llvm.bswap.i32(i32 %218) #6
  %220 = add i32 %219, %214
  %221 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %220, i32* %221, align 8
  br label %229

222:                                              ; preds = %201
  %223 = sub nuw nsw i64 4, %204
  %224 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %224)
  store i32 0, i32* %43, align 4
  %225 = getelementptr inbounds i8, i8* %191, i64 %202
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %224, i8* align 1 %225, i64 %223, i1 false) #6
  %226 = load i32, i32* %43, align 4
  %227 = call i32 @llvm.bswap.i32(i32 %226) #6
  %228 = add i32 %227, %211
  store i32 %228, i32* %209, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %224)
  br label %229

229:                                              ; preds = %213, %222
  %230 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %231 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %230, i64 2
  %232 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %231, align 8
  %233 = call zeroext i1 %232(%"class.ots::OTSStream"* %1, i8* nonnull %191, i64 4) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %191)
  br i1 %233, label %234, label %757

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 3
  %236 = load i16, i16* %235, align 8
  %237 = bitcast i16* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %237)
  %238 = call i16 @llvm.bswap.i16(i16 %236) #6
  store i16 %238, i16* %41, align 2
  %239 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %240 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %239, i64 4
  %241 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %240, align 8
  %242 = call i64 %241(%"class.ots::OTSStream"* %1) #6
  %243 = and i64 %242, 3
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %234
  %246 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %247 = load i32, i32* %246, align 8
  br label %260

248:                                              ; preds = %234
  %249 = sub nuw nsw i64 4, %243
  %250 = icmp ult i64 %249, 2
  %251 = select i1 %250, i64 %249, i64 2
  %252 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252) #6
  store i32 0, i32* %39, align 4
  %253 = getelementptr inbounds i8, i8* %252, i64 %243
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %253, i8* nonnull align 2 %237, i64 %251, i1 false) #6
  %254 = load i32, i32* %39, align 4
  %255 = call i32 @llvm.bswap.i32(i32 %254) #6
  %256 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %257 = load i32, i32* %256, align 8
  %258 = add i32 %257, %255
  store i32 %258, i32* %256, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252) #6
  %259 = icmp eq i64 %243, 3
  br i1 %259, label %260, label %270

260:                                              ; preds = %248, %245
  %261 = phi i32 [ %258, %248 ], [ %247, %245 ]
  %262 = phi i64 [ %251, %248 ], [ 0, %245 ]
  %263 = phi i64 [ 1, %248 ], [ 2, %245 ]
  %264 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %264)
  store i32 0, i32* %40, align 4
  %265 = getelementptr inbounds i8, i8* %237, i64 %262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %264, i8* align 1 %265, i64 %263, i1 false) #6
  %266 = load i32, i32* %40, align 4
  %267 = call i32 @llvm.bswap.i32(i32 %266) #6
  %268 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %269 = add i32 %267, %261
  store i32 %269, i32* %268, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %264)
  br label %270

270:                                              ; preds = %248, %260
  %271 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %272 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %271, i64 2
  %273 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %272, align 8
  %274 = call zeroext i1 %273(%"class.ots::OTSStream"* %1, i8* nonnull %237, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %237)
  br i1 %274, label %275, label %757

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 4
  %277 = load i16, i16* %276, align 2
  %278 = bitcast i16* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %278)
  %279 = call i16 @llvm.bswap.i16(i16 %277) #6
  store i16 %279, i16* %38, align 2
  %280 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %281 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %280, i64 4
  %282 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %281, align 8
  %283 = call i64 %282(%"class.ots::OTSStream"* %1) #6
  %284 = and i64 %283, 3
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %289

286:                                              ; preds = %275
  %287 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %288 = load i32, i32* %287, align 8
  br label %301

289:                                              ; preds = %275
  %290 = sub nuw nsw i64 4, %284
  %291 = icmp ult i64 %290, 2
  %292 = select i1 %291, i64 %290, i64 2
  %293 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %293) #6
  store i32 0, i32* %36, align 4
  %294 = getelementptr inbounds i8, i8* %293, i64 %284
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %294, i8* nonnull align 2 %278, i64 %292, i1 false) #6
  %295 = load i32, i32* %36, align 4
  %296 = call i32 @llvm.bswap.i32(i32 %295) #6
  %297 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %298 = load i32, i32* %297, align 8
  %299 = add i32 %298, %296
  store i32 %299, i32* %297, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %293) #6
  %300 = icmp eq i64 %284, 3
  br i1 %300, label %301, label %311

301:                                              ; preds = %289, %286
  %302 = phi i32 [ %299, %289 ], [ %288, %286 ]
  %303 = phi i64 [ %292, %289 ], [ 0, %286 ]
  %304 = phi i64 [ 1, %289 ], [ 2, %286 ]
  %305 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %305)
  store i32 0, i32* %37, align 4
  %306 = getelementptr inbounds i8, i8* %278, i64 %303
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %305, i8* align 1 %306, i64 %304, i1 false) #6
  %307 = load i32, i32* %37, align 4
  %308 = call i32 @llvm.bswap.i32(i32 %307) #6
  %309 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %310 = add i32 %308, %302
  store i32 %310, i32* %309, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %305)
  br label %311

311:                                              ; preds = %289, %301
  %312 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %313 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %312, i64 2
  %314 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %313, align 8
  %315 = call zeroext i1 %314(%"class.ots::OTSStream"* %1, i8* nonnull %278, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %278)
  br i1 %315, label %316, label %757

316:                                              ; preds = %311
  %317 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 6
  %318 = load i64, i64* %317, align 8
  %319 = bitcast i64* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %319)
  store i64 %318, i64* %35, align 8
  %320 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %321 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %320, i64 4
  %322 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %321, align 8
  %323 = call i64 %322(%"class.ots::OTSStream"* %1) #6
  %324 = and i64 %323, 3
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %326, label %329

326:                                              ; preds = %316
  %327 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %328 = load i32, i32* %327, align 8
  br label %339

329:                                              ; preds = %316
  %330 = sub nuw nsw i64 4, %324
  %331 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %331) #6
  store i32 0, i32* %33, align 4
  %332 = getelementptr inbounds i8, i8* %331, i64 %324
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %332, i8* nonnull align 8 %319, i64 %330, i1 false) #6
  %333 = load i32, i32* %33, align 4
  %334 = call i32 @llvm.bswap.i32(i32 %333) #6
  %335 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %336 = load i32, i32* %335, align 8
  %337 = add i32 %336, %334
  store i32 %337, i32* %335, align 8
  %338 = or i64 %324, 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %331) #6
  br label %339

339:                                              ; preds = %329, %326
  %340 = phi i32 [ %328, %326 ], [ %337, %329 ]
  %341 = phi i64 [ 8, %326 ], [ %338, %329 ]
  %342 = phi i64 [ 0, %326 ], [ %330, %329 ]
  %343 = add nsw i64 %341, -4
  %344 = getelementptr inbounds i8, i8* %319, i64 %342
  %345 = bitcast i8* %344 to i32*
  %346 = load i32, i32* %345, align 1
  %347 = call i32 @llvm.bswap.i32(i32 %346) #6
  %348 = add i32 %347, %340
  %349 = and i64 %341, -4
  %350 = icmp eq i64 %349, 4
  br i1 %350, label %351, label %769

351:                                              ; preds = %339, %769
  %352 = phi i32 [ %348, %339 ], [ %775, %769 ]
  %353 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %352, i32* %353, align 8
  %354 = and i64 %341, 3
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %365, label %356

356:                                              ; preds = %351
  %357 = and i64 %343, -4
  %358 = add nsw i64 %342, 4
  %359 = add nsw i64 %358, %357
  %360 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %360)
  store i32 0, i32* %34, align 4
  %361 = getelementptr inbounds i8, i8* %319, i64 %359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %360, i8* align 1 %361, i64 %354, i1 false) #6
  %362 = load i32, i32* %34, align 4
  %363 = call i32 @llvm.bswap.i32(i32 %362) #6
  %364 = add i32 %363, %352
  store i32 %364, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %360)
  br label %365

365:                                              ; preds = %351, %356
  %366 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %367 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %366, i64 2
  %368 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %367, align 8
  %369 = call zeroext i1 %368(%"class.ots::OTSStream"* %1, i8* nonnull %319, i64 8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319)
  br i1 %369, label %370, label %757

370:                                              ; preds = %365
  %371 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 7
  %372 = load i64, i64* %371, align 8
  %373 = bitcast i64* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %373)
  store i64 %372, i64* %32, align 8
  %374 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %375 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %374, i64 4
  %376 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %375, align 8
  %377 = call i64 %376(%"class.ots::OTSStream"* %1) #6
  %378 = and i64 %377, 3
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %380, label %382

380:                                              ; preds = %370
  %381 = load i32, i32* %353, align 8
  br label %391

382:                                              ; preds = %370
  %383 = sub nuw nsw i64 4, %378
  %384 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %384) #6
  store i32 0, i32* %30, align 4
  %385 = getelementptr inbounds i8, i8* %384, i64 %378
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %385, i8* nonnull align 8 %373, i64 %383, i1 false) #6
  %386 = load i32, i32* %30, align 4
  %387 = call i32 @llvm.bswap.i32(i32 %386) #6
  %388 = load i32, i32* %353, align 8
  %389 = add i32 %388, %387
  store i32 %389, i32* %353, align 8
  %390 = or i64 %378, 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %384) #6
  br label %391

391:                                              ; preds = %382, %380
  %392 = phi i32 [ %381, %380 ], [ %389, %382 ]
  %393 = phi i64 [ 8, %380 ], [ %390, %382 ]
  %394 = phi i64 [ 0, %380 ], [ %383, %382 ]
  %395 = add nsw i64 %393, -4
  %396 = getelementptr inbounds i8, i8* %373, i64 %394
  %397 = bitcast i8* %396 to i32*
  %398 = load i32, i32* %397, align 1
  %399 = call i32 @llvm.bswap.i32(i32 %398) #6
  %400 = add i32 %399, %392
  %401 = and i64 %393, -4
  %402 = icmp eq i64 %401, 4
  br i1 %402, label %403, label %762

403:                                              ; preds = %391, %762
  %404 = phi i32 [ %400, %391 ], [ %768, %762 ]
  store i32 %404, i32* %353, align 8
  %405 = and i64 %393, 3
  %406 = icmp eq i64 %405, 0
  br i1 %406, label %416, label %407

407:                                              ; preds = %403
  %408 = and i64 %395, -4
  %409 = add nsw i64 %394, 4
  %410 = add nsw i64 %409, %408
  %411 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %411)
  store i32 0, i32* %31, align 4
  %412 = getelementptr inbounds i8, i8* %373, i64 %410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %411, i8* align 1 %412, i64 %405, i1 false) #6
  %413 = load i32, i32* %31, align 4
  %414 = call i32 @llvm.bswap.i32(i32 %413) #6
  %415 = add i32 %414, %404
  store i32 %415, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %411)
  br label %416

416:                                              ; preds = %403, %407
  %417 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %418 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %417, i64 2
  %419 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %418, align 8
  %420 = call zeroext i1 %419(%"class.ots::OTSStream"* %1, i8* nonnull %373, i64 8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %373)
  br i1 %420, label %421, label %757

421:                                              ; preds = %416
  %422 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 8
  %423 = load i16, i16* %422, align 8
  %424 = bitcast i16* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %424)
  %425 = call i16 @llvm.bswap.i16(i16 %423) #6
  store i16 %425, i16* %29, align 2
  %426 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %427 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %426, i64 4
  %428 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %427, align 8
  %429 = call i64 %428(%"class.ots::OTSStream"* %1) #6
  %430 = and i64 %429, 3
  %431 = icmp eq i64 %430, 0
  br i1 %431, label %432, label %434

432:                                              ; preds = %421
  %433 = load i32, i32* %353, align 8
  br label %445

434:                                              ; preds = %421
  %435 = sub nuw nsw i64 4, %430
  %436 = icmp ult i64 %435, 2
  %437 = select i1 %436, i64 %435, i64 2
  %438 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %438) #6
  store i32 0, i32* %27, align 4
  %439 = getelementptr inbounds i8, i8* %438, i64 %430
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %439, i8* nonnull align 2 %424, i64 %437, i1 false) #6
  %440 = load i32, i32* %27, align 4
  %441 = call i32 @llvm.bswap.i32(i32 %440) #6
  %442 = load i32, i32* %353, align 8
  %443 = add i32 %442, %441
  store i32 %443, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %438) #6
  %444 = icmp eq i64 %430, 3
  br i1 %444, label %445, label %454

445:                                              ; preds = %434, %432
  %446 = phi i32 [ %443, %434 ], [ %433, %432 ]
  %447 = phi i64 [ %437, %434 ], [ 0, %432 ]
  %448 = phi i64 [ 1, %434 ], [ 2, %432 ]
  %449 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %449)
  store i32 0, i32* %28, align 4
  %450 = getelementptr inbounds i8, i8* %424, i64 %447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %449, i8* align 1 %450, i64 %448, i1 false) #6
  %451 = load i32, i32* %28, align 4
  %452 = call i32 @llvm.bswap.i32(i32 %451) #6
  %453 = add i32 %452, %446
  store i32 %453, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %449)
  br label %454

454:                                              ; preds = %434, %445
  %455 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %456 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %455, i64 2
  %457 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %456, align 8
  %458 = call zeroext i1 %457(%"class.ots::OTSStream"* %1, i8* nonnull %424, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %424)
  br i1 %458, label %459, label %757

459:                                              ; preds = %454
  %460 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 10
  %461 = load i16, i16* %460, align 4
  %462 = bitcast i16* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %462)
  %463 = call i16 @llvm.bswap.i16(i16 %461) #6
  store i16 %463, i16* %26, align 2
  %464 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %465 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %464, i64 4
  %466 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %465, align 8
  %467 = call i64 %466(%"class.ots::OTSStream"* %1) #6
  %468 = and i64 %467, 3
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %472

470:                                              ; preds = %459
  %471 = load i32, i32* %353, align 8
  br label %483

472:                                              ; preds = %459
  %473 = sub nuw nsw i64 4, %468
  %474 = icmp ult i64 %473, 2
  %475 = select i1 %474, i64 %473, i64 2
  %476 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %476) #6
  store i32 0, i32* %24, align 4
  %477 = getelementptr inbounds i8, i8* %476, i64 %468
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %477, i8* nonnull align 2 %462, i64 %475, i1 false) #6
  %478 = load i32, i32* %24, align 4
  %479 = call i32 @llvm.bswap.i32(i32 %478) #6
  %480 = load i32, i32* %353, align 8
  %481 = add i32 %480, %479
  store i32 %481, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %476) #6
  %482 = icmp eq i64 %468, 3
  br i1 %482, label %483, label %492

483:                                              ; preds = %472, %470
  %484 = phi i32 [ %481, %472 ], [ %471, %470 ]
  %485 = phi i64 [ %475, %472 ], [ 0, %470 ]
  %486 = phi i64 [ 1, %472 ], [ 2, %470 ]
  %487 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %487)
  store i32 0, i32* %25, align 4
  %488 = getelementptr inbounds i8, i8* %462, i64 %485
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %487, i8* align 1 %488, i64 %486, i1 false) #6
  %489 = load i32, i32* %25, align 4
  %490 = call i32 @llvm.bswap.i32(i32 %489) #6
  %491 = add i32 %490, %484
  store i32 %491, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %487)
  br label %492

492:                                              ; preds = %472, %483
  %493 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %494 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %493, i64 2
  %495 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %494, align 8
  %496 = call zeroext i1 %495(%"class.ots::OTSStream"* %1, i8* nonnull %462, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %462)
  br i1 %496, label %497, label %757

497:                                              ; preds = %492
  %498 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 9
  %499 = load i16, i16* %498, align 2
  %500 = bitcast i16* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %500)
  %501 = call i16 @llvm.bswap.i16(i16 %499) #6
  store i16 %501, i16* %23, align 2
  %502 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %503 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %502, i64 4
  %504 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %503, align 8
  %505 = call i64 %504(%"class.ots::OTSStream"* %1) #6
  %506 = and i64 %505, 3
  %507 = icmp eq i64 %506, 0
  br i1 %507, label %508, label %510

508:                                              ; preds = %497
  %509 = load i32, i32* %353, align 8
  br label %521

510:                                              ; preds = %497
  %511 = sub nuw nsw i64 4, %506
  %512 = icmp ult i64 %511, 2
  %513 = select i1 %512, i64 %511, i64 2
  %514 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %514) #6
  store i32 0, i32* %21, align 4
  %515 = getelementptr inbounds i8, i8* %514, i64 %506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %515, i8* nonnull align 2 %500, i64 %513, i1 false) #6
  %516 = load i32, i32* %21, align 4
  %517 = call i32 @llvm.bswap.i32(i32 %516) #6
  %518 = load i32, i32* %353, align 8
  %519 = add i32 %518, %517
  store i32 %519, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %514) #6
  %520 = icmp eq i64 %506, 3
  br i1 %520, label %521, label %530

521:                                              ; preds = %510, %508
  %522 = phi i32 [ %519, %510 ], [ %509, %508 ]
  %523 = phi i64 [ %513, %510 ], [ 0, %508 ]
  %524 = phi i64 [ 1, %510 ], [ 2, %508 ]
  %525 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %525)
  store i32 0, i32* %22, align 4
  %526 = getelementptr inbounds i8, i8* %500, i64 %523
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %525, i8* align 1 %526, i64 %524, i1 false) #6
  %527 = load i32, i32* %22, align 4
  %528 = call i32 @llvm.bswap.i32(i32 %527) #6
  %529 = add i32 %528, %522
  store i32 %529, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %525)
  br label %530

530:                                              ; preds = %510, %521
  %531 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %532 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %531, i64 2
  %533 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %532, align 8
  %534 = call zeroext i1 %533(%"class.ots::OTSStream"* %1, i8* nonnull %500, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %500)
  br i1 %534, label %535, label %757

535:                                              ; preds = %530
  %536 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 11
  %537 = load i16, i16* %536, align 2
  %538 = bitcast i16* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %538)
  %539 = call i16 @llvm.bswap.i16(i16 %537) #6
  store i16 %539, i16* %20, align 2
  %540 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %541 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %540, i64 4
  %542 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %541, align 8
  %543 = call i64 %542(%"class.ots::OTSStream"* %1) #6
  %544 = and i64 %543, 3
  %545 = icmp eq i64 %544, 0
  br i1 %545, label %546, label %548

546:                                              ; preds = %535
  %547 = load i32, i32* %353, align 8
  br label %559

548:                                              ; preds = %535
  %549 = sub nuw nsw i64 4, %544
  %550 = icmp ult i64 %549, 2
  %551 = select i1 %550, i64 %549, i64 2
  %552 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %552) #6
  store i32 0, i32* %18, align 4
  %553 = getelementptr inbounds i8, i8* %552, i64 %544
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %553, i8* nonnull align 2 %538, i64 %551, i1 false) #6
  %554 = load i32, i32* %18, align 4
  %555 = call i32 @llvm.bswap.i32(i32 %554) #6
  %556 = load i32, i32* %353, align 8
  %557 = add i32 %556, %555
  store i32 %557, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %552) #6
  %558 = icmp eq i64 %544, 3
  br i1 %558, label %559, label %568

559:                                              ; preds = %548, %546
  %560 = phi i32 [ %557, %548 ], [ %547, %546 ]
  %561 = phi i64 [ %551, %548 ], [ 0, %546 ]
  %562 = phi i64 [ 1, %548 ], [ 2, %546 ]
  %563 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %563)
  store i32 0, i32* %19, align 4
  %564 = getelementptr inbounds i8, i8* %538, i64 %561
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %563, i8* align 1 %564, i64 %562, i1 false) #6
  %565 = load i32, i32* %19, align 4
  %566 = call i32 @llvm.bswap.i32(i32 %565) #6
  %567 = add i32 %566, %560
  store i32 %567, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %563)
  br label %568

568:                                              ; preds = %548, %559
  %569 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %570 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %569, i64 2
  %571 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %570, align 8
  %572 = call zeroext i1 %571(%"class.ots::OTSStream"* %1, i8* nonnull %538, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %538)
  br i1 %572, label %573, label %757

573:                                              ; preds = %568
  %574 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 12
  %575 = load i16, i16* %574, align 8
  %576 = bitcast i16* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %576)
  %577 = call i16 @llvm.bswap.i16(i16 %575) #6
  store i16 %577, i16* %17, align 2
  %578 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %579 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %578, i64 4
  %580 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %579, align 8
  %581 = call i64 %580(%"class.ots::OTSStream"* %1) #6
  %582 = and i64 %581, 3
  %583 = icmp eq i64 %582, 0
  br i1 %583, label %584, label %586

584:                                              ; preds = %573
  %585 = load i32, i32* %353, align 8
  br label %597

586:                                              ; preds = %573
  %587 = sub nuw nsw i64 4, %582
  %588 = icmp ult i64 %587, 2
  %589 = select i1 %588, i64 %587, i64 2
  %590 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %590) #6
  store i32 0, i32* %15, align 4
  %591 = getelementptr inbounds i8, i8* %590, i64 %582
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %591, i8* nonnull align 2 %576, i64 %589, i1 false) #6
  %592 = load i32, i32* %15, align 4
  %593 = call i32 @llvm.bswap.i32(i32 %592) #6
  %594 = load i32, i32* %353, align 8
  %595 = add i32 %594, %593
  store i32 %595, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %590) #6
  %596 = icmp eq i64 %582, 3
  br i1 %596, label %597, label %606

597:                                              ; preds = %586, %584
  %598 = phi i32 [ %595, %586 ], [ %585, %584 ]
  %599 = phi i64 [ %589, %586 ], [ 0, %584 ]
  %600 = phi i64 [ 1, %586 ], [ 2, %584 ]
  %601 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %601)
  store i32 0, i32* %16, align 4
  %602 = getelementptr inbounds i8, i8* %576, i64 %599
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %601, i8* align 1 %602, i64 %600, i1 false) #6
  %603 = load i32, i32* %16, align 4
  %604 = call i32 @llvm.bswap.i32(i32 %603) #6
  %605 = add i32 %604, %598
  store i32 %605, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %601)
  br label %606

606:                                              ; preds = %586, %597
  %607 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %608 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %607, i64 2
  %609 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %608, align 8
  %610 = call zeroext i1 %609(%"class.ots::OTSStream"* %1, i8* nonnull %576, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %576)
  br i1 %610, label %611, label %757

611:                                              ; preds = %606
  %612 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 13
  %613 = load i16, i16* %612, align 2
  %614 = bitcast i16* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %614)
  %615 = call i16 @llvm.bswap.i16(i16 %613) #6
  store i16 %615, i16* %14, align 2
  %616 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %617 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %616, i64 4
  %618 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %617, align 8
  %619 = call i64 %618(%"class.ots::OTSStream"* %1) #6
  %620 = and i64 %619, 3
  %621 = icmp eq i64 %620, 0
  br i1 %621, label %622, label %624

622:                                              ; preds = %611
  %623 = load i32, i32* %353, align 8
  br label %635

624:                                              ; preds = %611
  %625 = sub nuw nsw i64 4, %620
  %626 = icmp ult i64 %625, 2
  %627 = select i1 %626, i64 %625, i64 2
  %628 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %628) #6
  store i32 0, i32* %12, align 4
  %629 = getelementptr inbounds i8, i8* %628, i64 %620
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %629, i8* nonnull align 2 %614, i64 %627, i1 false) #6
  %630 = load i32, i32* %12, align 4
  %631 = call i32 @llvm.bswap.i32(i32 %630) #6
  %632 = load i32, i32* %353, align 8
  %633 = add i32 %632, %631
  store i32 %633, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %628) #6
  %634 = icmp eq i64 %620, 3
  br i1 %634, label %635, label %644

635:                                              ; preds = %624, %622
  %636 = phi i32 [ %633, %624 ], [ %623, %622 ]
  %637 = phi i64 [ %627, %624 ], [ 0, %622 ]
  %638 = phi i64 [ 1, %624 ], [ 2, %622 ]
  %639 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %639)
  store i32 0, i32* %13, align 4
  %640 = getelementptr inbounds i8, i8* %614, i64 %637
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %639, i8* align 1 %640, i64 %638, i1 false) #6
  %641 = load i32, i32* %13, align 4
  %642 = call i32 @llvm.bswap.i32(i32 %641) #6
  %643 = add i32 %642, %636
  store i32 %643, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %639)
  br label %644

644:                                              ; preds = %624, %635
  %645 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %646 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %645, i64 2
  %647 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %646, align 8
  %648 = call zeroext i1 %647(%"class.ots::OTSStream"* %1, i8* nonnull %614, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %614)
  br i1 %648, label %649, label %757

649:                                              ; preds = %644
  %650 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %650)
  store i16 512, i16* %11, align 2
  %651 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %652 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %651, i64 4
  %653 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %652, align 8
  %654 = call i64 %653(%"class.ots::OTSStream"* %1) #6
  %655 = and i64 %654, 3
  %656 = icmp eq i64 %655, 0
  br i1 %656, label %657, label %659

657:                                              ; preds = %649
  %658 = load i32, i32* %353, align 8
  br label %670

659:                                              ; preds = %649
  %660 = sub nuw nsw i64 4, %655
  %661 = icmp ult i64 %660, 2
  %662 = select i1 %661, i64 %660, i64 2
  %663 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %663) #6
  store i32 0, i32* %9, align 4
  %664 = getelementptr inbounds i8, i8* %663, i64 %655
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %664, i8* nonnull align 2 %650, i64 %662, i1 false) #6
  %665 = load i32, i32* %9, align 4
  %666 = call i32 @llvm.bswap.i32(i32 %665) #6
  %667 = load i32, i32* %353, align 8
  %668 = add i32 %667, %666
  store i32 %668, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %663) #6
  %669 = icmp eq i64 %655, 3
  br i1 %669, label %670, label %679

670:                                              ; preds = %659, %657
  %671 = phi i32 [ %668, %659 ], [ %658, %657 ]
  %672 = phi i64 [ %662, %659 ], [ 0, %657 ]
  %673 = phi i64 [ 1, %659 ], [ 2, %657 ]
  %674 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %674)
  store i32 0, i32* %10, align 4
  %675 = getelementptr inbounds i8, i8* %650, i64 %672
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %674, i8* align 1 %675, i64 %673, i1 false) #6
  %676 = load i32, i32* %10, align 4
  %677 = call i32 @llvm.bswap.i32(i32 %676) #6
  %678 = add i32 %677, %671
  store i32 %678, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %674)
  br label %679

679:                                              ; preds = %659, %670
  %680 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %681 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %680, i64 2
  %682 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %681, align 8
  %683 = call zeroext i1 %682(%"class.ots::OTSStream"* %1, i8* nonnull %650, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %650)
  br i1 %683, label %684, label %757

684:                                              ; preds = %679
  %685 = getelementptr inbounds %"class.ots::OpenTypeHEAD", %"class.ots::OpenTypeHEAD"* %0, i64 0, i32 14
  %686 = load i16, i16* %685, align 4
  %687 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %687)
  %688 = call i16 @llvm.bswap.i16(i16 %686) #6
  store i16 %688, i16* %8, align 2
  %689 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %690 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %689, i64 4
  %691 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %690, align 8
  %692 = call i64 %691(%"class.ots::OTSStream"* %1) #6
  %693 = and i64 %692, 3
  %694 = icmp eq i64 %693, 0
  br i1 %694, label %695, label %697

695:                                              ; preds = %684
  %696 = load i32, i32* %353, align 8
  br label %708

697:                                              ; preds = %684
  %698 = sub nuw nsw i64 4, %693
  %699 = icmp ult i64 %698, 2
  %700 = select i1 %699, i64 %698, i64 2
  %701 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %701) #6
  store i32 0, i32* %6, align 4
  %702 = getelementptr inbounds i8, i8* %701, i64 %693
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %702, i8* nonnull align 2 %687, i64 %700, i1 false) #6
  %703 = load i32, i32* %6, align 4
  %704 = call i32 @llvm.bswap.i32(i32 %703) #6
  %705 = load i32, i32* %353, align 8
  %706 = add i32 %705, %704
  store i32 %706, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %701) #6
  %707 = icmp eq i64 %693, 3
  br i1 %707, label %708, label %717

708:                                              ; preds = %697, %695
  %709 = phi i32 [ %706, %697 ], [ %696, %695 ]
  %710 = phi i64 [ %700, %697 ], [ 0, %695 ]
  %711 = phi i64 [ 1, %697 ], [ 2, %695 ]
  %712 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %712)
  store i32 0, i32* %7, align 4
  %713 = getelementptr inbounds i8, i8* %687, i64 %710
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %712, i8* align 1 %713, i64 %711, i1 false) #6
  %714 = load i32, i32* %7, align 4
  %715 = call i32 @llvm.bswap.i32(i32 %714) #6
  %716 = add i32 %715, %709
  store i32 %716, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %712)
  br label %717

717:                                              ; preds = %697, %708
  %718 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %719 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %718, i64 2
  %720 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %719, align 8
  %721 = call zeroext i1 %720(%"class.ots::OTSStream"* %1, i8* nonnull %687, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %687)
  br i1 %721, label %722, label %757

722:                                              ; preds = %717
  %723 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %723)
  store i16 0, i16* %5, align 2
  %724 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %55, align 8
  %725 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %724, i64 4
  %726 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %725, align 8
  %727 = call i64 %726(%"class.ots::OTSStream"* %1) #6
  %728 = and i64 %727, 3
  %729 = icmp eq i64 %728, 0
  br i1 %729, label %730, label %732

730:                                              ; preds = %722
  %731 = load i32, i32* %353, align 8
  br label %743

732:                                              ; preds = %722
  %733 = sub nuw nsw i64 4, %728
  %734 = icmp ult i64 %733, 2
  %735 = select i1 %734, i64 %733, i64 2
  %736 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %736) #6
  store i32 0, i32* %3, align 4
  %737 = getelementptr inbounds i8, i8* %736, i64 %728
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %737, i8* nonnull align 2 %723, i64 %735, i1 false) #6
  %738 = load i32, i32* %3, align 4
  %739 = call i32 @llvm.bswap.i32(i32 %738) #6
  %740 = load i32, i32* %353, align 8
  %741 = add i32 %740, %739
  store i32 %741, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %736) #6
  %742 = icmp eq i64 %728, 3
  br i1 %742, label %743, label %752

743:                                              ; preds = %732, %730
  %744 = phi i32 [ %741, %732 ], [ %731, %730 ]
  %745 = phi i64 [ %735, %732 ], [ 0, %730 ]
  %746 = phi i64 [ 1, %732 ], [ 2, %730 ]
  %747 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %747)
  store i32 0, i32* %4, align 4
  %748 = getelementptr inbounds i8, i8* %723, i64 %745
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %747, i8* align 1 %748, i64 %746, i1 false) #6
  %749 = load i32, i32* %4, align 4
  %750 = call i32 @llvm.bswap.i32(i32 %749) #6
  %751 = add i32 %750, %744
  store i32 %751, i32* %353, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %747)
  br label %752

752:                                              ; preds = %732, %743
  %753 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %754 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %753, i64 2
  %755 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %754, align 8
  %756 = call zeroext i1 %755(%"class.ots::OTSStream"* %1, i8* nonnull %723, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %723)
  br i1 %756, label %760, label %757

757:                                              ; preds = %752, %717, %679, %644, %606, %568, %530, %492, %454, %416, %365, %311, %270, %229, %185, %141, %93
  %758 = bitcast %"class.ots::OpenTypeHEAD"* %0 to %"class.ots::Table"*
  %759 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %758, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0)) #6
  br label %760

760:                                              ; preds = %752, %757
  %761 = phi i1 [ %759, %757 ], [ true, %752 ]
  ret i1 %761

762:                                              ; preds = %391
  %763 = add nuw nsw i64 %394, 4
  %764 = getelementptr inbounds i8, i8* %373, i64 %763
  %765 = bitcast i8* %764 to i32*
  %766 = load i32, i32* %765, align 1
  %767 = call i32 @llvm.bswap.i32(i32 %766) #6
  %768 = add i32 %767, %400
  br label %403

769:                                              ; preds = %339
  %770 = add nuw nsw i64 %342, 4
  %771 = getelementptr inbounds i8, i8* %319, i64 %770
  %772 = bitcast i8* %771 to i32*
  %773 = load i32, i32* %772, align 1
  %774 = call i32 @llvm.bswap.i32(i32 %773) #6
  %775 = add i32 %774, %348
  br label %351
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots5TableD2Ev(%"class.ots::Table"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeHEADD0Ev(%"class.ots::OpenTypeHEAD"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.ots::OpenTypeHEAD"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

declare zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #5

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
