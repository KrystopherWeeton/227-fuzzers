; ModuleID = '../../third_party/blink/renderer/core/loader/modulescript/installed_service_worker_module_script_fetcher.cc'
source_filename = "../../third_party/blink/renderer/core/loader/modulescript/installed_service_worker_module_script_fetcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.146", i32, [4 x i8], %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.284", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.295", %"class.std::__1::unique_ptr.301", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.313", %"class.std::__1::unique_ptr.319", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.326", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.264", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__cxx_atomic_impl.185" }
%"struct.std::__1::__cxx_atomic_impl.185" = type { %"struct.std::__1::__cxx_atomic_base_impl.186" }
%"struct.std::__1::__cxx_atomic_base_impl.186" = type { i64 }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::Worklist.193"* }
%"class.blink::Worklist.193" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::Worklist.200"* }
%"class.blink::Worklist.200" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::Worklist.207"* }
%"class.blink::Worklist.207" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::Worklist.214"* }
%"class.blink::Worklist.214" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::Worklist.221"* }
%"class.blink::Worklist.221" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::Worklist.228"* }
%"class.blink::Worklist.228" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::Worklist.235"* }
%"class.blink::Worklist.235" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.242", %"class.std::__1::__compressed_pair.251", %"class.std::__1::__compressed_pair.256", %"class.std::__1::__compressed_pair.258", [4 x i8] }>
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244", %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { i64 }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { float }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.267", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.276" }
%"class.WTF::Vector.276" = type { %"class.WTF::VectorBuffer.277" }
%"class.WTF::VectorBuffer.277" = type { %"class.WTF::VectorBufferBase.278" }
%"class.WTF::VectorBufferBase.278" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { %"struct.std::__1::pair.294"*, i32, i32 }
%"struct.std::__1::pair.294" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.307" }
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.193"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.200"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.207"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.214"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.221"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1450", i64 }
%"class.std::__1::vector.1450" = type { %"class.std::__1::__vector_base.1451" }
%"class.std::__1::__vector_base.1451" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1452" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1452" = type { %"struct.std::__1::__compressed_pair_elem.1453" }
%"struct.std::__1::__compressed_pair_elem.1453" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.325 }
%class.scoped_refptr.325 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.326" = type { %"struct.std::__1::__atomic_base.327" }
%"struct.std::__1::__atomic_base.327" = type { %"struct.std::__1::__cxx_atomic_impl.328" }
%"struct.std::__1::__cxx_atomic_impl.328" = type { %"struct.std::__1::__cxx_atomic_base_impl.329" }
%"struct.std::__1::__cxx_atomic_base_impl.329" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.42" }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i32 }
%"class.blink::InstalledServiceWorkerModuleScriptFetcher" = type <{ %"class.blink::ModuleScriptFetcher.base", [7 x i8], %"class.blink::Member.359", i32, [4 x i8] }>
%"class.blink::ModuleScriptFetcher.base" = type { %"class.blink::ResourceClient.base" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member", i8 }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.23", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.335", %"class.blink::ResourceResponse", %class.scoped_refptr.337, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.4", i8, %"class.absl::optional.13", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.absl::optional.4" = type { %"class.absl::optional_internal::optional_data.5" }
%"class.absl::optional_internal::optional_data.5" = type { %"class.absl::optional_internal::optional_data_base.6" }
%"class.absl::optional_internal::optional_data_base.6" = type { %"class.absl::optional_internal::optional_data_dtor_base.7" }
%"class.absl::optional_internal::optional_data_dtor_base.7" = type { i8, [7 x i8], %union.anon.8 }
%union.anon.8 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.11 }
%union.anon.11 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%union.anon.17 = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector", %"class.WTF::Vector.18" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.23" = type { %"class.WTF::VectorBuffer.24" }
%"class.WTF::VectorBuffer.24" = type { %"class.WTF::VectorBufferBase.25" }
%"class.WTF::VectorBufferBase.25" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.120" }
%"class.WTF::HashMap.120" = type { %"class.WTF::HashTable.121" }
%"class.WTF::HashTable.121" = type <{ %"struct.WTF::KeyValuePair.123"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.123" = type <{ %"class.blink::WeakMember.1583", i32, [4 x i8] }>
%"class.blink::WeakMember.1583" = type { %"class.blink::MemberBase.1584" }
%"class.blink::MemberBase.1584" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member", i8, [7 x i8] }>
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.126" }
%"class.WTF::HashTable.126" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.128", i8, i8, %class.scoped_refptr.132, %class.scoped_refptr.330, %class.scoped_refptr.332 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.128" = type { %"class.WTF::HashTable.129" }
%"class.WTF::HashTable.129" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.132 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.133" }
%"class.base::RefCounted.133" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.138" }
%"class.WTF::HashMap.138" = type { %"class.WTF::HashTable.139" }
%"class.WTF::HashTable.139" = type <{ %"struct.WTF::KeyValuePair.141"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.141" = type { %"class.blink::WeakMember.142", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.330 = type { %"class.base::RefCountedData.331"* }
%"class.base::RefCountedData.331" = type opaque
%class.scoped_refptr.332 = type { %"class.base::RefCountedData.333"* }
%"class.base::RefCountedData.333" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.83" }
%"class.base::time_internal::TimeBase.83" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.334 }
%class.scoped_refptr.334 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.31, %class.scoped_refptr.31, %class.scoped_refptr.31, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.34, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.47", %"class.absl::optional.52", %"class.absl::optional.62", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.72", %"class.absl::optional.62", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.62", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.72", %"class.absl::optional.77", i8, %class.scoped_refptr.82 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.26" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.31 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.404", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.26", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.31 }
%"class.WTF::RefCounted.404" = type { %"class.base::RefCounted.405" }
%"class.base::RefCounted.405" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.34 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.41, i8, %"class.url::Origin" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.1569" }
%"class.std::__1::__compressed_pair.1569" = type { %"struct.std::__1::__compressed_pair_elem.1570" }
%"struct.std::__1::__compressed_pair_elem.1570" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::unique_ptr.35"* }
%class.scoped_refptr.41 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.42" }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.52" = type { %"class.absl::optional_internal::optional_data.53" }
%"class.absl::optional_internal::optional_data.53" = type { %"class.absl::optional_internal::optional_data_base.54" }
%"class.absl::optional_internal::optional_data_base.54" = type { %"class.absl::optional_internal::optional_data_dtor_base.55" }
%"class.absl::optional_internal::optional_data_dtor_base.55" = type { i8, %union.anon.56 }
%union.anon.56 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.57", %"class.WTF::Vector.18", %"class.WTF::String" }
%"class.WTF::Vector.57" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase.59" }
%"class.WTF::VectorBufferBase.59" = type { %class.scoped_refptr.31*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.67", %"class.absl::optional.67" }
%"class.absl::optional.67" = type { %"class.absl::optional_internal::optional_data.68" }
%"class.absl::optional_internal::optional_data.68" = type { %"class.absl::optional_internal::optional_data_base.69" }
%"class.absl::optional_internal::optional_data_base.69" = type { %"class.absl::optional_internal::optional_data_dtor_base.70" }
%"class.absl::optional_internal::optional_data_dtor_base.70" = type { i8, %union.anon.71 }
%union.anon.71 = type { %"class.base::TimeDelta" }
%"class.absl::optional.62" = type { %"class.absl::optional_internal::optional_data.63" }
%"class.absl::optional_internal::optional_data.63" = type { %"class.absl::optional_internal::optional_data_base.64" }
%"class.absl::optional_internal::optional_data_base.64" = type { %"class.absl::optional_internal::optional_data_dtor_base.65" }
%"class.absl::optional_internal::optional_data_dtor_base.65" = type { i8, %union.anon.66 }
%union.anon.66 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, %union.anon.76 }
%union.anon.76 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.77" = type { %"class.absl::optional_internal::optional_data.78" }
%"class.absl::optional_internal::optional_data.78" = type { %"class.absl::optional_internal::optional_data_base.79" }
%"class.absl::optional_internal::optional_data_base.79" = type { %"class.absl::optional_internal::optional_data_dtor_base.80" }
%"class.absl::optional_internal::optional_data_dtor_base.80" = type { i8, %union.anon.81 }
%union.anon.81 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.82 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1574", %"class.base::internal::flat_tree.1575" }
%"class.base::RefCountedThreadSafe.1574" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.1575" = type { %"class.std::__1::vector.1576" }
%"class.std::__1::vector.1576" = type { %"class.std::__1::__vector_base.1577" }
%"class.std::__1::__vector_base.1577" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1578" }
%"class.std::__1::__compressed_pair.1578" = type { %"struct.std::__1::__compressed_pair_elem.1579" }
%"struct.std::__1::__compressed_pair_elem.1579" = type { i32* }
%"class.blink::Member.335" = type { %"class.blink::MemberBase.336" }
%"class.blink::MemberBase.336" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.84", %class.scoped_refptr.99, %class.scoped_refptr.100, %"struct.blink::CacheControlHeader", %"class.absl::optional.67", %"class.absl::optional.101", %"class.absl::optional.101", %"class.absl::optional.101", i64, %"class.blink::KURL", %"class.WTF::Vector.106", %"class.WTF::String", %"class.WTF::Vector.18", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.72", %"class.WTF::Vector.18", %"class.blink::KURL", %"class.absl::optional.111" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.84" = type { %"class.absl::optional_internal::optional_data.85" }
%"class.absl::optional_internal::optional_data.85" = type { %"class.absl::optional_internal::optional_data_base.86" }
%"class.absl::optional_internal::optional_data_base.86" = type { %"class.absl::optional_internal::optional_data_dtor_base.87" }
%"class.absl::optional_internal::optional_data_dtor_base.87" = type { i8, %union.anon.88 }
%union.anon.88 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.18", %"class.WTF::String", i64, i64, %"class.WTF::Vector.89", %"class.WTF::Vector.94" }
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.94" = type { %"class.WTF::VectorBuffer.95" }
%"class.WTF::VectorBuffer.95" = type { %"class.WTF::VectorBufferBase.96" }
%"class.WTF::VectorBufferBase.96" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.99 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.100 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.101" = type { %"class.absl::optional_internal::optional_data.102" }
%"class.absl::optional_internal::optional_data.102" = type { %"class.absl::optional_internal::optional_data_base.103" }
%"class.absl::optional_internal::optional_data_base.103" = type { %"class.absl::optional_internal::optional_data_dtor_base.104" }
%"class.absl::optional_internal::optional_data_dtor_base.104" = type { i8, %union.anon.105 }
%union.anon.105 = type { %"class.base::Time" }
%"class.WTF::Vector.106" = type { %"class.WTF::VectorBuffer.107" }
%"class.WTF::VectorBuffer.107" = type { %"class.WTF::VectorBufferBase.108" }
%"class.WTF::VectorBufferBase.108" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.111" = type { %"class.absl::optional_internal::optional_data.112" }
%"class.absl::optional_internal::optional_data.112" = type { %"class.absl::optional_internal::optional_data_base.113" }
%"class.absl::optional_internal::optional_data_base.113" = type { %"class.absl::optional_internal::optional_data_dtor_base.114" }
%"class.absl::optional_internal::optional_data_dtor_base.114" = type { i8, %union.anon.115 }
%union.anon.115 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.337 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.338", i64, %"class.WTF::Vector.340", %"class.WTF::Vector.345" }
%"class.WTF::RefCounted.338" = type { %"class.base::RefCounted.339" }
%"class.base::RefCounted.339" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.340" = type { %"class.WTF::VectorBuffer.341" }
%"class.WTF::VectorBuffer.341" = type { %"class.WTF::VectorBufferBase.342" }
%"class.WTF::VectorBufferBase.342" = type { i8*, i32, i32 }
%"class.WTF::Vector.345" = type { %"class.WTF::VectorBuffer.346" }
%"class.WTF::VectorBuffer.346" = type { %"class.WTF::VectorBufferBase.347" }
%"class.WTF::VectorBufferBase.347" = type { %"class.std::__1::unique_ptr.348"*, i32, i32 }
%"class.std::__1::unique_ptr.348" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.351", %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.blink::Member.359" = type { %"class.blink::MemberBase.360" }
%"class.blink::MemberBase.360" = type { %"class.blink::WorkerGlobalScope"* }
%"class.blink::WorkerGlobalScope" = type { %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::Supplementable.562", %"class.blink::KURL", i32, %"class.WTF::String", %"struct.blink::UserAgentMetadata", %"class.std::__1::unique_ptr.577", %"class.blink::Member.595", %"class.blink::Member.597", %"class.blink::Member.608", %"class.blink::WorkerThread"*, i8, %"class.base::TimeTicks", %"class.blink::HeapHashMap.877", i32, %"class.blink::Member.884", %"class.std::__1::unique_ptr.886", %"class.blink::BrowserInterfaceBrokerProxy", i32, %"class.blink::Member.1068", %"class.absl::optional.1072", i32, %"class.std::__1::unique_ptr.1078", %"class.std::__1::unique_ptr.1084", i64 }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.535", %"class.blink::Member.541", %"class.blink::HeapHashSet.543", %class.scoped_refptr.550, %"class.blink::Member.552", %"class.blink::Member.554", i32, %"class.WTF::Vector.477", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.558" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.374" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.365" }
%"class.WTF::Vector.365" = type { %"class.WTF::VectorBuffer.366" }
%"class.WTF::VectorBuffer.366" = type { %"class.WTF::VectorBufferBase.367", [32 x i8] }
%"class.WTF::VectorBufferBase.367" = type { %"struct.std::__1::pair.368"*, i32, i32 }
%"struct.std::__1::pair.368" = type { %"class.WTF::AtomicString", %"class.blink::Member.369" }
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::HeapVector.371"* }
%"class.blink::HeapVector.371" = type opaque
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.WTF::Vector.377"* }
%"class.WTF::Vector.377" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.443", i32, i8, [3 x i8], %"class.blink::HeapVector.445", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.454", %"class.blink::Member.456", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.465", %"class.blink::Member.471", %"class.blink::Member.473", i8 }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.381" }
%"class.blink::HeapHashMap.381" = type { %"class.WTF::HashMap.384" }
%"class.WTF::HashMap.384" = type { %"class.WTF::HashTable.385" }
%"class.WTF::HashTable.385" = type <{ %"struct.WTF::KeyValuePair.387"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.387" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.395" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.388" }
%"class.blink::HeapHashSet.388" = type { %"class.WTF::HashSet.391" }
%"class.WTF::HashSet.391" = type { %"class.WTF::HashTable.392" }
%"class.WTF::HashTable.392" = type <{ %"class.blink::WeakMember.394"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.394" = type opaque
%"class.blink::Supplementable.395" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.396" }
%"class.blink::HeapHashMap.396" = type { %"class.WTF::HashMap.399" }
%"class.WTF::HashMap.399" = type { %"class.WTF::HashTable.400" }
%"class.WTF::HashTable.400" = type <{ %"struct.WTF::KeyValuePair.402"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.402" = type { i8*, %"class.blink::Member.1586" }
%"class.blink::Member.1586" = type { %"class.blink::MemberBase.1587" }
%"class.blink::MemberBase.1587" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1588" }
%"class.blink::Member.1588" = type { %"class.blink::MemberBase.1589" }
%"class.blink::MemberBase.1589" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.403, %"class.std::__1::unique_ptr.406", %"class.std::__1::unique_ptr.406", %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431", %"class.blink::Member.437", i32, [4 x i8], %"class.WTF::HashSet.439", i32, i32 }
%class.scoped_refptr.403 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.418", %"class.std::__1::map.427"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.409" }
%"class.std::__1::__tree.409" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.410", %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.std::__1::map.418" = type { %"class.std::__1::__tree.419" }
%"class.std::__1::__tree.419" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.std::__1::map.427" = type opaque
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.443", i32, i8, [3 x i8], %"class.blink::HeapVector.445", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.454", %"class.blink::Member.456", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.465", %"class.blink::Member.471", %"class.blink::Member.473", i8, [7 x i8] }>
%"class.WTF::HashSet.439" = type { %"class.WTF::HashTable.440" }
%"class.WTF::HashTable.440" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.445" = type { %"class.WTF::Vector.448" }
%"class.WTF::Vector.448" = type { %"class.WTF::VectorBuffer.449" }
%"class.WTF::VectorBuffer.449" = type { %"class.WTF::VectorBufferBase.450" }
%"class.WTF::VectorBufferBase.450" = type { %"class.blink::Member.451"*, i32, i32 }
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.458", i32, i32 }
%"class.blink::HeapHashMap.458" = type { %"class.WTF::HashMap.461" }
%"class.WTF::HashMap.461" = type { %"class.WTF::HashTable.462" }
%"class.WTF::HashTable.462" = type <{ %"struct.WTF::KeyValuePair.464"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.464" = type opaque
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.456", i8, [7 x i8], %"class.WTF::Vector.477", %"class.blink::HeapVector.512", i8, [7 x i8], %"class.WTF::HashSet.439", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.512" = type { %"class.WTF::Vector.515" }
%"class.WTF::Vector.515" = type { %"class.WTF::VectorBuffer.516" }
%"class.WTF::VectorBuffer.516" = type { %"class.WTF::VectorBufferBase.517" }
%"class.WTF::VectorBufferBase.517" = type { %"class.blink::Member.518"*, i32, i32 }
%"class.blink::Member.518" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::ConsoleMessage"* }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.1478", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.1490", %"class.WTF::Vector.1492" }
%"class.std::__1::unique_ptr.1478" = type { %"class.std::__1::__compressed_pair.1479" }
%"class.std::__1::__compressed_pair.1479" = type { %"struct.std::__1::__compressed_pair_elem.1480" }
%"struct.std::__1::__compressed_pair_elem.1480" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1481", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1481" = type { %"class.std::__1::__compressed_pair.1482" }
%"class.std::__1::__compressed_pair.1482" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"struct.std::__1::__compressed_pair_elem.1483" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.1490" = type { %"class.blink::MemberBase.1491" }
%"class.blink::MemberBase.1491" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.WTF::Vector.1492" = type { %"class.WTF::VectorBuffer.1493" }
%"class.WTF::VectorBuffer.1493" = type { %"class.WTF::VectorBufferBase.1494" }
%"class.WTF::VectorBufferBase.1494" = type { i32*, i32, i32 }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.520" }
%"class.blink::PersistentBase.520" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.523" }
%"class.blink::Supplementable.523" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.524" }
%"class.blink::HeapHashMap.524" = type { %"class.WTF::HashMap.527" }
%"class.WTF::HashMap.527" = type { %"class.WTF::HashTable.528" }
%"class.WTF::HashTable.528" = type <{ %"struct.WTF::KeyValuePair.530"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.530" = type { i8*, %"class.blink::Member.1590" }
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::Supplement.1592"* }
%"class.blink::Supplement.1592" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1593" }
%"class.blink::Member.1593" = type { %"class.blink::MemberBase.1594" }
%"class.blink::MemberBase.1594" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.531" }
%"struct.std::__1::atomic.531" = type { %"struct.std::__1::__atomic_base.532" }
%"struct.std::__1::__atomic_base.532" = type { %"struct.std::__1::__cxx_atomic_impl.533" }
%"struct.std::__1::__cxx_atomic_impl.533" = type { %"struct.std::__1::__cxx_atomic_base_impl.534" }
%"struct.std::__1::__cxx_atomic_base_impl.534" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1313", %"class.blink::Member.1314", %"class.blink::Member.1316", %"class.blink::Member.1320", %class.scoped_refptr.823, %class.scoped_refptr.823, %"class.blink::Member.1322", %"class.blink::Member.1324", %"class.blink::Member.1330", %"class.blink::Member.1334", %"class.blink::Member.1386", %"class.blink::HeapHashMap.1388", %"class.blink::HeapHashSet.1395", %"class.blink::HeapHashSet.1395", %"class.blink::HeapHashMap.1402", %"class.blink::HeapVector.1409", %"class.blink::Member.1416", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1419", %"class.WTF::Vector.1426", %"class.blink::HeapHashSet.1432", %"class.blink::HeapHashSet.1432", %"class.std::__1::unique_ptr.1438", %"class.base::WeakPtr.1379", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1447", i8, i8, %"class.base::WeakPtrFactory.1449" }
%"class.blink::ThreadState::PrefinalizerRegistration.1313" = type { i8 }
%"class.blink::Member.1314" = type { %"class.blink::MemberBase.1315" }
%"class.blink::MemberBase.1315" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1316" = type { %"class.blink::MemberBase.1317" }
%"class.blink::MemberBase.1317" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.823 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.824" }>
%"class.base::RefCountedThreadSafe.824" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1324" = type { %"class.blink::MemberBase.1325" }
%"class.blink::MemberBase.1325" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1328" }
%"class.blink::Member.1328" = type { %"class.blink::MemberBase.1329" }
%"class.blink::MemberBase.1329" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1330" = type { %"class.blink::MemberBase.1331" }
%"class.blink::MemberBase.1331" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1334" = type { %"class.blink::MemberBase.1335" }
%"class.blink::MemberBase.1335" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1338", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1340", %"class.WTF::HashSet.1345", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1349", %"class.std::__1::map.1356", %"class.std::__1::map.1367", %"class.std::__1::unique_ptr.1376", %"class.blink::Member.1324", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1383", %"class.mojo::InlinedStructPtr.1385", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1340" = type { %"class.WTF::HashTable.1341" }
%"class.WTF::HashTable.1341" = type <{ %"struct.WTF::KeyValuePair.1344"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1344" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1345" = type { %"class.WTF::HashTable.1346" }
%"class.WTF::HashTable.1346" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1349" = type { %"class.WTF::HashMap.1352" }
%"class.WTF::HashMap.1352" = type { %"class.WTF::HashTable.1353" }
%"class.WTF::HashTable.1353" = type <{ %"struct.WTF::KeyValuePair.1355"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1355" = type opaque
%"class.std::__1::map.1356" = type { %"class.std::__1::__tree.1357" }
%"class.std::__1::__tree.1357" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1358", %"class.std::__1::__compressed_pair.1362" }
%"class.std::__1::__compressed_pair.1358" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::__compressed_pair.1362" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.std::__1::map.1367" = type { %"class.std::__1::__tree.1368" }
%"class.std::__1::__tree.1368" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1369", %"class.std::__1::__compressed_pair.1373" }
%"class.std::__1::__compressed_pair.1369" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::__compressed_pair.1373" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1379", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.1385" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1386" = type { %"class.blink::MemberBase.1387" }
%"class.blink::MemberBase.1387" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1388" = type { %"class.WTF::HashMap.1391" }
%"class.WTF::HashMap.1391" = type { %"class.WTF::HashTable.1392" }
%"class.WTF::HashTable.1392" = type <{ %"struct.WTF::KeyValuePair.1394"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1394" = type opaque
%"class.blink::HeapHashSet.1395" = type { %"class.WTF::HashSet.1398" }
%"class.WTF::HashSet.1398" = type { %"class.WTF::HashTable.1399" }
%"class.WTF::HashTable.1399" = type <{ %"class.blink::WeakMember.1401"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1401" = type { %"class.blink::MemberBase" }
%"class.blink::HeapHashMap.1402" = type { %"class.WTF::HashMap.1405" }
%"class.WTF::HashMap.1405" = type { %"class.WTF::HashTable.1406" }
%"class.WTF::HashTable.1406" = type <{ %"struct.WTF::KeyValuePair.1408"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1408" = type opaque
%"class.blink::HeapVector.1409" = type { %"class.WTF::Vector.1412" }
%"class.WTF::Vector.1412" = type { %"class.WTF::VectorBuffer.1413" }
%"class.WTF::VectorBuffer.1413" = type { %"class.WTF::VectorBufferBase.1414" }
%"class.WTF::VectorBufferBase.1414" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member.1416" = type { %"class.blink::MemberBase.1417" }
%"class.blink::MemberBase.1417" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.549", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.823, %"class.base::WeakPtrFactory.1418" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.1418" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.833 }
%class.scoped_refptr.833 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.834", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.834" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.835" }
%"struct.std::__1::atomic.835" = type { %"struct.std::__1::__atomic_base.836" }
%"struct.std::__1::__atomic_base.836" = type { %"struct.std::__1::__atomic_base.837" }
%"struct.std::__1::__atomic_base.837" = type { %"struct.std::__1::__cxx_atomic_impl.838" }
%"struct.std::__1::__cxx_atomic_impl.838" = type { %"struct.std::__1::__cxx_atomic_base_impl.839" }
%"struct.std::__1::__cxx_atomic_base_impl.839" = type { i8 }
%"class.blink::WeakMember.549" = type { %"class.blink::MemberBase.542" }
%"class.blink::HeapHashMap.1419" = type { %"class.WTF::HashMap.1422" }
%"class.WTF::HashMap.1422" = type { %"class.WTF::HashTable.1423" }
%"class.WTF::HashTable.1423" = type <{ %"struct.WTF::KeyValuePair.1425"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1425" = type opaque
%"class.WTF::Vector.1426" = type { %"class.WTF::VectorBuffer.1427" }
%"class.WTF::VectorBuffer.1427" = type { %"class.WTF::VectorBufferBase.1428" }
%"class.WTF::VectorBufferBase.1428" = type { %class.scoped_refptr.1429*, i32, i32 }
%class.scoped_refptr.1429 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1432" = type { %"class.WTF::HashSet.1435" }
%"class.WTF::HashSet.1435" = type { %"class.WTF::HashTable.1436" }
%"class.WTF::HashTable.1436" = type <{ %"class.blink::Member.335"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1438" = type { %"class.std::__1::__compressed_pair.1439" }
%"class.std::__1::__compressed_pair.1439" = type { %"struct.std::__1::__compressed_pair_elem.1440" }
%"struct.std::__1::__compressed_pair_elem.1440" = type { %"class.WTF::HashSet.1441"* }
%"class.WTF::HashSet.1441" = type opaque
%"class.base::WeakPtr.1379" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.970 }
%class.scoped_refptr.970 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1445" }
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1449" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.543" = type { %"class.WTF::HashSet.546" }
%"class.WTF::HashSet.546" = type { %"class.WTF::HashTable.547" }
%"class.WTF::HashTable.547" = type <{ %"class.blink::WeakMember.549"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.550 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.551", [4 x i8] }>
%"class.base::RefCounted.551" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.WTF::Vector.477" = type { %"class.WTF::VectorBuffer.478" }
%"class.WTF::VectorBuffer.478" = type { %"class.WTF::VectorBufferBase.479" }
%"class.WTF::VectorBufferBase.479" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.480" }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.483", %"class.WTF::HashMap.490", %"class.WTF::HashMap.495", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.18", i32, %"class.mojo::StructPtr.500", %"class.WTF::Vector.18" }
%"class.mojo::StructPtr.483" = type { %"class.std::__1::unique_ptr.484" }
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.490" = type { %"class.WTF::HashTable.491" }
%"class.WTF::HashTable.491" = type <{ %"struct.WTF::KeyValuePair.494"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.494" = type opaque
%"class.WTF::HashMap.495" = type { %"class.WTF::HashTable.496" }
%"class.WTF::HashTable.496" = type <{ %"struct.WTF::KeyValuePair.499"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.499" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.500" = type { %"class.std::__1::unique_ptr.501" }
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.18", i8, i8, [6 x i8] }>
%"class.blink::WorkerReportingProxy" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.556", i32, [4 x i8] }>
%"class.std::__1::bitset.556" = type { %"class.std::__1::__bitset.557" }
%"class.std::__1::__bitset.557" = type { [25 x i64] }
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.562" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.563" }
%"class.blink::HeapHashMap.563" = type { %"class.WTF::HashMap.566" }
%"class.WTF::HashMap.566" = type { %"class.WTF::HashTable.567" }
%"class.WTF::HashTable.567" = type <{ %"struct.WTF::KeyValuePair.569"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.569" = type opaque
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.570", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.570" = type { %"class.std::__1::__vector_base.571" }
%"class.std::__1::__vector_base.571" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.572" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.580", %"class.WTF::HashMap.580", %"class.WTF::HashMap.580", %"class.WTF::HashMap.580", %"class.WTF::HashMap.580", %"class.WTF::HashMap.580", %"class.WTF::HashMap.580", %"class.std::__1::unique_ptr.585" }
%"class.WTF::HashMap.580" = type { %"class.WTF::HashTable.581" }
%"class.WTF::HashTable.581" = type <{ %"struct.WTF::KeyValuePair.584"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.584" = type opaque
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.WTF::Vector.588"* }
%"class.WTF::Vector.588" = type opaque
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::WorkerLocation"* }
%"class.blink::WorkerLocation" = type opaque
%"class.blink::Member.597" = type { %"class.blink::MemberBase.598" }
%"class.blink::MemberBase.598" = type { %"class.blink::WorkerNavigator"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.600" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.599", %"class.WTF::Vector.18", i8 }>
%"class.blink::WeakMember.599" = type { %"class.blink::MemberBase.438" }
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.599" }
%"class.blink::Supplementable.600" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.601" }
%"class.blink::HeapHashMap.601" = type { %"class.WTF::HashMap.604" }
%"class.WTF::HashMap.604" = type { %"class.WTF::HashTable.605" }
%"class.WTF::HashTable.605" = type <{ %"struct.WTF::KeyValuePair.607"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.607" = type { i8*, %"class.blink::Member.1595" }
%"class.blink::Member.1595" = type { %"class.blink::MemberBase.1596" }
%"class.blink::MemberBase.1596" = type { %"class.blink::Supplement.1597"* }
%"class.blink::Supplement.1597" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1598" }
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::TrustedTypePolicyFactory"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::WorkerThread" = type { %"class.base::TaskObserver", %"class.base::TimeTicks", i32, i8, i32, i32, %"class.base::TimeDelta", %class.scoped_refptr.610, %"class.base::UnguessableToken", %"class.blink::InspectorIssueStorage", i32, %"class.blink::WorkerReportingProxy"*, %class.scoped_refptr.823, %"class.std::__1::unique_ptr.825", %"class.WTF::HashMap.856", %"class.WTF::Mutex", i32, %"class.blink::Platform::NestedMessageLoopRunner"*, %"class.blink::CrossThreadPersistent.861", %"class.blink::CrossThreadPersistent.863", %"class.blink::CrossThreadPersistent.865", %class.scoped_refptr.867, %"class.blink::TaskHandle", %"class.WTF::HashSet.868", %"class.WTF::HashSet.872" }
%"class.base::TaskObserver" = type { i32 (...)** }
%class.scoped_refptr.610 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.611" }
%"class.WTF::Deque.611" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.614" }
%"class.WTF::VectorBuffer.614" = type { %"class.WTF::VectorBufferBase.615" }
%"class.WTF::VectorBufferBase.615" = type { %"class.std::__1::unique_ptr.616"*, i32, i32 }
%"class.std::__1::unique_ptr.616" = type { %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.std::__1::unique_ptr.619" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.blink::protocol::Audits::InspectorIssueDetails"* }
%"class.blink::protocol::Audits::InspectorIssueDetails" = type { %"class.crdtp::ProtocolObject.622", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.667", %"class.crdtp::detail::PtrMaybe.687", %"class.crdtp::detail::PtrMaybe.697", %"class.crdtp::detail::PtrMaybe.707", %"class.crdtp::detail::PtrMaybe.728", %"class.crdtp::detail::PtrMaybe.738", %"class.crdtp::detail::PtrMaybe.748", %"class.crdtp::detail::PtrMaybe.758", %"class.crdtp::detail::PtrMaybe.787", %"class.crdtp::detail::PtrMaybe.797", %"class.crdtp::detail::PtrMaybe.807" }
%"class.crdtp::ProtocolObject.622" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.625" }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* }
%"class.blink::protocol::Audits::SameSiteCookieIssueDetails" = type { %"class.crdtp::ProtocolObject.628", %"class.crdtp::detail::PtrMaybe.631", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.641", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.654" }
%"class.crdtp::ProtocolObject.628" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.631" = type { %"class.std::__1::unique_ptr.632" }
%"class.std::__1::unique_ptr.632" = type { %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"class.blink::protocol::Audits::AffectedCookie"* }
%"class.blink::protocol::Audits::AffectedCookie" = type { %"class.crdtp::ProtocolObject.635", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.635" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.std::__1::vector.644"* }
%"class.std::__1::vector.644" = type { %"class.std::__1::__vector_base.645" }
%"class.std::__1::__vector_base.645" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.WTF::String"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.654" = type { %"class.std::__1::unique_ptr.655" }
%"class.std::__1::unique_ptr.655" = type { %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.blink::protocol::Audits::AffectedRequest"* }
%"class.blink::protocol::Audits::AffectedRequest" = type { %"class.crdtp::ProtocolObject.658", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.658" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.667" = type { %"class.std::__1::unique_ptr.668" }
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.blink::protocol::Audits::MixedContentIssueDetails"* }
%"class.blink::protocol::Audits::MixedContentIssueDetails" = type { %"class.crdtp::ProtocolObject.671", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.654", %"class.crdtp::detail::PtrMaybe.674" }
%"class.crdtp::ProtocolObject.671" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.674" = type { %"class.std::__1::unique_ptr.675" }
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.blink::protocol::Audits::AffectedFrame"* }
%"class.blink::protocol::Audits::AffectedFrame" = type { %"class.crdtp::ProtocolObject.678", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.678" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.687" = type { %"class.std::__1::unique_ptr.688" }
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* }
%"class.blink::protocol::Audits::BlockedByResponseIssueDetails" = type { %"class.crdtp::ProtocolObject.691", %"class.std::__1::unique_ptr.655", %"class.crdtp::detail::PtrMaybe.674", %"class.crdtp::detail::PtrMaybe.674", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.691" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.697" = type { %"class.std::__1::unique_ptr.698" }
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.blink::protocol::Audits::HeavyAdIssueDetails"* }
%"class.blink::protocol::Audits::HeavyAdIssueDetails" = type { %"class.crdtp::ProtocolObject.701", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.675" }
%"class.crdtp::ProtocolObject.701" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.707" = type { %"class.std::__1::unique_ptr.708" }
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* }
%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails" = type { %"class.crdtp::ProtocolObject.711", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i8, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.674", %"class.crdtp::detail::PtrMaybe.714", %"class.crdtp::detail::ValueMaybe.724" }
%"class.crdtp::ProtocolObject.711" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.714" = type { %"class.std::__1::unique_ptr.715" }
%"class.std::__1::unique_ptr.715" = type { %"class.std::__1::__compressed_pair.716" }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"class.blink::protocol::Audits::SourceCodeLocation"* }
%"class.blink::protocol::Audits::SourceCodeLocation" = type { %"class.crdtp::ProtocolObject.718", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.718" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.724" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.728" = type { %"class.std::__1::unique_ptr.729" }
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* }
%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails" = type { %"class.crdtp::ProtocolObject.732", %"class.std::__1::unique_ptr.715", i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.732" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.738" = type { %"class.std::__1::unique_ptr.739" }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.blink::protocol::Audits::TrustedWebActivityIssueDetails"* }
%"class.blink::protocol::Audits::TrustedWebActivityIssueDetails" = type { %"class.crdtp::ProtocolObject.742", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.724", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.742" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.748" = type { %"class.std::__1::unique_ptr.749" }
%"class.std::__1::unique_ptr.749" = type { %"class.std::__1::__compressed_pair.750" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* }
%"class.blink::protocol::Audits::LowTextContrastIssueDetails" = type { %"class.crdtp::ProtocolObject.752", i32, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.752" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.758" = type { %"class.std::__1::unique_ptr.759" }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.blink::protocol::Audits::CorsIssueDetails"* }
%"class.blink::protocol::Audits::CorsIssueDetails" = type { %"class.crdtp::ProtocolObject.762", %"class.std::__1::unique_ptr.765", i8, %"class.std::__1::unique_ptr.655", %"class.crdtp::detail::PtrMaybe.714", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.774" }
%"class.crdtp::ProtocolObject.762" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.blink::protocol::Network::CorsErrorStatus"* }
%"class.blink::protocol::Network::CorsErrorStatus" = type { %"class.crdtp::ProtocolObject.768", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.768" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.774" = type { %"class.std::__1::unique_ptr.775" }
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.blink::protocol::Network::ClientSecurityState"* }
%"class.blink::protocol::Network::ClientSecurityState" = type { %"class.crdtp::ProtocolObject.778", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.778" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.787" = type { %"class.std::__1::unique_ptr.788" }
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.blink::protocol::Audits::AttributionReportingIssueDetails"* }
%"class.blink::protocol::Audits::AttributionReportingIssueDetails" = type { %"class.crdtp::ProtocolObject.791", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.674", %"class.crdtp::detail::PtrMaybe.654", %"class.crdtp::detail::ValueMaybe.724", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.791" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.797" = type { %"class.std::__1::unique_ptr.798" }
%"class.std::__1::unique_ptr.798" = type { %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"class.blink::protocol::Audits::QuirksModeIssueDetails"* }
%"class.blink::protocol::Audits::QuirksModeIssueDetails" = type { %"class.crdtp::ProtocolObject.801", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.801" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.807" = type { %"class.std::__1::unique_ptr.808" }
%"class.std::__1::unique_ptr.808" = type { %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails"* }
%"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails" = type { %"class.crdtp::ProtocolObject.811", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.714" }
%"class.crdtp::ProtocolObject.811" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.blink::scheduler::WorkerScheduler"* }
%"class.blink::scheduler::WorkerScheduler" = type { %"class.blink::FrameOrWorkerScheduler", %class.scoped_refptr.840, %class.scoped_refptr.840, %class.scoped_refptr.840, %"class.std::__1::map.841", i32, %"class.blink::scheduler::WorkerThreadScheduler"*, i8, i32, %"class.base::WeakPtrFactory.852" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.828", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.828" = type { %"class.WTF::HashTable.829" }
%"class.WTF::HashTable.829" = type <{ %"struct.WTF::KeyValuePair.832"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.832" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.840 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type opaque
%"class.std::__1::map.841" = type { %"class.std::__1::__tree.842" }
%"class.std::__1::__tree.842" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.843", %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.blink::scheduler::WorkerThreadScheduler" = type opaque
%"class.base::WeakPtrFactory.852" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::HashMap.856" = type { %"class.WTF::HashTable.857" }
%"class.WTF::HashTable.857" = type <{ %"struct.WTF::KeyValuePair.860"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.860" = type opaque
%"class.blink::Platform::NestedMessageLoopRunner" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent.861" = type { %"class.blink::PersistentBase.862" }
%"class.blink::PersistentBase.862" = type { %"class.blink::ConsoleMessageStorage"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::CrossThreadPersistent.863" = type { %"class.blink::PersistentBase.864" }
%"class.blink::PersistentBase.864" = type { %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistent.865" = type { %"class.blink::PersistentBase.866" }
%"class.blink::PersistentBase.866" = type { %"class.blink::WorkerInspectorController"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerInspectorController" = type opaque
%class.scoped_refptr.867 = type { %"class.blink::WorkerThread::RefCountedWaitableEvent"* }
%"class.blink::WorkerThread::RefCountedWaitableEvent" = type opaque
%"class.WTF::HashSet.868" = type { %"class.WTF::HashTable.869" }
%"class.WTF::HashTable.869" = type <{ %"class.blink::WorkerThread"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.872" = type { %"class.WTF::HashTable.873" }
%"class.WTF::HashTable.873" = type <{ %"class.std::__1::unique_ptr.876"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.876" = type opaque
%"class.blink::HeapHashMap.877" = type { %"class.WTF::HashMap.880" }
%"class.WTF::HashMap.880" = type { %"class.WTF::HashTable.881" }
%"class.WTF::HashTable.881" = type <{ %"struct.WTF::KeyValuePair.883"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.883" = type opaque
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::OffscreenFontSelector"* }
%"class.blink::OffscreenFontSelector" = type opaque
%"class.std::__1::unique_ptr.886" = type { %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote", %"class.std::__1::map.1057" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1051" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.892, %"class.std::__1::unique_ptr.1006", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.894, i32 }>
%class.scoped_refptr.892 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.894, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.972", %"class.absl::optional.977", %"class.absl::optional.929", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.997", i8, [7 x i8], %class.scoped_refptr.894, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.893" }>
%"class.base::RefCountedThreadSafe.893" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.895", %"class.std::__1::unique_ptr.901", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.907" }
%"class.std::__1::unique_ptr.895" = type { %"class.std::__1::__compressed_pair.896" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.897" }
%"struct.std::__1::__compressed_pair_elem.897" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.907" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.894, %"class.std::__1::unique_ptr.910", %"class.absl::optional.919", %"struct.std::__1::atomic.326", i8, i8, i8, i8, i32, i32, %"class.absl::optional.929", %"class.std::__1::unique_ptr.934", i8, i64, %class.scoped_refptr.968, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.971" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.908 }
%class.scoped_refptr.908 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.909", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.909" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.894, i8, %"class.mojo::ScopedHandleBase.913", %class.scoped_refptr.914, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.915" }
%"class.mojo::ScopedHandleBase.913" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.914 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.915" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.919" = type { %"class.absl::optional_internal::optional_data.920" }
%"class.absl::optional_internal::optional_data.920" = type { %"class.absl::optional_internal::optional_data_base.921" }
%"class.absl::optional_internal::optional_data_base.921" = type { %"class.absl::optional_internal::optional_data_dtor_base.922" }
%"class.absl::optional_internal::optional_data_dtor_base.922" = type { i8, %union.anon.923 }
%union.anon.923 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.924", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.924" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.937", i8, i64, %class.scoped_refptr.938, %class.scoped_refptr.963 }
%"class.base::RepeatingCallback.937" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.938 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.939", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.941", %"class.std::__1::map.952", i8, [7 x i8] }>
%"class.base::RefCounted.939" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.940 }
%class.scoped_refptr.940 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.941" = type { %"class.std::__1::__tree.942" }
%"class.std::__1::__tree.942" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.943", %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.std::__1::map.952" = type { %"class.std::__1::__tree.953" }
%"class.std::__1::__tree.953" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.954", %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%class.scoped_refptr.963 = type { %"class.base::RefCountedData.964"* }
%"class.base::RefCountedData.964" = type opaque
%class.scoped_refptr.968 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.969 }
%class.scoped_refptr.969 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1310", [4 x i8], %"class.base::RepeatingCallback.1009", %class.scoped_refptr.894, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1310" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.1009" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.971" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.972" = type { %"class.absl::optional_internal::optional_data.973" }
%"class.absl::optional_internal::optional_data.973" = type { %"class.absl::optional_internal::optional_data_base.974" }
%"class.absl::optional_internal::optional_data_base.974" = type { %"class.absl::optional_internal::optional_data_dtor_base.975" }
%"class.absl::optional_internal::optional_data_dtor_base.975" = type { i8, %union.anon.976 }
%union.anon.976 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.977" = type { %"class.absl::optional_internal::optional_data.978" }
%"class.absl::optional_internal::optional_data.978" = type { %"class.absl::optional_internal::optional_data_base.979" }
%"class.absl::optional_internal::optional_data_base.979" = type { %"class.absl::optional_internal::optional_data_dtor_base.980" }
%"class.absl::optional_internal::optional_data_dtor_base.980" = type { i8, [7 x i8], %union.anon.981 }
%union.anon.981 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.929" = type { %"class.absl::optional_internal::optional_data.930" }
%"class.absl::optional_internal::optional_data.930" = type { %"class.absl::optional_internal::optional_data_base.931" }
%"class.absl::optional_internal::optional_data_base.931" = type { %"class.absl::optional_internal::optional_data_dtor_base.932" }
%"class.absl::optional_internal::optional_data_dtor_base.932" = type { i8, %union.anon.933 }
%union.anon.933 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.982 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.982 = type { %"class.std::__1::map.985" }
%"class.std::__1::map.985" = type { %"class.std::__1::__tree.986" }
%"class.std::__1::__tree.986" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.987", %"class.std::__1::__compressed_pair.991" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.996"*, i64 }
%"class.std::__1::unique_ptr.996" = type opaque
%"class.std::__1::map.997" = type { %"class.std::__1::__tree.998" }
%"class.std::__1::__tree.998" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.999", %"class.std::__1::__compressed_pair.1003" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.std::__1::unique_ptr.1006" = type { %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.1009", %"class.base::OnceCallback.1010", %"class.absl::optional.67", %"class.absl::optional.1011", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1018", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1026", %"class.std::__1::map.1037", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1046", i8, %class.scoped_refptr.894, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1047" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.1010" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1011" = type { %"class.absl::optional_internal::optional_data.1012" }
%"class.absl::optional_internal::optional_data.1012" = type { %"class.absl::optional_internal::optional_data_base.1013" }
%"class.absl::optional_internal::optional_data_base.1013" = type { %"class.absl::optional_internal::optional_data_dtor_base.1014" }
%"class.absl::optional_internal::optional_data_dtor_base.1014" = type { i8, %union.anon.1015 }
%union.anon.1015 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.894, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1016" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.1016" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1017 }
%class.scoped_refptr.1017 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1021", %class.scoped_refptr.1022 }
%"class.base::RepeatingCallback.1021" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1022 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.893", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.1026" = type { %"class.std::__1::__tree.1027" }
%"class.std::__1::__tree.1027" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1028", %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.std::__1::map.1037" = type { %"class.std::__1::__tree.1038" }
%"class.std::__1::__tree.1038" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1039", %"class.std::__1::__compressed_pair.1043" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.base::OnceCallback.1046" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1047" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.894 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.1051" = type { %"class.std::__1::__compressed_pair.1052" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.1053" }
%"struct.std::__1::__compressed_pair_elem.1053" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.1057" = type { %"class.std::__1::__tree.1058" }
%"class.std::__1::__tree.1058" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1059", %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.blink::Member.1068" = type { %"class.blink::MemberBase.1069" }
%"class.blink::MemberBase.1069" = type { %"class.blink::Script"* }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.128", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias", [6 x i8] }>
%"class.absl::optional.1072" = type { %"class.absl::optional_internal::optional_data.1073" }
%"class.absl::optional_internal::optional_data.1073" = type { %"class.absl::optional_internal::optional_data_base.1074" }
%"class.absl::optional_internal::optional_data_base.1074" = type { %"class.absl::optional_internal::optional_data_dtor_base.1075" }
%"class.absl::optional_internal::optional_data_dtor_base.1075" = type { i8, [7 x i8], %union.anon.1076 }
%union.anon.1076 = type { %"struct.v8_inspector::V8StackTraceId" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.1077", i8, [7 x i8] }>
%"struct.std::__1::pair.1077" = type { i64, i64 }
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1084" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"struct.blink::WorkerMainScriptLoadParameters"* }
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.1087", %"class.mojo::ScopedHandleBase.1284", %"class.mojo::StructPtr.1285", %"class.std::__1::vector.1293", %"class.std::__1::vector.1300" }
%"class.mojo::StructPtr.1087" = type { %"class.std::__1::unique_ptr.1088" }
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.1091, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.1106", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.1122", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.1128", %"class.std::__1::vector.1135", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.111", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.1170", %"class.absl::optional.1270", %"class.absl::optional.72", %"class.std::__1::vector.1135", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.1091 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.1092", %"class.std::__1::vector.1093", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.1092" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.1093" = type { %"class.std::__1::__vector_base.1094" }
%"class.std::__1::__vector_base.1094" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.1095" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.1096" }
%"struct.std::__1::__compressed_pair_elem.1096" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.1106" = type { %"class.std::__1::unique_ptr.1107" }
%"class.std::__1::unique_ptr.1107" = type { %"class.std::__1::__compressed_pair.1108" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.1110", %"class.std::__1::vector.1110", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.1110" = type { %"class.std::__1::__vector_base.1111" }
%"class.std::__1::__vector_base.1111" = type { %"class.mojo::InlinedStructPtr.1112"*, %"class.mojo::InlinedStructPtr.1112"*, %"class.std::__1::__compressed_pair.1114" }
%"class.mojo::InlinedStructPtr.1112" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.1115" }
%"struct.std::__1::__compressed_pair_elem.1115" = type { %"class.mojo::InlinedStructPtr.1112"* }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.1122" = type { %"class.std::__1::__vector_base.1123" }
%"class.std::__1::__vector_base.1123" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.1124" }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %class.GURL* }
%"class.absl::optional.1128" = type { %"class.absl::optional_internal::optional_data.1129" }
%"class.absl::optional_internal::optional_data.1129" = type { %"class.absl::optional_internal::optional_data_base.1130" }
%"class.absl::optional_internal::optional_data_base.1130" = type { %"class.absl::optional_internal::optional_data_dtor_base.1131" }
%"class.absl::optional_internal::optional_data_dtor_base.1131" = type { i8, [7 x i8], %union.anon.1132 }
%union.anon.1132 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.1133, %class.scoped_refptr.1133, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.1153", %"class.std::__1::basic_string", %"class.std::__1::vector.1161", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.1133 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.1134", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.1142", %"class.std::__1::vector.1146" }
%"class.base::RefCountedThreadSafe.1134" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.1135", %"class.std::__1::vector.1135", %"class.std::__1::vector.1135", %"class.std::__1::vector.1135" }
%"class.std::__1::unique_ptr.1142" = type { %"class.std::__1::__compressed_pair.1143" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.1146" = type { %"class.std::__1::__vector_base.1147" }
%"class.std::__1::__vector_base.1147" = type { %"class.std::__1::unique_ptr.1142"*, %"class.std::__1::unique_ptr.1142"*, %"class.std::__1::__compressed_pair.1148" }
%"class.std::__1::__compressed_pair.1148" = type { %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"class.std::__1::unique_ptr.1142"* }
%"class.std::__1::vector.1153" = type { %"class.std::__1::__vector_base.1154" }
%"class.std::__1::__vector_base.1154" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.1156" }
%"class.net::HashValue" = type { i32, %union.anon.1155 }
%union.anon.1155 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1157" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.1161" = type { %"class.std::__1::__vector_base.1162" }
%"class.std::__1::__vector_base.1162" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.1165" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.1163, i32, [4 x i8] }>
%class.scoped_refptr.1163 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.1164", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.1164" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.mojo::StructPtr.1170" = type { %"class.std::__1::unique_ptr.1171" }
%"class.std::__1::unique_ptr.1171" = type { %"class.std::__1::__compressed_pair.1172" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.1173" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.1174", %"class.mojo::StructPtr.1222", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.1234", %"class.base::TimeDelta", %"class.absl::optional.1234", i32, [4 x i8], %"class.std::__1::vector.1246", %"class.mojo::StructPtr.1260", i8, [7 x i8] }>
%"class.std::__1::vector.1174" = type { %"class.std::__1::__vector_base.1175" }
%"class.std::__1::__vector_base.1175" = type { %"class.mojo::StructPtr.1176"*, %"class.mojo::StructPtr.1176"*, %"class.std::__1::__compressed_pair.1217" }
%"class.mojo::StructPtr.1176" = type { %"class.std::__1::unique_ptr.1177" }
%"class.std::__1::unique_ptr.1177" = type { %"class.std::__1::__compressed_pair.1178" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1180", %"class.base::flat_map", %"class.base::flat_map.1195", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1205", i8, %"class.std::__1::vector.1135", i32, %"class.mojo::StructPtr.1207", %"class.std::__1::vector.1135" }
%"class.mojo::StructPtr.1180" = type { %"class.std::__1::unique_ptr.1181" }
%"class.std::__1::unique_ptr.1181" = type { %"class.std::__1::__compressed_pair.1182" }
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.1183" }
%"struct.std::__1::__compressed_pair_elem.1183" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1187" }
%"class.std::__1::vector.1187" = type { %"class.std::__1::__vector_base.1188" }
%"class.std::__1::__vector_base.1188" = type { %"struct.std::__1::pair.1189"*, %"struct.std::__1::pair.1189"*, %"class.std::__1::__compressed_pair.1190" }
%"struct.std::__1::pair.1189" = type opaque
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"struct.std::__1::__compressed_pair_elem.1191" = type { %"struct.std::__1::pair.1189"* }
%"class.base::flat_map.1195" = type { %"class.base::internal::flat_tree.1196" }
%"class.base::internal::flat_tree.1196" = type { %"class.std::__1::vector.1197" }
%"class.std::__1::vector.1197" = type { %"class.std::__1::__vector_base.1198" }
%"class.std::__1::__vector_base.1198" = type { %"struct.std::__1::pair.1199"*, %"struct.std::__1::pair.1199"*, %"class.std::__1::__compressed_pair.1200" }
%"struct.std::__1::pair.1199" = type opaque
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.1201" }
%"struct.std::__1::__compressed_pair_elem.1201" = type { %"struct.std::__1::pair.1199"* }
%"class.mojo::InlinedStructPtr.1205" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.1207" = type { %"class.std::__1::unique_ptr.1208" }
%"class.std::__1::unique_ptr.1208" = type { %"class.std::__1::__compressed_pair.1209" }
%"class.std::__1::__compressed_pair.1209" = type { %"struct.std::__1::__compressed_pair_elem.1210" }
%"struct.std::__1::__compressed_pair_elem.1210" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.1135", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.mojo::StructPtr.1176"* }
%"class.mojo::StructPtr.1222" = type { %"class.std::__1::unique_ptr.1223" }
%"class.std::__1::unique_ptr.1223" = type { %"class.std::__1::__compressed_pair.1224" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.1229", i32, %"class.absl::optional.1229" }
%"class.absl::optional.1229" = type { %"class.absl::optional_internal::optional_data.1230" }
%"class.absl::optional_internal::optional_data.1230" = type { %"class.absl::optional_internal::optional_data_base.1231" }
%"class.absl::optional_internal::optional_data_base.1231" = type { %"class.absl::optional_internal::optional_data_dtor_base.1232" }
%"class.absl::optional_internal::optional_data_dtor_base.1232" = type { i8, %union.anon.1233 }
%union.anon.1233 = type { %"class.std::__1::basic_string" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.1229", i32, %"class.absl::optional.1229" }
%"class.absl::optional.1234" = type { %"class.absl::optional_internal::optional_data.1235" }
%"class.absl::optional_internal::optional_data.1235" = type { %"class.absl::optional_internal::optional_data_base.1236" }
%"class.absl::optional_internal::optional_data_base.1236" = type { %"class.absl::optional_internal::optional_data_dtor_base.1237" }
%"class.absl::optional_internal::optional_data_dtor_base.1237" = type { i8, %union.anon.1238 }
%union.anon.1238 = type { %"class.std::__1::vector.1239" }
%"class.std::__1::vector.1239" = type { %"class.std::__1::__vector_base.1240" }
%"class.std::__1::__vector_base.1240" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1241" }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.1242" }
%"struct.std::__1::__compressed_pair_elem.1242" = type { i32* }
%"class.std::__1::vector.1246" = type { %"class.std::__1::__vector_base.1247" }
%"class.std::__1::__vector_base.1247" = type { %"class.mojo::StructPtr.1248"*, %"class.mojo::StructPtr.1248"*, %"class.std::__1::__compressed_pair.1255" }
%"class.mojo::StructPtr.1248" = type { %"class.std::__1::unique_ptr.1249" }
%"class.std::__1::unique_ptr.1249" = type { %"class.std::__1::__compressed_pair.1250" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.1251" }
%"struct.std::__1::__compressed_pair_elem.1251" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.1229" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.1256" }
%"struct.std::__1::__compressed_pair_elem.1256" = type { %"class.mojo::StructPtr.1248"* }
%"class.mojo::StructPtr.1260" = type { %"class.std::__1::unique_ptr.1261" }
%"class.std::__1::unique_ptr.1261" = type { %"class.std::__1::__compressed_pair.1262" }
%"class.std::__1::__compressed_pair.1262" = type { %"struct.std::__1::__compressed_pair_elem.1263" }
%"struct.std::__1::__compressed_pair_elem.1263" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.1135"* }
%"class.absl::optional.1270" = type { %"class.absl::optional_internal::optional_data.1271" }
%"class.absl::optional_internal::optional_data.1271" = type { %"class.absl::optional_internal::optional_data_base.1272" }
%"class.absl::optional_internal::optional_data_base.1272" = type { %"class.absl::optional_internal::optional_data_dtor_base.1273" }
%"class.absl::optional_internal::optional_data_dtor_base.1273" = type { i8, %union.anon.1274 }
%union.anon.1274 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.1275" }
%"class.std::__1::unique_ptr.1275" = type { %"class.std::__1::__compressed_pair.1276" }
%"class.std::__1::__compressed_pair.1276" = type { %"struct.std::__1::__compressed_pair_elem.1277" }
%"struct.std::__1::__compressed_pair_elem.1277" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.1135", %"class.absl::optional.1229", %"class.std::__1::vector.1135", %"class.std::__1::vector.1135" }
%"class.std::__1::vector.1135" = type { %"class.std::__1::__vector_base.1136" }
%"class.std::__1::__vector_base.1136" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1137" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"class.std::__1::basic_string"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.1100" }
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102" }
%"class.mojo::ScopedHandleBase.1284" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.1285" = type { %"class.std::__1::unique_ptr.1286" }
%"class.std::__1::unique_ptr.1286" = type { %"class.std::__1::__compressed_pair.1287" }
%"class.std::__1::__compressed_pair.1287" = type { %"struct.std::__1::__compressed_pair_elem.1288" }
%"struct.std::__1::__compressed_pair_elem.1288" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote.1289", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote.1289" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::vector.1293" = type { %"class.std::__1::__vector_base.1294" }
%"class.std::__1::__vector_base.1294" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.1295" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::__compressed_pair.1295" = type { %"struct.std::__1::__compressed_pair_elem.1296" }
%"struct.std::__1::__compressed_pair_elem.1296" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.1300" = type { %"class.std::__1::__vector_base.1301" }
%"class.std::__1::__vector_base.1301" = type { %"class.mojo::StructPtr.1087"*, %"class.mojo::StructPtr.1087"*, %"class.std::__1::__compressed_pair.1302" }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.1303" }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"class.mojo::StructPtr.1087"* }
%"class.blink::ModuleScriptFetcher" = type { %"class.blink::ResourceClient.base", [7 x i8] }
%"class.blink::FetchParameters" = type <{ %"class.blink::ResourceRequest", %"class.blink::TextResourceDecoderOptions", %"struct.blink::ResourceLoaderOptions", i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.1457, %"class.mojo::PendingRemote.1458" }
%class.scoped_refptr.1457 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.1458" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.blink::ModuleScriptFetcher::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.1459" = type { %"class.std::__1::__compressed_pair.1460" }
%"class.std::__1::__compressed_pair.1460" = type { %"struct.std::__1::__compressed_pair_elem.1461" }
%"struct.std::__1::__compressed_pair_elem.1461" = type { %"class.blink::InstalledScriptsManager::ScriptData"* }
%"class.blink::InstalledScriptsManager::ScriptData" = type <{ %"class.blink::KURL", %"class.WTF::String", %"class.std::__1::unique_ptr.1462", %"class.blink::HTTPHeaderMap", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1462" = type { %"class.std::__1::__compressed_pair.1463" }
%"class.std::__1::__compressed_pair.1463" = type { %"struct.std::__1::__compressed_pair_elem.1464" }
%"struct.std::__1::__compressed_pair_elem.1464" = type { %"class.WTF::Vector.1465"* }
%"class.WTF::Vector.1465" = type { %"class.WTF::VectorBuffer.1466" }
%"class.WTF::VectorBuffer.1466" = type { %"class.WTF::VectorBufferBase.1467" }
%"class.WTF::VectorBufferBase.1467" = type { i8*, i32, i32 }
%"class.blink::ContentSecurityPolicyResponseHeaders" = type <{ %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", i8, [7 x i8] }>
%"class.blink::ModuleScriptCreationParams" = type <{ %"class.blink::KURL", %"class.blink::KURL", i32, i32, i8, [7 x i8], %"class.blink::ParkableString", %"class.WTF::String", %"class.blink::Persistent.1522", %"class.blink::Persistent.1526", i32, [4 x i8] }>
%"class.blink::ParkableString" = type { %class.scoped_refptr.1503 }
%class.scoped_refptr.1503 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1504", %"class.WTF::String", %"class.std::__1::unique_ptr.1506" }
%"class.WTF::RefCounted.1504" = type { %"class.base::RefCounted.1505" }
%"class.base::RefCounted.1505" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1506" = type { %"class.std::__1::__compressed_pair.1507" }
%"class.std::__1::__compressed_pair.1507" = type { %"struct.std::__1::__compressed_pair_elem.1508" }
%"struct.std::__1::__compressed_pair_elem.1508" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1462", %"class.std::__1::unique_ptr.1509", %"class.WTF::Vector.1515", i8, i32 }
%"class.std::__1::unique_ptr.1509" = type { %"class.std::__1::__compressed_pair.1510" }
%"class.std::__1::__compressed_pair.1510" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"struct.std::__1::__compressed_pair_elem.1511" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1515" = type { %"class.WTF::VectorBuffer.1516" }
%"class.WTF::VectorBuffer.1516" = type { %"class.WTF::VectorBufferBase.1467", [32 x i8] }
%"class.blink::Persistent.1522" = type { %"class.blink::PersistentBase.1523" }
%"class.blink::PersistentBase.1523" = type { %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SingleCachedMetadataHandler" = type <{ %"class.blink::CachedMetadataHandler", i8, [7 x i8] }>
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.blink::Persistent.1526" = type { %"class.blink::PersistentBase.1527" }
%"class.blink::PersistentBase.1527" = type { %"class.blink::ScriptStreamer"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptStreamer" = type { %"class.blink::ThreadState::PrefinalizerRegistration.1530", i32, %"class.blink::Member.1531", %"class.blink::Member.1555", %"class.mojo::ScopedHandleBase.1284", %"class.std::__1::unique_ptr.910", %"class.blink::SourceStream"*, %"class.std::__1::unique_ptr.1557", i32, %"class.WTF::String", i64, i32, i32, %class.scoped_refptr.823 }
%"class.blink::ThreadState::PrefinalizerRegistration.1530" = type { i8 }
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::ScriptResource"* }
%"class.blink::ScriptResource" = type <{ %"class.blink::TextResource", %"class.blink::ParkableString", %"class.blink::Member.1551", i32, i32, %"class.blink::Member.1553", i32, [4 x i8] }>
%"class.blink::TextResource" = type { %"class.blink::Resource", %"class.std::__1::unique_ptr.1533" }
%"class.std::__1::unique_ptr.1533" = type { %"class.std::__1::__compressed_pair.1534" }
%"class.std::__1::__compressed_pair.1534" = type { %"struct.std::__1::__compressed_pair_elem.1535" }
%"struct.std::__1::__compressed_pair_elem.1535" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.1536", i32, %"class.WTF::Vector.340", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1542" }
%"class.std::__1::unique_ptr.1536" = type { %"class.std::__1::__compressed_pair.1537" }
%"class.std::__1::__compressed_pair.1537" = type { %"struct.std::__1::__compressed_pair_elem.1538" }
%"struct.std::__1::__compressed_pair_elem.1538" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1542" = type { %"class.std::__1::__compressed_pair.1543" }
%"class.std::__1::__compressed_pair.1543" = type { %"struct.std::__1::__compressed_pair_elem.1544" }
%"struct.std::__1::__compressed_pair_elem.1544" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::Member.1551" = type { %"class.blink::MemberBase.1552" }
%"class.blink::MemberBase.1552" = type { %"class.blink::ScriptStreamer"* }
%"class.blink::Member.1553" = type { %"class.blink::MemberBase.1554" }
%"class.blink::MemberBase.1554" = type { %"class.blink::ScriptCachedMetadataHandler"* }
%"class.blink::ScriptCachedMetadataHandler" = type opaque
%"class.blink::Member.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::ResponseBodyLoaderClient"* }
%"class.blink::ResponseBodyLoaderClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::SourceStream" = type opaque
%"class.std::__1::unique_ptr.1557" = type { %"class.std::__1::__compressed_pair.1558" }
%"class.std::__1::__compressed_pair.1558" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"struct.std::__1::__compressed_pair_elem.1559" = type { %"class.v8::ScriptCompiler::StreamedSource"* }
%"class.v8::ScriptCompiler::StreamedSource" = type { %"class.std::__1::unique_ptr.1560" }
%"class.std::__1::unique_ptr.1560" = type { %"class.std::__1::__compressed_pair.1561" }
%"class.std::__1::__compressed_pair.1561" = type { %"struct.std::__1::__compressed_pair_elem.1562" }
%"struct.std::__1::__compressed_pair_elem.1562" = type { %"struct.v8::internal::ScriptStreamingData"* }
%"struct.v8::internal::ScriptStreamingData" = type opaque
%"class.blink::InstalledScriptsManager" = type { i32 (...)** }
%"struct.std::__1::default_delete.1474" = type { i8 }
%"class.blink::DocumentLoader" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink26ModuleScriptCreationParamsD2Ev = comdat any

$_ZN5blink14ResourceClientD2Ev = comdat any

$_ZN5blink41InstalledServiceWorkerModuleScriptFetcherD0Ev = comdat any

$_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm = comdat any

$_ZN5blink14ResourceClient14NotifyFinishedEPNS_8ResourceE = comdat any

$_ZNK5blink14ResourceClient20IsFontResourceClientEv = comdat any

$_ZNK5blink14ResourceClient19IsRawResourceClientEv = comdat any

$_ZNK5blink41InstalledServiceWorkerModuleScriptFetcher9DebugNameEv = comdat any

$_ZNKSt3__114default_deleteIN5blink23InstalledScriptsManager10ScriptDataEEclEPS3_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA39_KcRKN3WTF6StringEDniEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14ConsoleMessageEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14ConsoleMessageEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14ConsoleMessageEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ConsoleMessageEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17WorkerGlobalScopeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink41InstalledServiceWorkerModuleScriptFetcherE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InstalledServiceWorkerModuleScriptFetcher"*, %"class.blink::Visitor"*)* @_ZNK5blink41InstalledServiceWorkerModuleScriptFetcher5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ResourceClient"*)* @_ZN5blink14ResourceClientD2Ev to i8*), i8* bitcast (void (%"class.blink::InstalledServiceWorkerModuleScriptFetcher"*)* @_ZN5blink41InstalledServiceWorkerModuleScriptFetcherD0Ev to i8*), i8* bitcast (void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64)* @_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm to i8*), i8* bitcast (void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*)* @_ZN5blink14ResourceClient14NotifyFinishedEPNS_8ResourceE to i8*), i8* bitcast (i1 (%"class.blink::ResourceClient"*)* @_ZNK5blink14ResourceClient20IsFontResourceClientEv to i8*), i8* bitcast (i1 (%"class.blink::ResourceClient"*)* @_ZNK5blink14ResourceClient19IsRawResourceClientEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InstalledServiceWorkerModuleScriptFetcher"*)* @_ZNK5blink41InstalledServiceWorkerModuleScriptFetcher9DebugNameEv to i8*), i8* bitcast (void (%"class.blink::InstalledServiceWorkerModuleScriptFetcher"*, %"class.blink::FetchParameters"*, i32, %"class.blink::ResourceFetcher"*, i32, %"class.blink::ModuleScriptFetcher::Client"*)* @_ZN5blink41InstalledServiceWorkerModuleScriptFetcher5FetchERNS_15FetchParametersENS_10ModuleTypeEPNS_15ResourceFetcherENS_16ModuleGraphLevelEPNS_19ModuleScriptFetcher6ClientE to i8*)] }, align 8
@.str = private unnamed_addr constant [39 x i8] c"Failed to load the script unexpectedly\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"InstalledServiceWorkerModuleScriptFetcher\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14ConsoleMessageEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::ConsoleMessage>, WTF::VectorTraits<blink::Member<blink::ConsoleMessage> > >]\00", align 1

@_ZN5blink41InstalledServiceWorkerModuleScriptFetcherC1EPNS_17WorkerGlobalScopeEN4base7PassKeyINS_18ModuleScriptLoaderEEE = hidden unnamed_addr alias void (%"class.blink::InstalledServiceWorkerModuleScriptFetcher"*, %"class.blink::WorkerGlobalScope"*), void (%"class.blink::InstalledServiceWorkerModuleScriptFetcher"*, %"class.blink::WorkerGlobalScope"*)* @_ZN5blink41InstalledServiceWorkerModuleScriptFetcherC2EPNS_17WorkerGlobalScopeEN4base7PassKeyINS_18ModuleScriptLoaderEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink41InstalledServiceWorkerModuleScriptFetcherC2EPNS_17WorkerGlobalScopeEN4base7PassKeyINS_18ModuleScriptLoaderEEE(%"class.blink::InstalledServiceWorkerModuleScriptFetcher"*, %"class.blink::WorkerGlobalScope"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::InstalledServiceWorkerModuleScriptFetcher"* %0 to %"class.blink::ModuleScriptFetcher"*
  tail call void @_ZN5blink19ModuleScriptFetcherC2EN4base7PassKeyINS_18ModuleScriptLoaderEEE(%"class.blink::ModuleScriptFetcher"* %3) #10
  %4 = getelementptr inbounds %"class.blink::InstalledServiceWorkerModuleScriptFetcher", %"class.blink::InstalledServiceWorkerModuleScriptFetcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink41InstalledServiceWorkerModuleScriptFetcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::InstalledServiceWorkerModuleScriptFetcher", %"class.blink::InstalledServiceWorkerModuleScriptFetcher"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::WorkerGlobalScope"* %1, %"class.blink::WorkerGlobalScope"** %5, align 8
  ret void
}

declare void @_ZN5blink19ModuleScriptFetcherC2EN4base7PassKeyINS_18ModuleScriptLoaderEEE(%"class.blink::ModuleScriptFetcher"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink41InstalledServiceWorkerModuleScriptFetcher5FetchERNS_15FetchParametersENS_10ModuleTypeEPNS_15ResourceFetcherENS_16ModuleGraphLevelEPNS_19ModuleScriptFetcher6ClientE(%"class.blink::InstalledServiceWorkerModuleScriptFetcher"* nocapture, %"class.blink::FetchParameters"* dereferenceable(1344), i32, %"class.blink::ResourceFetcher"* nocapture readnone, i32, %"class.blink::ModuleScriptFetcher::Client"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.1459", align 8
  %8 = alloca %"class.blink::HeapVector.512", align 8
  %9 = alloca %"class.blink::ConsoleMessage"*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %"class.blink::KURL", align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::Vector.477", align 8
  %18 = alloca %"class.blink::ContentSecurityPolicyResponseHeaders", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.blink::HeapVector.512", align 8
  %21 = alloca %"class.blink::ConsoleMessage"*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca %"class.blink::ModuleScriptCreationParams", align 8
  %27 = alloca %"class.blink::ParkableString", align 8
  %28 = alloca %class.scoped_refptr, align 8
  %29 = getelementptr inbounds %"class.blink::InstalledServiceWorkerModuleScriptFetcher", %"class.blink::InstalledServiceWorkerModuleScriptFetcher"* %0, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %29, align 8
  %31 = bitcast %"class.blink::WorkerGlobalScope"* %30 to %"class.blink::InstalledScriptsManager"* (%"class.blink::WorkerGlobalScope"*)***
  %32 = load %"class.blink::InstalledScriptsManager"* (%"class.blink::WorkerGlobalScope"*)**, %"class.blink::InstalledScriptsManager"* (%"class.blink::WorkerGlobalScope"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.blink::InstalledScriptsManager"* (%"class.blink::WorkerGlobalScope"*)*, %"class.blink::InstalledScriptsManager"* (%"class.blink::WorkerGlobalScope"*)** %32, i64 64
  %34 = load %"class.blink::InstalledScriptsManager"* (%"class.blink::WorkerGlobalScope"*)*, %"class.blink::InstalledScriptsManager"* (%"class.blink::WorkerGlobalScope"*)** %33, align 8
  %35 = tail call %"class.blink::InstalledScriptsManager"* %34(%"class.blink::WorkerGlobalScope"* %30) #10
  %36 = getelementptr inbounds %"class.blink::InstalledServiceWorkerModuleScriptFetcher", %"class.blink::InstalledServiceWorkerModuleScriptFetcher"* %0, i64 0, i32 3
  store i32 %2, i32* %36, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.1459"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.1459", %"class.std::__1::unique_ptr.1459"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::InstalledScriptsManager::ScriptData"* inttoptr (i64 -6148914691236517206 to %"class.blink::InstalledScriptsManager::ScriptData"*), %"class.blink::InstalledScriptsManager::ScriptData"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 0, i32 0
  %40 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %39) #10
  %41 = bitcast %"class.blink::InstalledScriptsManager"* %35 to %"class.blink::InstalledScriptsManager::ScriptData"* (%"class.blink::InstalledScriptsManager"*, %"class.blink::KURL"*)***
  %42 = load %"class.blink::InstalledScriptsManager::ScriptData"* (%"class.blink::InstalledScriptsManager"*, %"class.blink::KURL"*)**, %"class.blink::InstalledScriptsManager::ScriptData"* (%"class.blink::InstalledScriptsManager"*, %"class.blink::KURL"*)*** %41, align 8
  %43 = getelementptr inbounds %"class.blink::InstalledScriptsManager::ScriptData"* (%"class.blink::InstalledScriptsManager"*, %"class.blink::KURL"*)*, %"class.blink::InstalledScriptsManager::ScriptData"* (%"class.blink::InstalledScriptsManager"*, %"class.blink::KURL"*)** %42, i64 1
  %44 = load %"class.blink::InstalledScriptsManager::ScriptData"* (%"class.blink::InstalledScriptsManager"*, %"class.blink::KURL"*)*, %"class.blink::InstalledScriptsManager::ScriptData"* (%"class.blink::InstalledScriptsManager"*, %"class.blink::KURL"*)** %43, align 8
  %45 = tail call %"class.blink::InstalledScriptsManager::ScriptData"* %44(%"class.blink::InstalledScriptsManager"* %35, %"class.blink::KURL"* dereferenceable(112) %40) #10
  store %"class.blink::InstalledScriptsManager::ScriptData"* %45, %"class.blink::InstalledScriptsManager::ScriptData"** %38, align 8
  %46 = icmp eq %"class.blink::InstalledScriptsManager::ScriptData"* %45, null
  br i1 %46, label %47, label %62

47:                                               ; preds = %6
  %48 = bitcast %"class.blink::HeapVector.512"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #10
  %49 = bitcast %"class.blink::ConsoleMessage"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #10
  %50 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #10
  store i32 1, i32* %10, align 4
  %51 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #10
  store i32 3, i32* %11, align 4
  %52 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %39) #10
  %53 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %52, i64 0, i32 4
  %54 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  store i8* null, i8** %12, align 8
  %55 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #10
  store i32 0, i32* %13, align 4
  %56 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA39_KcRKN3WTF6StringEDniEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %10, i32* nonnull dereferenceable(4) %11, [39 x i8]* nonnull dereferenceable(39) @.str, %"class.WTF::String"* dereferenceable(8) %53, i8** nonnull dereferenceable(8) %12, i32* nonnull dereferenceable(4) %13) #10
  store %"class.blink::ConsoleMessage"* %56, %"class.blink::ConsoleMessage"** %9, align 8
  %57 = getelementptr inbounds %"class.blink::HeapVector.512", %"class.blink::HeapVector.512"* %8, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14ConsoleMessageEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.515"* nonnull %57, %"class.blink::ConsoleMessage"** nonnull dereferenceable(8) %9) #10
  %58 = bitcast %"class.blink::ModuleScriptFetcher::Client"* %5 to void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::HeapVector.512"*)***
  %59 = load void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::HeapVector.512"*)**, void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::HeapVector.512"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::HeapVector.512"*)*, void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::HeapVector.512"*)** %59, i64 1
  %61 = load void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::HeapVector.512"*)*, void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::HeapVector.512"*)** %60, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #10
  call void %61(%"class.blink::ModuleScriptFetcher::Client"* %5, %"class.blink::HeapVector.512"* nonnull dereferenceable(16) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #10
  br label %342

62:                                               ; preds = %6
  %63 = icmp eq i32 %4, 0
  br i1 %63, label %64, label %223

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %65) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 112, i1 false)
  %66 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %39) #10
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %14, %"class.blink::KURL"* dereferenceable(112) %66) #10
  %67 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #10
  store i32 1, i32* %15, align 4
  %68 = load %"class.blink::InstalledScriptsManager::ScriptData"*, %"class.blink::InstalledScriptsManager::ScriptData"** %38, align 8
  %69 = call %"class.WTF::StringImpl"* @_ZN5blink23InstalledScriptsManager10ScriptData17GetReferrerPolicyEv(%"class.blink::InstalledScriptsManager::ScriptData"* %68) #10
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %106, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #10
  br label %84

84:                                               ; preds = %80, %83
  %85 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #10
  %86 = load %"class.blink::InstalledScriptsManager::ScriptData"*, %"class.blink::InstalledScriptsManager::ScriptData"** %38, align 8
  %87 = call %"class.WTF::StringImpl"* @_ZN5blink23InstalledScriptsManager10ScriptData17GetReferrerPolicyEv(%"class.blink::InstalledScriptsManager::ScriptData"* %86) #10
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %88, align 8
  %89 = call zeroext i1 @_ZN5blink14SecurityPolicy29ReferrerPolicyFromHeaderValueERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* nonnull dereferenceable(8) %16, i32 1, i32* nonnull %15) #10
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #10
  br label %105

105:                                              ; preds = %84, %101, %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #10
  br label %106

106:                                              ; preds = %64, %105
  %107 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %29, align 8
  %108 = load i32, i32* %15, align 4
  %109 = load %"class.blink::InstalledScriptsManager::ScriptData"*, %"class.blink::InstalledScriptsManager::ScriptData"** %38, align 8
  %110 = getelementptr inbounds %"class.blink::InstalledScriptsManager::ScriptData", %"class.blink::InstalledScriptsManager::ScriptData"* %109, i64 0, i32 4
  %111 = load i32, i32* %110, align 8
  %112 = bitcast %"class.blink::ContentSecurityPolicyResponseHeaders"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %112) #10
  call void @_ZN5blink23InstalledScriptsManager10ScriptData39GetContentSecurityPolicyResponseHeadersEv(%"class.blink::ContentSecurityPolicyResponseHeaders"* nonnull sret %18, %"class.blink::InstalledScriptsManager::ScriptData"* %109) #10
  call void @_ZN5blink33ParseContentSecurityPolicyHeadersERKNS_36ContentSecurityPolicyResponseHeadersE(%"class.WTF::Vector.477"* nonnull sret %17, %"class.blink::ContentSecurityPolicyResponseHeaders"* nonnull dereferenceable(136) %18) #10
  %113 = load %"class.blink::InstalledScriptsManager::ScriptData"*, %"class.blink::InstalledScriptsManager::ScriptData"** %38, align 8
  %114 = call %"class.WTF::Vector.18"* @_ZN5blink23InstalledScriptsManager10ScriptData23CreateOriginTrialTokensEv(%"class.blink::InstalledScriptsManager::ScriptData"* %113) #10
  %115 = bitcast %"class.blink::WorkerGlobalScope"* %107 to void (%"class.blink::WorkerGlobalScope"*, %"class.blink::KURL"*, i32, i32, %"class.WTF::Vector.477"*, %"class.WTF::Vector.18"*, i64)***
  %116 = load void (%"class.blink::WorkerGlobalScope"*, %"class.blink::KURL"*, i32, i32, %"class.WTF::Vector.477"*, %"class.WTF::Vector.18"*, i64)**, void (%"class.blink::WorkerGlobalScope"*, %"class.blink::KURL"*, i32, i32, %"class.WTF::Vector.477"*, %"class.WTF::Vector.18"*, i64)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.blink::WorkerGlobalScope"*, %"class.blink::KURL"*, i32, i32, %"class.WTF::Vector.477"*, %"class.WTF::Vector.18"*, i64)*, void (%"class.blink::WorkerGlobalScope"*, %"class.blink::KURL"*, i32, i32, %"class.WTF::Vector.477"*, %"class.WTF::Vector.18"*, i64)** %116, i64 61
  %118 = load void (%"class.blink::WorkerGlobalScope"*, %"class.blink::KURL"*, i32, i32, %"class.WTF::Vector.477"*, %"class.WTF::Vector.18"*, i64)*, void (%"class.blink::WorkerGlobalScope"*, %"class.blink::KURL"*, i32, i32, %"class.WTF::Vector.477"*, %"class.WTF::Vector.18"*, i64)** %117, align 8
  call void %118(%"class.blink::WorkerGlobalScope"* %107, %"class.blink::KURL"* nonnull dereferenceable(112) %14, i32 %108, i32 %111, %"class.WTF::Vector.477"* nonnull %17, %"class.WTF::Vector.18"* %114, i64 0) #10
  %119 = icmp eq %"class.WTF::Vector.18"* %114, null
  br i1 %119, label %160, label %120

120:                                              ; preds = %106
  %121 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %114, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::String"*, %"class.WTF::String"** %121, align 8
  %123 = icmp eq %"class.WTF::String"* %122, null
  br i1 %123, label %158, label %124, !prof !2

124:                                              ; preds = %120
  %125 = bitcast %"class.WTF::String"* %122 to i8*
  %126 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %114, i64 0, i32 0, i32 0, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %156, label %129, !prof !3

129:                                              ; preds = %124
  %130 = zext i32 %127 to i64
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 %130
  br label %132

132:                                              ; preds = %150, %129
  %133 = phi %"class.WTF::String"* [ %151, %150 ], [ %122, %129 ]
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %133, i64 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #10
  br label %150

150:                                              ; preds = %149, %146, %132
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %133, i64 1
  %152 = icmp eq %"class.WTF::String"* %151, %131
  br i1 %152, label %153, label %132

153:                                              ; preds = %150
  store i32 0, i32* %126, align 4
  %154 = bitcast %"class.WTF::Vector.18"* %114 to i8**
  %155 = load i8*, i8** %154, align 8
  br label %156

156:                                              ; preds = %153, %124
  %157 = phi i8* [ %155, %153 ], [ %125, %124 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %157) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %121, align 8
  br label %158

158:                                              ; preds = %156, %120
  %159 = bitcast %"class.WTF::Vector.18"* %114 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %159) #10
  br label %160

160:                                              ; preds = %106, %158
  %161 = getelementptr inbounds %"class.WTF::Vector.477", %"class.WTF::Vector.477"* %17, i64 0, i32 0, i32 0, i32 0
  %162 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %161, align 8
  %163 = icmp eq %"class.mojo::StructPtr"* %162, null
  br i1 %163, label %187, label %164, !prof !2

164:                                              ; preds = %160
  %165 = bitcast %"class.mojo::StructPtr"* %162 to i8*
  %166 = getelementptr inbounds %"class.WTF::Vector.477", %"class.WTF::Vector.477"* %17, i64 0, i32 0, i32 0, i32 2
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %185, label %169, !prof !3

169:                                              ; preds = %164
  %170 = zext i32 %167 to i64
  %171 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %162, i64 %170
  br label %172

172:                                              ; preds = %179, %169
  %173 = phi %"class.mojo::StructPtr"* [ %180, %179 ], [ %162, %169 ]
  %174 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %173, i64 0, i32 0, i32 0, i32 0, i32 0
  %175 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %174, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %174, align 8
  %176 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %175, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %172
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %175) #10
  %178 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %175 to i8*
  call void @_ZdlPv(i8* %178) #11
  br label %179

179:                                              ; preds = %177, %172
  %180 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %173, i64 1
  %181 = icmp eq %"class.mojo::StructPtr"* %180, %171
  br i1 %181, label %182, label %172

182:                                              ; preds = %179
  store i32 0, i32* %166, align 4
  %183 = bitcast %"class.WTF::Vector.477"* %17 to i8**
  %184 = load i8*, i8** %183, align 8
  br label %185

185:                                              ; preds = %182, %164
  %186 = phi i8* [ %184, %182 ], [ %165, %164 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %186) #10
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %161, align 8
  br label %187

187:                                              ; preds = %160, %185
  %188 = getelementptr inbounds %"class.blink::ContentSecurityPolicyResponseHeaders", %"class.blink::ContentSecurityPolicyResponseHeaders"* %18, i64 0, i32 2
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %188) #10
  %189 = getelementptr inbounds %"class.blink::ContentSecurityPolicyResponseHeaders", %"class.blink::ContentSecurityPolicyResponseHeaders"* %18, i64 0, i32 1, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %205, label %192

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  br i1 %196, label %199, label %201

199:                                              ; preds = %192
  %200 = add i32 %198, -1
  store i32 %200, i32* %197, align 4
  br label %201

201:                                              ; preds = %199, %192
  %202 = phi i32 [ %200, %199 ], [ %198, %192 ]
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %201
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %190) #10
  br label %205

205:                                              ; preds = %204, %201, %187
  %206 = getelementptr inbounds %"class.blink::ContentSecurityPolicyResponseHeaders", %"class.blink::ContentSecurityPolicyResponseHeaders"* %18, i64 0, i32 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #10
  br label %222

222:                                              ; preds = %205, %218, %221
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %112) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %65) #10
  br label %223

223:                                              ; preds = %222, %62
  %224 = load i32, i32* %36, align 8
  %225 = icmp eq i32 %224, 1
  br i1 %225, label %226, label %248

226:                                              ; preds = %223
  %227 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227) #10
  %228 = load %"class.blink::InstalledScriptsManager::ScriptData"*, %"class.blink::InstalledScriptsManager::ScriptData"** %38, align 8
  %229 = call %"class.WTF::StringImpl"* @_ZN5blink23InstalledScriptsManager10ScriptData18GetHttpContentTypeEv(%"class.blink::InstalledScriptsManager::ScriptData"* %228) #10
  %230 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %229, %"class.WTF::StringImpl"** %230, align 8
  %231 = call zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedJavaScriptMIMETypeERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %19) #10
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %230, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %247, label %234

234:                                              ; preds = %226
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  br i1 %238, label %241, label %243

241:                                              ; preds = %234
  %242 = add i32 %240, -1
  store i32 %242, i32* %239, align 4
  br label %243

243:                                              ; preds = %241, %234
  %244 = phi i32 [ %242, %241 ], [ %240, %234 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %232) #10
  br label %247

247:                                              ; preds = %246, %243, %226
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #10
  br i1 %231, label %263, label %248

248:                                              ; preds = %247, %223
  %249 = bitcast %"class.blink::HeapVector.512"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %249) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %249, i8 0, i64 16, i1 false) #10
  %250 = bitcast %"class.blink::ConsoleMessage"** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %250) #10
  %251 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %251) #10
  store i32 1, i32* %22, align 4
  %252 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252) #10
  store i32 3, i32* %23, align 4
  %253 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %39) #10
  %254 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %253, i64 0, i32 4
  %255 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #10
  store i8* null, i8** %24, align 8
  %256 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %256) #10
  store i32 0, i32* %25, align 4
  %257 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA39_KcRKN3WTF6StringEDniEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %22, i32* nonnull dereferenceable(4) %23, [39 x i8]* nonnull dereferenceable(39) @.str, %"class.WTF::String"* dereferenceable(8) %254, i8** nonnull dereferenceable(8) %24, i32* nonnull dereferenceable(4) %25) #10
  store %"class.blink::ConsoleMessage"* %257, %"class.blink::ConsoleMessage"** %21, align 8
  %258 = getelementptr inbounds %"class.blink::HeapVector.512", %"class.blink::HeapVector.512"* %20, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14ConsoleMessageEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.515"* nonnull %258, %"class.blink::ConsoleMessage"** nonnull dereferenceable(8) %21) #10
  %259 = bitcast %"class.blink::ModuleScriptFetcher::Client"* %5 to void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::HeapVector.512"*)***
  %260 = load void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::HeapVector.512"*)**, void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::HeapVector.512"*)*** %259, align 8
  %261 = getelementptr inbounds void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::HeapVector.512"*)*, void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::HeapVector.512"*)** %260, i64 1
  %262 = load void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::HeapVector.512"*)*, void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::HeapVector.512"*)** %261, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %256) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %251) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #10
  call void %262(%"class.blink::ModuleScriptFetcher::Client"* %5, %"class.blink::HeapVector.512"* nonnull dereferenceable(16) %20) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %249) #10
  br label %342

263:                                              ; preds = %247
  %264 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %26, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 296, i8* nonnull %264) #10
  %265 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %39) #10
  %266 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %39) #10
  %267 = load i32, i32* %36, align 8
  %268 = bitcast %"class.blink::ParkableString"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %268) #10
  %269 = bitcast %class.scoped_refptr* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %269) #10
  %270 = load %"class.blink::InstalledScriptsManager::ScriptData"*, %"class.blink::InstalledScriptsManager::ScriptData"** %38, align 8
  %271 = getelementptr inbounds %"class.blink::InstalledScriptsManager::ScriptData", %"class.blink::InstalledScriptsManager::ScriptData"* %270, i64 0, i32 1, i32 0, i32 0
  %272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %271, align 8
  %273 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 0, i32 0
  store %"class.WTF::StringImpl"* %272, %"class.WTF::StringImpl"** %273, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %272, null
  br i1 %274, label %292, label %275

275:                                              ; preds = %263
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load atomic i32, i32* %276 monotonic, align 4
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %292

280:                                              ; preds = %275
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = zext i32 %282 to i33
  %284 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %283, i33 1) #10
  %285 = extractvalue { i33, i1 } %284, 1
  %286 = extractvalue { i33, i1 } %284, 0
  %287 = icmp slt i33 %286, 0
  %288 = or i1 %285, %287
  br i1 %288, label %289, label %290, !prof !3

289:                                              ; preds = %280
  call void @llvm.trap() #10
  unreachable

290:                                              ; preds = %280
  %291 = trunc i33 %286 to i32
  store i32 %291, i32* %281, align 4
  br label %292

292:                                              ; preds = %263, %275, %290
  call void @_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"* nonnull %27, %class.scoped_refptr* nonnull dereferenceable(8) %28) #10
  %293 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %26, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %293, %"class.blink::KURL"* dereferenceable(112) %265) #10
  %294 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %26, i64 0, i32 1
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %294, %"class.blink::KURL"* dereferenceable(112) %266) #10
  %295 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %26, i64 0, i32 2
  store i32 1, i32* %295, align 8
  %296 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %26, i64 0, i32 3
  store i32 %267, i32* %296, align 4
  %297 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %26, i64 0, i32 4
  store i8 0, i8* %297, align 8
  %298 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %27, i64 0, i32 0, i32 0
  %299 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %298, align 8
  %300 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %26, i64 0, i32 6, i32 0, i32 0
  store %"class.blink::ParkableStringImpl"* %299, %"class.blink::ParkableStringImpl"** %300, align 8
  %301 = icmp eq %"class.blink::ParkableStringImpl"* %299, null
  br i1 %301, label %304, label %302

302:                                              ; preds = %292
  %303 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %299, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %303) #10
  br label %304

304:                                              ; preds = %292, %302
  %305 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %26, i64 0, i32 7, i32 0, i32 0
  %306 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %26, i64 0, i32 10
  %307 = bitcast %"class.WTF::StringImpl"** %305 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %307, i8 0, i64 40, i1 false)
  store i32 14, i32* %306, align 8
  %308 = bitcast %"class.blink::ModuleScriptFetcher::Client"* %5 to void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)***
  %309 = load void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)**, void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)*** %308, align 8
  %310 = getelementptr inbounds void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)*, void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)** %309, i64 2
  %311 = load void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)*, void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)** %310, align 8
  call void %311(%"class.blink::ModuleScriptFetcher::Client"* %5, %"class.blink::ModuleScriptCreationParams"* nonnull dereferenceable(296) %26) #10
  call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* nonnull %26) #10
  call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* nonnull %27) #10
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %313 = icmp eq %"class.WTF::StringImpl"* %312, null
  br i1 %313, label %327, label %314

314:                                              ; preds = %304
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load atomic i32, i32* %315 monotonic, align 4
  %317 = and i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  br i1 %318, label %321, label %323

321:                                              ; preds = %314
  %322 = add i32 %320, -1
  store i32 %322, i32* %319, align 4
  br label %323

323:                                              ; preds = %321, %314
  %324 = phi i32 [ %322, %321 ], [ %320, %314 ]
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %323
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %312) #10
  br label %327

327:                                              ; preds = %304, %323, %326
  br i1 %274, label %341, label %328

328:                                              ; preds = %327
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = load atomic i32, i32* %329 monotonic, align 4
  %331 = and i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 0
  %334 = load i32, i32* %333, align 4
  br i1 %332, label %335, label %337

335:                                              ; preds = %328
  %336 = add i32 %334, -1
  store i32 %336, i32* %333, align 4
  br label %337

337:                                              ; preds = %335, %328
  %338 = phi i32 [ %336, %335 ], [ %334, %328 ]
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %337
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %272) #10
  br label %341

341:                                              ; preds = %327, %337, %340
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %269) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %268) #10
  call void @llvm.lifetime.end.p0i8(i64 296, i8* nonnull %264) #10
  br label %342

342:                                              ; preds = %341, %248, %47
  %343 = load %"class.blink::InstalledScriptsManager::ScriptData"*, %"class.blink::InstalledScriptsManager::ScriptData"** %38, align 8
  store %"class.blink::InstalledScriptsManager::ScriptData"* null, %"class.blink::InstalledScriptsManager::ScriptData"** %38, align 8
  %344 = icmp eq %"class.blink::InstalledScriptsManager::ScriptData"* %343, null
  br i1 %344, label %347, label %345

345:                                              ; preds = %342
  %346 = bitcast %"class.std::__1::unique_ptr.1459"* %7 to %"struct.std::__1::default_delete.1474"*
  call void @_ZNKSt3__114default_deleteIN5blink23InstalledScriptsManager10ScriptDataEEclEPS3_(%"struct.std::__1::default_delete.1474"* nonnull %346, %"class.blink::InstalledScriptsManager::ScriptData"* nonnull %343) #10
  br label %347

347:                                              ; preds = %342, %345
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink23InstalledScriptsManager10ScriptData17GetReferrerPolicyEv(%"class.blink::InstalledScriptsManager::ScriptData"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14SecurityPolicy29ReferrerPolicyFromHeaderValueERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8), i32, i32*) local_unnamed_addr #1

declare void @_ZN5blink33ParseContentSecurityPolicyHeadersERKNS_36ContentSecurityPolicyResponseHeadersE(%"class.WTF::Vector.477"* sret, %"class.blink::ContentSecurityPolicyResponseHeaders"* dereferenceable(136)) local_unnamed_addr #1

declare void @_ZN5blink23InstalledScriptsManager10ScriptData39GetContentSecurityPolicyResponseHeadersEv(%"class.blink::ContentSecurityPolicyResponseHeaders"* sret, %"class.blink::InstalledScriptsManager::ScriptData"*) local_unnamed_addr #1

declare %"class.WTF::Vector.18"* @_ZN5blink23InstalledScriptsManager10ScriptData23CreateOriginTrialTokensEv(%"class.blink::InstalledScriptsManager::ScriptData"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedJavaScriptMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink23InstalledScriptsManager10ScriptData18GetHttpContentTypeEv(%"class.blink::InstalledScriptsManager::ScriptData"*) local_unnamed_addr #1

declare void @_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"*, %class.scoped_refptr* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 8, i32 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #10
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !3

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #10
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %47

47:                                               ; preds = %24, %35
  %48 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 7, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #10
  br label %64

64:                                               ; preds = %47, %60, %63
  %65 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 6
  tail call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* %65) #10
  %66 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %66) #10
  %67 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %67) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink41InstalledServiceWorkerModuleScriptFetcher5TraceEPNS_7VisitorE(%"class.blink::InstalledServiceWorkerModuleScriptFetcher"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::InstalledServiceWorkerModuleScriptFetcher"* %0 to %"class.blink::ModuleScriptFetcher"*
  tail call void @_ZNK5blink19ModuleScriptFetcher5TraceEPNS_7VisitorE(%"class.blink::ModuleScriptFetcher"* %3, %"class.blink::Visitor"* %1) #10
  %4 = getelementptr inbounds %"class.blink::InstalledServiceWorkerModuleScriptFetcher", %"class.blink::InstalledServiceWorkerModuleScriptFetcher"* %0, i64 0, i32 2
  %5 = bitcast %"class.blink::Member.359"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17WorkerGlobalScopeEE5TraceEPNS_7VisitorEPKv) #10
  br label %14

14:                                               ; preds = %2, %8
  ret void
}

declare void @_ZNK5blink19ModuleScriptFetcher5TraceEPNS_7VisitorE(%"class.blink::ModuleScriptFetcher"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14ResourceClientD2Ev(%"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink41InstalledServiceWorkerModuleScriptFetcherD0Ev(%"class.blink::InstalledServiceWorkerModuleScriptFetcher"*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm(%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14ResourceClient14NotifyFinishedEPNS_8ResourceE(%"class.blink::ResourceClient"*, %"class.blink::Resource"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14ResourceClient20IsFontResourceClientEv(%"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14ResourceClient19IsRawResourceClientEv(%"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink41InstalledServiceWorkerModuleScriptFetcher9DebugNameEv(%"class.blink::InstalledServiceWorkerModuleScriptFetcher"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i64 41) #10
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink23InstalledScriptsManager10ScriptDataEEclEPS3_(%"struct.std::__1::default_delete.1474"*, %"class.blink::InstalledScriptsManager::ScriptData"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::InstalledScriptsManager::ScriptData"* %1, null
  br i1 %3, label %41, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::InstalledScriptsManager::ScriptData", %"class.blink::InstalledScriptsManager::ScriptData"* %1, i64 0, i32 3
  tail call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* %5) #10
  %6 = getelementptr inbounds %"class.blink::InstalledScriptsManager::ScriptData", %"class.blink::InstalledScriptsManager::ScriptData"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::Vector.1465"*, %"class.WTF::Vector.1465"** %6, align 8
  store %"class.WTF::Vector.1465"* null, %"class.WTF::Vector.1465"** %6, align 8
  %8 = icmp eq %"class.WTF::Vector.1465"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::Vector.1465", %"class.WTF::Vector.1465"* %7, i64 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %19, label %13, !prof !2

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::Vector.1465", %"class.WTF::Vector.1465"* %7, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !3

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %11) #10
  store i8* null, i8** %10, align 8
  br label %19

19:                                               ; preds = %18, %9
  %20 = bitcast %"class.WTF::Vector.1465"* %7 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %20) #10
  br label %21

21:                                               ; preds = %19, %4
  %22 = getelementptr inbounds %"class.blink::InstalledScriptsManager::ScriptData", %"class.blink::InstalledScriptsManager::ScriptData"* %1, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #10
  br label %38

38:                                               ; preds = %21, %34, %37
  %39 = getelementptr inbounds %"class.blink::InstalledScriptsManager::ScriptData", %"class.blink::InstalledScriptsManager::ScriptData"* %1, i64 0, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %39) #10
  %40 = getelementptr inbounds %"class.blink::InstalledScriptsManager::ScriptData", %"class.blink::InstalledScriptsManager::ScriptData"* %1, i64 0, i32 0, i32 0
  tail call void @free(i8* %40) #10
  br label %41

41:                                               ; preds = %38, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"*) unnamed_addr #3

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA39_KcRKN3WTF6StringEDniEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [39 x i8]* dereferenceable(39), %"class.WTF::String"* dereferenceable(8), i8** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.WTF::String", align 8
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %9 = bitcast i8* %8 to %"class.blink::ConsoleMessage"*
  %10 = load i32, i32* %0, align 4
  %11 = load i32, i32* %1, align 4
  %12 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  %13 = getelementptr inbounds [39 x i8], [39 x i8]* %2, i64 0, i64 0
  %14 = icmp eq [39 x i8]* %2, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %6
  %16 = tail call i64 @strlen(i8* nonnull %13) #12
  br label %17

17:                                               ; preds = %6, %15
  %18 = phi i64 [ %16, %15 ], [ 0, %6 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* %13, i64 %18) #10
  %19 = load i32, i32* %5, align 4
  %20 = sext i32 %19 to i64
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringES7_PNS_14DocumentLoaderEm(%"class.blink::ConsoleMessage"* %9, i32 %10, i32 %11, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %3, %"class.blink::DocumentLoader"* null, i64 %20) #10
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #10
  br label %37

37:                                               ; preds = %17, %33, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  %38 = getelementptr inbounds i8, i8* %8, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  ret %"class.blink::ConsoleMessage"* %9
}

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringES7_PNS_14DocumentLoaderEm(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::DocumentLoader"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14ConsoleMessageEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.515"*, %"class.blink::ConsoleMessage"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.515", %"class.WTF::Vector.515"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.515", %"class.WTF::Vector.515"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14ConsoleMessageEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.515"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.515", %"class.WTF::Vector.515"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.518"*, %"class.blink::Member.518"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.518", %"class.blink::Member.518"* %16, i64 %18
  %20 = bitcast %"class.blink::ConsoleMessage"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.518"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14ConsoleMessageEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.515"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.515", %"class.WTF::Vector.515"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.515", %"class.WTF::Vector.515"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.518"*, %"class.blink::Member.518"** %8, align 8
  %10 = icmp eq %"class.blink::Member.518"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ConsoleMessageEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.515"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.518"*, %"class.blink::Member.518"** %8, align 8
  %26 = icmp eq %"class.blink::Member.518"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.518"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14ConsoleMessageEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.515"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14ConsoleMessageEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.515"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.515"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.515", %"class.WTF::Vector.515"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.515"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.515", %"class.WTF::Vector.515"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ConsoleMessageEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.515", %"class.WTF::Vector.515"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.518"*, %"class.blink::Member.518"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.515", %"class.WTF::Vector.515"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.518"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.518"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.515"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.515"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.515"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.515", %"class.WTF::Vector.515"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ConsoleMessageEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14ConsoleMessageEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.518"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.518", %"class.blink::Member.518"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.518"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14ConsoleMessageEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17WorkerGlobalScopeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WorkerGlobalScope"*
  %4 = bitcast i8* %1 to void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)**, void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)*, void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)*, void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::WorkerGlobalScope"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
