; ModuleID = '../../third_party/pdfium/third_party/lcms/src/cmserr.c'
source_filename = "../../third_party/pdfium/third_party/lcms/src/cmserr.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._cmsMemPluginChunkType = type { i8* (%struct._cmsContext_struct*, i32)*, i8* (%struct._cmsContext_struct*, i32)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*, i32)*, i8* (%struct._cmsContext_struct*, i32, i32)*, i8* (%struct._cmsContext_struct*, i8*, i32)* }
%struct._cmsContext_struct = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator*, [15 x i8*], %struct._cmsMemPluginChunkType }
%struct._cmsSubAllocator = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsSubAllocator_chunk_st = type { i8*, i32, i32, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsLogErrorChunkType = type { void (%struct._cmsContext_struct*, i32, i8*)* }
%struct._cmsMutexPluginChunkType = type { i8* (%struct._cmsContext_struct*)*, void (%struct._cmsContext_struct*, i8*)*, i32 (%struct._cmsContext_struct*, i8*)*, void (%struct._cmsContext_struct*, i8*)* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct._cmsPluginBaseStruct = type { i32, i32, i32, %struct._cmsPluginBaseStruct* }
%struct.cmsPluginMemHandler = type { %struct._cmsPluginBaseStruct, i8* (%struct._cmsContext_struct*, i32)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*, i32)*, i8* (%struct._cmsContext_struct*, i32)*, i8* (%struct._cmsContext_struct*, i32, i32)*, i8* (%struct._cmsContext_struct*, i8*, i32)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_mutexattr_t = type { i32 }

@_cmsMemPluginChunk = hidden local_unnamed_addr global %struct._cmsMemPluginChunkType { i8* (%struct._cmsContext_struct*, i32)* @_cmsMalloc, i8* (%struct._cmsContext_struct*, i32)* @_cmsMallocZero, void (%struct._cmsContext_struct*, i8*)* @_cmsFree, i8* (%struct._cmsContext_struct*, i8*, i32)* @_cmsRealloc, i8* (%struct._cmsContext_struct*, i32, i32)* @_cmsCalloc, i8* (%struct._cmsContext_struct*, i8*, i32)* @_cmsDupMem }, align 8
@_cmsLogErrorChunk = hidden local_unnamed_addr global %struct._cmsLogErrorChunkType { void (%struct._cmsContext_struct*, i32, i8*)* @DefaultLogErrorHandlerFunction }, align 8
@_cmsAllocLogErrorChunk.LogErrorChunk = internal unnamed_addr constant %struct._cmsLogErrorChunkType { void (%struct._cmsContext_struct*, i32, i8*)* @DefaultLogErrorHandlerFunction }, align 8
@_cmsMutexPluginChunk = hidden local_unnamed_addr global %struct._cmsMutexPluginChunkType { i8* (%struct._cmsContext_struct*)* @defMtxCreate, void (%struct._cmsContext_struct*, i8*)* @defMtxDestroy, i32 (%struct._cmsContext_struct*, i8*)* @defMtxLock, void (%struct._cmsContext_struct*, i8*)* @defMtxUnlock }, align 8
@_cmsAllocMutexPluginChunk.MutexChunk = internal unnamed_addr constant %struct._cmsMutexPluginChunkType { i8* (%struct._cmsContext_struct*)* @defMtxCreate, void (%struct._cmsContext_struct*, i8*)* @defMtxDestroy, i32 (%struct._cmsContext_struct*, i8*)* @defMtxLock, void (%struct._cmsContext_struct*, i8*)* @defMtxUnlock }, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @cmsGetEncodedCMMversion() local_unnamed_addr #0 {
  ret i32 2100
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @cmsstrcasecmp(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #1 {
  %3 = tail call i32** @__ctype_toupper_loc() #10
  %4 = load i32*, i32** %3, align 8
  br label %5

5:                                                ; preds = %17, %2
  %6 = phi i8* [ %1, %2 ], [ %18, %17 ]
  %7 = phi i8* [ %0, %2 ], [ %19, %17 ]
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i64
  %10 = getelementptr inbounds i32, i32* %4, i64 %9
  %11 = load i32, i32* %10, align 4
  %12 = load i8, i8* %6, align 1
  %13 = zext i8 %12 to i64
  %14 = getelementptr inbounds i32, i32* %4, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %11, %15
  br i1 %16, label %17, label %21

17:                                               ; preds = %5
  %18 = getelementptr inbounds i8, i8* %6, i64 1
  %19 = getelementptr inbounds i8, i8* %7, i64 1
  %20 = icmp eq i8 %8, 0
  br i1 %20, label %23, label %5

21:                                               ; preds = %5
  %22 = sub nsw i32 %11, %15
  br label %23

23:                                               ; preds = %17, %21
  %24 = phi i32 [ %22, %21 ], [ 0, %17 ]
  ret i32 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind readnone
declare i32** @__ctype_toupper_loc() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind ssp uwtable
define hidden i64 @cmsfilelength(%struct._IO_FILE* nocapture) local_unnamed_addr #4 {
  %2 = tail call i64 @ftell(%struct._IO_FILE* %0)
  %3 = icmp eq i64 %2, -1
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @fseek(%struct._IO_FILE* %0, i64 0, i32 2)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %4
  %8 = tail call i64 @ftell(%struct._IO_FILE* %0)
  %9 = tail call i32 @fseek(%struct._IO_FILE* %0, i64 %2, i32 0)
  br label %10

10:                                               ; preds = %4, %1, %7
  %11 = phi i64 [ %8, %7 ], [ -1, %1 ], [ -1, %4 ]
  ret i64 %11
}

; Function Attrs: nofree nounwind
declare i64 @ftell(%struct._IO_FILE* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @fseek(%struct._IO_FILE* nocapture, i64, i32) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_cmsRegisterMemHandlerPlugin(%struct._cmsContext_struct* nocapture readnone, %struct._cmsPluginBaseStruct* nocapture readnone) local_unnamed_addr #0 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_cmsMalloc(%struct._cmsContext_struct* nocapture readnone, i32) #6 {
  %3 = zext i32 %1 to i64
  %4 = tail call i8* @FXMEM_DefaultAlloc(i64 %3) #8
  ret i8* %4
}

declare i8* @FXMEM_DefaultAlloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_cmsMallocZero(%struct._cmsContext_struct* nocapture readnone, i32) #6 {
  %3 = zext i32 %1 to i64
  %4 = tail call i8* @FXMEM_DefaultAlloc(i64 %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 %3, i1 false)
  br label %7

7:                                                ; preds = %2, %6
  ret i8* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_cmsCalloc(%struct._cmsContext_struct* nocapture readnone, i32, i32) #6 {
  %4 = mul i32 %2, %1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %3
  %7 = udiv i32 %4, %2
  %8 = icmp ne i32 %7, %1
  %9 = icmp ugt i32 %4, 536870911
  %10 = or i1 %9, %8
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = zext i32 %4 to i64
  %13 = tail call i8* @FXMEM_DefaultAlloc(i64 %12) #8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %13, i8 0, i64 %12, i1 false) #8
  br label %16

16:                                               ; preds = %15, %11, %3, %6
  %17 = phi i8* [ null, %6 ], [ null, %3 ], [ null, %11 ], [ %13, %15 ]
  ret i8* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_cmsRealloc(%struct._cmsContext_struct* nocapture readnone, i8*, i32) #6 {
  %4 = zext i32 %2 to i64
  %5 = tail call i8* @FXMEM_DefaultRealloc(i8* %1, i64 %4) #8
  ret i8* %5
}

declare i8* @FXMEM_DefaultRealloc(i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsFree(%struct._cmsContext_struct* nocapture readnone, i8*) #6 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @FXMEM_DefaultFree(i8* nonnull %1) #8
  br label %5

5:                                                ; preds = %2, %4
  ret void
}

declare void @FXMEM_DefaultFree(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_cmsDupMem(%struct._cmsContext_struct* nocapture readnone, i8* nocapture readonly, i32) #6 {
  %4 = zext i32 %2 to i64
  %5 = tail call i8* @FXMEM_DefaultAlloc(i64 %4) #8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %1, i64 %4, i1 false)
  ret i8* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsAllocMemPluginChunk(%struct._cmsContext_struct*, %struct._cmsContext_struct* readonly) local_unnamed_addr #6 {
  %3 = icmp eq %struct._cmsContext_struct* %1, null
  br i1 %3, label %58, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %1, i64 0, i32 2, i64 4
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %55, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %10 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %9, align 8
  %11 = getelementptr inbounds %struct._cmsSubAllocator, %struct._cmsSubAllocator* %10, i64 0, i32 1
  %12 = load %struct._cmsSubAllocator_chunk_st*, %struct._cmsSubAllocator_chunk_st** %11, align 8
  %13 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %12, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = sub i32 %14, %16
  %18 = icmp ult i32 %17, 48
  br i1 %18, label %19, label %44

19:                                               ; preds = %8
  %20 = shl i32 %14, 1
  %21 = icmp ugt i32 %20, 48
  %22 = select i1 %21, i32 %20, i32 48
  %23 = tail call i8* @FXMEM_DefaultAlloc(i64 24) #8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %55, label %25

25:                                               ; preds = %19
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %23, i8 0, i64 24, i1 false) #8
  %26 = zext i32 %22 to i64
  %27 = tail call i8* @FXMEM_DefaultAlloc(i64 %26) #8
  %28 = bitcast i8* %23 to i8**
  store i8* %27, i8** %28, align 8
  %29 = icmp eq i8* %27, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  tail call void @FXMEM_DefaultFree(i8* nonnull %23) #8
  br label %55

31:                                               ; preds = %25
  %32 = getelementptr inbounds i8, i8* %23, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %22, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %23, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %23, i64 16
  %37 = bitcast i8* %36 to %struct._cmsSubAllocator_chunk_st**
  store %struct._cmsSubAllocator_chunk_st* null, %struct._cmsSubAllocator_chunk_st** %37, align 8
  %38 = bitcast %struct._cmsSubAllocator_chunk_st** %11 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast i8* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = bitcast %struct._cmsSubAllocator_chunk_st** %11 to i8**
  store i8* %23, i8** %41, align 8
  %42 = bitcast i8* %23 to %struct._cmsSubAllocator_chunk_st*
  %43 = load i32, i32* %35, align 4
  br label %44

44:                                               ; preds = %31, %8
  %45 = phi i32 [ %43, %31 ], [ %16, %8 ]
  %46 = phi %struct._cmsSubAllocator_chunk_st* [ %42, %31 ], [ %12, %8 ]
  %47 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %46, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %46, i64 0, i32 2
  %50 = zext i32 %45 to i64
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  %52 = add i32 %45, 48
  store i32 %52, i32* %49, align 4
  %53 = icmp eq i8* %51, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %44
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %51, i8* nonnull align 1 %6, i64 48, i1 false) #8
  br label %55

55:                                               ; preds = %4, %19, %30, %44, %54
  %56 = phi i8* [ null, %4 ], [ null, %44 ], [ %51, %54 ], [ null, %30 ], [ null, %19 ]
  %57 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 4
  store i8* %56, i8** %57, align 8
  br label %62

58:                                               ; preds = %2
  %59 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 3
  %60 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 4
  %61 = bitcast i8** %60 to %struct._cmsMemPluginChunkType**
  store %struct._cmsMemPluginChunkType* %59, %struct._cmsMemPluginChunkType** %61, align 8
  br label %62

62:                                               ; preds = %58, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* nocapture, i8* readonly, i32) local_unnamed_addr #6 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct._cmsSubAllocator, %struct._cmsSubAllocator* %0, i64 0, i32 1
  %7 = load %struct._cmsSubAllocator_chunk_st*, %struct._cmsSubAllocator_chunk_st** %6, align 8
  %8 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %7, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = sub i32 %9, %11
  %13 = add i32 %2, 7
  %14 = and i32 %13, -8
  %15 = icmp ugt i32 %14, %12
  br i1 %15, label %16, label %43

16:                                               ; preds = %5
  %17 = shl i32 %9, 1
  %18 = icmp ult i32 %17, %14
  %19 = select i1 %18, i32 %14, i32 %17
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i32 20480, i32 %19
  %22 = tail call i8* @FXMEM_DefaultAlloc(i64 24) #8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %55, label %24

24:                                               ; preds = %16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %22, i8 0, i64 24, i1 false) #8
  %25 = zext i32 %21 to i64
  %26 = tail call i8* @FXMEM_DefaultAlloc(i64 %25) #8
  %27 = bitcast i8* %22 to i8**
  store i8* %26, i8** %27, align 8
  %28 = icmp eq i8* %26, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  tail call void @FXMEM_DefaultFree(i8* nonnull %22) #8
  br label %55

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %22, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %21, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %22, i64 12
  %34 = bitcast i8* %33 to i32*
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds i8, i8* %22, i64 16
  %36 = bitcast i8* %35 to %struct._cmsSubAllocator_chunk_st**
  store %struct._cmsSubAllocator_chunk_st* null, %struct._cmsSubAllocator_chunk_st** %36, align 8
  %37 = bitcast %struct._cmsSubAllocator_chunk_st** %6 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast i8* %35 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %struct._cmsSubAllocator_chunk_st** %6 to i8**
  store i8* %22, i8** %40, align 8
  %41 = bitcast i8* %22 to %struct._cmsSubAllocator_chunk_st*
  %42 = load i32, i32* %34, align 4
  br label %43

43:                                               ; preds = %5, %30
  %44 = phi i32 [ %42, %30 ], [ %11, %5 ]
  %45 = phi %struct._cmsSubAllocator_chunk_st* [ %41, %30 ], [ %7, %5 ]
  %46 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %45, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %45, i64 0, i32 2
  %49 = zext i32 %44 to i64
  %50 = getelementptr inbounds i8, i8* %47, i64 %49
  %51 = add i32 %44, %14
  store i32 %51, i32* %48, align 4
  %52 = icmp eq i8* %50, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %43
  %54 = zext i32 %2 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %50, i8* nonnull align 1 %1, i64 %54, i1 false)
  br label %55

55:                                               ; preds = %16, %29, %53, %43, %3
  %56 = phi i8* [ null, %3 ], [ null, %43 ], [ %50, %53 ], [ null, %29 ], [ null, %16 ]
  ret i8* %56
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsInstallAllocFunctions(%struct.cmsPluginMemHandler* readonly, %struct._cmsMemPluginChunkType* nocapture) local_unnamed_addr #6 {
  %3 = icmp eq %struct.cmsPluginMemHandler* %0, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %struct._cmsMemPluginChunkType* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 bitcast (%struct._cmsMemPluginChunkType* @_cmsMemPluginChunk to i8*), i64 48, i1 false)
  br label %38

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cmsPluginMemHandler, %struct.cmsPluginMemHandler* %0, i64 0, i32 1
  %8 = bitcast i8* (%struct._cmsContext_struct*, i32)** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %struct._cmsMemPluginChunkType* %1 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %struct.cmsPluginMemHandler, %struct.cmsPluginMemHandler* %0, i64 0, i32 2
  %12 = bitcast void (%struct._cmsContext_struct*, i8*)** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct._cmsMemPluginChunkType, %struct._cmsMemPluginChunkType* %1, i64 0, i32 2
  %15 = bitcast void (%struct._cmsContext_struct*, i8*)** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %struct.cmsPluginMemHandler, %struct.cmsPluginMemHandler* %0, i64 0, i32 3
  %17 = bitcast i8* (%struct._cmsContext_struct*, i8*, i32)** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct._cmsMemPluginChunkType, %struct._cmsMemPluginChunkType* %1, i64 0, i32 3
  %20 = bitcast i8* (%struct._cmsContext_struct*, i8*, i32)** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %struct._cmsMemPluginChunkType, %struct._cmsMemPluginChunkType* %1, i64 0, i32 1
  store i8* (%struct._cmsContext_struct*, i32)* @_cmsMallocZero, i8* (%struct._cmsContext_struct*, i32)** %21, align 8
  %22 = getelementptr inbounds %struct._cmsMemPluginChunkType, %struct._cmsMemPluginChunkType* %1, i64 0, i32 4
  store i8* (%struct._cmsContext_struct*, i32, i32)* @_cmsCalloc, i8* (%struct._cmsContext_struct*, i32, i32)** %22, align 8
  %23 = getelementptr inbounds %struct._cmsMemPluginChunkType, %struct._cmsMemPluginChunkType* %1, i64 0, i32 5
  store i8* (%struct._cmsContext_struct*, i8*, i32)* @_cmsDupMem, i8* (%struct._cmsContext_struct*, i8*, i32)** %23, align 8
  %24 = getelementptr inbounds %struct.cmsPluginMemHandler, %struct.cmsPluginMemHandler* %0, i64 0, i32 4
  %25 = load i8* (%struct._cmsContext_struct*, i32)*, i8* (%struct._cmsContext_struct*, i32)** %24, align 8
  %26 = icmp eq i8* (%struct._cmsContext_struct*, i32)* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %6
  store i8* (%struct._cmsContext_struct*, i32)* %25, i8* (%struct._cmsContext_struct*, i32)** %21, align 8
  br label %28

28:                                               ; preds = %6, %27
  %29 = getelementptr inbounds %struct.cmsPluginMemHandler, %struct.cmsPluginMemHandler* %0, i64 0, i32 5
  %30 = load i8* (%struct._cmsContext_struct*, i32, i32)*, i8* (%struct._cmsContext_struct*, i32, i32)** %29, align 8
  %31 = icmp eq i8* (%struct._cmsContext_struct*, i32, i32)* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %28
  store i8* (%struct._cmsContext_struct*, i32, i32)* %30, i8* (%struct._cmsContext_struct*, i32, i32)** %22, align 8
  br label %33

33:                                               ; preds = %28, %32
  %34 = getelementptr inbounds %struct.cmsPluginMemHandler, %struct.cmsPluginMemHandler* %0, i64 0, i32 6
  %35 = load i8* (%struct._cmsContext_struct*, i8*, i32)*, i8* (%struct._cmsContext_struct*, i8*, i32)** %34, align 8
  %36 = icmp eq i8* (%struct._cmsContext_struct*, i8*, i32)* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  store i8* (%struct._cmsContext_struct*, i8*, i32)* %35, i8* (%struct._cmsContext_struct*, i8*, i32)** %23, align 8
  br label %38

38:                                               ; preds = %33, %37, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsSubAllocator* @_cmsCreateSubAlloc(%struct._cmsContext_struct*, i32) local_unnamed_addr #6 {
  %3 = tail call i8* @FXMEM_DefaultAlloc(i64 16) #8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %32, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i64*
  store i64 0, i64* %7, align 1
  %8 = bitcast i8* %3 to %struct._cmsSubAllocator*
  %9 = bitcast i8* %3 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %9, align 8
  %10 = icmp eq i32 %1, 0
  %11 = select i1 %10, i32 20480, i32 %1
  %12 = tail call i8* @FXMEM_DefaultAlloc(i64 24) #8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %12, i8 0, i64 24, i1 false) #8
  %15 = zext i32 %11 to i64
  %16 = tail call i8* @FXMEM_DefaultAlloc(i64 %15) #8
  %17 = bitcast i8* %12 to i8**
  store i8* %16, i8** %17, align 8
  %18 = icmp eq i8* %16, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  tail call void @FXMEM_DefaultFree(i8* nonnull %12) #8
  br label %20

20:                                               ; preds = %19, %5
  %21 = getelementptr inbounds i8, i8* %3, i64 8
  %22 = bitcast i8* %21 to %struct._cmsSubAllocator_chunk_st**
  store %struct._cmsSubAllocator_chunk_st* null, %struct._cmsSubAllocator_chunk_st** %22, align 8
  tail call void @FXMEM_DefaultFree(i8* nonnull %3) #8
  br label %32

23:                                               ; preds = %14
  %24 = getelementptr inbounds i8, i8* %12, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 %11, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %12, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %12, i64 16
  %29 = bitcast i8* %28 to %struct._cmsSubAllocator_chunk_st**
  store %struct._cmsSubAllocator_chunk_st* null, %struct._cmsSubAllocator_chunk_st** %29, align 8
  %30 = getelementptr inbounds i8, i8* %3, i64 8
  %31 = bitcast i8* %30 to i8**
  store i8* %12, i8** %31, align 8
  br label %32

32:                                               ; preds = %23, %2, %20
  %33 = phi %struct._cmsSubAllocator* [ null, %20 ], [ %8, %23 ], [ null, %2 ]
  ret %struct._cmsSubAllocator* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsSubAllocDestroy(%struct._cmsSubAllocator*) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct._cmsSubAllocator, %struct._cmsSubAllocator* %0, i64 0, i32 1
  %3 = load %struct._cmsSubAllocator_chunk_st*, %struct._cmsSubAllocator_chunk_st** %2, align 8
  %4 = icmp eq %struct._cmsSubAllocator_chunk_st* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1, %14
  %6 = phi %struct._cmsSubAllocator_chunk_st* [ %9, %14 ], [ %3, %1 ]
  %7 = bitcast %struct._cmsSubAllocator_chunk_st* %6 to i8*
  %8 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %6, i64 0, i32 3
  %9 = load %struct._cmsSubAllocator_chunk_st*, %struct._cmsSubAllocator_chunk_st** %8, align 8
  %10 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %6, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %5
  tail call void @FXMEM_DefaultFree(i8* nonnull %11) #8
  br label %14

14:                                               ; preds = %5, %13
  tail call void @FXMEM_DefaultFree(i8* nonnull %7) #8
  %15 = icmp eq %struct._cmsSubAllocator_chunk_st* %9, null
  br i1 %15, label %16, label %5

16:                                               ; preds = %14, %1
  %17 = icmp eq %struct._cmsSubAllocator* %0, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = bitcast %struct._cmsSubAllocator* %0 to i8*
  tail call void @FXMEM_DefaultFree(i8* nonnull %19) #8
  br label %20

20:                                               ; preds = %16, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_cmsSubAlloc(%struct._cmsSubAllocator* nocapture, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct._cmsSubAllocator, %struct._cmsSubAllocator* %0, i64 0, i32 1
  %4 = load %struct._cmsSubAllocator_chunk_st*, %struct._cmsSubAllocator_chunk_st** %3, align 8
  %5 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %4, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = sub i32 %6, %8
  %10 = add i32 %1, 7
  %11 = and i32 %10, -8
  %12 = icmp ugt i32 %11, %9
  br i1 %12, label %13, label %42

13:                                               ; preds = %2
  %14 = shl i32 %6, 1
  %15 = icmp ult i32 %14, %11
  %16 = select i1 %15, i32 %11, i32 %14
  %17 = icmp eq i32 %16, 0
  %18 = select i1 %17, i32 20480, i32 %16
  %19 = tail call i8* @FXMEM_DefaultAlloc(i64 24) #8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %51, label %21

21:                                               ; preds = %13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %19, i8 0, i64 24, i1 false) #8
  %22 = zext i32 %18 to i64
  %23 = tail call i8* @FXMEM_DefaultAlloc(i64 %22) #8
  %24 = bitcast i8* %19 to i8**
  store i8* %23, i8** %24, align 8
  %25 = icmp eq i8* %23, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %21
  tail call void @FXMEM_DefaultFree(i8* nonnull %19) #8
  br label %51

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %19, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 %18, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %19, i64 12
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %19, i64 16
  %33 = bitcast i8* %32 to %struct._cmsSubAllocator_chunk_st**
  store %struct._cmsSubAllocator_chunk_st* null, %struct._cmsSubAllocator_chunk_st** %33, align 8
  %34 = bitcast %struct._cmsSubAllocator_chunk_st** %3 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast i8* %32 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast %struct._cmsSubAllocator_chunk_st** %3 to i8**
  store i8* %19, i8** %37, align 8
  %38 = bitcast i8* %19 to %struct._cmsSubAllocator_chunk_st*
  %39 = getelementptr inbounds i8, i8* %19, i64 12
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 4
  br label %42

42:                                               ; preds = %27, %2
  %43 = phi i32 [ %41, %27 ], [ %8, %2 ]
  %44 = phi %struct._cmsSubAllocator_chunk_st* [ %38, %27 ], [ %4, %2 ]
  %45 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %44, i64 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %44, i64 0, i32 2
  %48 = zext i32 %43 to i64
  %49 = getelementptr inbounds i8, i8* %46, i64 %48
  %50 = add i32 %43, %11
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %13, %26, %42
  %52 = phi i8* [ %49, %42 ], [ null, %26 ], [ null, %13 ]
  ret i8* %52
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @DefaultLogErrorHandlerFunction(%struct._cmsContext_struct* nocapture, i32, i8* nocapture) #0 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsAllocLogErrorChunk(%struct._cmsContext_struct* nocapture, %struct._cmsContext_struct* readonly) local_unnamed_addr #6 {
  %3 = icmp eq %struct._cmsContext_struct* %1, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %1, i64 0, i32 2, i64 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %59, label %8

8:                                                ; preds = %2, %4
  %9 = phi i8* [ %6, %4 ], [ bitcast (%struct._cmsLogErrorChunkType* @_cmsAllocLogErrorChunk.LogErrorChunk to i8*), %2 ]
  %10 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %11 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %10, align 8
  %12 = getelementptr inbounds %struct._cmsSubAllocator, %struct._cmsSubAllocator* %11, i64 0, i32 1
  %13 = load %struct._cmsSubAllocator_chunk_st*, %struct._cmsSubAllocator_chunk_st** %12, align 8
  %14 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %13, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = sub i32 %15, %17
  %19 = icmp ult i32 %18, 8
  br i1 %19, label %20, label %45

20:                                               ; preds = %8
  %21 = shl i32 %15, 1
  %22 = icmp ugt i32 %21, 8
  %23 = select i1 %22, i32 %21, i32 8
  %24 = tail call i8* @FXMEM_DefaultAlloc(i64 24) #8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %59, label %26

26:                                               ; preds = %20
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %24, i8 0, i64 24, i1 false) #8
  %27 = zext i32 %23 to i64
  %28 = tail call i8* @FXMEM_DefaultAlloc(i64 %27) #8
  %29 = bitcast i8* %24 to i8**
  store i8* %28, i8** %29, align 8
  %30 = icmp eq i8* %28, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  tail call void @FXMEM_DefaultFree(i8* nonnull %24) #8
  br label %59

32:                                               ; preds = %26
  %33 = getelementptr inbounds i8, i8* %24, i64 8
  %34 = bitcast i8* %33 to i32*
  store i32 %23, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %24, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %24, i64 16
  %38 = bitcast i8* %37 to %struct._cmsSubAllocator_chunk_st**
  store %struct._cmsSubAllocator_chunk_st* null, %struct._cmsSubAllocator_chunk_st** %38, align 8
  %39 = bitcast %struct._cmsSubAllocator_chunk_st** %12 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast i8* %37 to i64*
  store i64 %40, i64* %41, align 8
  %42 = bitcast %struct._cmsSubAllocator_chunk_st** %12 to i8**
  store i8* %24, i8** %42, align 8
  %43 = bitcast i8* %24 to %struct._cmsSubAllocator_chunk_st*
  %44 = load i32, i32* %36, align 4
  br label %45

45:                                               ; preds = %32, %8
  %46 = phi i32 [ %44, %32 ], [ %17, %8 ]
  %47 = phi %struct._cmsSubAllocator_chunk_st* [ %43, %32 ], [ %13, %8 ]
  %48 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %47, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %47, i64 0, i32 2
  %51 = zext i32 %46 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = add i32 %46, 8
  store i32 %53, i32* %50, align 4
  %54 = icmp eq i8* %52, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %45
  %56 = bitcast i8* %9 to i64*
  %57 = bitcast i8* %52 to i64*
  %58 = load i64, i64* %56, align 1
  store i64 %58, i64* %57, align 1
  br label %59

59:                                               ; preds = %4, %20, %31, %45, %55
  %60 = phi i8* [ null, %4 ], [ null, %45 ], [ %52, %55 ], [ null, %31 ], [ null, %20 ]
  %61 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 1
  store i8* %60, i8** %61, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsSetLogErrorHandlerTHR(%struct._cmsContext_struct*, void (%struct._cmsContext_struct*, i32, i8*)*) local_unnamed_addr #6 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 1) #8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  %6 = icmp eq void (%struct._cmsContext_struct*, i32, i8*)* %1, null
  %7 = bitcast i8* %3 to void (%struct._cmsContext_struct*, i32, i8*)**
  %8 = select i1 %6, void (%struct._cmsContext_struct*, i32, i8*)* @DefaultLogErrorHandlerFunction, void (%struct._cmsContext_struct*, i32, i8*)* %1
  store void (%struct._cmsContext_struct*, i32, i8*)* %8, void (%struct._cmsContext_struct*, i32, i8*)** %7, align 8
  br label %9

9:                                                ; preds = %5, %2
  ret void
}

declare i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct*, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsSetLogErrorHandler(void (%struct._cmsContext_struct*, i32, i8*)*) local_unnamed_addr #6 {
  %2 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* null, i32 1) #8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = icmp eq void (%struct._cmsContext_struct*, i32, i8*)* %0, null
  %6 = bitcast i8* %2 to void (%struct._cmsContext_struct*, i32, i8*)**
  %7 = select i1 %5, void (%struct._cmsContext_struct*, i32, i8*)* @DefaultLogErrorHandlerFunction, void (%struct._cmsContext_struct*, i32, i8*)* %0
  store void (%struct._cmsContext_struct*, i32, i8*)* %7, void (%struct._cmsContext_struct*, i32, i8*)** %6, align 8
  br label %8

8:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsSignalError(%struct._cmsContext_struct*, i32, i8* nocapture readonly, ...) local_unnamed_addr #6 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = alloca [1024 x i8], align 16
  %6 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  %9 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 1024, i1 false)
  call void @llvm.va_start(i8* nonnull %6)
  %10 = call i32 @vsnprintf(i8* nonnull %8, i64 1023, i8* %2, %struct.__va_list_tag* nonnull %7) #8
  call void @llvm.va_end(i8* nonnull %6)
  %11 = call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 1) #8
  %12 = bitcast i8* %11 to void (%struct._cmsContext_struct*, i32, i8*)**
  %13 = load void (%struct._cmsContext_struct*, i32, i8*)*, void (%struct._cmsContext_struct*, i32, i8*)** %12, align 8
  %14 = icmp eq void (%struct._cmsContext_struct*, i32, i8*)* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %3
  call void %13(%struct._cmsContext_struct* %0, i32 %1, i8* nonnull %8) #8
  br label %16

16:                                               ; preds = %3, %15
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #8

; Function Attrs: nofree nounwind
declare i32 @vsnprintf(i8* nocapture, i64, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsTagSignature2String(i8* nocapture, i32) local_unnamed_addr #6 {
  %3 = tail call i32 @_cmsAdjustEndianess32(i32 %1) #8
  %4 = bitcast i8* %0 to i32*
  store i32 %3, i32* %4, align 1
  %5 = getelementptr inbounds i8, i8* %0, i64 4
  store i8 0, i8* %5, align 1
  ret void
}

declare i32 @_cmsAdjustEndianess32(i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal i8* @defMtxCreate(%struct._cmsContext_struct* nocapture readnone) #6 {
  %2 = tail call i8* @FXMEM_DefaultAlloc(i64 40) #8
  %3 = bitcast i8* %2 to %union.pthread_mutex_t*
  %4 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* %3, %union.pthread_mutexattr_t* null) #8
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @defMtxDestroy(%struct._cmsContext_struct* nocapture readnone, i8*) #6 {
  %3 = bitcast i8* %1 to %union.pthread_mutex_t*
  %4 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #8
  %5 = icmp eq i8* %1, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @FXMEM_DefaultFree(i8* nonnull %1) #8
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @defMtxLock(%struct._cmsContext_struct* nocapture readnone, i8*) #6 {
  %3 = bitcast i8* %1 to %union.pthread_mutex_t*
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #8
  %5 = icmp eq i32 %4, 0
  %6 = zext i1 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @defMtxUnlock(%struct._cmsContext_struct* nocapture readnone, i8*) #6 {
  %3 = bitcast i8* %1 to %union.pthread_mutex_t*
  %4 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsAllocMutexPluginChunk(%struct._cmsContext_struct* nocapture, %struct._cmsContext_struct* readonly) local_unnamed_addr #6 {
  %3 = icmp eq %struct._cmsContext_struct* %1, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %1, i64 0, i32 2, i64 14
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %56, label %8

8:                                                ; preds = %2, %4
  %9 = phi i8* [ %6, %4 ], [ bitcast (%struct._cmsMutexPluginChunkType* @_cmsAllocMutexPluginChunk.MutexChunk to i8*), %2 ]
  %10 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %11 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %10, align 8
  %12 = getelementptr inbounds %struct._cmsSubAllocator, %struct._cmsSubAllocator* %11, i64 0, i32 1
  %13 = load %struct._cmsSubAllocator_chunk_st*, %struct._cmsSubAllocator_chunk_st** %12, align 8
  %14 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %13, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = sub i32 %15, %17
  %19 = icmp ult i32 %18, 32
  br i1 %19, label %20, label %45

20:                                               ; preds = %8
  %21 = shl i32 %15, 1
  %22 = icmp ugt i32 %21, 32
  %23 = select i1 %22, i32 %21, i32 32
  %24 = tail call i8* @FXMEM_DefaultAlloc(i64 24) #8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %56, label %26

26:                                               ; preds = %20
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %24, i8 0, i64 24, i1 false) #8
  %27 = zext i32 %23 to i64
  %28 = tail call i8* @FXMEM_DefaultAlloc(i64 %27) #8
  %29 = bitcast i8* %24 to i8**
  store i8* %28, i8** %29, align 8
  %30 = icmp eq i8* %28, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  tail call void @FXMEM_DefaultFree(i8* nonnull %24) #8
  br label %56

32:                                               ; preds = %26
  %33 = getelementptr inbounds i8, i8* %24, i64 8
  %34 = bitcast i8* %33 to i32*
  store i32 %23, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %24, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %24, i64 16
  %38 = bitcast i8* %37 to %struct._cmsSubAllocator_chunk_st**
  store %struct._cmsSubAllocator_chunk_st* null, %struct._cmsSubAllocator_chunk_st** %38, align 8
  %39 = bitcast %struct._cmsSubAllocator_chunk_st** %12 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast i8* %37 to i64*
  store i64 %40, i64* %41, align 8
  %42 = bitcast %struct._cmsSubAllocator_chunk_st** %12 to i8**
  store i8* %24, i8** %42, align 8
  %43 = bitcast i8* %24 to %struct._cmsSubAllocator_chunk_st*
  %44 = load i32, i32* %36, align 4
  br label %45

45:                                               ; preds = %32, %8
  %46 = phi i32 [ %44, %32 ], [ %17, %8 ]
  %47 = phi %struct._cmsSubAllocator_chunk_st* [ %43, %32 ], [ %13, %8 ]
  %48 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %47, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %struct._cmsSubAllocator_chunk_st, %struct._cmsSubAllocator_chunk_st* %47, i64 0, i32 2
  %51 = zext i32 %46 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = add i32 %46, 32
  store i32 %53, i32* %50, align 4
  %54 = icmp eq i8* %52, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %45
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %52, i8* nonnull align 1 %9, i64 32, i1 false) #8
  br label %56

56:                                               ; preds = %4, %20, %31, %45, %55
  %57 = phi i8* [ null, %4 ], [ null, %45 ], [ %52, %55 ], [ null, %31 ], [ null, %20 ]
  %58 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 14
  store i8* %57, i8** %58, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsRegisterMutexPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct* readonly) local_unnamed_addr #6 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 14) #8
  %4 = icmp eq %struct._cmsPluginBaseStruct* %1, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false)
  br label %40

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %1, i64 1
  %8 = bitcast %struct._cmsPluginBaseStruct* %7 to i8* (%struct._cmsContext_struct*)**
  %9 = load i8* (%struct._cmsContext_struct*)*, i8* (%struct._cmsContext_struct*)** %8, align 8
  %10 = icmp eq i8* (%struct._cmsContext_struct*)* %9, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %1, i64 1, i32 2
  %13 = bitcast i32* %12 to void (%struct._cmsContext_struct*, i8*)**
  %14 = load void (%struct._cmsContext_struct*, i8*)*, void (%struct._cmsContext_struct*, i8*)** %13, align 8
  %15 = icmp eq void (%struct._cmsContext_struct*, i8*)* %14, null
  br i1 %15, label %40, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %1, i64 1, i32 3
  %18 = bitcast %struct._cmsPluginBaseStruct** %17 to i32 (%struct._cmsContext_struct*, i8*)**
  %19 = load i32 (%struct._cmsContext_struct*, i8*)*, i32 (%struct._cmsContext_struct*, i8*)** %18, align 8
  %20 = icmp eq i32 (%struct._cmsContext_struct*, i8*)* %19, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %1, i64 2
  %23 = bitcast %struct._cmsPluginBaseStruct* %22 to void (%struct._cmsContext_struct*, i8*)**
  %24 = load void (%struct._cmsContext_struct*, i8*)*, void (%struct._cmsContext_struct*, i8*)** %23, align 8
  %25 = icmp eq void (%struct._cmsContext_struct*, i8*)* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %21
  %27 = bitcast i8* %3 to i8* (%struct._cmsContext_struct*)**
  store i8* (%struct._cmsContext_struct*)* %9, i8* (%struct._cmsContext_struct*)** %27, align 8
  %28 = bitcast i32* %12 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %3, i64 8
  %31 = bitcast i8* %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = bitcast %struct._cmsPluginBaseStruct** %17 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds i8, i8* %3, i64 16
  %35 = bitcast i8* %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast %struct._cmsPluginBaseStruct* %22 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds i8, i8* %3, i64 24
  %39 = bitcast i8* %38 to i64*
  store i64 %37, i64* %39, align 8
  br label %40

40:                                               ; preds = %6, %11, %16, %21, %26, %5
  %41 = phi i32 [ 1, %5 ], [ 1, %26 ], [ 0, %21 ], [ 0, %16 ], [ 0, %11 ], [ 0, %6 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_cmsCreateMutex(%struct._cmsContext_struct*) local_unnamed_addr #6 {
  %2 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 14) #8
  %3 = bitcast i8* %2 to i8* (%struct._cmsContext_struct*)**
  %4 = load i8* (%struct._cmsContext_struct*)*, i8* (%struct._cmsContext_struct*)** %3, align 8
  %5 = icmp eq i8* (%struct._cmsContext_struct*)* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call i8* %4(%struct._cmsContext_struct* %0) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ null, %1 ]
  ret i8* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsDestroyMutex(%struct._cmsContext_struct*, i8*) local_unnamed_addr #6 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 14) #8
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to void (%struct._cmsContext_struct*, i8*)**
  %6 = load void (%struct._cmsContext_struct*, i8*)*, void (%struct._cmsContext_struct*, i8*)** %5, align 8
  %7 = icmp eq void (%struct._cmsContext_struct*, i8*)* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void %6(%struct._cmsContext_struct* %0, i8* %1) #8
  br label %9

9:                                                ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsLockMutex(%struct._cmsContext_struct*, i8*) local_unnamed_addr #6 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 14) #8
  %4 = getelementptr inbounds i8, i8* %3, i64 16
  %5 = bitcast i8* %4 to i32 (%struct._cmsContext_struct*, i8*)**
  %6 = load i32 (%struct._cmsContext_struct*, i8*)*, i32 (%struct._cmsContext_struct*, i8*)** %5, align 8
  %7 = icmp eq i32 (%struct._cmsContext_struct*, i8*)* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call i32 %6(%struct._cmsContext_struct* %0, i8* %1) #8
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i32 [ %9, %8 ], [ 1, %2 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsUnlockMutex(%struct._cmsContext_struct*, i8*) local_unnamed_addr #6 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 14) #8
  %4 = getelementptr inbounds i8, i8* %3, i64 24
  %5 = bitcast i8* %4 to void (%struct._cmsContext_struct*, i8*)**
  %6 = load void (%struct._cmsContext_struct*, i8*)*, void (%struct._cmsContext_struct*, i8*)** %5, align 8
  %7 = icmp eq void (%struct._cmsContext_struct*, i8*)* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void %6(%struct._cmsContext_struct* %0, i8* %1) #8
  br label %9

9:                                                ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #9

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #9

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #9

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #9

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
