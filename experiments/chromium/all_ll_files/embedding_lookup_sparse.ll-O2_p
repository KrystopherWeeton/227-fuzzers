; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/embedding_lookup_sparse.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/embedding_lookup_sparse.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, {}*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteEmbeddingLookupSparseParams = type { i32 }

@_ZZN6tflite3ops7builtin32Register_EMBEDDING_LOOKUP_SPARSEEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.4 = private unnamed_addr constant [80 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/embedding_lookup_sparse.cc\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"5\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"NumDimensions(ids)\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"ids->type\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"kTfLiteInt32\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"NumDimensions(indices)\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"indices->type\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"NumDimensions(shape)\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"shape->type\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"NumDimensions(weights)\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"weights->type\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"kTfLiteFloat32\00", align 1
@.str.20 = private unnamed_addr constant [28 x i8] c"SizeOfDimension(indices, 0)\00", align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"SizeOfDimension(ids, 0)\00", align 1
@.str.22 = private unnamed_addr constant [28 x i8] c"SizeOfDimension(weights, 0)\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"NumDimensions(value) >= 2\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"output->type\00", align 1
@.str.27 = private unnamed_addr constant [32 x i8] c"SizeOfDimension(dense_shape, 0)\00", align 1
@.str.28 = private unnamed_addr constant [12 x i8] c"lookup_rank\00", align 1
@.str.29 = private unnamed_addr constant [77 x i8] c"Embedding Lookup Sparse: index out of bounds. Got %d, and bounds are [0, %d]\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin32Register_EMBEDDING_LOOKUP_SPARSEEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin32Register_EMBEDDING_LOOKUP_SPARSEEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 5
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i32 83, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i32 %6, i32 5) #5
  br label %180

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %15, i32 1) #5
  br label %180

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %38 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %37, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %38(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i32 87, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %34, i32 1) #5
  br label %180

39:                                               ; preds = %29
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %45 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %44, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %45(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i32 88, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i32 %41, i32 2) #5
  br label %180

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %52 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %51, align 8
  %53 = sext i32 %48 to i64
  %54 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 %53
  br label %55

55:                                               ; preds = %46, %50
  %56 = phi %struct.TfLiteTensor* [ %54, %50 ], [ null, %46 ]
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 2
  %58 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %57, align 8
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 2
  br i1 %61, label %65, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %64 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %63, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %64(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i32 91, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i32 %60, i32 2) #5
  br label %180

65:                                               ; preds = %55
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 2
  br i1 %68, label %72, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %71 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %70, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %71(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i32 92, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i32 %67, i32 2) #5
  br label %180

72:                                               ; preds = %65
  %73 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %74, 0
  br i1 %75, label %81, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %78 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %77, align 8
  %79 = sext i32 %74 to i64
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %78, i64 %79
  br label %81

81:                                               ; preds = %72, %76
  %82 = phi %struct.TfLiteTensor* [ %80, %76 ], [ null, %72 ]
  %83 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %82, i64 0, i32 2
  %84 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %83, align 8
  %85 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %84, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %90 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %89, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %90(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i32 95, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %86, i32 1) #5
  br label %180

91:                                               ; preds = %81
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %82, i64 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 2
  br i1 %94, label %98, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %97 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %96, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %97(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i32 96, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i32 %93, i32 2) #5
  br label %180

98:                                               ; preds = %91
  %99 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 3
  %100 = load i32, i32* %99, align 4
  %101 = icmp slt i32 %100, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %104 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %103, align 8
  %105 = sext i32 %100 to i64
  %106 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %104, i64 %105
  br label %107

107:                                              ; preds = %98, %102
  %108 = phi %struct.TfLiteTensor* [ %106, %102 ], [ null, %98 ]
  %109 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %108, i64 0, i32 2
  %110 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %109, align 8
  %111 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %117, label %114

114:                                              ; preds = %107
  %115 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %116 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %115, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %116(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i32 99, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %112, i32 1) #5
  br label %180

117:                                              ; preds = %107
  %118 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %108, i64 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %124, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %123 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %122, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %123(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i32 100, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i32 %119, i32 1) #5
  br label %180

124:                                              ; preds = %117
  %125 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %58, i64 0, i32 1, i64 0
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %126, %128
  br i1 %129, label %133, label %130

130:                                              ; preds = %124
  %131 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %132 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %131, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %132(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i32 103, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i64 0, i64 0), i32 %126, i32 %128) #5
  br label %180

133:                                              ; preds = %124
  %134 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %126, %135
  br i1 %136, label %140, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %139 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %138, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %139(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i32 105, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22, i64 0, i64 0), i32 %126, i32 %135) #5
  br label %180

140:                                              ; preds = %133
  %141 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 4
  %142 = load i32, i32* %141, align 4
  %143 = icmp slt i32 %142, 0
  br i1 %143, label %149, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %146 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %145, align 8
  %147 = sext i32 %142 to i64
  %148 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %146, i64 %147
  br label %149

149:                                              ; preds = %140, %144
  %150 = phi %struct.TfLiteTensor* [ %148, %144 ], [ null, %140 ]
  %151 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %150, i64 0, i32 2
  %152 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %151, align 8
  %153 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %152, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = icmp sgt i32 %154, 1
  br i1 %155, label %159, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %158 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %157, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %158(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i32 108, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #5
  br label %180

159:                                              ; preds = %149
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %161 = load i32, i32* %160, align 4
  %162 = icmp slt i32 %161, 0
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %165 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %164, align 8
  %166 = sext i32 %161 to i64
  %167 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %165, i64 %166
  br label %168

168:                                              ; preds = %159, %163
  %169 = phi %struct.TfLiteTensor* [ %167, %163 ], [ null, %159 ]
  %170 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %169, i64 0, i32 0
  %171 = load i32, i32* %170, align 8
  %172 = icmp eq i32 %171, 1
  br i1 %172, label %178, label %173

173:                                              ; preds = %168
  %174 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %175 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %174, align 8
  %176 = tail call i8* @TfLiteTypeGetName(i32 %171) #5
  %177 = tail call i8* @TfLiteTypeGetName(i32 1) #5
  tail call void (%struct.TfLiteContext*, i8*, ...) %175(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i32 112, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i8* %176, i8* %177) #5
  br label %180

178:                                              ; preds = %168
  %179 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %169, i64 0, i32 4
  store i32 4, i32* %179, align 8
  br label %180

180:                                              ; preds = %36, %43, %88, %95, %156, %178, %173, %137, %130, %121, %114, %69, %62, %17, %8
  %181 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %36 ], [ 1, %43 ], [ 1, %62 ], [ 1, %69 ], [ 1, %88 ], [ 1, %95 ], [ 1, %114 ], [ 1, %121 ], [ 1, %130 ], [ 1, %137 ], [ 1, %156 ], [ 1, %173 ], [ 0, %178 ]
  ret i32 %181
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %4 = bitcast i8** %3 to %struct.TfLiteEmbeddingLookupSparseParams**
  %5 = load %struct.TfLiteEmbeddingLookupSparseParams*, %struct.TfLiteEmbeddingLookupSparseParams** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %7 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 1, i64 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %13 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %12, align 8
  %14 = sext i32 %9 to i64
  %15 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %13, i64 %14
  br label %16

16:                                               ; preds = %2, %11
  %17 = phi %struct.TfLiteTensor* [ %15, %11 ], [ null, %2 ]
  %18 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %19 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %18, align 8
  %20 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %25 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %24, align 8
  %26 = sext i32 %21 to i64
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %25, i64 %26
  br label %28

28:                                               ; preds = %16, %23
  %29 = phi %struct.TfLiteTensor* [ %27, %23 ], [ null, %16 ]
  %30 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %35 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %34, align 8
  %36 = sext i32 %31 to i64
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 %36
  br label %38

38:                                               ; preds = %28, %33
  %39 = phi %struct.TfLiteTensor* [ %37, %33 ], [ null, %28 ]
  %40 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = sext i32 %41 to i64
  %47 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 %46
  br label %48

48:                                               ; preds = %38, %43
  %49 = phi %struct.TfLiteTensor* [ %47, %43 ], [ null, %38 ]
  %50 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 3
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %55 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %54, align 8
  %56 = sext i32 %51 to i64
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %55, i64 %56
  br label %58

58:                                               ; preds = %48, %53
  %59 = phi %struct.TfLiteTensor* [ %57, %53 ], [ null, %48 ]
  %60 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 4
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %65 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %64, align 8
  %66 = sext i32 %61 to i64
  %67 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %65, i64 %66
  br label %68

68:                                               ; preds = %58, %63
  %69 = phi %struct.TfLiteTensor* [ %67, %63 ], [ null, %58 ]
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %39, i64 0, i32 2
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 1, i64 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %69, i64 0, i32 2
  %75 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %74, align 8
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %79 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %78, align 8
  %80 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %79, i64 0, i32 1, i64 0
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 0
  %83 = load i32, i32* %82, align 4
  %84 = add i32 %73, -1
  %85 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %49, i64 0, i32 2
  %86 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %85, align 8
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %86, i64 0, i32 1, i64 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, %73
  br i1 %89, label %93, label %90

90:                                               ; preds = %68
  %91 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %92 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %91, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %92(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i32 160, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i64 0, i64 0), i32 %88, i32 %73) #5
  br label %595

93:                                               ; preds = %68
  %94 = add i32 %73, -2
  %95 = add i32 %94, %77
  %96 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %95) #5
  %97 = icmp sgt i32 %84, 0
  br i1 %97, label %98, label %123

98:                                               ; preds = %93
  %99 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %49, i64 0, i32 1, i32 0
  %100 = zext i32 %84 to i64
  %101 = add nsw i64 %100, -1
  %102 = and i64 %100, 3
  %103 = icmp ult i64 %101, 3
  br i1 %103, label %106, label %104

104:                                              ; preds = %98
  %105 = sub nsw i64 %100, %102
  br label %139

106:                                              ; preds = %139, %98
  %107 = phi i32 [ undef, %98 ], [ %164, %139 ]
  %108 = phi i64 [ 0, %98 ], [ %166, %139 ]
  %109 = phi i32 [ 1, %98 ], [ %164, %139 ]
  %110 = icmp eq i64 %102, 0
  br i1 %110, label %123, label %111

111:                                              ; preds = %106, %111
  %112 = phi i64 [ %120, %111 ], [ %108, %106 ]
  %113 = phi i32 [ %118, %111 ], [ %109, %106 ]
  %114 = phi i64 [ %121, %111 ], [ %102, %106 ]
  %115 = load i32*, i32** %99, align 8
  %116 = getelementptr inbounds i32, i32* %115, i64 %112
  %117 = load i32, i32* %116, align 4
  %118 = mul nsw i32 %117, %113
  %119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %112
  store i32 %117, i32* %119, align 4
  %120 = add nuw nsw i64 %112, 1
  %121 = add i64 %114, -1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %111, !llvm.loop !2

123:                                              ; preds = %106, %111, %93
  %124 = phi i32 [ 0, %93 ], [ %84, %111 ], [ %84, %106 ]
  %125 = phi i32 [ 1, %93 ], [ %107, %106 ], [ %118, %111 ]
  %126 = icmp sgt i32 %77, 1
  br i1 %126, label %127, label %181

127:                                              ; preds = %123
  %128 = zext i32 %124 to i64
  %129 = add i32 %124, %77
  %130 = add i32 %129, -1
  %131 = zext i32 %130 to i64
  %132 = sub nsw i64 %131, %128
  %133 = xor i64 %128, -1
  %134 = and i64 %132, 1
  %135 = sub nsw i64 0, %131
  %136 = icmp eq i64 %133, %135
  br i1 %136, label %169, label %137

137:                                              ; preds = %127
  %138 = sub nsw i64 %132, %134
  br label %187

139:                                              ; preds = %139, %104
  %140 = phi i64 [ 0, %104 ], [ %166, %139 ]
  %141 = phi i32 [ 1, %104 ], [ %164, %139 ]
  %142 = phi i64 [ %105, %104 ], [ %167, %139 ]
  %143 = load i32*, i32** %99, align 8
  %144 = getelementptr inbounds i32, i32* %143, i64 %140
  %145 = load i32, i32* %144, align 4
  %146 = mul nsw i32 %145, %141
  %147 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %140
  store i32 %145, i32* %147, align 4
  %148 = or i64 %140, 1
  %149 = load i32*, i32** %99, align 8
  %150 = getelementptr inbounds i32, i32* %149, i64 %148
  %151 = load i32, i32* %150, align 4
  %152 = mul nsw i32 %151, %146
  %153 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %148
  store i32 %151, i32* %153, align 4
  %154 = or i64 %140, 2
  %155 = load i32*, i32** %99, align 8
  %156 = getelementptr inbounds i32, i32* %155, i64 %154
  %157 = load i32, i32* %156, align 4
  %158 = mul nsw i32 %157, %152
  %159 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %154
  store i32 %157, i32* %159, align 4
  %160 = or i64 %140, 3
  %161 = load i32*, i32** %99, align 8
  %162 = getelementptr inbounds i32, i32* %161, i64 %160
  %163 = load i32, i32* %162, align 4
  %164 = mul nsw i32 %163, %158
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %160
  store i32 %163, i32* %165, align 4
  %166 = add nuw nsw i64 %140, 4
  %167 = add i64 %142, -4
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %106, label %139

169:                                              ; preds = %187, %127
  %170 = phi i32 [ undef, %127 ], [ %202, %187 ]
  %171 = phi i64 [ %128, %127 ], [ %205, %187 ]
  %172 = phi i64 [ 1, %127 ], [ %204, %187 ]
  %173 = phi i32 [ 1, %127 ], [ %202, %187 ]
  %174 = icmp eq i64 %134, 0
  br i1 %174, label %181, label %175

175:                                              ; preds = %169
  %176 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %74, align 8
  %177 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %176, i64 0, i32 1, i64 %172
  %178 = load i32, i32* %177, align 4
  %179 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %171
  store i32 %178, i32* %179, align 4
  %180 = mul nsw i32 %178, %173
  br label %181

181:                                              ; preds = %175, %169, %123
  %182 = phi i32 [ 1, %123 ], [ %170, %169 ], [ %180, %175 ]
  %183 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %184 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %183, align 8
  %185 = tail call i32 %184(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %17, %struct.TfLiteIntArray* %96) #5
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %208, label %595

187:                                              ; preds = %187, %137
  %188 = phi i64 [ %128, %137 ], [ %205, %187 ]
  %189 = phi i64 [ 1, %137 ], [ %204, %187 ]
  %190 = phi i32 [ 1, %137 ], [ %202, %187 ]
  %191 = phi i64 [ %138, %137 ], [ %206, %187 ]
  %192 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %74, align 8
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %192, i64 0, i32 1, i64 %189
  %194 = load i32, i32* %193, align 4
  %195 = mul nsw i32 %194, %190
  %196 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %188
  store i32 %194, i32* %196, align 4
  %197 = add nuw nsw i64 %189, 1
  %198 = add nuw nsw i64 %188, 1
  %199 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %74, align 8
  %200 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %199, i64 0, i32 1, i64 %197
  %201 = load i32, i32* %200, align 4
  %202 = mul nsw i32 %201, %195
  %203 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %198
  store i32 %201, i32* %203, align 4
  %204 = add nuw nsw i64 %189, 2
  %205 = add nuw nsw i64 %188, 2
  %206 = add i64 %191, -2
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %169, label %187

208:                                              ; preds = %181
  %209 = mul i32 %182, %125
  %210 = sext i32 %209 to i64
  %211 = shl nsw i64 %210, 2
  tail call void @TfLiteTensorRealloc(i64 %211, %struct.TfLiteTensor* %17) #5
  %212 = icmp eq %struct.TfLiteTensor* %17, null
  br i1 %212, label %218, label %213

213:                                              ; preds = %208
  %214 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %17, i64 0, i32 1
  %215 = bitcast %union.TfLitePtrUnion* %214 to float**
  %216 = load float*, float** %215, align 8
  %217 = bitcast float* %216 to i8*
  br label %218

218:                                              ; preds = %208, %213
  %219 = phi i8* [ %217, %213 ], [ null, %208 ]
  %220 = phi float* [ %216, %213 ], [ null, %208 ]
  %221 = icmp eq %struct.TfLiteTensor* %59, null
  br i1 %221, label %226, label %222

222:                                              ; preds = %218
  %223 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %59, i64 0, i32 1
  %224 = bitcast %union.TfLitePtrUnion* %223 to float**
  %225 = load float*, float** %224, align 8
  br label %226

226:                                              ; preds = %218, %222
  %227 = phi float* [ %225, %222 ], [ null, %218 ]
  %228 = icmp eq %struct.TfLiteTensor* %69, null
  br i1 %228, label %233, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %69, i64 0, i32 1
  %231 = bitcast %union.TfLitePtrUnion* %230 to float**
  %232 = load float*, float** %231, align 8
  br label %233

233:                                              ; preds = %226, %229
  %234 = phi float* [ %232, %229 ], [ null, %226 ]
  %235 = icmp sgt i32 %209, 0
  br i1 %235, label %236, label %239

236:                                              ; preds = %233
  %237 = zext i32 %209 to i64
  %238 = shl nuw nsw i64 %237, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %219, i8 0, i64 %238, i1 false)
  br label %239

239:                                              ; preds = %236, %233
  %240 = icmp sgt i32 %81, 0
  br i1 %240, label %241, label %519

241:                                              ; preds = %239
  %242 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1, i32 0
  %243 = icmp sgt i32 %94, -1
  %244 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %39, i64 0, i32 1, i32 0
  %245 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %49, i64 0, i32 1, i32 0
  %246 = getelementptr inbounds %struct.TfLiteEmbeddingLookupSparseParams, %struct.TfLiteEmbeddingLookupSparseParams* %5, i64 0, i32 0
  %247 = icmp sgt i32 %182, 0
  %248 = zext i32 %182 to i64
  %249 = sext i32 %94 to i64
  %250 = sext i32 %73 to i64
  %251 = zext i32 %81 to i64
  %252 = getelementptr float, float* %220, i64 %248
  %253 = getelementptr float, float* %234, i64 %248
  %254 = and i64 %248, 4294967292
  %255 = add nsw i64 %254, -4
  %256 = lshr exact i64 %255, 2
  %257 = add nuw nsw i64 %256, 1
  %258 = and i64 %248, 4294967288
  %259 = add nsw i64 %258, -8
  %260 = lshr exact i64 %259, 3
  %261 = add nuw nsw i64 %260, 1
  %262 = icmp ult i32 %182, 4
  %263 = and i64 %248, 4294967292
  %264 = and i64 %257, 1
  %265 = icmp eq i64 %255, 0
  %266 = sub nuw nsw i64 %257, %264
  %267 = icmp eq i64 %264, 0
  %268 = icmp eq i64 %263, %248
  %269 = icmp ult i32 %182, 8
  %270 = and i64 %248, 4294967288
  %271 = and i64 %261, 1
  %272 = icmp eq i64 %259, 0
  %273 = sub nuw nsw i64 %261, %271
  %274 = icmp eq i64 %271, 0
  %275 = icmp eq i64 %270, %248
  %276 = and i64 %248, 1
  %277 = icmp eq i64 %276, 0
  %278 = sub nsw i64 0, %248
  br label %279

279:                                              ; preds = %508, %241
  %280 = phi i64 [ 0, %241 ], [ %513, %508 ]
  %281 = phi i32 [ 0, %241 ], [ %511, %508 ]
  %282 = phi float [ 0.000000e+00, %241 ], [ %510, %508 ]
  %283 = phi float [ 0.000000e+00, %241 ], [ %509, %508 ]
  %284 = phi i32 [ 0, %241 ], [ %512, %508 ]
  %285 = load i32*, i32** %242, align 8
  %286 = getelementptr inbounds i32, i32* %285, i64 %280
  %287 = load i32, i32* %286, align 4
  %288 = icmp sge i32 %287, %83
  %289 = icmp slt i32 %287, 0
  %290 = or i1 %288, %289
  br i1 %290, label %515, label %291

291:                                              ; preds = %279
  %292 = mul nsw i64 %280, %250
  br i1 %243, label %293, label %296

293:                                              ; preds = %291
  %294 = load i32*, i32** %244, align 8
  %295 = load i32*, i32** %245, align 8
  br label %300

296:                                              ; preds = %300, %291
  %297 = phi i32 [ 0, %291 ], [ %308, %300 ]
  %298 = mul nsw i32 %297, %182
  %299 = icmp eq i32 %298, %284
  br i1 %299, label %372, label %314

300:                                              ; preds = %293, %300
  %301 = phi i64 [ %249, %293 ], [ %312, %300 ]
  %302 = phi i32 [ 1, %293 ], [ %311, %300 ]
  %303 = phi i32 [ 0, %293 ], [ %308, %300 ]
  %304 = add nsw i64 %301, %292
  %305 = getelementptr inbounds i32, i32* %294, i64 %304
  %306 = load i32, i32* %305, align 4
  %307 = mul nsw i32 %306, %302
  %308 = add nsw i32 %307, %303
  %309 = getelementptr inbounds i32, i32* %295, i64 %301
  %310 = load i32, i32* %309, align 4
  %311 = mul nsw i32 %310, %302
  %312 = add nsw i64 %301, -1
  %313 = icmp sgt i64 %301, 0
  br i1 %313, label %300, label %296

314:                                              ; preds = %296
  %315 = load i32, i32* %246, align 4
  %316 = sext i32 %284 to i64
  %317 = getelementptr inbounds float, float* %220, i64 %316
  %318 = icmp ne i32 %315, 0
  %319 = icmp sgt i32 %281, 0
  %320 = and i1 %319, %318
  br i1 %320, label %321, label %372

321:                                              ; preds = %314
  switch i32 %315, label %325 [
    i32 1, label %322
    i32 2, label %323
  ]

322:                                              ; preds = %321
  br label %325

323:                                              ; preds = %321
  %324 = tail call float @sqrtf(float %282) #5
  br label %325

325:                                              ; preds = %323, %322, %321
  %326 = phi float [ 1.000000e+00, %321 ], [ %324, %323 ], [ %283, %322 ]
  br i1 %247, label %327, label %359

327:                                              ; preds = %325
  br i1 %262, label %328, label %330

328:                                              ; preds = %358, %327
  %329 = phi i64 [ 0, %327 ], [ %263, %358 ]
  br label %365

330:                                              ; preds = %327
  %331 = insertelement <4 x float> undef, float %326, i32 0
  %332 = shufflevector <4 x float> %331, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %265, label %350, label %333

333:                                              ; preds = %330, %333
  %334 = phi i64 [ %347, %333 ], [ 0, %330 ]
  %335 = phi i64 [ %348, %333 ], [ %266, %330 ]
  %336 = getelementptr inbounds float, float* %317, i64 %334
  %337 = bitcast float* %336 to <4 x float>*
  %338 = load <4 x float>, <4 x float>* %337, align 4
  %339 = fdiv <4 x float> %338, %332
  %340 = bitcast float* %336 to <4 x float>*
  store <4 x float> %339, <4 x float>* %340, align 4
  %341 = or i64 %334, 4
  %342 = getelementptr inbounds float, float* %317, i64 %341
  %343 = bitcast float* %342 to <4 x float>*
  %344 = load <4 x float>, <4 x float>* %343, align 4
  %345 = fdiv <4 x float> %344, %332
  %346 = bitcast float* %342 to <4 x float>*
  store <4 x float> %345, <4 x float>* %346, align 4
  %347 = add i64 %334, 8
  %348 = add i64 %335, -2
  %349 = icmp eq i64 %348, 0
  br i1 %349, label %350, label %333, !llvm.loop !4

350:                                              ; preds = %333, %330
  %351 = phi i64 [ 0, %330 ], [ %347, %333 ]
  br i1 %267, label %358, label %352

352:                                              ; preds = %350
  %353 = getelementptr inbounds float, float* %317, i64 %351
  %354 = bitcast float* %353 to <4 x float>*
  %355 = load <4 x float>, <4 x float>* %354, align 4
  %356 = fdiv <4 x float> %355, %332
  %357 = bitcast float* %353 to <4 x float>*
  store <4 x float> %356, <4 x float>* %357, align 4
  br label %358

358:                                              ; preds = %350, %352
  br i1 %268, label %372, label %328

359:                                              ; preds = %325
  %360 = getelementptr inbounds float, float* %227, i64 %280
  %361 = load float, float* %360, align 4
  %362 = fmul float %361, %361
  %363 = fadd float %362, 0.000000e+00
  %364 = fadd float %361, 0.000000e+00
  br label %508

365:                                              ; preds = %328, %365
  %366 = phi i64 [ %370, %365 ], [ %329, %328 ]
  %367 = getelementptr inbounds float, float* %317, i64 %366
  %368 = load float, float* %367, align 4
  %369 = fdiv float %368, %326
  store float %369, float* %367, align 4
  %370 = add nuw nsw i64 %366, 1
  %371 = icmp eq i64 %370, %248
  br i1 %371, label %372, label %365, !llvm.loop !6

372:                                              ; preds = %365, %358, %314, %296
  %373 = phi i32 [ %284, %296 ], [ %298, %314 ], [ %298, %358 ], [ %298, %365 ]
  %374 = phi float [ %283, %296 ], [ 0.000000e+00, %314 ], [ 0.000000e+00, %358 ], [ 0.000000e+00, %365 ]
  %375 = phi float [ %282, %296 ], [ 0.000000e+00, %314 ], [ 0.000000e+00, %358 ], [ 0.000000e+00, %365 ]
  %376 = phi i32 [ %281, %296 ], [ 0, %314 ], [ 0, %358 ], [ 0, %365 ]
  %377 = add nsw i32 %376, 1
  %378 = getelementptr inbounds float, float* %227, i64 %280
  %379 = load float, float* %378, align 4
  %380 = fmul float %379, %379
  %381 = fadd float %375, %380
  %382 = fadd float %374, %379
  br i1 %247, label %383, label %508

383:                                              ; preds = %372
  %384 = mul nsw i32 %287, %182
  %385 = sext i32 %373 to i64
  %386 = sext i32 %384 to i64
  br i1 %269, label %471, label %387

387:                                              ; preds = %383
  %388 = getelementptr float, float* %220, i64 %385
  %389 = getelementptr float, float* %252, i64 %385
  %390 = getelementptr float, float* %234, i64 %386
  %391 = getelementptr float, float* %253, i64 %386
  %392 = icmp ult float* %388, %391
  %393 = icmp ult float* %390, %389
  %394 = and i1 %392, %393
  br i1 %394, label %471, label %395

395:                                              ; preds = %387
  %396 = insertelement <4 x float> undef, float %379, i32 0
  %397 = shufflevector <4 x float> %396, <4 x float> undef, <4 x i32> zeroinitializer
  %398 = insertelement <4 x float> undef, float %379, i32 0
  %399 = shufflevector <4 x float> %398, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %272, label %447, label %400

400:                                              ; preds = %395, %400
  %401 = phi i64 [ %444, %400 ], [ 0, %395 ]
  %402 = phi i64 [ %445, %400 ], [ %273, %395 ]
  %403 = add nsw i64 %401, %386
  %404 = getelementptr inbounds float, float* %234, i64 %403
  %405 = bitcast float* %404 to <4 x float>*
  %406 = load <4 x float>, <4 x float>* %405, align 4, !alias.scope !8
  %407 = getelementptr inbounds float, float* %404, i64 4
  %408 = bitcast float* %407 to <4 x float>*
  %409 = load <4 x float>, <4 x float>* %408, align 4, !alias.scope !8
  %410 = fmul <4 x float> %397, %406
  %411 = fmul <4 x float> %399, %409
  %412 = add nsw i64 %401, %385
  %413 = getelementptr inbounds float, float* %220, i64 %412
  %414 = bitcast float* %413 to <4 x float>*
  %415 = load <4 x float>, <4 x float>* %414, align 4, !alias.scope !11, !noalias !8
  %416 = getelementptr inbounds float, float* %413, i64 4
  %417 = bitcast float* %416 to <4 x float>*
  %418 = load <4 x float>, <4 x float>* %417, align 4, !alias.scope !11, !noalias !8
  %419 = fadd <4 x float> %415, %410
  %420 = fadd <4 x float> %418, %411
  %421 = bitcast float* %413 to <4 x float>*
  store <4 x float> %419, <4 x float>* %421, align 4, !alias.scope !11, !noalias !8
  %422 = bitcast float* %416 to <4 x float>*
  store <4 x float> %420, <4 x float>* %422, align 4, !alias.scope !11, !noalias !8
  %423 = or i64 %401, 8
  %424 = add nsw i64 %423, %386
  %425 = getelementptr inbounds float, float* %234, i64 %424
  %426 = bitcast float* %425 to <4 x float>*
  %427 = load <4 x float>, <4 x float>* %426, align 4, !alias.scope !8
  %428 = getelementptr inbounds float, float* %425, i64 4
  %429 = bitcast float* %428 to <4 x float>*
  %430 = load <4 x float>, <4 x float>* %429, align 4, !alias.scope !8
  %431 = fmul <4 x float> %397, %427
  %432 = fmul <4 x float> %399, %430
  %433 = add nsw i64 %423, %385
  %434 = getelementptr inbounds float, float* %220, i64 %433
  %435 = bitcast float* %434 to <4 x float>*
  %436 = load <4 x float>, <4 x float>* %435, align 4, !alias.scope !11, !noalias !8
  %437 = getelementptr inbounds float, float* %434, i64 4
  %438 = bitcast float* %437 to <4 x float>*
  %439 = load <4 x float>, <4 x float>* %438, align 4, !alias.scope !11, !noalias !8
  %440 = fadd <4 x float> %436, %431
  %441 = fadd <4 x float> %439, %432
  %442 = bitcast float* %434 to <4 x float>*
  store <4 x float> %440, <4 x float>* %442, align 4, !alias.scope !11, !noalias !8
  %443 = bitcast float* %437 to <4 x float>*
  store <4 x float> %441, <4 x float>* %443, align 4, !alias.scope !11, !noalias !8
  %444 = add i64 %401, 16
  %445 = add i64 %402, -2
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %400, !llvm.loop !13

447:                                              ; preds = %400, %395
  %448 = phi i64 [ 0, %395 ], [ %444, %400 ]
  br i1 %274, label %470, label %449

449:                                              ; preds = %447
  %450 = add nsw i64 %448, %386
  %451 = getelementptr inbounds float, float* %234, i64 %450
  %452 = bitcast float* %451 to <4 x float>*
  %453 = load <4 x float>, <4 x float>* %452, align 4, !alias.scope !8
  %454 = getelementptr inbounds float, float* %451, i64 4
  %455 = bitcast float* %454 to <4 x float>*
  %456 = load <4 x float>, <4 x float>* %455, align 4, !alias.scope !8
  %457 = fmul <4 x float> %397, %453
  %458 = fmul <4 x float> %399, %456
  %459 = add nsw i64 %448, %385
  %460 = getelementptr inbounds float, float* %220, i64 %459
  %461 = bitcast float* %460 to <4 x float>*
  %462 = load <4 x float>, <4 x float>* %461, align 4, !alias.scope !11, !noalias !8
  %463 = getelementptr inbounds float, float* %460, i64 4
  %464 = bitcast float* %463 to <4 x float>*
  %465 = load <4 x float>, <4 x float>* %464, align 4, !alias.scope !11, !noalias !8
  %466 = fadd <4 x float> %462, %457
  %467 = fadd <4 x float> %465, %458
  %468 = bitcast float* %460 to <4 x float>*
  store <4 x float> %466, <4 x float>* %468, align 4, !alias.scope !11, !noalias !8
  %469 = bitcast float* %463 to <4 x float>*
  store <4 x float> %467, <4 x float>* %469, align 4, !alias.scope !11, !noalias !8
  br label %470

470:                                              ; preds = %447, %449
  br i1 %275, label %508, label %471

471:                                              ; preds = %470, %387, %383
  %472 = phi i64 [ 0, %387 ], [ 0, %383 ], [ %270, %470 ]
  %473 = xor i64 %472, -1
  br i1 %277, label %484, label %474

474:                                              ; preds = %471
  %475 = add nsw i64 %472, %386
  %476 = getelementptr inbounds float, float* %234, i64 %475
  %477 = load float, float* %476, align 4
  %478 = fmul float %379, %477
  %479 = add nsw i64 %472, %385
  %480 = getelementptr inbounds float, float* %220, i64 %479
  %481 = load float, float* %480, align 4
  %482 = fadd float %481, %478
  store float %482, float* %480, align 4
  %483 = or i64 %472, 1
  br label %484

484:                                              ; preds = %474, %471
  %485 = phi i64 [ %483, %474 ], [ %472, %471 ]
  %486 = icmp eq i64 %473, %278
  br i1 %486, label %508, label %487

487:                                              ; preds = %484, %487
  %488 = phi i64 [ %506, %487 ], [ %485, %484 ]
  %489 = add nsw i64 %488, %386
  %490 = getelementptr inbounds float, float* %234, i64 %489
  %491 = load float, float* %490, align 4
  %492 = fmul float %379, %491
  %493 = add nsw i64 %488, %385
  %494 = getelementptr inbounds float, float* %220, i64 %493
  %495 = load float, float* %494, align 4
  %496 = fadd float %495, %492
  store float %496, float* %494, align 4
  %497 = add nuw nsw i64 %488, 1
  %498 = add nsw i64 %497, %386
  %499 = getelementptr inbounds float, float* %234, i64 %498
  %500 = load float, float* %499, align 4
  %501 = fmul float %379, %500
  %502 = add nsw i64 %497, %385
  %503 = getelementptr inbounds float, float* %220, i64 %502
  %504 = load float, float* %503, align 4
  %505 = fadd float %504, %501
  store float %505, float* %503, align 4
  %506 = add nuw nsw i64 %488, 2
  %507 = icmp eq i64 %506, %248
  br i1 %507, label %508, label %487, !llvm.loop !14

508:                                              ; preds = %484, %487, %470, %359, %372
  %509 = phi float [ %364, %359 ], [ %382, %372 ], [ %382, %470 ], [ %382, %487 ], [ %382, %484 ]
  %510 = phi float [ %363, %359 ], [ %381, %372 ], [ %381, %470 ], [ %381, %487 ], [ %381, %484 ]
  %511 = phi i32 [ 1, %359 ], [ %377, %372 ], [ %377, %470 ], [ %377, %487 ], [ %377, %484 ]
  %512 = phi i32 [ %298, %359 ], [ %373, %372 ], [ %373, %470 ], [ %373, %487 ], [ %373, %484 ]
  %513 = add nuw nsw i64 %280, 1
  %514 = icmp eq i64 %513, %251
  br i1 %514, label %519, label %279

515:                                              ; preds = %279
  %516 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %517 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %516, align 8
  %518 = add nsw i32 %83, -1
  tail call void (%struct.TfLiteContext*, i8*, ...) %517(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.29, i64 0, i64 0), i32 %287, i32 %518) #5
  br label %595

519:                                              ; preds = %508, %239
  %520 = phi i32 [ 0, %239 ], [ %512, %508 ]
  %521 = phi float [ 0.000000e+00, %239 ], [ %509, %508 ]
  %522 = phi float [ 0.000000e+00, %239 ], [ %510, %508 ]
  %523 = phi i32 [ 0, %239 ], [ %511, %508 ]
  %524 = getelementptr inbounds %struct.TfLiteEmbeddingLookupSparseParams, %struct.TfLiteEmbeddingLookupSparseParams* %5, i64 0, i32 0
  %525 = load i32, i32* %524, align 4
  br i1 %212, label %530, label %526

526:                                              ; preds = %519
  %527 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %17, i64 0, i32 1
  %528 = bitcast %union.TfLitePtrUnion* %527 to float**
  %529 = load float*, float** %528, align 8
  br label %530

530:                                              ; preds = %519, %526
  %531 = phi float* [ %529, %526 ], [ null, %519 ]
  %532 = sext i32 %520 to i64
  %533 = getelementptr inbounds float, float* %531, i64 %532
  %534 = icmp ne i32 %525, 0
  %535 = icmp sgt i32 %523, 0
  %536 = and i1 %535, %534
  br i1 %536, label %537, label %595

537:                                              ; preds = %530
  switch i32 %525, label %541 [
    i32 1, label %538
    i32 2, label %539
  ]

538:                                              ; preds = %537
  br label %541

539:                                              ; preds = %537
  %540 = tail call float @sqrtf(float %522) #5
  br label %541

541:                                              ; preds = %539, %538, %537
  %542 = phi float [ 1.000000e+00, %537 ], [ %540, %539 ], [ %521, %538 ]
  %543 = icmp sgt i32 %182, 0
  br i1 %543, label %544, label %595

544:                                              ; preds = %541
  %545 = zext i32 %182 to i64
  %546 = icmp ult i32 %182, 4
  br i1 %546, label %586, label %547

547:                                              ; preds = %544
  %548 = and i64 %545, 4294967292
  %549 = insertelement <4 x float> undef, float %542, i32 0
  %550 = shufflevector <4 x float> %549, <4 x float> undef, <4 x i32> zeroinitializer
  %551 = add nsw i64 %548, -4
  %552 = lshr exact i64 %551, 2
  %553 = add nuw nsw i64 %552, 1
  %554 = and i64 %553, 1
  %555 = icmp eq i64 %551, 0
  br i1 %555, label %575, label %556

556:                                              ; preds = %547
  %557 = sub nuw nsw i64 %553, %554
  br label %558

558:                                              ; preds = %558, %556
  %559 = phi i64 [ 0, %556 ], [ %572, %558 ]
  %560 = phi i64 [ %557, %556 ], [ %573, %558 ]
  %561 = getelementptr inbounds float, float* %533, i64 %559
  %562 = bitcast float* %561 to <4 x float>*
  %563 = load <4 x float>, <4 x float>* %562, align 4
  %564 = fdiv <4 x float> %563, %550
  %565 = bitcast float* %561 to <4 x float>*
  store <4 x float> %564, <4 x float>* %565, align 4
  %566 = or i64 %559, 4
  %567 = getelementptr inbounds float, float* %533, i64 %566
  %568 = bitcast float* %567 to <4 x float>*
  %569 = load <4 x float>, <4 x float>* %568, align 4
  %570 = fdiv <4 x float> %569, %550
  %571 = bitcast float* %567 to <4 x float>*
  store <4 x float> %570, <4 x float>* %571, align 4
  %572 = add i64 %559, 8
  %573 = add i64 %560, -2
  %574 = icmp eq i64 %573, 0
  br i1 %574, label %575, label %558, !llvm.loop !15

575:                                              ; preds = %558, %547
  %576 = phi i64 [ 0, %547 ], [ %572, %558 ]
  %577 = icmp eq i64 %554, 0
  br i1 %577, label %584, label %578

578:                                              ; preds = %575
  %579 = getelementptr inbounds float, float* %533, i64 %576
  %580 = bitcast float* %579 to <4 x float>*
  %581 = load <4 x float>, <4 x float>* %580, align 4
  %582 = fdiv <4 x float> %581, %550
  %583 = bitcast float* %579 to <4 x float>*
  store <4 x float> %582, <4 x float>* %583, align 4
  br label %584

584:                                              ; preds = %575, %578
  %585 = icmp eq i64 %548, %545
  br i1 %585, label %595, label %586

586:                                              ; preds = %584, %544
  %587 = phi i64 [ 0, %544 ], [ %548, %584 ]
  br label %588

588:                                              ; preds = %586, %588
  %589 = phi i64 [ %593, %588 ], [ %587, %586 ]
  %590 = getelementptr inbounds float, float* %533, i64 %589
  %591 = load float, float* %590, align 4
  %592 = fdiv float %591, %542
  store float %592, float* %590, align 4
  %593 = add nuw nsw i64 %589, 1
  %594 = icmp eq i64 %593, %545
  br i1 %594, label %595, label %588, !llvm.loop !16

595:                                              ; preds = %588, %584, %541, %530, %515, %181, %90
  %596 = phi i32 [ 1, %90 ], [ %185, %181 ], [ 1, %515 ], [ 0, %530 ], [ 0, %541 ], [ 0, %584 ], [ 0, %588 ]
  ret i32 %596
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #2

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #2

declare void @TfLiteTensorRealloc(i64, %struct.TfLiteTensor*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.isvectorized", i32 1}
!6 = distinct !{!6, !7, !5}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !5}
!14 = distinct !{!14, !5}
!15 = distinct !{!15, !5}
!16 = distinct !{!16, !7, !5}
